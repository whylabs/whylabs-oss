dataset,text,source,label,uid
code,"
	INCLUDE	""hardware.inc""
	INCLUDE ""header.inc""

;--------------------------------------------------------------------------

	SECTION	""VAR"",BSS

int_repetition:	DS	1
	
	SECTION	""Main"",HOME

;--------------------------------------------------------------------------
;- Main()                                                                 -
;--------------------------------------------------------------------------

Main:

	; -------------------------------------------------------
	
	ld	a,$0A
	ld	[$0000],a ; enable ram
	
	ld	hl,$A000
	
	; -------------------------------------------------------

PERFORM_TEST_HALT : MACRO
	di
	
	push	hl
	
	xor	a,a
	ld	[int_repetition],a
	
	ld	bc,$0200
	ld	hl,\1
	ld	de,$D000
	call	memcopy
	
	ld	a,TACF_START|TACF_262KHZ
	ld	[rTAC],a
	
	xor	a,a
	ld	c,rDIV & $FF
	ld	hl,rTIMA
	ld	a,$F0
	ld	[rTMA],a
	ld	[$FF00+c],a
	ld	[hl],a
	ld	[$FF00+c],a
	ld	[hl],a

	ld	a,IEF_TIMER
	ld	[rIE],a
	
	xor	a,a
	ld	[rIF],a
	
	pop	hl
	
	ei

	halt
ENDM

PERFORM_TEST_NO_HALT : MACRO
	di
	
	push	hl
	
	xor	a,a
	ld	[int_repetition],a
	
	ld	bc,$0200
	ld	hl,\1
	ld	de,$D000
	call	memcopy
	
	ld	a,TACF_START|TACF_262KHZ
	ld	[rTAC],a
	
	xor	a,a
	ld	c,rDIV & $FF
	ld	hl,rTIMA
	ld	a,$F0
	ld	[rTMA],a
	ld	[$FF00+c],a
	ld	[hl],a
	ld	[$FF00+c],a
	ld	[hl],a

	ld	a,IEF_TIMER
	ld	[rIE],a
	
	xor	a,a
	ld	[rIF],a
	
	pop	hl
	
	ei

	REPT 50
	nop
	ENDR
ENDM

	ld	a,$80
	ld	[rNR52],a
	ld	a,$FF
	ld	[rNR51],a
	ld	a,$77
	ld	[rNR50],a
	
	ld	a,$C0
	ld	[rNR11],a
	ld	a,$E0
	ld	[rNR12],a
	ld	a,$00
	ld	[rNR13],a
	ld	a,$82
	ld	[rNR14],a

	PERFORM_TEST_HALT TIMER_INT_HANDLER_0
	PERFORM_TEST_HALT TIMER_INT_HANDLER_1
	PERFORM_TEST_HALT TIMER_INT_HANDLER_2
	PERFORM_TEST_HALT TIMER_INT_HANDLER_3
	PERFORM_TEST_HALT TIMER_INT_HANDLER_4
	PERFORM_TEST_HALT TIMER_INT_HANDLER_5
	PERFORM_TEST_HALT TIMER_INT_HANDLER_6
	PERFORM_TEST_HALT TIMER_INT_HANDLER_7
	PERFORM_TEST_HALT TIMER_INT_HANDLER_8
	PERFORM_TEST_HALT TIMER_INT_HANDLER_9
	PERFORM_TEST_HALT TIMER_INT_HANDLER_10
	PERFORM_TEST_HALT TIMER_INT_HANDLER_11
	PERFORM_TEST_HALT TIMER_INT_HANDLER_12
	PERFORM_TEST_HALT TIMER_INT_HANDLER_13
	PERFORM_TEST_HALT TIMER_INT_HANDLER_14
	PERFORM_TEST_HALT TIMER_INT_HANDLER_15
	PERFORM_TEST_HALT TIMER_INT_HANDLER_16
	PERFORM_TEST_HALT TIMER_INT_HANDLER_17
	PERFORM_TEST_HALT TIMER_INT_HANDLER_18
	PERFORM_TEST_HALT TIMER_INT_HANDLER_19
	PERFORM_TEST_HALT TIMER_INT_HANDLER_20
	PERFORM_TEST_HALT TIMER_INT_HANDLER_21
	PERFORM_TEST_HALT TIMER_INT_HANDLER_22
	PERFORM_TEST_HALT TIMER_INT_HANDLER_23
	PERFORM_TEST_HALT TIMER_INT_HANDLER_24
	PERFORM_TEST_HALT TIMER_INT_HANDLER_25
	PERFORM_TEST_HALT TIMER_INT_HANDLER_26
	PERFORM_TEST_HALT TIMER_INT_HANDLER_27
	PERFORM_TEST_HALT TIMER_INT_HANDLER_28
	PERFORM_TEST_HALT TIMER_INT_HANDLER_29
	PERFORM_TEST_HALT TIMER_INT_HANDLER_30
	PERFORM_TEST_HALT TIMER_INT_HANDLER_31
	
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_0
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_1
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_2
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_3
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_4
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_5
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_6
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_7
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_8
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_9
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_10
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_11
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_12
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_13
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_14
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_15
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_16
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_17
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_18
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_19
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_20
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_21
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_22
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_23
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_24
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_25
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_26
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_27
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_28
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_29
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_30
	PERFORM_TEST_NO_HALT TIMER_INT_HANDLER_31
	
	; -------------------------------------------------------
	
	ld	a,$80
	ld	[rNR52],a
	ld	a,$FF
	ld	[rNR51],a
	ld	a,$77
	ld	[rNR50],a
	
	ld	a,$C0
	ld	[rNR11],a
	ld	a,$E0
	ld	[rNR12],a
	ld	a,$00
	ld	[rNR13],a
	ld	a,$87
	ld	[rNR14],a
	
	push	hl
	ld	[hl],$12
	inc hl
	ld	[hl],$34
	inc hl
	ld	[hl],$56
	inc hl
	ld	[hl],$78
	pop	hl
	
	ld	a,$00
	ld	[$0000],a ; disable ram

.endloop:
	halt
	jr	.endloop

; --------------------------------------------------------------

	SECTION ""functions"",ROMX,BANK[1]
	
TIMER_INT_HANDLER_MACRO : MACRO
	ld	a,[int_repetition]
	cp	a,1
	jr	z,.is_1\@
	
	ld	a,1
	ld	[int_repetition],a
	
	push	de
	pop		de
	push	de
	pop		de ; delay
	
	
	ld	b,0
	
	ei
	
	REPT	\1
	inc	b
	ENDR
	
	di
	
	ret
	
.is_1\@:
	ld	a,b
	ld	[hl+],a
	ld	a,[rTIMA]
	ld	[hl+],a
	nop
	ld	a,[rTIMA]
	ld	[hl+],a
	nop
	ld	a,[rTIMA]
	ld	[hl+],a
	nop
	ld	a,[rTIMA]
	ld	[hl+],a
	nop

	ret
ENDM

TIMER_INT_HANDLER_0: TIMER_INT_HANDLER_MACRO 0
TIMER_INT_HANDLER_1: TIMER_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",B6NkUt
code,"; ( d1 -- d2 )
; R( -- )
VE_D2STAR:
    .db $03, ""d2*""
    .dw VE_HEAD
    .set VE_HEAD = VE_D2STAR
XT_D2STAR:
    .dw PFA_D2STAR
PFA_D2STAR:
    ld temp3, Y+
    ld temp2, Y+
    ld temp1, Y+
    ld temp0, Y+

    lsl temp0
    rol temp1
    rol temp2
    rol temp3

    st -Y, temp0
    st -Y, temp1
    st -Y, temp2
    st -Y, temp3

    rjmp DO_NEXT
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P3jgyz
code,";/****************************************************************************
; *
; *  XVID MPEG-4 VIDEO CODEC
; *  - SSE2 forward discrete cosine transform -
; *
; *  Copyright(C) 2003 Pascal Massimino <skal@planet-d.net>
; *
; *  This program is free software; you can redistribute it and/or modify it
; *  under the terms of the GNU General Public License as published by
; *  the Free Software Foundation; either version 2 of the License, or
; *  (at your option) any later version.
; *
; *  This program is distributed in the hope that it will be useful,
; *  but WITHOUT ANY WARRANTY; without even the implied warranty of
; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; *  GNU General Public License for more details.
; *
; *  You should have received a copy of the GNU General Public License
; *  along with this program; if not, write to the Free Software
; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
; *
; * $Id$
; *
; ***************************************************************************/

BITS 32

%macro cglobal 1
  %ifdef PREFIX
    global _%1
    %define %1 _%1
  %else
    global %1
  %endif
%endmacro

;-----------------------------------------------------------------------------
;
;                          -=FDCT=-
;
; Vertical pass is an implementation of the scheme:
;  Loeffler C., Ligtenberg A., and Moschytz C.S.:
;  Practical Fast 1D DCT Algorithm with Eleven Multiplications,
;  Proc. ICASSP 1989, 988-991.
;
; Horizontal pass is a double 4x4 vector/matrix multiplication,
; (see also Intel's Application Note 922:
;  http://developer.intel.com/vtune/cbts/strmsimd/922down.htm
;  Copyright (C) 1999 Intel Corporation)
;  
; Notes:
;  * tan(3pi/16) is greater than 0.5, and would use the
;    sign bit when turned into 16b fixed-point precision. So,
;    we use the trick: x*tan3 = x*(tan3-1)+x
; 
;  * There's only one SSE-specific instruction (pshufw).
;
;  * There's still 1 or 2 ticks to save in fLLM_PASS, but
;    I prefer having a readable code, instead of a tightly
;    scheduled one...
;
;  * Quantization stage (as well as pre-transposition for the
;    idct way back) can be included in the fTab* constants
;    (with induced loss of precision, somehow)
;
;  * Some more details at: http://skal.planet-d.net/coding/dct.html
;
;
;//////////////////////////////////////////////////////////////////////
;
;  == Mean square errors ==
;   0.000 0.001 0.001 0.002 0.000 0.002 0.001 0.000    [0.001]
;   0.035 0.029 0.032 0.032 0.031 0.032 0.034 0.035    [0.032]
;   0.026 0.028 0.027 0.027 0.025 0.028 0.028 0.025    [0.027]
;   0.037 0.032 0.031 0.030 0.028 0.029 0.026 0.031    [0.030]
;   0.000 0.001 0.001 0.002 0.000 0.002 0.001 0.001    [0.001]
;   0.025 0.024 0.022 0.022 0.022 0.022 0.023 0.023    [0.023]
;   0.026 0.028 0.025 0.028 0.030 0.025 0.026 0.027    [0.027]
;   0.021 0.020 0.020 0.022 0.020 0.022 0.017 0.019    [0.020]
;  
;  == Abs Mean errors ==
;   0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000    [0.000]
;   0.020 0.001 0.003 0.003 0.000 0.004 0.002 0.003    [0.002]
;   0.000 0.001 0.001 0.001 0.001 0.004 0.000 0.000    [0.000]
;   0.027 0.001 0.000 0.002 0.002 0.002 0.001 0.000    [0.003]
;   0.000 0.000 0.000 0.000 0.000 0.001 0.000 0.001    [-0.000]
;   0.001 0.003 0.001 0.001 0.002 0.001 0.000 0.000    [-0.000]
;   0.000 0.002 0.002 0.001 0.001 0.002 0.001 0.000    [-0.000]
;   0.000 0.002 0.001 0.002 0.001 0.002 0.001 0.001    [-0.000]
;
;  =========================
;  Peak error:   1.0000
;  Peak MSE:     0.0365
;  Overall MSE:  0.0201
;  Peak ME:      0.0265
;  Overall ME:   0.0006
;
;-----------------------------------------------------------------------------
;
;                          -=IDCT=-
;
; A little slower than fdct, because the final stages (butterflies and
; descaling) require some unpairable shifting and packing, all on
; the same CPU unit.
;
;   THIS IDCT IS NOT IEEE-COMPLIANT: IT WILL FAIL THE [-300,300]
;   INPUT RANGE TEST (because of overflow). But the [-256,255] one
;   is OK, and I'm fine with it (for now;)
;
;  == Mean square errors ==
;   0.007 0.006 0.005 0.007 0.006 0.007 0.005 0.007    [0.006]
;   0.006 0.008 0.007 0.007 0.007 0.008 0.008 0.008    [0.007]
;   0.008 0.008 0.008 0.008 0.007 0.009 0.010 0.007    [0.008]
;   0.007 0.007 0.006 0.007 0.008 0.007 0.006 0.008    [0.007]
;   0.007 0.006 0.006 0.006 0.006 0.005 0.006 0.006    [0.006]
;   0.008 0.007 0.006 0.008 0.007 0.008 0.009 0.009    [0.008]
;   0.008 0.006 0.010 0.008 0.008 0.008 0.007 0.007    [0.008]
;   0.007 0.006 0.006 0.007 0.007 0.006 0.006 0.007    [0.006]
;  
;  == Abs Mean errors ==
;   0.001 0.000 0.000 0.001 0.001 0.000 0.000 0.000    [0.000]
;   0.000 0.002 0.002 0.000 0.001 0.001 0.000 0.002    [0.000]
;   0.001 0.002 0.001 0.001 0.001 0.001 0.000 0.001    [-0.001]
;   0.000 0.002 0.000 0.000 0.001 0.000 0.000 0.001    [-0.000]
;   0.000 0.001 0.001 0.001 0.000 0.001 0.000 0.001    [0.000]
;   0.000 0.001 0.001 0.001 0.001 0.000 0.001 0.000    [0.000]
;   0.001 0.001 0.002 0.001 0.001 0.002 0.001 0.001    [0.001]
;   0.000 0.000 0.001 0.000 0.000 0.0",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RMQt0L
code,".size 8000

.code@48
	jp l1000

.code@100
	jp l150

.data@143
	c0 

.code@150
l150:
	ld a, 00
	ldff(ff), a
	ld a, 30
	ldff(00), a
	ld a, 01
	ldff(4d), a
	stop, 00
	xor a, a
	dec a
	ldff(45), a
	ld c, 44
	ld b, 91
l166:
	ldff a, (c)
	cmp a, b
	jpnz l166
	ld hl, fe00
	ld d, 10
	ld a, d
	ld(hl++), a
	ld a, 08
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld(hl++), a
	inc l
	inc l
	ld(hl++), a
	ld a, 18
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 20
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 28
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 30
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 38
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 40
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 48
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 50
	ld(hl++), a
	ld a, 40
	ldff(41), a
	ld a, 02
	ldff(ff), a
	xor a, a
	ldff(0f), a
	ei
	ld a, 01
	ldff(45), a
	ld c, 41
	ld b, 03
	ld a, b3
	ldff(40), a
	ld a, 05
	ldff(4b), a

.code@1000
l1000:
	nop

.code@10a3
	ldff a, (c)
	and a, b
	ld(ff80), a
	jp l7000

.code@2000
l2000:
	nop

.code@6ffd
	jp l2000
l7000:
	ld c, 44
	ld b, 91
l7004:
	ldff a, (c)
	cmp a, b
	jpnz l7004
	xor a, a
	ldff(40), a
	ld bc, 7a00
	ld hl, 8000
	ld d, a0
l7014:
	ld a, (bc)
	inc bc
	ld(hl++), a
	dec d
	jpnz l7014
	ld a, c0
	ldff(47), a
	ld a, 80
	ldff(68), a
	ld a, ff
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ld a, 00
	ldff(69), a
	ldff(69), a
	ld a, (ff80)
	ld(9800), a
	xor a, a
	ldff(43), a
	ld a, 91
	ldff(40), a
	jp l2000

.data@7a02
	7f 7f 41 41 41 41 41 41 
	41 41 41 41 7f 7f 00 00 
	08 08 08 08 08 08 08 08 
	08 08 08 08 08 08 00 00 
	7f 7f 01 01 01 01 7f 7f 
	40 40 40 40 7f 7f 00 00 
	7f 7f 01 01 01 01 3f 3f 
	01 01 01 01 7f 7f 00 00 
	41 41 41 41 41 41 7f 7f 
	01 01 01 01 01 01 00 00 
	7f 7f 40 40 40 40 7e 7e 
	01 01 01 01 7e 7e 00 00 
	7f 7f 40 40 40 40 7f 7f 
	41 41 41 41 7f 7f 00 00 
	7f 7f 01 01 02 02 04 04 
	08 08 10 10 10 10 00 00 
	3e 3e 41 41 41 41 3e 3e 
	41 41 41 41 3e 3e 00 00 
	7f 7f 41 41 41 41 7f 7f 
	01 01 01 01 7f 7f 

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8DZ8sN
code,"
;; xOS Kernel API Reference
;; As of API version 1

	XOS_WM_CREATE_WINDOW	= 0x0000
	XOS_YIELD		= 0x0001
	XOS_WM_PIXEL_OFFSET	= 0x0002
	XOS_WM_REDRAW		= 0x0003
	XOS_WM_READ_EVENT	= 0x0004
	XOS_WM_READ_MOUSE	= 0x0005
	XOS_WM_GET_WINDOW	= 0x0006
	XOS_WM_DRAW_TEXT	= 0x0007
	XOS_WM_CLEAR		= 0x0008

	XOS_MALLOC		= 0x0009
	XOS_FREE		= 0x000A

	XOS_OPEN		= 0x000B
	XOS_CLOSE		= 0x000C
	XOS_SEEK		= 0x000D
	XOS_TELL		= 0x000E
	XOS_READ		= 0x000F
	XOS_WRITE		= 0x0010

	XOS_WM_RENDER_CHAR	= 0x0011
	XOS_WM_KILL		= 0x0012

	XOS_GET_SCREEN_INFO	= 0x0013

	XOS_READ_KEY		= 0x0014

	XOS_TERMINATE		= 0x0015
	XOS_CREATE_TASK		= 0x0016

	XOS_GET_TIME		= 0x0017

	XOS_SHUTDOWN		= 0x0018
	XOS_REBOOT		= 0x0019

	XOS_GET_MEMORY_USAGE	= 0x001A
	XOS_ENUM_TASKS		= 0x001B
	XOS_GET_UPTIME		= 0x001C

	XOS_NET_GET_CONNECTION	= 0x001D
	XOS_NET_SEND		= 0x001E
	XOS_NET_RECEIVE		= 0x001F
	XOS_HTTP_HEAD		= 0x0020
	XOS_HTTP_GET		= 0x0021
	XOS_SOCKET_OPEN		= 0x0022
	XOS_SOCKET_CLOSE	= 0x0023
	XOS_SOCKET_READ		= 0x0024
	XOS_SOCKET_WRITE	= 0x0025

	XOS_REALLOC		= 0x0026

	XOS_KPRINT		= 0x0027
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Fys5CE
code,"; Game code
; Linux 32 bit

;-----------------------------------
;   int nameEasterEgg()
;-----------------------------------
;nameEasterEgg:
    ;mov eax, name
    ;mov ebx, egg_name
    ;call strcmp
    
    ;ret",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ztkDbc
code,"; name : dllmain.asm

; description :	main assembly file for the Dynamic Link Library

; remark : It's a strange case/switch structure I've constructed here but doing so
;			I can put eventually long routines for each case in the code.
;			Another approach is to use subroutines but I believe it will make the
;			dll loader more complex.
;			Also notice that you can set the error code if a requirement fails.
;			This error code must be in rax before the ret instruction at the end.
;			In case you don't use a special routines for each case, you can also comment
;			the decision making component and just end with mov rax, 1 followed by a ret
; more info :	about DLL https://social.msdn.microsoft.com/Search/en-US?query=dll&pgArea=header&emptyWatermark=true&ac=4
;				about GetLastError : https://msdn.microsoft.com/en-us/library/windows/desktop/ms679360(v=vs.85).aspx
;				about SetLastError : https://msdn.microsoft.com/en-us/library/windows/desktop/ms680627(v=vs.85).aspx

; You can safely remove TestFunction.asm and TestFunction.inc. If you do also remove the 'extrn TestFunction : proc' in dllfunctions.inc
; each added routine must be defined as extrn in dllfunctions.inc if you like to use the libary in other applications without defining the
; published functions yourself in the future.

option casemap :none	; case sensitive

include dllmain.inc		; constants used in dllmain routine (if any)

USE_SWITCH_CASE_BLOCK = 1				; replace 0 by 1 to let the assembler know to use the attach/detach procedures

%if USE_SWITCH_CASE_BLOCK eq 1

	.data
	
	; in stead of creating a switch case structure we can easily calculate the address of each attach/detach procedure. We do this only when we
	; make use of the procedures, otherwise it's waste of space.
	; DON'T ALTER the order of appearance of the addresses. They are placed in numerical ascending order of
	;	DLL_PROCESS_DETACH                   equ 0
	;	DLL_PROCESS_ATTACH                   equ 1
	;	DLL_THREAD_ATTACH                    equ 2
	;	DLL_THREAD_DETACH                    equ 3
	
		dllProcedures		dq	ProcessDetachProc, ProcessAttachProc, ThreadAttachProc, ThreadDetachProc

	.code

		dllmain proc hInstDLL: qword, reason: qword, reserved1: qword
			mov		hInstDLL, rcx		; save procedure values
			mov		reason, rdx
			mov		reserved1, r8
			shl		rdx, 3				; multiply by 8 to calculate the right address
			lea		rax, dllProcedures	; load effective address of start of procedures
			add		rax, rdx			; add offset
			call	qword ptr[rax]		; jump to respective routine
			ret							; when all is ok we have rax = 1, otherwise rax = 0
		dllmain endp

		; the individual attach/detach procedures
		; if succesfull we return with rax = 1
		ProcessAttachProc	proc
			xor		rax, rax
			inc		rax
			ret
		ProcessAttachProc	endp

		ProcessDetachProc	proc
			xor		rax, rax
			inc		rax
			ret
		ProcessDetachProc	endp

		ThreadAttachProc	proc
			xor		rax, rax
			inc		rax
			ret
		ThreadAttachProc	endp

		ThreadDetachProc	proc
			xor		rax, rax
			inc		rax
			ret
		ThreadDetachProc	endp

%else

	.code
		; if we don't have specific code to run, we can return with rax = 1
		dllmain proc hInstDLL: qword, reason: qword, reserved1: qword
			xor		rax, rax
			inc		rax
			ret
		dllmain endp
			
%endif

end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EsaPr1
code,"﻿.include ""defaults_mod.asm""

table_file_jp		equ	""exe5-utf8.tbl""
table_file_en		equ	""bn5-utf8.tbl""
game_code_len		equ	3
game_code		equ	0x4252424A	// BRBJ
game_code_2		equ	0x42524245	// BRBE
game_code_3		equ	0x42524250	// BRBP
card_type		equ	1
card_id			equ	85
card_no			equ	""085""
card_sub		equ	""Mod Card 085""
card_sub_x		equ	64
card_desc_len		equ	2
card_desc_1		equ	""MagicMan""
card_desc_2		equ	""44MB""
card_desc_3		equ	""""
card_name_jp_full	equ	""マジックマン""
card_name_jp_game	equ	""マジックマン""
card_name_en_full	equ	""MagicMan""
card_name_en_game	equ	""MagicMan""

card_address		equ	""""
card_address_id		equ	0
card_bug		equ	0
card_wrote_en		equ	""""
card_wrote_jp		equ	""""",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fUxPMP
code,"DIM EQU 15
.MODEL small
.STACK
.data
.CODE 
.STARTUP
MOV AX, DIM
.EXIT
END",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rbDnWz
code,";-----------------------------------------------------------------------
;Copyright (c) 1993 ADVANCED MICRO DEVICES, INC. All Rights Reserved.
;This software is unpblished and contains the trade secrets and 
;confidential proprietary information of AMD. Unless otherwise provided
;in the Software Agreement associated herewith, it is licensed in confidence
;""AS IS"" and is not to be reproduced in whole or part by any means except
;for backup. Use, duplication, or disclosure by the Government is subject
;to the restrictions in paragraph (b) (3) (B) of the Rights in Technical
;Data and Computer Software clause in DFAR 52.227-7013 (a) (Oct 1988).
;Software owned by Advanced Micro Devices, Inc., 901 Thompson Place,
;Sunnyvale, CA 94088.
;-----------------------------------------------------------------------
;  Copyright 1988-1992 Russell Nelson
;
; put into the public domain by Russell Nelson, nelson@crynwr.com
;-----------------------------------------------------------------------

PUBLIC	get_digit
;
;----------------------------------------
;enter with al = character
;return nc, al=digit, or cy if not a digit.
;----------------------------------------
;
get_digit:				;
	cmp	al,'0'			; check AL with char 0
	jb	get_digit_1		; jump, if AL less than char 0
	cmp	al,'9'			; check AL with char 9
	ja	get_digit_2		; jump, if AL greater than char 9
	sub	al,'0'			; AL = converted to binary
	clc				; clear carry flag
	ret				; return to caller
get_digit_2:
	cmp	al,'a'			; check AL with char a
	jb	get_digit_3		; jump, if AL less than char a
	cmp	al,'f'			; check AL with char f
	ja	get_digit_3		; jump, if AL greater than char f
	sub	al,'a'-10		; AL = converted to binary
	clc				; clear carry flag
	ret				; return to caller
get_digit_3:
	cmp	al,'A'			; check AL with char A
	jb	get_digit_1		; jump, if AL less than char A
	cmp	al,'F'			; check AL with char F
	ja	get_digit_1		; jump, if AL greater than char F
	sub	al,'A'-10		; AL = converted to binary
	clc				; clear carry flagclear carry flag
	ret				; return to callerreturn to caller
get_digit_1:				; error case, not a digit
	stc				; set carry flag
	ret				; return to caller



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lsiC7U
code,";
;	Sharp OZ family functions
;
;	ported from the OZ-7xx SDK by by Alexander R. Pruss
;	by Stefano Bodrato - Oct. 2003
;
;
;	void ozkeyboardoff()
;
; ------
; $Id: ozkbdoff.asm,v 1.2 2015/01/19 01:33:02 pauloscustodio Exp $
;


	PUBLIC	ozkbdoff


ozkbdoff:
        in      a,(7)
        or      1
        out     (7),a
        ret
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EcOn4P
code,".size 8000

.text@48
	jp lstatint

.text@100
	jp lbegin

.data@143
	c0

.text@150
lbegin:
	ld a, 01
	ldff(43), a
	ld b, 42
	call lwaitly_b
	ld a, 40
	ldff(41), a
	ld a, 02
	ldff(ff), a
	xor a, a
	ldff(0f), a
	ei
	ld a, 44
	ldff(45), a

.text@1000
lstatint:
	ld a, 30
	ldff(00), a
	xor a, a
	ldff(ff), a
	inc a
	ldff(4d), a
	stop, 00
	ldff(4d), a
	stop, 00
	ldff(4d), a
	stop, 00
	ldff(4d), a
	stop, 00
	ldff(4d), a
	nop
	stop, 00

.text@14af
	ldff a, (41)
	jp lprint_a

.text@7000
lprint_a:
	push af
	ld b, 91
	call lwaitly_b
	xor a, a
	ldff(40), a
	ld bc, 7a00
	ld hl, 8000
	ld d, 00
lprint_copytiles:
	ld a, (bc)
	inc bc
	ld(hl++), a
	dec d
	jrnz lprint_copytiles
	pop af
	ld b, a
	swap a
	and a, 0f
	ld(9800), a
	ld a, b
	and a, 0f
	ld(9801), a
	ld a, c0
	ldff(47), a
	ld a, 80
	ldff(68), a
	ld a, ff
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	xor a, a
	ldff(69), a
	ldff(69), a
	ldff(43), a
	ld a, 91
	ldff(40), a
lprint_limbo:
	jr lprint_limbo

.text@7400
lwaitly_b:
	ld c, 44
lwaitly_b_loop:
	ldff a, (c)
	cmp a, b
	jrnz lwaitly_b_loop
	ret

.data@7a00
	00 00 7f 7f 41 41 41 41
	41 41 41 41 41 41 7f 7f
	00 00 08 08 08 08 08 08
	08 08 08 08 08 08 08 08
	00 00 7f 7f 01 01 01 01
	7f 7f 40 40 40 40 7f 7f
	00 00 7f 7f 01 01 01 01
	3f 3f 01 01 01 01 7f 7f
	00 00 41 41 41 41 41 41
	7f 7f 01 01 01 01 01 01
	00 00 7f 7f 40 40 40 40
	7e 7e 01 01 01 01 7e 7e
	00 00 7f 7f 40 40 40 40
	7f 7f 41 41 41 41 7f 7f
	00 00 7f 7f 01 01 02 02
	04 04 08 08 10 10 10 10
	00 00 3e 3e 41 41 41 41
	3e 3e 41 41 41 41 3e 3e
	00 00 7f 7f 41 41 41 41
	7f 7f 01 01 01 01 7f 7f
	00 00 08 08 22 22 41 41
	7f 7f 41 41 41 41 41 41
	00 00 7e 7e 41 41 41 41
	7e 7e 41 41 41 41 7e 7e
	00 00 3e 3e 41 41 40 40
	40 40 40 40 41 41 3e 3e
	00 00 7e 7e 41 41 41 41
	41 41 41 41 41 41 7e 7e
	00 00 7f 7f 40 40 40 40
	7f 7f 40 40 40 40 7f 7f
	00 00 7f 7f 40 40 40 40
	7f 7f 40 40 40 40 40 40

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CNGLvW
code,"//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
    vs_3_0
    def c0, 0, 0, 0, 0
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord6 o6
    dcl_texcoord5 o7
    dcl_color o8
    mov o0, c0.x
    mov o1, c0.x
    mov o2, c0.x
    mov o3, c0.x
    mov o4, c0.x
    mov o5, c0.x
    mov o6, c0.x
    mov o7, c0.x
    mov o8, c0.x

// approximately 9 instruction slots used
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9bIR43
code,"; Declare constants for the multiboot header.
MBALIGN  equ  1<<0              ; align loaded modules on page boundaries
MEMINFO  equ  1<<1              ; provide memory map
GFXINFO  equ  1<<2
FLAGS    equ  MBALIGN | MEMINFO ; this is the Multiboot 'flag' field
MAGIC    equ  0x1BADB002        ; 'magic number' lets bootloader find the header
CHECKSUM equ -(MAGIC + FLAGS)   ; checksum of above, to prove we are multiboot

; Declare a multiboot header that marks the program as a kernel. These are magic
; values that are documented in the multiboot standard. The bootloader will
; search for this signature in the first 8 KiB of the kernel file, aligned at a
; 32-bit boundary. The signature is in its own section so the header can be
; forced to be within the first 8 KiB of the kernel file.
section .multiboot_header
align 4
        dd MAGIC
        dd FLAGS
        dd CHECKSUM
        dd 0
        dd 0
        dd 0
        dd 0
        dd 0 ; addr fields
        dd 0 ; width
        dd 0 ; height
        dd 0 ; graphics mode
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wsbjY2
code,".size 8000

.text@48
	jp lstatint

.text@100
	jp lbegin

.data@143
	80

.text@150
lbegin:
	ld a, 03
	ldff(43), a
	ld c, 41
	ld b, 03
lbegin_waitm3:
	ldff a, (c)
	and a, b
	cmp a, b
	jrnz lbegin_waitm3
	ld a, 20
	ldff(c), a
	xor a, a
	ldff(0f), a
	ld a, 02
	ldff(ff), a
	ei

.text@1000
lstatint:
	ldff a, (c)
	and a, 08
	retnz
	ld a, 08
	ldff(c), a
	ei

.text@1034
	halt

.text@1065
	ldff a, (c)
	and a, 07
	jp lprint_a

.text@7000
lprint_a:
	push af
	ld b, 91
	call lwaitly_b
	xor a, a
	ldff(40), a
	pop af
	ld(9800), a
	ld bc, 7a00
	ld hl, 8000
	ld d, a0
lprint_copytiles:
	ld a, (bc)
	inc bc
	ld(hl++), a
	dec d
	jrnz lprint_copytiles
	ld a, c0
	ldff(47), a
	ld a, 80
	ldff(68), a
	ld a, ff
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	xor a, a
	ldff(69), a
	ldff(69), a
	ldff(43), a
	ld a, 91
	ldff(40), a
lprint_limbo:
	jr lprint_limbo

.text@7400
lwaitly_b:
	ld c, 44
lwaitly_b_loop:
	ldff a, (c)
	cmp a, b
	jrnz lwaitly_b_loop
	ret

.data@7a00
	00 00 7f 7f 41 41 41 41
	41 41 41 41 41 41 7f 7f
	00 00 08 08 08 08 08 08
	08 08 08 08 08 08 08 08
	00 00 7f 7f 01 01 01 01
	7f 7f 40 40 40 40 7f 7f
	00 00 7f 7f 01 01 01 01
	3f 3f 01 01 01 01 7f 7f
	00 00 41 41 41 41 41 41
	7f 7f 01 01 01 01 01 01
	00 00 7f 7f 40 40 40 40
	7e 7e 01 01 01 01 7e 7e
	00 00 7f 7f 40 40 40 40
	7f 7f 41 41 41 41 7f 7f
	00 00 7f 7f 01 01 02 02
	04 04 08 08 10 10 10 10
	00 00 3e 3e 41 41 41 41
	3e 3e 41 41 41 41 3e 3e
	00 00 7f 7f 41 41 41 41
	7f 7f 01 01 01 01 7f 7f

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W4Cmt0
code,";;; Segment .plt (00008304)
00008304             04 E0 2D E5 10 E0 9F E5 0E E0 8F E0     ..-.........
00008310 08 F0 BE E5 04 C0 9F E5 0C C0 8F E0 00 F0 9C E5 ................
00008320 34 85 00 00 04 C0 9F E5 0C C0 8F E0 00 F0 9C E5 4...............
00008330 28 85 00 00                                     (...           
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NqgSNR
code,";
;   Copyright (C) 2017, 2018 Marek Marecki <marekjm@ozro.pw>
;
;   This file is part of Viua VM.
;
;   Viua VM is free software: you can redistribute it and/or modify
;   it under the terms of the GNU General Public License as published by
;   the Free Software Foundation, either version 3 of the License, or
;   (at your option) any later version.
;
;   Viua VM is distributed in the hope that it will be useful,
;   but WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;   GNU General Public License for more details.
;
;   You should have received a copy of the GNU General Public License
;   along with Viua VM.  If not, see <http://www.gnu.org/licenses/>.
;

.function: main/0
    allocate_registers %4 local

    bits (.name: %iota lhs) local 0b01111111
    bits (.name: %iota rhs) local 0b10000000

    wrapdiv (.name: %iota result) local %lhs local %rhs local

    print %lhs local
    print %rhs local
    print %result local

    izero %0 local
    return
.end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eLbNbt
code,";
;   Copyright (C) 2007 Jeff Owens
;
;   This program is free software: you can redistribute it and/or modify
;   it under the terms of the GNU General Public License as published by
;   the Free Software Foundation, either version 3 of the License, or
;   (at your option) any later version.
;
;   This program is distributed in the hope that it will be useful,
;   but WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;   GNU General Public License for more details.
;
;   You should have received a copy of the GNU General Public License
;   along with this program.  If not, see <http://www.gnu.org/licenses/>.


  [section .text align=1]
;-------------------------------------------------------------
;>1 utility
; key_echo - display codes for keys
; inputs:
;   All keys on keyboard result in a display except
;   for the ""q"" key which exits the program.
; ouptut:
;   the hex codes returned by a key press are displayed
;   along with the name of key.
; purpose:
;   key_echo is useful for programmers to determine how
;   keys function.
; notes:
;   source file: key_echo.asm
;<
; This program reads a keystroke and uses table to decode it

  extern terminfo_read
  extern terminfo_str_index
  extern env_stack
  extern terminfo_strings
  extern str_compare
  extern word_to_ascii

 [section .text]

global	_start
global main
global exit

_start:
main:
	call	env_stack
	mov	eax,work_buf
	call	terminfo_read

        nop
        nop
        nop
jeff:	mov	ecx,msg
	call	strout
blp1:
	call	mouse_enable

	call	read_stdin

	mov	ecx,eol
	call	strout
	call	display_key_string
	call	decode_key			;ecx = index or err(0)
	jecxz	skip1				;jmp if not in table
	call	display_key_name
skip1:	call	display_terminfo_index	
	cmp	byte [kbuf],'q'
	jne	blp1			;loop till 'q' pressed
exit:
	mov	eax,1
	mov	ebx,0			;normal exit
	int	0x80			;exit

;--------------------------------------------------------------
display_terminfo_index:
	xor	ecx,ecx		;start index counter
        mov	esi,[terminfo_str_index]
dti_lp:
	xor	eax,eax
	lodsw			;get index
	or	ax,ax
	js	dti_next
	add	eax,[terminfo_strings]
	push	esi	
	mov	esi,eax		;get string ptr

	mov	edi,kbuf	;get ptr to key
	call	str_compare
	pop	esi
	je	got_match
dti_next:
	inc	ecx
	cmp	esi,[terminfo_strings]	;end of table?
	jb	dti_lp		;loop
;no match was found, show results
        mov	ecx,no_match
	call	strout
	jmp	short dti_exit
got_match:
	mov	[stuff],dword '    '	;clear build area
	mov	eax,ecx
	mov	edi,stuff
	call	word_to_ascii
	mov	ecx,terminfo_msg
	call	strout
dti_exit:
	ret
;--------
  [section .data]
no_match: db 'no entry in terminfo database for this key',0ah,0
terminfo_msg:
	 db 'Terminfo database index# '
stuff:	db	'    was found for this key',0ah,0

  [section .text]
;--------------------------------------------------------------
;
display_key_string:			
	mov	ecx,9				; 8 bytes
	mov	esi,bufx			;storage for ascii
	mov	edi,kbuf			;get ptr to char
lp1:
	mov	al,byte [edi]			;get char
	cmp	al,0
	je	done1				;jmp if end of char
	call	BYTE_TO_HEX_STR
	inc	edi
	dec	ecx
	jnz	lp1

done1:	mov	byte [esi],0ah
	sub	esi,bufx-3
	mov	edx,esi				;amount of data to display
	
	mov	eax,4				;sys_write
	mov	ebx,1
	mov	ecx,prefix
	int	0x80
	ret
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -( CONVERT )
;BYTE_TO_HEX_STR - convert hex byte to two ascii characters
;
; inputs:    al = hex byte
;          esi = storage buffer for ascii
;         
; output:   esi = points past last store (bumped by 2)
;* * * * * * * * * * * * * *

BYTE_TO_HEX_STR:
	push	eax
	mov	ah,al		;save for later
	shr	al,1
	shr	al,1
	shr	al,1
	shr	al,1
	call	btha		;convert one nibble
	xchg	ah,al
	call	btha
	pop	eax
	ret
;-----------------------
btha:	and	al,0fh
	add	al,90h		;convert
	daa			;  -al- bits 0-3
	adc	al,40h		;     to hex
	daa			;        ascii
;	cmp	cs:crt_direct,0
;	je	btha_stuff
;	int	29h
;	ret
btha_stuff:	
	mov	byte [esi],al
	inc	esi
	ret	
;********************************** decode logic ********************
; lookup_key - scan key strings looking for match
;   ecx - index if found, 0 if not found
;
lookup_key:
	mov	esi,keystring_tbl
	xor	ecx,ecx
k1:	mov	edi,kbuf
	mov	al,byte [edi]		;get kbuf entry
	cmp	al,byte [esi]		;compare to keystring
	je	k4			;initial char. match
k2:	inc	esi
k3:	cmp	byte [esi],0		;end of tbl entry
	jne	k2			;loop if not end of tbl str
k3a:	inc	esi
	inc	ecx
	cmp	byte [esi],0		;check if end of table
	jne	k1			;jmp if more strings
	xor	ecx,ecx			;flag no match
	jmp	k6
;
; we have a match
;
k4:	inc	esi
	inc	edi
	mov	al,byte [edi]		;get next kbuf entry
	cmp	byte [esi],al		;match?
	jne	k3			;jmp if no match
	cmp	al,0			;end of kbuf string
	je	k5			;jmp if match at zero in both
	cmp	byte [esi],0		;end of table string
	jne	k4			;keep comparing if more data
;
; are we at end of this string

	jmp	k3a		
k5:	inc	ecx			;point ecx at match
k6:	ret
;---------------------
; decode_key - look up processing for this key
;  input - kbuf - has char zero terminated
;  output - ecx = ptr to processing or zero if no match
;           eax,ebx modified
decode_key:",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9VO1dz
code,"; $Id: lxrmcall.asm,v 1.14 2005/03/06 02:18:29 smilcke Exp $

;
; lxrmcall.asm
; Autor:				Stefan Milcke
; Erstellt	am:			29.03.2003
; Letzte Aenderung	am:	15.07.2004
;
		.386p
		include defcfg.inc
		INCL_DOS		equ	1
		INCL_DOSERRORS	equ	1
		include	os2.inc
		include	seg32.inc
		include	r0thunk.inc
		include	rp.inc
		include	rm.inc
		include	devhlp32.inc
		include	infoseg.inc
		include	lxbases.inc
		include	lxbasem.inc

;##############################################################################
;*	Resource Manager
;##############################################################################
TEXT32 SEGMENT
ASSUME	CS:FLAT, DS:FLAT, ES:FLAT
		extrn	LXA_FixSelDPL		: NEAR
		extrn	LXA_RestoreSelDPL	: NEAR
TEXT32	ends

DATA16	segment
		extrn DevHelpFnPtr : dword
DATA16	ends

DATA16	segment
		public	RM_Help0
		public	RM_Help1
		public	RM_Help3
		public	RMFlags
		public	RMIDCTable
		public	RMNAME
		public	rm_hDriver
		public	rm_hAdapter
		public	rm_hDevice
		public	rm_hResource
		public	rm_tmpStr1
		public	rm_tmpStr2
		public	rm_tmpStr3
		public	rm_DriverStruct
		public	rm_AdapterStruct
		public	rm_DeviceStruct
RM_Help0		DWORD 0
RM_Help1		DWORD 0
RM_Help3		DWORD 0
RMFlags		DWORD 0
RMIDCTable	BYTE[12] dup (0)
RMNAME		BYTE ""RESMGR$ "",0
rm_hDriver		dword	0
rm_hAdapter	dword	0
rm_hDevice		dword	0
rm_hResource	dword	0
rm_ModifyAction dword	0
rm_tmpStr1		BYTE[255] dup (0)
rm_ResourceList label byte
rm_tmpStr2		BYTE[255] dup (0)
rm_tmpStr3		BYTE[255] dup (0)
rm_DriverStruct RM_DRIVERSTRUCT <DATA16:rm_tmpStr1,DATA16:rm_tmpStr2,DATA16:rm_tmpStr3>
rm_AdapterStruct RM_ADAPTERSTRUCT <DATA16:rm_tmpStr1>
rm_DeviceStruct RM_DEVICESTRUCT <DATA16:rm_tmpStr1>
;rm_DriverStruct RM_DRIVERSTRUCT <>
;rm_AdapterStruct RM_ADAPTERSTRUCT	<>
;rm_DeviceStruct RM_DEVICESTRUCT <>
rm_ResourceStruct DWORD 0		; Resource type
				BYTE	12 DUP (0)
				DWORD	0		; Reserved
rm_AdjunctBuffer BYTE 1024	DUP	(0)
DATA16	ends

DATA32 SEGMENT
		public	_rm32_hDriver
		public	_rm32_hAdapter
		public	_rm32_hDevice
		public	_rm32_hResource
		public	_rm32_ModifyAction
		public	_rm32_DriverStruct
		public	_rm32_AdapterStruct
		public	_rm32_DeviceStruct
		public	_rm32_ResourceStruct
		public	_rm32_AdjunctBuffer
		public	_rm32_ResourceList
		public	_rm32_tmpStr1
		public	_rm32_tmpStr2
		public	_rm32_tmpStr3
		extrn  tempeax			: dword
		extrn  tempedx			: dword
		extrn  tempesi			: dword
		extrn  cpuflags			: dword
		extrn  fInitStack		: dword
		extrn  intSwitchStack	: dword
		extrn  SMP_Lock			: dword
_rm32_hDriver	dw OFFSET DATA16:rm_hDriver
				dw SEG DATA16:rm_hDriver
_rm32_hAdapter	dw OFFSET DATA16:rm_hAdapter
				dw SEG DATA16:rm_hAdapter
_rm32_hDevice	dw OFFSET DATA16:rm_hDevice
				dw SEG DATA16:rm_hDevice
_rm32_hResource dw	OFFSET DATA16:rm_hResource
				dw SEG DATA16:rm_hResource
_rm32_ModifyAction	dw OFFSET DATA16:rm_ModifyAction
				dw SEG DATA16:rm_ModifyAction
_rm32_DriverStruct	dw OFFSET DATA16:rm_DriverStruct
				dw SEG DATA16:rm_DriverStruct
_rm32_AdapterStruct dw	OFFSET DATA16:rm_AdapterStruct
				dw SEG DATA16:rm_AdapterStruct
_rm32_DeviceStruct	dw OFFSET DATA16:rm_DeviceStruct
				dw SEG DATA16:rm_DeviceStruct
_rm32_ResourceStruct dw OFFSET	DATA16:rm_ResourceStruct
				dw SEG DATA16:rm_ResourceStruct
_rm32_AdjunctBuffer dw	OFFSET DATA16:rm_AdjunctBuffer
				dw SEG DATA16:rm_AdjunctBuffer
_rm32_ResourceList	dw OFFSET DATA16:rm_ResourceList
				dw SEG DATA16:rm_ResourceList
_rm32_tmpStr1	dw OFFSET DATA16:rm_tmpStr1
				dw SEG DATA16:rm_tmpStr1
_rm32_tmpStr2	dw OFFSET DATA16:rm_tmpStr2
				dw SEG DATA16:rm_tmpStr2
_rm32_tmpStr3	dw OFFSET DATA16:rm_tmpStr3
				dw SEG DATA16:rm_tmpStr3

DATA32	ends

CODE16	segment
		assume cs:CODE16,ds:DATA16
;---------------------------------	RM_ATTACHDD	---------------------------------
		ALIGN	2
		public	RM_ATTACHDD
RM_ATTACHDD	proc near
		enter	0,0
		push	di
		mov		bx,06h[bp]
		mov		di,04h[bp]
		mov		dl,2ah
		call	dword ptr DevHelpFnPtr
		jb		short @RMATT1
		sub		ax,ax
@RMATT1:
		pop		di
		leave
		ret		4
		ALIGN	2
RM_ATTACHDD	endp

;------------------------------------ _GetCS -----------------------------------
		ALIGN	2
_GetCS	proc	near
		enter	2,0
		push	cs
		pop		word ptr -02h[bp]
		mov		ax,-02h[bp]
		leave
		ret
_GetCS	endp

;----------------------------------- CallRM -----------------------------------
		ALIGN	2
		public	CallRM
CallRM proc far
		enter	2,0
		call	_GetCS
		test	al,03h
		je		short @CALLRM1
		push	word ptr 0ah[bp]
		push	word ptr 08h[bp]
		push	word ptr 06h[bp]
		call	dword ptr RM_Help3
		add		sp,6
		leave
		retf
		ALIGN	2
@CALLRM1:
		push	word ptr 06h[bp]
		call	dword ptr RM_Help0
		leave
		retf
CallRM endp

;---------------------------------	__GetAdjList --------------------------------
; Get pointer to adjunct list in ax:si
		ALIGN	2
__GetAdjList proc near
		mov		si,offset rm_AdjunctBuffer
		push	si
@@:	mov		ax,ds:[si]
		or		ax,ds:[si+2]
		je		@F
		mov		ax,ds:[si+4]
		add		ax,si
		mov		ds:[si],ax
		mov		ds:[si+2],ds
		mov		si,ax
		jmp		short @B
@@:	pop		si
		cmp		word ptr ds:[si+4],0
		je		@F
		mov		ax,ds
		ret
@@:	mov		ax,0
		mov		si,0
		ret
__GetAdjList endp
CODE16	ends

;*************************************",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",a2CwSu
code,"push 1
push 0
st_em 0x0,2,0
push 0
ld_em 0x0,2,0
push 0
sethi 0x0200
st_em 0x0,2,0
push 0
push 1
push 2
push 3
push 4
push 5
push 6
push 7
push 8
push 9
push 10
push 11
push 12
push 13
push 14
push 15
push 16
push 17
push 0
ld_em 0x0,2,0
push 1
add
push 0
st_em 0x0,2,0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
drop 0
halt",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UB4oeW
code,";*****************************************************************************
;* MMX/SSE2/AVX-optimized 10-bit H.264 iDCT code
;*****************************************************************************
;* Copyright (C) 2005-2011 x264 project
;*
;* Authors: Daniel Kang <daniel.d.kang@gmail.com>
;*
;* This file is part of Libav.
;*
;* Libav is free software; you can redistribute it and/or
;* modify it under the terms of the GNU Lesser General Public
;* License as published by the Free Software Foundation; either
;* version 2.1 of the License, or (at your option) any later version.
;*
;* Libav is distributed in the hope that it will be useful,
;* but WITHOUT ANY WARRANTY; without even the implied warranty of
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;* Lesser General Public License for more details.
;*
;* You should have received a copy of the GNU Lesser General Public
;* License along with Libav; if not, write to the Free Software
;* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
;******************************************************************************

%include ""libavutil/x86/x86inc.asm""
%include ""libavutil/x86/x86util.asm""

SECTION_RODATA

pw_pixel_max: times 8 dw ((1 << 10)-1)
pd_32:        times 4 dd 32

SECTION .text

;-----------------------------------------------------------------------------
; void h264_idct_add(pixel *dst, dctcoef *block, int stride)
;-----------------------------------------------------------------------------
%macro STORE_DIFFx2 6
    psrad       %1, 6
    psrad       %2, 6
    packssdw    %1, %2
    movq        %3, [%5]
    movhps      %3, [%5+%6]
    paddsw      %1, %3
    CLIPW       %1, %4, [pw_pixel_max]
    movq      [%5], %1
    movhps [%5+%6], %1
%endmacro

%macro STORE_DIFF16 5
    psrad       %1, 6
    psrad       %2, 6
    packssdw    %1, %2
    paddsw      %1, [%5]
    CLIPW       %1, %3, %4
    mova      [%5], %1
%endmacro

;dst, in, stride
%macro IDCT4_ADD_10 3
    mova  m0, [%2+ 0]
    mova  m1, [%2+16]
    mova  m2, [%2+32]
    mova  m3, [%2+48]
    IDCT4_1D d,0,1,2,3,4,5
    TRANSPOSE4x4D 0,1,2,3,4
    paddd m0, [pd_32]
    IDCT4_1D d,0,1,2,3,4,5
    pxor  m5, m5
    STORE_DIFFx2 m0, m1, m4, m5, %1, %3
    lea   %1, [%1+%3*2]
    STORE_DIFFx2 m2, m3, m4, m5, %1, %3
%endmacro

%macro IDCT_ADD_10 1
cglobal h264_idct_add_10_%1, 3,3
    IDCT4_ADD_10 r0, r1, r2
    RET
%endmacro

INIT_XMM
IDCT_ADD_10 sse2
%if HAVE_AVX
INIT_AVX
IDCT_ADD_10 avx
%endif

;-----------------------------------------------------------------------------
; h264_idct_add16(pixel *dst, const int *block_offset, dctcoef *block, int stride, const uint8_t nnzc[6*8])
;-----------------------------------------------------------------------------
;;;;;;; NO FATE SAMPLES TRIGGER THIS
%macro ADD4x4IDCT 1
add4x4_idct_%1:
    add   r5, r0
    mova  m0, [r2+ 0]
    mova  m1, [r2+16]
    mova  m2, [r2+32]
    mova  m3, [r2+48]
    IDCT4_1D d,0,1,2,3,4,5
    TRANSPOSE4x4D 0,1,2,3,4
    paddd m0, [pd_32]
    IDCT4_1D d,0,1,2,3,4,5
    pxor  m5, m5
    STORE_DIFFx2 m0, m1, m4, m5, r5, r3
    lea   r5, [r5+r3*2]
    STORE_DIFFx2 m2, m3, m4, m5, r5, r3
    ret
%endmacro

INIT_XMM
ALIGN 16
ADD4x4IDCT sse2
%if HAVE_AVX
INIT_AVX
ALIGN 16
ADD4x4IDCT avx
%endif

%macro ADD16_OP 3
    cmp          byte [r4+%3], 0
    jz .skipblock%2
    mov         r5d, [r1+%2*4]
    call add4x4_idct_%1
.skipblock%2:
%if %2<15
    add          r2, 64
%endif
%endmacro

%macro IDCT_ADD16_10 1
cglobal h264_idct_add16_10_%1, 5,6
    ADD16_OP %1, 0, 4+1*8
    ADD16_OP %1, 1, 5+1*8
    ADD16_OP %1, 2, 4+2*8
    ADD16_OP %1, 3, 5+2*8
    ADD16_OP %1, 4, 6+1*8
    ADD16_OP %1, 5, 7+1*8
    ADD16_OP %1, 6, 6+2*8
    ADD16_OP %1, 7, 7+2*8
    ADD16_OP %1, 8, 4+3*8
    ADD16_OP %1, 9, 5+3*8
    ADD16_OP %1, 10, 4+4*8
    ADD16_OP %1, 11, 5+4*8
    ADD16_OP %1, 12, 6+3*8
    ADD16_OP %1, 13, 7+3*8
    ADD16_OP %1, 14, 6+4*8
    ADD16_OP %1, 15, 7+4*8
    REP_RET
%endmacro

INIT_XMM
IDCT_ADD16_10 sse2
%if HAVE_AVX
INIT_AVX
IDCT_ADD16_10 avx
%endif

;-----------------------------------------------------------------------------
; void h264_idct_dc_add(pixel *dst, dctcoef *block, int stride)
;-----------------------------------------------------------------------------
%macro IDCT_DC_ADD_OP_10 3
    pxor      m5, m5
%if avx_enabled
    paddw     m1, m0, [%1+0   ]
    paddw     m2, m0, [%1+%2  ]
    paddw     m3, m0, [%1+%2*2]
    paddw     m4, m0, [%1+%3  ]
%else
    mova      m1, [%1+0   ]
    mova      m2, [%1+%2  ]
    mova      m3, [%1+%2*2]
    mova      m4, [%1+%3  ]
    paddw     m1, m0
    paddw     m2, m0
    paddw     m3, m0
    paddw     m4, m0
%endif
    CLIPW     m1, m5, m6
    CLIPW     m2, m5, m6
    CLIPW     m3, m5, m6
    CLIPW     m4, m5, m6
    mova [%1+0   ], m1
    mova [%1+%2  ], m2
    mova [%1+%2*2], m3
    mova [%1+%3  ], m4
%endmacro

INIT_MMX
cglobal h264_idct_dc_add_10_mmx2,3,3
    movd    ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pEOymP
code,"dnl  mpn_lshift

dnl  Copyright 2009 Jason Moxham

dnl  This file is part of the MPIR Library.

dnl  The MPIR Library is free software; you can redistribute it and/or modify
dnl  it under the terms of the GNU Lesser General Public License as published
dnl  by the Free Software Foundation; either version 2.1 of the License, or (at
dnl  your option) any later version.

dnl  The MPIR Library is distributed in the hope that it will be useful, but
dnl  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
dnl  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
dnl  License for more details.

dnl  You should have received a copy of the GNU Lesser General Public License
dnl  along with the MPIR Library; see the file COPYING.LIB.  If not, write
dnl  to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
dnl  Boston, MA 02110-1301, USA.

include(`../config.m4')

C	mpn_lshift(mp_ptr rdi,mp_ptr rsi,mp_size_t rdx,mp_limb_t rcx)
C	rax=carry

ASM_START()
PROLOGUE(mpn_lshift)
C	// odd and even n seem to have different runtimes
push %rbx
mov %rdx,%rbx
lea 24(%rsi),%rsi
lea 24(%rdi),%rdi
mov -32(%rsi,%rbx,8),%rdx
xor %rax,%rax
shld %cl,%rdx,%rax
sub $5,%rbx
js skiplp
ALIGN(16)
lp:
	mov (%rsi,%rbx,8),%r8
	mov -24(%rsi,%rbx,8),%r11
	mov -8(%rsi,%rbx,8),%r9
	shld %cl,%r8,%rdx
	mov %rdx,8(%rdi,%rbx,8)
	mov %r11,%rdx
	mov -16(%rsi,%rbx,8),%r10
	shld %cl,%r9,%r8
	shld %cl,%r10,%r9
	mov %r8,(%rdi,%rbx,8)
	mov %r9,-8(%rdi,%rbx,8)
	shld %cl,%r11,%r10
	sub $4,%rbx
	mov %r10,16(%rdi,%rbx,8)
	jns lp
skiplp:
cmp $-2,%rbx
ja case3
je case2
jp case1
case0:
	shl %cl,%rdx
	mov %rdx,8(%rdi,%rbx,8)
	pop %rbx
	ret
ALIGN(16)
case3:
	mov (%rsi,%rbx,8),%r8
	mov -8(%rsi,%rbx,8),%r9
	shld %cl,%r8,%rdx
	mov %rdx,8(%rdi,%rbx,8)
	mov -16(%rsi,%rbx,8),%r10
	shld %cl,%r9,%r8
	shld %cl,%r10,%r9
	mov %r8,(%rdi,%rbx,8)
	mov %r9,-8(%rdi,%rbx,8)
	shl %cl,%r10
	mov %r10,16-32(%rdi,%rbx,8)
	pop %rbx
	ret
ALIGN(16)
case2:
	mov (%rsi,%rbx,8),%r8
	mov -8(%rsi,%rbx,8),%r9
	shld %cl,%r8,%rdx
	mov %rdx,8(%rdi,%rbx,8)
	shld %cl,%r9,%r8
	shl %cl,%r9
	mov %r8,(%rdi,%rbx,8)
	mov %r9,-8(%rdi,%rbx,8)
	pop %rbx
	ret
ALIGN(16)
case1:
	mov (%rsi,%rbx,8),%r8
	shld %cl,%r8,%rdx
	mov %rdx,8(%rdi,%rbx,8)
	shl %cl,%r8
	mov %r8,(%rdi,%rbx,8)
	pop %rbx
	ret
EPILOGUE()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5M8Cot
code,";--------------------------------------------------
; Sp-3DPrinter -- A 3D printer
; By SirPython of Code Review and GitHub
;
; SP-3DPrinter.asm
;--------------------------------------------------",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oHNyDY
code,";---------------------------------------
; CLi² (Command Line Interface) API
; 2013,2016 © breeze/fishbone crew
;---------------------------------------
; MODULE: #2E checkFileExist
;---------------------------------------
; Проверить существует ли файл в активной директории
; i:HL - имя файла(1-12),#00
; o:NZ - файл существует
;    Z - файл не найден
;---------------------------------------
_checkFileExist	ld	a,flagFile				; file
		jr	_checkDirExist_
;---------------------------------------
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yZy8dz
code,"	section "".data""
	xdef	pSnd_GetNote_voice1

pSnd_GetNote_voice1:
	move.b	note_voice1,d0
	rts",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gobPoQ
code,"
; FILE *fmemopen(void *buf, size_t size, const char *mode)

SECTION code_clib
SECTION code_stdio

PUBLIC _fmemopen

EXTERN l0_fmemopen_callee

_fmemopen:

   pop af
   pop hl
   pop bc
   pop de
   
   push de
   push bc
   push hl
   push af

   jp l0_fmemopen_callee
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9JMQEi
code,";
;Based on the SG C Tools 1.7
;(C) 1993 Steve Goldsmith
;
;$Id: setpixivdc.asm,v 1.2 2015/01/19 01:32:42 pauloscustodio Exp $
;

;set pixel in 640 x 480 bit map mode.  math and local vdc i/o optimized
;for speed.

		PUBLIC	setpixivdc
		EXTERN	_vdcDispMem

		EXTERN	vdcset
		EXTERN	vdcget

;fast pixel look up using x mod 8 as index into bit table

;BitTable:
;
;;defb    -128
;defb    128
;defb    64
;defb    32
;defb    16
;defb    8
;defb    4
;defb    2
;defb    1

setpixivdc:

        pop     hl              ;return address
        pop     de              ;y
        pop     bc              ;x
        push    bc
        push    de
        push    hl

        ld      a,l             ;save y low byte for odd/even test

        srl     d               ;y = y/2
        rr      e
                                ;calc (y * 80) + (x / 8) + bit map start
        ld      l,e             ;hl = y
        ld      h,d

        add     hl,hl           ;hl = y * 64;
        add     hl,hl
        add     hl,hl
        add     hl,hl
        add     hl,hl
        add     hl,hl

        ex      de,hl           ;de = y * 64; hl = y

        add     hl,hl           ;hl = y * 16
        add     hl,hl
        add     hl,hl
        add     hl,hl

        add     hl,de           ;hl = (y * 64)+(y * 16)

        ld      e,c             ;de = x
        ld      d,b

        srl     d               ;de = x / 8
        rr      e
        srl     d
        rr      e
        srl     d
        rr      e

        add     hl,de           ;hl = (y * 80) + (x / 8)
        ld      de,(_vdcDispMem)
        add     hl,de           ;hl = (y * 80) + (x / 8) + bit map offset

        and     01h             ;test bit 0 to determine odd/even
        jr      nz,isodd        ;if y odd then
        ld      de,05370h       ; de = odd field offset of 21360 bytes
        add     hl,de           ; hl = hl+21360
isodd:
        ld      a,c             ;a = x low byte
        and     07h             ;a = x mod 8
        ;ld      d,0             ;de = x mod 8
        ;ld      e,a

	xor	7
	ld	b,a
	ld	a,1
	jr	z, or_pixel		; pixel is at bit 0...
.plot_position
	rlca
	djnz	plot_position
.or_pixel

        ;push    ix
        ;ld      ix,BitTable     ;get address of bit table
        ;add     ix,de           ;ix = table addr + (x mod 8)
        ;ld      a,(ix+0)        ;a = bit to set from bit table
        ;pop     ix

        ld      d,18            ;set vdc update addr
        ld      e,h
        call    vdcset

        ld      d,19
        ld      e,l
        call    vdcset

        ld      d,31            ;get current byte
        call    vdcget

        or      e               ;a = current byte or bit table bit

        ld      d,18            ;set vdc update addr
        ld      e,h
        call    vdcset

        ld      d,19
        ld      e,l
        call    vdcset

        ld      d,31            ;set pixel
        ld      e,a
        call    vdcset

        ret

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k7Y9nf
code,"        .file   ""example.cpp""
        .arch msp430f169
        .cpu 430
        .mpy none

        .section        .debug_abbrev,"""",@progbits
.Ldebug_abbrev0:
        .section        .debug_info,"""",@progbits
.Ldebug_info0:
        .section        .debug_line,"""",@progbits
.Ldebug_line0:
        .text
.Ltext0:
        .p2align 1,0
.global square(int)
        .type   square(int),@function
/***********************
 * Function `square(int)'
 ***********************/
square(int):
.LFB0:
.LM1:
        push    r10
.LCFI0:
        push    r4
.LCFI1:
        mov     r1, r4
.LCFI2:
        add     #4, r4
.LCFI3:
        sub     #2, r1
.LCFI4:
        mov     r15, -6(r4)
.LM2:
        mov     -6(r4), r10
        mov     -6(r4), r12
        call    #__mulhi3
        mov     r14, r15
.LM3:
        add     #2, r1
        pop     r4
        pop     r10
        ret
.LFE0:
.Lfe1:
        .size   square(int),.Lfe1-square(int)
;; End of function

        .section        .debug_frame,"""",@progbits
.Lframe0:
        .4byte  .LECIE0-.LSCIE0
.LSCIE0:
        .4byte  0xffffffff
        .byte   0x1
        .string """"
        .uleb128 0x1
        .sleb128 -2
        .byte   0x0
        .byte   0xc
        .uleb128 0x1
        .uleb128 0x2
        .byte   0x80
        .uleb128 0x1
        .p2align 1,0
.LECIE0:
.LSFDE0:
        .4byte  .LEFDE0-.LASFDE0
.LASFDE0:
        .4byte  .Lframe0
        .2byte  .LFB0
        .2byte  .LFE0-.LFB0
        .byte   0x4
        .4byte  .LCFI0-.LFB0
        .byte   0xe
        .uleb128 0x4
        .byte   0x4
        .4byte  .LCFI1-.LCFI0
        .byte   0xe
        .uleb128 0x6
        .byte   0x84
        .uleb128 0x3
        .byte   0x8a
        .uleb128 0x2
        .byte   0x4
        .4byte  .LCFI2-.LCFI1
        .byte   0xd
        .uleb128 0x4
        .byte   0x4
        .4byte  .LCFI3-.LCFI2
        .byte   0xe
        .uleb128 0x2
        .p2align 1,0
.LEFDE0:
        .text
.Letext0:
        .section        .debug_loc,"""",@progbits
.Ldebug_loc0:
.LLST0:
        .2byte  .LFB0-.Ltext0
        .2byte  .LCFI0-.Ltext0
        .2byte  0x2
        .byte   0x71
        .sleb128 2
        .2byte  .LCFI0-.Ltext0
        .2byte  .LCFI1-.Ltext0
        .2byte  0x2
        .byte   0x71
        .sleb128 4
        .2byte  .LCFI1-.Ltext0
        .2byte  .LCFI2-.Ltext0
        .2byte  0x2
        .byte   0x71
        .sleb128 6
        .2byte  .LCFI2-.Ltext0
        .2byte  .LCFI3-.Ltext0
        .2byte  0x2
        .byte   0x74
        .sleb128 6
        .2byte  .LCFI3-.Ltext0
        .2byte  .LFE0-.Ltext0
        .2byte  0x2
        .byte   0x74
        .sleb128 2
        .2byte  0x0
        .2byte  0x0
        .section        .debug_info
        .4byte  0x4c
        .2byte  0x2
        .4byte  .Ldebug_abbrev0
        .byte   0x2
        .uleb128 0x1
        .4byte  .LASF0
        .byte   0x4
        .4byte  .LASF1
        .2byte  .Ltext0
        .2byte  .Letext0
        .4byte  .Ldebug_line0
        .uleb128 0x2
        .byte   0x1
        .4byte  .LASF2
        .byte   0x1
        .byte   0x2
        .4byte  .LASF3
        .4byte  0x48
        .2byte  .LFB0
        .2byte  .LFE0
        .4byte  .LLST0
        .4byte  0x48
        .uleb128 0x3
        .string ""num""
        .byte   0x1
        .byte   0x2
        .4byte  0x48
        .byte   0x2
        .byte   0x91
        .sleb128 0
        .byte   0x0
        .uleb128 0x4
        .byte   0x2
        .byte   0x5
        .string ""int""
        .byte   0x0
        .section        .debug_abbrev
        .uleb128 0x1
        .uleb128 0x11
        .byte   0x1
        .uleb128 0x25
        .uleb128 0xe
        .uleb128 0x13
        .uleb128 0xb
        .uleb128 0x3
        .uleb128 0xe
        .uleb128 0x11
        .uleb128 0x1
        .uleb128 0x12
        .uleb128 0x1
        .uleb128 0x10
        .uleb128 0x6
        .byte   0x0
        .byte   0x0
        .uleb128 0x2
        .uleb128 0x2e
        .byte   0x1
        .uleb128 0x3f
        .uleb128 0xc
        .uleb128 0x3
        .uleb128 0xe
        .uleb128 0x3a
        .uleb128 0xb
        .uleb128 0x3b
        .uleb128 0xb
        .uleb128 0x2007
        .uleb128 0xe
        .uleb128 0x49
        .uleb128 0x13
        .uleb128 0x11
        .uleb128 0x1
        .uleb128 0x12
        .uleb128 0x1
        .uleb128 0x40
        .uleb128 0x6
        .uleb128 0x1
        .uleb128 0x13
        .byte   0x0
        .byte   0x0
        .uleb128 0x3
        .uleb128 0x5
        .byte   0x0
        .uleb128 0x3
        .uleb128 0x8
        .uleb128 0x3a
        .uleb128 0xb
        .uleb128 0x3b
        .uleb128 0xb
        .uleb128 0x49
        .uleb128 0x13
        .uleb128 0x2
        .uleb128 0xa
        .byte   0x0
        .byte   0x0
        .uleb128 0x4
        .uleb128 0x24
        .byte   0x0
        .uleb128 0xb
        .uleb128 0xb
        .uleb128 0x3e
        .uleb128 0xb
        .uleb128 0x3
        .uleb128 0x8
        .byte   0x0
        .byte   0x0
        .byte   0x0
        .section        .debug_pubnames,"""",@progbits
        .4byte  0x19
        .2byte  0x2
        .4byte  .Ldebug_info0
        .4byte  0x50
        .",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",e4PYjS
code,";
;       Z88 Graphics Functions
;
;       Written around the Interlogic Standard Library
;
;	$Id: getmaxx.asm,v 1.3 2015/01/19 01:32:46 pauloscustodio Exp $
;


	INCLUDE	""graphics/grafix.inc""


                PUBLIC    getmaxx

.getmaxx
		ld	hl,maxx-1
		ret
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",44mC2t
code,"; Copyright (c) 2004, Intel Corporation                                                         
; All rights reserved. This program and the accompanying materials                          
; are licensed and made available under the terms and conditions of the BSD License         
; which accompanies this distribution.  The full text of the license may be found at        
; http://opensource.org/licenses/bsd-license.php                                            
;                                                                                           
; THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN ""AS IS"" BASIS,                     
; WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.    
;
; Module Name:
;
;   WriteMm0.Asm
;
; Abstract:
;
;   AsmWriteMm0 function
;
; Notes:
;
;------------------------------------------------------------------------------

    .code

;------------------------------------------------------------------------------
; VOID
; EFIAPI
; AsmWriteMm0 (
;   IN UINT64   Value
;   );
;------------------------------------------------------------------------------
AsmWriteMm0 PROC
    ;
    ; 64-bit MASM doesn't support MMX instructions, so use opcode here
    ;
    DB      48h, 0fh, 6eh, 0c1h
    ret
AsmWriteMm0 ENDP

    END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Mviv2m
code,".size 8000

.code@48
	jp l1000

.code@100
	jp l150

.data@143
	c0 

.code@150
l150:
	ld a, 00
	ldff(ff), a
	ld a, 30
	ldff(00), a
	ld a, 01
	ldff(4d), a
	stop, 00
	xor a, a
	dec a
	ldff(45), a
	ld c, 44
	ld b, 91
l166:
	ldff a, (c)
	cmp a, b
	jpnz l166
	ld hl, fe00
	ld d, 10
	ld a, d
	ld(hl++), a
	ld a, 0d
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 14
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 1d
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 24
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 2d
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 34
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 3d
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 44
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 4d
	ld(hl++), a
	inc l
	inc l
	ld a, d
	ld(hl++), a
	ld a, 54
	ld(hl++), a
	ld a, 40
	ldff(41), a
	ld a, 02
	ldff(ff), a
	xor a, a
	ldff(0f), a
	ei
	ld a, 01
	ldff(45), a
	ld c, 41
	ld b, 03
	ld a, 93
	ldff(40), a

.code@1000
l1000:
	nop

.code@1094
	ldff a, (c)
	and a, b
	ld(ff80), a
	jp l7000

.code@2000
l2000:
	nop

.code@6ffd
	jp l2000
l7000:
	ld c, 44
	ld b, 91
l7004:
	ldff a, (c)
	cmp a, b
	jpnz l7004
	xor a, a
	ldff(40), a
	ld bc, 7a00
	ld hl, 8000
	ld d, a0
l7014:
	ld a, (bc)
	inc bc
	ld(hl++), a
	dec d
	jpnz l7014
	ld a, c0
	ldff(47), a
	ld a, 80
	ldff(68), a
	ld a, ff
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ldff(69), a
	ld a, 00
	ldff(69), a
	ldff(69), a
	ld a, (ff80)
	ld(9800), a
	xor a, a
	ldff(43), a
	ld a, 91
	ldff(40), a
	jp l2000

.data@7a02
	7f 7f 41 41 41 41 41 41 
	41 41 41 41 7f 7f 00 00 
	08 08 08 08 08 08 08 08 
	08 08 08 08 08 08 00 00 
	7f 7f 01 01 01 01 7f 7f 
	40 40 40 40 7f 7f 00 00 
	7f 7f 01 01 01 01 3f 3f 
	01 01 01 01 7f 7f 00 00 
	41 41 41 41 41 41 7f 7f 
	01 01 01 01 01 01 00 00 
	7f 7f 40 40 40 40 7e 7e 
	01 01 01 01 7e 7e 00 00 
	7f 7f 40 40 40 40 7f 7f 
	41 41 41 41 7f 7f 00 00 
	7f 7f 01 01 02 02 04 04 
	08 08 10 10 10 10 00 00 
	3e 3e 41 41 41 41 3e 3e 
	41 41 41 41 3e 3e 00 00 
	7f 7f 41 41 41 41 7f 7f 
	01 01 01 01 7f 7f 

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ezgE23
code,"  include ""../spelunk-constants.asm""
  org #0000
jungle_chunk9:
  db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  db 0,0,0,145,145,145,145,145,145,145,145,145,0,0,0,0
  db 0,0,0,145,145,145,145,145,145,145,145,145,0,0,0,0
  db 0,0,0,0,132,0,0,132,0,0,132,0,0,0,145,145
  db 0,0,0,0,132,0,0,132,0,0,132,0,0,0,145,145
  db 0,0,0,0,132,0,0,132,0,0,132,0,0,0,145,145
  db 0,0,0,0,132,0,0,132,0,0,132,0,145,145,145,145
  db 0,0,0,0,132,0,0,132,0,0,132,0,145,145,145,145
  db 0,0,0,0,133,0,0,133,0,0,133,0,145,145,145,145
  db 0,0,0,0,0,0,0,0,0,0,0,0,145,145,145,145
  db 0,0,0,0,0,0,0,0,0,0,0,0,145,145,145,145
  db 0,0,0,0,0,0,0,0,0,171,145,145,145,145,145,145
  db 0,0,0,11,0,0,0,11,169,170,145,145,145,145,145,145
  db 145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145
  db 145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145
jungle_chunk9_n_enemies:
  db 0
jungle_chunk9_enemies:
jungle_chunk9_n_items:
  db 0
jungle_chunk9_items:
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yTe1ir
code,"; 
; Part of OS4, __idt_default_handler.asm
; Author Mikael Henriksson, miklhh
;

global __idt_default_handler:function (__idt_default_handler.end - __idt_default_handler)
__idt_default_handler:
	pusha

	mov         al,  0x20    ; ???
	mov         dx,  0x20    ; ???
	out         dx,  al      ; ???

	popa
	iret
.end:
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QMylIf
code,"; NOTE: The NES's 2A03 has no decimal mode; hence, we don't bother emulating it.
; We don't keep track of clock cycles because it's not needed for an NSF player.
; BRK and RTI are deliberately unimplemented because they're not expected to occur.
;
; Quirks (deliberate emulation bugs):
; * If the stack overflows, it will start overwriting the zero page.
; * Writing to ROM space will overwrite ROM data.
;
; @TODO@ -- make macros for each instruction type to cut down on duplicate code

    cpu     8086


global Run6502

extern PrintErrorAndQuit


FLAG_CARRY      equ     1 << 0
FLAG_ZERO       equ     1 << 1
FLAG_INTERRUPT  equ     1 << 2
FLAG_DECIMAL    equ     1 << 3
FLAG_BREAK      equ     1 << 4
FLAG_UNUSED     equ     1 << 5                  ; This should always be 1, but we don't bother
FLAG_OVERFLOW   equ     1 << 6
FLAG_MINUS      equ     1 << 7



; Pass in a reg or [bx]
%macro CheckZeroNeg 1
        and     ah, ~(FLAG_MINUS | FLAG_ZERO)
        CheckZeroNegSetOnly %1
%endmacro

; Used when the relevant flags have already been cleared beforehand
; i.e. it only sets the flags, never clears 'em
%macro CheckZeroNegSetOnly 1
        ; Set negative and zero flags according to lookup table
        mov     bl, %1
        xor     bh, bh                      ; must come after since %1 can be [bx]
        mov     bl, [CS:ZeroNegTbl+bx]
        or      ah, bl
%endmacro

; Uses x86's own carry flag to check carry
%macro CheckZeroNegCarryAfterShiftSetOnly 1
        jnc     %%no_carry
        or      ah, FLAG_CARRY
%%no_carry:
        xor     bh, bh
        mov     bl, %1
        mov     bl, [CS:ZeroNegTbl+bx]
        or      ah, bl
%endmacro

%macro CheckZeroNegCarryAfterSubtractionSetOnly 1
        ; x86 carry is opposite of 6502 carry here
        jc      %%no_carry
        or      ah, FLAG_CARRY
%%no_carry:
        xor     bh, bh
        mov     bl, %1
        mov     bl, [CS:ZeroNegTbl+bx]
        or      ah, bl
%endmacro

; Here the thing we want to check is already in BL (used for CMP)
%macro CheckZeroNegCarryAfterSubtractionSetOnlyBL 0
        ; x86 carry is opposite of 6502 carry here
        jc      %%no_carry
        or      ah, FLAG_CARRY
%%no_carry:
        xor     bh, bh
        mov     bl, [CS:ZeroNegTbl+bx]
        or      ah, bl
%endmacro


; This will move the address of a var in the zero page to BX
; The rest are similar
%macro HandleZP 0
        xor     bh, bh
        mov     bl, [di]
        inc     di
%endmacro

%macro HandleZP_X 0
        HandleZP
        add     bl, dl
        adc     bh, 0
%endmacro

%macro HandleZP_Y 0
        HandleZP
        add     bl, dh
        adc     bh, 0
%endmacro

%macro HandleABS 0
        mov     bx, [di]
        inc     di
        inc     di
%endmacro

%macro HandleABS_X 0
        HandleABS
        add     bl, dl
        adc     bh, 0
%endmacro

%macro HandleABS_Y 0
        HandleABS
        add     bl, dh
        adc     bh, 0
%endmacro

%macro HandleIND_X 0
        HandleZP_X
        mov     bl, [bx]
%endmacro

%macro HandleIND_Y 0
        HandleZP
        mov     bx, [bx]
        add     bl, dh
        adc     bh, 0
%endmacro


; Helpers for ADC and SBC instructions, which are involved
%macro ADC_start 0
        ; CL will store current value of AL (6502's A) to check for carry later
        mov     cl, al
        test    ah, FLAG_CARRY
        jz      %%add_without_carry
        inc     al
%%add_without_carry:
        and     ah, ~(FLAG_MINUS | FLAG_OVERFLOW | FLAG_ZERO | FLAG_CARRY)
%endmacro

%macro ADC_end 0
        jno     %%no_overflow
        or      ah, FLAG_OVERFLOW
%%no_overflow:
        ; If new AL is below old AL, there was a carry
        cmp     al, cl
        jae     %%no_carry
        or      ah, FLAG_CARRY
%%no_carry:
        CheckZeroNegSetOnly al
        jmp     Run6502
%endmacro

%macro SBC_start 0
        ; CL will store current value of AL (6502's A) to check for carry later
        mov     cl, al
        test    ah, FLAG_CARRY
        jnz     %%sub_without_borrow
        dec     al
%%sub_without_borrow:
        and     ah, ~(FLAG_MINUS | FLAG_OVERFLOW | FLAG_ZERO | FLAG_CARRY)
%endmacro

%macro SBC_end 0
        jno     %%no_overflow
        or      ah, FLAG_OVERFLOW
%%no_overflow:
        ; If new AL not above old AL, there was no borrow
        cmp     al, cl
        ja      %%borrowed
        or      ah, FLAG_CARRY
%%borrowed:
        CheckZeroNegSetOnly al
        jmp     Run6502
%endmacro


; Helpers for ROL and ROR
; Would be nice if they worked the same on the 6502 as on x86, but they don't!
; Parameter is the register that holds the thing to rotate
%macro ROL_body 1
        xor     cl, cl
        test    ah, FLAG_CARRY
        jz      %%no_old_carry
        inc     cx                          ; faster than INC CL
%%no_old_carry:
        and     ah, ~(FLAG_MINUS | FLAG_ZERO | FLAG_CARRY)
        test    %1, 0x80
        jz      %%no_new_carry
        or      ah, FLAG_CARRY
%%no_new_carry:
        shl     %1, 1
        or      %1, cl                      ; shift in old carry
        CheckZeroNegSetOnly %1
%endmacro

%macro ROR_body 1
        xor   ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-njBOf
code,";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Copyright(c) 2011-2014 Intel Corporation All rights reserved.
;
;  Redistribution and use in source and binary forms, with or without
;  modification, are permitted provided that the following conditions 
;  are met:
;    * Redistributions of source code must retain the above copyright
;      notice, this list of conditions and the following disclaimer.
;    * Redistributions in binary form must reproduce the above copyright
;      notice, this list of conditions and the following disclaimer in
;      the documentation and/or other materials provided with the
;      distribution.
;    * Neither the name of Intel Corporation nor the names of its
;      contributors may be used to endorse or promote products derived
;      from this software without specific prior written permission.
;
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;  ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
;  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
;  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
;  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

%define EFLAGS_HAS_CPUID        (1<<21)
%define FLAG_CPUID1_ECX_CLMUL   (1<<1)
%define FLAG_CPUID1_EDX_SSE2    (1<<26)
%define FLAG_CPUID1_ECX_SSE3	(1)
%define FLAG_CPUID1_ECX_SSE4_1  (1<<19)
%define FLAG_CPUID1_ECX_SSE4_2  (1<<20)
%define FLAG_CPUID1_ECX_POPCNT  (1<<23)
%define FLAG_CPUID1_ECX_AESNI   (1<<25)
%define FLAG_CPUID1_ECX_OSXSAVE (1<<27)
%define FLAG_CPUID1_ECX_AVX     (1<<28)
%define FLAG_CPUID1_EBX_AVX2    (1<<5)
%define FLAG_XGETBV_EAX_XMM_YMM	0x6

%define FLAG_CPUID1_EAX_AVOTON 0x000406d0

; define d and w variants for registers

%define	raxd	eax
%define raxw	ax
%define raxb	al

%define	rbxd	ebx
%define rbxw	bx
%define rbxb	bl

%define	rcxd	ecx
%define rcxw	cx
%define rcxb	cl

%define	rdxd	edx
%define rdxw	dx
%define rdxb	dl

%define	rsid	esi
%define rsiw	si
%define rsib	sil

%define	rdid	edi
%define rdiw	di
%define rdib	dil

%define	rbpd	ebp
%define rbpw	bp
%define rbpb	bpl

%define ymm0x xmm0
%define ymm1x xmm1
%define ymm2x xmm2
%define ymm3x xmm3
%define ymm4x xmm4
%define ymm5x xmm5
%define ymm6x xmm6
%define ymm7x xmm7
%define ymm8x xmm8
%define ymm9x xmm9
%define ymm10x xmm10
%define ymm11x xmm11
%define ymm12x xmm12
%define ymm13x xmm13
%define ymm14x xmm14
%define ymm15x xmm15

%define DWORD(reg) reg %+ d
%define WORD(reg)  reg %+ w
%define BYTE(reg)  reg %+ b

%define XWORD(reg) reg %+ x
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vbH6Lm
code,";******************************************************************************
;* SIMD-optimized fullpel functions
;* Copyright (c) 2008 Loren Merritt
;* Copyright (c) 2003-2013 Michael Niedermayer
;* Copyright (c) 2013 Daniel Kang
;*
;* This file is part of FFmpeg.
;*
;* FFmpeg is free software; you can redistribute it and/or
;* modify it under the terms of the GNU Lesser General Public
;* License as published by the Free Software Foundation; either
;* version 2.1 of the License, or (at your option) any later version.
;*
;* FFmpeg is distributed in the hope that it will be useful,
;* but WITHOUT ANY WARRANTY; without even the implied warranty of
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;* Lesser General Public License for more details.
;*
;* You should have received a copy of the GNU Lesser General Public
;* License along with FFmpeg; if not, write to the Free Software
;* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
;******************************************************************************

%include ""libavutil/x86/x86util.asm""

SECTION .text

%macro PAVGB_MMX 4
    LOAD   %3, %1
    por    %3, %2
    pxor   %2, %1
    pand   %2, %4
    psrlq  %2, 1
    psubb  %3, %2
    SWAP   %2, %3
%endmacro

; void ff_put/avg_pixels(uint8_t *block, const uint8_t *pixels,
;                        ptrdiff_t line_size, int h)
%macro OP_PIXELS 2
%if %2 == mmsize/2
%define LOAD movh
%define SAVE movh
%define LEN  mmsize
%else
%define LOAD movu
%define SAVE mova
%define LEN  %2
%endif
cglobal %1_pixels%2, 4,5,4
    lea          r4, [r2*3]
%ifidn %1, avg
%if notcpuflag(mmxext)
    pcmpeqd      m6, m6
    paddb        m6, m6
%endif
%endif
.loop:
%assign %%i 0
%rep LEN/mmsize
    LOAD         m0, [r1 + %%i]
    LOAD         m1, [r1+r2 + %%i]
    LOAD         m2, [r1+r2*2 + %%i]
    LOAD         m3, [r1+r4 + %%i]
%ifidn %1, avg
%if notcpuflag(mmxext)
    PAVGB_MMX    [r0 + %%i], m0, m4, m6
    PAVGB_MMX    [r0+r2 + %%i], m1, m5, m6
    PAVGB_MMX    [r0+r2*2 + %%i], m2, m4, m6
    PAVGB_MMX    [r0+r4 + %%i], m3, m5, m6
%else
    pavgb        m0, [r0 + %%i]
    pavgb        m1, [r0+r2 + %%i]
    pavgb        m2, [r0+r2*2 + %%i]
    pavgb        m3, [r0+r4 + %%i]
%endif
%endif
    SAVE       [r0 + %%i], m0
    SAVE    [r0+r2 + %%i], m1
    SAVE  [r0+r2*2 + %%i], m2
    SAVE    [r0+r4 + %%i], m3
%assign %%i %%i+mmsize
%endrep
    sub         r3d, 4
    lea          r1, [r1+r2*4]
    lea          r0, [r0+r2*4]
    jne       .loop
    RET
%endmacro

INIT_MMX mmx
OP_PIXELS put, 4
OP_PIXELS avg, 4
OP_PIXELS put, 8
OP_PIXELS avg, 8
OP_PIXELS put, 16
OP_PIXELS avg, 16

INIT_MMX mmxext
OP_PIXELS avg, 4
OP_PIXELS avg, 8
OP_PIXELS avg, 16

INIT_XMM sse2
OP_PIXELS put, 16
OP_PIXELS avg, 16
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nAmrVU
code,"/* Copyright 2014 Peter Goodman, all rights reserved. */

#include ""arch/x86-64/asm/include.asm.inc""

START_FILE_INTEL

// Get the user-space TLS base address.
//
// Note: This is Linux-specific, and assumes the first quadword of memory
//       pointed to by the base address of the segment descriptor for `FS`
//       is a pointer to said base address (i.e. self-reference).
DEFINE_FUNC(granary_arch_get_segment_base)
    mov rax, qword ptr [GRANARY_IF_USER_ELSE(fs, gs):0]
    ret
END_FUNC(granary_arch_get_segment_base)

END_FILE
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CvB4Yn
code,"  [section .text align=1]
%include ""../include/signal.inc""

  extern signal_install_group
  extern installed_sig_mask
  extern get_our_process_id
;---------------------------------------------------
;>1 key_sig
; signal_attach - set action for signal
; INPUT
;  eax = signal# to attach
;        SIGIO used by key_setup, other choices
;        are SIGURG,SIGUSR1,SIGUSR2
;  ebx = fd to attach
;  ecx = signal mask in signal_mask format (see signal.inc)
;   dl = 0 if not SIGIO or keyborad handling not wanted, 1=keyboard sigio
; OUTPUT
;   al = results of request, jns=success js=error
;         0 = success
;       -22 = EINVAL An invalid signal was specified.
;       -14 = EFAULT memory error
;       -4  = EINTR  System call was interrupted.
;
; NOTE
;   source file = signal_attach.asm
;
;<
;----------------------------------------------------
  global signal_attach
signal_attach:
  or	[installed_sig_mask],ecx	;set mask bit
  mov	[sa_fd],ebx		;save fd
  mov	[sa_sig],eax		;save signal#
  mov	edx,ecx			;mask
  mov	ah,1			;set our handler
  mov	al,dl			;get sigio flag
  call	signal_install_group
  js	sa_exit
;get process and tty
  call	get_our_process_id
  mov	edx,eax
;set owner
  mov	eax,55
  mov	ebx,[sa_fd]
  mov	ecx,8			;F_SETOWN
;  mov	edx,[our_id]
  int	byte 80h
  or	eax,eax
  js	sa_exit			;exit if error
;set state flags
  mov	eax,55
;  mov	ebx,[sa_fd]
  mov	ecx,4			;F_SETFL
  mov	edx,024000q		;O_ASYNC O_NONBLOCK
;  mov	edx,020000q		;O_ASYNC
  int	byte 80h
  or	eax,eax
  js	sa_exit
;set alt signal
  mov	eax,55
;  mov	ebx,[sa_fd]
  mov	ecx,10			;F_SETSIG
  mov	edx,[sa_sig]		;signal#
  int	byte 80h
sa_exit:
  or	eax,eax			;set flags
  ret
;------------
  [section .data]
sa_fd:	dd	0
sa_sig: dd 	0
our_id: dd	0
  [section .text]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3RUrjb
code,"; master library - MS-DOS - 30BIOS
;
; Description:
;	30sBIOS§ä
;	GDCNbNÌæ¾CÏX
;
; Procedures/Functions:
;	bios30_getclock( void ) ;
;	void bios30_setclock( int clock ) ;
;
; Parameters:
;	clock	0(BIOS30_CLOCK2) = 2.5MHz
;		1(BIOS30_CLOCK5) = 5.0MHz
;
; Returns:
;	bios30_getclock:
;		0(BIOS30_CLOCK2) = 2.5MHz / ¢T|[g
;		1(BIOS30_CLOCK5) = 5.0MHz
;
; Binding Target:
;	Microsoft-C / Turbo-C / Turbo Pascal
;
; Running Target:
;	MS-DOS (with 30bios or TT)
;
; Requiring Resources:
;	CPU: 80186(V30)
;
; Notes:
;	30sBIOS 1.20È~ÅLø
;	TT.com 1.50È~ÅLø
;
; Compiler/Assembler:
;	TASM 3.0
;	OPTASM 1.6
;
; Author:
;	¿ã`½
;	³©«¯¢
;
; Revision History:
;	94/ 8/ 6 úo[WB
;

	.MODEL SMALL
	.186
	INCLUDE FUNC.INC
	EXTRN BIOS30_TT_EXIST:CALLMODEL

	.CODE
func BIOS30_GETCLOCK	; bios30_getclock( void ) {
	_call	BIOS30_TT_EXIST		; 30sBIOS 1.20È~, TT 1.50È~
	test	al,8ch
	mov	al,0
	jz	short GETCLOCK_FAILURE
	jns	short TT_GETCLOCK	; jnpÍATT 1.50È~Å30sBIOS APIð
	jnp	short GETCLOCK_FAILURE	; ½È¢±ÆªOñ

	mov	bl,0ffh			; 30sBIOS
	mov	ax,0ff07h
	int	18h
	xor	ah,ah
GETCLOCK_FAILURE:
	ret

TT_GETCLOCK:
	mov	ax,1802h		; TT
	mov	bx,'TT'
	int	18h
	shr	ax,2
	and	ax,1
	ret
endfunc			; }


func BIOS30_SETCLOCK	; void bios30_setclock( int clock ) {
	_call	BIOS30_TT_EXIST		; 30sBIOS 1.20È~, TT 1.50È~
	mov	bx,sp			; bx clock
	clock = (RETSIZE+0)*2
	mov	bx,ss:[bx+clock]
	and	bx,1
	test	al,8ch
	jz	short SETCLOCK_FAILURE
	jns	short TT_SETCLOCK	; jnpÍATT 1.50È~Å30sBIOS APIð
	jnp	short SETCLOCK_FAILURE	; ½È¢±ÆªOñ

	mov	ax,0ff07h		; 30sBIOS
	int	18h			; GDCNbNÝè

	xor	bl,bl			; [hðÄÝèµÀè³¹é
	mov	ax,0ff09h		; dl g£Ýè by KEI SAKAKI.
	int	18h
	and	al,0c0h
	mov	dl,al

	mov	ah,0bh			; Ýè·élÌì¬ by KEI SAKAKI.
	mov	bx,'30'+'s'
	int	18h
	and	al,NOT 0c0h
	or	al,dl
	dec	ah			; mov ah,0ah
TT_RETURN:
	int	18h
SETCLOCK_FAILURE:
	ret	2

TT_SETCLOCK:
	mov	dx,bx			; TT
	mov	ax,1802h
	mov	bx,'TT'
	int	18h
	and	al,NOT 04h
	shl	dl,2
	or	al,dl
	jmp	short TT_RETURN
endfunc			; }

	END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LWpJoW
code,"; ===========================================================================
; Copyright (C) 2011 Thilo Schulz <thilo@tjps.eu>
; 
; This file is part of Quake III Arena source code.
; 
; Quake III Arena source code is free software; you can redistribute it
; and/or modify it under the terms of the GNU General Public License as
; published by the Free Software Foundation; either version 2 of the License,
; or (at your option) any later version.
; 
; Quake III Arena source code is distributed in the hope that it will be
; useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with Quake III Arena source code; if not, write to the Free Software
; Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
; ===========================================================================

; MASM ftol conversion functions using SSE or FPU
; assume __cdecl calling convention is being used for x86, __fastcall for x64

IFNDEF _M_X64
.686p
.xmm
.model flat, c
ENDIF

.data
ALIGN 16
ssemask DWORD 0FFFFFFFFh, 0FFFFFFFFh, 0FFFFFFFFh, 00000000h

.code

; dummy
IFNDEF _M_X64
	.safeseh SEH_handler
	SEH_handler   proc
		ret
	SEH_handler   endp
ENDIF

IFDEF _M_X64
	Sys_SnapVector PROC
		movaps xmm1, ssemask		; initialize the mask register
		movups xmm0, [rcx]			; here is stored our vector. Read 4 values in one go
		movaps xmm2, xmm0			; keep a copy of the original data
		andps xmm0, xmm1			; set the fourth value to zero in xmm0
		andnps xmm1, xmm2			; copy fourth value to xmm1 and set rest to zero
		cvtps2dq xmm0, xmm0			; convert 4 single fp to int
		cvtdq2ps xmm0, xmm0			; convert 4 int to single fp
		orps xmm0, xmm1				; combine all 4 values again
		movups [rcx], xmm0			; write 3 rounded and 1 unchanged values back to memory
		ret
	Sys_SnapVector ENDP

	Q_ftol PROC
		cvttss2si eax, xmm0
		ret
	Q_ftol ENDP

	Q_VMftol PROC
		movss xmm0, dword ptr [rdi + rbx * 4]
		cvttss2si eax, xmm0
		ret
	Q_VMftol ENDP

	qvmcall64 PROC
		push rsi					; push non-volatile registers to stack
		push rdi
		push rbx
		push rcx					; need to save pointer in rcx so we can write back the programData value to caller

		; registers r8 and r9 have correct value already thanx to __fastcall
		xor rbx, rbx				; opStackOfs starts out being 0
		mov rdi, rdx				; opStack
		mov esi, dword ptr [rcx]	; programStack

		call qword ptr [r8]			; instructionPointers[0] is also the entry point

		pop rcx

		mov dword ptr [rcx], esi	; write back the programStack value
		mov al, bl					; return opStack offset

		pop rbx
		pop rdi
		pop rsi

		ret
	qvmcall64 ENDP
ELSE
	Sys_SnapVector PROC
		mov eax, dword ptr 4[esp]	; store address of vector in eax
		movaps xmm1, ssemask		; initialize the mask register for maskmovdqu
		movups xmm0, [eax]			; here is stored our vector. Read 4 values in one go
		movaps xmm2, xmm0			; keep a copy of the original data
		andps xmm0, xmm1			; set the fourth value to zero in xmm0
		andnps xmm1, xmm2			; copy fourth value to xmm1 and set rest to zero
		cvtps2dq xmm0, xmm0			; convert 4 single fp to int
		cvtdq2ps xmm0, xmm0			; convert 4 int to single fp
		orps xmm0, xmm1				; combine all 4 values again
		movups [eax], xmm0			; write 3 rounded and 1 unchanged values back to memory
		ret
	Sys_SnapVector ENDP

	Q_ftol PROC
		movss xmm0, dword ptr [esp + 4]
		cvttss2si eax, xmm0
		ret
	Q_ftol ENDP

	Q_VMftol PROC
		movss xmm0, dword ptr [edi + ebx * 4]
		cvttss2si eax, xmm0
		ret
	Q_VMftol ENDP
ENDIF

end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vv220f
code,"
;   Copyright (C) 2007 Jeff Owens
;
;   This program is free software: you can redistribute it and/or modify
;   it under the terms of the GNU General Public License as published by
;   the Free Software Foundation, either version 3 of the License, or
;   (at your option) any later version.
;
;   This program is distributed in the hope that it will be useful,
;   but WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;   GNU General Public License for more details.
;
;   You should have received a copy of the GNU General Public License
;   along with this program.  If not, see <http://www.gnu.org/licenses/>.


  [section .text align=1]
  extern str_move

;****f* file/filename_extract *
;
; NAME
;>1 file
;    filename_extract - extract filename from full path
; INPUTS
;    esi = ptr to buffer for filename
;    edi = ptr to full path
; OUTPUT
;    esi points to end of full path
;    edi points to end end of extracted filename 
; NOTES
;    source file: file_name.asm
;<
;  * ----------------------------------------------
;*******
  global filename_extract
filename_extract:
  xor	eax,eax
fe_lpa:
  scasb			;scan for zero at end of full path
  jne	fe_lpa
  std
  mov	al,'/'
fe_lpb:
  scasb			;scan back to find last ""/""
  jne	fe_lpb
  xchg	esi,edi
  add	esi,2
  cld
  call	str_move	;move filename
  ret
;****f* file/filepath_extract *
;
; NAME
;>1 file
;  filepath_extract - extract path from path + name
; INPUTS
;    edi = ptr to full path
;    esi = buffer for path storage
; OUTPUT
;    edi = ptr to end of extracted path
;    esi = ptr to end of full path
;    ebx = ptr inside full path to filename
; NOTES
;    source file: file_name.asm
;<
;  * ----------------------------------------------
;*******
  global filepath_extract
filepath_extract:
  push	edi
  xor	eax,eax
fe_lpc:
  scasb			;find zero at end of full path
  jne	fe_lpc
  std
  mov	al,'/'
fe_lpd:
  scasb			;find last ""/""
  jne	fe_lpd
  add	edi,2
  mov	ebx,edi

  mov	edi,esi
  pop	esi
  cld
fe_lpx:
  lodsb
  stosb			;move path
  cmp	esi,ebx
  jne	fe_lpx
  mov	byte [edi],ah	;put zero at end of path
  ret
  	",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",06Tg8V
code,"; ( --  ) (C: ""<spaces>name"" -- )
; Compiler
; parse the input and create an empty vocabulary entry without XT and data field (PF)
VE_DOCREATE:
	.dw 	$ff08
	.db 	""(create)""
	.dw 	VE_HEAD
	.set 	VE_HEAD = VE_DOCREATE
XT_DOCREATE:
	.dw 	DO_COLON
PFA_DOCREATE:
	.dw 	XT_PARSENAME
	.dw 	XT_WLSCOPE
	.dw 	XT_DUP
	.dw 	XT_TO_R
	.dw 	XT_HEADER
	.dw 	XT_R_FROM
.dseg
COLON_SMUDGE: 	.byte 6		;nfa wid nesting
.cseg
	.dw 	XT_DOLITERAL
	.dw 	COLON_SMUDGE+2
	.dw 	XT_STORE	;wid
	.dw 	XT_DOLITERAL
	.dw 	COLON_SMUDGE+0
	.dw 	XT_STORE	;NFA
	.dw	XT_ZERO
	.dw	XT_DOLITERAL
	.dw	COLON_SMUDGE+4
	.dw	XT_STORE	;0 nesting
	.dw 	XT_EXIT
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EXyFOf
code,".proc INT_Setup
	ldy <kd_int
	ldx >kd_int
	lda #07			; 7 for deferred vector
	jsr SETVBV
	rts
.endp

.proc kd_int
	jsr INL_KeyService
	
	jmp XITVBV		; exit from interrupt handling routine
.endp",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pz-hlI
code,"; Copyright (c) 2004, Intel Corporation. All rights reserved.<BR>
; This program and the accompanying materials                          
; are licensed and made available under the terms and conditions of the BSD License         
; which accompanies this distribution.  The full text of the license may be found at        
; http://opensource.org/licenses/bsd-license.php                                            
;                                                                                           
; THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN ""AS IS"" BASIS,                     
; WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.    
;
; Module Name:
;
;   WriteDr0.Asm
;
; Abstract:
;
;   AsmWriteDr0 function
;
; Notes:
;
;------------------------------------------------------------------------------

    .code

;------------------------------------------------------------------------------
; UINTN
; EFIAPI
; AsmWriteDr0 (
;   IN UINTN Value
;   );
;------------------------------------------------------------------------------
AsmWriteDr0 PROC
    mov     dr0, rcx
    mov     rax, rcx
    ret
AsmWriteDr0 ENDP

    END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kbj-d9
code,"
ideal
p486

global upscroll: far


segment scroller_text word 'code'
assume cs: scroller_text

proc upscroll far
 push bp
 mov bp, sp    ; bp+8=seg bp+6=ofs
 push ds       ; -2
 push es       ; -4
 sub sp, 2     ; -6=a
 mov ax, 0A000h
 mov es, ax
 mov [word ss:bp-6], 199
 mov bl, 160
@@loopa:
 mov ax, 0A000h
 mov ds, ax
 mov ax, [ss:bp-6]
 mov cl, 2
 div cl
 cmp ah, 0
  je @@continue
 xor di, di
 mov si, 320
 mov ax, [ss: bp-6]
 imul cx, ax, 80
  rep movsd
@@continue:
 mov ax, [ss:bp+8]
 mov ds, ax
 mov ax, [ss:bp-6]
 mul bl
 shl ax, 1
 xor di, di
 add di, ax
 mov si, [ss:bp+6]
 mov ax, 200
 sub ax, [ss: bp-6]
 imul cx, ax, 80
  rep movsd
 dec [word ss:bp-6]
 cmp [word ss:bp-6], 65
  jg  @@loopa
 add sp, 2
 pop es
 pop ds
 pop bp
 retf 4
endp upscroll

ends scroller_text
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",slqFwR
code,"
SECTION code_driver
SECTION code_driver_terminal_input

PUBLIC console_01_input_proc_reset

EXTERN device_reset_error

defc console_01_input_proc_reset = device_reset_error
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dUUsDV
code,"; Returns SGN (SIGN) for 8 bits signed integer

__SGNI8:
	or a
	ret z
	ld a, 1
	ret p
	neg
	ret

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",seEfL-
code,";===============================================================================
; Copyright 2015-2020 Intel Corporation
;
; Licensed under the Apache License, Version 2.0 (the ""License"");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an ""AS IS"" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
;===============================================================================

;
;
;     Purpose:  Cryptography Primitive.
;               Rijndael Cipher function
;
;     Content:
;        EncryptCTR_RIJ128pipe_AES_NI()
;
;
%include ""asmdefs.inc""
%include ""ia_32e.inc""
%include ""ia_32e_regs.inc""
%include ""pcpvariant.inc""

%if (_AES_NI_ENABLING_ == _FEATURE_ON_) || (_AES_NI_ENABLING_ == _FEATURE_TICKTOCK_)
%if (_IPP32E >= _IPP32E_Y8)

segment .text align=IPP_ALIGN_FACTOR


align IPP_ALIGN_FACTOR
u128_str DB 15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0

;***************************************************************
;* Purpose:    pipelined RIJ128 CTR encryption/decryption
;*
;* void EncryptCTR_RIJ128pipe_AES_NI(const Ipp32u* inpBlk,
;*                                         Ipp32u* outBlk,
;*                                         int nr,
;*                                   const Ipp32u* pRKey,
;*                                         int length,
;*                                         Ipp8u* pCtrValue,
;*                                         Ipp8u* pCtrBitMask)
;***************************************************************

;;
;; Lib = Y8
;;
;; Caller = ippsAESEncryptCTR
;;
align IPP_ALIGN_FACTOR
IPPASM EncryptCTR_RIJ128pipe_AES_NI,PUBLIC
%assign LOCAL_FRAME 0
        USES_GPR rsi,rdi,rbx
        USES_XMM xmm6,xmm7,xmm8,xmm9
        COMP_ABI 7
;; rdi:        pInpBlk:     DWORD,    ; pointer to the input
;; rsi:        pOutBlk:     DWORD,    ; pointer to the output
;; rdx:        nr:              DWORD,    ; number of rounds
;; rcx         pKey:        DWORD     ; key material address
;; r8d         length:          DWORD     ; length of the input
;; r9          pCtrValue:   BYTED     ; pointer to the Counter
;; [rsp+ARG_7] pCtrBitMask: BYTE      ; pointer to the Counter Bit Mask

%xdefine SC  (4)
%assign BLKS_PER_LOOP  (4)
%assign BYTES_PER_BLK  (16)
%assign BYTES_PER_LOOP  (BYTES_PER_BLK*BLKS_PER_LOOP)

   mov      rax, [rsp+ARG_7]
   movdqu   xmm8, oword [rax]       ; counter bit mask

   movdqu   xmm0, oword [r9]        ; initial counter
   movdqa   xmm9, xmm8
   pandn    xmm9, xmm0                 ; counter template

   ;;
   ;; init counter
   ;;
   mov      rbx, qword [r9]         ; initial counter (BE)
   mov      rax, qword [r9+8]
   bswap    rbx
   bswap    rax

   movsxd   r8, r8d
   sub      r8, BYTES_PER_LOOP
   jl       .short_input

;;
;; pipelined processing
;;
.blks_loop:
   movdqa   xmm4,oword [rel u128_str]

   pinsrq   xmm0, rax, 0               ; get counter value
   pinsrq   xmm0, rbx, 1
   pshufb   xmm0, xmm4                 ; convert int the octet string
   pand     xmm0, xmm8                 ; select counter bits
   por      xmm0, xmm9                 ; add unchanged bits

   add      rax, 1
   adc      rbx, 0
   pinsrq   xmm1, rax, 0
   pinsrq   xmm1, rbx, 1
   pshufb   xmm1, xmm4
   pand     xmm1, xmm8
   por      xmm1, xmm9

   add      rax, 1
   adc      rbx, 0
   pinsrq   xmm2, rax, 0
   pinsrq   xmm2, rbx, 1
   pshufb   xmm2, xmm4
   pand     xmm2, xmm8
   por      xmm2, xmm9

   add      rax, 1
   adc      rbx, 0
   pinsrq   xmm3, rax, 0
   pinsrq   xmm3, rbx, 1
   pshufb   xmm3, xmm4
   pand     xmm3, xmm8
   por      xmm3, xmm9

   movdqa   xmm4, oword [rcx]
   mov      r10, rcx                   ; set pointer to the key material

   pxor     xmm0, xmm4                 ; whitening
   pxor     xmm1, xmm4
   pxor     xmm2, xmm4
   pxor     xmm3, xmm4

   movdqa   xmm4, oword [r10+16]
   add      r10, 16

   mov      r11, rdx                      ; counter depending on key length
   sub      r11, 1
.cipher_loop:
   aesenc      xmm0, xmm4                 ; regular round
   aesenc      xmm1, xmm4
   aesenc      xmm2, xmm4
   aesenc      xmm3, xmm4
   movdqa      xmm4, oword [r10+16]
   add         r10, 16
   dec         r11
   jnz         .cipher_loop

   aesenclast  xmm0, xmm4                 ; irregular round
   aesenclast  xmm1, xmm4
   aesenclast  xmm2, xmm4
   aesenclast  xmm3, xmm4

   movdqu      xmm4, oword [rdi+0*BYTES_PER_BLK]  ; 4 input blocks
   movdqu      xmm5, oword [rdi+1*BYTES_PER_BLK]
   movdqu      xmm6, oword [rdi+2*BYTES_PER_BLK]
   movdqu      xmm7, oword [rdi+3*BYTES_PER_BLK]
   add         rdi, BYTES_PER_LOOP

   pxor        xmm0, xmm4                 ; 4 output blocks
   movdqu      oword [rsi+0*BYTES_PER_BLK], xmm0
   pxor        xmm1, xmm5
   movdqu      oword [rsi+1*BYTES_PER_BLK], xmm1
   pxor        xmm2",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2NLgfd
code,";
;  Copyright (c) 2010 The WebM project authors. All Rights Reserved.
;
;  Use of this source code is governed by a BSD-style license
;  that can be found in the LICENSE file in the root of the source
;  tree. An additional intellectual property rights grant can be found
;  in the file PATENTS.  All contributing project authors may
;  be found in the AUTHORS file in the root of the source tree.
;

%include ""vpx_ports/x86_abi_support.asm""

%macro STACK_FRAME_CREATE_X3 0
%if ABI_IS_32BIT
  %define     src_ptr       rsi
  %define     src_stride    rax
  %define     ref_ptr       rdi
  %define     ref_stride    rdx
  %define     end_ptr       rcx
  %define     ret_var       rbx
  %define     result_ptr    arg(4)
  %define     max_err       arg(4)
  %define     height        dword ptr arg(4)
    push        rbp
    mov         rbp,        rsp
    push        rsi
    push        rdi
    push        rbx

    mov         rsi,        arg(0)              ; src_ptr
    mov         rdi,        arg(2)              ; ref_ptr

    movsxd      rax,        dword ptr arg(1)    ; src_stride
    movsxd      rdx,        dword ptr arg(3)    ; ref_stride
%else
  %if LIBVPX_YASM_WIN64
    SAVE_XMM 7, u
    %define     src_ptr     rcx
    %define     src_stride  rdx
    %define     ref_ptr     r8
    %define     ref_stride  r9
    %define     end_ptr     r10
    %define     ret_var     r11
    %define     result_ptr  [rsp+xmm_stack_space+8+4*8]
    %define     max_err     [rsp+xmm_stack_space+8+4*8]
    %define     height      dword ptr [rsp+xmm_stack_space+8+4*8]
  %else
    %define     src_ptr     rdi
    %define     src_stride  rsi
    %define     ref_ptr     rdx
    %define     ref_stride  rcx
    %define     end_ptr     r9
    %define     ret_var     r10
    %define     result_ptr  r8
    %define     max_err     r8
    %define     height      r8
  %endif
%endif

%endmacro

%macro STACK_FRAME_DESTROY_X3 0
  %define     src_ptr
  %define     src_stride
  %define     ref_ptr
  %define     ref_stride
  %define     end_ptr
  %define     ret_var
  %define     result_ptr
  %define     max_err
  %define     height

%if ABI_IS_32BIT
    pop         rbx
    pop         rdi
    pop         rsi
    pop         rbp
%else
  %if LIBVPX_YASM_WIN64
    RESTORE_XMM
  %endif
%endif
    ret
%endmacro

%macro STACK_FRAME_CREATE_X4 0
%if ABI_IS_32BIT
  %define     src_ptr       rsi
  %define     src_stride    rax
  %define     r0_ptr        rcx
  %define     r1_ptr        rdx
  %define     r2_ptr        rbx
  %define     r3_ptr        rdi
  %define     ref_stride    rbp
  %define     result_ptr    arg(4)
    push        rbp
    mov         rbp,        rsp
    push        rsi
    push        rdi
    push        rbx

    push        rbp
    mov         rdi,        arg(2)              ; ref_ptr_base

    LOAD_X4_ADDRESSES rdi, rcx, rdx, rax, rdi

    mov         rsi,        arg(0)              ; src_ptr

    movsxd      rbx,        dword ptr arg(1)    ; src_stride
    movsxd      rbp,        dword ptr arg(3)    ; ref_stride

    xchg        rbx,        rax
%else
  %if LIBVPX_YASM_WIN64
    SAVE_XMM 7, u
    %define     src_ptr     rcx
    %define     src_stride  rdx
    %define     r0_ptr      rsi
    %define     r1_ptr      r10
    %define     r2_ptr      r11
    %define     r3_ptr      r8
    %define     ref_stride  r9
    %define     result_ptr  [rsp+xmm_stack_space+16+4*8]
    push        rsi

    LOAD_X4_ADDRESSES r8, r0_ptr, r1_ptr, r2_ptr, r3_ptr
  %else
    %define     src_ptr     rdi
    %define     src_stride  rsi
    %define     r0_ptr      r9
    %define     r1_ptr      r10
    %define     r2_ptr      r11
    %define     r3_ptr      rdx
    %define     ref_stride  rcx
    %define     result_ptr  r8

    LOAD_X4_ADDRESSES rdx, r0_ptr, r1_ptr, r2_ptr, r3_ptr

  %endif
%endif
%endmacro

%macro STACK_FRAME_DESTROY_X4 0
  %define     src_ptr
  %define     src_stride
  %define     r0_ptr
  %define     r1_ptr
  %define     r2_ptr
  %define     r3_ptr
  %define     ref_stride
  %define     result_ptr

%if ABI_IS_32BIT
    pop         rbx
    pop         rdi
    pop         rsi
    pop         rbp
%else
  %if LIBVPX_YASM_WIN64
    pop         rsi
    RESTORE_XMM
  %endif
%endif
    ret
%endmacro

%macro PROCESS_16X2X3 5
%if %1==0
        movdqa          xmm0,       XMMWORD PTR [%2]
        lddqu           xmm5,       XMMWORD PTR [%3]
        lddqu           xmm6,       XMMWORD PTR [%3+1]
        lddqu           xmm7,       XMMWORD PTR [%3+2]

        psadbw          xmm5,       xmm0
        psadbw          xmm6,       xmm0
        psadbw          xmm7,       xmm0
%else
        movdqa          xmm0,       XMMWORD PTR [%2]
        lddqu           xmm1,       XMMWORD PTR [%3]
        lddqu           xmm2,       XMMWORD PTR [%3+1]
        lddqu           xmm3,       XMMWORD PTR [%3+2]

        psadbw          xmm1,       xmm0
        psadbw          xmm2,       xmm0
        psadbw          xmm3,       xmm0

        paddw           xmm5,       xmm1
        paddw           xmm6,       xmm2
        paddw           xmm7,       xmm3
%endif
        movdqa          xmm0,     ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bIDZYp
code,"
PUBLIC win_switch

_TEXT   SEGMENT

win_switch:
	mov	[rcx], rbp
	mov	[rcx + 008h], rbx

    mov	[rcx + 018h], rdx
	mov	[rcx + 020h], rsi
	mov	[rcx + 028h], rdi
	mov	[rcx + 030h], r12
	mov	[rcx + 038h], r13
	mov	[rcx + 040h], r14
	mov	[rcx + 048h], r15

	lea	rax, [rsp + 8]
	mov	[rcx + 050h], rax

	mov	rax, [rsp]
	mov	[rcx + 058h], rax

    mov	rcx, rdx

	mov	rbp, [rcx]
	mov	rbx, [rcx + 008h]

	mov	rdx, [rcx + 018h]
	mov	rsi, [rcx + 020h]
	mov	rdi, [rcx + 028h]
	mov	r12, [rcx + 030h]
	mov	r13, [rcx+ 038h]
	mov	r14, [rcx + 040h]
	mov	r15, [rcx + 048h]
	mov	rsp, [rcx + 050h]
	mov	rax, [rcx + 058h]

	mov	rcx, [rcx + 010h]
	push	rax
	xor		rax, rax

	ret

_TEXT   ENDS

END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4ecGpu
code,"cmd_fs/ext3/resize.o := ppc_4xx-gcc -m32 -Wp,-MD,fs/ext3/.resize.o.d  -nostdinc -isystem /tools/dev/eldk/usr/bin/../lib/gcc/powerpc-linux/4.2.2/include -I/tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -Iarch/powerpc -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -msoft-float -pipe -Iarch/powerpc -ffixed-r2 -mmultiple -mno-altivec -mno-spe -mspe=no -funit-at-a-time -mno-string -Wa,-m405 -fno-stack-protector -fomit-frame-pointer -g -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow   -D""KBUILD_STR(s)=\#s"" -D""KBUILD_BASENAME=KBUILD_STR(resize)""  -D""KBUILD_MODNAME=KBUILD_STR(ext3)""  -c -o fs/ext3/.tmp_resize.o fs/ext3/resize.c

deps_fs/ext3/resize.o := \
  fs/ext3/resize.c \
    $(wildcard include/config/lbdaf.h) \
  include/linux/ext3_jbd.h \
    $(wildcard include/config/quota.h) \
  include/linux/fs.h \
    $(wildcard include/config/dnotify.h) \
    $(wildcard include/config/sysfs.h) \
    $(wildcard include/config/smp.h) \
    $(wildcard include/config/fsnotify.h) \
    $(wildcard include/config/inotify.h) \
    $(wildcard include/config/security.h) \
    $(wildcard include/config/fs/posix/acl.h) \
    $(wildcard include/config/preempt.h) \
    $(wildcard include/config/epoll.h) \
    $(wildcard include/config/debug/writecount.h) \
    $(wildcard include/config/file/locking.h) \
    $(wildcard include/config/auditsyscall.h) \
    $(wildcard include/config/block.h) \
    $(wildcard include/config/fs/xip.h) \
    $(wildcard include/config/migration.h) \
  include/linux/limits.h \
  include/linux/ioctl.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/ioctl.h \
  include/asm-generic/ioctl.h \
  include/linux/linkage.h \
  include/linux/compiler.h \
    $(wildcard include/config/trace/branch/profiling.h) \
    $(wildcard include/config/profile/all/branches.h) \
    $(wildcard include/config/enable/must/check.h) \
    $(wildcard include/config/enable/warn/deprecated.h) \
  include/linux/compiler-gcc.h \
    $(wildcard include/config/arch/supports/optimized/inlining.h) \
    $(wildcard include/config/optimize/inlining.h) \
  include/linux/compiler-gcc4.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/linkage.h \
  include/linux/wait.h \
    $(wildcard include/config/lockdep.h) \
  include/linux/list.h \
    $(wildcard include/config/debug/list.h) \
  include/linux/stddef.h \
  include/linux/poison.h \
    $(wildcard include/config/illegal/pointer/value.h) \
  include/linux/prefetch.h \
  include/linux/types.h \
    $(wildcard include/config/uid16.h) \
    $(wildcard include/config/phys/addr/t/64bit.h) \
    $(wildcard include/config/64bit.h) \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/types.h \
    $(wildcard include/config/phys/64bit.h) \
  include/asm-generic/int-ll64.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/bitsperlong.h \
  include/asm-generic/bitsperlong.h \
  include/linux/posix_types.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/posix_types.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/processor.h \
    $(wildcard include/config/vsx.h) \
    $(wildcard include/config/ppc32.h) \
    $(wildcard include/config/ppc/prep.h) \
    $(wildcard include/config/task/size.h) \
    $(wildcard include/config/kernel/start.h) \
    $(wildcard include/config/ppc64.h) \
    $(wildcard include/config/4xx.h) \
    $(wildcard include/config/booke.h) \
    $(wildcard include/config/altivec.h) \
    $(wildcard include/config/spe.h) \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/reg.h \
    $(wildcard include/config/40x.h) \
    $(wildcard include/config/fsl/emb/perfmon.h) \
    $(wildcard include/config/8xx.h) \
    $(wildcard include/config/ppc/book3s/64.h) \
    $(wildcard include/config/ppc/book3s/32.h) \
    $(wildcard include/config/ppc/book3e/64.h) \
    $(wildcard include/config/e200.h) \
    $(wildcard include/config/ppc/cell.h) \
  include/linux/stringify.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/cputable.h \
    $(wildcard include/config/mpc10x/bridge.h) \
    $(wildcard include/config/ppc/83xx.h) \
    $(wildcard include/config/8260.h) \
    $(wildcard include/config/ppc/mpc52xx.h) \
    $(wildcard include/config/bdi/switch.h) \
    $(wildcard include/config/power3.h) \
    $(wildcard include/config/power4.h) \
    $(wildcard include/config/44x.h) \
    $(wildcard include/config/e500.h) \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/asm-compat.h \
    $(wildcard include/config/power4/only.h) \
    $(wildcard include/config/ibm405/err77.h) \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/feature-fixups.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/reg_booke.h \
    $(wildcard include/config/403gcx.h) \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/ptrace.h \
  /tools/dev/repos/linux-2.6-xlnx/arch/powerpc/include/asm/cache.h \
    $(wildc",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WYdme_
code,"brc32 ractl.rc -r -foractl.dcr
brc32 radb.rc -r -foradb.dcr
brc32 rai.rc -r -forai.dcr",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WW4N_G
code,"@echo off
rem
rem
rem    Licensed to the Apache Software Foundation (ASF) under one or more
rem    contributor license agreements.  See the NOTICE file distributed with
rem    this work for additional information regarding copyright ownership.
rem    The ASF licenses this file to You under the Apache License, Version 2.0
rem    (the ""License""); you may not use this file except in compliance with
rem    the License.  You may obtain a copy of the License at
rem
rem       http://www.apache.org/licenses/LICENSE-2.0
rem
rem    Unless required by applicable law or agreed to in writing, software
rem    distributed under the License is distributed on an ""AS IS"" BASIS,
rem    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
rem    See the License for the specific language governing permissions and
rem    limitations under the License.
rem

if not ""%ECHO%"" == """" echo %ECHO%

setlocal
set DIRNAME=%~dp0%
set PROGNAME=%~nx0%
set ARGS=%*

rem Sourcing environment settings for karaf similar to tomcats setenv
SET KARAF_SCRIPT=""shell.bat""
if exist ""%DIRNAME%setenv.bat"" (
  call ""%DIRNAME%setenv.bat""
)

rem Check console window title. Set to Karaf by default
if not ""%KARAF_TITLE%"" == """" (
    title %KARAF_TITLE%
) else (
    title Karaf
)

rem Check/Set up some easily accessible MIN/MAX params for JVM mem usage
if ""%JAVA_MIN_MEM%"" == """" (
    set JAVA_MIN_MEM=128M
)
if ""%JAVA_MAX_MEM%"" == """" (
    set JAVA_MAX_MEM=512M
)

goto BEGIN

:warn
    echo %PROGNAME%: %*
goto :EOF

:BEGIN

rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

if not ""%KARAF_HOME%"" == """" (
    call :warn Ignoring predefined value for KARAF_HOME
)
set KARAF_HOME=%DIRNAME%..
if not exist ""%KARAF_HOME%"" (
    call :warn KARAF_HOME is not valid: ""%KARAF_HOME%""
    goto END
)

if not ""%KARAF_BASE%"" == """" (
    if not exist ""%KARAF_BASE%"" (
       call :warn KARAF_BASE is not valid: ""%KARAF_BASE%""
       goto END
    )
)
if ""%KARAF_BASE%"" == """" (
  set ""KARAF_BASE=%KARAF_HOME%""
)

if not ""%KARAF_DATA%"" == """" (
    if not exist ""%KARAF_DATA%"" (
        call :warn KARAF_DATA is not valid: ""%KARAF_DATA%""
        goto END
    )
)
if ""%KARAF_DATA%"" == """" (
    set ""KARAF_DATA=%KARAF_BASE%\data""
)

if not ""%KARAF_ETC%"" == """" (
    if not exist ""%KARAF_ETC%"" (
        call :warn KARAF_ETC is not valid: ""%KARAF_ETC%""
        goto END
    )
)
if ""%KARAF_ETC%"" == """" (
    set ""KARAF_ETC=%KARAF_BASE%\etc""
)

set DEFAULT_JAVA_OPTS=
set DEFAULT_JAVA_DEBUG_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005

rem Support for loading native libraries
set PATH=%PATH%;%KARAF_BASE%\lib;%KARAF_HOME%\lib

rem Setup the Java Virtual Machine
if not ""%JAVA%"" == """" goto :Check_JAVA_END
    set JAVA=java
    if ""%JAVA_HOME%"" == """" call :warn JAVA_HOME not set; results may vary
    if not ""%JAVA_HOME%"" == """" set JAVA=%JAVA_HOME%\bin\java
    if not exist ""%JAVA_HOME%"" (
        call :warn JAVA_HOME is not valid: ""%JAVA_HOME%""
        goto END
    )
:Check_JAVA_END

if ""%JAVA_OPTS%"" == """" set JAVA_OPTS=%DEFAULT_JAVA_OPTS%

if ""%EXTRA_JAVA_OPTS%"" == """" goto :KARAF_EXTRA_JAVA_OPTS_END
    set JAVA_OPTS=""%JAVA_OPTS% %EXTRA_JAVA_OPTS%""
:KARAF_EXTRA_JAVA_OPTS_END

if ""%KARAF_DEBUG%"" == """" goto :KARAF_DEBUG_END
    rem Use the defaults if JAVA_DEBUG_OPTS was not set
    if ""%JAVA_DEBUG_OPTS%"" == """" set JAVA_DEBUG_OPTS=%DEFAULT_JAVA_DEBUG_OPTS%
    
    set JAVA_OPTS=""%JAVA_DEBUG_OPTS% %JAVA_OPTS%""
    call :warn Enabling Java debug options: %JAVA_DEBUG_OPTS%
:KARAF_DEBUG_END

set CLASSPATH=%KARAF_HOME%\system\org\apache\karaf\shell\org.apache.karaf.shell.console\2.4.0\org.apache.karaf.shell.console-2.4.0.jar
set CLASSPATH=%CLASSPATH%;%KARAF_HOME%\system\org\ops4j\pax\logging\pax-logging-api\1.7.4\pax-logging-api-1.7.4.jar

:EXECUTE
    if ""%SHIFT%"" == ""true"" SET ARGS=%2 %3 %4 %5 %6 %7 %8
    if not ""%SHIFT%"" == ""true"" SET ARGS=%1 %2 %3 %4 %5 %6 %7 %8
    rem Execute the Java Virtual Machine
    ""%JAVA%"" %JAVA_OPTS% %OPTS% -classpath ""%CLASSPATH%"" -Dkaraf.instances=""%KARAF_HOME%\instances"" -Dkaraf.home=""%KARAF_HOME%"" -Dkaraf.base=""%KARAF_BASE%"" -Dkaraf.data=""%KARAF_DATA%"" -Dkaraf.etc=""%KARAF_ETC%"" -Djava.io.tmpdir=""%KARAF_DATA%\tmp"" -Djava.util.logging.config.file=""%KARAF_ETC%\java.util.logging.properties"" %KARAF_OPTS% org.apache.karaf.shell.console.Main --classpath=""%KARAF_HOME%\system"" %ARGS%

rem # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

:END

endlocal
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SVRHYj
code,"@REM ----------------------------------------------------------------------------
@REM Licensed to the Apache Software Foundation (ASF) under one
@REM or more contributor license agreements.  See the NOTICE file
@REM distributed with this work for additional information
@REM regarding copyright ownership.  The ASF licenses this file
@REM to you under the Apache License, Version 2.0 (the
@REM ""License""); you may not use this file except in compliance
@REM with the License.  You may obtain a copy of the License at
@REM
@REM    https://www.apache.org/licenses/LICENSE-2.0
@REM
@REM Unless required by applicable law or agreed to in writing,
@REM software distributed under the License is distributed on an
@REM ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
@REM KIND, either express or implied.  See the License for the
@REM specific language governing permissions and limitations
@REM under the License.
@REM ----------------------------------------------------------------------------

@REM ----------------------------------------------------------------------------
@REM Maven Start Up Batch script
@REM
@REM Required ENV vars:
@REM JAVA_HOME - location of a JDK home dir
@REM
@REM Optional ENV vars
@REM M2_HOME - location of maven2's installed home dir
@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
@REM     e.g. to debug Maven itself, use
@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
@REM ----------------------------------------------------------------------------

@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
@echo off
@REM set title of command window
title %0
@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
@if ""%MAVEN_BATCH_ECHO%"" == ""on""  echo %MAVEN_BATCH_ECHO%

@REM set %HOME% to equivalent of $HOME
if ""%HOME%"" == """" (set ""HOME=%HOMEDRIVE%%HOMEPATH%"")

@REM Execute a user defined script before this one
if not ""%MAVEN_SKIP_RC%"" == """" goto skipRcPre
@REM check for pre script, once with legacy .bat ending and once with .cmd ending
if exist ""%HOME%\mavenrc_pre.bat"" call ""%HOME%\mavenrc_pre.bat""
if exist ""%HOME%\mavenrc_pre.cmd"" call ""%HOME%\mavenrc_pre.cmd""
:skipRcPre

@setlocal

set ERROR_CODE=0

@REM To isolate internal variables from possible post scripts, we use another setlocal
@setlocal

@REM ==== START VALIDATION ====
if not ""%JAVA_HOME%"" == """" goto OkJHome

echo.
echo Error: JAVA_HOME not found in your environment. >&2
echo Please set the JAVA_HOME variable in your environment to match the >&2
echo location of your Java installation. >&2
echo.
goto error

:OkJHome
if exist ""%JAVA_HOME%\bin\java.exe"" goto init

echo.
echo Error: JAVA_HOME is set to an invalid directory. >&2
echo JAVA_HOME = ""%JAVA_HOME%"" >&2
echo Please set the JAVA_HOME variable in your environment to match the >&2
echo location of your Java installation. >&2
echo.
goto error

@REM ==== END VALIDATION ====

:init

@REM Find the project base dir, i.e. the directory that contains the folder "".mvn"".
@REM Fallback to current working directory if not found.

set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
IF NOT ""%MAVEN_PROJECTBASEDIR%""=="""" goto endDetectBaseDir

set EXEC_DIR=%CD%
set WDIR=%EXEC_DIR%
:findBaseDir
IF EXIST ""%WDIR%""\.mvn goto baseDirFound
cd ..
IF ""%WDIR%""==""%CD%"" goto baseDirNotFound
set WDIR=%CD%
goto findBaseDir

:baseDirFound
set MAVEN_PROJECTBASEDIR=%WDIR%
cd ""%EXEC_DIR%""
goto endDetectBaseDir

:baseDirNotFound
set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
cd ""%EXEC_DIR%""

:endDetectBaseDir

IF NOT EXIST ""%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config"" goto endReadAdditionalConfig

@setlocal EnableExtensions EnableDelayedExpansion
for /F ""usebackq delims="" %%a in (""%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config"") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%

:endReadAdditionalConfig

SET MAVEN_JAVA_EXE=""%JAVA_HOME%\bin\java.exe""
set WRAPPER_JAR=""%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar""
set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain

set DOWNLOAD_URL=""https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar""

FOR /F ""tokens=1,2 delims=="" %%A IN (""%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties"") DO (
    IF ""%%A""==""wrapperUrl"" SET DOWNLOAD_URL=%%B
)

@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
if exist %WRAPPER_JAR% (
    if ""%MVNW_VERBOSE%"" == ""true"" (
        echo Found %WRAPPER_JAR%
    )
) else (
    if not ""%MVNW_REPOURL%"" == """" (
        SET DOWNLOAD_URL=""%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar""
    )
    if ""%MVNW_VERBOSE%"" == ""true"" (
        echo Couldn't find %WRAPPER_JAR%, downloading it ...
        echo Downloading from: %DOWNLOAD_URL",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",71Pcrl
code,..\bin\darknet-cpu.exe detector train obj.data yolo-obj.cfg,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Naps0g
code,"@ECHO OFF

if defined JAVA_HOME (
""%JAVA_HOME%\bin\java"" -Xmx512m -jar jsonde.jar
) ELSE (
java -Xmx512m -jar jsonde.jar
)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RNmKK3
code,"@rem Run Tests.  Run the regression test suite.
@rem Usage:  rt [-d] [-O] [-q] regrtest_args
@rem -d   Run Debug build (python_d.exe).  Else release build.
@rem -O   Run python.exe or python_d.exe (see -d) with -O.
@rem -q   ""quick"" -- normally the tests are run twice, the first time
@rem      after deleting all the .py[co] files reachable from Lib/.
@rem      -q runs the tests just once, and without deleting .py[co] files.
@rem All leading instances of these switches are shifted off, and
@rem whatever remains is passed to regrtest.py.  For example,
@rem     rt -O -d -x test_thread
@rem runs
@rem     python_d -O ../../lib/test/regrtest.py -x test_thread
@rem twice, and
@rem     rt -q -g test_binascii
@rem runs
@rem     python_d ../../lib/test/regrtest.py -g test_binascii
@rem to generate the expected-output file for binascii quickly.
@set _exe=python
@set _qmode=no
@set _dashO=
@goto CheckOpts
:Again
@shift
:CheckOpts
@if ""%1""==""-O"" set _dashO=-O
@if ""%1""==""-O"" goto Again
@if ""%1""==""-q"" set _qmode=yes
@if ""%1""==""-q"" goto Again
@if ""%1""==""-d"" set _exe=python_d
@if ""%1""==""-d"" goto Again
@if ""%_qmode%""==""yes"" goto Qmode
@echo Deleting .pyc/.pyo files ...
@%_exe% rmpyc.py
%_exe% %_dashO% -E ../../lib/test/regrtest.py %1 %2 %3 %4 %5 %6 %7 %8 %9
@echo About to run again without deleting .pyc/.pyo first:
@pause
:Qmode
%_exe% %_dashO% -E ../../lib/test/regrtest.py %1 %2 %3 %4 %5 %6 %7 %8 %9
@set _exe=
@set _qmode=
@set _dashO=
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rAraH4
code,"java -classpath build/classes javamonkey.app.gss.Server
pause",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RPSs8V
code,"@echo off
setlocal

call fb-init.bat

taskkill /im tgitcache.exe 1>NUL 2>NUL
if not exist fullbuild-init call fullbuild-init.bat || goto :ko
robocopy fullbuild-init fullbuild-do /MIR

pushd fullbuild-do

%FULLBUILD% index workspace || goto :ko
copy ..\Template.csproj .full-build || goto :ko
%FULLBUILD% convert projects || goto :ko
%FULLBUILD% init view fb with * || goto :ko
%FULLBUILD% generate view fb || goto :ko
%FULLBUILD% build view fb || goto :ko

:ok
echo *** SUCCESSFUL
exit /b 0

:ko
echo *** FAILURE
exit /b 0",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F0tlba
code,"@ECHO OFF
rem 设置字符编码为UTF-8。
chcp 65001 > nul
rem 启用延迟环境变量扩展
setlocal EnableDelayedExpansion
rem 提取Trove全部的资源文件。^
版本：v1.1.0^
https://github.com/Android-KitKat/TroveExtract^
将此文件放入游戏目录，运行此文件。^
资源文件将被提取到游戏目录的extracted文件夹。

rem 设置标题
title 提取资源文件
rem 判断是否存在Trove.exe
if not exist Trove.exe (
  echo Trove.exe不存在，请将此文件放入游戏目录。
  goto end
)
rem 游戏目录
set TROVEDIR=%~dp0
rem 遍历文件夹
for /R /D %%i in (*) do (
  rem 判断是否存在索引
  if exist %%i\index.tfi (
    rem 目标文件夹的相对路径
    set TARGETDIR=%%i
    set TARGETDIR=!TARGETDIR:%TROVEDIR%=!
    rem 提取资源文件
    echo 开始提取!TARGETDIR!
    Trove.exe -tool extractarchive !TARGETDIR! extracted\!TARGETDIR!
  )
)
echo 提取完成
:end
endlocal
pause
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zQ31Vm
code,"call mvn package
call createPlugin.cmd",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",p5aUrX
code,"@ECHO OFF

REM Command file for Sphinx documentation

if ""%SPHINXBUILD%"" == """" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=_build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
set I18NSPHINXOPTS=%SPHINXOPTS% .
if NOT ""%PAPER%"" == """" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
)

if ""%1"" == """" goto help

if ""%1"" == ""help"" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  texinfo    to make Texinfo files
	echo.  gettext    to make PO message catalogs
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  xml        to make Docutils-native XML files
	echo.  pseudoxml  to make pseudoxml-XML files for display purposes
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	goto end
)

if ""%1"" == ""clean"" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)


%SPHINXBUILD% 2> nul
if errorlevel 9009 (
	echo.
	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
	echo.installed, then set the SPHINXBUILD environment variable to point
	echo.to the full path of the 'sphinx-build' executable. Alternatively you
	echo.may add the Sphinx directory to PATH.
	echo.
	echo.If you don't have Sphinx installed, grab it from
	echo.http://sphinx-doc.org/
	exit /b 1
)

if ""%1"" == ""html"" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if ""%1"" == ""dirhtml"" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if ""%1"" == ""singlehtml"" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if ""%1"" == ""pickle"" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if ""%1"" == ""json"" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if ""%1"" == ""htmlhelp"" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if ""%1"" == ""qthelp"" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\flask_clacks.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\flask_clacks.ghc
	goto end
)

if ""%1"" == ""devhelp"" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if ""%1"" == ""epub"" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if ""%1"" == ""latex"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdf"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf
	cd %BUILDDIR%/..
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdfja"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf-ja
	cd %BUILDDIR%/..
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""text"" (
	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The text files are in %BUILDDIR%/text.
	goto end
)

if ""%1"" == ""man"" (
	%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The manual pages are in %BUILDDIR%/man.
	goto end
)

if ""%1"" == ""texinfo"" (
	%SPHINXBUILD% -b texinfo %ALLSPHINXOPTS% %BUILDDIR%/texinfo
	if errorlevel 1 ex",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P50_fT
code,"cmd_coreutils/tr.o := arm-linux-musleabihf-gcc -Wp,-MD,coreutils/.tr.o.d   -std=gnu99 -Iinclude -Ilibbb  -include include/autoconf.h -D_GNU_SOURCE -DNDEBUG -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D""BB_VER=KBUILD_STR(1.22.1)"" -DBB_BT=AUTOCONF_TIMESTAMP  -Wall -Wshadow -Wwrite-strings -Wundef -Wstrict-prototypes  -Wunused-function -Wunused-value -Wmissing-prototypes -Wmissing-declarations -Wno-format-security -Wdeclaration-after-statement -Wold-style-definition -fno-builtin-strlen -finline-limit=0 -fomit-frame-pointer -ffunction-sections -fdata-sections -fno-guess-branch-probability -funsigned-char -static-libgcc -falign-functions=1 -falign-jumps=1 -falign-labels=1 -falign-loops=1 -fno-unwind-tables -fno-asynchronous-unwind-tables -g -O0     -D""KBUILD_STR(s)=\#s"" -D""KBUILD_BASENAME=KBUILD_STR(tr)""  -D""KBUILD_MODNAME=KBUILD_STR(tr)"" -c -o coreutils/tr.o coreutils/tr.c

deps_coreutils/tr.o := \
  coreutils/tr.c \
    $(wildcard include/config/tr.h) \
    $(wildcard include/config/feature/tr/classes.h) \
    $(wildcard include/config/feature/tr/equiv.h) \
    $(wildcard include/config/feature/clean/up.h) \
  include/libbb.h \
    $(wildcard include/config/feature/shadowpasswds.h) \
    $(wildcard include/config/use/bb/shadow.h) \
    $(wildcard include/config/selinux.h) \
    $(wildcard include/config/feature/utmp.h) \
    $(wildcard include/config/locale/support.h) \
    $(wildcard include/config/use/bb/pwd/grp.h) \
    $(wildcard include/config/lfs.h) \
    $(wildcard include/config/feature/buffers/go/on/stack.h) \
    $(wildcard include/config/feature/buffers/go/in/bss.h) \
    $(wildcard include/config/feature/ipv6.h) \
    $(wildcard include/config/feature/seamless/xz.h) \
    $(wildcard include/config/feature/seamless/lzma.h) \
    $(wildcard include/config/feature/seamless/bz2.h) \
    $(wildcard include/config/feature/seamless/gz.h) \
    $(wildcard include/config/feature/seamless/z.h) \
    $(wildcard include/config/feature/check/names.h) \
    $(wildcard include/config/feature/prefer/applets.h) \
    $(wildcard include/config/long/opts.h) \
    $(wildcard include/config/feature/getopt/long.h) \
    $(wildcard include/config/feature/pidfile.h) \
    $(wildcard include/config/feature/syslog.h) \
    $(wildcard include/config/feature/individual.h) \
    $(wildcard include/config/echo.h) \
    $(wildcard include/config/printf.h) \
    $(wildcard include/config/test.h) \
    $(wildcard include/config/kill.h) \
    $(wildcard include/config/chown.h) \
    $(wildcard include/config/ls.h) \
    $(wildcard include/config/xxx.h) \
    $(wildcard include/config/route.h) \
    $(wildcard include/config/feature/hwib.h) \
    $(wildcard include/config/desktop.h) \
    $(wildcard include/config/feature/crond/d.h) \
    $(wildcard include/config/use/bb/crypt.h) \
    $(wildcard include/config/feature/adduser/to/group.h) \
    $(wildcard include/config/feature/del/user/from/group.h) \
    $(wildcard include/config/ioctl/hex2str/error.h) \
    $(wildcard include/config/feature/editing.h) \
    $(wildcard include/config/feature/editing/history.h) \
    $(wildcard include/config/feature/editing/savehistory.h) \
    $(wildcard include/config/feature/tab/completion.h) \
    $(wildcard include/config/feature/username/completion.h) \
    $(wildcard include/config/feature/editing/vi.h) \
    $(wildcard include/config/feature/editing/save/on/exit.h) \
    $(wildcard include/config/pmap.h) \
    $(wildcard include/config/feature/show/threads.h) \
    $(wildcard include/config/feature/ps/additional/columns.h) \
    $(wildcard include/config/feature/topmem.h) \
    $(wildcard include/config/feature/top/smp/process.h) \
    $(wildcard include/config/killall.h) \
    $(wildcard include/config/pgrep.h) \
    $(wildcard include/config/pkill.h) \
    $(wildcard include/config/pidof.h) \
    $(wildcard include/config/sestatus.h) \
    $(wildcard include/config/unicode/support.h) \
    $(wildcard include/config/feature/mtab/support.h) \
    $(wildcard include/config/feature/devfs.h) \
  include/platform.h \
    $(wildcard include/config/werror.h) \
    $(wildcard include/config/big/endian.h) \
    $(wildcard include/config/little/endian.h) \
    $(wildcard include/config/nommu.h) \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/limits.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/features.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/bits/limits.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/byteswap.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/stdint.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/bits/alltypes.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3/../../../../arm-linux-musleabihf/include/bits/stdint.h \
  /Volumes/ELFSOSX/tools/lib/gcc/arm-linux-musleabihf/4.7.3",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",b672ZN
code,"cmd_net/netfilter/xt_time.o := arm-eabi-gcc -Wp,-MD,net/netfilter/.xt_time.o.d  -nostdinc -isystem /data/repos/cm/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/../lib/gcc/arm-eabi/4.4.3/include -I/data/repos/kernels/arch/arm/include -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-msm/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -Os -marm -mabi=aapcs-linux -mno-thumb-interwork -funwind-tables -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=1024 -fno-stack-protector -fomit-frame-pointer -g -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack   -D""KBUILD_STR(s)=\#s"" -D""KBUILD_BASENAME=KBUILD_STR(xt_time)""  -D""KBUILD_MODNAME=KBUILD_STR(xt_time)"" -D""DEBUG_HASH=2"" -D""DEBUG_HASH2=50"" -c -o net/netfilter/xt_time.o net/netfilter/xt_time.c

deps_net/netfilter/xt_time.o := \
  net/netfilter/xt_time.c \
  include/linux/ktime.h \
    $(wildcard include/config/ktime/scalar.h) \
  include/linux/time.h \
    $(wildcard include/config/arch/uses/gettimeoffset.h) \
  include/linux/types.h \
    $(wildcard include/config/uid16.h) \
    $(wildcard include/config/lbdaf.h) \
    $(wildcard include/config/phys/addr/t/64bit.h) \
    $(wildcard include/config/64bit.h) \
  /data/repos/kernels/arch/arm/include/asm/types.h \
  include/asm-generic/int-ll64.h \
  /data/repos/kernels/arch/arm/include/asm/bitsperlong.h \
  include/asm-generic/bitsperlong.h \
  include/linux/posix_types.h \
  include/linux/stddef.h \
  include/linux/compiler.h \
    $(wildcard include/config/trace/branch/profiling.h) \
    $(wildcard include/config/profile/all/branches.h) \
    $(wildcard include/config/enable/must/check.h) \
    $(wildcard include/config/enable/warn/deprecated.h) \
  include/linux/compiler-gcc.h \
    $(wildcard include/config/arch/supports/optimized/inlining.h) \
    $(wildcard include/config/optimize/inlining.h) \
  include/linux/compiler-gcc4.h \
  /data/repos/kernels/arch/arm/include/asm/posix_types.h \
  include/linux/cache.h \
    $(wildcard include/config/smp.h) \
    $(wildcard include/config/arch/has/cache/line/size.h) \
  include/linux/kernel.h \
    $(wildcard include/config/preempt/voluntary.h) \
    $(wildcard include/config/debug/spinlock/sleep.h) \
    $(wildcard include/config/prove/locking.h) \
    $(wildcard include/config/printk.h) \
    $(wildcard include/config/dynamic/debug.h) \
    $(wildcard include/config/ring/buffer.h) \
    $(wildcard include/config/tracing.h) \
    $(wildcard include/config/numa.h) \
    $(wildcard include/config/ftrace/mcount/record.h) \
  /data/repos/cm/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/../lib/gcc/arm-eabi/4.4.3/include/stdarg.h \
  include/linux/linkage.h \
  /data/repos/kernels/arch/arm/include/asm/linkage.h \
  include/linux/bitops.h \
    $(wildcard include/config/generic/find/first/bit.h) \
    $(wildcard include/config/generic/find/last/bit.h) \
    $(wildcard include/config/generic/find/next/bit.h) \
  /data/repos/kernels/arch/arm/include/asm/bitops.h \
  /data/repos/kernels/arch/arm/include/asm/system.h \
    $(wildcard include/config/cpu/xsc3.h) \
    $(wildcard include/config/cpu/fa526.h) \
    $(wildcard include/config/arch/has/barriers.h) \
    $(wildcard include/config/arm/dma/mem/bufferable.h) \
    $(wildcard include/config/cpu/sa1100.h) \
    $(wildcard include/config/cpu/sa110.h) \
    $(wildcard include/config/cpu/32v6k.h) \
  include/linux/irqflags.h \
    $(wildcard include/config/trace/irqflags.h) \
    $(wildcard include/config/irqsoff/tracer.h) \
    $(wildcard include/config/preempt/tracer.h) \
    $(wildcard include/config/trace/irqflags/support.h) \
  include/linux/typecheck.h \
  /data/repos/kernels/arch/arm/include/asm/irqflags.h \
  /data/repos/kernels/arch/arm/include/asm/ptrace.h \
    $(wildcard include/config/cpu/endian/be8.h) \
    $(wildcard include/config/arm/thumb.h) \
  /data/repos/kernels/arch/arm/include/asm/hwcap.h \
  /data/repos/kernels/arch/arm/include/asm/outercache.h \
    $(wildcard include/config/outer/cache/sync.h) \
    $(wildcard include/config/outer/cache.h) \
  include/asm-generic/cmpxchg-local.h \
  include/asm-generic/bitops/non-atomic.h \
  include/asm-generic/bitops/fls64.h \
  include/asm-generic/bitops/sched.h \
  include/asm-generic/bitops/hweight.h \
  include/asm-generic/bitops/arch_hweight.h \
  include/asm-generic/bitops/const_hweight.h \
  include/asm-generic/bitops/lock.h \
  include/linux/log2.h \
    $(wildcard include/config/arch/has/ilog2/u32.h) \
    $(wildcard include/config/arch/has/ilog2/u64.h) \
  include/linux/dynamic_debug.h \
  /data/repos/kernels/arch/arm/include/asm/byteorder.h \
  include/linux/byteorder/little_endian.h \
  include/linux/swab.h \
  /data/repos/kernels/arch/arm/include/asm/swab.h \
  include/linux/byteorder/generic.h \
  /data/repos/kernels/arch/arm/include/asm/bug.h \
    $(wildcard include/config/bug.h) \
    $(wildcard include/config/debug/bugverbose.h) \
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",a5khmf
code,"@echo off

REM *****************************************************************************
REM
REM Pentaho Data Integration
REM
REM Copyright (C) 2012-2017 by Pentaho : http://www.pentaho.com
REM
REM *****************************************************************************
REM
REM Licensed under the Apache License, Version 2.0 (the ""License"");
REM you may not use this file except in compliance with
REM the License. You may obtain a copy of the License at
REM
REM    http://www.apache.org/licenses/LICENSE-2.0
REM
REM Unless required by applicable law or agreed to in writing, software
REM distributed under the License is distributed on an ""AS IS"" BASIS,
REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
REM See the License for the specific language governing permissions and
REM limitations under the License.
REM
REM *****************************************************************************

echo SpoonDebug is to support you in finding unusual errors and start problems.
echo -

set SPOON_CONSOLE=1

echo This starts Spoon with a console output with the following options:
echo -
echo Pause after the termination?
echo (helps in finding start problems and unusual crashes of the JVM)
choice /C NYC /N /M ""Pause? (Y=Yes, N=No, C=Cancel)""
if errorlevel == 3 exit
if errorlevel == 2 set SPOON_PAUSE=1

echo -
echo Set logging level to Debug? (default: Basic logging)
choice /C NYC /N /M ""Debug? (Y=Yes, N=No, C=Cancel)""
if errorlevel == 3 exit
if errorlevel == 2 set SPOON_OPTIONS=/level:Debug

echo -
echo Redirect console output to SpoonDebug.txt in the actual Spoon directory?
choice /C NYC /N /M ""Redirect to SpoonDebug.txt? (Y=Yes, N=No, C=Cancel)""
if errorlevel == 3 exit
if errorlevel == 2 set SPOON_REDIRECT=1
REM We need to disable the pause in this case otherwise the user does not see the pause message
if errorlevel == 2 set SPOON_PAUSE=

echo -
echo Launching Spoon: ""%~dp0spoon.bat"" %SPOON_OPTIONS%
if not ""%SPOON_REDIRECT%""==""1"" ""%~dp0spoon.bat"" %SPOON_OPTIONS%
if ""%SPOON_REDIRECT%""==""1"" echo Console output gets redirected to ""%~dp0SpoonDebug.txt""
if ""%SPOON_REDIRECT%""==""1"" ""%~dp0spoon.bat"" %SPOON_OPTIONS% >>""%~dp0SpoonDebug.txt"" 2>&1

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FZxGDP
code,"set GOROOT=C:\go_appengine\goroot
C:\go_appengine\dev_appserver.py .

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oMTbKb
code,"@echo off

set ""command=%~1""
if defined command (
  if ""%command%""==""available"" (
    for /F ""tokens=*"" %%A in (%WPM_HOME%\wpm\etc\available.txt) do echo %%A
  )
  if ""%command%""==""installed"" (
    for /F ""tokens=*"" %%A in (%WPM_HOME%\wpm\etc\installed.txt) do echo %%A
  )
)        


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Rcqu_S
code,"SET JVM_OPT=-XX:MaxMetaspaceSize=256M
START javaw %JVM_OPT% -jar logbook-kai.jar
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yFiJCh
code,"@echo off
setlocal

rem Use dynamic shaders to build .inc files only
rem set dynamic_shaders=0
rem == Setup path to nmake.exe, from vc 2005 common tools directory ==
call ""%VS100COMNTOOLS%vsvars32.bat""

rem ================================
rem ==== MOD PATH CONFIGURATIONS ===

rem == Set the absolute path to your mod's game directory here ==
rem == Note that this path needs does not support long file/directory names ==
rem == So instead of a path such as ""C:\Program Files\Steam\steamapps\mymod"" ==
rem == you need to find the 8.3 abbreviation for the directory name using 'dir /x' ==
rem == and set the directory to something like C:\PROGRA~2\Steam\steamapps\sourcemods\mymod ==
set GAMEDIR=E:\STEAMA~1\SOURCE~1\shelter

rem == Set the relative path to SourceSDK\bin\orangebox\bin ==
rem == As above, this path does not support long directory names or spaces ==
rem == e.g. ..\..\..\..\..\PROGRA~2\Steam\steamapps\<USER NAME>\sourcesdk\bin\orangebox\bin ==
set SDKBINDIR=..\..\..\..\..\..\STEAMA~1\common\ALIENS~1\bin

rem ==  Set the Path to your mods root source code ==
rem this should already be correct, accepts relative paths only!
set SOURCEDIR=..\..

rem ==== MOD PATH CONFIGURATIONS END ===
rem ====================================





set TTEXE=..\..\devtools\bin\timeprecise.exe
if not exist %TTEXE% goto no_ttexe
goto no_ttexe_end

:no_ttexe
set TTEXE=time /t
:no_ttexe_end


rem echo.
rem echo ~~~~~~ buildsdkshaders %* ~~~~~~
%TTEXE% -cur-Q
set tt_all_start=%ERRORLEVEL%
set tt_all_chkpt=%tt_start%

set BUILD_SHADER=call buildshaders.bat
set ARG_EXTRA=

%BUILD_SHADER% deferred_shaders -game %GAMEDIR% -source %SOURCEDIR% -dx9_30 -force30


rem echo.
if not ""%dynamic_shaders%"" == ""1"" (
  rem echo Finished full buildallshaders %*
) else (
  rem echo Finished dynamic buildallshaders %*
)

rem %TTEXE% -diff %tt_all_start% -cur
rem echo.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WJVftt
code,"for %%f in (*.ttf) do (
    ""C:\Program Files\7-Zip\7z.exe"" a -tgzip ""%%f.gz"" ""%%f""
)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",S3DyEE
code,"@echo off
cd build\gamed\
gdb intwars.exe",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",y6rZZV
code,"echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_antivirus.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_dht.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_locations.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_log.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_mediainfo.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_queue.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_stat.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_transfers.sqlite
echo PRAGMA integrity_check; vacuum; PRAGMA integrity_check; | sqlite3.exe FlylinkDC_user.sqlite
pause",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Hg1jgS
code,"javac -extdirs lib/ core/*.java
javac -extdirs lib/ movement/*.java
javac -extdirs lib/ report/*.java
javac -extdirs lib/ routing/*.java
javac -extdirs lib/ gui/*.java
javac -extdirs lib/ input/*.java
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qynTDL
code,"@ECHO OFF

REM Command file for Sphinx documentation

if ""%SPHINXBUILD%"" == """" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=_build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
set I18NSPHINXOPTS=%SPHINXOPTS% .
if NOT ""%PAPER%"" == """" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
)

if ""%1"" == """" goto help

if ""%1"" == ""help"" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  texinfo    to make Texinfo files
	echo.  gettext    to make PO message catalogs
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	goto end
)

if ""%1"" == ""clean"" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)

if ""%1"" == ""html"" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if ""%1"" == ""dirhtml"" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if ""%1"" == ""singlehtml"" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if ""%1"" == ""pickle"" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if ""%1"" == ""json"" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if ""%1"" == ""htmlhelp"" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if ""%1"" == ""qthelp"" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\pigasus.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\pigasus.ghc
	goto end
)

if ""%1"" == ""devhelp"" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if ""%1"" == ""epub"" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if ""%1"" == ""latex"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""text"" (
	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The text files are in %BUILDDIR%/text.
	goto end
)

if ""%1"" == ""man"" (
	%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The manual pages are in %BUILDDIR%/man.
	goto end
)

if ""%1"" == ""texinfo"" (
	%SPHINXBUILD% -b texinfo %ALLSPHINXOPTS% %BUILDDIR%/texinfo
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The Texinfo files are in %BUILDDIR%/texinfo.
	goto end
)

if ""%1"" == ""gettext"" (
	%SPHINXBUILD% -b gettext %I18NSPHINXOPTS% %BUILDDIR%/locale
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The message catalogs are in %BUILDDIR%/locale.
	goto end
)

if ""%1"" == ""changes"" (
	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
	if errorlevel 1 exit /b 1
	echo.
	echo.The overview file is in %BUILDDIR%/changes.
	goto end
)

if ""%1"" == ""linkcheck"" (
	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
	if errorlevel 1 exit /b 1
	echo.
	echo.Link check complete; look for any errors in the above output ^
or in %BUILDDIR%/linkcheck/output.txt.
	goto end
)

if ""%1"" == ""doctest"" (
	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
	if errorlevel 1 exit /b 1
	echo.
	echo.Testing of doctests in the sources finished, look at the ^
results in %BUILDDIR%/doctest/output.txt.
	goto end
)

:end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UweH2p
code,"svn export --force http://svn.red-bean.com/bob/macholib/trunk/macholib/ .
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dJf727
code,"set MATLAB=C:\PROGRAMS\MATLAB\R2014a
c:\gccdist\supp\setup-gcc.bat && make -f button_switch.mk  NIDEBUG=0 NIOPT=""Default"" OPTS=""""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",duyPqn
code,"@echo off
echo Coping librgbledctrl.dll to %WINDIR%\
echo ...
copy lib\win\librgbledctrl.dll %WINDIR%\
pause",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0xBm0J
code,"@echo off
cmake -H. -BBuild -G ""Visual Studio 11 Win64""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tZssja
code,"@echo off
setlocal

echo.
echo WARNING: YOU ARE GOING TO DO A BRUTE FORCE REINTEGRATION
pause
echo.
echo I hope you know what you're doing
pause

if .%1.==.. goto usage
if not .%2.==.. set client_flag=-c %2
if .%2.==.pause. set pause_end=pause
if .%3.==.pause. set pause_end=pause
if .%4.==.pause. set pause_end=pause
set to_main_mergeflags=-at
if .%2.==.mutex. set to_main_mergeflags=-at
if .%3.==.mutex. set to_main_mergeflags=-at
if .%4.==.mutex. set to_main_mergeflags=-at

set dir=from_main
p4 %client_flag% info | grep ""Client name"" | grep -q ""main""
if not errorlevel 1 set dir=to_main

if .%dir%.==.to_main. set reverse_flag=-r
if .%dir%.==.to_main. set from_to=to
if .%dir%.==.to_main. set merge_flags=%to_main_mergeflags%
if .%dir%.==.from_main. set from_to=from
if .%dir%.==.from_main. set merge_flags=-at

echo Integrate %from_to% main, client:
p4 %client_flag% info | grep ""Client name"" | sed ""s/Client name: /    /""
echo Using branchspec:
echo     %1
echo.

echo.
echo Checking if integration needed...

p4 %client_flag% integrate %reverse_flag% -n -f -d -i -b %1 ... 2>&1 | grep -q ""All revision(s) already integrated""
if not errorlevel 1 goto nothing_to_do
echo.
echo Starting integration...

p4 %client_flag% opened 2>&1 | grep -q ""File(s) not opened on this client""
if not errorlevel 1 goto prep_changelist

echo.
echo WARNING: You have files opened on this client. It is recommended you submit
echo          changes prior to doing an integraton. 
echo.
pause

:prep_changelist

p4 %client_flag% opened 2>&1 | grep -q ""edit default""
if errorlevel 1 goto integrate

echo.
echo Moving files in default changelist to new changelist...
p4 %client_flag% change -o | sed -e ""s/<enter description here>/Pre-merge default/g"" | p4 %client_flag% change -i

:integrate

echo.
echo Syncing...
p4 %client_flag% sync

echo.
echo Integrating...

p4 %client_flag% integrate %reverse_flag% -f -d -i -b %1 ... 

p4 %client_flag% opened 2>&1 | grep -q ""integrate default""
if errorlevel 1 goto nofiles

echo.
echo Creating new changlist, description ""Forced reintegration %from_to% main (%1)""
p4 %client_flag% change -o | sed -e ""s/<enter description here>/Forced reintegration %from_to% main (%1)/g"" | p4 %client_flag% change -i

echo.
echo Resolving...
p4 %client_flag% resolve -n 2>&1 | grep -q ""No file(s) to resolve.""
if not errorlevel 1 goto end

p4 %client_flag% resolve %merge_flags%
p4 %client_flag% resolve -at .../*.lib
p4 %client_flag% resolve -at .../*.exe
p4 %client_flag% resolve -at .../*.dll
echo.
echo.
echo Pause carefully examine results before submitting
echo.
echo.
pause

p4 %client_flag% resolve -n 2>&1 | grep -q ""No file(s) to resolve.""
if not errorlevel 1 goto end

echo.
echo.
echo ** The following files still require resolving:
echo.
p4 %client_flag% resolve -n | sed -e ""s/ - merging.*//g""

goto end

:nothing_to_do
echo All revision(s) already integrated.
goto end

:usage
echo p4mf [branch] [clientname]
echo Merge from specified branch
goto end

:nofiles
Echo no files to integrate?

:end
echo Done.
%pause_end%",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7auKtm
code,"cmd_arch/arm/lib/strrchr.o := arm-linux-gnueabihf-gcc -Wp,-MD,arch/arm/lib/.strrchr.o.d  -nostdinc -isystem /usr/lib/gcc/arm-linux-gnueabihf/4.6/include -I/home/tyler/dev/rk3188/tylermk908/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-rk3188/include -Iarch/arm/plat-rk/include -D__ASSEMBLY__ -mabi=aapcs-linux -mno-thumb-interwork -funwind-tables  -D__LINUX_ARM_ARCH__=7 -march=armv7-a  -include asm/unified.h -msoft-float        -c -o arch/arm/lib/strrchr.o arch/arm/lib/strrchr.S

source_arch/arm/lib/strrchr.o := arch/arm/lib/strrchr.S

deps_arch/arm/lib/strrchr.o := \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/unified.h \
    $(wildcard include/config/arm/asm/unified.h) \
    $(wildcard include/config/thumb2/kernel.h) \
  include/linux/linkage.h \
  include/linux/compiler.h \
    $(wildcard include/config/sparse/rcu/pointer.h) \
    $(wildcard include/config/trace/branch/profiling.h) \
    $(wildcard include/config/profile/all/branches.h) \
    $(wildcard include/config/enable/must/check.h) \
    $(wildcard include/config/enable/warn/deprecated.h) \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/linkage.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/assembler.h \
    $(wildcard include/config/cpu/feroceon.h) \
    $(wildcard include/config/trace/irqflags.h) \
    $(wildcard include/config/smp.h) \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/ptrace.h \
    $(wildcard include/config/cpu/endian/be8.h) \
    $(wildcard include/config/arm/thumb.h) \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/hwcap.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/domain.h \
    $(wildcard include/config/io/36.h) \
    $(wildcard include/config/cpu/use/domains.h) \

arch/arm/lib/strrchr.o: $(deps_arch/arm/lib/strrchr.o)

$(deps_arch/arm/lib/strrchr.o):
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OlxuFQ
code,"cd svplayer.msi\WiX
build.bat
cd ..\Transform
build.bat",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xpxn7c
code,"cmd_mm/mremap.o := arm-linux-gnueabihf-gcc -Wp,-MD,mm/.mremap.o.d  -nostdinc -isystem /usr/lib/gcc/arm-linux-gnueabihf/4.6/include -I/home/tyler/dev/rk3188/tylermk908/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-rk3188/include -Iarch/arm/plat-rk/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -marm -fno-dwarf2-cfi-asm -mabi=aapcs-linux -mno-thumb-interwork -funwind-tables -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fomit-frame-pointer -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO    -D""KBUILD_STR(s)=\#s"" -D""KBUILD_BASENAME=KBUILD_STR(mremap)""  -D""KBUILD_MODNAME=KBUILD_STR(mremap)"" -c -o mm/mremap.o mm/mremap.c

source_mm/mremap.o := mm/mremap.c

deps_mm/mremap.o := \
  include/linux/mm.h \
    $(wildcard include/config/discontigmem.h) \
    $(wildcard include/config/sysctl.h) \
    $(wildcard include/config/mmu.h) \
    $(wildcard include/config/stack/growsup.h) \
    $(wildcard include/config/ia64.h) \
    $(wildcard include/config/transparent/hugepage.h) \
    $(wildcard include/config/numa.h) \
    $(wildcard include/config/sparsemem.h) \
    $(wildcard include/config/sparsemem/vmemmap.h) \
    $(wildcard include/config/highmem.h) \
    $(wildcard include/config/ksm.h) \
    $(wildcard include/config/arch/populates/node/map.h) \
    $(wildcard include/config/have/arch/early/pfn/to/nid.h) \
    $(wildcard include/config/proc/fs.h) \
    $(wildcard include/config/debug/pagealloc.h) \
    $(wildcard include/config/hibernation.h) \
    $(wildcard include/config/hugetlbfs.h) \
  include/linux/errno.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/errno.h \
  include/asm-generic/errno.h \
  include/asm-generic/errno-base.h \
  include/linux/gfp.h \
    $(wildcard include/config/kmemcheck.h) \
    $(wildcard include/config/zone/dma.h) \
    $(wildcard include/config/zone/dma32.h) \
  include/linux/mmzone.h \
    $(wildcard include/config/force/max/zoneorder.h) \
    $(wildcard include/config/smp.h) \
    $(wildcard include/config/memory/hotplug.h) \
    $(wildcard include/config/compaction.h) \
    $(wildcard include/config/flat/node/mem/map.h) \
    $(wildcard include/config/cgroup/mem/res/ctlr.h) \
    $(wildcard include/config/no/bootmem.h) \
    $(wildcard include/config/have/memory/present.h) \
    $(wildcard include/config/have/memoryless/nodes.h) \
    $(wildcard include/config/need/node/memmap/size.h) \
    $(wildcard include/config/need/multiple/nodes.h) \
    $(wildcard include/config/flatmem.h) \
    $(wildcard include/config/sparsemem/extreme.h) \
    $(wildcard include/config/have/arch/pfn/valid.h) \
    $(wildcard include/config/nodes/span/other/nodes.h) \
    $(wildcard include/config/holes/in/zone.h) \
    $(wildcard include/config/arch/has/holes/memorymodel.h) \
  include/linux/spinlock.h \
    $(wildcard include/config/debug/spinlock.h) \
    $(wildcard include/config/generic/lockbreak.h) \
    $(wildcard include/config/preempt.h) \
    $(wildcard include/config/debug/lock/alloc.h) \
  include/linux/typecheck.h \
  include/linux/preempt.h \
    $(wildcard include/config/debug/preempt.h) \
    $(wildcard include/config/preempt/tracer.h) \
    $(wildcard include/config/preempt/notifiers.h) \
  include/linux/thread_info.h \
    $(wildcard include/config/compat.h) \
  include/linux/types.h \
    $(wildcard include/config/uid16.h) \
    $(wildcard include/config/lbdaf.h) \
    $(wildcard include/config/arch/dma/addr/t/64bit.h) \
    $(wildcard include/config/phys/addr/t/64bit.h) \
    $(wildcard include/config/64bit.h) \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/types.h \
  include/asm-generic/int-ll64.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/bitsperlong.h \
  include/asm-generic/bitsperlong.h \
  include/linux/posix_types.h \
  include/linux/stddef.h \
  include/linux/compiler.h \
    $(wildcard include/config/sparse/rcu/pointer.h) \
    $(wildcard include/config/trace/branch/profiling.h) \
    $(wildcard include/config/profile/all/branches.h) \
    $(wildcard include/config/enable/must/check.h) \
    $(wildcard include/config/enable/warn/deprecated.h) \
  include/linux/compiler-gcc.h \
    $(wildcard include/config/arch/supports/optimized/inlining.h) \
    $(wildcard include/config/optimize/inlining.h) \
  include/linux/compiler-gcc4.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/posix_types.h \
  include/linux/bitops.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/bitops.h \
  /home/tyler/dev/rk3188/tylermk908/arch/arm/include/asm/system.h \
    $(wildcard include/config/function/graph/tracer.h) \
    $(wildcard include/config/cpu/32v6k.h) \
    $(wildcard include/config/cpu/xsc3.h) \
    $(wildcard include/config/cpu/fa526.h) \
    $(wildcard include/config/arch/has/",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AzIR5t
code,"@ECHO OFF

REM Command file for Sphinx documentation

if ""%SPHINXBUILD%"" == """" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=_build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
set I18NSPHINXOPTS=%SPHINXOPTS% .
if NOT ""%PAPER%"" == """" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
)

if ""%1"" == """" goto help

if ""%1"" == ""help"" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  texinfo    to make Texinfo files
	echo.  gettext    to make PO message catalogs
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  xml        to make Docutils-native XML files
	echo.  pseudoxml  to make pseudoxml-XML files for display purposes
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	echo.  coverage   to run coverage check of the documentation if enabled
	goto end
)

if ""%1"" == ""clean"" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)


REM Check if sphinx-build is available and fallback to Python version if any
%SPHINXBUILD% 2> nul
if errorlevel 9009 goto sphinx_python
goto sphinx_ok

:sphinx_python

set SPHINXBUILD=python -m sphinx.__init__
%SPHINXBUILD% 2> nul
if errorlevel 9009 (
	echo.
	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
	echo.installed, then set the SPHINXBUILD environment variable to point
	echo.to the full path of the 'sphinx-build' executable. Alternatively you
	echo.may add the Sphinx directory to PATH.
	echo.
	echo.If you don't have Sphinx installed, grab it from
	echo.http://sphinx-doc.org/
	exit /b 1
)

:sphinx_ok


if ""%1"" == ""html"" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if ""%1"" == ""dirhtml"" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if ""%1"" == ""singlehtml"" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if ""%1"" == ""pickle"" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if ""%1"" == ""json"" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if ""%1"" == ""htmlhelp"" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if ""%1"" == ""qthelp"" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\ReproZip.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\ReproZip.ghc
	goto end
)

if ""%1"" == ""devhelp"" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if ""%1"" == ""epub"" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if ""%1"" == ""latex"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdf"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf
	cd %~dp0
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdfja"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf-ja
	cd %~dp0
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""text",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XNgE6l
code,java -jar lib/start.jar jetty.xml,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SUG-W3
code,"@ECHO OFF
@echo ´ËÅú´¦ÀíÓÉVigorÕûÀí·¢²¼
@echo ¡¡¡¡
@echo ÇåÀí¼¸¸ö±È½Ï¶àÀ¬»øÎÄ¼þµÄµØ·½
DEL /F /S /Q ""C:\WINDOWS\PCHealth\ERRORREP\QSIGNOFF\*.*""
DEL /F /S /Q ""C:\WINDOWS\PCHealth\ERRORREP\UserDumps\*.*""
DEL /F /S /Q ""C:\WINDOWS\system32\LogFiles\HTTPERR\*.*""
DEL /F /S /Q ""C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\Temporary ASP.NET Files\*.*""
DEL /F /S /Q ""C:\WINDOWS\Microsoft.NET\Framework\v1.1.4322\Temporary ASP.NET Files\*.*""
DEL /F /S /Q ""C:\windows\temp\*.*""
DEL /F /S /Q /A:S ""C:\WINDOWS\IIS Temporary Compressed Files\*.*""

@echo É¾³ý²¹¶¡±¸·ÝÄ¿Â¼ 
RD %windir%\$hf_mig$ /Q /S 

@echo °Ñ²¹¶¡Ð¶ÔØÎÄ¼þ¼ÐµÄÃû×Ö±£´æ³É2950800.txt 
dir %windir%\$NtUninstall* /a:d /b >%windir%\2950800.txt 

@echo ´Ó2950800.txtÖÐ¶ÁÈ¡ÎÄ¼þ¼ÐÁÐ±í²¢ÇÒÉ¾³ýÎÄ¼þ¼Ð 
for /f %%i in (%windir%\2950800.txt) do rd %windir%\%%i /s /q 

@echo É¾³ý2950800.txt 
del %windir%\2950800.txt /f /q 

@echo É¾³ý²¹¶¡°²×°¼ÇÂ¼ÄÚÈÝ£¨ÏÂÃæµÄdel /f /s /q %systemdrive%\*.logÒÑ¾­°üº¬É¾³ý´ËÀàÎÄ¼þ£© 
del %windir%\KB*.log /f /q 

@echo É¾³ýÏµÍ³ÅÌÄ¿Â¼ÏÂÁÙÊ±ÎÄ¼þ 
del /f /s /q %systemdrive%\*.tmp 

@echo É¾³ýÏµÍ³ÅÌÄ¿Â¼ÏÂÁÙÊ±ÎÄ¼þ 
del /f /s /q %systemdrive%\*._mp 

@echo É¾³ýÏµÍ³ÅÌÄ¿Â¼ÏÂÈÕÖ¾ÎÄ¼þ 
del /f /s /q %systemdrive%\*.log 

@echo É¾³ýÏµÍ³ÅÌÄ¿Â¼ÏÂGIDÎÄ¼þ(ÊôÓÚÁÙÊ±ÎÄ¼þ£¬¾ßÌå×÷ÓÃ²»Ïê) 
del /f /s /q %systemdrive%\*.gid 

@echo É¾³ýÏµÍ³Ä¿Â¼ÏÂscandisk£¨´ÅÅÌÉ¨Ãè£©ÁôÏÂµÄÎÞÓÃÎÄ¼þ 
del /f /s /q %systemdrive%\*.chk 

@echo É¾³ýÏµÍ³Ä¿Â¼ÏÂoldÎÄ¼þ 
del /f /s /q %systemdrive%\*.old 

@echo É¾³ý»ØÊÕÕ¾µÄÎÞÓÃÎÄ¼þ 
del /f /s /q %systemdrive%\recycled\*.* 

@echo É¾³ýÏµÍ³Ä¿Â¼ÏÂ±¸·ÝÎÄ¼þ 
del /f /s /q %windir%\*.bak 

@echo É¾³ýÓ¦ÓÃ³ÌÐòÁÙÊ±ÎÄ¼þ 
del /f /s /q %windir%\prefetch\*.* 

@echo É¾³ýÏµÍ³Î¬»¤µÈ²Ù×÷²úÉúµÄÁÙÊ±ÎÄ¼þ 
del /f /s /q %windir%\temp\*.* 

@echo É¾³ýµ±Ç°ÓÃ»§µÄCOOKIE£¨IE£© 
del /f /s /q %userprofile%\cookies\*.* 

@echo É¾³ýinternetÁÙÊ±ÎÄ¼þ 
del /f /s /q ""%userprofile%\local settings\temporary internet files\*.*"" 

@echo É¾³ýµ±Ç°ÓÃ»§ÈÕ³£²Ù×÷ÁÙÊ±ÎÄ¼þ 
del /f /s /q ""%userprofile%\local settings\temp\*.*"" 

@echo É¾³ý·ÃÎÊ¼ÇÂ¼£¨¿ªÊ¼²Ëµ¥ÖÐµÄÎÄµµÀïÃæµÄ¶«Î÷£© 
del /f /s /q ""%userprofile%\recent\*.*""",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TUGECQ
code,"@echo off

: this is a comment
:: this is a comment
REM this is a comment too

ECHO Hello &::This is a comment

ECHO Multiple line comments
GOTO after_comment
Hello
This is really free text!
The interpreter will not execute those lines

:after_comment
ECHO End of multiple line comments
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5rdGxx
code,"@echo off
setlocal enableextensions enabledelayedexpansion

:: Script to build RStudio Desktop for Windows using Docker
:: 
:: Requires a Windows machine, with Docker installed and set to use Windows
:: containers, and the RStudio repo cloned onto the machine. Then simply execute
:: this script from a command prompt in rstudio\docker directory.
::
:: For best reproduction of an official build use a pristine repo containing no 
:: previous local builds or installed dependencies. For example you could use
:: git clean -ffdx.
::
:: Reason: The entire repo is copied into the container on each run (see comment
:: later in this script on why this is).

set IMAGE=windows
set FLAVOR=desktop

REM set destination folder
set PKG_DIR=""%cd%""\package
if not exist %PKG_DIR% (
    md %PKG_DIR%
)

REM move to the repo root (script's parent directory)
cd %~dp0\..

REM determine repo name
set CURRENTDIR=""%cd%""
for /F ""delims="" %%i in (""%cd%"") do set REPO=%%~nxi

REM check to see if there's already a built image
set TEMPFILE=%TEMP%\docker-compile~%RANDOM%.txt
docker images %REPO%:%IMAGE% --format ""{{.ID}}"" > %TEMPFILE%
set /p IMAGEID= < %TEMPFILE%
del %TEMPFILE%
if DEFINED IMAGEID (
    echo Found image %IMAGEID% for %REPO%:%IMAGE%.
) else (
    echo No image found for %REPO%:%IMAGE%.
)

REM get build arg env vars, if any
if defined DOCKER_GITHUB_LOGIN (
    set ""BUILD_ARGS=--build-arg GITHUB_LOGIN=%DOCKER_GITHUB_LOGIN%""
    echo ""!BUILD_ARGS!""
)

REM rebuild the image if necessary
docker build --tag %REPO%:%IMAGE% --file docker\jenkins\Dockerfile.%IMAGE% %BUILD_ARGS% -m 4GB .\docker\jenkins

REM set up build flags
git rev-parse HEAD > %TEMPFILE%
set /p GIT_COMMIT= < %TEMPFILE%
del %TEMPFILE%
set BUILD_ID=local

REM infer make parallelism
set ""MAKEFLAGS=-j%NUMBER_OF_PROCESSORS%""

REM remove previous image if it exists
set CONTAINER_ID=build-%REPO%-%IMAGE%
echo Cleaning up container %CONTAINER_ID% if it exists...
docker rm %CONTAINER_ID%

for %%A in (""%cd%"") do set HOSTPATH=%%~sA

echo Creating container %CONTAINER_ID%...
docker create -m 6GB -i --name %CONTAINER_ID% %REPO%:%IMAGE% cmd.exe

:: Copy sources into the container; a volume mount doesn't work due to problems with the 
:: MSVC toolchain used by RStudio: https://github.com/docker/for-win/issues/829
::
:: This issue is apparently fixed in latest MSVC 2019 so can reevaluate this approach when
:: we update to newer toolchain and use -v %HOSTPATH%:c:/src instead of copying repo.
:: 
:: A volume mount does work when using ""--isolation process"" but this mode of operation
:: requires a close Windows version match between the base image and the host operating
:: system (largely defeating the whole point of containerization).
::
:: https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/version-compatibility
::
echo Copying repo into container...
docker cp %HOSTPATH% %CONTAINER_ID%:/src

echo Starting container...
docker start %CONTAINER_ID%

echo Installing dependencies...
docker exec %CONTAINER_ID% cmd.exe /C ""cd \src\dependencies\windows && set RSTUDIO_SKIP_QT=1 && install-dependencies.cmd""

echo Building RStudio...
docker exec %CONTAINER_ID% cmd.exe /C ""cd \src\package\win32 && make-package.bat clean""

echo Stopping container...
docker stop %CONTAINER_ID%

if ""%REPO%"" == ""rstudio-pro"" (
    set PKG_FILENAME=RStudio-pro-99.9.9-RelWithDebInfo
) ELSE (
    set PKG_FILENAME=RStudio-99.9.9-RelWithDebInfo
)
echo Copying build result (%PKG_FILENAME%.zip) to %HOSTPATH%/docker/package
docker cp %CONTAINER_ID%:/src/package/win32/build/%PKG_FILENAME%.zip %HOSTPATH%/docker/package/%PKG_FILENAME%.zip

echo Copying build result (%PKG_FILENAME%.exe) to %HOSTPATH%/docker/package
docker cp %CONTAINER_ID%:/src/package/win32/build/%PKG_FILENAME%.exe %HOSTPATH%/docker/package/%PKG_FILENAME%.exe
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LN4cU1
code,"
22MFQ-HDH7V-RBV79-QMVK9-PTMXQ


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XEBX6H
code,"@ECHO OFF

SET APP_HOME=%~dp0..
SET APP_NAME=${app.name}

SET BOOTSTRAP_JAR=${app.boot}
SET APP_TARGET=${app.target}
SET OPTIONS=-Dlogback.configurationFile=config/logback.xml

@ECHO ON
cd %APP_HOME%
java -Dapp.home=%APP_HOME% ^
     -Dapp.name=%APP_NAME% ^
     %OPTIONS%             ^
     ${jvm.options}        ^
     -jar %BOOTSTRAP_JAR%  ^
     %APP_TARGET%
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kHbbeg
code,"@SET WIRESHARKVERSION=1.4.4
@SET WIRESHARKSOURCEDIR=D:\workspace\wireshark-1.4.4
@SET WIRESHARKINSTALLDIR=C:\Program Files\Wireshark
@SET WIRESHARKDEFINITIONSDIR=D:\workspace\converter\install\asterix
@SET ASTERIXSOURCEDIR=D:\workspace\converter\src\asterix
@SET ASTERIXSOURCEDIR=D:\workspace\converter\src\asterix

cd /d %WIRESHARKSOURCEDIR%/plugins
mkdir asterix
cd asterix

cp %ASTERIXSOURCEDIR%/wireshark-plugin/* %WIRESHARKSOURCEDIR%/plugins/asterix
cp %ASTERIXSOURCEDIR%/expat/* %WIRESHARKSOURCEDIR%/plugins/asterix
cp %ASTERIXSOURCEDIR%/* %WIRESHARKSOURCEDIR%/plugins/asterix

rem call ""C:\Program Files\Microsoft Visual Studio 9.0\VC\bin\vcvars32.bat""
@SET VSINSTALLDIR=C:\Program Files\Microsoft Visual Studio 9.0
@SET VCINSTALLDIR=C:\Program Files\Microsoft Visual Studio 9.0\VC
@SET FrameworkDir=C:\WINDOWS\Microsoft.NET\Framework
@SET FrameworkVersion=v2.0.50727
@SET Framework35Version=v3.5
@if ""%VSINSTALLDIR%""=="""" goto error_no_VSINSTALLDIR
@if ""%VCINSTALLDIR%""=="""" goto error_no_VCINSTALLDIR

@echo Setting environment for using Microsoft Visual Studio 2008 x86 tools.

@call :GetWindowsSdkDir

@if not ""%WindowsSdkDir%"" == """" (
	set ""PATH=%WindowsSdkDir%bin;%PATH%""
	set ""INCLUDE=%WindowsSdkDir%include;%INCLUDE%""
	set ""LIB=%WindowsSdkDir%lib;%LIB%""
)


@rem
@rem Root of Visual Studio IDE installed files.
@rem
@set DevEnvDir=C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE

@set PATH=C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE;C:\Program Files\Microsoft Visual Studio 9.0\VC\BIN;C:\Program Files\Microsoft Visual Studio 9.0\Common7\Tools;C:\WINDOWS\Microsoft.NET\Framework\v3.5;C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727;C:\Program Files\Microsoft Visual Studio 9.0\VC\VCPackages;%PATH%
@set INCLUDE=C:\Program Files\Microsoft Visual Studio 9.0\VC\INCLUDE;%INCLUDE%
@set LIB=C:\Program Files\Microsoft Visual Studio 9.0\VC\LIB;%LIB%
@set LIBPATH=C:\WINDOWS\Microsoft.NET\Framework\v3.5;C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727;C:\Program Files\Microsoft Visual Studio 9.0\VC\LIB;%LIBPATH%

@goto end

:GetWindowsSdkDir
@call :GetWindowsSdkDirHelper HKLM > nul 2>&1
@if errorlevel 1 call :GetWindowsSdkDirHelper HKCU > nul 2>&1
@if errorlevel 1 set WindowsSdkDir=%VCINSTALLDIR%\PlatformSDK\
@exit /B 0

:GetWindowsSdkDirHelper
@for /F ""tokens=1,2*"" %%i in ('reg query ""%1\SOFTWARE\Microsoft\Microsoft SDKs\Windows"" /v ""CurrentInstallFolder""') DO (
	if ""%%i""==""CurrentInstallFolder"" (
		SET ""WindowsSdkDir=%%k""
	)
)
@if ""%WindowsSdkDir%""=="""" exit /B 1
@exit /B 0

:error_no_VSINSTALLDIR
@echo ERROR: VSINSTALLDIR variable is not set. 
@goto end

:error_no_VCINSTALLDIR
@echo ERROR: VCINSTALLDIR variable is not set. 
@goto end

:end


nmake -f Makefile.nmake clean
nmake -f Makefile.nmake all

cp asterix.dll ""%WIRESHARKINSTALLDIR%\plugins\%WIRESHARKVERSION%""
cp %WIRESHARKDEFINITIONSDIR%/asterix*.xml ""%WIRESHARKINSTALLDIR%\plugins""
cp %WIRESHARKDEFINITIONSDIR%/asterix.ini ""%WIRESHARKINSTALLDIR%\plugins""

pause",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0JlsUi
code,"del bin\server\*.* /Q
del bin\client\*.* /Q
REM del tcp.jar
groovyc -cp .;%GROOVY_HOME%\embeddable\groovy-all-2.3.0.jar -d bin -j -Jsourcepath src src/Main.groovy
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YvJXF3
code,"::
:: Copyright 2015-2022 Real Logic Limited.
::
:: Licensed under the Apache License, Version 2.0 (the ""License"");
:: you may not use this file except in compliance with the License.
:: You may obtain a copy of the License at
::
:: https://www.apache.org/licenses/LICENSE-2.0
::
:: Unless required by applicable law or agreed to in writing, software
:: distributed under the License is distributed on an ""AS IS"" BASIS,
:: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
:: See the License for the specific language governing permissions and
:: limitations under the License.
::
@echo off
setlocal EnableExtensions EnableDelayedExpansion

set ""DIR=%~dp0""

call ""%DIR%\..\run-java.cmd"" ^
  uk.co.real_logic.benchmarks.grpc.remote.EchoServer ^
  ""%DIR%\benchmark.properties"" ^
  %*
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",I9sSMA
code,"universe = scheduler
executable = ./job_dagman_rm-nodeE.pl
arguments = ""job_dagman_rm-NodeE-job $(DAGManJobId)""
transfer_input_files = CondorTest.pm, Condor.pm, CondorUtils.pm, CondorPersonal.pm
log = job_dagman_rm-nodeE.log
output = job_dagman_rm-nodeE.out
error = job_dagman_rm-nodeE.err
notification = NEVER
queue
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JvikSz
code,"@ECHO OFF

REM Command file for Sphinx documentation

if ""%SPHINXBUILD%"" == """" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=_build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
if NOT ""%PAPER%"" == """" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
)

if ""%1"" == """" goto help

if ""%1"" == ""help"" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	goto end
)

if ""%1"" == ""clean"" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)

if ""%1"" == ""html"" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if ""%1"" == ""dirhtml"" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if ""%1"" == ""singlehtml"" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if ""%1"" == ""pickle"" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if ""%1"" == ""json"" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if ""%1"" == ""htmlhelp"" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if ""%1"" == ""qthelp"" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\django-secure.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\django-secure.ghc
	goto end
)

if ""%1"" == ""devhelp"" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if ""%1"" == ""epub"" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if ""%1"" == ""latex"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""text"" (
	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The text files are in %BUILDDIR%/text.
	goto end
)

if ""%1"" == ""man"" (
	%SPHINXBUILD% -b man %ALLSPHINXOPTS% %BUILDDIR%/man
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The manual pages are in %BUILDDIR%/man.
	goto end
)

if ""%1"" == ""changes"" (
	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
	if errorlevel 1 exit /b 1
	echo.
	echo.The overview file is in %BUILDDIR%/changes.
	goto end
)

if ""%1"" == ""linkcheck"" (
	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
	if errorlevel 1 exit /b 1
	echo.
	echo.Link check complete; look for any errors in the above output ^
or in %BUILDDIR%/linkcheck/output.txt.
	goto end
)

if ""%1"" == ""doctest"" (
	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
	if errorlevel 1 exit /b 1
	echo.
	echo.Testing of doctests in the sources finished, look at the ^
results in %BUILDDIR%/doctest/output.txt.
	goto end
)

:end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dtaYIF
code,"npm install
git clone https://github.com/xiangming/landscape-plus.git themes/landscape-plus
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4iZa3_
code,"@ECHO OFF

REM Command file for Sphinx documentation

if ""%SPHINXBUILD%"" == """" (
	set SPHINXBUILD=sphinx-build
)
set BUILDDIR=build
set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% source
set I18NSPHINXOPTS=%SPHINXOPTS% source
if NOT ""%PAPER%"" == """" (
	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
	set I18NSPHINXOPTS=-D latex_paper_size=%PAPER% %I18NSPHINXOPTS%
)

if ""%1"" == """" goto help

if ""%1"" == ""help"" (
	:help
	echo.Please use `make ^<target^>` where ^<target^> is one of
	echo.  html       to make standalone HTML files
	echo.  dirhtml    to make HTML files named index.html in directories
	echo.  singlehtml to make a single large HTML file
	echo.  pickle     to make pickle files
	echo.  json       to make JSON files
	echo.  htmlhelp   to make HTML files and a HTML help project
	echo.  qthelp     to make HTML files and a qthelp project
	echo.  devhelp    to make HTML files and a Devhelp project
	echo.  epub       to make an epub
	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
	echo.  text       to make text files
	echo.  man        to make manual pages
	echo.  texinfo    to make Texinfo files
	echo.  gettext    to make PO message catalogs
	echo.  changes    to make an overview over all changed/added/deprecated items
	echo.  xml        to make Docutils-native XML files
	echo.  pseudoxml  to make pseudoxml-XML files for display purposes
	echo.  linkcheck  to check all external links for integrity
	echo.  doctest    to run all doctests embedded in the documentation if enabled
	echo.  coverage   to run coverage check of the documentation if enabled
	goto end
)

if ""%1"" == ""clean"" (
	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
	del /q /s %BUILDDIR%\*
	goto end
)


REM Check if sphinx-build is available and fallback to Python version if any
%SPHINXBUILD% 2> nul
if errorlevel 9009 goto sphinx_python
goto sphinx_ok

:sphinx_python

set SPHINXBUILD=python -m sphinx.__init__
%SPHINXBUILD% 2> nul
if errorlevel 9009 (
	echo.
	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
	echo.installed, then set the SPHINXBUILD environment variable to point
	echo.to the full path of the 'sphinx-build' executable. Alternatively you
	echo.may add the Sphinx directory to PATH.
	echo.
	echo.If you don't have Sphinx installed, grab it from
	echo.http://sphinx-doc.org/
	exit /b 1
)

:sphinx_ok


if ""%1"" == ""html"" (
	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
	goto end
)

if ""%1"" == ""dirhtml"" (
	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
	goto end
)

if ""%1"" == ""singlehtml"" (
	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
	goto end
)

if ""%1"" == ""pickle"" (
	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the pickle files.
	goto end
)

if ""%1"" == ""json"" (
	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can process the JSON files.
	goto end
)

if ""%1"" == ""htmlhelp"" (
	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run HTML Help Workshop with the ^
.hhp project file in %BUILDDIR%/htmlhelp.
	goto end
)

if ""%1"" == ""qthelp"" (
	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
.qhcp project file in %BUILDDIR%/qthelp, like this:
	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\django-blast.qhcp
	echo.To view the help file:
	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\django-blast.ghc
	goto end
)

if ""%1"" == ""devhelp"" (
	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% %BUILDDIR%/devhelp
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished.
	goto end
)

if ""%1"" == ""epub"" (
	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The epub file is in %BUILDDIR%/epub.
	goto end
)

if ""%1"" == ""latex"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdf"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf
	cd %~dp0
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""latexpdfja"" (
	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
	cd %BUILDDIR%/latex
	make all-pdf-ja
	cd %~dp0
	echo.
	echo.Build finished; the PDF files are in %BUILDDIR%/latex.
	goto end
)

if ""%1"" == ""text"" (
	%SPHINXBUILD% -b text %ALLSPHINXOPTS% %BUILDDIR%/text
	if errorlevel 1 exit /b 1
	echo.
	echo.Build finished. The text files are in %BUILDDIR%/text.
	goto en",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",roySGT
code,"@echo off
echo ####################################################
echo ###### Uninstalling all dependencys and builds #####
echo ####################################################

setlocal
:PROMPT
SET /P AREYOUSURE=Are you sure you want to proceed (Y/[N])?
IF /I ""%AREYOUSURE%"" NEQ ""Y"" GOTO END
call grunt delete
rd node_modules /s /q
rd htdocs /s /q

echo ##### Files and Folders deleted #####
PAUSE",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rBewZm
code,"@echo off

start """" ""C:\Program Files (x86)\LOVE\love"" .",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fb3Pbl
code,"@echo off
setlocal

if not ""%FEDORA_HOME%"" == """" goto gotFedoraHome
echo ERROR: The FEDORA_HOME environment variable is not defined.
exit /B 1
:gotFedoraHome

set LAUNCHER=""%FEDORA_HOME%\client\bin\env-client.bat""

if not ""%5""=="""" goto enoughArgs
echo ERROR: Not enough arguments.
echo Usage:
echo   fedora-ingest-demos host port user password protocol [context]
echo Example:
echo   fedora-ingest-demos localhost 8080 fedoraAdmin fedoraAdmin http my-fedora
exit /B 1
:enoughArgs

set DEMO_PATH=""%FEDORA_HOME%\client\demo\foxml\local-server-demos""
set DEMO_FORMAT=info:fedora/fedora-system:FOXML-1.1

set ARGS=d
set ARGS=%ARGS% %DEMO_PATH%
set ARGS=%ARGS% %DEMO_FORMAT%
set ARGS=%ARGS% ""%1:%2"" %3 %4 %5 """" %6

call %LAUNCHER% org.fcrepo.client.utility.ingest.Ingest %ARGS%",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wLQX6X
code,blunder.exe main.lua 10x10+500+500,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RuZAIw
code,"#ifndef LWEXML_H
#define LWEXML_H
#include <LWCore/LWText.h>
#include <functional>
#include ""LWETypes.h""

#define LWEXMLMAXNAMELEN 32
#define LWEXMLMAXVALUELEN 256
#define LWEXMLMAXTEXTLEN 1024

struct LWXMLAttribute {
	char m_Name[LWEXMLMAXNAMELEN];
	char m_Value[LWEXMLMAXVALUELEN];
};

struct LWEXMLNode {
	enum {
		MaxAttributes = 32
	};
	LWXMLAttribute m_Attributes[MaxAttributes];
	char m_Text[LWEXMLMAXTEXTLEN];
	char m_Name[LWEXMLMAXNAMELEN];
	uint32_t m_AttributeCount;
	LWEXMLNode *m_Parent;
	LWEXMLNode *m_Next;
	LWEXMLNode *m_FirstChild;
	LWEXMLNode *m_LastChild;

	bool PushAttribute(const char *Name, const char *Value);

	bool PushAttributef(const char *Name, const char *ValueFmt, ...);

	bool RemoveAttribute(uint32_t i);

	bool RemoveAttribute(LWXMLAttribute *Attr);

	LWEXMLNode &SetName(const char *Name);

	LWEXMLNode &SetText(const char *Text);

	LWEXMLNode &SetTextf(const char *TextFmt, ...);

	LWXMLAttribute *FindAttribute(const LWText &Name);
};

struct LWEXMLParser {
	char m_Name[LWEXMLMAXNAMELEN];
	std::function<bool(LWEXMLNode *, void *, LWEXML *)> m_Callback;
	void *m_UserData;
};

class LWEXML {
public:
	enum {
		NodePoolSize = 256,
		MaxParsers = 32
	};

	static bool LoadFile(LWEXML &XML, LWAllocator &Allocator, const LWText &Path, bool StripFormatting, LWEXMLNode *Parent, LWEXMLNode *Prev, LWFileStream *ExistingStream = nullptr);

	static bool LoadFile(LWEXML &XML, LWAllocator &Allocator, const LWText &Path, bool StripFormatting, LWFileStream *ExistingStream = nullptr);

	static bool ParseBuffer(LWEXML &XML, LWAllocator &Allocator, const char *Buffer, bool StripFormatting, LWEXMLNode *Parent, LWEXMLNode *Prev);

	static bool ParseBuffer(LWEXML &XML, LWAllocator &Allocator, const char *Buffer, bool StripFormatting);

	static uint32_t ConstructBuffer(LWEXML &XML, char *Buffer, uint32_t BufferLen, bool Format);

	LWEXMLNode *NextNode(LWEXMLNode *Current, bool SkipChildren=false);

	LWEXMLNode *NextNode(LWEXMLNode *Current, LWEXMLNode *Top, bool SkipChildren = false);

	LWEXMLNode *NextNodeWithName(LWEXMLNode *Current, const LWText &Name, bool SkipChildren =false);

	template<class Method, class Obj>
	LWEXML &PushMethodParser(const LWText &XMLNodeName, Method CB, Obj *O, void *UserData) {
		return PushParser(XMLNodeName, std::bind(CB, O, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3), UserData);
	}

	LWEXML &PushParser(const LWText &XMLNodeName, std::function<bool(LWEXMLNode*, void*, LWEXML*)> Callback, void *UserData);

	LWEXML &Process(void);

	LWEXMLNode *GetInsertedNodeAfter(LWEXMLNode *Parent, LWEXMLNode *Prev, LWAllocator &Allocator);

	LWEXMLNode *GetFirstNode(void);

	LWEXMLNode *GetLastNode(void);

	LWEXML();

	~LWEXML();

private:
	LWEXMLNode **m_NodePool;
	LWEXMLParser m_Parsers[MaxParsers];
	uint32_t m_NodeCount;
	uint32_t m_ParserCount;
	LWEXMLNode *m_FirstNode;
	LWEXMLNode *m_LastNode;
};

#endif",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qjjjBT
code,"
#include ""../include/csl.h""

void
MultipleEscape ( )
{
    _MultipleEscape ( _Context_->Lexer0 ) ;
}

void
CSL_Strlen ( )
{
    DataStack_Push ( (int64) Strlen ( (char*) DataStack_Pop ( ) ) ) ;
}

void
CSL_Strcmp ( )
{
    DataStack_Push ( (int64) Strcmp ( (byte*) DataStack_Pop ( ), (byte*) DataStack_Pop ( ) ) ) ;
}

void
CSL_Stricmp ( )
{
    DataStack_Push ( (int64) Stricmp ( (byte*) DataStack_Pop ( ), (byte*) DataStack_Pop ( ) ) ) ;
}

//char * strcat ( char * destination, const char * source );
void
CSL_StrCat ( )
{
    //Buffer * b = Buffer_New ( BUFFER_SIZE ) ;  
    byte * buffer = Buffer_Data ( _CSL_->StrCatBuffer );  byte *str ;
    char * src = (char*) DataStack_Pop ( ) ;
    char * dst = (char*) DataStack_Pop ( ) ;
    strcpy ( (char*) buffer, dst ) ;
    if (src) strcat ( (char *) buffer, src ) ; 
    str = String_New ( buffer, TEMPORARY ) ; //String_New ( (byte*) buffer, DICTIONARY ) ;
    DataStack_Push ( (int64) str ) ;
    //Buffer_SetAsUnused ( b ) ; ;
}

void
CSL_StrCpy ( )
{
    // !! nb. this cant really work !! what do we want here ??
    DataStack_Push ( (int64) strcpy ( (char*) DataStack_Pop ( ), (char*) DataStack_Pop ( ) ) ) ;
}

void
String_GetStringToEndOfLine ( )
{
    DataStack_Push ( (int64) _String_Get_ReadlineString_ToEndOfLine ( ) ) ;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",n9qa3G
code,"/***************************************************************************
 *   Project TUPITUBE DESK                                                *
 *   Project Contact: info@maefloresta.com                                 *
 *   Project Website: http://www.maefloresta.com                           *
 *   Project Leader: Gustav Gonzalez <info@maefloresta.com>                *
 *                                                                         *
 *   Developers:                                                           *
 *   2010:                                                                 *
 *    Gustavo Gonzalez / xtingray                                          *
 *                                                                         *
 *   KTooN's versions:                                                     *
 *                                                                         *
 *   2006:                                                                 *
 *    David Cuadrado                                                       *
 *    Jorge Cuadrado                                                       *
 *   2003:                                                                 *
 *    Fernado Roldan                                                       *
 *    Simena Dinas                                                         *
 *                                                                         *
 *   Copyright (C) 2010 Gustav Gonzalez - http://www.maefloresta.com       *
 *   License:                                                              *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 ***************************************************************************/

#ifndef TUPSOUNDPLAYER_H
#define TUPSOUNDPLAYER_H

#include ""tglobal.h""
#include ""timagebutton.h""
#include ""tapplicationproperties.h""
#include ""tuplibraryobject.h""

#include <QFrame>
#include <QBoxLayout>
#include <QSlider>
#include <QLabel>
#include <QSpinBox>
#include <QMediaPlayer>
#include <QUrl>
#include <QTime>
#include <QCheckBox>

/**
 * @author Gustav Gonzalez
**/

class TUPITUBE_EXPORT TupSoundPlayer : public QFrame
{
    Q_OBJECT

    public:
        TupSoundPlayer(QWidget *parent = nullptr);
        ~TupSoundPlayer();

        QSize sizeHint() const;
        void setSoundParams(TupLibraryObject *sound);
        void stopFile();
        bool isPlaying();
        void reset();
        QString getSoundID() const;
        void updateInitFrame(int frame);
        void enableLipSyncInterface(bool enabled, int frame);

    signals:
        void frameUpdated(int frame);
        void muteEnabled(bool mute);

    private slots:
        void playFile();
        void startPlayer();
        void positionChanged(qint64 value);
        void durationChanged(qint64 value);
        void stateChanged(QMediaPlayer::State state);
        void updateSoundPos(int pos);
        void updateLoopState();
        void muteAction();

    private:
        QLabel *frameLabel;
        QMediaPlayer *player;
        QSlider *slider;
        QLabel *timer;
        TImageButton *playButton;
        TImageButton *muteButton;
        bool playing;
        qint64 duration;
        QTime soundTotalTime;
        QString totalTime;
        QCheckBox *loopBox;
        bool loop;
        bool mute;
        QSpinBox *frameBox;
        QWidget *frameWidget;
        QString soundID;
};

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Es-qez
code,"#pragma once

#include <QtCore/QPointer>
#include <QtWidgets/QTabWidget>
#include ""backend/backend_requests_interface.h""

class BreakpointModel;
class PDIBackendRequests;
class DisassemblyView;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CodeViews : public QTabWidget {
public:
    CodeViews(BreakpointModel* breakpoints, QWidget* parent = 0);
    virtual ~CodeViews();

    void set_breakpoint_model(BreakpointModel* breakpoints);

    void reload_current_file();
    void toggle_breakpoint();
    void set_backend_interface(PDIBackendRequests* iface);

    Q_SLOT void open_file(const QString& filename, bool setActive);
    Q_SLOT void program_counter_changed(const PDIBackendRequests::ProgramCounterChange& pc);
    Q_SLOT void session_ended();

private:
    Q_SLOT void closeTab(int index);

    enum Mode {
        SourceView,
        Disassembly,
    };

    void read_settings();
    void write_settings();

    Mode m_mode = SourceView;
    int m_oldIndex = 0;

    // DisassemblyView* m_disassemblyView = nullptr;
    BreakpointModel* m_breakpoints = nullptr;
    QPointer<PDIBackendRequests> m_interface;
    QVector<QString> m_files;

    bool m_was_in_source_view = true;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void CodeViews::set_breakpoint_model(BreakpointModel* breakpoints) {
    m_breakpoints = breakpoints;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P8AOHF
code,"/* BGP-4, BGP-4+ daemon program
   Copyright (C) 1996, 97, 98, 99, 2000 Kunihiro Ishiguro

This file is part of GNU Kroute.

GNU Kroute is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

GNU Kroute is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Kroute; see the file COPYING.  If not, write to the Free
Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.  */

#include <kroute.h>

#include ""prefix.h""
#include ""thread.h""
#include ""buffer.h""
#include ""stream.h""
#include ""command.h""
#include ""sockunion.h""
#include ""network.h""
#include ""memory.h""
#include ""filter.h""
#include ""routemap.h""
#include ""str.h""
#include ""log.h""
#include ""plist.h""
#include ""linklist.h""
#include ""workqueue.h""

#include ""bgpd/bgpd.h""
#include ""bgpd/bgp_table.h""
#include ""bgpd/bgp_aspath.h""
#include ""bgpd/bgp_route.h""
#include ""bgpd/bgp_dump.h""
#include ""bgpd/bgp_debug.h""
#include ""bgpd/bgp_community.h""
#include ""bgpd/bgp_attr.h""
#include ""bgpd/bgp_regex.h""
#include ""bgpd/bgp_clist.h""
#include ""bgpd/bgp_fsm.h""
#include ""bgpd/bgp_packet.h""
#include ""bgpd/bgp_kroute.h""
#include ""bgpd/bgp_open.h""
#include ""bgpd/bgp_filter.h""
#include ""bgpd/bgp_nexthop.h""
#include ""bgpd/bgp_damp.h""
#include ""bgpd/bgp_mplsvpn.h""
#include ""bgpd/bgp_advertise.h""
#include ""bgpd/bgp_network.h""
#include ""bgpd/bgp_vty.h""
#include ""bgpd/bgp_mpath.h""
#ifdef HAVE_SNMP
#include ""bgpd/bgp_snmp.h""
#endif /* HAVE_SNMP */

/* BGP process wide configuration.  */
static struct bgp_master bgp_master;

extern struct in_addr router_id_kroute;

/* BGP process wide configuration pointer to export.  */
struct bgp_master *bm;

/* BGP community-list.  */
struct community_list_handler *bgp_clist;

/* BGP global flag manipulation.  */
int
bgp_option_set (int flag)
{
  switch (flag)
    {
    case BGP_OPT_NO_FIB:
    case BGP_OPT_MULTIPLE_INSTANCE:
    case BGP_OPT_CONFIG_CISCO:
      SET_FLAG (bm->options, flag);
      break;
    default:
      return BGP_ERR_INVALID_FLAG;
    }
  return 0;
}

int
bgp_option_unset (int flag)
{
  switch (flag)
    {
    case BGP_OPT_MULTIPLE_INSTANCE:
      if (listcount (bm->bgp) > 1)
	return BGP_ERR_MULTIPLE_INSTANCE_USED;
      /* Fall through.  */
    case BGP_OPT_NO_FIB:
    case BGP_OPT_CONFIG_CISCO:
      UNSET_FLAG (bm->options, flag);
      break;
    default:
      return BGP_ERR_INVALID_FLAG;
    }
  return 0;
}

int
bgp_option_check (int flag)
{
  return CHECK_FLAG (bm->options, flag);
}

/* BGP flag manipulation.  */
int
bgp_flag_set (struct bgp *bgp, int flag)
{
  SET_FLAG (bgp->flags, flag);
  return 0;
}

int
bgp_flag_unset (struct bgp *bgp, int flag)
{
  UNSET_FLAG (bgp->flags, flag);
  return 0;
}

int
bgp_flag_check (struct bgp *bgp, int flag)
{
  return CHECK_FLAG (bgp->flags, flag);
}

/* Internal function to set BGP structure configureation flag.  */
static void
bgp_config_set (struct bgp *bgp, int config)
{
  SET_FLAG (bgp->config, config);
}

static void
bgp_config_unset (struct bgp *bgp, int config)
{
  UNSET_FLAG (bgp->config, config);
}

static int
bgp_config_check (struct bgp *bgp, int config)
{
  return CHECK_FLAG (bgp->config, config);
}

/* Set BGP router identifier. */
int
bgp_router_id_set (struct bgp *bgp, struct in_addr *id)
{
  struct peer *peer;
  struct listnode *node, *nnode;

  if (bgp_config_check (bgp, BGP_CONFIG_ROUTER_ID)
      && IPV4_ADDR_SAME (&bgp->router_id, id))
    return 0;

  IPV4_ADDR_COPY (&bgp->router_id, id);
  bgp_config_set (bgp, BGP_CONFIG_ROUTER_ID);

  /* Set all peer's local identifier with this value. */
  for (ALL_LIST_ELEMENTS (bgp->peer, node, nnode, peer))
    {
      IPV4_ADDR_COPY (&peer->local_id, id);

      if (peer->status == Established)
       {
         peer->last_reset = PEER_DOWN_RID_CHANGE;
         bgp_notify_send (peer, BGP_NOTIFY_CEASE,
                          BGP_NOTIFY_CEASE_CONFIG_CHANGE);
       }
    }
  return 0;
}

/* BGP's cluster-id control. */
int
bgp_cluster_id_set (struct bgp *bgp, struct in_addr *cluster_id)
{
  struct peer *peer;
  struct listnode *node, *nnode;

  if (bgp_config_check (bgp, BGP_CONFIG_CLUSTER_ID)
      && IPV4_ADDR_SAME (&bgp->cluster_id, cluster_id))
    return 0;

  IPV4_ADDR_COPY (&bgp->cluster_id, cluster_id);
  bgp_config_set (bgp, BGP_CONFIG_CLUSTER_ID);

  /* Clear all IBGP peer. */
  for (ALL_LIST_ELEMENTS (bgp->peer, node, nnode, peer))
    {
      if (peer_sort (peer) != BGP_PEER_IBGP)
	continue;

      if (peer->status == Established)
       {
         peer->last_reset = PEER_DOWN_CLID_CHANGE;
         bgp_notify_send (peer, BGP_NOTIFY_CEASE,
                          BGP_NOTIFY_CEASE_CONFIG_CHANGE);
       }
    }
  return 0;
}

int
bgp_cluster_id_unset (struct bgp *bgp)
{
  struct peer *peer;
  struct",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_vgpEi
code,"#ifndef __BK_MESH_SAMPLING_H__
#define __BK_MESH_SAMPLING_H__

// blackhart headers.
#include ""foundation\BkExport.h""
#include ""foundation\BkAtomicDataType.h""

// Forward declarations.
struct BkPoint3;

// ~~~~~ Dcl(PUBLIC) ~~~~~

/*! \brief Samples a list of triangles.
 *
 * \param vertices The vertices of each triangles. Must be sorted.
 * \param number_of_geoms The number of triangles.
 * \param number_of_points The number of points to sample.
 */
extern BK_API void	BkMeshSampling_Sample(struct BkPoint3 const* vertices, size_t const number_of_geoms, size_t const number_of_points);

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NzlWfJ
code,"// Copyright (c) 2018 The Bitcoin Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#ifndef BITCOIN_SPAN_H
#define BITCOIN_SPAN_H

#include <algorithm>
#include <cassert>
#include <cstddef>
#include <cstdint>
#include <type_traits>

#ifdef DEBUG
#define CONSTEXPR_IF_NOT_DEBUG
#define ASSERT_IF_DEBUG(x) assert((x))
#else
#define CONSTEXPR_IF_NOT_DEBUG constexpr
#define ASSERT_IF_DEBUG(x)
#endif

#if defined(__clang__)
#if __has_attribute(lifetimebound)
#define SPAN_ATTR_LIFETIMEBOUND [[clang::lifetimebound]]
#else
#define SPAN_ATTR_LIFETIMEBOUND
#endif
#else
#define SPAN_ATTR_LIFETIMEBOUND
#endif

/**
 * A Span is an object that can refer to a contiguous sequence of objects.
 *
 * It implements a subset of C++20's std::span.
 *
 * Things to be aware of when writing code that deals with Spans:
 *
 * - Similar to references themselves, Spans are subject to reference lifetime
 *   issues. The user is responsible for making sure the objects pointed to by
 *   a Span live as long as the Span is used. For example:
 *
 *       std::vector<int> vec{1,2,3,4};
 *       Span<int> sp(vec);
 *       vec.push_back(5);
 *       printf(""%i\n"", sp.front()); // UB!
 *
 *   may exhibit undefined behavior, as increasing the size of a vector may
 *   invalidate references.
 *
 * - One particular pitfall is that Spans can be constructed from temporaries,
 *   but this is unsafe when the Span is stored in a variable, outliving the
 *   temporary. For example, this will compile, but exhibits undefined behavior:
 *
 *       Span<const int> sp(std::vector<int>{1, 2, 3});
 *       printf(""%i\n"", sp.front()); // UB!
 *
 *   The lifetime of the vector ends when the statement it is created in ends.
 *   Thus the Span is left with a dangling reference, and using it is undefined.
 *
 * - Due to Span's automatic creation from range-like objects (arrays, and data
 *   types that expose a data() and size() member function), functions that
 *   accept a Span as input parameter can be called with any compatible
 *   range-like object. For example, this works:
 *
 *       void Foo(Span<const int> arg);
 *
 *       Foo(std::vector<int>{1, 2, 3}); // Works
 *
 *   This is very useful in cases where a function truly does not care about the
 *   container, and only about having exactly a range of elements. However it
 *   may also be surprising to see automatic conversions in this case.
 *
 *   When a function accepts a Span with a mutable element type, it will not
 *   accept temporaries; only variables or other references. For example:
 *
 *       void FooMut(Span<int> arg);
 *
 *       FooMut(std::vector<int>{1, 2, 3}); // Does not compile
 *       std::vector<int> baz{1, 2, 3};
 *       FooMut(baz); // Works
 *
 *   This is similar to how functions that take (non-const) lvalue references
 *   as input cannot accept temporaries. This does not work either:
 *
 *       void FooVec(std::vector<int>& arg);
 *       FooVec(std::vector<int>{1, 2, 3}); // Does not compile
 *
 *   The idea is that if a function accepts a mutable reference, a meaningful
 *   result will be present in that variable after the call. Passing a temporary
 *   is useless in that context.
 */
template <typename C> class Span {
    C *m_data;
    std::size_t m_size;

    template <class T> struct is_Span_int : public std::false_type {};
    template <class T> struct is_Span_int<Span<T>> : public std::true_type {};
    template <class T>
    struct is_Span : public is_Span_int<typename std::remove_cv<T>::type> {};

public:
    constexpr Span() noexcept : m_data(nullptr), m_size(0) {}

    /**
     * Construct a span from a begin pointer and a size.
     *
     * This implements a subset of the iterator-based std::span constructor in
     * C++20, which is hard to implement without std::address_of.
     */
    template <typename T,
              typename std::enable_if<
                  std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>
    constexpr Span(T *begin, std::size_t size) noexcept
        : m_data(begin), m_size(size) {}

    /**
     * Construct a span from a begin and end pointer.
     *
     * This implements a subset of the iterator-based std::span constructor in
     * C++20, which is hard to implement without std::address_of.
     */
    template <typename T,
              typename std::enable_if<
                  std::is_convertible<T (*)[], C (*)[]>::value, int>::type = 0>
    CONSTEXPR_IF_NOT_DEBUG Span(T *begin, T *end) noexcept
        : m_data(begin), m_size(end - begin) {
        ASSERT_IF_DEBUG(end >= begin);
    }

    /**
     * Implicit conversion of spans between compatible types.
     *
     *  Specifically, if a pointer to an array of type O can be implicitly
     * converted to a pointer to an array of type C, then permit implicit
     * conversion of Span<O> to Span<C>. This matches the behavior of the
     * corresponding C++20 std::span constructor.
     *
     *  For example this means that a Span<T> can be converted into a Span<const
     * T>.
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QTukDz
code,"//	crm114_config.h -- Configuration for CRM114 library.

// Copyright 2001-2010 William S. Yerazunis.
//
//   This file is part of the CRM114 Library.
//
//   The CRM114 Library is free software: you can redistribute it and/or modify
//   it under the terms of the GNU Lesser General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
//
//   The CRM114 Library is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU Lesser General Public License for more details.
//
//   You should have received a copy of the GNU Lesser General Public License
//   along with the CRM114 Library.  If not, see <http://www.gnu.org/licenses/>.
//
// Derived from engine version of crm114_config.h.


///////////////////////////////////////////////////////////////////
//	Some things here you can change with relative impunity.
//	Other things, not so much.  Where there are limiting factors
//	noted, please obey them or you may break something important.
//	And, of course, realize that this is LGPLed software with
//	NO WARRANTY - make any changes and that goes double.
///////////////////////////////////////////////////////////////////

#ifndef	__CRM114_CONFIG_H__
#define	__CRM114_CONFIG_H__

//     Do you want all the classifiers?  Or just the ""production
//     ready ones""?   Comment the next line out if you want everything.
//#define PRODUCTION_CLASSIFIERS_ONLY
//
//
//     As used in the library:
#define STATISTICS_FILE_IDENT_STRING_MAX 1024
#define CLASSNAME_LENGTH 31
#define DEFAULT_HOW_MANY_CLASSES 2
#define DEFAULT_CLASS_SIZE (1<<23)   // 8 megabytes



// Markov family config

//    do we use Sparse Binary Polynomial Hashing (sensitive to both
//    sequence and spacing of individual words), Token Grab Bag, or
//    Token Sequence Sensitive?  Testing against the SpamAssassin
//    ""hard"" database shows that SBPH, TGB, and TGB2, are somewhat
//    more accurate than TSS, and about 50% more accurate than First
//    Order Only.  However, that's for English, and other natural
//    languages may show a different statistical distribution.
//
//    Choose ONE of the following:
//          SBPH, TGB2, TGB, TSS, or ARBITRARY_WINDOW_LEN:
//
//    *** DANGER, WILL ROBINSON ***  You MUST rebuild your .css files from
//    samples of text if you change this.
//
//
//     Sparse Binary Polynomial Hashing
#define SBPH
//
//     Token Grab Bag, noaliasing
//#define TGB2
//
//     Token Grab Bag, aliasing
//#define TGB
//
//     Token Sequence Sensitive
//#define TSS
//
//     First Order Only (i.e. single words, like SpamBayes)
//    Note- if you use FOO, you must turn off weights!!
//#define FOO
//
//     Generalized format for the window length.
//
//  DO NOT SET THIS TO MORE THAN 10 WITHOUT LENGTHENING hctable
//  the classifier modules !!!!!!  ""hctable"" contains the pipeline
//  hashing coefficients and needs to be extended to 2 * WINDOW_LEN
//
//     Generic window length code
//#define ARBITRARY_WINDOW_LENGTH
//
#define MARKOVIAN_WINDOW_LEN 5
//
#define OSB_BAYES_WINDOW_LEN 5
//
//      DO NOT set this to more than 5 without lengthening the
//      htup1 and htup2 tables in crm_unified_bayes.c
//
#define UNIFIED_BAYES_WINDOW_LEN 5
//
//      Unified tokenization pipeline length.
//          maximum window length _ever_.
#define UNIFIED_WINDOW_MAX 32
//
//          maximum number of iterations or phases of a pipeline,
//          maximum number of rows in a matrix of coefficients
#define UNIFIED_ITERS_MAX 64
//
//     Now, choose whether we want to use the ""old"" or the ""new"" local
//     probability calculation.  The ""old"" one works slightly better
//     for SBPH and much better for TSS, the ""new"" one works slightly
//     better for TGB and TGB2, and _much_ better for FOO
//
//     The current default (not necessarily optimal)
//     is Markovian SBPH, STATIC_LOCAL_PROBABILITIES,
//     LOCAL_PROB_DENOM = 16, and SUPER_MARKOV
//
//#define LOCAL_PROB_DENOM 2.0
#define LOCAL_PROB_DENOM 16.0
//#define LOCAL_PROB_DENOM 256.0
#define STATIC_LOCAL_PROBABILITIES
//#define LENGTHBASED_LOCAL_PROBABILITIES
//
//#define ENTROPIC_WEIGHTS
//#define MARKOV_WEIGHTS
#define SUPER_MARKOV_WEIGHTS
//#define BREYER_CHHABRA_SIEFKES_WEIGHTS
//#define BREYER_CHHABRA_SIEFKES_BASE7_WEIGHTS
//#define BCS_MWS_WEIGHTS
//#define BCS_EXP_WEIGHTS
//
//
//    Do we take only the maximum probability feature?
//
//#define USE_PEAK
//
//
//    Should we use stochastic microgrooming, or weight-distance microgrooming-
//    Make sure ONE of these is turned on.
//#define STOCHASTIC_AMNESIA
#define WEIGHT_DISTANCE_AMNESIA

#if (! defined (STOCHASTIC_AMNESIA) && ! defined (WEIGHT_DISTANCE_AMNESIA))
#error Neither STOCHASTIC_AMNESIA nor WEIGHT_DISTANCE_AMNESIA defined
#elif (defined (STOCHASTIC_AMNESIA) && defined (WEIGHT_DISTANCE_AMNESIA))
#error Both STOCHASTIC_AMNESIA and WEIGHT_DISTANCE_AMNESIA defined
#endif

//
//    define the default max chain length in a .",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vO_atA
code,"//
//  EPTTimer.h
//  PodcastTimer
//
//  Created by Eric Jones on 6/7/14.
//  Copyright (c) 2014 Effective Programming. All rights reserved.
//

#import <Foundation/Foundation.h>

@protocol  EPTTimerDelegate <NSObject>

- (void)timerFired;

@end

@interface EPTTimer : NSObject

@property (nonatomic) id<EPTTimerDelegate> delegate;

- (void)scheduleTimer;
- (void)stopTimer;

@end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wrqGKK
code,"//
//  SettingVCPopAnimator.h
//  BlackNoise
//
//  Created by 李金 on 2016/11/24.
//  Copyright © 2016年 kingandyoga. All rights reserved.
//

#import <Foundation/Foundation.h>

@interface SettingVCPopAnimator : NSObject<UIViewControllerAnimatedTransitioning>

@end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mkAvPd
code,"#ifndef ACCOUNTDIALOG_H
#define ACCOUNTDIALOG_H

#include <QDialog>

namespace Ui {
class AccountDialog;
}

class AccountDialog : public QDialog
{
    Q_OBJECT

public:
    explicit AccountDialog(QWidget *parent = 0);
    ~AccountDialog();

private slots:
    // TODO: 三个槽变成一个
    void on_azureDefaultRadioButton_clicked();
    void on_azureChinaRadioButton_clicked();
    void on_azureOtherRadioButton_clicked();
    void on_testAccessPushButton_clicked();
    void on_savePushButton_clicked();

private:
    Ui::AccountDialog *ui;
};

#endif // ACCOUNTDIALOG_H
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SeNmLB
code,"///////////////////////////////////////////////////////////////////////////////
//
// (C) Autodesk, Inc. 2007-2011. All rights reserved.
//
// Permission to use, copy, modify, and distribute this software in
// object code form for any purpose and without fee is hereby granted, 
// provided that the above copyright notice appears in all copies and 
// that both that copyright notice and the limited warranty and
// restricted rights notice below appear in all supporting 
// documentation.
//
// AUTODESK PROVIDES THIS PROGRAM ""AS IS"" AND WITH ALL FAULTS. 
// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC. 
// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE
// UNINTERRUPTED OR ERROR FREE.
//
// Use, duplication, or disclosure by the U.S. Government is subject to 
// restrictions set forth in FAR 52.227-19 (Commercial Computer
// Software - Restricted Rights) and DFAR 252.227-7013(c)(1)(ii)
// (Rights in Technical Data and Computer Software), as applicable.
//
///////////////////////////////////////////////////////////////////////////////


#ifndef ATILDEFS_H
#include ""AtilDefs.h""
#endif
#ifndef FORMATCODECPROPERTYINTERFACE_H
#include ""FormatCodecPropertyInterface.h""
#endif

#ifndef FORMATCODECINCLUSIVEPROPERTYSETINTERFACE_H
#define FORMATCODECINCLUSIVEPROPERTYSETINTERFACE_H
#if  __GNUC__ >= 4
#pragma GCC visibility push(default)
#endif


namespace Atil
{

/// <summary>
/// This class groups properties into a set of properties much
/// like a ""structure"" in ""c"". 
/// </summary>
///
class FormatCodecInclusivePropertySetInterface : public FormatCodecPropertyInterface
{

public:
    /// <summary>
    /// The virtual destructor.
    /// </summary>
    ///
    virtual ~FormatCodecInclusivePropertySetInterface ();

    /// <summary>
    /// This returns the number of properties in the set.
    /// </summary>
    /// 
    /// <returns>
    /// The number of properties in the set.
    /// </returns>
    ///
    virtual int getNumProperties () const;

    /// <summary>
    /// This returns a selected property from the properties in the set.
    /// </summary>
    /// 
    /// <param name=""nIndex"">
    /// The index of the property to that is returned.
    /// </param>
    ///
    /// <returns>
    /// A pointer to the property at the index. This pointer should not be freed by the caller.
    /// </returns>
    ///
    virtual FormatCodecPropertyInterface* getProperty (int nIndex) const;

protected:
    /// <summary>
    /// (Protected) Copy constructor.
    /// </summary>
    ///
    /// <param name=""iter"">
    /// The instance to be copied.
    /// </param>
    ///
    FormatCodecInclusivePropertySetInterface (const FormatCodecInclusivePropertySetInterface& iter);

    /// <summary>
    /// (Protected) The simple constructor.
    /// </summary>
    ///
    FormatCodecInclusivePropertySetInterface ();

    /// <summary>
    /// (Protected) The pre-allocating constructor.
    /// </summary>
    /// 
    /// <param name=""nNumToAlloc"">
    /// The number of properties that will be in the set.
    /// </param>
    ///
    FormatCodecInclusivePropertySetInterface (int nNumToAlloc);


    /// <summary>
    /// (Protected) This sets the property at index in the set.
    /// </summary>
    /// 
    /// <param name=""nIndex"">
    /// The index of the property that is to be set.
    /// </param>
    ///
    /// <param name=""pProperty"">
    /// A pointer to the property that should be placed at the index. The 
    /// property will be <c>clone()</c> copied. The pointer is not held by the set.
    /// </param>
    ///
    void setProperty (int nIndex, FormatCodecPropertyInterface* pProperty);

    /// <summary>
    /// (Protected) This adds the property to the set.
    /// </summary>
    /// 
    /// <param name=""pProperty"">
    /// A pointer to the property that should be placed at the index. The 
    /// property will be <c>clone()</c> copied. The pointer is not held by the set.
    /// </param>
    ///
    void appendProperty (FormatCodecPropertyInterface* pProperty);

    /// <summary>
    /// (Protected) The array of property pointers held by the set.
    /// </summary>
    ///
    FormatCodecPropertyInterface** mppProperties;

    /// <summary>
    /// (Protected) The number of properties that have been set into the set.
    /// </summary>
    int mnNumProperties;

    /// <summary>
    /// (Protected) The length of the property array.
    /// </summary>
    int mnArraySize;

private:
    FormatCodecInclusivePropertySetInterface& operator= (const FormatCodecInclusivePropertySetInterface& from);    
};

} // end of namespace Atil
#if  __GNUC__ >= 4
#pragma GCC visibility pop
#endif

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WxuGt8
code,"#pragma once
#include ""messages.h""
#include ""primitives/string_utils.h""

// Given pairs of pulse lens from 2 base stations, this class determines the phase for current cycle
// Phases are: 
//   0) Base 1 (B), horizontal sweep
//   1) Base 1 (B), vertical sweep
//   2) Base 2 (C), horizontal sweep
//   3) Base 2 (C), vertical sweep
// 
// TODO: We might want to introduce a more thorough check for a fix, using the average_error_ value.
class CyclePhaseClassifier {
public:
    CyclePhaseClassifier();

    // Process the pulse lengths for current cycle (given by incrementing cycle_idx).
    void process_pulse_lengths(uint32_t cycle_idx, const TimeDelta (&pulse_lens)[num_base_stations]);

    // Get current cycle phase. -1 if phase is not known (no fix achieved).
    int get_phase(uint32_t cycle_idx);
    
    // Reference to a pair of DataFrameBit-s
    typedef DataFrameBit (&DataFrameBitPair)[num_base_stations];

    // Get updated data bits from the pulse lens for current cycle.
    // Both bits are always returned, but caller needs to make sure they were updated this cycle by
    // checking DataFrameBit.cycle_idx == cycle_idx.
    DataFrameBitPair get_data_bits(uint32_t cycle_idx, const TimeDelta (&pulse_lens)[num_base_stations]);

    // Reset the state of this classifier - needs to be called if the cycle fix was lost.
    void reset();

    // Print debug information.
    virtual bool debug_cmd(HashedWord *input_words);
    virtual void debug_print(PrintStream &stream);

private:
    float expected_pulse_len(bool skip, bool data, bool axis);

    uint32_t prev_full_cycle_idx_;
    uint32_t phase_history_;

    int fix_level_;
    uint32_t phase_shift_;

    float pulse_base_len_;
    DataFrameBit bits_[num_base_stations];

    float average_error_;
    bool debug_print_state_;
};

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xs3KD9
code,"//
//  MultibandBank.c
//  FxDSP
//
//  Created by Hamilton Kibbe on 11/24/13.
//  Copyright (c) 2013 Hamilton Kibbe. All rights reserved.
//

#include ""MultibandBank.h""
#include ""LinkwitzRileyFilter.h""
#include ""RBJFilter.h""
#include ""FilterTypes.h""
#include <stdlib.h>

// Sqrt(2)/2
#define FILT_Q (0.70710681186548)

/*******************************************************************************
 MultibandFilter */
struct MultibandFilter
{
    LRFilter*   LPA;
    LRFilter*   HPA;
    LRFilter*   LPB;
    LRFilter*   HPB;
    RBJFilter*  APF;
    float       lowCutoff;
    float       highCutoff;
    float       sampleRate;
};

struct MultibandFilterD
{
    LRFilterD*  LPA;
    LRFilterD*  HPA;
    LRFilterD*  LPB;
    LRFilterD*  HPB;
    RBJFilterD* APF;
    double      lowCutoff;
    double      highCutoff;
    double      sampleRate;
};


/*******************************************************************************
 MultibandFilterInit */

MultibandFilter*
MultibandFilterInit(float   lowCutoff,
                    float   highCutoff,
                    float  sampleRate)
{
    MultibandFilter* filter = (MultibandFilter*) malloc(sizeof(MultibandFilter));
    filter->lowCutoff = lowCutoff;
    filter->highCutoff = highCutoff;
    filter->sampleRate = sampleRate;
    filter->LPA = LRFilterInit(LOWPASS, filter->lowCutoff, FILT_Q, filter->sampleRate);
    filter->HPA = LRFilterInit(HIGHPASS, filter->lowCutoff, FILT_Q, filter->sampleRate);
    filter->LPB = LRFilterInit(LOWPASS, filter->highCutoff, FILT_Q, filter->sampleRate);
    filter->HPB = LRFilterInit(HIGHPASS, filter->highCutoff, FILT_Q, filter->sampleRate);
    filter->APF = RBJFilterInit(ALLPASS, filter->sampleRate/2.0, filter->sampleRate);
    RBJFilterSetQ(filter->APF, 0.5);
    return filter;
}


MultibandFilterD*
MultibandFilterInitD(double lowCutoff,
                     double highCutoff,
                     double sampleRate)
{
    MultibandFilterD* filter = (MultibandFilterD*) malloc(sizeof(MultibandFilterD));
    filter->lowCutoff = lowCutoff;
    filter->highCutoff = highCutoff;
    filter->sampleRate = sampleRate;
    filter->LPA = LRFilterInitD(LOWPASS, filter->lowCutoff, FILT_Q, filter->sampleRate);
    filter->HPA = LRFilterInitD(HIGHPASS, filter->lowCutoff, FILT_Q, filter->sampleRate);
    filter->LPB = LRFilterInitD(LOWPASS, filter->highCutoff, FILT_Q, filter->sampleRate);
    filter->HPB = LRFilterInitD(HIGHPASS, filter->highCutoff, FILT_Q, filter->sampleRate);
    filter->APF = RBJFilterInitD(ALLPASS, filter->sampleRate/2.0, filter->sampleRate);
    RBJFilterSetQD(filter->APF, 0.5);
    return filter;
}


/*******************************************************************************
 MultibandFilterFree */

Error_t
MultibandFilterFree(MultibandFilter* filter)
{
    LRFilterFree(filter->LPA);
    LRFilterFree(filter->LPB);
    LRFilterFree(filter->HPA);
    LRFilterFree(filter->HPB);
    RBJFilterFree(filter->APF);
    if (filter)
    {
        free(filter);
        filter = NULL;
    }

    return NOERR;
}

Error_t
MultibandFilterFreeD(MultibandFilterD* filter)
{
    LRFilterFreeD(filter->LPA);
    LRFilterFreeD(filter->LPB);
    LRFilterFreeD(filter->HPA);
    LRFilterFreeD(filter->HPB);
    RBJFilterFreeD(filter->APF);
    if (filter)
    {
        free(filter);
        filter = NULL;
    }

    return NOERR;
}


/*******************************************************************************
 MultibandFilterFlush */

Error_t
MultibandFilterFlush(MultibandFilter* filter)
{
    LRFilterFlush(filter->LPA);
    LRFilterFlush(filter->LPB);
    LRFilterFlush(filter->HPA);
    LRFilterFlush(filter->HPB);
    RBJFilterFlush(filter->APF);

    return NOERR;
}

Error_t
MultibandFilterFlushD(MultibandFilterD* filter)
{
    LRFilterFlushD(filter->LPA);
    LRFilterFlushD(filter->LPB);
    LRFilterFlushD(filter->HPA);
    LRFilterFlushD(filter->HPB);
    RBJFilterFlushD(filter->APF);

    return NOERR;
}


/*******************************************************************************
 MultibandFilterSetLowCutoff */
Error_t
MultibandFilterSetLowCutoff(MultibandFilter* filter, float lowCutoff)
{
    filter->lowCutoff = lowCutoff;
    LRFilterSetParams(filter->LPA, LOWPASS, lowCutoff, FILT_Q);
    LRFilterSetParams(filter->HPA, HIGHPASS, lowCutoff, FILT_Q);
    return NOERR;
}

Error_t
MultibandFilterSetLowCutoffD(MultibandFilterD* filter, double lowCutoff)
{
    filter->lowCutoff = lowCutoff;
    LRFilterSetParamsD(filter->LPA, LOWPASS, lowCutoff, FILT_Q);
    LRFilterSetParamsD(filter->HPA, HIGHPASS, lowCutoff, FILT_Q);
    return NOERR;
}

/*******************************************************************************
 MultibandFilterSetHighCutoff */

Error_t
MultibandFilterSetHighCutoff(MultibandFilter* filter, float highCutoff)
{
    filter->highCutoff = highCutoff;
    LRFilterSetParams(filter->LPB, LOWPASS, highCutoff, FILT_Q);
    LRFilterSetParams(filter->HPB, HIGHPA",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-p0Ihg
code,"/*
  HardwareSerial.h - Hardware serial library for Wiring
  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef HardwareSerial_h
#define HardwareSerial_h

#include <inttypes.h>

#include ""Print.h""

struct ring_buffer;

#if defined(__AVR_ATmega103__)
class HardwareSerial : public Print
{
  private:
    ring_buffer *_rx_buffer;
    volatile uint8_t *_ubrr;
    volatile uint8_t *_ucr;
    volatile uint8_t *_usr;
    volatile uint8_t *_udr;
    uint8_t _rxen;
    uint8_t _txen;
    uint8_t _rxcie;
    uint8_t _udre;
  public:
    HardwareSerial(ring_buffer *rx_buffer,
      volatile uint8_t *ubrr, 
      volatile uint8_t *ucr, volatile uint8_t *usr,
      volatile uint8_t *udr,
      uint8_t rxen, uint8_t txen, uint8_t rxcie, uint8_t udre);
    void begin(long);
    void end();
    uint8_t available(void);
    int read(void);
    void flush(void);
    virtual void write(uint8_t);
    using Print::write; // pull in write(str) and write(buf, size) from Print
};
#else
class HardwareSerial : public Print
{
  private:
    ring_buffer *_rx_buffer;
    volatile uint8_t *_ubrrh;
    volatile uint8_t *_ubrrl;
    volatile uint8_t *_ucsra;
    volatile uint8_t *_ucsrb;
    volatile uint8_t *_udr;
    uint8_t _rxen;
    uint8_t _txen;
    uint8_t _rxcie;
    uint8_t _udre;
    uint8_t _u2x;
  public:
    HardwareSerial(ring_buffer *rx_buffer,
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *udr,
      uint8_t rxen, uint8_t txen, uint8_t rxcie, uint8_t udre, uint8_t u2x);
    void begin(long);
    void end();
    uint8_t available(void);
    int read(void);
    void flush(void);
    virtual void write(uint8_t);
    using Print::write; // pull in write(str) and write(buf, size) from Print
};
#endif

extern HardwareSerial Serial;

#if defined(__AVR_ATmega1280__)
extern HardwareSerial Serial1;
extern HardwareSerial Serial2;
extern HardwareSerial Serial3;
#endif

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sqYABn
code,"/**
 * @file sdram.c
 * @brief SDRAM configuration
 *
 * @section License
 *
 * Copyright (C) 2010-2015 Oryx Embedded SARL. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * @author Oryx Embedded SARL (www.oryx-embedded.com)
 * @version 1.6.4
 **/

#include ""sam3xa.h""
#include ""sam3x_ek.h""
#include ""sdram.h""
#include ""error.h""
#include ""debug.h""


/**
 * @brief SDRAM initialization
 * @param[in] coreClockFrequency Core clock frequency
 **/

void sdramInit(uint32_t coreClockFrequency)
{
   uint32_t n;

   //Enable PIO peripheral clocks
   PMC->PMC_PCER0 = (1 << ID_PIOC) | (1 << ID_PIOD);
   //Enable SMC peripheral clock
   PMC->PMC_PCER0 = (1 << ID_SMC);

   //Assign SDRAM pins to Peripheral A function
   PIOC->PIO_ABSR &= ~SDRAM_PIOC_MASK;
   //Disable the PIO from controlling the corresponding pins
   PIOC->PIO_PDR = SDRAM_PIOC_MASK;
   //Enable pull-ups
   PIOC->PIO_PUER = SDRAM_PIOC_MASK;

   //Assign SDRAM pins to Peripheral A function
   PIOD->PIO_ABSR &= ~SDRAM_PIOD_MASK;
   //Disable the PIO from controlling the corresponding pins
   PIOD->PIO_PDR = SDRAM_PIOD_MASK;
   //Enable pull-ups
   PIOD->PIO_PUER = SDRAM_PIOD_MASK;

   //Configure SDRAM enable pin as an output
   PIOD->PIO_PER = PIO_PD18;
   PIOD->PIO_OER = PIO_PD18;
   PIOD->PIO_SODR = PIO_PD18;

   //SDRAM features must be set in the Configuration Register
   SDRAMC->SDRAMC_CR = SDRAMC_CR_NC_COL9 |      //Number of columns (512)
                       SDRAMC_CR_NR_ROW13 |     //Number of rows (8192)
                       SDRAMC_CR_NB_BANK4 |     //Number of banks (4)
                       SDRAMC_CR_CAS_LATENCY2 | //CAS latency (2 cycles)
                       SDRAMC_CR_DBW |          //Data bus width (16 bits)
                       SDRAMC_CR_TWR(2) |       //Write recovery delay (2 cycles)
                       SDRAMC_CR_TRC_TRFC(9) |  //Row cycle delay (9 cycles)
                       SDRAMC_CR_TRP(3) |       //Row precharge delay (3 cycles)
                       SDRAMC_CR_TRCD(3) |      //Row to column delay (3 cycles)
                       SDRAMC_CR_TRAS(6) |      //Active to precharge delay (6 cycles)
                       SDRAMC_CR_TXSR(10);      //Exit self refresh to active delay (10 cycles)

   //For mobile SDRAM, temperature-compensated self refresh (TCSR), drive strength (DS)
   //and partial array self refresh (PASR) must be set in the Low Power Register
   SDRAMC->SDRAMC_LPR = 0;

   //The SDRAM memory type must be set in the Memory Device Register
   SDRAMC->SDRAMC_MDR = SDRAMC_MDR_MD_SDRAM;

   //A minimum pause of 200 us is provided to precede any signal toggle
   sleep(1);

   //A NOP command is issued to the SDRAM device. The application must set Mode to 1
   //in the Mode Register and perform a write access to any SDRAM address
   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_NOP;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   //An All Banks Precharge command is issued to the SDRAM devices. The application must
   //set Mode to 2 in the Mode Register and perform a write access to any SDRAM address
   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_ALLBANKS_PRECHARGE;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   //Eight auto-refresh (CBR) cycles are provided. The application must set the Mode to 4
   //in the Mode Register and perform a write access to any SDRAM location eight times
   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   SDRAMC->SDRAMC_MR = SDRAMC_MR_MODE_AUTO_REFRESH;
   *((uint16_t *)(SDRAM_BASE)) = 0x00000000;

   //A Mode Register set (MRS) cycle is issued to program the parameters of the SDRAM device,
   //in particular CAS latency and burst length. The application must set Mode to 3 in the
   //Mode Register and perform a write access to the SDRAM. The write address must be chosen
   //so that BA[1:0] are set to 0
   SDRA",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BAsrPX
code,"//
//  EmailComposer.h
//
//
//  Created by Jesse MacFadyen on 10-04-05.
//  Copyright 2010 Nitobi. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <MessageUI/MFMailComposeViewController.h>
#import <MobileCoreServices/MobileCoreServices.h>
#import <Cordova/CDV.h>

@interface EmailComposer : CDVPlugin < MFMailComposeViewControllerDelegate > {
    NSString* _callbackId;
}

@property(nonatomic, strong) NSString* callbackId;

/// support dependency injection of a mock MFMailComposeViewController for unit testing
@property(nonatomic, strong) MFMailComposeViewController* picker;

- (void) show:(CDVInvokedUrlCommand*)command;

@end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0ZxEiR
code,"//estrutura com os dados lidos
struct {
  float tensao;
  float corrente;
  float temperaturaBaterias;
  float temperaturaCockpit;
  float velocidade; //velocidade calculada do carro
  double hodometro; //armazena a quantidade de metros percorridos
} dados;

//estrutura com as configuracoes do controlador
struct {
  long intervaloLeitura; //intervalo de leitura dos sensores
  float raioRoda; // raio da roda em mm
  byte qtdPulsos; // pulsos por volta recebidos pelo sensor de velocidade
} cfg;


void enviar(String cod, String msg) {
  Serial.println("" {\"""" + cod + ""\"":\"""" + msg + ""\""}"");
}

/*
 * Funcao de regressao linear com com valores em ponto flutuante
*/
float converte(float x, float in_min, float in_max, float out_min,
               float out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

const int chipSelect = 10;
/*
   Abre cartao de memoria
*/
boolean abreCartao(boolean forcar) {
  static boolean cartaoOK = false;
  if (!cartaoOK || forcar) {
    cartaoOK = SD.begin(chipSelect);
    if (!cartaoOK) {
      enviar(""20"", ""Erro ao abrir o cartao SD!"");
    }
  }
  return cartaoOK;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZQeiDN
code,"/*
 * This file is part of the MicroPython project, http://micropython.org/
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Scott Shawcroft for Adafruit Industries
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#include ""shared-bindings/microcontroller/Pin.h""
#include ""shared-bindings/digitalio/DigitalInOut.h""

#include ""nrf_gpio.h""
#include ""py/mphal.h""

#include ""nrf/pins.h""
#include ""supervisor/shared/rgb_led_status.h""

#ifdef MICROPY_HW_NEOPIXEL
bool neopixel_in_use;
#endif
#ifdef MICROPY_HW_APA102_MOSI
bool apa102_sck_in_use;
bool apa102_mosi_in_use;
#endif
#ifdef SPEAKER_ENABLE_PIN
bool speaker_enable_in_use;
#endif

// Bit mask of claimed pins on each of up to two ports. nrf52832 has one port; nrf52840 has two.
STATIC uint32_t claimed_pins[GPIO_COUNT];
STATIC uint32_t never_reset_pins[GPIO_COUNT];

STATIC void reset_speaker_enable_pin(void) {
#ifdef SPEAKER_ENABLE_PIN
    speaker_enable_in_use = false;
    nrf_gpio_cfg(SPEAKER_ENABLE_PIN->number,
                 NRF_GPIO_PIN_DIR_OUTPUT,
                 NRF_GPIO_PIN_INPUT_DISCONNECT,
                 NRF_GPIO_PIN_NOPULL,
                 NRF_GPIO_PIN_H0H1,
                 NRF_GPIO_PIN_NOSENSE);
    nrf_gpio_pin_write(SPEAKER_ENABLE_PIN->number, false);
#endif
}

void reset_all_pins(void) {
    for (size_t i = 0; i < GPIO_COUNT; i++) {
        claimed_pins[i] = never_reset_pins[i];
    }

    for (uint32_t pin = 0; pin < NUMBER_OF_PINS; ++pin) {
        if ((never_reset_pins[nrf_pin_port(pin)] & (1 << nrf_relative_pin_number(pin))) != 0) {
            continue;
        }
        nrf_gpio_cfg_default(pin);
    }

    #ifdef MICROPY_HW_NEOPIXEL
    neopixel_in_use = false;
    #endif
    #ifdef MICROPY_HW_APA102_MOSI
    apa102_sck_in_use = false;
    apa102_mosi_in_use = false;
    #endif

    // After configuring SWD because it may be shared.
    reset_speaker_enable_pin();
}

// Mark pin as free and return it to a quiescent state.
void reset_pin_number(uint8_t pin_number) {
    if (pin_number == NO_PIN) {
        return;
    }

    // Clear claimed bit.
    claimed_pins[nrf_pin_port(pin_number)] &= ~(1 << nrf_relative_pin_number(pin_number));

    #ifdef MICROPY_HW_NEOPIXEL
    if (pin_number == MICROPY_HW_NEOPIXEL->number) {
        neopixel_in_use = false;
        rgb_led_status_init();
        return;
    }
    #endif
    #ifdef MICROPY_HW_APA102_MOSI
    if (pin_number == MICROPY_HW_APA102_MOSI->number ||
        pin_number == MICROPY_HW_APA102_SCK->number) {
        apa102_mosi_in_use = apa102_mosi_in_use && pin_number != MICROPY_HW_APA102_MOSI->number;
        apa102_sck_in_use = apa102_sck_in_use && pin_number != MICROPY_HW_APA102_SCK->number;
        if (!apa102_sck_in_use && !apa102_mosi_in_use) {
            rgb_led_status_init();
        }
        return;
    }
    #endif

    #ifdef SPEAKER_ENABLE_PIN
    if (pin_number == SPEAKER_ENABLE_PIN->number) {
        reset_speaker_enable_pin();
    }
    #endif
}


void never_reset_pin_number(uint8_t pin_number) {
    never_reset_pins[nrf_pin_port(pin_number)] |= 1 << nrf_relative_pin_number(pin_number);
}

void common_hal_never_reset_pin(const mcu_pin_obj_t* pin) {
    never_reset_pin_number(pin->number);
}

void common_hal_reset_pin(const mcu_pin_obj_t* pin) {
    reset_pin_number(pin->number);
}

void claim_pin(const mcu_pin_obj_t* pin) {
    // Set bit in claimed_pins bitmask.
    claimed_pins[nrf_pin_port(pin->number)] |= 1 << nrf_relative_pin_number(pin->number);

    #ifdef MICROPY_HW_NEOPIXEL
    if (pin == MICROPY_HW_NEOPIXEL) {
        neopixel_in_use = true;
    }
    #endif
    #ifdef MICROPY_HW_APA102_MOSI
    if (pin == MICROPY_HW_APA102_MOSI) {
        apa102_mosi_in_use = true;
    }
    if (pin == MICROPY_HW_APA102_SCK) {
        apa102_sck_in_use = true;
    }
    #endif

    #ifdef SPEAKER_ENABLE_PIN
    if (pin == SPEAKER_ENABLE_PIN) {
        speaker_enable_in_use = true;
    }
    #endif
}


bool pin_number_is_free(uint8_t pin_number) {
    return !(claimed_pins[nrf_pin_port(pin_number)] & (1 << nrf_relative_pin_number(pin_number)));
}

bool common_hal_mcu_pin_is_free(con",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RuzoIk
code,"/********************************************************************************
 * The MIT License (MIT)                                                        *
 *                                                                              *
 * Copyright (C) 2016 Alex Nolasco                                              *
 *                                                                              *
 *Permission is hereby granted, free of charge, to any person obtaining a copy  *
 *of this software and associated documentation files (the ""Software""), to deal *
 *in the Software without restriction, including without limitation the rights  *
 *to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     *
 *copies of the Software, and to permit persons to whom the Software is         *
 *furnished to do so, subject to the following conditions:                      *
 *The above copyright notice and this permission notice shall be included in    *
 *all copies or substantial portions of the Software.                           *
 *                                                                              *
 *THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    *
 *IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      *
 *FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   *
 *AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        *
 *LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, *
 *OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN     *
 *THE SOFTWARE.                                                                 *
 *********************************************************************************/


#import <Foundation/Foundation.h>
#import ""HL7SummaryProtocol.h""
@class HL7PatientSummary;
@class HL7ClinicalDocumentSummary;

typedef NSDictionary<NSString *, id<HL7SummaryProtocol>> NSDictionaryTemplateIdToSummary;

@interface HL7CCDSummary : NSObject <NSCopying, NSCoding>
- (HL7ClinicalDocumentSummary *_Nullable)document;
- (HL7PatientSummary *_Nullable)patient;
- (NSDictionaryTemplateIdToSummary *_Nullable)summaries;
- (id<HL7SummaryProtocol> _Nullable)getSummaryByClass:(Class _Nonnull)className;
@end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OlnGti
code,"/*
 * INET		An implementation of the TCP/IP protocol suite for the LINUX
 *		operating system.  INET is implemented using the  BSD Socket
 *		interface as the means of communication with the user level.
 *
 *		Implementation of the Transmission Control Protocol(TCP).
 *
 * Authors:	Ross Biro
 *		Fred N. van Kempen, <waltje@uWalt.NL.Mugnet.ORG>
 *		Mark Evans, <evansmp@uhura.aston.ac.uk>
 *		Corey Minyard <wf-rch!minyard@relay.EU.net>
 *		Florian La Roche, <flla@stud.uni-sb.de>
 *		Charles Hedrick, <hedrick@klinzhai.rutgers.edu>
 *		Linus Torvalds, <torvalds@cs.helsinki.fi>
 *		Alan Cox, <gw4pts@gw4pts.ampr.org>
 *		Matthew Dillon, <dillon@apollo.west.oic.com>
 *		Arnt Gulbrandsen, <agulbra@nvg.unit.no>
 *		Jorge Cwik, <jorge@laser.satlink.net>
 */

/*
 * Changes:	Pedro Roque	:	Retransmit queue handled by TCP.
 *				:	Fragmentation on mtu decrease
 *				:	Segment collapse on retransmit
 *				:	AF independence
 *
 *		Linus Torvalds	:	send_delayed_ack
 *		David S. Miller	:	Charge memory using the right skb
 *					during syn/ack processing.
 *		David S. Miller :	Output engine completely rewritten.
 *		Andrea Arcangeli:	SYNACK carry ts_recent in tsecr.
 *		Cacophonix Gaul :	draft-minshall-nagle-01
 *		J Hadi Salim	:	ECN support
 *
 */

#define pr_fmt(fmt) ""TCP: "" fmt

#include <net/mptcp.h>
#include <net/ipv6.h>
#include <net/tcp.h>

#include <linux/compiler.h>
#include <linux/gfp.h>
#include <linux/module.h>

/* People can turn this off for buggy TCP's found in printers etc. */
int sysctl_tcp_retrans_collapse __read_mostly = 1;

/* People can turn this on to work with those rare, broken TCPs that
 * interpret the window field as a signed quantity.
 */
int sysctl_tcp_workaround_signed_windows __read_mostly = 0;

/* Default TSQ limit of two TSO segments */
int sysctl_tcp_limit_output_bytes __read_mostly = 131072;

/* This limits the percentage of the congestion window which we
 * will allow a single TSO frame to consume.  Building TSO frames
 * which are too large can cause TCP streams to be bursty.
 */
int sysctl_tcp_tso_win_divisor __read_mostly = 3;

int sysctl_tcp_mtu_probing __read_mostly = 0;
int sysctl_tcp_base_mss __read_mostly = TCP_BASE_MSS;

int cnt = 0;
/* By default, RFC2861 behavior.  */
int sysctl_tcp_slow_start_after_idle __read_mostly = 1;

static bool tcp_write_xmit(struct sock *sk, unsigned int mss_now, int nonagle,
			   int push_one, gfp_t gfp);

/* Account for new data that has been sent to the network. */
void tcp_event_new_data_sent(struct sock *sk, const struct sk_buff *skb)
{
	struct inet_connection_sock *icsk = inet_csk(sk);
	struct tcp_sock *tp = tcp_sk(sk);
	unsigned int prior_packets = tp->packets_out;

	tcp_advance_send_head(sk, skb);
	tp->snd_nxt = TCP_SKB_CB(skb)->end_seq;

	tp->packets_out += tcp_skb_pcount(skb);
	if (!prior_packets || icsk->icsk_pending == ICSK_TIME_EARLY_RETRANS ||
	    icsk->icsk_pending == ICSK_TIME_LOSS_PROBE) {
		tcp_rearm_rto(sk);
	}
}

/* SND.NXT, if window was not shrunk.
 * If window has been shrunk, what should we make? It is not clear at all.
 * Using SND.UNA we will fail to open window, SND.NXT is out of window. :-(
 * Anything in between SND.UNA...SND.UNA+SND.WND also can be already
 * invalid. OK, let's make this for now:
 */
static inline __u32 tcp_acceptable_seq(const struct sock *sk)
{
	const struct tcp_sock *tp = tcp_sk(sk);

	if (!before(tcp_wnd_end(tp), tp->snd_nxt))
		return tp->snd_nxt;
	else
		return tcp_wnd_end(tp);
}

/* Calculate mss to advertise in SYN segment.
 * RFC1122, RFC1063, draft-ietf-tcpimpl-pmtud-01 state that:
 *
 * 1. It is independent of path mtu.
 * 2. Ideally, it is maximal possible segment size i.e. 65535-40.
 * 3. For IPv4 it is reasonable to calculate it from maximal MTU of
 *    attached devices, because some buggy hosts are confused by
 *    large MSS.
 * 4. We do not make 3, we advertise MSS, calculated from first
 *    hop device mtu, but allow to raise it to ip_rt_min_advmss.
 *    This may be overridden via information stored in routing table.
 * 5. Value 65535 for MSS is valid in IPv6 and means ""as large as possible,
 *    probably even Jumbo"".
 */
static __u16 tcp_advertise_mss(struct sock *sk)
{
	struct tcp_sock *tp = tcp_sk(sk);
	const struct dst_entry *dst = __sk_dst_get(sk);
	int mss = tp->advmss;

	if (dst) {
		unsigned int metric = dst_metric_advmss(dst);

		if (metric < mss) {
			mss = metric;
			tp->advmss = mss;
		}
	}

	return (__u16)mss;
}

/* RFC2861. Reset CWND after idle period longer RTO to ""restart window"".
 * This is the first part of cwnd validation mechanism. */
static void tcp_cwnd_restart(struct sock *sk, const struct dst_entry *dst)
{
	struct tcp_sock *tp = tcp_sk(sk);
	s32 delta = tcp_time_stamp - tp->lsndtime;
	u32 restart_cwnd = tcp_init_cwnd(tp, dst);
	u32 cwnd = tp->snd_cwnd;

	tcp_ca_event(sk, CA_EVENT_CWND_RESTART);

	tp->snd_ssthresh = tcp_current_ssthresh(sk);
	restart_cwnd = min(restart_cwnd, cwnd);

	while ((delta -= inet_csk(sk)->icsk_rto) > 0 && cwnd > restart_cwnd)
		cwnd >>= 1;
	tp->snd_cwnd = max(cwnd, restart_cwnd);
	tp->snd_cwnd_stamp = tcp_time_stamp;
	tp->snd_cwnd_used = 0;
}

/* Conges",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VMzuFL
code,"#ifndef BITCOINGUI_H
#define BITCOINGUI_H

#include <QMainWindow>
#include <QSystemTrayIcon>
#include <QLabel>
#include <QMap>

#include ""util.h""


class TransactionTableModel;
class WalletView;
class ClientModel;
class WalletModel;
class WalletStack;
class TransactionView;
class OverviewPage;
class AddressBookPage;
class SendCoinsDialog;
class SignVerifyMessageDialog;
class Notificator;
class RPCConsole;
class StakeForCharityDialog;
class CWallet;
class CWalletManager;
class MessageModel;

QT_BEGIN_NAMESPACE
class QLabel;
class QModelIndex;
class QProgressBar;
class QStackedWidget;
class QListWidget;
class QPushButton;
QT_END_NAMESPACE

class ActiveLabel : public QLabel
{
    Q_OBJECT
public:
    ActiveLabel(const QString & text = """", QWidget * parent = 0);
    ~ActiveLabel(){}

signals:
    void clicked();

protected:
    void mouseReleaseEvent (QMouseEvent * event) ;

};

/**
  Bitcoin GUI main class. This class represents the main window of the Bitcoin UI. It communicates with both the client and
  wallet models to give the user an up-to-date view of the current core state.
*/
class BitcoinGUI : public QMainWindow
{
    Q_OBJECT

public:
    explicit BitcoinGUI(QWidget *parent = 0);
    ~BitcoinGUI();

    int nHeight;
    /** Set the client model.
        The client model represents the part of the core that communicates with the P2P network, and is wallet-agnostic.
    */
    void setClientModel(ClientModel *clientModel);
    /** Set the wallet model.
        The wallet model represents a bitcoin wallet, and offers access to the list of transactions, address book and sending
        functionality.
    */

    void setWalletManager(CWalletManager *walletManager) { this->walletManager = walletManager; }
    bool addWallet(const QString& name, WalletModel *walletModel, MessageModel *messageModel);
    QString getCurrentWallet();
    bool setCurrentWallet(const QString& name);

    QAction *exportAction;

   /// Get window identifier of QMainWindow (BitcoinGUI)
   WId getMainWinId() const;

   Notificator* getNotificator();

protected:
    void changeEvent(QEvent *e);
    void closeEvent(QCloseEvent *event);
    void dragEnterEvent(QDragEnterEvent *event);
    void dropEvent(QDropEvent *event);
    bool eventFilter(QObject *object, QEvent *event);    

private:
    ClientModel *clientModel;
    CWalletManager *walletManager;
    StakeForCharityDialog *stakeForCharityDialog;

    QMap<QString, WalletModel*> mapWalletModels;
    QListWidget *walletList;
    WalletStack *walletStack;
    WalletView *walletView;
    QPushButton *loadWalletButton;
    QPushButton *unloadWalletButton;
    QPushButton *newWalletButton;


    QLabel *labelEncryptionIcon;
    QLabel *labelStakingIcon;
    QLabel *labelConnectionsIcon;
    QLabel *labelBlocksIcon;
    QLabel *progressBarLabel;
    QLabel *mainIcon;
    QToolBar *mainToolbar;
    QToolBar *secondaryToolbar;
    QProgressBar *progressBar;

    QMenuBar *appMenuBar;
    QAction *overviewAction;
    QAction *historyAction;
    QAction *quitAction;
    QAction *sendCoinsAction;
    QAction *addressBookAction;
    QAction *shoppingAction;
    QAction *messageAction;
    QAction *signMessageAction;
    QAction *verifyMessageAction;
    QAction *aboutAction;
    QAction *charityAction;
    QAction *receiveCoinsAction;
    QAction *optionsAction;
    QAction *toggleHideAction;
    QAction *encryptWalletAction;
    QAction *unlockWalletAction;
    QAction *lockWalletAction;
    QAction *checkWalletAction;
    QAction *repairWalletAction;
    QAction *backupWalletAction;
    QAction *backupAllWalletsAction;
    QAction *dumpWalletAction;
    QAction *importWalletAction;
    QAction *changePassphraseAction;
    QAction *aboutQtAction;
    QAction *openRPCConsoleAction;
    QAction *openTrafficAction;
    QAction *loadWalletAction;
    QAction *unloadWalletAction;
    QAction *newWalletAction;
    QAction *blockAction;
    QAction *blocksIconAction;
    QAction *connectionIconAction;
    QAction *stakingIconAction;

    QSystemTrayIcon *trayIcon;    
    TransactionView *transactionView;
    RPCConsole *rpcConsole;
    Notificator *notificator;

    QMovie *syncIconMovie;
    /** Keep track of previous number of blocks, to detect progress */
    int prevBlocks;

    uint64_t nWeight;

    /** Create the main UI actions. */
    void createActions();
    /** Create the menu bar and sub-menus. */
    void createMenuBar();
    /** Create the toolbars */
    void createToolBars();
    /** Create system tray (notification) icon */
    void createTrayIcon();
    /** Create system tray menu (or setup the dock menu) */
    void createTrayIconMenu();

public slots:
    /** Switch to overview (home) page */
    void gotoOverviewPage();
    /** Switch to history (transactions) page */
    void gotoHistoryPage(bool fExportOnly=false, bool fExportConnect=true, bool fExportFirstTime=false);
    /** Switch to address book page */
    void gotoAddressBookPage(bool fExportOnly=false, bool fExportConnect=true, bool fExportFirstTime=false);
    /** Switch to receive coins page */
    void gotoReceiveCoinsPage(bool ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",w0-3CJ
code,"/****************************************************************************
*
*    Copyright (c) 2005 - 2012 by Vivante Corp.  All rights reserved.
*
*    The material in this file is confidential and contains trade secrets
*    of Vivante Corporation. This is proprietary information owned by
*    Vivante Corporation. No part of this work may be disclosed,
*    reproduced, copied, transmitted, or used in any way for any purpose,
*    without the express written permission of Vivante Corporation.
*
*****************************************************************************/


/**
 * \file sarea.h
 * SAREA definitions.
 *
 * \author Kevin E. Martin <kevin@precisioninsight.com>
 * \author Jens Owen <jens@tungstengraphics.com>
 * \author Rickard E. (Rik) Faith <faith@valinux.com>
 */

/*
 * Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
 * Copyright 2000 VA Linux Systems, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * ""Software""), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef _SAREA_H_
#define _SAREA_H_

#include ""xf86drm.h""

/* SAREA area needs to be at least a page */
#if defined(__alpha__)
#define SAREA_MAX 			0x2000
#elif defined(__ia64__)
#define SAREA_MAX			0x10000		/* 64kB */
#else
/* Intel 830M driver needs at least 8k SAREA */
#define SAREA_MAX			0x2000
#endif

#define SAREA_MAX_DRAWABLES 		256

#define SAREA_DRAWABLE_CLAIMED_ENTRY	0x80000000

/**
 * SAREA per drawable information.
 *
 * \sa _XF86DRISAREA.
 */
typedef struct _XF86DRISAREADrawable {
    unsigned int	stamp;
    unsigned int	flags;
} XF86DRISAREADrawableRec, *XF86DRISAREADrawablePtr;

/**
 * SAREA frame information.
 *
 * \sa  _XF86DRISAREA.
 */
typedef struct _XF86DRISAREAFrame {
    unsigned int        x;
    unsigned int        y;
    unsigned int        width;
    unsigned int        height;
    unsigned int        fullscreen;
} XF86DRISAREAFrameRec, *XF86DRISAREAFramePtr;

/**
 * SAREA definition.
 */
typedef struct _XF86DRISAREA {
    /** first thing is always the DRM locking structure */
    drmLock			lock;
    /** \todo Use readers/writer lock for drawable_lock */
    drmLock			drawable_lock;
    XF86DRISAREADrawableRec	drawableTable[SAREA_MAX_DRAWABLES];
    XF86DRISAREAFrameRec        frame;
    drm_context_t			dummy_context;
} XF86DRISAREARec, *XF86DRISAREAPtr;

typedef struct _XF86DRILSAREA  {
    drmLock                     lock;
    drmLock                     otherLocks[31];
} XF86DRILSAREARec, *XF86DRILSAREAPtr;

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",R2xnc4
code,"/*
 *  linux/arch/arm/kernel/traps.c
 *
 *  Copyright (C) 1995-2009 Russell King
 *  Fragments that appear the same as linux/arch/i386/kernel/traps.c (C) Linus Torvalds
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 *  'traps.c' handles hardware exceptions after we have saved some state in
 *  'linux/arch/arm/lib/traps.S'.  Mostly a debugging aid, but will probably
 *  kill the offending process.
 */
#include <linux/module.h>
#include <linux/signal.h>
#include <linux/spinlock.h>
#include <linux/personality.h>
#include <linux/kallsyms.h>
#include <linux/delay.h>
#include <linux/hardirq.h>
#include <linux/init.h>
#include <linux/uaccess.h>

#include <asm/atomic.h>
#include <asm/cacheflush.h>
#include <asm/system.h>
#include <asm/unistd.h>
#include <asm/traps.h>
#include <asm/unwind.h>

#include ""ptrace.h""
#include ""signal.h""

static const char *handler[]= { ""prefetch abort"", ""data abort"", ""address exception"", ""interrupt"" };

void *vectors_page;

#ifdef CONFIG_DEBUG_USER
unsigned int user_debug;

static int __init user_debug_setup(char *str)
{
	get_option(&str, &user_debug);
	return 1;
}
__setup(""user_debug="", user_debug_setup);
#endif

static void dump_mem(const char *, const char *, unsigned long, unsigned long);

void dump_backtrace_entry(unsigned long where, unsigned long from, unsigned long frame)
{
#ifdef CONFIG_KALLSYMS
	char sym1[KSYM_SYMBOL_LEN], sym2[KSYM_SYMBOL_LEN];
	sprint_symbol(sym1, where);
	sprint_symbol(sym2, from);
	printk(""[<%08lx>] (%s) from [<%08lx>] (%s)\n"", where, sym1, from, sym2);
#else
	printk(""Function entered at [<%08lx>] from [<%08lx>]\n"", where, from);
#endif

	if (in_exception_text(where))
		dump_mem("""", ""Exception stack"", frame + 4, frame + 4 + sizeof(struct pt_regs));
}

#ifndef CONFIG_ARM_UNWIND
/*
 * Stack pointers should always be within the kernels view of
 * physical memory.  If it is not there, then we can't dump
 * out any information relating to the stack.
 */
static int verify_stack(unsigned long sp)
{
	if (sp < PAGE_OFFSET ||
	    (sp > (unsigned long)high_memory && high_memory != NULL))
		return -EFAULT;

	return 0;
}
#endif

/*
 * Dump out the contents of some memory nicely...
 */
static void dump_mem(const char *lvl, const char *str, unsigned long bottom,
		     unsigned long top)
{
	unsigned long first;
	mm_segment_t fs;
	int i;

	/*
	 * We need to switch to kernel mode so that we can use __get_user
	 * to safely read from kernel space.  Note that we now dump the
	 * code first, just in case the backtrace kills us.
	 */
	fs = get_fs();
	set_fs(KERNEL_DS);

	printk(""%s%s(0x%08lx to 0x%08lx)\n"", lvl, str, bottom, top);

	for (first = bottom & ~31; first < top; first += 32) {
		unsigned long p;
		char str[sizeof("" 12345678"") * 8 + 1];

		memset(str, ' ', sizeof(str));
		str[sizeof(str) - 1] = '\0';

		for (p = first, i = 0; i < 8 && p < top; i++, p += 4) {
			if (p >= bottom && p < top) {
				unsigned long val;
				if (__get_user(val, (unsigned long *)p) == 0)
					sprintf(str + i * 9, "" %08lx"", val);
				else
					sprintf(str + i * 9, "" ????????"");
			}
		}
		printk(""%s%04lx:%s\n"", lvl, first & 0xffff, str);
	}

	set_fs(fs);
}

static void dump_instr(const char *lvl, struct pt_regs *regs)
{
	unsigned long addr = instruction_pointer(regs);
	const int thumb = thumb_mode(regs);
	const int width = thumb ? 4 : 8;
	mm_segment_t fs;
	char str[sizeof(""00000000 "") * 5 + 2 + 1], *p = str;
	int i;

	/*
	 * We need to switch to kernel mode so that we can use __get_user
	 * to safely read from kernel space.  Note that we now dump the
	 * code first, just in case the backtrace kills us.
	 */
	fs = get_fs();
	set_fs(KERNEL_DS);

	for (i = -4; i < 1; i++) {
		unsigned int val, bad;

		if (thumb)
			bad = __get_user(val, &((u16 *)addr)[i]);
		else
			bad = __get_user(val, &((u32 *)addr)[i]);

		if (!bad)
			p += sprintf(p, i == 0 ? ""(%0*x) "" : ""%0*x "",
					width, val);
		else {
			p += sprintf(p, ""bad PC value"");
			break;
		}
	}
	printk(""%sCode: %s\n"", lvl, str);

	set_fs(fs);
}

#ifdef CONFIG_ARM_UNWIND
static inline void dump_backtrace(struct pt_regs *regs, struct task_struct *tsk)
{
	unwind_backtrace(regs, tsk);
}
#else
static void dump_backtrace(struct pt_regs *regs, struct task_struct *tsk)
{
	unsigned int fp, mode;
	int ok = 1;

	printk(""Backtrace: "");

	if (!tsk)
		tsk = current;

	if (regs) {
		fp = regs->ARM_fp;
		mode = processor_mode(regs);
	} else if (tsk != current) {
		fp = thread_saved_fp(tsk);
		mode = 0x10;
	} else {
		asm(""mov %0, fp"" : ""=r"" (fp) : : ""cc"");
		mode = 0x10;
	}

	if (!fp) {
		printk(""no frame pointer"");
		ok = 0;
	} else if (verify_stack(fp)) {
		printk(""invalid frame pointer 0x%08x"", fp);
		ok = 0;
	} else if (fp < (unsigned long)end_of_stack(tsk))
		printk(""frame pointer underflow"");
	printk(""\n"");

	if (ok)
		c_backtrace(fp, mode);
}
#endif

void dump_stack(void)
{
	dump_backtrace(NULL, NULL);
}

EXPORT_SYMBOL(dump_stack);

void show_stack(struct task_struct *tsk, unsigned long *sp)
{
	dump_backtrace(NULL, tsk);
	barri",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1Qkq4R
code,"/* $Id: elsa_ser.c,v 1.1.1.1 2011/08/19 02:08:59 ronald Exp $
 *
 * stuff for the serial modem on ELSA cards
 *
 * This software may be used and distributed according to the terms
 * of the GNU General Public License, incorporated herein by reference.
 *
 */

#include <linux/serial.h>
#include <linux/serial_reg.h>
#include <linux/slab.h>

#define MAX_MODEM_BUF	256
#define WAKEUP_CHARS	(MAX_MODEM_BUF/2)
#define RS_ISR_PASS_LIMIT 256
#define BASE_BAUD ( 1843200 / 16 )

//#define SERIAL_DEBUG_OPEN 1
//#define SERIAL_DEBUG_INTR 1
//#define SERIAL_DEBUG_FLOW 1
#undef SERIAL_DEBUG_OPEN
#undef SERIAL_DEBUG_INTR
#undef SERIAL_DEBUG_FLOW
#undef SERIAL_DEBUG_REG
//#define SERIAL_DEBUG_REG 1

#ifdef SERIAL_DEBUG_REG
static u_char deb[32];
const char *ModemIn[] = {""RBR"",""IER"",""IIR"",""LCR"",""MCR"",""LSR"",""MSR"",""SCR""};
const char *ModemOut[] = {""THR"",""IER"",""FCR"",""LCR"",""MCR"",""LSR"",""MSR"",""SCR""};
#endif

static char *MInit_1 = ""AT&F&C1E0&D2\r\0"";
static char *MInit_2 = ""ATL2M1S64=13\r\0"";
static char *MInit_3 = ""AT+FCLASS=0\r\0"";
static char *MInit_4 = ""ATV1S2=128X1\r\0"";
static char *MInit_5 = ""AT\\V8\\N3\r\0"";
static char *MInit_6 = ""ATL0M0&G0%E1\r\0"";
static char *MInit_7 = ""AT%L1%M0%C3\r\0"";

static char *MInit_speed28800 = ""AT%G0%B28800\r\0"";

static char *MInit_dialout = ""ATs7=60 x1 d\r\0"";
static char *MInit_dialin = ""ATs7=60 x1 a\r\0"";


static inline unsigned int serial_in(struct IsdnCardState *cs, int offset)
{
#ifdef SERIAL_DEBUG_REG
	u_int val = inb(cs->hw.elsa.base + 8 + offset);
	debugl1(cs,""in   %s %02x"",ModemIn[offset], val);
	return(val);
#else
	return inb(cs->hw.elsa.base + 8 + offset);
#endif
}

static inline unsigned int serial_inp(struct IsdnCardState *cs, int offset)
{
#ifdef SERIAL_DEBUG_REG
#ifdef ELSA_SERIAL_NOPAUSE_IO
	u_int val = inb(cs->hw.elsa.base + 8 + offset);
	debugl1(cs,""inp  %s %02x"",ModemIn[offset], val);
#else
	u_int val = inb_p(cs->hw.elsa.base + 8 + offset);
	debugl1(cs,""inP  %s %02x"",ModemIn[offset], val);
#endif
	return(val);
#else
#ifdef ELSA_SERIAL_NOPAUSE_IO
	return inb(cs->hw.elsa.base + 8 + offset);
#else
	return inb_p(cs->hw.elsa.base + 8 + offset);
#endif
#endif
}

static inline void serial_out(struct IsdnCardState *cs, int offset, int value)
{
#ifdef SERIAL_DEBUG_REG
	debugl1(cs,""out  %s %02x"",ModemOut[offset], value);
#endif
	outb(value, cs->hw.elsa.base + 8 + offset);
}

static inline void serial_outp(struct IsdnCardState *cs, int offset,
			       int value)
{
#ifdef SERIAL_DEBUG_REG
#ifdef ELSA_SERIAL_NOPAUSE_IO
	debugl1(cs,""outp %s %02x"",ModemOut[offset], value);
#else
	debugl1(cs,""outP %s %02x"",ModemOut[offset], value);
#endif
#endif
#ifdef ELSA_SERIAL_NOPAUSE_IO
	outb(value, cs->hw.elsa.base + 8 + offset);
#else
    	outb_p(value, cs->hw.elsa.base + 8 + offset);
#endif
}

/*
 * This routine is called to set the UART divisor registers to match
 * the specified baud rate for a serial port.
 */
static void change_speed(struct IsdnCardState *cs, int baud)
{
	int	quot = 0, baud_base;
	unsigned cval, fcr = 0;
	int	bits;


	/* byte size and parity */
	cval = 0x03; bits = 10;
	/* Determine divisor based on baud rate */
	baud_base = BASE_BAUD;
	quot = baud_base / baud;
	/* If the quotient is ever zero, default to 9600 bps */
	if (!quot)
		quot = baud_base / 9600;

	/* Set up FIFO's */
	if ((baud_base / quot) < 2400)
		fcr = UART_FCR_ENABLE_FIFO | UART_FCR_TRIGGER_1;
	else
		fcr = UART_FCR_ENABLE_FIFO | UART_FCR_TRIGGER_8;
	serial_outp(cs, UART_FCR, fcr);
	/* CTS flow control flag and modem status interrupts */
	cs->hw.elsa.IER &= ~UART_IER_MSI;
	cs->hw.elsa.IER |= UART_IER_MSI;
	serial_outp(cs, UART_IER, cs->hw.elsa.IER);

	debugl1(cs,""modem quot=0x%x"", quot);
	serial_outp(cs, UART_LCR, cval | UART_LCR_DLAB);/* set DLAB */
	serial_outp(cs, UART_DLL, quot & 0xff);		/* LS of divisor */
	serial_outp(cs, UART_DLM, quot >> 8);		/* MS of divisor */
	serial_outp(cs, UART_LCR, cval);		/* reset DLAB */
	serial_inp(cs, UART_RX);
}

static int mstartup(struct IsdnCardState *cs)
{
	int	retval=0;

	/*
	 * Clear the FIFO buffers and disable them
	 * (they will be reenabled in change_speed())
	 */
	serial_outp(cs, UART_FCR, (UART_FCR_CLEAR_RCVR | UART_FCR_CLEAR_XMIT));

	/*
	 * At this point there's no way the LSR could still be 0xFF;
	 * if it is, then bail out, because there's likely no UART
	 * here.
	 */
	if (serial_inp(cs, UART_LSR) == 0xff) {
		retval = -ENODEV;
		goto errout;
	}
	
	/*
	 * Clear the interrupt registers.
	 */
	(void) serial_inp(cs, UART_RX);
	(void) serial_inp(cs, UART_IIR);
	(void) serial_inp(cs, UART_MSR);

	/*
	 * Now, initialize the UART 
	 */
	serial_outp(cs, UART_LCR, UART_LCR_WLEN8);	/* reset DLAB */

	cs->hw.elsa.MCR = 0;
	cs->hw.elsa.MCR = UART_MCR_DTR | UART_MCR_RTS | UART_MCR_OUT2;
	serial_outp(cs, UART_MCR, cs->hw.elsa.MCR);
	
	/*
	 * Finally, enable interrupts
	 */
	cs->hw.elsa.IER = UART_IER_MSI | UART_IER_RLSI | UART_IER_RDI;
	serial_outp(cs, UART_IER, cs->hw.elsa.IER);	/* enable interrupts */
	
	/*
	 * And clear the interrupt registers again for luck.
	 */
	(void)serial_inp(cs, UART_LSR);
	(void)serial_inp(cs, UART_RX);
	(void)serial_inp(cs, UART_IIR);
	(void)serial_inp(cs, UA",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eAy2AJ
code,"#ifndef BITMAP_H
#define BITMAP_H

#include <allegro5/allegro.h>
#include <memory>
#include ""renderlist.h""

// This class does double duty as a renderable, and a wrapper for allegro bitmap.
class Bitmap;

using BitmapPtr = std::shared_ptr<Bitmap>;

class Bitmap : public Renderable
{
    ALLEGRO_BITMAP* bitmap;
    float x, y;
    float scale;

    public:

    Bitmap() : bitmap(nullptr), x(0), y(0), scale(1.0f)
    {}
    Bitmap( ALLEGRO_BITMAP* _bitmap, int _x = 0 , int _y = 0 ) : bitmap(_bitmap), x(_x), y(_y), scale(1.0f)
    {}

    ~Bitmap();

    void render();
    void create( int w, int h, int flags = 0 );
    bool loadFromFile( const std::string& filename, int flags = 0 );
    bool saveToFile( const std::string& filename );
    BitmapPtr getSubBitmap( int _x, int _y, int _w, int _h );
    void setBitmap( ALLEGRO_BITMAP* nb );
    void setBitmap( BitmapPtr& nb );
    void blit( const BitmapPtr& other, float x, float y, float scale );

    float getX() { return x; }
    float getY() { return y; }

    float getScale() { return scale; }
    
    void setX( int _x ) { x = _x; }
    void setY( int _y ) { y = _y; }
    
    int getWidth() { return al_get_bitmap_width( bitmap ); }
    int getHeight() { return al_get_bitmap_height( bitmap ); }

    void setScale( float _scale ) { scale = _scale; }

};

#endif // BITMAP_H
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iTEyxb
code,"#ifndef ECLAIR_DIRECTORY_H
# define ECLAIR_DIRECTORY_H

# include ""eclair.h""
# include <sys/types.h>
# include <dirent.h>

namespace Eclair
{
	struct DirectoryFile
	{
		std::string name;
		bool		is_directory;
		bool		is_regular_file;
	};

	class Directory
	{
	private:
		std::string		_dirname;
		DIR				*_dir = nullptr;
		std::string		_error_str;
		DirectoryFile	_file;
		explicit	Directory();
	public:
		explicit 			Directory(const std::string& dir);
		virtual 			~Directory() noexcept;
		bool				open() noexcept;
		DirectoryFile		*next() noexcept;
		inline std::string 	error() const noexcept {
			return (this->_error_str);
		}
		inline std::string	path() const noexcept {
			return (this->_dirname);
		}
		static inline std::string current() noexcept {
			char str[1025];
			return (getcwd(str, 1024));
		}
	};
}

#endif",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bDb8a5
code,"#include <stdio.h>
#include <stdint.h>

#include <ibcrypt/chacha.h>
#include <ibcrypt/rand.h>
#include <ibcrypt/sha256.h>
#include <ibcrypt/zfree.h>

#include <libibur/util.h>
#include <libibur/endian.h>

#include ""datafile.h""

#include ""../util/log.h""

int write_datafile(char *path, void *arg, void *data, struct format_desc *f) {
	int ret = -1;

	uint8_t *payload = NULL;
	uint64_t payload_len = 0;
	uint64_t payload_num = 0;

	uint8_t *prefix = NULL;
	uint64_t pref_len = 0;

	uint8_t symm_key[0x20];
	uint8_t hmac_key[0x20];

	uint8_t enc_key[0x20];

	FILE *ff = fopen(path, ""wb"");
	if(ff == NULL) {
		ERR(""failed to open file for writing: %s"", path);
		goto err;
	}

	pref_len = 0x50 + f->pref_len;
	prefix = malloc(pref_len);
	if(prefix == NULL) {
		ERR(""failed to allocate memory"");
		goto err;
	}

	void *cur = data;
	while(cur) {
		payload_len += f->datalen(cur);
		payload_num++;

		cur = *((void **) ((char*)cur + f->next_off));
	}

	encbe64(payload_num, &prefix[0]);
	encbe64(payload_len, &prefix[8]);
	if(cs_rand(&prefix[0x10], 0x20) != 0) {
		ERR(""failed to generate random numbers"");
		goto err;
	}
	if(f->p_fill(arg, &prefix[0x30]) != 0) {
		goto err;
	}

	if(f->s_key(arg, &prefix[0x30], symm_key) != 0) {
		goto err;
	}
	if(f->h_key(arg, &prefix[0x30], hmac_key) != 0) {
		goto err;
	}

	hmac_sha256(hmac_key, 0x20, prefix, pref_len - 0x20, &prefix[pref_len - 0x20]);

	SHA256_CTX kctx;
	sha256_init(&kctx);
	sha256_update(&kctx, symm_key, 0x20);
	sha256_update(&kctx, &prefix[0x10], 0x20);
	sha256_final(&kctx, enc_key);

	payload = malloc(payload_len);
	if(payload == NULL) {
		ERR(""failed to allocate memory"");
		goto err;
	}

	cur = data;
	uint8_t *ptr = payload;
	while(cur) {
		ptr = f->datawrite(cur, ptr);
		if(ptr == NULL) {
			goto err;
		}

		cur = *((void **) ((char*)cur + f->next_off));
	}
	if(ptr - payload != payload_len) {
		ERR(""written length does not match expected"");
		goto err;
	}

	chacha_enc(enc_key, 0x20, 0, payload, payload, payload_len);

	HMAC_SHA256_CTX hctx;
	hmac_sha256_init(&hctx, hmac_key, 0x20);
	hmac_sha256_update(&hctx, prefix, pref_len);
	hmac_sha256_update(&hctx, payload, payload_len);

	uint8_t mac[0x20];
	hmac_sha256_final(&hctx, mac);

	if(fwrite(prefix, 1, pref_len, ff) != pref_len) {
		goto writerr;
	}
	if(payload_len > 0) {
		if(fwrite(payload, 1, payload_len, ff) != payload_len) {
			goto writerr;
		}
	}
	if(fwrite(mac, 1, 0x20, ff) != 0x20) {
		goto writerr;
	}

	ret = 0;

err:
	if(ff) fclose(ff);
	if(payload) zfree(payload, payload_len);
	memsets(enc_key, 0, sizeof(enc_key));
	memsets(symm_key, 0, sizeof(symm_key));
	memsets(hmac_key, 0, sizeof(hmac_key));

	return ret;

writerr:
	ERR(""failed to write to file: %s"", path);
	goto err;
}

int read_datafile(char *path, void *arg, void **data, struct format_desc *f) {
	int ret = -1;

	uint8_t *payload = NULL;
	uint64_t payload_len = 0;
	uint64_t payload_num = 0;

	uint8_t *prefix = NULL;
	uint64_t pref_len = 0;

	uint8_t symm_key[0x20];
	uint8_t hmac_key[0x20];

	uint8_t enc_key[0x20];

	uint8_t mac1[0x20];
	uint8_t mac2c[0x20];
	uint8_t mac2f[0x20];

	FILE *ff = fopen(path, ""rb"");
	if(ff == NULL) {
		ERR(""failed to open file for reading: %s"", path);
		goto err;
	}

	pref_len = 0x50 + f->pref_len;
	prefix = malloc(pref_len);
	if(prefix == NULL) {
		ERR(""failed to allocate memory"");
		goto err;
	}

	if(fread(prefix, 1, pref_len, ff) != pref_len) {
		goto readerr;
	}

	payload_num = decbe64(&prefix[0]);
	payload_len = decbe64(&prefix[8]);

	if(f->s_key(arg, &prefix[0x30], symm_key) != 0) {
		goto err;
	}
	if(f->h_key(arg, &prefix[0x30], hmac_key) != 0) {
		goto err;
	}

	hmac_sha256(hmac_key, 0x20, prefix, pref_len - 0x20, mac1);
	if(memcmp_ct(mac1, &prefix[pref_len-0x20], 0x20) != 0) {
		ERR(""invalid file"");
		goto err;
	}

	SHA256_CTX kctx;
	sha256_init(&kctx);
	sha256_update(&kctx, symm_key, 0x20);
	sha256_update(&kctx, &prefix[0x10], 0x20);
	sha256_final(&kctx, enc_key);

	payload = malloc(payload_len);
	if(payload == NULL) {
		ERR(""failed to allocate memory"");
		goto err;
	}

	if(fread(payload, 1, payload_len, ff) != payload_len) {
		goto readerr;
	}
	if(fread(mac2f, 1, 0x20, ff) != 0x20) {
		goto readerr;
	}

	HMAC_SHA256_CTX hctx;
	hmac_sha256_init(&hctx, hmac_key, 0x20);
	hmac_sha256_update(&hctx, prefix, pref_len);
	hmac_sha256_update(&hctx, payload, payload_len);
	hmac_sha256_final(&hctx, mac2c);

	if(memcmp_ct(mac2c, mac2f, 0x20) != 0) {
		ERR(""invalid file"");
		goto err;
	}

	chacha_dec(enc_key, 0x20, 0, payload, payload, payload_len);

	void **cur = data;
	uint8_t *ptr = payload;
	uint64_t i;
	for(i = 0; (ptr - payload) < payload_len && i < payload_num; i++) {
		ptr = f->dataread(cur, arg, ptr);
		if(ptr == NULL) {
			goto err;
		}

		cur = (void **) ((char*)(*cur) + f->next_off);
	}
	*cur = NULL;
	if(i != payload_num) {
		ERR(""read num does not match expected"");
		goto err;
	}
	if(ptr - payload != payload_len) {
		ERR(""read length does not match expected"");
		goto err;
	}

	ret = 0;

err:
	if(ff) fclose(ff);
	if(payload) zfree(payload, payload_len);
	memsets(enc_key, 0, sizeof(enc_key));
	memsets(symm_key, 0, sizeof(symm_key));
	memse",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4kh5YI
code,"#import <Flutter/Flutter.h>

@interface AdbflibPlugin : NSObject<FlutterPlugin>
@end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7iCGk0
code,"/*
 * psgp_settings.h
 *
 *  Created on: 21 Jan 2012
 *      Author: barillrl
 */

#ifndef PSGP_SETTINGS_H_
#define PSGP_SETTINGS_H_

//-----------------------------------------------------------------------------
// CONSTANTS AND OTHER GENERAL PARAMETERS
//-----------------------------------------------------------------------------

// Max number of parameters for PSGP (this limit is set by the R code)
#define NUM_PSGP_PARAMETERS 16

// Maximum number of observations kept for param estimation
#define MAX_OBS 1000

// Maximum number of active points
#define MAX_ACTIVE_POINTS 400

// Likelihood to nugget ratio
#define LIKELIHOOD_NUGGET_RATIO 0.01

// Number of sweeps through data with changing/fixed active set
#define NUM_SWEEPS_CHANGING 1
#define NUM_SWEEPS_FIXED 1

// Whether to use a GP instead of PSGP for parameter estimation
#define PARAMETER_ESTIMATION_USING_GP false

// Outer loops in parameter estimation for PSGP
#define PSGP_PARAM_ITERATIONS 3

// Inner loop (i.e. SCG iterations in each outer loop) for PSGP
#define PSGP_SCG_ITERATIONS 5

// Define whether to use full prediction (all data at once) or
// split prediction (by chunks of data)
#define USING_CHUNK_PREDICTION true

// Size of prediction chunk (in number of observations)
#define CHUNK_SIZE 1000


#endif /* PSGP_SETTINGS_H_ */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zjp0W4
code,"//
//  AppDelegate.h
//  EXTabBarController
//
//  Created by apple on 15/5/23.
//  Copyright (c) 2015年 DeltaX. All rights reserved.
//

#import <UIKit/UIKit.h>

@interface AppDelegate : UIResponder <UIApplicationDelegate>

@property (strong, nonatomic) UIWindow *window;


@end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zaFR2U
code,"/* coff object file format
   Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009
   Free Software Foundation, Inc.

   This file is part of GAS.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

#ifndef OBJ_FORMAT_H
#define OBJ_FORMAT_H

#define OBJ_COFF 1

#include ""targ-cpu.h""

/* This internal_lineno crap is to stop namespace pollution from the
   bfd internal coff headerfile.  */
#define internal_lineno bfd_internal_lineno
#include ""coff/internal.h""
#undef internal_lineno

/* CPU-specific setup:  */

#ifdef TC_ARM
#include ""coff/arm.h""
#ifndef TARGET_FORMAT
#define TARGET_FORMAT ""coff-arm""
#endif
#endif

#ifdef TC_PPC
#ifdef TE_PE
#include ""coff/powerpc.h""
#else
#include ""coff/rs6000.h""
#endif
#endif

#ifdef TC_SPARC
#include ""coff/sparc.h""
#endif

#ifdef TC_I386
#ifdef TE_PEP
#include ""coff/x86_64.h""
#else
#include ""coff/i386.h""
#endif

#ifndef TARGET_FORMAT
#ifdef TE_PEP
#define TARGET_FORMAT ""coff-x86-64""
#else
#define TARGET_FORMAT ""coff-i386""
#endif
#endif
#endif

#ifdef TC_M68K
#include ""coff/m68k.h""
#ifndef TARGET_FORMAT
#define TARGET_FORMAT ""coff-m68k""
#endif
#endif

#ifdef TC_OR32
#include ""coff/or32.h""
#define TARGET_FORMAT ""coff-or32-big""
#endif

#ifdef TC_I960
#include ""coff/i960.h""
#define TARGET_FORMAT ""coff-Intel-little""
#endif

#ifdef TC_Z80
#include ""coff/z80.h""
#define TARGET_FORMAT ""coff-z80""
#endif

#ifdef TC_Z8K
#include ""coff/z8k.h""
#define TARGET_FORMAT ""coff-z8k""
#endif

#ifdef TC_H8300
#include ""coff/h8300.h""
#define TARGET_FORMAT ""coff-h8300""
#endif

#ifdef TC_H8500
#include ""coff/h8500.h""
#define TARGET_FORMAT ""coff-h8500""
#endif

#ifdef TC_SH

#ifdef TE_PE
#define COFF_WITH_PE
#endif

#include ""coff/sh.h""

#ifdef TE_PE
#define TARGET_FORMAT ""pe-shl""
#else

#define TARGET_FORMAT					\
  (!target_big_endian					\
   ? (sh_small ? ""coff-shl-small"" : ""coff-shl"")		\
   : (sh_small ? ""coff-sh-small"" : ""coff-sh""))

#endif
#endif

#ifdef TC_MIPS
#define COFF_WITH_PE
#include ""coff/mipspe.h""
#undef  TARGET_FORMAT
#define TARGET_FORMAT ""pe-mips""
#endif

#ifdef TC_TIC30
#include ""coff/tic30.h""
#define TARGET_FORMAT ""coff-tic30""
#endif

#ifdef TC_TIC4X
#include ""coff/tic4x.h""
#define TARGET_FORMAT ""coff2-tic4x""
#endif

#ifdef TC_TIC54X
#include ""coff/tic54x.h""
#define TARGET_FORMAT ""coff1-c54x""
#endif

#ifdef TC_TIC6X
#include ""coff/tic6x.h""
//#define TARGET_FORMAT ""coff2-c6x""
#endif

#ifdef TC_MCORE
#include ""coff/mcore.h""
#ifndef TARGET_FORMAT
#define TARGET_FORMAT ""pe-mcore""
#endif
#endif

#ifdef TE_PE
#define obj_set_weak_hook pecoff_obj_set_weak_hook
#define obj_clear_weak_hook pecoff_obj_clear_weak_hook
#endif

#ifndef OBJ_COFF_MAX_AUXENTRIES
#define OBJ_COFF_MAX_AUXENTRIES 1
#endif

#define obj_symbol_new_hook coff_obj_symbol_new_hook
#define obj_symbol_clone_hook coff_obj_symbol_clone_hook
#define obj_read_begin_hook coff_obj_read_begin_hook

#include ""bfd/libcoff.h""

#define OUTPUT_FLAVOR bfd_target_coff_flavour

/* Alter the field names, for now, until we've fixed up the other
   references to use the new name.  */
#ifdef TC_I960
#define TC_SYMFIELD_TYPE	symbolS *
#define sy_tc			bal
#endif

#define OBJ_SYMFIELD_TYPE	unsigned long
#define sy_obj			sy_obj_flags

/* We can't use the predefined section symbols in bfd/section.c, as
   COFF symbols have extra fields.  See bfd/libcoff.h:coff_symbol_type.  */
#ifndef obj_sec_sym_ok_for_reloc
#define obj_sec_sym_ok_for_reloc(SEC)	((SEC)->owner != 0)
#endif

#define SYM_AUXENT(S) \
  (&coffsymbol (symbol_get_bfdsym (S))->native[1].u.auxent)
#define SYM_AUXINFO(S) \
  (&coffsymbol (symbol_get_bfdsym (S))->native[1])

/* The number of auxiliary entries.  */
#define S_GET_NUMBER_AUXILIARY(s) \
  (coffsymbol (symbol_get_bfdsym (s))->native->u.syment.n_numaux)
/* The number of auxiliary entries.  */
#define S_SET_NUMBER_AUXILIARY(s, v)	(S_GET_NUMBER_AUXILIARY (s) = (v))

/* True if a symbol name is in the string table, i.e. its length is > 8.  */
#define S_IS_STRING(s)		(strlen (S_GET_NAME (s)) > 8 ? 1 : 0)

/* Auxiliary entry macros. SA_ stands for symbol auxiliary.  */
/* Omit the tv related fields.  */
/* Accessors.  */

#define SA_GET_SYM_TAGNDX(s)	(SYM_AUXENT (s)->x_sym.x_tagndx.l)
#define SA_GET_SYM_LNNO(s)	(SYM_AUXENT (s)->x_sym.x_misc.x_lnsz.x_lnno)
#define SA_GET_SYM_SIZE(s)	(SYM_AUXENT (s)->x_sym.x_misc.x_lnsz.x_size)
#define SA_GET_SYM_FSIZE(s)	(SYM_AUXENT (s)->x_sym.x_misc.x_fsize)
#define SA_GET_SYM_LNNOPTR(s)	(SYM_AUXENT (s)->x_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WfZwCL
code,"#import ""MOBProjection.h""

@interface MOBProjectionEPSG102713 : MOBProjection

@end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rxjUgc
code,"#pragma once

#include ""ofMain.h""
#include ""ofxOsc.h""
#include ""VHPtriggerArea.h""
#include ""ofxXmlSettings.h""

class ofApp : public ofBaseApp{

	public:
		void setup();
		void update();
		void draw();

		void keyPressed(int key);
		void keyReleased(int key);
		void mouseMoved(int x, int y );
		void mouseDragged(int x, int y, int button);
		void mousePressed(int x, int y, int button);
		void mouseReleased(int x, int y, int button);
		void windowResized(int w, int h);
		void dragEvent(ofDragInfo dragInfo);
		void gotMessage(ofMessage msg);
    
        // variables
    
        // Cam
        ofVideoGrabber 		vidGrabber;
        ofTexture			videoTexture;
        ofTexture			contrastTexture;
        ofTexture			backgroundTexture;
        unsigned char *     background;
        unsigned char *     pixels;
        unsigned char *     buffer;
        unsigned char * 	timeBuffer;
        int 				camWidth;
        int 				camHeight;
        int                 totalPixels;
        float               contrast_e[2];
        float               contrast_f[2];
        float               percent;
        float               colorFactor[3];
    
        // triggerArea
        VHPtriggerArea      area;
    
        // OSC
        ofxOscReceiver receiver;
    
        // info
        ofTrueTypeFont		font;
    
        // settings
        ofxXmlSettings XML;
		
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WAAzvr
code,"/**
  @file     std_streambuf.h
  @brief    suppresses warnings in streambuf.
  @author   HRYKY
  @version  $Id: std_streambuf.h 337 2014-03-23 14:12:33Z hryky.private@gmail.com $
 */
#ifndef STD_STREAMBUF_H_20140323003904693
#define STD_STREAMBUF_H_20140323003904693
#include ""hryky/pragma.h""
#pragma hryky_pragma_push_warning
#   include <streambuf>
#pragma hryky_pragma_pop_warning
//------------------------------------------------------------------------------
// defines macros
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// declares types
//------------------------------------------------------------------------------
namespace hryky
{
} // namespace hryky
//------------------------------------------------------------------------------
// declares classes
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// declares global functions
//------------------------------------------------------------------------------
namespace hryky
{
} // namespace hryky
//------------------------------------------------------------------------------
// defines global functions
//------------------------------------------------------------------------------
#endif // STD_STREAMBUF_H_20140323003904693
// end of file
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Np_qw5
code,"/* Copyright (c) 2010-2012, Code Aurora Forum. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

/* #define DEBUG */
#define DEV_DBG_PREFIX ""HDMI: ""
/* #define REG_DUMP */

#define CEC_MSG_PRINT
#define TOGGLE_CEC_HARDWARE_FSM

#include <linux/types.h>
#include <linux/bitops.h>
#include <linux/clk.h>
#include <linux/mutex.h>
#include <mach/msm_hdmi_audio.h>
#include <mach/clk.h>
#include <mach/msm_iomap.h>
#include <mach/socinfo.h>

#include ""msm_fb.h""
#include ""hdmi_msm.h""

/* Supported HDMI Audio channels */
#define MSM_HDMI_AUDIO_CHANNEL_2		0
#define MSM_HDMI_AUDIO_CHANNEL_4		1
#define MSM_HDMI_AUDIO_CHANNEL_6		2
#define MSM_HDMI_AUDIO_CHANNEL_8		3
#define MSM_HDMI_AUDIO_CHANNEL_MAX		4
#define MSM_HDMI_AUDIO_CHANNEL_FORCE_32BIT	0x7FFFFFFF

/* Supported HDMI Audio sample rates */
#define MSM_HDMI_SAMPLE_RATE_32KHZ		0
#define MSM_HDMI_SAMPLE_RATE_44_1KHZ		1
#define MSM_HDMI_SAMPLE_RATE_48KHZ		2
#define MSM_HDMI_SAMPLE_RATE_88_2KHZ		3
#define MSM_HDMI_SAMPLE_RATE_96KHZ		4
#define MSM_HDMI_SAMPLE_RATE_176_4KHZ		5
#define MSM_HDMI_SAMPLE_RATE_192KHZ		6
#define MSM_HDMI_SAMPLE_RATE_MAX		7
#define MSM_HDMI_SAMPLE_RATE_FORCE_32BIT	0x7FFFFFFF

static int msm_hdmi_sample_rate = MSM_HDMI_SAMPLE_RATE_48KHZ;

/* HDMI/HDCP Registers */
#define HDCP_DDC_STATUS		0x0128
#define HDCP_DDC_CTRL_0		0x0120
#define HDCP_DDC_CTRL_1		0x0124
#define HDMI_DDC_CTRL		0x020C

#define HPD_EVENT_OFFLINE 0
#define HPD_EVENT_ONLINE  1

#define SWITCH_SET_HDMI_AUDIO(d, force) \
	do {\
		if (!hdmi_msm_is_dvi_mode() &&\
			((force) ||\
			 (external_common_state->audio_sdev.state != (d)))) {\
			switch_set_state(&external_common_state->audio_sdev,\
					(d));\
			DEV_INFO(""%s: hdmi_audio state switched to %d\n"",\
				__func__,\
				external_common_state->audio_sdev.state);\
		} \
	} while (0)

struct workqueue_struct *hdmi_work_queue;
struct hdmi_msm_state_type *hdmi_msm_state;

/* Enable HDCP by default */
static bool hdcp_feature_on = true;

DEFINE_MUTEX(hdmi_msm_state_mutex);
EXPORT_SYMBOL(hdmi_msm_state_mutex);
static DEFINE_MUTEX(hdcp_auth_state_mutex);

static void hdmi_msm_dump_regs(const char *prefix);

static void hdmi_msm_hdcp_enable(void);
static void hdmi_msm_turn_on(void);
static int hdmi_msm_audio_off(void);
static int hdmi_msm_read_edid(void);
static void hdmi_msm_hpd_off(void);
static boolean hdmi_msm_is_dvi_mode(void);

#ifdef CONFIG_FB_MSM_HDMI_MSM_PANEL_CEC_SUPPORT

static void hdmi_msm_cec_line_latch_detect(void);

#ifdef TOGGLE_CEC_HARDWARE_FSM
static boolean msg_send_complete = TRUE;
static boolean msg_recv_complete = TRUE;
#endif

#define HDMI_MSM_CEC_REFTIMER_REFTIMER_ENABLE	BIT(16)
#define HDMI_MSM_CEC_REFTIMER_REFTIMER(___t)	(((___t)&0xFFFF) << 0)

#define HDMI_MSM_CEC_TIME_SIGNAL_FREE_TIME(___t)	(((___t)&0x1FF) << 7)
#define HDMI_MSM_CEC_TIME_ENABLE			BIT(0)

#define HDMI_MSM_CEC_ADDR_LOGICAL_ADDR(___la)	(((___la)&0xFF) << 0)

#define HDMI_MSM_CEC_CTRL_LINE_OE			BIT(9)
#define HDMI_MSM_CEC_CTRL_FRAME_SIZE(___sz)		(((___sz)&0x1F) << 4)
#define HDMI_MSM_CEC_CTRL_SOFT_RESET		BIT(2)
#define HDMI_MSM_CEC_CTRL_SEND_TRIG			BIT(1)
#define HDMI_MSM_CEC_CTRL_ENABLE			BIT(0)

#define HDMI_MSM_CEC_INT_FRAME_RD_DONE_MASK		BIT(7)
#define HDMI_MSM_CEC_INT_FRAME_RD_DONE_ACK		BIT(6)
#define HDMI_MSM_CEC_INT_FRAME_RD_DONE_INT		BIT(6)
#define HDMI_MSM_CEC_INT_MONITOR_MASK		BIT(5)
#define HDMI_MSM_CEC_INT_MONITOR_ACK		BIT(4)
#define HDMI_MSM_CEC_INT_MONITOR_INT		BIT(4)
#define HDMI_MSM_CEC_INT_FRAME_ERROR_MASK		BIT(3)
#define HDMI_MSM_CEC_INT_FRAME_ERROR_ACK		BIT(2)
#define HDMI_MSM_CEC_INT_FRAME_ERROR_INT		BIT(2)
#define HDMI_MSM_CEC_INT_FRAME_WR_DONE_MASK		BIT(1)
#define HDMI_MSM_CEC_INT_FRAME_WR_DONE_ACK		BIT(0)
#define HDMI_MSM_CEC_INT_FRAME_WR_DONE_INT		BIT(0)

#define HDMI_MSM_CEC_FRAME_WR_SUCCESS(___st)         (((___st)&0xB) ==\
		(HDMI_MSM_CEC_INT_FRAME_WR_DONE_INT |\
			HDMI_MSM_CEC_INT_FRAME_WR_DONE_MASK |\
			HDMI_MSM_CEC_INT_FRAME_ERROR_MASK))

#define HDMI_MSM_CEC_RETRANSMIT_NUM(___num)		(((___num)&0xF) << 4)
#define HDMI_MSM_CEC_RETRANSMIT_ENABLE		BIT(0)

#define HDMI_MSM_CEC_WR_DATA_DATA(___d)		(((___d)&0xFF) << 8)


void hdmi_msm_cec_init(void)
{
	/* 0x02A8 CEC_REFTIMER */
	HDMI_OUTP(0x02A8,
		HDMI_MSM_CEC_REFTIMER_REFTIMER_ENABLE
		| HDMI_MSM_CEC_REFTIMER_REFTIMER(27 * 50)
		);

	/*
	 * 0x02A0 CEC_ADDR
	 * Starting with a default address of 4
	 */
	HDMI_OUTP(0x02A0, HDMI_MSM_CEC_ADDR_LOGICAL_ADDR(4));

	hdmi_msm_state->first_monitor = 0;
	hdmi_msm_state->fsm_reset_done = false;

	/* 0x029C CEC_INT */
	/* Enable CEC interrupts */
	HDMI_OUTP(0x029C,					\
		  HDMI_MSM_CEC_INT_FRAME_WR_DONE_MASK		\
		  | HDMI_MSM_CEC_INT_FRAME_ERROR_MASK		\
		  | HDMI_MSM_CEC_INT_MONITOR_MASK		\
		  | HDMI_MSM_CEC_INT_FRAME_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OPNRIO
code,"// MusicXML Class Library
// Copyright (c) by Matthew James Briggs
// Distributed under the MIT License

#pragma once
#include ""mxtest/control/CompileControl.h""
#ifdef MX_COMPILE_CORE_TESTS

#include ""mxtest/core/HelperFunctions.h""
#include ""mx/core/Elements.h""

namespace mxtest
{
    mx::core::FullNoteGroupPtr tgenFullNoteGroup( TestMode v );
    void tgenFullNoteGroupExpected(std::ostream& os, int indentLevel, TestMode v );
}

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sKnJJ7
code,"
#include ""..\stdafx.h""

#pragma once

class CMutex
{
private:
	HANDLE m_mutex;
	bool m_isLocked;

	void Lock()
	{
		WaitForSingleObject(this->m_mutex, INFINITE);
	}

	void Unlock()
	{
		if (this->m_isLocked)
		{
			this->m_isLocked = false;
			ReleaseMutex(this->m_mutex);
		}
	}

public:
	CMutex()
	{
		this->m_mutex = CreateMutex(NULL, FALSE, NULL);
	}

	~CMutex()
	{
		CloseHandle(this->m_mutex);
	}

	friend class CMutexLock;
};

class CMutexLock
{
private:
	CMutex* m_mutexObj;
public:

	CMutexLock(CMutex* mutex)
	{
		this->m_mutexObj = mutex;
		this->m_mutexObj->Lock();
	}

	~CMutexLock()
	{
		this->m_mutexObj->Unlock();
	}
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rtIi31
code,"#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<string.h>
int main(){
   int pid1,pid2,pid3,pid4;
   int p1[2],p2[2];
   char bufr[30],rev[30];
   int countL=0,countU=0,i=-1,j=0,countV=0,len;
   pipe(p1);
   pipe(p2);
   if(pid1=fork()==0){

      if(pid2=fork()==0){ 
         read(p2[0],bufr,sizeof(bufr));
         len=strlen(bufr);
         for(i=len-1,j=0;j<len;i--,j++)
            rev[j]=bufr[i];
         rev[j]='\0';
         printf(""Proccess D---- Reverse = %s \n"",rev);
         exit(1);
      }
      else{
         read(p1[0],bufr,sizeof(bufr)); 
         write(p2[1],bufr,sizeof(bufr));
         if(pid3=fork()==0){
            printf(""Poccess C--- ID of B = %d and ID of C = %d \n"",getppid(),getpid());
         exit(1);
      }
      else{
         while(bufr[++i]!='\0')
            if(bufr[i]>='A' && bufr[i]<='Z')
               countU++;
         i=-1;
         while(bufr[++i]!='\0')
            if(bufr[i]>='a' && bufr[i]<='z')
               countL++;
         printf(""Poccess B--- No of UpperCase letters = %d \n"",countU);
         printf(""Poccess B--- No of LowerCase letters = %d \n"",countL);
         waitpid(pid2,NULL,0);
         waitpid(pid3,NULL,0);
      }
   }
   exit(1);
   }
   else{
      printf(""Poccess A--- Enter a sentence "");
      gets(bufr);
      write(p1[1],bufr,sizeof(bufr));
      while(bufr[++i]!='\0')
         if(bufr[i]=='a' || bufr[i]=='e' || bufr[i]=='i' || bufr[i]=='o' || bufr[i]=='u' ||
            bufr[i]=='A' || bufr[i]=='E' || bufr[i]=='I' || bufr[i]=='O' || bufr[i]=='U' )
            countV++;
      printf(""Poccess A--- No of Vowels = %d \n"",countV);
      waitpid(pid1,NULL,0);
   }
   close(p1[0]);
   close(p1[1]);
   return 0;
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZEeqeu
code,"//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import ""CDStructures.h""

#import ""IDEProvisioningSigningIdentity-Protocol.h""

@class NSDate, NSString;

@interface IDEProvisioningSigningIdentityPrototype : NSObject <IDEProvisioningSigningIdentity>
{
    BOOL _distribution;
    NSString *_certificateKind;
}

@property(nonatomic, getter=isDistribution) BOOL distribution; // @synthesize distribution=_distribution;
@property(copy, nonatomic) NSString *certificateKind; // @synthesize certificateKind=_certificateKind;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSDate *expirationDate;
@property(readonly, copy, nonatomic) NSString *teamMemberID;
@property(readonly, nonatomic) NSString *serialNumber;
- (id)enhancedSigningIdentityWithState:(unsigned long long)arg1;
- (BOOL)matchesSigningIdentity:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XVC0Ju
code,"#pragma once

#include ""SYCL/detail/common.h""

namespace cl {
namespace sycl {
namespace detail {

using counter_t = unsigned int;

template <class T, counter_t start = 0>
class counter {
 private:
  static counter_t internal_count;
  counter_t counter_id;

 public:
  counter() : counter_id(internal_count++) {}

  counter(const counter& copy) : counter() {}
  counter(counter&& move) noexcept : counter_id(move.counter_id) {}
  counter& operator=(const counter& copy) {
    counter_id = copy.counter_id;
    return *this;
  }
  counter& operator=(counter&& move) noexcept {
    return *this;
  }
  ~counter() = default;

  static counter_t get_total_count() {
    return internal_count;
  }

  counter_t get_count_id() const {
    return counter_id;
  }
};

template <class T, counter_t start>
counter_t counter<T, start>::internal_count = start;

}  // namespace detail
}  // namespace sycl
}  // namespace cl
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OrAxXf
code,"/*
 * Copyright (C) 2005-2012 MaNGOS <http://getmangos.com/>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/// \addtogroup world The World
/// @{
/// \file

#ifndef __WORLD_H
#define __WORLD_H

#include ""Common.h""
#include ""Timer.h""
#include ""Policies/Singleton.h""
#include ""SharedDefines.h""
#include ""ObjectLock.h""
#include ""Util.h""

#include <map>
#include <set>
#include <list>

class Object;
class WorldPacket;
class WorldSession;
class Player;
class Weather;
class SqlResultQueue;
class QueryResult;
class WorldSocket;

// ServerMessages.dbc
enum ServerMessageType
{
    SERVER_MSG_SHUTDOWN_TIME          = 1,
    SERVER_MSG_RESTART_TIME           = 2,
    SERVER_MSG_CUSTOM                 = 3,
    SERVER_MSG_SHUTDOWN_CANCELLED     = 4,
    SERVER_MSG_RESTART_CANCELLED      = 5,
    SERVER_MSG_BG_SHUTDOWN_TIME       = 6,
    SERVER_MSG_BG_RESTART_TIME        = 7,
    SERVER_MSG_INSTANCE_SHUTDOWN_TIME = 8,
    SERVER_MSG_INSTANCE_RESTART_TIME  = 9,
};

enum ShutdownMask
{
    SHUTDOWN_MASK_RESTART = 1,
    SHUTDOWN_MASK_IDLE    = 2,
};

enum ShutdownExitCode
{
    SHUTDOWN_EXIT_CODE = 0,
    ERROR_EXIT_CODE    = 1,
    RESTART_EXIT_CODE  = 2,
};

/// Timers for different object refresh rates
enum WorldTimers
{
    WUPDATE_AUCTIONS    = 0,
    WUPDATE_WEATHERS    = 1,
    WUPDATE_UPTIME      = 2,
    WUPDATE_CORPSES     = 3,
    WUPDATE_EVENTS      = 4,
    WUPDATE_DELETECHARS = 5,
    WUPDATE_AHBOT       = 6,
    WUPDATE_AUTOBROADCAST = 7,
    WUPDATE_WORLDSTATE  = 8,
    WUPDATE_COUNT       = 9
};

/// Configuration elements
enum eConfigUInt32Values
{
    CONFIG_UINT32_COMPRESSION = 0,
    CONFIG_UINT32_INTERVAL_SAVE,
    CONFIG_UINT32_INTERVAL_GRIDCLEAN,
    CONFIG_UINT32_INTERVAL_MAPUPDATE,
    CONFIG_UINT32_INTERVAL_CHANGEWEATHER,
    CONFIG_UINT32_MAPUPDATE_MAXVISITORS,
    CONFIG_UINT32_MAPUPDATE_MAXVISITS,
    CONFIG_UINT32_PORT_WORLD,
    CONFIG_UINT32_GAME_TYPE,
    CONFIG_UINT32_REALM_ZONE,
    CONFIG_UINT32_STRICT_PLAYER_NAMES,
    CONFIG_UINT32_STRICT_CHARTER_NAMES,
    CONFIG_UINT32_STRICT_PET_NAMES,
    CONFIG_UINT32_MIN_PLAYER_NAME,
    CONFIG_UINT32_MIN_CHARTER_NAME,
    CONFIG_UINT32_MIN_PET_NAME,
    CONFIG_UINT32_CHARACTERS_CREATING_DISABLED,
    CONFIG_UINT32_CHARACTERS_PER_ACCOUNT,
    CONFIG_UINT32_CHARACTERS_PER_REALM,
    CONFIG_UINT32_HEROIC_CHARACTERS_PER_REALM,
    CONFIG_UINT32_MIN_LEVEL_FOR_HEROIC_CHARACTER_CREATING,
    CONFIG_UINT32_SKIP_CINEMATICS,
    CONFIG_UINT32_MAX_PLAYER_LEVEL,
    CONFIG_UINT32_START_PLAYER_LEVEL,
    CONFIG_UINT32_START_HEROIC_PLAYER_LEVEL,
    CONFIG_UINT32_START_PLAYER_MONEY,
    CONFIG_UINT32_MAX_HONOR_POINTS,
    CONFIG_UINT32_START_HONOR_POINTS,
    CONFIG_UINT32_MAX_ARENA_POINTS,
    CONFIG_UINT32_START_ARENA_POINTS,
    CONFIG_UINT32_INSTANCE_RESET_TIME_HOUR,
    CONFIG_UINT32_INSTANCE_UNLOAD_DELAY,
    CONFIG_UINT32_MAX_SPELL_CASTS_IN_CHAIN,
    CONFIG_UINT32_BIRTHDAY_TIME,
    CONFIG_UINT32_MAX_PRIMARY_TRADE_SKILL,
    CONFIG_UINT32_TRADE_SKILL_GMIGNORE_MAX_PRIMARY_COUNT,
    CONFIG_UINT32_TRADE_SKILL_GMIGNORE_LEVEL,
    CONFIG_UINT32_TRADE_SKILL_GMIGNORE_SKILL,
    CONFIG_UINT32_MIN_PETITION_SIGNS,
    CONFIG_UINT32_GM_LOGIN_STATE,
    CONFIG_UINT32_GM_VISIBLE_STATE,
    CONFIG_UINT32_GM_ACCEPT_TICKETS,
    CONFIG_UINT32_GM_CHAT,
    CONFIG_UINT32_GM_WISPERING_TO,
    CONFIG_UINT32_GM_LEVEL_IN_GM_LIST,
    CONFIG_UINT32_GM_LEVEL_IN_WHO_LIST,
    CONFIG_UINT32_START_GM_LEVEL,
    CONFIG_UINT32_GM_INVISIBLE_AURA,
    CONFIG_UINT32_GROUP_VISIBILITY,
    CONFIG_UINT32_MAIL_DELIVERY_DELAY,
    CONFIG_UINT32_MASS_MAILER_SEND_PER_TICK,
    CONFIG_UINT32_UPTIME_UPDATE,
    CONFIG_UINT32_AUCTION_DEPOSIT_MIN,
    CONFIG_UINT32_SKILL_CHANCE_ORANGE,
    CONFIG_UINT32_SKILL_CHANCE_YELLOW,
    CONFIG_UINT32_SKILL_CHANCE_GREEN,
    CONFIG_UINT32_SKILL_CHANCE_GREY,
    CONFIG_UINT32_SKILL_CHANCE_MINING_STEPS,
    CONFIG_UINT32_SKILL_CHANCE_SKINNING_STEPS,
    CONFIG_UINT32_SKILL_GAIN_CRAFTING,
    CONFIG_UINT32_SKILL_GAIN_DEFENSE,
    CONFIG_UINT32_SKILL_GAIN_GATHERING,
    CONFIG_UINT32_SKILL_GAIN_WEAPON,
    CONFIG_UINT32_MAX_OVERSPEED_PINGS,
    CONFIG_UINT32_EXPANSION,
    CONFIG_UINT32_CHATFLOOD_MESSAGE_COUNT,
    CONFIG_UINT32_CHATFLOOD_MESSAGE_DELAY,
    CONFIG_UINT32_CHATFLOOD_MUTE_TIME,
    CONFIG_UINT32_CREATURE_FAMILY_ASSISTANCE_DELAY,
    CONFIG_UINT32_CREATURE_FAMILY_FLEE_DELAY,
    CONFIG_UINT32_WORLD_BOSS_LEVEL_DIFF,
    CONFIG_UINT32_QUEST_DAILY_RESET_HOUR,
    CONFIG_UINT32_QUEST_WEEKLY_RESET_WEEK_DA",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bWgMzv
code,"#include <stdio.h>

int main() {
  int current_char, previous_char;

  printf(""Input text below, multiple spaces will be escaped:\n"");

  previous_char = -1;

  while((current_char = getchar()) != EOF) {
    if (!(current_char == ' ' && previous_char == ' ')) {
      putchar(current_char);
    }

    previous_char = current_char;
  }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NdzMHB
code,"// RUN: %clang_cc1 -analyze -inline-call -analyzer-store region -analyze-function f2 -verify %s

// Test parameter 'a' is registered to LiveVariables analysis data although it
// is not referenced in the function body. 
// Before processing 'return 1;', in RemoveDeadBindings(), we query the liveness
// of 'a', because we have a binding for it due to parameter passing.
int f1(int a) {
  return 1;
}

void f2() {
  int x;
  x = f1(1);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ua7jfc
code,"#define NC0_As          0x0E
#define NC0_B           0x0D

#define NC1_C           0x15
#define NC1_Cs          0x1E
#define NC1_D           0x1D
#define NC1_Ds          0x26
#define NC1_E           0x24
#define NC1_F           0x2D
#define NC1_Fs          0x2E
#define NC1_G           0x2C
#define NC1_Gs          0x36
#define NC1_A           0x35
#define NC1_As          0x3D
#define NC1_B           0x3C

#define NC2_C           0x43
#define NC2_Cs          0x46
#define NC2_D           0x44
#define NC2_Ds          0x45
#define NC2_E           0x4D
#define NC2_F           0x54
#define NC2_Fs          0x55
#define NC2_G           0x5B
#define NC2_Gs          0x5D
#define NC2_A           0x12
#define NC2_As          0x58
#define NC2_B           0x1A

#define NC_OCTAVEUP     0x05
#define NC_OCTAVEDOWN   0x06
#define NC_INSTRUP      0x04
#define NC_INSTRDOWN    0x0C
#define NC_TABLEUP      0x03
#define NC_TABLEDOWN    0x0B
#define NC_PULSETOGGLE  0x0A
#define NC_TABLERUN     0x29

#define NC_NOP          0x00
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d3bUMv
code,"//
//  BlackHoleDemo.h
//  Drawing
//
//  Created by Adrian Russell on 16/12/2013.
//  Copyright (c) 2013 Adrian Russell. All rights reserved.
//

#ifndef __Drawing__BlackHoleDemo__
#define __Drawing__BlackHoleDemo__

#include ""PhysicsDemo.h""
#include ""ForceGenerator.h""

class BlackHoleDemo : public PhysicsDemo {
    
public:
    BlackHoleDemo();
    ~BlackHoleDemo();
    
    //void update();
    
    void mouseMoved(int x, int y);
    
    void mouseEvent(int button, int state, int x, int y);
    
    void keyPressed(unsigned char key, int x, int y);
    
    void keyUnpressed(int key, int x, int y) {};
    
    std::string name() { return ""Black Hole""; };
    
    void draw();
    
private:
    Array *_blackHoles;
    Array *_particles;
};

#endif /* defined(__Drawing__BlackHoleDemo__) */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tKPn2Y
code,"// EX.1 - READ A TEXT FILE CHAR BY CHAR
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    FILE *bin;   //declare a file pointer variable
    FILE *numfile;
    char s[20] = ""1234"";
    int ch;
    int i;
    char line[50];
    
    numfile = fopen(""numbers.txt"",""r"");
    bin = fopen(""numbers.txt"",""wb"");  
    //open the file, text reading mode
    
    if (numfile == NULL) 
    { //test if everything was ok
        printf(""Cannot open file.\n"");
        exit(1);
    } // Error checking
      
    while(fgets(line,50,numfile) != NULL) 
    {
        i = atoi(s);
        fwrite(&i,sizeof(int),1,bin);  
    }
    
    getchar();
    fclose(bin);
    fclose(numfile); //close the files
    return 0;
} // end main()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",htup-T
code,"//
// Copyright(c) 2017-2018 Paweł Księżopolski ( pumexx )
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files(the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions :
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

#pragma once
#include <memory>
#include <vector>
#include <mutex>
#include <vulkan/vulkan.h>
#include <pumex/Export.h>
#include <pumex/PerObjectData.h>

namespace pumex
{

class  Descriptor;
class  RenderContext;

struct PUMEX_EXPORT DescriptorValue
{
  enum Type { Undefined, Image, Buffer };
  DescriptorValue();
  DescriptorValue(VkBuffer buffer, VkDeviceSize offset, VkDeviceSize range);
  DescriptorValue(VkSampler sampler, VkImageView imageView, VkImageLayout imageLayout);

  Type vType;
  union
  {
    VkDescriptorBufferInfo bufferInfo;
    VkDescriptorImageInfo  imageInfo;
  };
};

// Resource is an object stored in a descriptor ( SampledImage, UniformBuffer, etc. )
class PUMEX_EXPORT Resource : public std::enable_shared_from_this<Resource>
{
public:
  Resource(PerObjectBehaviour perObjectBehaviour, SwapChainImageBehaviour swapChainImageBehaviour);
  virtual ~Resource();

  void                                     addDescriptor(std::shared_ptr<Descriptor> descriptor);
  void                                     removeDescriptor(std::shared_ptr<Descriptor> descriptor);
  // invalidateDescriptors() is called to inform the scenegraph that validate() needs to be called
  virtual void                             invalidateDescriptors();
  // notifyDescriptors() is called from within validate() when some serious change in resource occured
  // ( getDescriptorValue() will return new values, so vkUpdateDescriptorSets must be called by DescriptorSet ).
  virtual void                             notifyDescriptors(const RenderContext& renderContext);

  virtual std::pair<bool,VkDescriptorType> getDefaultDescriptorType();
  virtual void                             validate(const RenderContext& renderContext) = 0;
  virtual DescriptorValue                  getDescriptorValue(const RenderContext& renderContext) = 0;
protected:
  mutable std::mutex                       mutex;
  std::vector<std::weak_ptr<Descriptor>>   descriptors;
  PerObjectBehaviour                       perObjectBehaviour;
  SwapChainImageBehaviour                  swapChainImageBehaviour;
  uint32_t                                 activeCount;
};

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HXiWSs
code,"/*******************************************************************************
 Copyright © 2016, STMicroelectronics International N.V.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.
 * Neither the name of STMicroelectronics nor the
 names of its contributors may be used to endorse or promote products
 derived from this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND
 NON-INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS ARE DISCLAIMED.
 IN NO EVENT SHALL STMICROELECTRONICS INTERNATIONAL N.V. BE LIABLE FOR ANY
 DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/

#include ""vl53l0x_api.h""
#include ""vl53l0x_api_core.h""
#include ""vl53l0x_api_strings.h""

#ifndef __KERNEL__
#include <stdlib.h>
#endif

#define LOG_FUNCTION_START(fmt, ...) \
	_LOG_FUNCTION_START(TRACE_MODULE_API, fmt, ##__VA_ARGS__)
#define LOG_FUNCTION_END(status, ...) \
	_LOG_FUNCTION_END(TRACE_MODULE_API, status, ##__VA_ARGS__)
#define LOG_FUNCTION_END_FMT(status, fmt, ...) \
	_LOG_FUNCTION_END_FMT(TRACE_MODULE_API, status, fmt, ##__VA_ARGS__)

VL53L0X_Error VL53L0X_check_part_used(VL53L0X_DEV Dev,
        uint8_t *Revision,
        VL53L0X_DeviceInfo_t *pVL53L0X_DeviceInfo) {
    VL53L0X_Error Status = VL53L0X_ERROR_NONE;
    uint8_t ModuleIdInt;
    char *ProductId_tmp;

    LOG_FUNCTION_START("""");

    Status = VL53L0X_get_info_from_device(Dev, 2);

    if (Status == VL53L0X_ERROR_NONE) {
        ModuleIdInt = VL53L0X_GETDEVICESPECIFICPARAMETER(Dev, ModuleId);

        if (ModuleIdInt == 0) {
            *Revision = 0;
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->ProductId, """");
        } else {
            *Revision = VL53L0X_GETDEVICESPECIFICPARAMETER(Dev, Revision);
            ProductId_tmp = VL53L0X_GETDEVICESPECIFICPARAMETER(Dev,
                    ProductId);
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->ProductId, ProductId_tmp);
        }
    }

    LOG_FUNCTION_END(Status);
    return Status;
}

VL53L0X_Error VL53L0X_get_device_info(VL53L0X_DEV Dev,
        VL53L0X_DeviceInfo_t *pVL53L0X_DeviceInfo) {
    VL53L0X_Error Status = VL53L0X_ERROR_NONE;
    uint8_t revision_id;
    uint8_t Revision;

    Status = VL53L0X_check_part_used(Dev, &Revision, pVL53L0X_DeviceInfo);

    if (Status == VL53L0X_ERROR_NONE) {
        if (Revision == 0) {
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->Name,
                    VL53L0X_STRING_DEVICE_INFO_NAME_TS0);
        } else if ((Revision <= 34) && (Revision != 32)) {
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->Name,
                    VL53L0X_STRING_DEVICE_INFO_NAME_TS1);
        } else if (Revision < 39) {
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->Name,
                    VL53L0X_STRING_DEVICE_INFO_NAME_TS2);
        } else {
            VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->Name,
                    VL53L0X_STRING_DEVICE_INFO_NAME_ES1);
        }

        VL53L0X_COPYSTRING(pVL53L0X_DeviceInfo->Type,
                VL53L0X_STRING_DEVICE_INFO_TYPE);

    }

    if (Status == VL53L0X_ERROR_NONE) {
        Status = VL53L0X_RdByte(Dev, VL53L0X_REG_IDENTIFICATION_MODEL_ID,
                &pVL53L0X_DeviceInfo->ProductType);
    }

    if (Status == VL53L0X_ERROR_NONE) {
        Status = VL53L0X_RdByte(Dev,
                VL53L0X_REG_IDENTIFICATION_REVISION_ID,
                &revision_id);
        pVL53L0X_DeviceInfo->ProductRevisionMajor = 1;
        pVL53L0X_DeviceInfo->ProductRevisionMinor =
                (revision_id & 0xF0) >> 4;
    }

    return Status;
}

VL53L0X_Error VL53L0X_get_device_error_string(VL53L0X_DeviceError ErrorCode,
        char *pDeviceErrorString) {
    VL53L0X_Error Status = VL53L0X_ERROR_NONE;

    LOG_FUNCTION_START("""");

    switch (ErrorCode) {
        case VL53L0X_DEVICEERROR_NONE:
            VL53L0X_COPYSTRING(pDeviceErrorString,
                    VL53L0X_STRING_DEVICEE",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JmjVhk
code,"/* Copyright (C) 2005-2006 Jean-Marc Valin 
   File: fftwrap.c

   Wrapper for various FFTs 

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:
   
   - Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
   
   - Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
   
   - Neither the name of the Xiph.org Foundation nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.
   
   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

#ifdef HAVE_CONFIG_H
#include ""config.h""
#endif

/*#define USE_SMALLFT*/
#define USE_KISS_FFT


#include ""misc.h""

#define MAX_FFT_SIZE 2048

#ifdef FIXED_POINT
static int maximize_range(spx_word16_t *in, spx_word16_t *out, spx_word16_t bound, int len)
{
   int i, shift;
   spx_word16_t max_val = 0;
   for (i=0;i<len;i++)
   {
      if (in[i]>max_val)
         max_val = in[i];
      if (-in[i]>max_val)
         max_val = -in[i];
   }
   shift=0;
   while (max_val <= (bound>>1) && max_val != 0)
   {
      max_val <<= 1;
      shift++;
   }
   for (i=0;i<len;i++)
   {
      out[i] = in[i] << shift;
   }   
   return shift;
}

static void renorm_range(spx_word16_t *in, spx_word16_t *out, int shift, int len)
{
   int i;
   for (i=0;i<len;i++)
   {
      out[i] = (in[i] + (1<<(shift-1))) >> shift;
   }
}
#endif

#ifdef USE_SMALLFT

#include ""smallft.h""
#include <math.h>

void *spx_fft_init(int size)
{
   struct drft_lookup *table;
   table = speex_alloc(sizeof(struct drft_lookup));
   spx_drft_init((struct drft_lookup *)table, size);
   return (void*)table;
}

void spx_fft_destroy(void *table)
{
   spx_drft_clear(table);
   speex_free(table);
}

void spx_fft(void *table, float *in, float *out)
{
   if (in==out)
   {
      int i;
      speex_warning(""FFT should not be done in-place"");
      float scale = 1./((struct drft_lookup *)table)->n;
      for (i=0;i<((struct drft_lookup *)table)->n;i++)
         out[i] = scale*in[i];
   } else {
      int i;
      float scale = 1./((struct drft_lookup *)table)->n;
      for (i=0;i<((struct drft_lookup *)table)->n;i++)
         out[i] = scale*in[i];
   }
   spx_drft_forward((struct drft_lookup *)table, out);
}

void spx_ifft(void *table, float *in, float *out)
{
   if (in==out)
   {
      int i;
      speex_warning(""FFT should not be done in-place"");
   } else {
      int i;
      for (i=0;i<((struct drft_lookup *)table)->n;i++)
         out[i] = in[i];
   }
   spx_drft_backward((struct drft_lookup *)table, out);
}

#elif defined(USE_KISS_FFT)

#include ""kiss_fftr.h""
#include ""kiss_fft.h""

struct kiss_config {
   kiss_fftr_cfg forward;
   kiss_fftr_cfg backward;
   kiss_fft_cpx *freq_data;
   int N;
};

void *spx_fft_init(int size)
{
   struct kiss_config *table;
   table = (struct kiss_config*)speex_alloc(sizeof(struct kiss_config));
   table->freq_data = (kiss_fft_cpx*)speex_alloc(sizeof(kiss_fft_cpx)*((size>>1)+1));
   table->forward = kiss_fftr_alloc(size,0,NULL,NULL);
   table->backward = kiss_fftr_alloc(size,1,NULL,NULL);
   table->N = size;
   return table;
}

void spx_fft_destroy(void *table)
{
   struct kiss_config *t = (struct kiss_config *)table;
   kiss_fftr_free(t->forward);
   kiss_fftr_free(t->backward);
   speex_free(t->freq_data);
   speex_free(table);
}

#ifdef FIXED_POINT

void spx_fft(void *table, spx_word16_t *in, spx_word16_t *out)
{
   int i;
   int shift;
   struct kiss_config *t = (struct kiss_config *)table;
   shift = maximize_range(in, in, 32000, t->N);
   kiss_fftr(t->forward, in, t->freq_data);
   out[0] = t->freq_data[0].r;
   for (i=1;i<t->N>>1;i++)
   {
      out[(i<<1)-1] = t->freq_data[i].r;
      out[(i<<1)] = t->freq_data[i].i;
   }
   out[(i<<1)-1] = t->freq_data[i].r;
   renorm_range(in, in, shift, t->N);
   renorm_range(out, out, shift, t->N);
}

#else

void spx_fft(void *table, spx_word16_t *in, spx_word16_t *out)
{
   int i;
   float scale;
   struct kiss_config *t = (struct kiss_config *)table;
   scale = 1./t->N;
   kiss_fftr(t->forward, in, t->freq_data);
   out[0] = scale*t-",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",z_SMFx
code,"﻿namespace LadderLogic.Controller.State
{
	using Surface;

	public class CursorState : State
	{
		public CursorState () : base(StateType.CursorState)
		{
		}

		#region implemented abstract members of State

		public override bool Handle (State previous, Segment prevSegment, Segment newSegment, bool left)
		{
			base.Handle (previous, prevSegment, newSegment, left);
			return true;
		}

		#endregion
	}
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SySTE-
code,"// Copyright (c) ppy Pty Ltd <contact@ppy.sh>. Licensed under the MIT Licence.
// See the LICENCE file in the repository root for full licence text.

using osu.Game.Graphics;
using osu.Game.Rulesets.Scoring;

namespace osu.Game.Rulesets.Mods
{
    public abstract class ModPerfect : ModSuddenDeath
    {
        public override string Name => ""Perfect"";
        public override string Acronym => ""PF"";
        public override FontAwesome Icon => FontAwesome.fa_osu_mod_perfect;
        public override string Description => ""SS or quit."";

        protected override bool FailCondition(ScoreProcessor scoreProcessor) => scoreProcessor.Accuracy.Value != 1;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FEfMpR
code,"﻿using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace LibGit2Sharp.Core
{
    /// <summary>
    /// Ensure input parameters
    /// </summary>
    [DebuggerStepThrough]
    internal static class Ensure
    {
        /// <summary>
        /// Checks an argument to ensure it isn't null.
        /// </summary>
        /// <param name=""argumentValue"">The argument value to check.</param>
        /// <param name=""argumentName"">The name of the argument.</param>
        public static void ArgumentNotNull(object argumentValue, string argumentName)
        {
            if (argumentValue == null)
            {
                throw new ArgumentNullException(argumentName);
            }
        }

        /// <summary>
        /// Checks an array argument to ensure it isn't null or empty.
        /// </summary>
        /// <param name=""argumentValue"">The argument value to check.</param>
        /// <param name=""argumentName"">The name of the argument.</param>
        public static void ArgumentNotNullOrEmptyEnumerable<T>(IEnumerable<T> argumentValue, string argumentName)
        {
            ArgumentNotNull(argumentValue, argumentName);

            if (!argumentValue.Any())
            {
                throw new ArgumentException(""Enumerable cannot be empty"", argumentName);
            }
        }

        /// <summary>
        /// Checks a string argument to ensure it isn't null or empty.
        /// </summary>
        /// <param name=""argumentValue"">The argument value to check.</param>
        /// <param name=""argumentName"">The name of the argument.</param>
        public static void ArgumentNotNullOrEmptyString(string argumentValue, string argumentName)
        {
            ArgumentNotNull(argumentValue, argumentName);

            if (String.IsNullOrWhiteSpace (argumentValue))
            {
                throw new ArgumentException(""String cannot be empty"", argumentName);
            }
        }

        /// <summary>
        /// Checks a string argument to ensure it doesn't contain a zero byte.
        /// </summary>
        /// <param name=""argumentValue"">The argument value to check.</param>
        /// <param name=""argumentName"">The name of the argument.</param>
        public static void ArgumentDoesNotContainZeroByte(string argumentValue, string argumentName)
        {
            if (string.IsNullOrEmpty(argumentValue))
            {
                return;
            }

            int zeroPos = -1;
            for (var i = 0; i < argumentValue.Length; i++)
            {
                if (argumentValue[i] == '\0')
                {
                    zeroPos = i;
                    break;
                }
            }

            if (zeroPos == -1)
            {
                return;
            }

            throw new ArgumentException(
                string.Format(CultureInfo.InvariantCulture,
                    ""Zero bytes ('\\0') are not allowed. A zero byte has been found at position {0}."", zeroPos), argumentName);
        }

        private static readonly Dictionary<GitErrorCode, Func<string, GitErrorCode, GitErrorCategory, LibGit2SharpException>>
            GitErrorsToLibGit2SharpExceptions =
                new Dictionary<GitErrorCode, Func<string, GitErrorCode, GitErrorCategory, LibGit2SharpException>>
                {
                    { GitErrorCode.User, (m, r, c) => new UserCancelledException(m, r, c) },
                    { GitErrorCode.BareRepo, (m, r, c) => new BareRepositoryException(m, r, c) },
                    { GitErrorCode.Exists, (m, r, c) => new NameConflictException(m, r, c) },
                    { GitErrorCode.InvalidSpecification, (m, r, c) => new InvalidSpecificationException(m, r, c) },
                    { GitErrorCode.UnmergedEntries, (m, r, c) => new UnmergedIndexEntriesException(m, r, c) },
                    { GitErrorCode.NonFastForward, (m, r, c) => new NonFastForwardException(m, r, c) },
                    { GitErrorCode.MergeConflict, (m, r, c) => new MergeConflictException(m, r, c) },
                    { GitErrorCode.LockedFile, (m, r, c) => new LockedFileException(m, r, c) },
                    { GitErrorCode.NotFound, (m, r, c) => new NotFoundException(m, r, c) },
                    { GitErrorCode.Peel, (m, r, c) => new PeelException(m, r, c)  },
                };

        private static void HandleError(int result)
        {
            string errorMessage;
            GitError error = NativeMethods.giterr_last().MarshalAsGitError();

            if (error == null)
            {
                error = new GitError { Category = GitErrorCategory.Unknown, Message = IntPtr.Zero };
                errorMessage = ""No error message has been provided by the native library"";
            }
            else
            {
                errorMessage = LaxUtf8Marshaler.FromNative(error.Message);
            }

            Func<string, GitErrorCode, GitErrorCategory, LibGit2SharpException> exceptionBuilder;
            if (!GitErrorsToLibGit2SharpExceptions.TryGetValue((GitErrorCode)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h92n9r
code,"/* **********************************************************************************************************
 * The MIT License (MIT)																					*
 * 																											*
 * Copyright (c) 2016 Hypermediasystems Ges. f. Software mbH										*
 * Web: http://www.hypermediasystems.de																		*
 * This file is part of hmssp																			*
 * 																											*
 * Permission is hereby granted, free of charge, to any person obtaining a copy								*
 * of this software and associated documentation files (the ""Software""), to deal							*
 * in the Software without restriction, including without limitation the rights								*
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell								*
 * copies of the Software, and to permit persons to whom the Software is									*
 * furnished to do so, subject to the following conditions:													*
 * 																											*
 * The above copyright notice and this permission notice shall be included in								*
 * all copies or substantial portions of the Software.														*
 * 																											*
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR								*
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,									*
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE								*
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER									*
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,							*
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN								*
 * THE SOFTWARE.																							*
 ************************************************************************************************************ */ 
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Reflection;
using Newtonsoft.Json;
namespace HMS.SP{
    /// <summary>
    /// <para>https://msdn.microsoft.com/en-us/library/office/jj850797.aspx#properties</para>
    /// </summary>
    public class ServerSettings : SPBase{
        [JsonProperty(""__HMSError"")]
        public HMS.Util.__HMSError __HMSError_ { set; get; }
        [JsonProperty(""__status"")]
        public SP.__status __status_ { set; get; }
        [JsonProperty(""__deferred"")]
        public SP.__deferred __deferred_ { set; get; }
        [JsonProperty(""__metadata"")]
        public SP.__metadata __metadata_ { set; get; }
        public Dictionary<string, string> __rest;
        // no properties found
        /// <summary>
        /// <para> Endpoints </para>
        /// </summary>
        static string[] endpoints = {
        };

        public ServerSettings(ExpandoObject expObj)
        {
             try
             {
                var use_EO = ((dynamic)expObj).entry.content.properties;
                HMS.SP.SPUtil.expando2obj(use_EO, this, typeof(ServerSettings));
             }
             catch (Exception ex)
             {
             
             }
        
        }
        // used by Newtonsoft.JSON 
        public  ServerSettings()
        {
        }
        public  ServerSettings(string json)
        {
            if( json == String.Empty )
                return;
            dynamic jobject = Newtonsoft.Json.JsonConvert.DeserializeObject(json);            
            dynamic refObj = jobject;
            if (jobject.d != null)
                refObj = jobject.d;
            string errInfo = """";
            if (refObj.results != null)
            {
                if (refObj.results.Count > 1)
                    errInfo = ""Result is Collection, only 1. entry displayed."";
                refObj = refObj.results[0];
            }
            List<string> usedFields = new List<string>();
                usedFields.Add(""__HMSError"");
            HMS.SP.SPUtil.dyn_ValueSet(""__HMSError"", refObj, this);
                usedFields.Add(""__deferred"");
            this.__deferred_ = new SP.__deferred(HMS.SP.SPUtil.dyn_toString(refObj.__deferred));
                usedFields.Add(""__metadata"");
            this.__metadata_ = new SP.__metadata(HMS.SP.SPUtil.dyn_toString(refObj.__metadata));
            this.__rest = new Dictionary<string, string>();
            var dyn = ((Newtonsoft.Json.Linq.JContainer)refObj).First;
            while (dyn != null)
            {
                string Name = ((Newtonsoft.Json.Linq.JProperty)dyn).Name;
                string Value = ((Newtonsoft.Json.Linq.JProperty)dyn).Value.ToString();
                if ( !usedFields.Contains( Name ))
                    this.__rest.Add( Name, Value);
                dyn = dyn.Next;
            }
            if( errInfo != """")
                this.__HMSError_.info = errInfo;
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TKFZg5
code,"﻿using SharpDX;
using SharpDX.Direct3D11;
using System;
using System.Runtime.InteropServices;
using System.Windows;
using System.Xml;
using System.IO;
using System.Reflection;

namespace Profiler.DirectX
{
    public class TextManager : IDisposable
    {
        [StructLayout(LayoutKind.Sequential)]
        public struct Vertex 
        {
            public Vector2 Position;
            public Vector2 UV;
            public SharpDX.Color Color;
        }

        DynamicBuffer<Vertex> VertexBuffer;
        DynamicBuffer<int> IndexBuffer;
        Mesh TextMesh;

        class Font : IDisposable
        {
            public struct Symbol
            {
                public RectangleF UV;
                public Size2F Size;
                public float Advance;
            }

            public Symbol[] Symbols = new Symbol[256];

            public Texture2D Texture;
            public ShaderResourceView TextureView;
            public double Size { get; set; }

            public static Font Create(Device device, String name)
            {
                Font font = new Font();

                Assembly assembly = Assembly.GetExecutingAssembly();

                using (Stream stream = assembly.GetManifestResourceStream(String.Format(""Profiler.DirectX.Fonts.{0}.fnt"", name)))
                {
                    XmlDocument doc = new XmlDocument();
                    doc.Load(stream);

                    XmlNode desc = doc.SelectSingleNode(""//info"");
                    font.Size = double.Parse(desc.Attributes[""size""].Value);

                    XmlNode info = doc.SelectSingleNode(""//common"");

                    float width = float.Parse(info.Attributes[""scaleW""].Value);
                    float height = float.Parse(info.Attributes[""scaleH""].Value);

                    foreach (XmlNode node in doc.SelectNodes(""//char""))
                    {
                        int id = int.Parse(node.Attributes[""id""].Value);

                        Symbol symbol = new Symbol();

                        symbol.Size.Width = float.Parse(node.Attributes[""width""].Value);
                        symbol.Size.Height = float.Parse(node.Attributes[""height""].Value);

                        int x = int.Parse(node.Attributes[""x""].Value);
                        int y = int.Parse(node.Attributes[""y""].Value);
                        symbol.UV = new RectangleF(x / width, y / height, symbol.Size.Width / width, symbol.Size.Height / height);

                        symbol.Advance = float.Parse(node.Attributes[""xadvance""].Value);

                        font.Symbols[id] = symbol;
                    }

                    using (Stream textureStream = assembly.GetManifestResourceStream(String.Format(""Profiler.DirectX.Fonts.{0}_0.png"", name)))
                    {
                        font.Texture = TextureLoader.CreateTex2DFromFile(device, textureStream);
                    }

                    font.TextureView = new ShaderResourceView(device, font.Texture);
                }
                    
                return font;
            }

            public void Dispose()
            {
                Utilities.Dispose(ref Texture);
                Utilities.Dispose(ref TextureView);
            }
        }

        Font SegoeUI;

        public TextManager(DirectX.DirectXCanvas canvas)
        {
            double baseFontSize = 16.0;
            int desiredFontSize = (int)(RenderSettings.dpiScaleY * baseFontSize);

            int fontSize = 16;
            int[] sizes = { 16, 20, 24, 28, 32 };
            for (int i = 0; i < sizes.Length; ++i)
            {
                if (desiredFontSize < sizes[i])
                    break;

                fontSize = sizes[i];
            }

            SegoeUI = Font.Create(canvas.RenderDevice, String.Format(""SegoeUI_{0}_Normal"", fontSize));
            VertexBuffer = new DynamicBuffer<Vertex>(canvas.RenderDevice, BindFlags.VertexBuffer);
            IndexBuffer = new DynamicBuffer<int>(canvas.RenderDevice, BindFlags.IndexBuffer);
            TextMesh = canvas.CreateMesh(DirectXCanvas.MeshType.Text);
            TextMesh.UseAlpha = true;
        }

        public void Draw(System.Windows.Point pos, String text, System.Windows.Media.Color color, TextAlignment alignment = TextAlignment.Left, double maxWidth = double.MaxValue)
        {
            Color textColor = Utils.Convert(color);


            char[] str = text.ToCharArray();

            switch (alignment)
            {
                case TextAlignment.Center:
                    {
                        double totalWidth = 0.0;
                        for (int i = 0; i < str.Length; ++i)
                            totalWidth += SegoeUI.Symbols[str[i]].Advance;

                        double shift = Math.Max(0.0, (maxWidth - totalWidth) * 0.5);

                        Vector2 origin = new Vector2((float)(pos.X + shift), (float)pos.Y);
                        for (int i = 0; i < str.Length; ++i)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",skjNMs
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GPS.SimpleMVC.Views;

namespace GPS.SimpleMVC.Tests.ControllerImplementations
{
    public interface ITestView : ISimpleView
    {
        Guid UID { get; set; }
        string Name { get; set; }
        string Value { get; set; }

        event Func<Guid, Guid, Task> LoadDataAsync;
        event Action<ITestView> DataBound;

        void Databind();
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UUums9
code,"﻿using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace LinqToDB.Data
{
	using Linq;
	using Common;
	using SqlProvider;
	using SqlQuery;

	public partial class DataConnection
	{
		IQueryRunner IDataContext.GetQueryRunner(Query query, int queryNumber, Expression expression, object[] parameters)
		{
			CheckAndThrowOnDisposed();
			return new QueryRunner(query, queryNumber, this, expression, parameters);
		}

		internal class QueryRunner : QueryRunnerBase
		{
			public QueryRunner(Query query, int queryNumber, DataConnection dataConnection, Expression expression, object[] parameters)
				: base(query, queryNumber, dataConnection, expression, parameters)
			{
				_dataConnection = dataConnection;
			}

			readonly DataConnection _dataConnection;
			readonly DateTime       _startedOn = DateTime.UtcNow;
			readonly Stopwatch      _stopwatch = Stopwatch.StartNew();

			bool       _isAsync;
			Expression _mapperExpression;

			public override Expression  MapperExpression
			{
				get => _mapperExpression;
				set
				{
					_mapperExpression = value;

					if (value != null && Common.Configuration.Linq.TraceMapperExpression &&
						TraceSwitch.TraceInfo && _dataConnection.OnTraceConnection != null)
					{
						_dataConnection.OnTraceConnection(new TraceInfo(TraceInfoStep.MapperCreated)
						{
							TraceLevel       = TraceLevel.Info,
							DataConnection   = _dataConnection,
							MapperExpression = MapperExpression,
							StartTime        = _startedOn,
							ExecutionTime    = _stopwatch.Elapsed,
							IsAsync          = _isAsync,
						});
					}
				}
			}

			public override string GetSqlText()
			{
				SetCommand(false);

				var sqlProvider = _preparedQuery.SqlProvider ?? _dataConnection.DataProvider.CreateSqlBuilder();

				var sb = new StringBuilder();

				sb.Append(""-- "").Append(_dataConnection.ConfigurationString);

				if (_dataConnection.ConfigurationString != _dataConnection.DataProvider.Name)
					sb.Append(' ').Append(_dataConnection.DataProvider.Name);

				if (_dataConnection.DataProvider.Name != sqlProvider.Name)
					sb.Append(' ').Append(sqlProvider.Name);

				sb.AppendLine();

				sqlProvider.PrintParameters(sb, _preparedQuery.Parameters);

				var isFirst = true;

				foreach (var command in _preparedQuery.Commands)
				{
					sb.AppendLine(command);

					if (isFirst && _preparedQuery.QueryHints != null && _preparedQuery.QueryHints.Count > 0)
					{
						isFirst = false;

						while (sb[sb.Length - 1] == '\n' || sb[sb.Length - 1] == '\r')
							sb.Length--;

						sb.AppendLine();

						var sql = sb.ToString();

						var sqlBuilder = _dataConnection.DataProvider.CreateSqlBuilder();
						sql = sqlBuilder.ApplyQueryHints(sql, _preparedQuery.QueryHints);

						sb = new StringBuilder(sql);
					}
				}

				while (sb[sb.Length - 1] == '\n' || sb[sb.Length - 1] == '\r')
					sb.Length--;

				sb.AppendLine();

				return sb.ToString();
			}

			public override void Dispose()
			{
				if (TraceSwitch.TraceInfo && _dataConnection.OnTraceConnection != null)
				{
					_dataConnection.OnTraceConnection(new TraceInfo(TraceInfoStep.Completed)
					{
						TraceLevel       = TraceLevel.Info,
						DataConnection   = _dataConnection,
						Command          = _dataConnection.Command,
						MapperExpression = MapperExpression,
						StartTime        = _startedOn,
						ExecutionTime    = _stopwatch.Elapsed,
						RecordsAffected  = RowsCount,
						IsAsync          = _isAsync,
					});
				}

				base.Dispose();
			}

			public class PreparedQuery
			{
				public string[]           Commands;
				public List<SqlParameter> SqlParameters;
				public IDbDataParameter[] Parameters;
				public SqlStatement       Statement;
				public ISqlBuilder        SqlProvider;
				public List<string>       QueryHints;
			}

			PreparedQuery _preparedQuery;

			static PreparedQuery GetCommand(DataConnection dataConnection, IQueryContext query, int startIndent = 0)
			{
				if (query.Context != null)
				{
					return new PreparedQuery
					{
						Commands      = (string[])query.Context,
						SqlParameters = query.Statement.Parameters,
						Statement     = query.Statement,
						QueryHints    = query.QueryHints,
					 };
				}

				var sql    = query.Statement.ProcessParameters(dataConnection.MappingSchema);
				var newSql = dataConnection.ProcessQuery(sql);

				if (!object.ReferenceEquals(sql, newSql))
				{
					sql = newSql;
					sql.IsParameterDependent = true;
				}

				var sqlProvider = dataConnection.DataProvider.CreateSqlBuilder();

				var cc = sqlProvider.CommandCount(sql);
				var sb = new StringBuilder();

				var commands = new string[cc];

				for (var i = 0; i < cc; i++)
				{
					sb.Length = 0;

					sqlProvider.BuildSql(i, sql, sb,",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-t6RS4
code,"﻿// ==========================================================================
//  Squidex Headless CMS
// ==========================================================================
//  Copyright (c) Squidex UG (haftungsbeschraenkt)
//  All rights reserved. Licensed under the MIT license.
// ==========================================================================

using System.Collections.Immutable;
using OpenIddict.Abstractions;
using OpenIddict.Server;
using static OpenIddict.Server.OpenIddictServerEvents;

namespace Squidex.Areas.IdentityServer.Config
{
    public sealed class AlwaysAddTokenHandler : IOpenIddictServerHandler<ProcessSignInContext>
    {
        public ValueTask HandleAsync(ProcessSignInContext context)
        {
            if (context == null)
            {
                return default;
            }

            if (!string.IsNullOrWhiteSpace(context.Response.AccessToken))
            {
                var scopes = context.AccessTokenPrincipal?.GetScopes() ?? ImmutableArray<string>.Empty;

                context.Response.Scope = string.Join("" "", scopes);
            }

            return default;
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BU_yt4
code,"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""10.TraverseDirectoryXDocument"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""10.TraverseDirectoryXDocument"")]
[assembly: AssemblyCopyright(""Copyright ©  2015"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""0db1c3e2-162a-4e14-b304-0f69cce18d90"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dPreMG
code,"﻿namespace Vulcan.Core.DataAccess.Migrations.MigrationProviders
{
    public enum ExecutionType
    {
        Insert,
        InsertWithIdentity,
        Update,
        Delete
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ol1AHD
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

namespace CameraModifications
{
    public class LookButton : MonoBehaviour
    {
        public bool isHead;

        public H_Scene h_scene;
        public H_EditsUIControl controls;
        private GameObject buttonPrefab;
        public KocchiMitePlugin watchDog;
        private Toggle m_toggle;
        private UI_ShowCanvasGroup group;
        private int currentValue = -1;

        private Dictionary<LookAtRotator.TYPE, Toggle> toggles;

        private bool initialShutup = true;

        private void Start()
        {
            // Make buttons
            m_toggle = GetComponent<Toggle>();
            m_toggle.onValueChanged.AddListener(HandleClick);
            controls.GetComponent<ToggleGroup>().RegisterToggle(m_toggle);

            try
            {
                MakeGroup();
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
            }
        }

        public int CurrentMode
        {
            get
            {
                return isHead ? watchDog.currentHeadType : watchDog.currentType;
            }
        }
        private void Update()
        {
            if (CurrentMode != currentValue)
            {
                currentValue = CurrentMode;
                toggles[(LookAtRotator.TYPE)currentValue].isOn = true;
            }

            initialShutup = false;
        }

        private void HandleClick(bool isOn)
        {
            try
            {
                if (isOn)
                {
                    m_toggle.image.color = Color.blue;
                    // Show
                    h_scene.GC.SystemSE.Play_Click();
                }
                else
                {
                    m_toggle.image.color = Color.white;

                    // Hide
                    h_scene.GC.SystemSE.Play_Cancel();
                }
                group.Show(isOn);
                
                Console.WriteLine(isOn);
              
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
            }
        }

        private void MakeGroup()
        {
            var container = controls.transform.FindChild(""EditStep2"");
            Console.WriteLine(""C {0}"", container);
            var exampleGroup = container.GetChild(0);
            Console.WriteLine(""E {0}"", exampleGroup);


            buttonPrefab = GameObject.Instantiate(container.GetComponentInChildren<Toggle>().gameObject) as GameObject;
            buttonPrefab.SetActive(false);

            group = new GameObject().AddComponent<CanvasGroup>().gameObject.AddComponent<UI_ShowCanvasGroup>();
            group.gameObject.layer = LayerMask.NameToLayer(""UI"");
            group.gameObject.AddComponent<ToggleGroup>().allowSwitchOff = false;
            group.gameObject.AddComponent<RectTransform>(exampleGroup.GetComponent<RectTransform>());
            group.gameObject.AddComponent<VerticalLayoutGroup>(exampleGroup.GetComponent<VerticalLayoutGroup>()).childForceExpandHeight = false;
            group.transform.SetParent(container, false);

            //group.GetComponent<RectTransform>().GetCopyOf(exampleGroup.GetComponent<RectTransform>());

            // Make buttons
            toggles = new Dictionary<LookAtRotator.TYPE, Toggle>() {
                { LookAtRotator.TYPE.NO, MakeButton(watchDog.useEnglish ? ""None"" : ""無設定"", LookAtRotator.TYPE.NO) },
                { LookAtRotator.TYPE.AWAY, MakeButton(watchDog.useEnglish ? ""Away"" : ""あっち向け"", LookAtRotator.TYPE.AWAY)},
                { LookAtRotator.TYPE.FORWARD, MakeButton(watchDog.useEnglish ? ""Forward"" : ""正面向け"", LookAtRotator.TYPE.FORWARD)},
                { LookAtRotator.TYPE.TARGET, MakeButton(watchDog.useEnglish ? ""Camera"" : ""こっち向け"", LookAtRotator.TYPE.TARGET)}
            };

            foreach (var button in toggles.Values)
            {
                button.transform.SetParent(group.transform, false);
            }

            //group.gameObject.AddComponent<Image>().color = Color.red;
        }

        private Toggle MakeButton(string text, LookAtRotator.TYPE type)
        {
            var buttonObj = Instantiate(buttonPrefab) as GameObject;
            buttonObj.SetActive(true);

            GameObject.DestroyImmediate(buttonObj.GetComponent<global::UI_ShowCanvasGroup>());
            buttonObj.AddComponent<UI_ShowCanvasGroup>();
            var buttonEl = buttonObj.GetComponent<Toggle>();
            Console.WriteLine(buttonEl.group);
            buttonEl.onValueChanged = new Toggle.ToggleEvent();
            buttonEl.group = group.GetComponent<ToggleGroup>();

            // set text
            Console.WriteLine(buttonPrefab.name);
            buttonEl.GetComponentInChildren<Text>().text = text;
            //buttonEl.GetComponentInChildren<Text>().resizeTextForBestFit = true;
            //buttonEl.GetComponentInChildren<Text>().resizeTextMinSize = 1;

            buttonEl.onValueChanged.AddListene",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-xwEMs
code,"// --------------------------------------------------------------------------------------------
#region // Copyright (c) 2020, SIL International. All Rights Reserved.
// <copyright from='2011' to='2020' company='SIL International'>
//		Copyright (c) 2020, SIL International. All Rights Reserved.
//
//		Distributable under the terms of the MIT License (https://sil.mit-license.org/)
// </copyright>
#endregion
// --------------------------------------------------------------------------------------------
using System.Collections.Generic;
using Paratext.Data;
using SIL.Scripture;

namespace HearThis.Script
{
	/// <summary>
	/// This exposes the things we care about out of ScrText, providing an
	/// anti-corruption layer between Paratext and HearThis and allowing us to test the code
	/// that calls Paratext.
	/// </summary>
	public interface IScripture : IScrProjectSettings
	{
		ScrVers Versification { get; }
		List<UsfmToken> GetUsfmTokens(VerseRef verseRef);
		IScrParserState CreateScrParserState(VerseRef verseRef);
		string DefaultFont { get; }
		bool RightToLeft { get; }
		string EthnologueCode { get; }
		string Name { get; }
		IStyleInfoProvider StyleInfo { get; }
	}

	/// <summary>
	/// This exposes the things we care about out of ScrText, providing an
	/// anti-corruption layer between Paratext and HearThis and allowing us to test the code
	/// that calls Paratext.
	/// </summary>
	public interface IScrProjectSettings
	{
		string FirstLevelStartQuotationMark { get; }
		string FirstLevelEndQuotationMark { get; }
		string SecondLevelStartQuotationMark { get; }
		string SecondLevelEndQuotationMark { get; }
		string ThirdLevelStartQuotationMark { get; }
		string ThirdLevelEndQuotationMark { get; }
		/// <summary>
		/// Gets whether first-level quotation marks are used unambiguously to indicate first-level quotations.
		/// If the same marks are used for 2nd or 3rd level quotations, then this should return false.
		/// </summary>
		bool FirstLevelQuotesAreUnique { get; }
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4iVuY9
code,"﻿// Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the MIT license.  See License.txt in the project root for license information.

using System.Threading.Tasks;
using Test.Utilities;
using Xunit;
using VerifyCS = Test.Utilities.CSharpCodeFixVerifier<
    Microsoft.CodeQuality.Analyzers.ApiDesignGuidelines.EnumsShouldHaveZeroValueAnalyzer,
    Microsoft.CodeQuality.CSharp.Analyzers.ApiDesignGuidelines.CSharpEnumsShouldHaveZeroValueFixer>;
using VerifyVB = Test.Utilities.VisualBasicCodeFixVerifier<
    Microsoft.CodeQuality.Analyzers.ApiDesignGuidelines.EnumsShouldHaveZeroValueAnalyzer,
    Microsoft.CodeQuality.VisualBasic.Analyzers.ApiDesignGuidelines.BasicEnumsShouldHaveZeroValueFixer>;

namespace Microsoft.CodeQuality.Analyzers.ApiDesignGuidelines.UnitTests
{
    public class EnumsShouldHaveZeroValueFixerTests
    {
        [Fact]
        public async Task CSharp_EnumsShouldZeroValueFlagsRenameAsync()
        {
            var code = @""
public class Outer
{
    [System.Flags]
    public enum E
    {
        A = 0,
        B = 3
    }
}

[System.Flags]
public enum E2
{
    A2 = 0,
    B2 = 1
}

[System.Flags]
public enum E3
{
    A3 = (ushort)0,
    B3 = (ushort)1
}

[System.Flags]
public enum E4
{
    A4 = 0,
    B4 = (int)2  // Sample comment
}

[System.Flags]
public enum NoZeroValuedField
{
    A5 = 1,
    B5 = 2
}"";

            var expectedFixedCode = @""
public class Outer
{
    [System.Flags]
    public enum E
    {
        None = 0,
        B = 3
    }
}

[System.Flags]
public enum E2
{
    None = 0,
    B2 = 1
}

[System.Flags]
public enum E3
{
    None = (ushort)0,
    B3 = (ushort)1
}

[System.Flags]
public enum E4
{
    None = 0,
    B4 = (int)2  // Sample comment
}

[System.Flags]
public enum NoZeroValuedField
{
    A5 = 1,
    B5 = 2
}"";
            await VerifyCS.VerifyCodeFixAsync(
                code,
                new[]
                {
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleRename).WithSpan(7, 9, 7, 10).WithArguments(""E"", ""A""),
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleRename).WithSpan(15, 5, 15, 7).WithArguments(""E2"", ""A2""),
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleRename).WithSpan(22, 5, 22, 7).WithArguments(""E3"", ""A3""),
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleRename).WithSpan(29, 5, 29, 7).WithArguments(""E4"", ""A4""),
                },
                expectedFixedCode);
        }

        [Fact]
        public async Task CSharp_EnumsShouldZeroValueFlagsMultipleZeroAsync()
        {
            var code = @""// Some comment
public class Outer
{
    [System.Flags]
    public enum E
    {
        None = 0,
        A = 0
    }
}
// Some comment
[System.Flags]
public enum E2
{
    None = 0,
    A = None
}"";
            var expectedFixedCode = @""// Some comment
public class Outer
{
    [System.Flags]
    public enum E
    {
        None = 0
    }
}
// Some comment
[System.Flags]
public enum E2
{
    None = 0
}"";
            await VerifyCS.VerifyCodeFixAsync(
                code,
                new[]
                {
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleMultipleZero).WithSpan(5, 17, 5, 18).WithArguments(""E""),
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleMultipleZero).WithSpan(13, 13, 13, 15).WithArguments(""E2""),
                },
                expectedFixedCode);
        }

        [Fact]
        public async Task CSharp_EnumsShouldZeroValueNotFlagsNoZeroValueAsync()
        {
            var code = @""
public class Outer
{
    public enum E
    {
        A = 1
    }

    public enum E2
    {
        None = 1,
        A = 2
    }
}

public enum E3
{
    None = 0,
    A = 1
}

public enum E4
{
    None = 0,
    A = 0
}
"";

            var expectedFixedCode = @""
public class Outer
{
    public enum E
    {
        None,
        A = 1
    }

    public enum E2
    {
        None,
        A = 2
    }
}

public enum E3
{
    None = 0,
    A = 1
}

public enum E4
{
    None = 0,
    A = 0
}
"";
            await VerifyCS.VerifyCodeFixAsync(
                code,
                new[]
                {
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleNoZero).WithSpan(4, 17, 4, 18).WithArguments(""E""),
                    VerifyCS.Diagnostic(EnumsShouldHaveZeroValueAnalyzer.RuleNoZero).WithSpan(9, 17, 9, 19).WithArguments(""E2""),
                },
                expectedFixedCode);
        }

        [Fact]
        public async Task VisualBasic_EnumsShouldZeroValueFlagsRenameAsync()
        {
            var code = @""
Public Class Outer
    <System.Flags>
    Public Enum E
        A = 0
        B = 1
    End Enum
End Class

<System.Flags>
Public Enum E2
    A2 = 0
    B2 = 1
End Enum

<System.Flags>
Public Enum E3
    A3 = CUShort(0)
    B3 = CUShort(1)
End Enum

<System.Flags>
Public Enum NoZeroValuedField
    A5 = 1
    B5 = 2
End Enum
"";

            var expectedFixedCode = @""
Public Class Outer
    <System.Flags>
    Public Enum E
        None = 0
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q4TBRA
code,"﻿/* ----------------------------------------------------------------------------
 * Copyright (C) 2013 Arne F. Claassen
 * geekblog [at] claassen [dot] net
 * http://github.com/sdether/Calculon
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the ""Software""),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 * ----------------------------------------------------------------------------
 */

using Droog.Calculon.Backstage;
using NUnit.Framework;

namespace Droog.Calculon.Tests {
    
    [TestFixture]
    public class BuilderTests {

        public interface IFoo {
             
        }
        public class Foo : AActor, IFoo {
            
        }

        [Test]
        public void Can_create_class() {

            var builder = new ActorBuilder();
            var foo = builder.GetBuilder<Foo>()();
            Assert.IsNotNull(foo);
            Assert.IsInstanceOfType(typeof(Foo),foo);
        }

        [Test]
        public void Can_create_interface_with_appropriately_named_class() {

            var builder = new ActorBuilder();
            var foo = builder.GetBuilder<IFoo>()();
            Assert.IsNotNull(foo);
            Assert.IsInstanceOfType(typeof(Foo), foo);
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",J2uUyC
code,"﻿using System.IO;
using System.Diagnostics;
using NDepend.Path;

namespace NDepend.Test.Unit {
   public static class DirForTest {

      public static IAbsoluteDirectoryPath ExecutingAssemblyDir {
         get {
            // If this following line doesn't work, it is because of ShadowCopyCache with NUnit
            return System.Reflection.Assembly.GetExecutingAssembly().Location.ToAbsoluteFilePath().ParentDirectoryPath;
         }
      }

      public static IAbsoluteFilePath ExecutingAssemblyFilePath {
         get {
            return ExecutingAssemblyDir.GetChildFileWithName(ExecutingAssemblyFileName);
         }
      }

      private static string ExecutingAssemblyFileName {
         get {
            string executingAssemblyFileLocation = System.Reflection.Assembly.GetExecutingAssembly().Location;
            return System.IO.Path.GetFileName(executingAssemblyFileLocation);
         }
      }


      public static IAbsoluteDirectoryPath DirAbsolute {
         get {
            return Dir.ToAbsoluteDirectoryPath();
         }
      }

      public static string Dir {
         get {
            return ExecutingAssemblyDir.GetChildDirectoryWithName(""DirForTest"").ToString();
         }
      }


      public static IAbsoluteDirectoryPath GetDirOfUnitTestWithName(string unitTestName) {
         IAbsoluteDirectoryPath ndependRootPath = ExecutingAssemblyDir.ParentDirectoryPath;
         IAbsoluteDirectoryPath unitTestPath = ndependRootPath.GetChildDirectoryWithName(""NDepend.Test.Dirs"");
         IAbsoluteDirectoryPath result = unitTestPath.GetChildDirectoryWithName(unitTestName);
         Debug.Assert(result.Exists);
         return result;
      }


      public static IAbsoluteDirectoryPath GetBinDebugDir() {
         IAbsoluteDirectoryPath binDebug = DirAbsolute.ParentDirectoryPath.GetChildDirectoryWithName(""Debug"");
         Debug.Assert(binDebug.Exists);
         return binDebug;
      }


      public static void EnsureDirForTestExistAndEmpty() {
         string dir = Dir;

      RETRY:  // 29Nov2010: retry until it is ok!!
         try {
            // Clear the older dir
            if (!Directory.Exists(dir)) {
               Directory.CreateDirectory(dir);
            } else {
               var subDirs = Directory.GetDirectories(dir);
               var subFiles = Directory.GetFiles(dir);

               if (subFiles.Length > 0) {
                  foreach (var filePath in subFiles) {
                     File.Delete(filePath);
                  }
               }

               if (subDirs.Length > 0) {
                  foreach (var dirPath in subDirs) {
                     Directory.Delete(dirPath, true);
                  }
               }
            }

            if (!Directory.Exists(dir)) { goto RETRY; }
            if (Directory.GetDirectories(dir).Length > 0) { goto RETRY; }
            if (Directory.GetFiles(dir).Length > 0) { goto RETRY; }
         } catch {
            goto RETRY;
         }
         var dirInfo = new DirectoryInfo(dir);
         Debug.Assert(dirInfo.Exists);
         Debug.Assert(dirInfo.GetFiles().Length == 0);
         Debug.Assert(dirInfo.GetDirectories().Length == 0);
      }
      public static void Delete() {
         string dir = Dir;
         if (Directory.Exists(dir)) {
            Directory.Delete(dir, true);
         }
      }



      public static string ExecutingAssemblyFilePathInDirForTest {
         get {
            return Dir.ToAbsoluteDirectoryPath().GetChildFileWithName(ExecutingAssemblyFileName).ToString();
         }
      }

      public static void CopyExecutingAssemblyFileInDirForTest() {
         File.Copy(ExecutingAssemblyDir.GetChildFileWithName(ExecutingAssemblyFileName).ToString(),
                   ExecutingAssemblyFilePathInDirForTest);
      }
   }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BTrZCB
code,"﻿using UnityEngine;
using System.Collections;

public class HurtSusukeOnContact : MonoBehaviour {

	public int damageToGive;
	
	public float bounceOnEnemy;
	
	private Rigidbody2D myRigidbody2D;

	// Use this for initialization
	void Start () {
		myRigidbody2D = transform.parent.GetComponent<Rigidbody2D> ();
	}
	
	// Update is called once per frame
	void Update () {

	}

	void OnTriggerEnter2D(Collider2D other) {
		if (other.tag == ""Susuke"") {
			other.GetComponent<EnemyHealthManager>().giveDamage(damageToGive);
			myRigidbody2D.velocity = new Vector2 (myRigidbody2D.velocity.x, bounceOnEnemy);
		}
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gEjNNl
code,"using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using gView.Framework.IO;
using gView.Framework.Data;
using gView.Framework.UI;

namespace gView.Framework.UI.Dialogs
{
    public partial class FormMetadata : Form
    {
        private Metadata _metadata;
        private object _metadataObject;

        public FormMetadata(XmlStream xmlStream, object metadataObject)
        {
            InitializeComponent();

            _metadata = new Metadata();
            _metadata.ReadMetadata(xmlStream);

            _metadataObject = metadataObject;
        }

        private void FormMetadata_Load(object sender, EventArgs e)
        {
            if (_metadata.Providers == null) return;

            foreach (IMetadataProvider provider in _metadata.Providers)
            {
                if (provider == null) continue;
                TabPage page = new TabPage(provider.Name);

                if (provider is IPropertyPage)
                {
                    Control ctrl = ((IPropertyPage)provider).PropertyPage(null) as Control;
                    if (ctrl != null)
                    {
                        page.Controls.Add(ctrl);
                        ctrl.Dock = DockStyle.Fill;
                    }
                    if (ctrl is IMetadataObjectParameter)
                        ((IMetadataObjectParameter)ctrl).MetadataObject = _metadataObject;
                }
                tabControl1.TabPages.Add(page);
            }
        }

        public XmlStream Stream
        {
            get
            {
                XmlStream stream = new XmlStream(""Metadata"");
                if (_metadata != null)
                    _metadata.WriteMetadata(stream);

                return stream;
            }
        }

        
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E4SUV5
code,"﻿using System;
using NetOffice;
using NetOffice.Attributes;
namespace NetOffice.MSProjectApi.Enums
{
	 /// <summary>
	 /// SupportByVersion MSProject 11, 12, 14
	 /// </summary>
	 ///<remarks> MSDN Online Documentation: http://msdn.microsoft.com/en-us/en-us/library/office/ff863548(v=office.14).aspx </remarks>
	[SupportByVersion(""MSProject"", 11,12,14)]
	[EntityType(EntityType.IsEnum)]
	public enum PjMonthLabel
	{
		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>57</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mm = 57,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>86</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mm_yy = 86,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>85</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mm_yyy = 85,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>11</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_m = 11,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>10</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mmm = 10,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>8</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mmm_yyy = 8,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>9</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mmmm = 9,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>7</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonth_mmmm_yyyy = 7,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>59</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromEnd_mm = 59,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>58</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromEnd_Mmm = 58,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>45</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromEnd_Month_mm = 45,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>61</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromStart_mm = 61,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>60</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromStart_Mmm = 60,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>44</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelMonthFromStart_Month_mm = 44,

		 /// <summary>
		 /// SupportByVersion MSProject 11, 12, 14
		 /// </summary>
		 /// <remarks>35</remarks>
		 [SupportByVersion(""MSProject"", 11,12,14)]
		 pjMonthLabelNoDateFormat = 35
	}
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eWUyzh
code,"using System;
using System.Collections.Generic;
using System.Linq;
using BlackBox.Service;
using EbInstanceModel;
using IFC2X3;

namespace BlackBox.Predefined
{

    public partial class BbProduct : BbBase
    {

        [EarlyBindingInstance]
        public virtual IfcRelAggregates IfcRelAggregates { get; protected set; }


		public BbLocalPlacement3D ObjectBbLocalPlacement { get; protected set; }
        
        
        public virtual IfcObject IfcObject { get; protected set; }

        public string Name
        {
            get { return IfcObject.Name; }
            protected set { IfcObject.Name = value; }
        }

        public string Description
        {
            get { return IfcObject.Description; }
            protected set { IfcObject.Description = value; }
        }

        public string ObjectType
        {
            get { return IfcObject.ObjectType; }
            protected set { IfcObject.ObjectType = value; }
        }


        [EarlyBindingInstanceCollection]
        public BbProduct HostObject { get; protected set; }



        protected BbProduct()
            : this(Guid.NewGuid())
        {
        }

        protected BbProduct(Guid guid)
            : base(guid)
        {
        }




        public void AddToHostObject(BbProduct hostObject)
        {
            HostObject = hostObject;
            var a = EarlyBindingInstanceModel.GetReferencedEntities(hostObject.IfcObject.EIN).Values;

            var b = (from x in a.OfType<IfcRelAggregates>()
                     where x.RelatingObject.EIN == hostObject.IfcObject.EIN
                     select x).ToList();

            switch (b.Count)
            {

                case 0:
                    IfcRelAggregates = new IfcRelAggregates
                    {
                        GlobalId = IfcGloballyUniqueId.NewGuid(),
                        OwnerHistory = hostObject.IfcObject.OwnerHistory,
                        RelatingObject = hostObject.IfcObject,
                        RelatedObjects = new List<IfcObjectDefinition>() { },
                    };
                    break;
                case 1:
                    IfcRelAggregates = b[0];
                    break;
                default:
                    throw new NotImplementedException();
            }
            var aa = GetType().GetProperty(""IfcObject"").GetValue(this, null) as IfcObject;

            IfcRelAggregates.RelatedObjects.Add(aa);
        }

    }
    
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zK8IGg
code,"﻿// Copyright (c) Microsoft. All rights reserved. 
// Licensed under the MIT license. See LICENSE file in the project root for full license information. 

using System;
using Windows.UI.Xaml;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ManagedUnitTests
{
    public static class TestUtilities
    {
        /// <summary>
        /// Handles the difference between InvalidOperationException in managed and native.
        /// </summary>
        public static void AssertThrowsInvalidOperationException(Action action)
        {
            Assert.ThrowsException<InvalidOperationException>(action);
        }

        public static void AssertThrowsArgumentException(Action action)
        {
            Assert.ThrowsException<ArgumentException>(action);
        }

        public static void AssertDetached(StubBehavior behavior)
        {
            Assert.AreEqual(1, behavior.DetachCount, ""The Behavior should be detached."");
            Assert.IsNull(behavior.AssociatedObject, ""A Detached Behavior should have a null AssociatedObject."");
        }

        public static void AssertNotDetached(StubBehavior behavior)
        {
            Assert.AreEqual(0, behavior.DetachCount, ""The Behavior should not be detached."");
        }

        public static void AssertAttached(StubBehavior behavior, DependencyObject associatedObject)
        {
            Assert.AreEqual(1, behavior.AttachCount, ""The behavior should be attached."");
            Assert.AreEqual(associatedObject, behavior.AssociatedObject, ""The AssociatedObject of the Behavior should be what it was attached to."");
        }

        public static void AssertNotAttached(StubBehavior behavior)
        {
            Assert.AreEqual(0, behavior.AttachCount, ""The behavior should not be attached."");
            Assert.IsNull(behavior.AssociatedObject, ""The AssociatedObject should be null for a non-attached Behavior."");
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iuKtGN
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;

using ZitaAsteria;
using ZitaAsteria.World;

namespace ZAsteroids.World.HUD
{
    class HUDSheilds : HUDComponent
    {
        public SpriteFont Font { get; set; }

        public Texture2D SheildTexture { get; set; }
        public Texture2D ActiveTexture { get; set; }
        public Texture2D DamageTexture { get; set; }

        private RelativeTexture SheildInfo;
        private RelativeTexture WorkingValue;

        private bool enabled;
        private bool update = false;
        private Vector2 safePositionTopRight;
        private Color color;

        public HUDSheilds()
        {
        }

        public override void Initialize()
        {
            // Must initialize base to get safe draw area
            base.Initialize();

            SheildTexture = WorldContent.hudContent.sheilds;
            ActiveTexture = WorldContent.hudContent.active;
            DamageTexture = WorldContent.hudContent.damage;

            SheildInfo = new RelativeTexture(SheildTexture);
            SheildInfo.Children.Add(""Base01"", new RelativeTexture(ActiveTexture) { Position = new Vector2(129, 203), EnableDraw = true });
            SheildInfo.Children.Add(""Base02"", new RelativeTexture(ActiveTexture) { Position = new Vector2(164.5f, 182.5f), EnableDraw = true });
            SheildInfo.Children.Add(""Base03"", new RelativeTexture(ActiveTexture) { Position = new Vector2(129.5f, 123), EnableDraw = true });
            SheildInfo.Children.Add(""Base04"", new RelativeTexture(ActiveTexture) { Position = new Vector2(147, 92.5f), EnableDraw = true });
            SheildInfo.Children.Add(""Base05"", new RelativeTexture(ActiveTexture) { Position = new Vector2(199.5f, 42), EnableDraw = true });
            SheildInfo.Children.Add(""Base06"", new RelativeTexture(ActiveTexture) { Position = new Vector2(234.5f, 102), EnableDraw = true });

            SheildInfo.Children.Add(""Damage01"", new RelativeTexture(DamageTexture) { Position = new Vector2(94.5f, 143) });
            SheildInfo.Children.Add(""Damage02"", new RelativeTexture(DamageTexture) { Position = new Vector2(112, 153) });
            SheildInfo.Children.Add(""Damage03"", new RelativeTexture(DamageTexture) { Position = new Vector2(112, 133) });
            SheildInfo.Children.Add(""Damage04"", new RelativeTexture(DamageTexture) { Position = new Vector2(112, 113) });
            SheildInfo.Children.Add(""Damage05"", new RelativeTexture(DamageTexture) { Position = new Vector2(129.5f, 143) });
            SheildInfo.Children.Add(""Damage06"", new RelativeTexture(DamageTexture) { Position = new Vector2(129.5f, 103) });
            SheildInfo.Children.Add(""Damage07"", new RelativeTexture(DamageTexture) { Position = new Vector2(129.5f, 83) });
            SheildInfo.Children.Add(""Damage08"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 173) });
            SheildInfo.Children.Add(""Damage09"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 153) });
            SheildInfo.Children.Add(""Damage10"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 133) });
            SheildInfo.Children.Add(""Damage11"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 113) });
            SheildInfo.Children.Add(""Damage12"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 73) });
            SheildInfo.Children.Add(""Damage13"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 53) });
            SheildInfo.Children.Add(""Damage14"", new RelativeTexture(DamageTexture) { Position = new Vector2(147, 12) });
            SheildInfo.Children.Add(""Damage15"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 162.5f) });
            SheildInfo.Children.Add(""Damage16"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 142.5f) });
            SheildInfo.Children.Add(""Damage17"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 122.5f) });
            SheildInfo.Children.Add(""Damage18"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 102.5f) });
            SheildInfo.Children.Add(""Damage19"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 82.5f) });
            SheildInfo.Children.Add(""Damage20"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 62.5f) });
            SheildInfo.Children.Add(""Damage21"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 42.5f) });
            SheildInfo.Children.Add(""Damage22"", new RelativeTexture(DamageTexture) { Position = new Vector2(164.5f, 22.5f) });
            SheildInfo.Children.Add(""Damage23"", new RelativeTexture(DamageTexture) { Position = new Vector2(182.5f, 173) });
            SheildInfo.Children.Add(""Damage24"", new Relative",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6rB4ON
code,"﻿using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;

// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409

namespace SpartaHack
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class MainPage : Page
    {
        public static ObservableValue<string> Title { get; set; }
        public static ObservableValue<bool> LoggedIn { get; set; }
        public static ObservableValue<string> Time { get; set; }
        public static MainPage root;
        private DateTime DoneTime;
        public MainPage(Frame frame)
        {
            this.InitializeComponent();
            Title = new ObservableValue<string>();
            LoggedIn = new ObservableValue<bool>();
            Time = new ObservableValue<string>();
            this.MySplitView.Content = frame;
            DataContext = this;


            DoneTime = DateTime.Parse(""1/22/2017 17:00:00 GMT"");

            DispatcherTimer dt = new DispatcherTimer();
            dt.Interval = TimeSpan.FromSeconds(1);
            dt.Tick += Dt_Tick;



            this.Loaded += (s,e) =>
            {
                rdAnnouncements.IsChecked = true;
                dt.Start();
            };
            MySplitView.PaneClosed += (s, e) =>
            {
                grdHideView.Visibility = Visibility.Collapsed;
                bgPane.Margin = new Thickness(MySplitView.IsPaneOpen ? MySplitView.OpenPaneLength : MySplitView.CompactPaneLength, bgPane.Margin.Top, bgPane.Margin.Right, bgPane.Margin.Bottom);

            };
          

            
        }

        private void Dt_Tick(object sender, object e)
        {
            TimeSpan dt = DoneTime.ToUniversalTime().Subtract(DateTime.Now.ToUniversalTime());
            if (dt.TotalSeconds <= 0)
                Time.Value = ""FINISHED"";
            else
                //txtCountDown.Text = dt.ToString(@""hh\:mm\:ss"");
                //Time.Value = $""{(int)dt.TotalHours}H {dt.Minutes}M {dt.Seconds}S"";
                   Time.Value= string.Format(""{0:##}h {1:##}m {2:##}s"", ((int)dt.TotalHours), dt.Minutes.ToString(), dt.Seconds.ToString());
        }

        private void OnAnnouncementsChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(AnnouncementsPage));
            }
            catch { }
        }
        private void OnScheduleChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(SchedulePage));
            }
            catch { }
        }
        private void OnTicketChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(TicketPage));
            }
            catch { }
        }
        private void OnMapChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(MapPage));
            }
            catch { }
        }
        private void OnSponsorChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(SponsorPage));
            }
            catch { }
        }
        private void OnPrizeChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(PrizePage));
            }
            catch { }
        }


        private void OnLoginChecked(object sender, RoutedEventArgs e)
        {
            try
            {
                MySplitView.IsPaneOpen = false;
                if (MySplitView.Content != null)
                    ((Frame)MySplitView.Content).Navigate(typeof(ProfilePage));
            }
            catch { }
        }
        private void HambButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                grdHideView.Visibility = grdHideView.Visibility == V",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pJdz32
code,"using System;
namespace Versioning
{
    public class NominalData : Sage_Container, IData
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.NominalData nd11;
        SageDataObject120.NominalData nd12;
        SageDataObject130.NominalData nd13;
        SageDataObject140.NominalData nd14;
        SageDataObject150.NominalData nd15;
        SageDataObject160.NominalData nd16;
        SageDataObject170.NominalData nd17;


        public NominalData(object inner, int version)
            : base(version) {
            switch (m_version) {
            case 11: {
                    nd11 = (SageDataObject110.NominalData)inner;
                    m_fields = new Fields(nd11.Fields,m_version);
                    return;
                }

            case 12: {
                    nd12 = (SageDataObject120.NominalData)inner;
                    m_fields = new Fields(nd12.Fields,m_version);
                    return;
                }

            case 13: {
                    nd13 = (SageDataObject130.NominalData)inner;
                    m_fields = new Fields(nd13.Fields,m_version);
                    return;
                }

            case 14: {
                    nd14 = (SageDataObject140.NominalData)inner;
                    m_fields = new Fields(nd14.Fields,m_version);
                    return;
                }

            case 15: {
                    nd15 = (SageDataObject150.NominalData)inner;
                    m_fields = new Fields(nd15.Fields,m_version);
                    return;
                }
            case 16: {
                    nd16 = (SageDataObject160.NominalData)inner;
                    m_fields = new Fields(nd16.Fields,m_version);
                    return;
                }
            case 17: {
                    nd17 = (SageDataObject170.NominalData)inner;
                    m_fields = new Fields(nd17.Fields,m_version);
                    return;
                }

            default: throw new InvalidOperationException(""ver"");
            }
        }
        /* Autogenerated with data_generator.pl */
        const string ACCOUNT_REF = ""ACCOUNT_REF"";
        const string NOMINALDATA = ""NominalData"";


        
        public bool Open(OpenMode mode) {
            bool ret;
            switch (m_version) {
            case 11: {
                    ret = nd11.Open((SageDataObject110.OpenMode)mode);
                    break;
                }

            case 12: {
                    ret = nd12.Open((SageDataObject120.OpenMode)mode);
                    break;
                }

            case 13: {
                    ret = nd13.Open((SageDataObject130.OpenMode)mode);
                    break;
                }

            case 14: {
                    ret = nd14.Open((SageDataObject140.OpenMode)mode);
                    break;
                }

            case 15: {
                    ret = nd15.Open((SageDataObject150.OpenMode)mode);
                    break;
                }
            case 16: {
                    ret = nd16.Open((SageDataObject160.OpenMode)mode);
                    break;
                }
            case 17: {
                    ret = nd17.Open((SageDataObject170.OpenMode)mode);
                    break;
                }

            default: throw new InvalidOperationException(""ver"");
            }
            return ret;
        }
        public void Close() {
            switch (m_version) {
            case 11: {
                    nd11.Close();
                    break;
                }

            case 12: {
                    nd12.Close();
                    break;
                }

            case 13: {
                    nd13.Close();
                    break;
                }

            case 14: {
                    nd14.Close();
                    break;
                }

            case 15: {
                    nd15.Close();
                    break;
                }
            case 16: {
                    nd16.Close();
                    break;
                }
            case 17: {
                    nd17.Close();
                    break;
                }

            default: throw new InvalidOperationException(""ver"");
            }

        }
        public bool Read(int IRecNo) {
            bool ret;
            switch (m_version) {
            case 11: {
                    ret = nd11.Read(IRecNo);
                    break;
                }

            case 12: {
                    ret = nd12.Read(IRecNo);
                    break;
                }

            case 13: {
                    ret = nd13.Read(IRecNo);
                    break;
                }

            case 14: {
                    ret = nd14.Read(IRecNo);
                    break;
                }

            case 15: {
                    ret = nd15.Read(IRecNo);
                    break;
       ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",05485n
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using ProjectData;
using Tools;
using ProjectBLL;
using System.Data;
using Approve.RuleCenter;
using System.Text;
using System.Collections;
using Approve.RuleApp;
public partial class JSDW_DesignDoc_Report : Page
{
    ProjectDB db = new ProjectDB();
    RCenter rc = new RCenter();
    protected void Page_Load(object sender, EventArgs e)
    {
        pageTool tool = new pageTool(this.Page);
        tool.ExecuteScript(""tab();"");
        if (Session[""FIsApprove""] != null && Session[""FIsApprove""].ToString() == ""1"")
        {
            this.RegisterStartupScript(Guid.NewGuid().ToString(), ""<script>FIsApprove();</script>"");
        }
        if (!IsPostBack)
        {
            btnSave.Attributes[""onclick""] = ""return checkInfo();"";
            BindControl();
            showInfo();
        }
    }

    //绑定
    private void BindControl()
    {
        //备案部门
        string deptId = ComFunction.GetDefaultDept();
        StringBuilder sb = new StringBuilder();
        sb.Append(""select case FLevel when 1 then FFullName when 2 then FName when 3 then FName end FName,"");
        sb.Append(""FNumber from cf_Sys_ManageDept "");
        sb.Append(""where fnumber like '"" + deptId + ""%' "");
        sb.Append(""and fname<>'市辖区' "");
        sb.Append(""order by left(FNumber,4),flevel"");
        DataTable dt = rc.GetTable(sb.ToString());
        p_FManageDeptId.DataSource = dt;
        p_FManageDeptId.DataSource = dt;
        p_FManageDeptId.DataTextField = ""FName"";
        p_FManageDeptId.DataValueField = ""FNumber"";
        p_FManageDeptId.DataBind();
    }

    //显示
    private void showInfo()
    {
        string FAppId = EConvert.ToString(Session[""FAppId""]);
        var app = (from t in db.CF_App_List
                   where t.FId == FAppId
                   select new
                   {
                       t.FName,
                       t.FYear,
                       t.FLinkId,
                       t.FBaseName,
                       t.FPrjId,
                       t.FState,
                   }).FirstOrDefault();
        pageTool tool = new pageTool(this.Page, ""p_"");
        if (app != null)
        {
            t_FName.Text = app.FName;
            //已提交不能修改
            if (app.FState == 1 || app.FState == 6)
            {
                tool.ExecuteScript(""btnEnable();"");
            }
            //显示工程信息
            CF_Prj_BaseInfo prj = db.CF_Prj_BaseInfo.Where(t => t.FId == app.FPrjId).FirstOrDefault();
            if (prj != null)
            {
                tool.fillPageControl(prj);
            }
        }
    }
    /// <summary>
    /// 验证附件是否上传
    /// </summary>
    /// <returns></returns>
    bool IsUploadFile(int? FMTypeId, string FAppId)
    {
        CF_Prj_BaseInfo prj = (from p in db.CF_Prj_BaseInfo
                               join a in db.CF_App_List on p.FId equals a.FPrjId
                               where a.FId == FAppId
                               select p).FirstOrDefault();
        var v =false ;
        if (prj != null)
        {
             v = db.CF_Sys_PrjList.Count(t => t.FIsMust == 1
          && t.FManageType == FMTypeId && t.FIsPrjType.Contains(prj.FType.ToString())
          && db.CF_AppPrj_FileOther.Count(o => o.FPrjFileId == t.FId
              && o.FAppId == FAppId) < 1) > 0;
        }

      
        return v;
    }
    public void Report()
    {
        RCenter rc = new RCenter();


        pageTool tool = new pageTool(this.Page);
        string fDeptNumber = ComFunction.GetDefaultDept();
        if (fDeptNumber == null || fDeptNumber == """")
        {
            tool.showMessage(""系统出错,请配置默认管理部门"");
            return;
        }
        string FAppId = EConvert.ToString(Session[""FAppId""]);
        var app = (from t in db.CF_App_List
                   where t.FId == FAppId
                   select t).FirstOrDefault();
        SortedList[] sl = new SortedList[1];
        if (app != null)
        {

            //验证必需的附件是否上传
            if (IsUploadFile(app.FManageTypeId, FAppId))
            {
                tool.showMessage(""“上传行政批文、上传设计文件”菜单中存在未上传的附件(必需上传的)，请先上传！"");
                return;
            }
            CF_Prj_BaseInfo prj = db.CF_Prj_BaseInfo.Where(t => t.FId == app.FPrjId).FirstOrDefault();
            if (prj != null)
            {
                sl[0] = new SortedList();
                sl[0].Add(""FID"", app.FId);
                sl[0].Add(""FAppId"", app.FId);
                sl[0].Add(""FBaseInfoId"", app.FBaseinfoId);
                sl[0].Add(""FManageTypeId"", app.FManageTypeId);
                sl[0].Add(""FListId"", ""19301"");
                sl[0].Add(""FTypeId"", ""1930100"");
                sl[0].Add(""FLevelId"", ""1930100"");
                sl[0].Add(""FIsPrime"", 0);

                //sl.Add(""FAppDeptId"", row[""FAppDeptId""].ToString());
                //sl.Add(""FAppDeptName"", row[""FAppDeptName""].ToString());
                sl[0].Add(""FAppTime"", DateTime.Now);
                sl[0].Add(""FIsNew"", 0);
                sl[0].",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",clR1sW
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace AnalyzeThis
{
    internal static class RegexExtensions
    {
        public static bool TryGetMatch(this Regex regex, string input, out Match match)
        {
            if (input == null)
            {
                match = null;
                return false;
            }

            match = regex.Match(input);

            return match.Success;
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",S6h0--
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.Xml.Linq;
using System.Globalization;

namespace DevTreks.Extensions
{
    /// <summary>
    ///Purpose:		Serialize and deserialize a food nutrition cost object.
    ///             This calculator is used with inputs to calculate costs.
    ///Author:		www.devtreks.org
    ///Date:		2014, June
    ///References:	www.devtreks.org/helptreks/linkedviews/help/linkedview/HelpFile/148
    ///NOTES        1. Extends the base object MNSR1 object
    ///</summary>
    public class MNC1Calculator : MNSR1
    {
        public MNC1Calculator()
            : base()
        {
            //health care cost object
            InitMNC1Properties();
        }
        //copy constructor
        public MNC1Calculator(MNC1Calculator lca1Calc)
            : base(lca1Calc)
        {
            CopyMNC1Properties(lca1Calc);
        }

        //need to store locals and update parent input.ocprice, aohprice, capprice
        public Input MNCInput { get; set; }

        public virtual void InitMNC1Properties()
        {
            //avoid null references to properties
            this.InitCalculatorProperties();
            this.InitSharedObjectProperties();
            this.InitMNSR1Properties();
            this.MNCInput = new Input();
        }

        public virtual void CopyMNC1Properties(
            MNC1Calculator calculator)
        {
            this.CopyCalculatorProperties(calculator);
            this.CopySharedObjectProperties(calculator);
            this.CopyMNSR1Properties(calculator);
            this.MNCInput = new Input(calculator.MNCInput);
        }
        //set the class properties using the XElement
        public virtual void SetMNC1Properties(XElement calculator,
            XElement currentElement)
        {
            this.SetCalculatorProperties(calculator);
            //need the aggregating params (label, groupid, typeid and Date for sorting)
            this.SetSharedObjectProperties(currentElement);
            this.SetMNSR1Properties(calculator);
        }
        
        //attname and attvalue generally passed in from a reader
        public virtual void SetMNC1Property(string attName,
            string attValue)
        {
            this.SetMNSR1Property(attName, attValue);
            
        }
        
        public void SetMNC1Attributes(string attNameExtension,
            ref XElement calculator)
        {
            //must remove old unwanted attributes
            if (calculator != null)
            {
                //do not remove atts here, they were removed in prior this.MNCInput.SetInputAtts
                //and now include good locals
                //this also sets the aggregating atts
                this.SetAndRemoveCalculatorAttributes(attNameExtension, ref calculator);
            }
            this.SetMNSR1Attributes(attNameExtension, ref calculator);
            
        }
        public virtual void SetMNC1Attributes(string attNameExtension,
           ref XmlWriter writer)
        {
            //note must first use use either setanalyzeratts or SetCalculatorAttributes(attNameExtension, ref writer);
            this.SetMNSR1Attributes(attNameExtension, ref writer);
        }

        public bool SetMNC1Calculations(
            MN1CalculatorHelper.CALCULATOR_TYPES calculatorType,
            CalculatorParameters calcParameters, ref XElement calculator,
            ref XElement currentElement)
        {
            bool bHasCalculations = false;
            string sErrorMessage = string.Empty;
            InitMNC1Properties();
            //deserialize xml to object
            //set the base input properties (updates base input prices)
            //locals come from input
            this.MNCInput.SetInputProperties(calcParameters,
                calculator, currentElement);
            //set the calculator
            this.SetMNC1Properties(calculator, currentElement);
            bHasCalculations = RunMNC1Calculations(calcParameters);
            if (calcParameters.SubApplicationType == Constants.SUBAPPLICATION_TYPES.inputprices)
            {
                //serialize object back to xml and fill in updates list
                //this also removes atts
                this.MNCInput.SetInputAttributes(calcParameters,
                    ref currentElement, calcParameters.Updates);
            }
            else
            {
                //no db updates outside base output
                this.MNCInput.SetInputAttributes(calcParameters,
                    ref currentElement, null);
            }
            //this sets and removes some atts
            this.SetMNC1Attributes(string.Empty, ref calculator);
            //set the totals into calculator
            this.MNCInput.SetNewInputAttributes(calcParameters, ref calculator);
            //set calculatorid (primary way to display calculation attributes)
            CalculatorHelpers.SetCalculatorId(
                calculator, currentElement);
            calcParameters.ErrorMessage = sErrorMessage;
   ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",A2wQdT
code,"﻿using Dufry.Comissoes.Domain.Validation;

namespace Dufry.Comissoes.Domain.Interfaces.Validation
{
    public interface IValidation<in TEntity>
    {
        ValidationResult Valid(TEntity entity);
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QzyRuU
code,"﻿using MortgageCalc.Models;
using System;
using System.Collections.Generic;

namespace MortgageCalc.Calculators
{
    public class InterestOnlyScheduleBuilder
    {
        private RateCalc _calc = new RateCalc(6); // initialize with 6 decimal places
        private decimal _monthlyPayment;
        private decimal _principal;
        private decimal _rate;
        private int _term;

        public InterestOnlyScheduleBuilder(decimal principal, decimal rate, int term)
        {
            this._principal = principal;
            this._rate = rate;
            this._term = term;

            this._monthlyPayment = this._calc.Interest(principal, rate);
        }

        public Schedule Schedule()
        {
            return new Schedule
            {
                MonthlyPayment = Math.Round(this._monthlyPayment, 2),
                CostOfCredit = Math.Round(this._monthlyPayment * this._term, 2)
            };
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5l9aRV
code,"﻿using Feria_Desktop.View.Usuario;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Feria_Desktop.View.Mantenedor
{
    /// <summary>
    /// Lógica de interacción para Bodega.xaml
    /// </summary>
    public partial class Bodega : Page
    {
        private vEditarBodega modEditarBodega;

        public Bodega()
        {
            InitializeComponent();
        }

        private void btnNuevo_Click(object sender, RoutedEventArgs e)
        {
            modEditarBodega = new vEditarBodega();
            modEditarBodega.ShowDialog();
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xWPvbE
code,"﻿using Humanizer.Localisation;
using Xunit;
using Xunit.Extensions;

namespace Humanizer.Tests.Localisation.ptBR
{
    public class DateHumanizeTests : AmbientCulture
    {
        public DateHumanizeTests() : base(""pt-BR"") { }

        [Theory]
        [InlineData(-2, ""2 segundos atrás"")]
        [InlineData(-1, ""um segundo atrás"")]
        public void SecondsAgo(int seconds, string expected)
        {
            DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""em um segundo"")]
        [InlineData(2, ""em 2 segundos"")]
        public void SecondsFromNow(int seconds, string expected)
        {
            DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future);
        }

        [Theory]
        [InlineData(-2, ""2 minutos atrás"")]
        [InlineData(-1, ""um minuto atrás"")]
        public void MinutesAgo(int minutes, string expected)
        {
            DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""em um minuto"")]
        [InlineData(2, ""em 2 minutos"")]
        public void MinutesFromNow(int minutes, string expected)
        {
            DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future);
        }

        [Theory]
        [InlineData(-2, ""2 horas atrás"")]
        [InlineData(-1, ""uma hora atrás"")]
        public void HoursAgo(int hours, string expected)
        {
            DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""em uma hora"")]
        [InlineData(2, ""em 2 horas"")]
        public void HoursFromNow(int hours, string expected)
        {
            DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future);
        }

        [Theory]
        [InlineData(-2, ""2 dias atrás"")]
        [InlineData(-1, ""ontem"")]
        public void DaysAgo(int days, string expected)
        {
            DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""amanhã"")]
        [InlineData(2, ""em 2 dias"")]
        public void DaysFromNow(int days, string expected)
        {
            DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future);
        }

        [Theory]
        [InlineData(-2, ""2 meses atrás"")]
        [InlineData(-1, ""um mês atrás"")]
        public void MonthsAgo(int months, string expected)
        {
            DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""em um mês"")]
        [InlineData(2, ""em 2 meses"")]
        public void MonthsFromNow(int months, string expected)
        {
            DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future);
        }

        [Theory]
        [InlineData(-2, ""2 anos atrás"")]
        [InlineData(-1, ""um ano atrás"")]
        public void YearsAgo(int years, string expected)
        {
            DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past);
        }

        [Theory]
        [InlineData(1, ""em um ano"")]
        [InlineData(2, ""em 2 anos"")]
        public void YearsFromNow(int years, string expected)
        {
            DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future);
        }

        [Fact]
        public void Now()
        {
            DateHumanize.Verify(""agora"", 0, TimeUnit.Day, Tense.Future);
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vxfL7E
code,"﻿using NSubstitute;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;

namespace PoshGit2.TabCompletion
{
    public class TabCompletionTests
    {
        private readonly ITestOutputHelper _log;

        public TabCompletionTests(ITestOutputHelper log)
        {
            _log = log;
        }

        [InlineData(""gi"")]
        [InlineData(""git"")]
        [InlineData(""git."")]
        [InlineData(""git.exe"")]
        [Theory]
        public async Task GitCommand(string cmd)
        {
            var repo = Substitute.For<IRepositoryStatus>();
            var completer = new TabCompleter(Task.FromResult(repo));

            var result = await completer.CompleteAsync(cmd, CancellationToken.None);

            Assert.True(result.IsFailure);
        }

        [InlineData(""git "", new string[] { ""clone"", ""init"" })]
        [Theory]
        public async Task NullStatus(string command, string[] expected)
        {
            var completer = new TabCompleter(Task.FromResult<IRepositoryStatus>(null));
            var fullResult = await completer.CompleteAsync(command, CancellationToken.None);
            var result = GetResult(fullResult);

            Assert.Equal(result, expected.OrderBy(o => o, StringComparer.Ordinal));
        }

        [InlineData(""git add "", new string[] { })]
        [InlineData(""git rm "", new string[] { })]
        [Theory]
        public async Task EmptyStatus(string command, string[] expected)
        {
            var repo = Substitute.For<IRepositoryStatus>();
            var completer = new TabCompleter(Task.FromResult(repo));
            var fullResult = await completer.CompleteAsync(command, CancellationToken.None);
            var result = GetResult(fullResult);

            Assert.Equal(result, expected.OrderBy(o => o, StringComparer.Ordinal));
        }

        [InlineData(""git "", ""stash"")]
        [InlineData(""git s"", ""stash"")]
        [InlineData(""git "", ""push"")]
        [InlineData(""git p"", ""push"")]
        [InlineData(""git "", ""pull"")]
        [InlineData(""git p"", ""pull"")]
        [InlineData(""git "", ""bisect"")]
        [InlineData(""git bis"", ""bisect"")]
        [InlineData(""git "", ""branch"")]
        [InlineData(""git br"", ""branch"")]
        [InlineData(""git "", ""add"")]
        [InlineData(""git a"", ""add"")]
        [InlineData(""git "", ""rm"")]
        [InlineData(""git r"", ""rm"")]
        [InlineData(""git "", ""merge"")]
        [InlineData(""git m"", ""merge"")]
        [InlineData(""git "", ""mergetool"")]
        [InlineData(""git m"", ""mergetool"")]
        [Theory]
        public async Task ResultContains(string command, string expected)
        {
            var completer = CreateTabCompleter();

            var fullResult = await completer.CompleteAsync(command, CancellationToken.None);
            var result = GetResult(fullResult);

            Assert.Contains(expected, result);
        }

        // Verify command completion
        [InlineData(""git "", new[] { ""add"", ""am"", ""annotate"", ""archive"", ""bisect"", ""blame"", ""branch"", ""bundle"", ""checkout"", ""cherry"", ""cherry-pick"", ""citool"", ""clean"", ""clone"", ""commit"", ""config"", ""describe"", ""diff"", ""difftool"", ""fetch"", ""format-patch"", ""gc"", ""grep"", ""gui"", ""help"", ""init"", ""instaweb"", ""log"", ""merge"", ""mergetool"", ""mv"", ""notes"", ""prune"", ""pull"", ""push"", ""rebase"", ""reflog"", ""remote"", ""rerere"", ""reset"", ""revert"", ""rm"", ""shortlog"", ""show"", ""stash"", ""status"", ""submodule"", ""svn"", ""tag"", ""whatchanged"" })]
        [InlineData(""git.exe "", new[] { ""add"", ""am"", ""annotate"", ""archive"", ""bisect"", ""blame"", ""branch"", ""bundle"", ""checkout"", ""cherry"", ""cherry-pick"", ""citool"", ""clean"", ""clone"", ""commit"", ""config"", ""describe"", ""diff"", ""difftool"", ""fetch"", ""format-patch"", ""gc"", ""grep"", ""gui"", ""help"", ""init"", ""instaweb"", ""log"", ""merge"", ""mergetool"", ""mv"", ""notes"", ""prune"", ""pull"", ""push"", ""rebase"", ""reflog"", ""remote"", ""rerere"", ""reset"", ""revert"", ""rm"", ""shortlog"", ""show"", ""stash"", ""status"", ""submodule"", ""svn"", ""tag"", ""whatchanged"" })]

        // git add
        [InlineData(""git add "", new[] { ""working-duplicate"", ""working-modified"", ""working-added"", ""working-unmerged"" })]
        [InlineData(""git add working-m"", new[] { ""working-modified"" })]

        // git rm
        [InlineData(""git rm "", new[] { ""working-deleted"", ""working-duplicate"" })]
        [InlineData(""git rm working-a"", new string[] { })]
        [InlineData(""git rm working-d"", new string[] { ""working-deleted"", ""working-duplicate"" })]

        // git bisect
        [InlineData(""git bisect "", new[] { ""start"", ""bad"", ""good"", ""skip"", ""reset"", ""visualize"", ""replay"", ""log"", ""run"" })]
        [InlineData(""git bisect s"", new[] { ""start"", ""skip"" })]
        [InlineData(""git bisect bad "", new string[] { ""FETCH_HEAD"", ""HEAD"", ""MERGE_HEAD"", ""ORIG_HEAD"", ""feature1"", ""feature2"", ""master"", ""origin/cutfeature"", ""origin/remotefeature"" })]
        [InlineData(""git bisect good "", new string[] { ""FETCH_HEAD"", ""HEAD"", ""MERGE_HEAD"", ""ORI",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PHl4jV
code,"﻿using UnityEngine;
using System.Collections;

public class MuteButton : MonoBehaviour {

	public Sprite MuteSprite;
	public Sprite PlaySprite;

	// Use this for initialization
	void Start () {
	
	}
	
	// Update is called once per frame
	void Update () {
	
	}





}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Lv1t-b
code,"using System.Diagnostics;

namespace AdventOfCode.Day07.SignalProviders
{
    [DebuggerDisplay(""{DebuggerDisplay}"")]
    public class Wire : SignalProvider
    {
        #region | Properties & fields

        private readonly Circut _parentCircut;

        private readonly string _rawProvider;

        public string ID { get; }

        private SignalProvider Connection { get; set; }

        public string DebuggerDisplay => $""{ID}{_rawProvider}"";

        #endregion

        #region | ctors

        public Wire(Circut circut, string wireId, string rawSignalProvider)
        {
            _parentCircut = circut;
            ID = wireId;
            _rawProvider = rawSignalProvider;
        }

        #endregion

        #region | Non-public members

        private void ResolveProvider()
        {
            Connection = ProviderParser.ParseProviderType(_rawProvider, _parentCircut);
        }

        #endregion

        #region | Overrides

        public override ushort GetValue()
        {
            if (!IsResolved) // cache the value
            {
                ResolveProvider();
                Value = Connection.GetValue();
                IsResolved = true;
            }
            return Value;
        }

        #endregion
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ex5SSy
code,"using System;
using System.Text;
using System.Web;
using System.Web.Http.Description;

namespace WebApiAuthSample.Areas.HelpPage
{
    public static class ApiDescriptionExtensions
    {
        /// <summary>
        /// Generates an URI-friendly ID for the <see cref=""ApiDescription""/>. E.g. ""Get-Values-id_name"" instead of ""GetValues/{id}?name={name}""
        /// </summary>
        /// <param name=""description"">The <see cref=""ApiDescription""/>.</param>
        /// <returns>The ID as a string.</returns>
        public static string GetFriendlyId(this ApiDescription description)
        {
            string path = description.RelativePath;
            string[] urlParts = path.Split('?');
            string localPath = urlParts[0];
            string queryKeyString = null;
            if (urlParts.Length > 1)
            {
                string query = urlParts[1];
                string[] queryKeys = HttpUtility.ParseQueryString(query).AllKeys;
                queryKeyString = String.Join(""_"", queryKeys);
            }

            StringBuilder friendlyPath = new StringBuilder();
            friendlyPath.AppendFormat(""{0}-{1}"",
                description.HttpMethod.Method,
                localPath.Replace(""/"", ""-"").Replace(""{"", String.Empty).Replace(""}"", String.Empty));
            if (queryKeyString != null)
            {
                friendlyPath.AppendFormat(""_{0}"", queryKeyString.Replace('.', '-'));
            }
            return friendlyPath.ToString();
        }
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6t5FLB
code,"using GalaSoft.MvvmLight;

namespace Operation.WPF.ViewModels
{
    public interface IViewModelFactory
    {
        T ResolveViewModel<T>() where T : ViewModelBase;
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",daPsVU
code,"﻿using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using PholioVisualisation.DataAccess;
using PholioVisualisation.DataConstruction;
using PholioVisualisation.Export;
using PholioVisualisation.Export.FileBuilder.Containers;
using PholioVisualisation.Export.FileBuilder.SupportModels;
using PholioVisualisation.Export.FileBuilder.Wrappers;
using PholioVisualisation.Export.FileBuilder.Writers;
using PholioVisualisation.Formatting;
using PholioVisualisation.PholioObjects;
using System;
using System.Collections.Generic;

namespace PholioVisualisation.ExportTest.FileBuilder.Writers
{
    [TestClass]
    public class CsvBuilderIndicatorDataWriterTest
    {
        private ExportAreaHelper _areaHelper;

        private Mock<IAreasReader> _areasReaderMock;
        private Mock<PholioReader> _pholioReaderMock;
        private IndicatorExportParameters _generalParameters;
        private OnDemandQueryParametersWrapper _onDemandQueryParameters;
        private IndicatorMetadata _indicatorMetadata;
        private CsvBuilderAttributesForBodyContainer _parameters;

        private IndicatorExportParameters _indicatorExportParameters;
        private AreaFactory _areaFactory;
        private SingleIndicatorFileWriter _singleIndicatorFileWriter;

        [TestInitialize]
        public void Start()
        {
            _areasReaderMock = new Mock<IAreasReader>(MockBehavior.Strict);
            _pholioReaderMock = new Mock<PholioReader>(MockBehavior.Strict);
            _generalParameters = new IndicatorExportParameters();
            _onDemandQueryParameters = new OnDemandQueryParametersWrapper(1, new List<int>{1}, new Dictionary<int, IList<InequalitySearch>> { { 1, null } });
            _indicatorMetadata = new IndicatorMetadata { Unit = new Unit { Value = 1 }, Descriptive = new Dictionary<string, string>{{""Name"", ""NameTest""}},YearType = new YearType()};
            _parameters = new CsvBuilderAttributesForBodyContainer(_generalParameters, new OnDemandQueryParametersWrapper(1, new List<int>(), new Dictionary<int, IList<InequalitySearch>>(), null, new List<int>(), true));

            _indicatorExportParameters = new IndicatorExportParameters { ParentAreaCode = AreaCodes.England };
            _areaFactory = new AreaFactory(_areasReaderMock.Object);
            _areaHelper = new ExportAreaHelper(_areasReaderMock.Object, _indicatorExportParameters);

            _areasReaderMock.Setup(x => x.GetCategoryTypes(It.IsAny<IList<int>>())).Returns(new List<CategoryType> ());
            _areasReaderMock.Setup(x => x.GetAreaFromCode(It.IsAny<string>())).Returns(new Area { Code = ""SubNationalTest"", Name = ""NameTest"", ShortName = ""shortNameTest""});
            _areasReaderMock.Setup(x => x.GetChildAreas(It.IsAny<string>(), It.IsAny<int>())).Returns(new List<IArea> { new Area { Code = ""SubNationalTest"", Name = ""NameTest""} });
            _areasReaderMock.Setup(x => x.GetParentAreasFromChildAreaId(It.IsAny<int>(), It.IsAny<int>())).Returns(new Dictionary<string, Area> { { ""SubNationalTest"", new Area { Code = ""SubNationalTest"", Name = ""NameTest""} } });
            _areasReaderMock.Setup(x => x.GetAreaType(It.IsAny<int>())).Returns(new AreaType{ CanBeDisplayedOnMap = false, Id = 1, IsCurrent = true, IsSearchable = true, Name = ""AreaTypeTest"",
                ParentAreaTypes = new List<IAreaType>(), ShortName = ""shortNameTest""});
            _areasReaderMock.Setup(x => x.GetAreasByAreaTypeId(It.IsAny<int>())).Returns(new List<IArea>{ new Area{ AreaTypeId = AreaTypeIds.District, Code = ""SubNationalTest"", Name = ""NameTest"", ShortName = ""ShortNameTest""}});
            _areaHelper.Init();

            _singleIndicatorFileWriter = new SingleIndicatorFileWriter(1, _parameters);

            _pholioReaderMock.Setup(x => x.GetAllAges()).Returns(new List<Age> { new Age { Id = 1, Name = ""AgeTest""}});
            _pholioReaderMock.Setup(x => x.GetAllSexes()).Returns(new List<Sex> { new Sex { Id = 0, Name = ""SexName"", Sequence = 1 }});
            _pholioReaderMock.Setup(x => x.GetAllValueNotes()).Returns(new List<ValueNote> { new ValueNote {Id = 1, Text = ""NoteTest""}});

            var lookUpManager = new LookUpManager(_pholioReaderMock.Object, _areasReaderMock.Object, new List<int> {1}, new List<int> {1});

            _singleIndicatorFileWriter.Init(lookUpManager, new TrendMarkerLabelProvider(1) , new SignificanceFormatter(1, 1), _indicatorMetadata);
        }

        [TestCleanup]
        public void CleanUp()
        {
            _areasReaderMock.VerifyAll();
            _pholioReaderMock.VerifyAll();
        }

        [TestMethod]
        public void ShouldReturnHeaderTest()
        {
            var csvBuilderIndicatorDataWriter = new CsvBuilderIndicatorDataWriter(_areasReaderMock.Object, IndicatorMetadataProvider.Instance, _areaHelper, _generalParameters, _onDemandQueryParameters );

            try
            {
                var result = csvBuilderIndicatorDataWriter.GetHeader();

                Assert.IsNotNull(result);
                Assert.IsTrue(result.Length == 389);
            }
            catch (Exception)
            {
       ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IADcii
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace CycleCycleCycle.Services
{
    public interface IRideService
    {
        bool Create(int accountId, int routeId, DateTime dateRidden, int? hours, int? minutes, int? seconds);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jdumyq
code,"﻿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle(""10. Advanced Retake Exam - 22 August 2016"")]
[assembly: AssemblyDescription("""")]
[assembly: AssemblyConfiguration("""")]
[assembly: AssemblyCompany("""")]
[assembly: AssemblyProduct(""10. Advanced Retake Exam - 22 August 2016"")]
[assembly: AssemblyCopyright(""Copyright ©  2017"")]
[assembly: AssemblyTrademark("""")]
[assembly: AssemblyCulture("""")]

// Setting ComVisible to false makes the types in this assembly not visible
// to COM components.  If you need to access a type in this assembly from
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid(""8171b56b-59dc-4347-98ad-21d0c4690715"")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers
// by using the '*' as shown below:
// [assembly: AssemblyVersion(""1.0.*"")]
[assembly: AssemblyVersion(""1.0.0.0"")]
[assembly: AssemblyFileVersion(""1.0.0.0"")]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W6OAJ_
code,"using System;
using System.Diagnostics;

namespace Oragon.Architecture.IO.Path
{
	partial class PathHelpers
	{
		#region Private Classes

		private sealed class RelativeFilePath : RelativePathBase, IRelativeFilePath
		{
			#region Internal Constructors

			internal RelativeFilePath(string pathString)
				: base(pathString)
			{
				Debug.Assert(pathString != null);
				Debug.Assert(pathString.Length > 0);
				Debug.Assert(pathString.IsValidRelativeFilePath());
			}

			#endregion Internal Constructors

			#region Public Properties

			public string FileExtension { get { return FileNameHelpers.GetFileNameExtension(m_PathString); } }

			//
			// File Name and File Name Extension
			//
			public string FileName { get { return FileNameHelpers.GetFileName(m_PathString); } }

			public string FileNameWithoutExtension { get { return FileNameHelpers.GetFileNameWithoutExtension(m_PathString); } }

			//
			// IsFilePath ; IsDirectoryPath
			//
			public override bool IsDirectoryPath { get { return false; } }

			public override bool IsFilePath { get { return true; } }

			#endregion Public Properties

			#region Public Methods

			public override IAbsolutePath GetAbsolutePathFrom(IAbsoluteDirectoryPath path)
			{
				return (this as IRelativeFilePath).GetAbsolutePathFrom(path);
			}

			public IRelativeDirectoryPath GetBrotherDirectoryWithName(string directoryName)
			{
				Debug.Assert(directoryName != null); // Enforced by contract
				Debug.Assert(directoryName.Length > 0); // Enforced by contract
				IDirectoryPath path = PathBrowsingHelpers.GetBrotherDirectoryWithName(this, directoryName);
				var pathTyped = path as IRelativeDirectoryPath;
				Debug.Assert(pathTyped != null);
				return pathTyped;
			}

			public IRelativeFilePath GetBrotherFileWithName(string fileName)
			{
				Debug.Assert(fileName != null); // Enforced by contract
				Debug.Assert(fileName.Length > 0); // Enforced by contract
				IFilePath path = PathBrowsingHelpers.GetBrotherFileWithName(this, fileName);
				var pathTyped = path as IRelativeFilePath;
				Debug.Assert(pathTyped != null);
				return pathTyped;
			}

			public bool HasExtension(string extension)
			{
				// All these 3 assertions have been checked by contract!
				Debug.Assert(extension != null);
				Debug.Assert(extension.Length >= 2);
				Debug.Assert(extension[0] == '.');
				return FileNameHelpers.HasExtension(m_PathString, extension);
			}

			IDirectoryPath IFilePath.GetBrotherDirectoryWithName(string directoryName)
			{
				Debug.Assert(directoryName != null); // Enforced by contract
				Debug.Assert(directoryName.Length > 0); // Enforced by contract
				return this.GetBrotherDirectoryWithName(directoryName);
			}

			// Explicit Impl methods
			IFilePath IFilePath.GetBrotherFileWithName(string fileName)
			{
				Debug.Assert(fileName != null); // Enforced by contract
				Debug.Assert(fileName.Length > 0); // Enforced by contract
				return this.GetBrotherFileWithName(fileName);
			}

			IFilePath IFilePath.UpdateExtension(string newExtension)
			{
				// All these 3 assertions have been checked by contract!
				Debug.Assert(newExtension != null);
				Debug.Assert(newExtension.Length >= 2);
				Debug.Assert(newExtension[0] == '.');
				return this.UpdateExtension(newExtension);
			}

			//
			// Absolute/Relative pathString conversion
			//
			IAbsoluteFilePath IRelativeFilePath.GetAbsolutePathFrom(IAbsoluteDirectoryPath path)
			{
				Debug.Assert(path != null);  // Enforced by contracts!
				string pathAbsolute, failureReason;
				if (!AbsoluteRelativePathHelpers.TryGetAbsolutePathFrom(path, this, out pathAbsolute, out failureReason))
				{
					throw new ArgumentException(failureReason);
				}
				Debug.Assert(pathAbsolute != null);
				Debug.Assert(pathAbsolute.Length > 0);
				return (pathAbsolute + MiscHelpers.DIR_SEPARATOR_CHAR + this.FileName).ToAbsoluteFilePath();
			}

			//
			// Path Browsing facilities
			//
			public IRelativeFilePath UpdateExtension(string newExtension)
			{
				// All these 3 assertions have been checked by contract!
				Debug.Assert(newExtension != null);
				Debug.Assert(newExtension.Length >= 2);
				Debug.Assert(newExtension[0] == '.');
				string pathString = PathBrowsingHelpers.UpdateExtension(this, newExtension);
				Debug.Assert(pathString.IsValidRelativeFilePath());
				return new RelativeFilePath(pathString);
			}

			#endregion Public Methods
		}

		#endregion Private Classes
	}
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pKMQPc
code,"﻿using System;
using System.Diagnostics.CodeAnalysis;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using AgileSqlClub.MergeUi.DacServices;
using AgileSqlClub.MergeUi.Merge;
using AgileSqlClub.MergeUi.Metadata;
using AgileSqlClub.MergeUi.PackagePlumbing;
using AgileSqlClub.MergeUi.VSServices;
using MessageBox = System.Windows.Forms.MessageBox;

namespace AgileSqlClub.MergeUi.UI
{
    public static class DebugLogging
    {
        public static bool Enable = true;
    }

    public partial class MyControl : UserControl, IStatus
    {
        private bool _currentDataGridDirty;
        private VsProject _currentProject;
        private ISchema _currentSchema;
        private ITable _currentTable;
        private ISolution _solution;

        public MyControl()
        {
            InitializeComponent();

            //Refresh();
        }

        public void SetStatus(string message)
        {
            Dispatcher.InvokeAsync(() => { LastStatusMessage.Text = message; });
        }

        private void Refresh()
        {
            Task.Run(() => DoRefresh());
        }

        private void DoRefresh()
        {

            Dispatcher.Invoke(() => { DebugLogging.Enable = Logging.IsChecked.Value; });
            try
            {
                if (_currentDataGridDirty)
                {
                    if (!CheckSaveChanges())
                    {
                        return;
                    }
                }

                var cursor = Cursors.Arrow;

                Dispatcher.Invoke(() =>
                {
                    cursor = Cursor;
                    RefreshButton.IsEnabled = false;
                    Projects.ItemsSource = null;
                    Schemas.ItemsSource = null;
                    Tables.ItemsSource = null;
                    DataGrid.DataContext = null;

                    Cursor = Cursors.Wait;
                });

                _solution = new SolutionParser(new ProjectEnumerator(), new DacParserBuilder(), this);

                Dispatcher.Invoke(() =>
                {
                    Projects.ItemsSource = _solution.GetProjects();
                    Cursor = cursor;
                    RefreshButton.IsEnabled = true;
                });
            }
            catch (Exception e)
            {
                Dispatcher.Invoke(() => { LastStatusMessage.Text = ""Error see output window""; });

                OutputWindowMessage.WriteMessage(""Error Enumerating projects:"");
                OutputWindowMessage.WriteMessage(e.Message);
            }
        }

        [SuppressMessage(""Microsoft.Globalization"", ""CA1300:SpecifyMessageBoxOptions"")]
        private void button1_Click(object sender, RoutedEventArgs e)
        {
            Refresh();
        }

        private void Projects_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                if (null == Projects.SelectedValue)
                    return;

                var projectName = Projects.SelectedValue.ToString();

                if (String.IsNullOrEmpty(projectName))
                    return;

                Schemas.ItemsSource = null;
                Tables.ItemsSource = null;

                _currentProject = _solution.GetProject(projectName);

                if (string.IsNullOrEmpty(_currentProject.GetScript(ScriptType.PreDeploy)) &&
                    string.IsNullOrEmpty(_currentProject.GetScript(ScriptType.PostDeploy)))
                {
                    MessageBox.Show(
                        ""The project needs a post deploy script - add one anywhere in the project and refresh"", ""MergeUi"");
                    return;
                }

                LastBuildTime.Text = string.Format(""Last Dacpac Build Time: {0}"", _currentProject.GetLastBuildTime());
                Schemas.ItemsSource = _currentProject.GetSchemas();
            }
            catch (Exception ex)
            {
                Dispatcher.Invoke(() => { LastStatusMessage.Text = ""Error see output window ""; });

                OutputWindowMessage.WriteMessage(""Error reading project: {0}"", ex.Message);
            }
        }

        private void Schemas_OnSelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                if (null == Schemas.SelectedValue)
                    return;

                var schemaName = Schemas.SelectedValue.ToString();

                if (String.IsNullOrEmpty(schemaName))
                    return;

                _currentSchema = _currentProject.GetSchema(schemaName);

                Tables.ItemsSource = _currentSchema.GetTables();
            }
            catch (Exception ex)
            {
                Dispatcher.Invoke(() => { LastStatusMessage.Text = ""Error see output window""; });

                OutputWindowMessage.WriteMessage(""Error selecting ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AVd2to
code,"﻿namespace RouteExtreme.Web
{
    using System;
    using Microsoft.AspNet.Identity;
    using Microsoft.AspNet.Identity.Owin;
    using Microsoft.Owin;
    using Microsoft.Owin.Security.Cookies;
    using Microsoft.Owin.Security.Google;
    using Owin;
    using RouteExtreme.Models;
    using RouteExtreme.Data;

    public partial class Startup
    {
        // For more information on configuring authentication, please visit http://go.microsoft.com/fwlink/?LinkId=301864
        public void ConfigureAuth(IAppBuilder app)
        {
            // Configure the db context, user manager and signin manager to use a single instance per request
            app.CreatePerOwinContext(RouteExtremeDbContext.Create);
            app.CreatePerOwinContext<ApplicationUserManager>(ApplicationUserManager.Create);
            app.CreatePerOwinContext<ApplicationSignInManager>(ApplicationSignInManager.Create);

            // Enable the application to use a cookie to store information for the signed in user
            // and to use a cookie to temporarily store information about a user logging in with a third party login provider
            // Configure the sign in cookie
            app.UseCookieAuthentication(new CookieAuthenticationOptions
            {
                AuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,
                LoginPath = new PathString(""/Account/Login""),
                Provider = new CookieAuthenticationProvider
                {
                    // Enables the application to validate the security stamp when the user logs in.
                    // This is a security feature which is used when you change a password or add an external login to your account.  
                    OnValidateIdentity = SecurityStampValidator.OnValidateIdentity<ApplicationUserManager, User>(
                        validateInterval: TimeSpan.FromMinutes(30),
                        regenerateIdentity: (manager, user) => user.GenerateUserIdentityAsync(manager))
                }
            });            
            app.UseExternalSignInCookie(DefaultAuthenticationTypes.ExternalCookie);

            // Enables the application to temporarily store user information when they are verifying the second factor in the two-factor authentication process.
            app.UseTwoFactorSignInCookie(DefaultAuthenticationTypes.TwoFactorCookie, TimeSpan.FromMinutes(5));

            // Enables the application to remember the second login verification factor such as phone or email.
            // Once you check this option, your second step of verification during the login process will be remembered on the device where you logged in from.
            // This is similar to the RememberMe option when you log in.
            app.UseTwoFactorRememberBrowserCookie(DefaultAuthenticationTypes.TwoFactorRememberBrowserCookie);

            // Uncomment the following lines to enable logging in with third party login providers
            //app.UseMicrosoftAccountAuthentication(
            //    clientId: """",
            //    clientSecret: """");

            //app.UseTwitterAuthentication(
            //   consumerKey: """",
            //   consumerSecret: """");

            //app.UseFacebookAuthentication(
            //   appId: """",
            //   appSecret: """");

            //app.UseGoogleAuthentication(new GoogleOAuth2AuthenticationOptions()
            //{
            //    ClientId = """",
            //    ClientSecret = """"
            //});
        }
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OYq6kh
code,"﻿////////////////////////////////////////////////////////////////////////////////
//worldgenerator.cs
//Created on: 2015-8-21, 18:18
//
//Project VoxelEngine
//Copyright C bajsko 2015. All rights Reserved.
////////////////////////////////////////////////////////////////////////////////

using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using VoxelEngine.Game.Blocks;
using VoxelEngine.GameConsole;
using VoxelEngine.Utility;

namespace VoxelEngine.Game
{
    public class WorldGenerator
    {
        private World mWorldRef;

        public WorldGenerator(World worldRef)
        {
            this.mWorldRef = worldRef;
        }

        public Chunk GenerateChunk(int xp, int yp, int zp)
        {
            Chunk chunk = null;
            chunk = new Chunk(new Vector3(xp, yp, zp));

            Vector3 chunkPosBlock = new Vector3(xp, yp, zp) * Chunk.CHUNK_SIZE;
            int treeDensity = 2;

            float stoneBaseHeight = 0;
            float stoneBaseNoise = 0.05f;
            float stoneBaseNoiseHeight = 4;

            float stoneMountainHeight = 48;
            float stoneMountainFrequency = 0.008f;
            float stoneMinHeight = -12;

            float dirtBaseHeight = 1;
            float dirtNoise = 0.04f;
            float dirtNoiseHeight = 3;
            
            for (int x = (int)chunkPosBlock.X - 5; x < chunkPosBlock.X + Chunk.CHUNK_SIZE + 5; x++)
            {
                for(int z = (int)chunkPosBlock.Z - 5; z < chunkPosBlock.Z + Chunk.CHUNK_SIZE + 5; z++)
                {

                    int stoneHeight = (int)Math.Floor(stoneBaseHeight);
                    stoneHeight += (int)Math.Floor(GetNoiseValue(x, 0, z, stoneMountainFrequency, (int)(stoneMountainHeight)));
 
                    if (stoneHeight < stoneMinHeight)
                        stoneHeight = (int)Math.Floor((stoneMinHeight));
 
                    stoneHeight += (int)Math.Floor(GetNoiseValue(x, 0, z, stoneBaseNoise, (int)(stoneBaseNoiseHeight)));
 
                    int dirtHeight = stoneHeight + (int)(dirtBaseHeight);
                    dirtHeight += (int)Math.Floor(GetNoiseValue(x, 100, z, dirtNoise, (int)(dirtNoiseHeight)));


                    for (int y = (int)chunkPosBlock.Y - 10; y < chunkPosBlock.Y+Chunk.CHUNK_SIZE + 10; y++)
                    {
                        //from world block space to local chunk space
                        int xfactor = (int)chunkPosBlock.X;
                        int yfactor = (int)chunkPosBlock.Y;
                        int zfactor = (int)chunkPosBlock.Z;

                        if (y <= stoneHeight)
                            chunk.SetBlock(x-xfactor, y-yfactor, z-zfactor, new Block(BlockType.Stone));
                        else if (y <= dirtHeight)
                        {
                            chunk.SetBlock(x - xfactor, y - yfactor, z - zfactor, new Block(BlockType.Grass));

                            if (y == dirtHeight && GetNoiseValue(x, 0, z, 0.2f, 100) < treeDensity)
                            {
                                //CreateTree(x, y, z);
                            }
                        }
                    }
                }
            }

            //chunk.ApplySunlight();

            return chunk;
        }

        public Chunk GenerateChunk(Vector3 position)
        {
            return GenerateChunk((int)position.X, (int)position.Y, (int)position.Z);
        }

        private void CreateTree(int x, int y, int z)
        {
            //TODO: 
            //major performance hit here...
            //fix..
            Random random = new Random();
            int trunkLength = random.Next(5, 10);

            for(int yy = y; yy < y + trunkLength; yy++)
            {
                mWorldRef.SetBlock(x, yy+1, z, new Block(BlockType.Log));
            }

            int leavesStart = y+trunkLength;

            for(int xi = -3; xi <= 3; xi++)
            {
                for(int yi = 0; yi <= 1; yi++)
                {
                    for(int zi = -3; zi <= 3; zi++)
                    {
                        mWorldRef.SetBlock(x + xi, leavesStart + yi, z + zi, new Block(BlockType.Leaves));
                    }
                }
            }


            for(int xi = -2; xi <= 2; xi++)
            {
                for(int zi = -2; zi <= 2; zi++)
                {
                    mWorldRef.SetBlock(x + xi, leavesStart + 2, z + zi, new Block(BlockType.Leaves));
                }
            }

            mWorldRef.SetBlock(x - 1, leavesStart + 3, z, new Block(BlockType.Leaves));
            mWorldRef.SetBlock(x + 1, leavesStart + 3, z, new Block(BlockType.Leaves));
            mWorldRef.SetBlock(x, leavesStart + 3, z - 1, new Block(BlockType.Leaves));
            mWorldRef.SetBlock(x, leavesStart + 3, z + 1, new Block(BlockType.Leaves));
        }

        private int GetNoiseValue(int x, int z, float scale, int max)
        {
            int value = (int)((Noise.Generate(x*scale, 0, z*scale)) * (max / 2f));
            return value;
        }

 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5aEPM8
code,"﻿using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Web.Script.Serialization;

namespace CommonHelperLibrary.WEB
{
    /// <summary>
    /// Author : Hans.Huang
    /// Date : 2012-12-03
    /// Class : HttpWebDealer
    /// Discription : Helper class for dealer with the http website
    /// </summary>
    public class HttpWebDealer 
    {
        protected static LoggerHelper Logger = LoggerHelper.Instance;

        #region GetHtml

        /// <summary>
        /// Get Html text by URL
        /// I can't tell the encoding of page,So give me the encodeing best
        /// </summary>
        /// <param name=""url"">URL</param>
        /// <param name=""headers"">http request headers</param>
        /// <param name=""txtEncoding"">The Encoding suggest of webpage</param>
        /// <returns></returns>
        public static string GetHtml(string url, WebHeaderCollection headers = null, Encoding txtEncoding = null)
        {
            var html = """";
            if (string.IsNullOrWhiteSpace(url)) return html;
            var response = GetResponseByUrl(url,headers);
            html = HttpWebDealerBase.GetHtmlFromResponse(response, txtEncoding);
            return html;
        }

        #endregion

        #region GetJsonObject
        /// <summary>
        /// Get Dynamic Object (json)
        /// </summary>
        /// <param name=""url"">URL</param>
        /// <param name=""headers"">http request headers</param>
        /// <param name=""txtEncoding"">The Encoding suggest of response</param>
        /// <returns></returns>
        public static dynamic GetJsonObject(string url,WebHeaderCollection headers = null, Encoding txtEncoding = null)
        {
            var json = GetHtml(url, headers, txtEncoding);
            var jsonSerializer = new JavaScriptSerializer();
            return jsonSerializer.Deserialize<dynamic>(json);
        }
        #endregion

        #region DownloadFile

        /// <summary>
        /// Get file by HttpWebRequest and save it(Just for Small files those's content length less then 65K)
        /// </summary>
        /// <param name=""fileName"">File Name to save as</param>
        /// <param name=""url"">URL</param>
        /// <param name=""path"">The path to save the file</param>
        /// <param name=""timeout"">Request timeout</param>
        /// <param name=""headers"">http request header</param>
        /// <returns>Success:Ture</returns>
        public static bool DownloadFile(string fileName, string url, string path, int timeout, WebHeaderCollection headers = null)
        {
            var response = GetResponseByUrl(url, headers, timeout);
            var stream = response.GetResponseStream();
            if (stream == null) return false;
            using (var bReader = new BinaryReader(stream))
            {
                var length = Int32.Parse(response.ContentLength.ToString(CultureInfo.InvariantCulture));
                var byteArr = new byte[length];
                //stream.Read(byteArr, 0, length);
                bReader.Read(byteArr, 0, length);
                //if (File.Exists(path + fileName)) File.Delete(path + fileName);
                if (!Directory.Exists(path)) Directory.CreateDirectory(path);
                var fs = File.Create(path +""\\""+ fileName);
                fs.Write(byteArr, 0, length);
                fs.Close();
            }
            return true;
        }


        /// <summary>
        /// Get file by WebClient method
        /// </summary>
        /// <param name=""fileName"">File name to save</param>
        /// <param name=""url"">file url to download</param>
        /// <param name=""path"">file path to save</param>
        /// <param name=""monitor"">Monitor action for download progress</param>
        /// <returns></returns>
        public static bool DownloadFile(string fileName, string url, string path,
                                        DownloadProgressChangedEventHandler monitor = null)
        {
            if (string.IsNullOrWhiteSpace(url)) return false;
            if (!path.EndsWith(""\\"")) path += ""\\"";
            using (var wc = new WebClient())
            {
                //if (File.Exists(path +""\\""+ fileName)) File.Delete(path +""\\""+ fileName);
                if (!Directory.Exists(path)) Directory.CreateDirectory(path);
                if (monitor != null)
                    wc.DownloadProgressChanged += monitor;
                
                wc.DownloadFileAsync(new Uri(url), path + fileName);
            }
            return true;
        }

        /// <summary>
        /// Download largest file from url list
        /// </summary>
        /// <param name=""fileName"">File name to save</param>
        /// <param name=""urls"">file url list to download</param>
        /// <param name=""pat",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Gf-ZcM
code,"﻿namespace OpenProtocolInterpreter.IOInterface
{
    /// <summary>
    /// IO interface message category. Every IO interface mid must implement <see cref=""IIOInterface""/>.
    /// </summary>
    public interface IIOInterface
    {
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d7Rrqn
code,"﻿//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Text;
//using parser;
//
//namespace runic.lexer
//{
//    public class Lexer_Bootstrap_Old : Parser_Context
//    {
//        public Lexer_Bootstrap_Old(Definition definition)
//            : base(definition)
//        {
//        }
//
//        public override object perform_action(string name, Pattern_Source data, Match match)
//        {
//            if (data.name == null)
//                data.name = name;
//
//            var type = match.pattern.name;
//            switch (type)
//            {
//                case ""string"":
//                case ""regex"":
//                    data = data.patterns[1];
//                    data.type = type;
//                    return data;
//                    //                default:
//                    //                    throw new Exception(""Invalid parser method: "" + name + ""."");
//            }
//
//            return data;
//        }
//    }
//}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UCRoGN
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace track_downloader
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] blacklisted = Console.ReadLine().Split();
            List<string> filenames = ReadFilenames();
            filenames = filenames
                .Where(a => ContainsBlackListed(a, blacklisted))
                .OrderBy(a => a)
                .ToList();
            Console.WriteLine(string.Join(""\r\n"", filenames));
        }

        private static bool ContainsBlackListed(string a, string[] blacklisted)
        {
            for (int i = 0; i < blacklisted.Length; i++)
            {
                if (a.Contains(blacklisted[i]))
                {
                    return false;
                }
            }
            return true;
        }

        private static List<string> ReadFilenames()
        {
            List<string> output = new List<string>();
            string filename = Console.ReadLine();
            while (filename != ""end"")
            {
                output.Add(filename);
                filename = Console.ReadLine();
            }
            return output;
        }
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Fdw40v
code,"﻿namespace ConsoleStudentSystem.Models
{
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    public class User
    {
        private ICollection<UserProfile> userProfiles;

        public User()
        {
            this.userProfiles = new HashSet<UserProfile>();
        }

        public virtual ICollection<UserProfile> UserProfiles
        {
            get { return userProfiles; }
            set { userProfiles = value; }
        }
    }
}



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qh_j8A
code,"using System;
using System.Threading.Tasks;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Xunit;

namespace MR.AspNetCore.Jobs.Server
{
	public class InfiniteRetryProcessorTest
	{
		[Fact]
		public async Task Process_ThrowingProcessingCanceledException_Returns()
		{
			// Arrange
			var services = new ServiceCollection();
			services.AddLogging();
			var loggerFactory = services.BuildServiceProvider().GetService<ILoggerFactory>();
			var inner = new ThrowsProcessingCanceledExceptionProcessor();
			var p = new InfiniteRetryProcessor(inner, loggerFactory);
			var context = new ProcessingContext();

			// Act
			await p.ProcessAsync(context);
		}

		private class ThrowsProcessingCanceledExceptionProcessor : IProcessor
		{
			public Task ProcessAsync(ProcessingContext context)
			{
				throw new OperationCanceledException();
			}
		}
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OhQjnV
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Reactive.Linq;
using System.Threading.Tasks;

using Chromamboo.Contracts;

using Newtonsoft.Json.Linq;

namespace Chromamboo.Providers.Notification
{
    public class AtlassianCiSuiteBuildStatusNotificationProvider : INotificationProvider<string>
    {
        private readonly IBitbucketApi bitbucketApi;

        private readonly IBambooApi bambooApi;

        private readonly IPresentationService presentationService;

        public AtlassianCiSuiteBuildStatusNotificationProvider(IBitbucketApi bitbucketApi, IBambooApi bambooApi, IPresentationService presentationService)
        {
            this.bitbucketApi = bitbucketApi;
            this.bambooApi = bambooApi;
            this.presentationService = presentationService;
        }

        public enum NotificationType
        {
            Build,
            PullRequest
        }

        public void Register(string planKey)
        {
            Observable
                .Timer(DateTimeOffset.MinValue, TimeSpan.FromSeconds(5))
                .Subscribe(async l =>
                    {                                                
                            await this.PerformPollingAction(planKey);                       
                    });
        }

        private async Task PerformPollingAction(string planKey)
        {
            List<BuildDetail> buildsDetails;
            try
            {
                var latestHistoryBuild = this.bambooApi.GetLatestBuildResultsInHistoryAsync(planKey);
                var branchesListing = this.bambooApi.GetLastBuildResultsWithBranchesAsync(planKey);

                var isDevelopSuccessful = JObject.Parse(latestHistoryBuild.Result)[""results""][""result""].First()[""state""].Value<string>() == ""Successful"";

                var lastBuiltBranches = JObject.Parse(branchesListing.Result);
                buildsDetails = lastBuiltBranches[""branches""][""branch""].Where(b => b[""enabled""].Value<bool>()).Select(this.GetBuildDetails).ToList();

                if (!isDevelopSuccessful)
                {
                    var developDetails = this.bambooApi.GetBuildResultsAsync(JObject.Parse(latestHistoryBuild.Result)[""results""][""result""].First()[""planResultKey""][""key""].Value<string>());
                    var developBuildDetails = this.ConstructBuildDetails(developDetails.Result);
                    buildsDetails.Add(developBuildDetails);
                }
            }
            catch (Exception e)
            {
                this.presentationService.MarkAsInconclusive(NotificationType.Build);
                Console.WriteLine(e.GetType() + "": "" + e.Message);
                return;
            }

            this.presentationService.Update(buildsDetails);
        }

        private BuildDetail GetBuildDetails(JToken jsonToken)
        {
            var key = jsonToken[""key""].Value<string>();

            var latestBuildKeyInPlan = JObject.Parse(this.bambooApi.GetLastBuildFromBranchPlan(key).Result)[""results""][""result""].First()[""buildResultKey""].Value<string>();

            var buildDetailsString = this.bambooApi.GetBuildDetailsAsync(latestBuildKeyInPlan).Result;
            var buildDetails = this.ConstructBuildDetails(buildDetailsString);

            buildDetails.BranchName = jsonToken[""shortName""].Value<string>();
            return buildDetails;
        }
        
        private BuildDetail ConstructBuildDetails(string buildDetailsString)
        {
            var details = JObject.Parse(buildDetailsString);

            var buildDetails = new BuildDetail();
            buildDetails.CommitHash = details[""vcsRevisionKey""].Value<string>();
            buildDetails.Successful = details[""successful""].Value<bool>();
            buildDetails.BuildResultKey = details[""buildResultKey""].Value<string>();
            buildDetails.PlanResultKey = details[""planResultKey""][""key""].Value<string>();

            var commitDetails = JObject.Parse(this.bitbucketApi.GetCommitDetails(buildDetails.CommitHash).Result);

            buildDetails.JiraIssue = commitDetails[""properties""]?[""jira-key""].Values<string>().Aggregate((s1, s2) => s1 + "", "" + s2);
            buildDetails.AuthorEmailAddress = commitDetails[""author""][""emailAddress""].Value<string>();
            buildDetails.AuthorName = commitDetails[""author""][""name""].Value<string>();
            buildDetails.AuthorDisplayName = commitDetails[""author""][""displayName""]?.Value<string>() ?? buildDetails.AuthorName;
            return buildDetails;
        }     
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-FLJxy
code,"﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ClearScript.Installer.Demo
{
    public class Class1
    {
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4ylrjB
code,"/* file ""ia64/instr.cpp"" */

/*
    Copyright (c) 2002 The President and Fellows of Harvard College

    All rights reserved.

    This software is provided under the terms described in
    the ""machine/copyright.h"" include file.
*/

#include <machine/copyright.h>

#ifdef USE_PRAGMA_INTERFACE
#pragma implementation ""ia64/instr.h""
#endif

#include <machine/machine.h>

#include <ia64/opcodes.h>
#include <ia64/reg_info.h>
#include <ia64/instr.h>

#ifdef USE_DMALLOC
#include <dmalloc.h>
#define new D_NEW
#endif

using namespace ia64;


/* ---------------- is_* helper routines ------------------- */

bool
is_ldc_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    return ((s == MOV_IMM) || (s == MOVL));
}

/*
 *  Unconditional register-to-register copy within a single register file.
 */
bool
is_move_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    if (((s == MOV_GR) || (s == MOV_FR)) && !is_predicated(mi)) return true;
    else return false;
}

bool
is_cmove_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    if ((s >= MOV_AR) && (s <= MOVL) && is_predicated(mi)) return true;
    else return false;
}

bool
has_qpred(Instr *mi)
{
    if (srcs_size(mi) < 1) return false;

    int loc = srcs_size(mi) - 1;
    Opnd predOpnd = get_src(mi, loc);
    if (is_preg(predOpnd)) return true;
    else return false;
}

/*
 * Set qualifying predicate
 *      This routine adds a qualifying predicate to the instruction
 *      i.e. (qp) mov dst = src
 */
void
set_qpred(Instr *mi, Opnd qp)
{
    claim(is_preg(qp), ""Attempting to add qp that isn't a preg"");
    if (has_qpred(mi))
      set_src(mi, (srcs_size(mi)-1), qp);
    else
      append_src(mi, qp);
}

/*
 * Returns the qualifying predicate of the instruction or an error
 */
Opnd 
get_qpred(Instr *mi)
{
    Opnd predOpnd;
    if (has_qpred(mi)) 
        predOpnd = get_src(mi, (srcs_size(mi)-1));
    else 
       claim(false, ""Oops, no predicate set on instruction!"");
    return predOpnd;
}

bool
is_predicated_ia64(Instr *mi)
{
    if (!has_qpred(mi)) return false;
    Opnd predOpnd = get_qpred(mi);
    if (predOpnd != opnd_pr_const1) return true;
    else return false;
}

bool
is_line_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    return (s == LN);
}

bool
is_ubr_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    return  (((s == BR) || (s == BRL)) &&
	     !is_predicated(mi) &&
	     !is_call_ia64(mi) &&
	     !is_return_ia64(mi) &&
	     !is_mbr(mi));
}

bool
is_cbr_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    return  (((s == BR) || (s == BRL)) &&
	     is_predicated(mi) &&
	     !is_call_ia64(mi) &&
	     !is_return_ia64(mi) &&
	     !is_mbr(mi));
}

bool
is_call_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    if ((s == BR) || (s == BRL)) {
      if (get_br_ext(o, 1) == BTYPE_CALL) return true;
    }
    return false;
}

bool
is_return_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    if ((s == BR) || (s == BRL)) {
      if (get_br_ext(o, 1) == BTYPE_RET) return true;
    }
    else if (s == RFI) return true;
    return false;
}

bool
is_triary_exp_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    switch (s) {
      case FMA: case FMS: case FNMA: case FPMA: case FPMS:
      case FPNMA: case FSELECT: case PSHLADD: case PSHRADD:
      case SHLADD: case SHLADDP4: case SHRP: case XMA:
	return true;
      default:
	return false;
    }
}

bool
is_binary_exp_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    switch (s) {
      case ADD: case ADDP4: case AND: case ANDCM: case CMP:
      case CMP4: case CMPXCHG: case FADD: case FAMAX: case FAMIN:
      case FAND: case FANDCM: case FCMP: case FMAX: case FMERGE:
      case FMIN: case FMIX: case FMPY: case FNMPY: case FOR:
      case FPACK: case FPAMAX: case FPAMIN: case FPCMP:
      case FPMAX: case FPMERGE: case FPMIN: case FPMPY:
      case FPNMPY: case FPRCPA: case FRCPA: case FSUB:
      case FSWAP: case FSXT: case FXOR: case MIX: case OR:
      case PACK: case PADD: case PAVG: case PAVGSUB: case PCMP:
      case PMAX: case PMIN: case PMPY: case PROBE: case PSAD:
      case PSHL: case PSHR: case PSUB: case SHL: case SHR:
      case SUB: case TBIT: case UNPACK: case XMPY: case XOR:
	return true;
      default:
	return false;
    }
}

bool
is_unary_exp_ia64(Instr *mi)
{
    int o = get_opcode(mi);
    int s = get_stem(o);
    switch (s) {
      case CZX: case FABS: case FCVT_FX: case FCVT_XF: case FCVT_XUF:
      case FNEG: case FNEGABS: case FNORM: case FPCVT_FX: case FPNEG:
      case FPNEGABS: case FPRSQRTA: case FRSQRTA: case GETF:
      case POPCNT: case SETF: case SXT: case TAK: case THASH:
      case TNAT: case TPA: case TTAG: case ZXT:
	return true;
      default:
	return false;
    }
}

bool
is_commutative_ia64(Instr *mi)
{
    int opc = get_opcode(mi);
    int st = get_stem(opc);
    switch (st) {

      case ADD: case ADDP4: case AND: case OR:
	/* The above have an immediate form that canno",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mPCLIk
code,"/***************************************************************************
    qgsgeometryduplicatenodescheck.cpp
    ---------------------
    begin                : September 2015
    copyright            : (C) 2014 by Sandro Mani / Sourcepole AG
    email                : smani at sourcepole dot ch
 ***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#include ""qgsgeometryduplicatenodescheck.h""
#include ""qgsgeometryutils.h""
#include ""../utils/qgsfeaturepool.h""

void QgsGeometryDuplicateNodesCheck::collectErrors( QList<QgsGeometryCheckError *> &errors, QStringList &/*messages*/, QAtomicInt *progressCounter, const QgsFeatureIds &ids ) const
{
  const QgsFeatureIds &featureIds = ids.isEmpty() ? mFeaturePool->getFeatureIds() : ids;
  Q_FOREACH ( QgsFeatureId featureid, featureIds )
  {
    if ( progressCounter ) progressCounter->fetchAndAddRelaxed( 1 );
    QgsFeature feature;
    if ( !mFeaturePool->get( featureid, feature ) )
    {
      continue;
    }

    QgsGeometry featureGeom = feature.geometry();
    QgsAbstractGeometry *geom = featureGeom.geometry();
    for ( int iPart = 0, nParts = geom->partCount(); iPart < nParts; ++iPart )
    {
      for ( int iRing = 0, nRings = geom->ringCount( iPart ); iRing < nRings; ++iRing )
      {
        int nVerts = QgsGeometryCheckerUtils::polyLineSize( geom, iPart, iRing );
        if ( nVerts < 2 )
          continue;
        for ( int iVert = nVerts - 1, jVert = 0; jVert < nVerts; iVert = jVert++ )
        {
          QgsPoint pi = geom->vertexAt( QgsVertexId( iPart, iRing, iVert ) );
          QgsPoint pj = geom->vertexAt( QgsVertexId( iPart, iRing, jVert ) );
          if ( QgsGeometryUtils::sqrDistance2D( pi, pj ) < QgsGeometryCheckPrecision::tolerance() * QgsGeometryCheckPrecision::tolerance() )
          {
            errors.append( new QgsGeometryCheckError( this, featureid, pj, QgsVertexId( iPart, iRing, jVert ) ) );
          }
        }
      }
    }
  }
}

void QgsGeometryDuplicateNodesCheck::fixError( QgsGeometryCheckError *error, int method, int /*mergeAttributeIndex*/, Changes &changes ) const
{
  QgsFeature feature;
  if ( !mFeaturePool->get( error->featureId(), feature ) )
  {
    error->setObsolete();
    return;
  }
  QgsGeometry featureGeom = feature.geometry();
  QgsAbstractGeometry *geom = featureGeom.geometry();
  QgsVertexId vidx = error->vidx();

  // Check if point still exists
  if ( !vidx.isValid( geom ) )
  {
    error->setObsolete();
    return;
  }

  // Check if error still applies
  int nVerts = QgsGeometryCheckerUtils::polyLineSize( geom, vidx.part, vidx.ring );
  if ( nVerts == 0 )
  {
    error->setObsolete();
    return;
  }
  QgsPoint pi = geom->vertexAt( QgsVertexId( vidx.part, vidx.ring, ( vidx.vertex + nVerts - 1 ) % nVerts ) );
  QgsPoint pj = geom->vertexAt( error->vidx() );
  if ( QgsGeometryUtils::sqrDistance2D( pi, pj ) >= QgsGeometryCheckPrecision::tolerance() * QgsGeometryCheckPrecision::tolerance() )
  {
    error->setObsolete();
    return;
  }

  // Fix error
  if ( method == NoChange )
  {
    error->setFixed( method );
  }
  else if ( method == RemoveDuplicates )
  {
    if ( !QgsGeometryCheckerUtils::canDeleteVertex( geom, vidx.part, vidx.ring ) )
    {
      error->setFixFailed( tr( ""Resulting geometry is degenerate"" ) );
    }
    else if ( !geom->deleteVertex( error->vidx() ) )
    {
      error->setFixFailed( tr( ""Failed to delete vertex"" ) );
    }
    else
    {
      feature.setGeometry( featureGeom );
      mFeaturePool->updateFeature( feature );
      error->setFixed( method );
      changes[error->featureId()].append( Change( ChangeNode, ChangeRemoved, error->vidx() ) );
    }
  }
  else
  {
    error->setFixFailed( tr( ""Unknown method"" ) );
  }
}

QStringList QgsGeometryDuplicateNodesCheck::getResolutionMethods() const
{
  static QStringList methods = QStringList() << tr( ""Delete duplicate node"" ) << tr( ""No action"" );
  return methods;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mXJqYT
code,"/*---------------------------------------------------------------------------*\
 ##   ####  ######     |
 ##  ##     ##         | Copyright: ICE Stroemungsfoschungs GmbH
 ##  ##     ####       |
 ##  ##     ##         | http://www.ice-sf.at
 ##   ####  ######     |
-------------------------------------------------------------------------------
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 1991-2008 OpenCFD Ltd.
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is based on OpenFOAM.

    OpenFOAM is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; either version 2 of the License, or (at your
    option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM; if not, write to the Free Software Foundation,
    Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

Class
    Foam::fvcSpreadFunctionPlugin

Description

SourceFiles
    fvcSpreadPluginfunction.C

Contributors/Copyright:
    2015-2017 Bernhard F.W. Gschaider <bgschaid@hfd-research.com>

 SWAK Revision: $Id$
\*---------------------------------------------------------------------------*/

#ifndef fvcSpreadPluginfunction_H
#define fvcSpreadPluginfunction_H

#include ""FieldValuePluginFunction.H""

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                           Class fvcSpreadPluginFunction Declaration
\*---------------------------------------------------------------------------*/

class fvcSpreadPluginFunction
:
    public FieldValuePluginFunction
{
    //- Disallow default bitwise assignment
    void operator=(const fvcSpreadPluginFunction &);

    fvcSpreadPluginFunction(const fvcSpreadPluginFunction &);

    //- number of layers
    label nLayers_;

    //- difference of alpha
    scalar alphaDiff_;

    //- maximum of alpha
    scalar alphaMax_;

    //- minimum of alpha
    scalar alphaMin_;

    //- the field to be spreaded
    autoPtr<volScalarField> field_;

    //- the field to be spreaded with
    autoPtr<volScalarField> alpha_;

public:
    fvcSpreadPluginFunction(
        const FieldValueExpressionDriver &parentDriver,
        const word &name
    );

    virtual ~fvcSpreadPluginFunction() {}

    TypeName(""fvcSpreadPluginFunction"");

    void doEvaluation();

    void setArgument(
        label index,
        const string &content,
        const CommonValueExpressionDriver &driver
    );

    void setArgument(label index,const scalar &);

    void setArgument(label index,const label &);
};



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rxwuZO
code,"/*
 * This file is part of PowerDNS or dnsdist.
 * Copyright -- PowerDNS.COM B.V. and its contributors
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of version 2 of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * In addition, for the avoidance of any doubt, permission is granted to
 * link this program with OpenSSL and to (re)distribute the binaries
 * produced as the result of such linking.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
#ifdef HAVE_CONFIG_H
#include ""config.h""
#endif
#include ""utility.hh""
#include ""packetcache.hh""
#include ""logger.hh""
#include ""arguments.hh""
#include ""statbag.hh""
#include <map>
#include <boost/algorithm/string.hpp>

extern StatBag S;

PacketCache::PacketCache()
{
  d_ops=0;
  d_maps.resize(1024);
  for(auto& mc : d_maps) {
    pthread_rwlock_init(&mc.d_mut, 0);
  }

  d_ttl=-1;
  d_recursivettl=-1;

  S.declare(""packetcache-hit"");
  S.declare(""packetcache-miss"");
  S.declare(""packetcache-size"");

  d_statnumhit=S.getPointer(""packetcache-hit"");
  d_statnummiss=S.getPointer(""packetcache-miss"");
  d_statnumentries=S.getPointer(""packetcache-size"");
  d_doRecursion=false;
}

PacketCache::~PacketCache()
{
  //  WriteLock l(&d_mut);
  vector<WriteLock*> locks;
  for(auto& mc : d_maps) {
    locks.push_back(new WriteLock(&mc.d_mut));
  }
  for(auto wl : locks) {
    delete wl;
  }
}



int PacketCache::get(DNSPacket *p, DNSPacket *cached, bool recursive)
{
  extern StatBag S;

  if(d_ttl<0) 
    getTTLS();

  cleanupIfNeeded();

  if(d_doRecursion && p->d.rd) { // wants recursion
    if(!d_recursivettl) {
      (*d_statnummiss)++;
      return 0;
    }
  }
  else { // does not
    if(!d_ttl) {
      (*d_statnummiss)++;
      return 0;
    }
  }
    
  if(ntohs(p->d.qdcount)!=1) // we get confused by packets with more than one question
    return 0;

  unsigned int age=0;
  string value;
  bool haveSomething;
  {
    auto& mc=getMap(p->qdomain);
    TryReadLock l(&mc.d_mut); // take a readlock here
    if(!l.gotIt()) {
      S.inc(""deferred-cache-lookup"");
      return 0;
    }

    uint16_t maxReplyLen = p->d_tcp ? 0xffff : p->getMaxReplyLen();
    haveSomething=getEntryLocked(p->qdomain, p->qtype, PacketCache::PACKETCACHE, value, -1, recursive, maxReplyLen, p->d_dnssecOk, p->hasEDNS(), &age);
  }
  if(haveSomething) {
    (*d_statnumhit)++;
    if (recursive)
      ageDNSPacket(value, age);
    if(cached->noparse(value.c_str(), value.size()) < 0)
      return 0;
    cached->spoofQuestion(p); // for correct case
    cached->qdomain=p->qdomain;
    cached->qtype=p->qtype;
    return 1;
  }

  //  cerr<<""Packet cache miss for '""<<p->qdomain<<""', merits: ""<<packetMeritsRecursion<<endl;
  (*d_statnummiss)++;
  return 0; // bummer
}

void PacketCache::getTTLS()
{
  d_ttl=::arg().asNum(""cache-ttl"");
  d_recursivettl=::arg().asNum(""recursive-cache-ttl"");

  d_doRecursion=::arg().mustDo(""recursor""); 
}


void PacketCache::insert(DNSPacket *q, DNSPacket *r, bool recursive, unsigned int maxttl)
{
  if(d_ttl < 0)
    getTTLS();
  
  if(ntohs(q->d.qdcount)!=1) {
    return; // do not try to cache packets with multiple questions
  }

  if(q->qclass != QClass::IN) // we only cache the INternet
    return;

  uint16_t maxReplyLen = q->d_tcp ? 0xffff : q->getMaxReplyLen();
  unsigned int ourttl = recursive ? d_recursivettl : d_ttl;
  if(!recursive) {
    if(maxttl<ourttl)
      ourttl=maxttl;
  } else {
    unsigned int minttl = r->getMinTTL();
    if(minttl<ourttl)
      ourttl=minttl;
  }
  insert(q->qdomain, q->qtype, PacketCache::PACKETCACHE, r->getString(), ourttl, -1, recursive,
    maxReplyLen, q->d_dnssecOk, q->hasEDNS());
}

// universal key appears to be: qname, qtype, kind (packet, query cache), optionally zoneid, meritsRecursion
void PacketCache::insert(const DNSName &qname, const QType& qtype, CacheEntryType cet, const string& value, unsigned int ttl, int zoneID, 
  bool meritsRecursion, unsigned int maxReplyLen, bool dnssecOk, bool EDNS)
{
  cleanupIfNeeded();

  if(!ttl)
    return;
  
  //cerr<<""Inserting qname '""<<qname<<""', cet: ""<<(int)cet<<"", qtype: ""<<qtype.getName()<<"", ttl: ""<<ttl<<"", maxreplylen: ""<<maxReplyLen<<"", hasEDNS: ""<<EDNS<<endl;
  CacheEntry val;
  val.created=time(0);
  val.ttd=val.created+ttl;
  val.qname=qname;
  val.qtype=qtype.getCode();
  val.value=value;
  val.ctype=cet;
  val.meritsRecursion=meritsRecursion;
  val.maxReplyLen = maxReplyLen;
  val.dnssecOk = dnssecOk;
  val.zoneID = zoneID;
  val.hasEDNS = EDNS;
  
  auto& mc = getMap(val.qname);

  TryWriteLock l(&mc.d_mut);
  if(l.gotIt()) { 
    bool success;
    cmap_t::iterator place;
    tie(place, success)=mc.d_map.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sCL16F
code,"//
//  CRTDispatchConnection.cpp
//  dyncRTConnector
//
//  Created by hp on 12/8/15.
//  Copyright (c) 2015 hp. All rights reserved.
//

#include ""CRTDispatchConnection.h""
#include ""CRTConnManager.h""
#include ""CRTConnection.h""
#include ""CRTConnectionTcp.h""
#include ""rtklog.h""


void CRTDispatchConnection::DispatchMsg(const std::string& uid, pms::RelayMsg& r_msg)
{
    //find connector
    CRTConnManager::ConnectionInfo* pci = CRTConnManager::Instance().findConnectionInfoById(uid);
    if (!pci) {
        LE(""CRTDispatchConnection::DispatchMsg not find user:%s connection\n"", uid.c_str());
        LI(""CRTDispatchConnection::DispatchMsg handle_cmd:%s, handle_mtype:%s, handle_data:%s\n"", r_msg.handle_cmd().c_str(), r_msg.handle_mtype().c_str(), r_msg.handle_data().c_str());
        // not set push in this msg
        if (r_msg.handle_cmd().length()==0 \
                || r_msg.handle_cmd().compare(""push"")!=0 \
                || r_msg.handle_data().length()==0 \
                ||  r_msg.handle_data().compare(""1"")!=0)
        {
            LE(""CRTDispatchConnection::DispatchMsg this type of message is no need to push, so return\n"");
            return;
        }

        LI(""CRTDispatchConnection::DispatchMsg userid:%s, r_msg.cont_module:%d\n\n"", uid.c_str(), r_msg.cont_module());
        // user set not accept push
        // user set mute notification
        if (!CRTConnManager::Instance().CouldPush(uid, r_msg.cont_module()))
        {
            LE(""CRTDispatchConnection::DispatchMsg user set do not accept push or mute notify, so return\n"");
            return;
        }
        // get redis setting enablepush
        // find pusher module and sent to pusher
        CRTConnManager::ModuleInfo* pmodule = CRTConnManager::Instance().findModuleInfo("""", pms::ETransferModule::MPUSHER);
        if (pmodule && pmodule->pModule && pmodule->pModule->IsLiveSession()) {

            pms::TransferMsg t_msg;

            //r_msg.set_svr_cmds(cmd);
            r_msg.set_tr_module(pms::ETransferModule::MCONNECTOR);
            r_msg.set_connector(CRTConnManager::Instance().ConnectorId());

            t_msg.set_type(pms::ETransferType::TQUEUE);
            t_msg.set_content(r_msg.SerializeAsString());

            std::string s = t_msg.SerializeAsString();
            pmodule->pModule->SendTransferData(s.c_str(), (int)s.length());
            LI(""CRTDispatchConnection::DispatchMsg has send push msg to pusher, module type:%d, module id:%s!!!\n\n"", pmodule->othModuleType, pmodule->othModuleId.c_str());
        } else {
            LE(""CRTDispatchConnection::DispatchMsg module pusher is not liveeeeeeeeeeee!!!\n"");
        }
        return;
    } else { //!pci
        if (pci->_pConn && pci->_pConn->IsLiveSession()) {
            if (pci->_connType == pms::EConnType::THTTP) {
                CRTConnection *c = dynamic_cast<CRTConnection*>(pci->_pConn);
                if (c) {
                    c->SendDispatch(uid, r_msg.content());
                }
            } else if (pci->_connType == pms::EConnType::TTCP) {
                CRTConnectionTcp *ct = dynamic_cast<CRTConnectionTcp*>(pci->_pConn);
                if (ct) {
                    ct->SendDispatch(uid, r_msg.content());
                }
            }
        }
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rO1fgU
code,"#include ""Input.h""
#include ""Core.h""
#include ""Memory.h""
#include ""Cpu.h""

//Gameboy keys:
//[Up][Left][Right][Down][A][B][Start][Select]

//Mapped to standard keyboard keys:
//[Up][Left][Right][Down][Z][X][Enter][RShift]

//Mapped to standard Xbox controller buttons:
//[Up][Left][Right][Down][A][X][Start][Select]
//                          or
//                          [B]

Input::Input(QObject *parent, Memory& memory, Cpu& cpu)
    : QObject(parent), memory(memory), cpu(cpu)
{
    QObject::connect(QGamepadManager::instance(), &QGamepadManager::gamepadButtonPressEvent,
                        this, &Input::gamepadButtonPressed);
    QObject::connect(QGamepadManager::instance(), &QGamepadManager::gamepadButtonReleaseEvent,
                        this, &Input::gamepadButtonReleased);
}

void Input::gamepadButtonPressed(int id, QGamepadManager::GamepadButton button, double value) {
        switch(button) {
            case QGamepadManager::ButtonA:
                padA = true;
                break;
            case QGamepadManager::ButtonB:
            case QGamepadManager::ButtonX:
                padB = true;
                break;
            case QGamepadManager::ButtonStart:
                padStart = true;
                break;
            case QGamepadManager::ButtonSelect:
                padSelect = false;
                break;
            case QGamepadManager::ButtonLeft:
                padLeft = true;
                break;
            case QGamepadManager::ButtonRight:
                padRight = true;
                break;
            case QGamepadManager::ButtonUp:
                padUp = true;
                break;
            case QGamepadManager::ButtonDown:
                padDown = true;
                break;
        }
}

void Input::gamepadButtonReleased(int id, QGamepadManager::GamepadButton button) {
    switch(button) {
        case QGamepadManager::ButtonA:
            padA = false;
            break;
        case QGamepadManager::ButtonB:
        case QGamepadManager::ButtonX:
            padB = false;
            break;
        case QGamepadManager::ButtonStart:
            padStart = false;
            break;
        case QGamepadManager::ButtonSelect:
            padSelect = false;
            break;
        case QGamepadManager::ButtonLeft:
            padLeft = false;
            break;
        case QGamepadManager::ButtonRight:
            padRight = false;
            break;
        case QGamepadManager::ButtonUp:
            padUp = false;
            break;
        case QGamepadManager::ButtonDown:
            padDown = false;
            break;
    }
}


Input::~Input() {
    QObject::disconnect(QGamepadManager::instance(), &QGamepadManager::gamepadButtonPressEvent,
                        this, &Input::gamepadButtonPressed);
    QObject::disconnect(QGamepadManager::instance(), &QGamepadManager::gamepadButtonReleaseEvent,
                        this, &Input::gamepadButtonReleased);
}

unsigned char Input::getKeyInput()
{
    return memory.readMemory(0xFF00);
}

bool Input::isAnyKeyPressed()
{
    return keyUp || keyDown || keyLeft || keyRight || keyStart || keySelect || keyA || keyB ||
           padUp || padDown || padLeft || padRight || padStart || padSelect || padA || padB;
}

void Input::readInput()
{
    unsigned char keyInput = getKeyInput();
    bool interrupt = false;
    cpu.setStop(false);

    if (((keyInput & 0x10) >> 4) == 1)
    {

        if (keyA || padA) { //Z //A
            keyInput &= 0xFE;
            interrupt = true;
        }
        else
        {
            keyInput |= 0x01;
        }

        if (keyB || padB) { //X //B
            keyInput &= 0xFD;
            interrupt = true;
        }
        else
        {
            keyInput |= 0x02;
        }

        if (keySelect || padSelect) { //Control //Select
            keyInput &= 0xFB;
            interrupt = true;
        }
        else
        {
            keyInput |= 0x04;
        }

        if (keyStart || padStart) { //Enter //Start
            keyInput &= 0xF7;
            interrupt = true;
        }
        else
        {
            keyInput |= 0x08;
        }

    }
    else if (((keyInput & 0x20) >> 5) == 1)//(keyInput == 0x20)
    {

        if (!((keyRight || padRight) && (keyLeft || padLeft))) //Detect if both inputs are NOT enabled at once
        {
            if (keyRight || padRight)
            {
                keyInput &= 0xFE;
                interrupt = true;
            }
            else
            {
                keyInput |= 0x01;
            }

            if (keyLeft || padLeft)
            {
                keyInput &= 0xFD;
                interrupt = true;
            }
            else
            {
                keyInput |= 0x02;
            }
        }
        else //To solve issue of multiple key input on one axis we will ignore input when both left and right are pressed at the same time.
        {
            keyInput |= 0x01;
            keyInput |= 0x02;
        }

        if (!((keyUp || padUp) && (keyDown || padDown))) //Detect if both inputs are NOT enabled a",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F4cNq_
code,"/*
 * Copyright (C) 2011-2012 ArkCORE2 <http://www.arkania.net/>
 * Copyright (C) 2010-2012 Project SkyFire <http://www.projectskyfire.org/> 
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include ""ScriptPCH.h""
#include ""ScriptedEscortAI.h""
#include ""violet_hold.h""

#define GOSSIP_START_EVENT  ""Get your people to safety, we'll keep the Blue Dragonflight's forces at bay.""
#define GOSSIP_ITEM_1       ""Activate the crystals when we get in trouble, right""
#define GOSSIP_I_WANT_IN    ""I'm not fighting, so send me in now!""
#define SPAWN_TIME          20000

enum PortalCreatures
{
    CREATURE_AZURE_INVADER_1          = 30661,
    CREATURE_AZURE_INVADER_2          = 30961,
    CREATURE_AZURE_SPELLBREAKER_1     = 30662,
    CREATURE_AZURE_SPELLBREAKER_2     = 30962,
    CREATURE_AZURE_BINDER_1           = 30663,
    CREATURE_AZURE_BINDER_2           = 30918,
    CREATURE_AZURE_MAGE_SLAYER_1      = 30664,
    CREATURE_AZURE_MAGE_SLAYER_2      = 30963,
    CREATURE_AZURE_CAPTAIN            = 30666,
    CREATURE_AZURE_SORCEROR           = 30667,
    CREATURE_AZURE_RAIDER             = 30668,
    CREATURE_AZURE_STALKER            = 32191
};

enum AzureInvaderSpells
{
    SPELL_CLEAVE                = 15496,
    SPELL_IMPALE                = 58459,
    H_SPELL_IMPALE              = 59256,
    SPELL_BRUTAL_STRIKE         = 58460,
    SPELL_SUNDER_ARMOR          = 58461
};

enum AzureSellbreakerSpells
{
    SPELL_ARCANE_BLAST          = 58462,
    H_SPELL_ARCANE_BLAST        = 59257,
    SPELL_SLOW                  = 25603,
    SPELL_CHAINS_OF_ICE         = 58464,
    SPELL_CONE_OF_COLD          = 58463,
    H_SPELL_CONE_OF_COLD        = 59258
};

enum AzureBinderSpells
{
    SPELL_ARCANE_BARRAGE        = 58456,
    H_SPELL_ARCANE_BARRAGE      = 59248,
    SPELL_ARCANE_EXPLOSION      = 58455,
    H_SPELL_ARCANE_EXPLOSION    = 59245,
    SPELL_FROST_NOVA            = 58458,
    H_SPELL_FROST_NOVA          = 59253,
    SPELL_FROSTBOLT             = 58457,
    H_SPELL_FROSTBOLT           = 59251,
};

enum AzureMageSlayerSpells
{
    SPELL_ARCANE_EMPOWERMENT    = 58469,
    SPELL_SPELL_LOCK            = 30849
};

enum AzureCaptainSpells
{
    SPELL_MORTAL_STRIKE         = 32736,
    SPELL_WHIRLWIND_OF_STEEL    = 41057
};

enum AzureSorcerorSpells
{
    SPELL_ARCANE_STREAM         = 60181,
    H_SPELL_ARCANE_STREAM       = 60204,
    SPELL_MANA_DETONATION       = 60182,
    H_SPELL_MANA_DETONATION     = 60205
};

enum AzureRaiderSpells
{
    SPELL_CONCUSSION_BLOW       = 52719,
    SPELL_MAGIC_REFLECTION      = 60158
};

enum AzureStalkerSpells
{
    SPELL_BACKSTAB              = 58471,
    SPELL_TACTICAL_BLINK        = 58470
};

enum AzureSaboteurSpells
{
    SABOTEUR_SHIELD_DISRUPTION        = 58291,
    SABOTEUR_SHIELD_EFFECT            = 45775
};

enum TrashDoorSpell
{
    SPELL_DESTROY_DOOR_SEAL     = 58040
};

enum Spells
{
    SPELL_PORTAL_CHANNEL              = 58012,
    SPELL_CRYSTALL_ACTIVATION         = 57804
};

enum eSinclari
{
    SAY_SINCLARI_1                    = -1608045
};

float FirstPortalWPs [6][3] =
{
    {1877.670288f, 842.280273f, 43.333591f},
    {1877.338867f, 834.615356f, 38.762287f},
    {1872.161011f, 823.854309f, 38.645401f},
    {1864.860474f, 815.787170f, 38.784843f},
    {1858.953735f, 810.048950f, 44.008759f},
    {1843.707153f, 805.807739f, 44.135197f}
    //{1825.736084f, 807.305847f, 44.363785f}
};

float SecondPortalFirstWPs [9][3] =
{
    {1902.561401f, 853.334656f, 47.106117f},
    {1895.486084f, 855.376404f, 44.334591f},
    {1882.805176f, 854.993286f, 43.333591f},
    {1877.670288f, 842.280273f, 43.333591f},
    {1877.338867f, 834.615356f, 38.762287f},
    {1872.161011f, 823.854309f, 38.645401f},
    {1864.860474f, 815.787170f, 38.784843f},
    {1858.953735f, 810.048950f, 44.008759f},
    {1843.707153f, 805.807739f, 44.135197f}
    //{1825.736084f, 807.305847f, 44.363785f}
};

float SecondPortalSecondWPs [8][3] =
{
    {1929.392212f, 837.614990f, 47.136166f},
    {1928.290649f, 824.750427f, 45.474411f},
    {1915.544922f, 826.919373f, 38.642811f},
    {1900.933960f, 818.855652f, 38.801647f},
    {1886.810547f, 813.536621f, 38.490490f},
    {1869.079712f, 808.701538f, 38.689003f},
    {1860.843384f, 806.645020f, 44.008789f},
    {1843.707153f, 805.807739f, 44.135197f}
    //{1825.736084f, 807.305847f, 44.363785f}
};

float ThirdPortalWPs [8][3] =
{
    {1934.049438f, 815.778503f, 52.408699f},
    {1928.290649f, 824.750427f, 45.474411f},
    {1915.544922f, 826.919373f, 38.642811f},
    {1900.933960f, 818.8556",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wEc8yq
code,"/***************************************************************************
 *   Copyright (C) 2012 by David Edmundson <kde@davidedmundson.co.uk>      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA            *
 ***************************************************************************/

#include ""message-view.h""

#include ""adium-theme-view.h""
#include ""adium-theme-status-info.h""
#include <KTp/message-processor.h>

#include <KDebug>
#include <KIconLoader>

#include <QLabel>
#include <QResizeEvent>

#include <KTp/Logger/log-manager.h>
#include <KTp/Logger/pending-logger-logs.h>

#include <TelepathyQt/Account>

MessageView::MessageView(QWidget *parent) :
    AdiumThemeView(parent),
    m_infoLabel(new QLabel(this))
{

    loadSettings();

    QFont font = m_infoLabel->font();
    font.setBold(true);
    m_infoLabel->setFont(font);
    m_infoLabel->setAlignment(Qt::AlignCenter);

    connect(this, SIGNAL(loadFinished(bool)), SLOT(processStoredEvents()));
}

void MessageView::loadLog(const Tp::AccountPtr &account, const KTp::LogEntity &entity,
                          const Tp::ContactPtr &contact, const QDate &date,
                          const QPair< QDate, QDate > &nearestDates)
{
    if (account.isNull() || !entity.isValid()) {
        //note contact can be null
        showInfoMessage(i18n(""Unknown or invalid contact""));
        return;
    }

    m_infoLabel->hide();
    m_account = account;
    // FIXME: Workaround for a bug, probably in QGlib which causes that
    // m_entity = m_entity results in invalid m_entity->m_class being null
    if (m_entity != entity) {
        m_entity = entity;
    }
    m_contact = m_contact.dynamicCast<Tp::Contact>(contact);
    m_date = date;
    m_prev = nearestDates.first;
    m_next = nearestDates.second;

    if (entity.entityType() == Tp::HandleTypeRoom) {
        load(AdiumThemeView::GroupChat);
    } else {
        load(AdiumThemeView::SingleUserChat);
    }

    Tp::Avatar avatar = m_account->avatar();
    if (!avatar.avatarData.isEmpty()) {
        m_accountAvatar = QString(QLatin1String(""data:%1;base64,%2"")).
                            arg(avatar.MIMEType.isEmpty() ? QLatin1String(""image/*"") : avatar.MIMEType).
                            arg(QString::fromLatin1(m_account->avatar().avatarData.toBase64().data()));
    }

    KTp::LogManager *logManager = KTp::LogManager::instance();
    KTp::PendingLoggerLogs *pendingLogs = logManager->queryLogs(m_account, m_entity, m_date);
    connect(pendingLogs, SIGNAL(finished(KTp::PendingLoggerOperation*)), SLOT(onEventsLoaded(KTp::PendingLoggerOperation*)));
}

void MessageView::showInfoMessage(const QString& message)
{
    m_infoLabel->setText(message);
    m_infoLabel->show();
    m_infoLabel->raise();
    m_infoLabel->setGeometry(0, 0, width(), height());
}

void MessageView::resizeEvent(QResizeEvent* e)
{
    m_infoLabel->setGeometry(0, 0, e->size().width(), e->size().height());

    QWebView::resizeEvent(e);
}

void MessageView::setHighlightText(const QString &text)
{
    m_highlightedText = text;
}

void MessageView::clearHighlightText()
{
    setHighlightText(QString());
}

void MessageView::onEventsLoaded(KTp::PendingLoggerOperation *po)
{
    KTp::PendingLoggerLogs *pl = qobject_cast<KTp::PendingLoggerLogs*>(po);
    m_events << pl->logs();

    /* Wait with initialization for the first event so that we can know when the chat session started */
    AdiumThemeHeaderInfo headerInfo;
    headerInfo.setDestinationDisplayName(m_contact.isNull() ? m_entity.alias() : m_contact->alias());
    headerInfo.setChatName(m_contact.isNull() ? m_entity.alias() : m_contact->alias());
    headerInfo.setGroupChat(m_entity.entityType() == Tp::HandleTypeRoom);
    headerInfo.setSourceName(m_account->displayName());
    headerInfo.setIncomingIconPath(m_contact.isNull() ? QString() : m_contact->avatarData().fileName);
    headerInfo.setService(m_account->serviceName());
    // check iconPath docs for minus sign in -KIconLoader::SizeMedium
    headerInfo.setServiceIconPath",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2rhfl1
code,"/*++
 *
 *  Kafka Message Queue
 *
 *  DESCRIPTION: 
 *  AUTHOR: NickeyWoo
 *  DATE: 2014/8/15
 *
--*/
#ifndef __KAFKA_PRODUCER_HH__
#define __KAFKA_PRODUCER_HH__

#include <boost/nocopyable.hpp>

#include <google/protobuf/message_lite.h>
#include <google/protobuf/message.h>
#include <google/protobuf/descriptor.h>

class KafkaProducer	:
	public boost::nocopyable
{
public:

	template<typename MessageT>
	void Push(std::string strTopic, std::string strGroupId, MessageT* pstMessage)
	{
	}

private:

};


#endif // define __KAFKA_PRODUCER_HH__
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QfIv98
code,"/******************************************************************************
 * Icinga 2                                                                   *
 * Copyright (C) 2012-2016 Icinga Development Team (https://www.icinga.org/)  *
 *                                                                            *
 * This program is free software; you can redistribute it and/or              *
 * modify it under the terms of the GNU General Public License                *
 * as published by the Free Software Foundation; either version 2             *
 * of the License, or (at your option) any later version.                     *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU General Public License for more details.                               *
 *                                                                            *
 * You should have received a copy of the GNU General Public License          *
 * along with this program; if not, write to the Free Software Foundation     *
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
 ******************************************************************************/

#include ""livestatus/endpointstable.hpp""
#include ""icinga/host.hpp""
#include ""icinga/service.hpp""
#include ""icinga/icingaapplication.hpp""
#include ""remote/endpoint.hpp""
#include ""remote/zone.hpp""
#include ""base/configtype.hpp""
#include ""base/objectlock.hpp""
#include ""base/convert.hpp""
#include ""base/utility.hpp""
#include <boost/algorithm/string/classification.hpp>
#include <boost/tuple/tuple.hpp>
#include <boost/algorithm/string/replace.hpp>
#include <boost/algorithm/string/split.hpp>

using namespace icinga;

EndpointsTable::EndpointsTable(void)
{
	AddColumns(this);
}

void EndpointsTable::AddColumns(Table *table, const String& prefix,
    const Column::ObjectAccessor& objectAccessor)
{
	table->AddColumn(prefix + ""name"", Column(&EndpointsTable::NameAccessor, objectAccessor));
	table->AddColumn(prefix + ""identity"", Column(&EndpointsTable::IdentityAccessor, objectAccessor));
	table->AddColumn(prefix + ""node"", Column(&EndpointsTable::NodeAccessor, objectAccessor));
	table->AddColumn(prefix + ""is_connected"", Column(&EndpointsTable::IsConnectedAccessor, objectAccessor));
	table->AddColumn(prefix + ""zone"", Column(&EndpointsTable::ZoneAccessor, objectAccessor));
}

String EndpointsTable::GetName(void) const
{
	return ""endpoints"";
}

String EndpointsTable::GetPrefix(void) const
{
	return ""endpoint"";
}

void EndpointsTable::FetchRows(const AddRowFunction& addRowFn)
{
	for (const Endpoint::Ptr& endpoint : ConfigType::GetObjectsByType<Endpoint>()) {
		if (!addRowFn(endpoint, LivestatusGroupByNone, Empty))
			return;
	}
}

Value EndpointsTable::NameAccessor(const Value& row)
{
	Endpoint::Ptr endpoint = static_cast<Endpoint::Ptr>(row);

	if (!endpoint)
		return Empty;

	return endpoint->GetName();
}

Value EndpointsTable::IdentityAccessor(const Value& row)
{
	Endpoint::Ptr endpoint = static_cast<Endpoint::Ptr>(row);

	if (!endpoint)
		return Empty;

	return endpoint->GetName();
}

Value EndpointsTable::NodeAccessor(const Value& row)
{
	Endpoint::Ptr endpoint = static_cast<Endpoint::Ptr>(row);

	if (!endpoint)
		return Empty;

	return IcingaApplication::GetInstance()->GetNodeName();
}

Value EndpointsTable::IsConnectedAccessor(const Value& row)
{
	Endpoint::Ptr endpoint = static_cast<Endpoint::Ptr>(row);

	if (!endpoint)
		return Empty;

	unsigned int is_connected = endpoint->GetConnected() ? 1 : 0;

	/* if identity is equal to node, fake is_connected */
	if (endpoint->GetName() == IcingaApplication::GetInstance()->GetNodeName())
		is_connected = 1;

	return is_connected;
}

Value EndpointsTable::ZoneAccessor(const Value& row)
{
	Endpoint::Ptr endpoint = static_cast<Endpoint::Ptr>(row);

	if (!endpoint)
		return Empty;

	Zone::Ptr zone = endpoint->GetZone();

	if (!zone)
		return Empty;

	return zone->GetName();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",n1J2ta
code,"#ifndef AnalysisTool_h
#define AnalysisTool_h 1

#include ""StackingTool.hh""

#include <sstream>   // stringstream

using namespace std;

class AnalysisTool {
  public:
    AnalysisTool();
    virtual ~AnalysisTool();

    virtual void PrintTool();

    virtual bool getInterest();
    virtual bool getInterest(int particle, int sturface);
    virtual bool getInterest(int particle,
			     int sturface,
			     int creationProcess,
			     int flagPhotoElectron);
    virtual bool getInterest(int particle,
			     int sturface,
			     int volume);
    virtual bool getInterest(int particle,
			     int surface,
			     double energy);
  
    virtual string processData();
    virtual string processData(int id, float energy);
    virtual string processData(int creation_process);
  
  private:
};

#endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wF-E_7
code,"#include""population.h""

population::population() {
	pop.clear();
}

population::population(Random *r) {
    pop.clear();
    this->r = r;
}

population::population(int n_individuos, int n_gene, Random *r) {
    pop.clear();
    for(int i = 0; i < n_individuos; i++) pop.push_back(*(new individuo(n_gene, r)));
    this->r = r;
}

population::population(vector<individuo> i, Random *r) {
    pop = i;
    this->r = r;
}

vector<individuo> population::get_population() {
    return pop;
}

void population::set_population(vector<individuo> i) {
    pop = i;
}

void population::set_population(population p) {
    pop = p.get_population();
}

int population::size() {
    return pop.size();
}

void population::print() {
    for(int i = 0; i < size(); i++) pop[i].print();
}

population *population::elitismo(double pel) {
    int num = (int) (pel * ((double) size()));
    return elitismo(num);
}

population *population::elitismo(int num) {
    ranking();
    vector<individuo> newp;
    newp.clear();

    for(int i = 0; i < num; i++)
	newp.push_back(pop[i]);

    return (new population(newp, r));
}

void population::calc_fitness() {
    for(int i = 0; i < size(); i++) pop[i].get_objective();
}

void population::ranking() {
    calc_fitness();
    for(int i = 0; i < size() - 1; i++) {
	for(int j = i + 1; j < size(); j++) {
	    if(pop[i] < pop[j]) {
		individuo aux = pop[i];
		pop[i] = pop[j];
		pop[j] = aux;
	    }
	}
    }
    int counter = 0;
    pop[size() - 1].set_rank(0);
    for(int i = size() - 2; i >= 0; i--) {
	if(pop[i] > pop[i+1]) counter++;
	pop[i].set_rank(counter);
    }
}

void population::crowd() {
    calc_fitness();
    double *crowd = new double[size()];
    for(int i = 0; i < size(); i++)
	crowd[i] = 0;

    for(int i = 0; i < pop[0].get_objective().size(); i++) {
	// ordena por objetivo.
	for(int j = 0; j < size(); j++) {
	    for(int k = j + 1; k < size(); k++) {
		if(pop[j].get_objective(i) > pop[k].get_objective(i))
		    swap(pop[j], pop[k]);
	    }
	}

	for(int j = 1; j < size() - 1; j++)
	    crowd[j] += pop[j + 1].get_objective(i) - pop[j - 1].get_objective(i);
	crowd[0] = crowd[size() - 1] = 3000; //numeric_limits<double>::infinity();
    }

    
    for(int i = 0; i < size(); i++)
	pop[i].set_crowd(crowd[i]);
}

void population::sort() {
    for(int i = 0; i < size() - 1; i++) {
	for(int j = i + 1; j < size(); j++) {
	    if(pop[i].get_rank() < pop[j].get_rank()) {
		swap(pop[i], pop[j]);
	    } else if(pop[i].get_rank() == pop[j].get_rank() && pop[i].get_crowd() < pop[j].get_crowd()) {
		swap(pop[i], pop[j]);
	    }
	}
    }
}


	

population population::operator+(const population &p) {
    vector<individuo> n;

    n = p.pop;
    for(int i = 0; i < pop.size(); i++) n.push_back(pop[i]);
    return *(new population(n, r));
}

//population population::operator+=(const population &p) {return *this  = *this + p;}
	
population *population::mutation(int num_ind, int num_gene) {
    printf(""mut a\n"");
    population *newp = new population(num_ind, pop[0].get_cromossomo().get_n_gene(), r);
    printf(""mut b\n"");
    for(int i = 0; i < num_ind; i++) {
	newp->pop[i] = pop[r->nextLongInt(pop.size())].mutation(num_gene);
    }
    printf(""mut c\n"");

    return newp;
}

population *population::mutation(int num_ind) { return mutation(num_ind, 1);}

population *population::mutation(double pmut, int num_gene) {
    int num_ind = (int) (pmut * ((double) pop.size()));
    return mutation(num_ind,num_gene);
}

population *population::mutation(double pmut) { return mutation(pmut, 1);}

individuo population::get_individuo(int index){
	return pop[index];
}

void population::add_individuo(individuo i){ pop.push_back(i);}
void population::add_individuo(vector<individuo> i){ 
	for (int index = 0; index < i.size(); index ++){
		add_individuo(i[index]);
	}
}

population *population::crossover( double pcrv){
	int ncrv =  (int) (pcrv * ((double) size()));
	return crossover(ncrv);
}

population *population::crossover( int ncrv){
     population *p = new population();
	
     for (int i = 0; i < ncrv; i ++ ) {
          p->add_individuo(pop[r->nextLongInt(size())] + pop[r->nextLongInt(size())]);
     }
     return p;
}

population *population::tournament(int num_ind, int num_group) {
    printf(""inicio\n"");
    vector<individuo> group;
    if(num_ind < 1) return NULL;

    population *newp = new population(r);

    for(int i = 0; i < num_ind; i++) {
	group.clear();
	for(int j = 0; j < num_group; j++)
	    group.push_back(pop[r->nextLongInt(pop.size())]);
	individuo maior = group[0];
	for(int j = 1; j < group.size(); j++)
	    if(group[j] > maior)
		maior = group[j];
	newp->add_individuo(maior);
    }

    printf(""fim\n"");
    return newp;
}

population *population::roulette(int num_ind, int param) {
    population *newp = new population(r);
    double max = 0;

    vector<double> roulette;

    roulette.clear();

    if(param == ROULETTE_RANK || param == ROULETTE_MULTIPOINTER_RANK) {
	for(int i = 0; i < pop.size(); i++) {
	    max += (double) pop[i].get_rank();
	    roulette.push_back(max);
	}
    } else {
	for(int i = 0; i < pop.size(); i",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8ySDM7
code,"// TransformPatternDlg.cpp : implementation file
#include <psycle/host/detail/project.private.hpp>
#include ""TransformPatternDlg.hpp""
#include ""Song.hpp""
#include ""ChildView.hpp""
#include ""MainFrm.hpp""
namespace psycle { namespace host {

		static const char notes[12][3]={""C-"",""C#"",""D-"",""D#"",""E-"",""F-"",""F#"",""G-"",""G#"",""A-"",""A#"",""B-""};
		static const char *empty =""Empty"";
		static const char *nonempty=""Nonempty"";
		static const char *all=""All"";
		static const char *same=""Same"";
		static const char *off=""off"";
		static const char *twk=""twk"";
		static const char *tws=""tws"";
		static const char *mcm=""mcm"";

		// CTransformPatternDlg dialog
		IMPLEMENT_DYNAMIC(CTransformPatternDlg, CDialog)

		CTransformPatternDlg::CTransformPatternDlg(Song& _pSong, CChildView& _cview, CWnd* pParent /*=NULL*/)
			: CDialog(CTransformPatternDlg::IDD, pParent)
			, song(_pSong), cview(_cview), m_applyto(0)
		{
		}

		CTransformPatternDlg::~CTransformPatternDlg()
		{
		}

		void CTransformPatternDlg::DoDataExchange(CDataExchange* pDX)
		{
			CDialog::DoDataExchange(pDX);
			DDX_Control(pDX, IDC_SEARCHNOTECOMB, m_searchnote);
			DDX_Control(pDX, IDC_SEARCHINSTCOMB, m_searchinst);
			DDX_Control(pDX, IDC_SEARCHMACHCOMB, m_searchmach);
			DDX_Control(pDX, IDC_REPLNOTECOMB, m_replacenote);
			DDX_Control(pDX, IDC_REPLINSTCOMB, m_replaceinst);
			DDX_Control(pDX, IDC_REPLMACHCOMB, m_replacemach);
			DDX_Control(pDX, IDC_REPLTWEAKCHECK, m_replacetweak);
			DDX_Radio(pDX,IDC_APPLYTOSONG, m_applyto);
			DDX_Control(pDX, IDC_CH_INCLUDEPAT, m_includePatNotInSeq);			
		}


		BEGIN_MESSAGE_MAP(CTransformPatternDlg, CDialog)
			ON_BN_CLICKED(IDD_SEARCH, &CTransformPatternDlg::OnBnClickedSearch)
			ON_BN_CLICKED(IDD_REPLACE, &CTransformPatternDlg::OnBnClickedReplace)
		END_MESSAGE_MAP()

		BOOL CTransformPatternDlg::OnInitDialog() 
		{
			CDialog::OnInitDialog();

			//Note (search and replace)
			m_searchnote.AddString(all);			m_searchnote.SetItemData(0,1003);
			m_searchnote.AddString(empty);			m_searchnote.SetItemData(1,1001);
			m_searchnote.AddString(nonempty);		m_searchnote.SetItemData(2,1002);
			m_replacenote.AddString(same);			m_replacenote.SetItemData(0,1002);
			m_replacenote.AddString(empty);			m_replacenote.SetItemData(1,1001);
			bool is440 = PsycleGlobal::conf().patView().showA440;
			for (int i=notecommands::c0; i <= notecommands::b9;i++) {
				std::ostringstream os;
				os << notes[i%12];
				if (is440) os << (i/12)-1;
				else os << (i/12);
				m_searchnote.AddString(os.str().c_str());		m_searchnote.SetItemData(3+i,i);
				m_replacenote.AddString(os.str().c_str());		m_replacenote.SetItemData(2+i,i);
			}
			m_searchnote.AddString(off);			m_searchnote.SetItemData(123,notecommands::release);
			m_searchnote.AddString(twk);			m_searchnote.SetItemData(124,notecommands::tweak);
			m_searchnote.AddString(tws);			m_searchnote.SetItemData(125,notecommands::tweakslide);
			m_searchnote.AddString(mcm);			m_searchnote.SetItemData(126,notecommands::midicc);
			m_replacenote.AddString(off);			m_replacenote.SetItemData(122,notecommands::release);
			m_replacenote.AddString(twk);			m_replacenote.SetItemData(123,notecommands::tweak);
			m_replacenote.AddString(tws);			m_replacenote.SetItemData(124,notecommands::tweakslide);
			m_replacenote.AddString(mcm);			m_replacenote.SetItemData(125,notecommands::midicc);

			m_searchnote.SetCurSel(0);
			m_replacenote.SetCurSel(0);

			//Inst (search and replace)
			m_searchinst.AddString(all);			m_searchinst.SetItemData(0,1003);
			m_searchinst.AddString(empty);			m_searchinst.SetItemData(1,1001);
			m_searchinst.AddString(nonempty);		m_searchinst.SetItemData(2,1002);
			m_replaceinst.AddString(same);			m_replaceinst.SetItemData(0,1002);
			m_replaceinst.AddString(empty);			m_replaceinst.SetItemData(1,1001);
			for (int i=0; i < 0xFF; i++) {
				std::ostringstream os;
				if (i < 16) os << ""0"";
				os << std::uppercase << std::hex << i;
				m_searchinst.AddString(os.str().c_str());		m_searchinst.SetItemData(3+i,i);
				m_replaceinst.AddString(os.str().c_str());		m_replaceinst.SetItemData(2+i,i);
			}
			m_searchinst.SetCurSel(0);
			m_replaceinst.SetCurSel(0);

			//Mach (search and replace)
			m_searchmach.AddString(all);			m_searchmach.SetItemData(0,1003);
			m_searchmach.AddString(empty);			m_searchmach.SetItemData(1,1001);
			m_searchmach.AddString(nonempty);		m_searchmach.SetItemData(2,1002);
			m_replacemach.AddString(same);			m_replacemach.SetItemData(0,1002);
			m_replacemach.AddString(empty);			m_replacemach.SetItemData(1,1001);
			for (int i=0; i < 0xFF; i++) {
				std::ostringstream os;
				if (i < 16) os << ""0"";
				os << std::uppercase << std::hex << i;
				m_searchmach.AddString(os.str().c_str());		m_searchmach.SetItemData(3+i,i);
				m_replacemach.AddString(os.str().c_str());		m_replacemach.SetItemData(2+i,i);
			}
			m_searchmach.SetCurSel(0);
			m_replacemach.SetCurSel(0);

			if (cview.blockSelected) m_applyto = 2;
			UpdateData(FALSE);

			return true;  // return true unless you set the focus to a control
			// EXCEPTION: OCX Property Pages should return false
		}

		// CTransformPatternDlg message handl",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",48LgMS
code,"/***************************************************************************
    Copyright (C) 2003-2009 Robby Stephenson <robby@periapsis.org>
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or         *
 *   modify it under the terms of the GNU General Public License as        *
 *   published by the Free Software Foundation; either version 2 of        *
 *   the License or (at your option) version 3 or any later version        *
 *   accepted by the membership of KDE e.V. (or its successor approved     *
 *   by the membership of KDE e.V.), which shall act as a proxy            *
 *   defined in Section 14 of version 3 of the license.                    *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 *                                                                         *
 ***************************************************************************/

// The layout borrows heavily from kmsearchpatternedit.cpp in kmail
// which is authored by Marc Mutz <Marc@Mutz.com> under the GPL

#include ""filterdialog.h""
#include ""tellico_kernel.h""
#include ""document.h""
#include ""collection.h""
#include ""fieldcompletion.h""
#include ""gui/filterrulewidgetlister.h""
#include ""gui/filterrulewidget.h""
#include ""tellico_debug.h""

#include <KLocalizedString>
#include <KHelpClient>

#include <QGroupBox>
#include <QRadioButton>
#include <QButtonGroup>
#include <QLabel>
#include <QApplication>
#include <QFrame>
#include <QVBoxLayout>
#include <QPushButton>
#include <QLineEdit>
#include <QDialogButtonBox>

using Tellico::FilterDialog;

namespace {
  static const int FILTER_MIN_WIDTH = 600;
}

// modal dialog so I don't have to worry about updating stuff
// don't show apply button if not saving, i.e. just modifying existing filter
FilterDialog::FilterDialog(Mode mode_, QWidget* parent_)
    : QDialog(parent_), m_filter(nullptr), m_mode(mode_), m_saveFilter(nullptr) {
  setModal(true);
  setWindowTitle(mode_ == CreateFilter ? i18n(""Advanced Filter"") : i18n(""Modify Filter""));

  QVBoxLayout* topLayout = new QVBoxLayout();
  setLayout(topLayout);

  QDialogButtonBox* buttonBox;
  if(mode_ == CreateFilter) {
    buttonBox = new QDialogButtonBox(QDialogButtonBox::Help|QDialogButtonBox::Ok|QDialogButtonBox::Cancel|QDialogButtonBox::Apply);
  } else {
    buttonBox = new QDialogButtonBox(QDialogButtonBox::Help|QDialogButtonBox::Ok|QDialogButtonBox::Cancel);
  }
  m_okButton = buttonBox->button(QDialogButtonBox::Ok);
  m_applyButton = buttonBox->button(QDialogButtonBox::Apply);
  connect(m_okButton, &QAbstractButton::clicked, this, &FilterDialog::slotOk);
  if(m_applyButton) {
    connect(m_applyButton, &QAbstractButton::clicked, this, &FilterDialog::slotApply);
  }
  connect(buttonBox, &QDialogButtonBox::accepted, this, &QDialog::accept);
  connect(buttonBox, &QDialogButtonBox::rejected, this, &QDialog::reject);
  connect(buttonBox, &QDialogButtonBox::helpRequested, this, &FilterDialog::slotHelp);

  QGroupBox* m_matchGroup = new QGroupBox(i18n(""Filter Criteria""), this);
  QVBoxLayout* vlay = new QVBoxLayout(m_matchGroup);
  topLayout->addWidget(m_matchGroup);
  m_matchGroup->setSizePolicy(QSizePolicy::MinimumExpanding, QSizePolicy::Fixed);

  m_matchAll = new QRadioButton(i18n(""Match a&ll of the following""), m_matchGroup);
  m_matchAny = new QRadioButton(i18n(""Match an&y of the following""), m_matchGroup);
  m_matchAll->setChecked(true);

  vlay->addWidget(m_matchAll);
  vlay->addWidget(m_matchAny);

  QButtonGroup* bg = new QButtonGroup(m_matchGroup);
  bg->addButton(m_matchAll);
  bg->addButton(m_matchAny);
#if (QT_VERSION < QT_VERSION_CHECK(5, 15, 0))
  void (QButtonGroup::* buttonClicked)(int) = &QButtonGroup::buttonClicked;
  connect(bg, buttonClicked, this, &FilterDialog::slotFilterChanged);
#else
  connect(bg, &QButtonGroup::idClicked, this, &FilterDialog::slotFilterChanged);
#endif

  m_ruleLister = new FilterRuleWidgetLister(m_matchGroup);
  connect(m_ruleLister, &KWidgetLister::widgetRemoved, this, &FilterDialog::slotShrink);
  connect(m_ruleLister, &FilterRuleWidgetLister::signalModified, this, &FilterDialog::slotFilterChanged);
  m_ruleLister->setFocus();
  vlay->addWidget(m_ruleLister);

  QHBoxLayout* blay = new QHBoxLayout();
  topLayout->addLayout(blay);
  QLabel* lab = new QLabel(i18n(""Filter name:""), this);
  blay->addWidget(lab);

 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iQZRCY
code,"/*
  Kvalobs - Free Quality Control Software for Meteorological Observations

  $Id: Data.h,v 1.2.6.2 2007/09/27 09:02:22 paule Exp $

  Copyright (C) 2007 met.no

  Contact information:
  Norwegian Meteorological Institute
  Box 43 Blindern
  0313 OSLO
  NORWAY
  email: kvalobs-dev@met.no

  This file is part of KVALOBS

  KVALOBS is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License as
  published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  KVALOBS is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License along
  with KVALOBS; if not, write to the Free Software Foundation Inc.,
  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#include <boost/assign.hpp>
#include ""EncodeBufr302053.h""

EncodeBufr302053::
EncodeBufr302053()
{

}
std::string
EncodeBufr302053::
logIdentifier() const
{
    return ""302053"";
}

std::list<int>
EncodeBufr302053::
encodeIds()const
{
    std::list<int> ids;
    boost::assign::push_back( ids )(302053);

    return ids;
}



void
EncodeBufr302053::
encode( )
{
    bufr->addValue( 7032, stationInfo->heightVisability(), ""h_V, height of visibility sensor above marine deck."", false );
    bufr->addValue( 7033, FLT_MAX, ""h_V, height of visibility sensor above water surface."", false );
    bufr->addValue( 20001, data->VV, ""VV, horisental visibility"" );
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",trLO9b
code,"
/** IneoRealTimeFileFormat class implementation.
	@file IneoRealTimeFileFormat.cpp

	This file belongs to the SYNTHESE project (public transportation specialized software)
	Copyright (C) 2002 Hugues Romain - RCSmobility <contact@rcsmobility.com>

	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/

#include ""IneoRealTimeFileFormat.hpp""

#include ""Import.hpp""
#include ""DataSource.h""
#include ""DataSourceTableSync.h""
#include ""DBTransaction.hpp""
#include ""ImportableTableSync.hpp""
#include ""ScheduledServiceTableSync.h""
#include ""StopPointTableSync.hpp""
#include ""CommercialLineTableSync.h""
#include ""JourneyPatternTableSync.hpp""
#include ""DesignatedLinePhysicalStop.hpp""
#include ""LineStopTableSync.h""

#include <boost/lexical_cast.hpp>

using namespace std;
using namespace boost;
using namespace boost::posix_time;
using namespace gregorian;

namespace synthese
{
	using namespace data_exchange;
	using namespace pt;
	using namespace server;
	using namespace util;
	using namespace impex;
	using namespace db;
	using namespace graph;
	using namespace util;

	namespace util
	{
		template<> const string FactorableTemplate<FileFormat, IneoRealTimeFileFormat>::FACTORY_KEY(""ineo_temps_reel"");
	}

	namespace data_exchange
	{
		const string IneoRealTimeFileFormat::Importer_::PARAMETER_PLANNED_DATASOURCE_ID(""ps"");
		const string IneoRealTimeFileFormat::Importer_::PARAMETER_COURSE_ID(""ci"");
		const string IneoRealTimeFileFormat::Importer_::PARAMETER_DB_CONN_STRING(""conn_string"");
		const string IneoRealTimeFileFormat::Importer_::PARAMETER_STOP_CODE_PREFIX(""stop_code_prefix"");



		bool IneoRealTimeFileFormat::Importer_::_read(
		) const	{
			if(_database.empty() || !_plannedDataSource.get())
			{
				return false;
			}

			DataSource& dataSource(*_import.get<DataSource>());

			boost::shared_ptr<DB> db;

			if(_dbConnString)
			{
				db = DBModule::GetDBForStandaloneUse(*_dbConnString);
			}
			else
			{
				db = DBModule::GetDBSPtr();
			}

			date today(day_clock::local_day());
			string todayStr(""'""+ to_iso_extended_string(today) +""'"");

			// Services linked to the planned source
			ImportableTableSync::ObjectBySource<StopPointTableSync> stops(*_plannedDataSource, _env);
			ImportableTableSync::ObjectBySource<CommercialLineTableSync> lines(*_plannedDataSource, _env);

			if(!_courseId)
			{
				BOOST_FOREACH(const ImportableTableSync::ObjectBySource<CommercialLineTableSync>::Map::value_type& itLine, lines.getMap())
				{
					BOOST_FOREACH(const ImportableTableSync::ObjectBySource<CommercialLineTableSync>::Map::mapped_type::value_type& line, itLine.second)
					{
						JourneyPatternTableSync::Search(_env, line->getKey());
						ScheduledServiceTableSync::Search(_env, optional<RegistryKeyType>(), line->getKey());
						BOOST_FOREACH(const Path* route, line->getPaths())
						{
							LineStopTableSync::Search(_env, route->getKey());
						}
				}	}

				// 1 : clean the old references to the current source
				ImportableTableSync::ObjectBySource<ScheduledServiceTableSync> sourcedServices(dataSource, _env);
				BOOST_FOREACH(const ImportableTableSync::ObjectBySource<ScheduledServiceTableSync>::Map::value_type& itService, sourcedServices.getMap())
				{
					BOOST_FOREACH(const ImportableTableSync::ObjectBySource<ScheduledServiceTableSync>::Map::mapped_type::value_type& obj, itService.second)
					{
						obj->removeSourceLinks(dataSource);
					}
				}
			}
			else
			{
				// 1 : clean the old references to the current source
				ImportableTableSync::ObjectBySource<ScheduledServiceTableSync> sourcedServices(dataSource, _env);
				set<ScheduledService*> services(sourcedServices.get(*_courseId));
				BOOST_FOREACH(ScheduledService* service, services)
				{
					service->removeSourceLinks(dataSource);
					_services.insert(service);
				}
			}

			// 2 : loop on the services present in the database and link to existing or new services
			stringstream query;
			query << ""SELECT c.ref, c.chainage, c.ligne, l.mnemo as ligne_ref FROM "" << _database << "".COURSE c "" <<
				""INNER JOIN "" << _database << "".LIGNE l on c.ligne=l.ref AND l.jour=c.jour "" <<
				""WHERE c.jour="" << todayStr << "" AND c.type='C'"";
			if(_courseId)
			{
				query << "" AND c.ref="" << *_courseId;
			}
			DBResultSPtr result(db->execQuery(query.str()));
			while(result->next())
			{
				string serviceRef(result->getText(""ref""));
				string chainage(result->getText(""chainage""));
				string ligneRef(result->getText(""ligne_ref""));

				_logDebug(
				",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bDm_ej
code,"/*
 *  Copyright (C) 2002-2015  The DOSBox Team
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */


#include ""dosbox.h""
#include ""dos_system.h""
#include ""drives.h""
#include ""setup.h""
#include ""mapper.h""
#include ""support.h""
#include ""../save_state.h""

bool WildFileCmp(const char * file, const char * wild) 
{
	char file_name[9];
	char file_ext[4];
	char wild_name[9];
	char wild_ext[4];
	const char * find_ext;
	Bitu r;

	strcpy(file_name,""        "");
	strcpy(file_ext,""   "");
	strcpy(wild_name,""        "");
	strcpy(wild_ext,""   "");

	find_ext=strrchr(file,'.');
	if (find_ext) {
		Bitu size=(Bitu)(find_ext-file);
		if (size>8) size=8;
		memcpy(file_name,file,size);
		find_ext++;
		memcpy(file_ext,find_ext,(strlen(find_ext)>3) ? 3 : strlen(find_ext)); 
	} else {
		memcpy(file_name,file,(strlen(file) > 8) ? 8 : strlen(file));
	}
	upcase(file_name);upcase(file_ext);
	find_ext=strrchr(wild,'.');
	if (find_ext) {
		Bitu size=(Bitu)(find_ext-wild);
		if (size>8) size=8;
		memcpy(wild_name,wild,size);
		find_ext++;
		memcpy(wild_ext,find_ext,(strlen(find_ext)>3) ? 3 : strlen(find_ext));
	} else {
		memcpy(wild_name,wild,(strlen(wild) > 8) ? 8 : strlen(wild));
	}
	upcase(wild_name);upcase(wild_ext);
	/* Names are right do some checking */
	r=0;
	while (r<8) {
		if (wild_name[r]=='*') goto checkext;
		if (wild_name[r]!='?' && wild_name[r]!=file_name[r]) return false;
		r++;
	}
checkext:
    r=0;
	while (r<3) {
		if (wild_ext[r]=='*') return true;
		if (wild_ext[r]!='?' && wild_ext[r]!=file_ext[r]) return false;
		r++;
	}
	return true;
}

void Set_Label(char const * const input, char * const output, bool cdrom) {
	Bitu togo     = 8;
	Bitu vnamePos = 0;
	Bitu labelPos = 0;
	bool point    = false;

	//spacepadding the filenamepart to include spaces after the terminating zero is more closely to the specs. (not doing this now)
	// HELLO\0' '' '

	while (togo > 0) {
		if (input[vnamePos]==0) break;
		if (!point && (input[vnamePos]=='.')) {	togo=4; point=true; }

		//another mscdex quirk. Label is not always uppercase. (Daggerfall)
		output[labelPos] = (cdrom?input[vnamePos]:toupper(input[vnamePos]));

		labelPos++; vnamePos++;
		togo--;
		if ((togo==0) && !point) {
			if (input[vnamePos]=='.') vnamePos++;
			output[labelPos]='.'; labelPos++; point=true; togo=3;
		}
	};
	output[labelPos]=0;

	//Remove trailing dot. except when on cdrom and filename is exactly 8 (9 including the dot) letters. MSCDEX feature/bug (fifa96 cdrom detection)
	if((labelPos > 0) && (output[labelPos-1] == '.') && !(cdrom && labelPos ==9))
		output[labelPos-1] = 0;
}



DOS_Drive::DOS_Drive() {
	curdir[0]=0;
	info[0]=0;
}

const char * DOS_Drive::GetInfo(void) {
	return info;
}

// static members variables
int DriveManager::currentDrive;
DriveManager::DriveInfo DriveManager::driveInfos[26];

void DriveManager::AppendDisk(int drive, DOS_Drive* disk) {
	driveInfos[drive].disks.push_back(disk);
}

void DriveManager::InitializeDrive(int drive) {
	currentDrive = drive;
	DriveInfo& driveInfo = driveInfos[currentDrive];
	if (driveInfo.disks.size() > 0) {
		driveInfo.currentDisk = 0;
		DOS_Drive* disk = driveInfo.disks[driveInfo.currentDisk];
		Drives[currentDrive] = disk;
		disk->Activate();
	}
}

/*
void DriveManager::CycleDrive(bool pressed) {
	if (!pressed) return;
		
	// do one round through all drives or stop at the next drive with multiple disks
	int oldDrive = currentDrive;
	do {
		currentDrive = (currentDrive + 1) % DOS_DRIVES;
		int numDisks = driveInfos[currentDrive].disks.size();
		if (numDisks > 1) break;
	} while (currentDrive != oldDrive);
}

void DriveManager::CycleDisk(bool pressed) {
	if (!pressed) return;
	
	int numDisks = driveInfos[currentDrive].disks.size();
	if (numDisks > 1) {
		// cycle disk
		int currentDisk = driveInfos[currentDrive].currentDisk;
		DOS_Drive* oldDisk = driveInfos[currentDrive].disks[currentDisk];
		currentDisk = (currentDisk + 1) % numDisks;		
		DOS_Drive* newDisk = driveInfos[currentDrive].disks[currentDisk];
		driveInfos[currentDrive].currentDisk = currentDisk;
		
		// copy working directory, acquire system resources and finally switch to next drive		
		strcpy(newDisk->curdir, oldDisk->curdir);
		newDisk->Activate();
		Drives[currentDrive] = newDisk;
	}
}
*/

void DriveManager::CycleAllDisks(void) {
	for (int idrive=0; idrive<2; idrive++) { /* Cycle all DISKS meaning A: and B: */
		int numDisks = (int)driveInfos[idrive].disks.size();
		if (numDisks > 1) {
			// cycle",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zRuIpX
code,"/*
  Copyright (c) 2006 Paolo Capriotti <p.capriotti@gmail.com>
            (c) 2006 Maurizio Monge <maurizio.monge@kdemail.net>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
*/

#include <cmath>
#include <QDebug>
#include <QString>
#include ""common.h""
#include ""point.h""

Point::Point(int x, int y)
    : x(x), y(y) {

}

Point::Point(const QPoint& p)
    : x(p.x()), y(p.y()) {

}

Point::Point() {

}

Point::Point(const QString& str, int ysize) {
  x = y = -1;
  int length = str.length();
  if(length == 0)
    return;
  if(str[0].isLetter()) {
    char c = str[0].toAscii();
    if(c >= 'a' && c <= 'z')
      x = c-'a';
    else if(c >= 'A' && c <= 'Z')
      x = c-'A';
    if(length>1)
      y = ysize - str.mid(1).toInt();
  }
  else
    y = ysize - str.toInt();
}

QString Point::row(int ysize) const {
    if (y != -1)
        return QString::number(ysize - y);
    else
        return QString();
}
QString Point::numcol(int xsize) const {
    if (x != -1)
        return QString::number(xsize - x);
    else
        return QString();
}

QString Point::col() const {
    if (x != -1) {
      if(x >= 26)
        return QChar(static_cast<char>(x - 26 + 'A'));
      else
        return QChar(static_cast<char>(x + 'a'));
    }
    else
        return QString();
}
QString Point::alpharow() const {
    if (y != -1) {
      if(y >= 26)
        return QChar(static_cast<char>(y - 26 + 'A'));
      else
        return QChar(static_cast<char>(y + 'a'));
    }
    else
        return QString();
}

QString Point::toString(int ysize) const {
    return col() + row(ysize);
}

Point Point::operator+(const Point& other) const {
    return Point(x + other.x, y + other.y);
}

Point Point::operator+=(const Point& other) {
    return *this = *this + other;
}

Point Point::operator-() const {
    return Point(-x, -y);
}

Point Point::operator-(const Point& other) const {
    return Point(x - other.x, y - other.y);
}

Point Point::operator*(int n) const {
    return Point(x * n, y * n);
}

Point Point::operator/(int n) const {
    return Point(x / n, y / n);
}

Point Point::div(int n) const {
    return Point(x >= 0 ? x / n : x / n - 1,
               y >= 0 ? y / n : y / n - 1);
}

bool Point::operator==(const Point& other) const {
    return x == other.x && y == other.y;
}

bool Point::operator!=(const Point& other) const {
    return !(*this == other);
}

bool Point::operator<(const Point& other) const {
    return y < other.y || (y == other.y && x < other.x);
}

bool Point::operator<=(const Point& other) const {
    return y <= other.y || (y == other.y && x <= other.x);
}

bool Point::resembles(const Point& other) const {
    return (other.x == -1 || x == other.x) &&
            (other.y == -1 || y == other.y);
}

Point::operator QPoint() const {
    return QPoint(x,y);
}

Point Point::normalizeInfinity() const {
    return Point(
        normalizeInfinityHelper(x),
        normalizeInfinityHelper(y)
    );
}

double Point::norm() const {
    return sqrt((double)(x*x + y*y));
}

int Point::normalizeInfinityHelper(int n) const {
    if (n == 0)
        return 0;
    else
        return n > 0 ? 1 : -1;
}

QDebug operator<<(QDebug dbg, const Point& p) {
  dbg << ""("" << (p.x == -1 ? QString(""?"") : QString::number(p.x))
      << "", "" << (p.y == -1 ? QString(""?"") : QString::number(p.y)) << "")"";
  return dbg;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HUFU3o
code,"
#include ""TreeFactory.h""
#include ""RobotFactory.h""
#include ""Robot.h""
#include ""kinematic/Tree.h""
#include ""kinematic/Enums.h""

#include <vector>
#include <list>

using namespace matrices;
using namespace manip_core::enums;
using namespace manip_core::enums::robot;


namespace factories
{
const Vector3 unitx(1, 0, 0);
const Vector3 unity(0, 1, 0);
const Vector3 unitz(0, 0, 1);
const Vector3 unit1(sqrt(14.0)/8.0, 1.0/8.0, 7.0/8.0);
const Vector3 zero(0,0,0);

struct RobotFactoryPimpl{
	RobotFactoryPimpl()
	{
		// NOTHING
	}
	
	~RobotFactoryPimpl()
	{
		// NOTHING
	}

	// TODO Joint that do not move

	Robot* CreateHuman(const Matrix4& robotBasis) const
	{
		Robot* res = new Robot(robotBasis, treeFact_.CreateTree( HumanTorso, Vector3(0.0, 0., 0), 4), manip_core::enums::robot::Human);
		Tree* rightLeg = treeFact_.CreateTree( RightLeg, Vector3(0.0, -0.2, 0.1), 0);
		Tree* leftLeg  = treeFact_.CreateTree( LeftLeg, Vector3(0.0, 0.2 , 0.1), 1);
		Tree* rightArm = treeFact_.CreateTree( RightArm, Vector3(0.0, -0.4, 1.3), 2);
		Tree* leftArm  = treeFact_.CreateTree( LeftArm, Vector3(0.0, 0.4, 1.3), 3);
		//rightArm->SetBoundaryRadius(rightArm->GetBoundaryRadius() * 8 / 10 );
		//leftArm->SetBoundaryRadius(leftArm->GetBoundaryRadius() * 8 / 10 );
		res->AddTree(rightLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(leftLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(rightArm, matrices::Vector3(0,0,1.2), 1);
		res->AddTree(leftArm, matrices::Vector3(0,0,1.2), 1);
		/*rightLeg->LockTarget(rightLeg->GetTarget());
		leftLeg->LockTarget(leftLeg->GetTarget());*/

	//rightLeg->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), rightLeg->GetPosition() + Vector3( -0.3, 0, -1.6)));
		//leftLeg ->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), leftLeg->GetPosition()  + Vector3( 0.3, 0, -1.4)));

		return res;
	}

	Robot* CreateHumanEscalade(const Matrix4& robotBasis) const
	{
		Robot* res = new Robot(robotBasis, treeFact_.CreateTree( HumanTorso, Vector3(0.0, 0., 0), 4), manip_core::enums::robot::HumanEscalade);
		Tree* rightLeg = treeFact_.CreateTree( RightLegEscalade, Vector3(0.0, -0.2, 0.1), 0);
		Tree* leftLeg  = treeFact_.CreateTree( LeftLegEscalade, Vector3(0.0, 0.2 , 0.1), 1);
		Tree* rightArm = treeFact_.CreateTree( RightArmEscalade, Vector3(0.0, -0.4, 1.3), 2);
		Tree* leftArm  = treeFact_.CreateTree( LeftArmEscalade, Vector3(0.0, 0.4, 1.3), 3);
		//rightArm->SetBoundaryRadius(rightArm->GetBoundaryRadius() * 8 / 10 );
		//leftArm->SetBoundaryRadius(leftArm->GetBoundaryRadius() * 8 / 10 );
		res->AddTree(rightLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(leftLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(rightArm, matrices::Vector3(0,0,1.2), 1);
		res->AddTree(leftArm, matrices::Vector3(0,0,1.2), 1);
		/*rightLeg->LockTarget(rightLeg->GetTarget());
		leftLeg->LockTarget(leftLeg->GetTarget());*/

	//rightLeg->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), rightLeg->GetPosition() + Vector3( -0.3, 0, -1.6)));
		//leftLeg ->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), leftLeg->GetPosition()  + Vector3( 0.3, 0, -1.4)));

		return res;
	}

	Robot* CreateHumanCanap(const Matrix4& robotBasis) const
	{
		Robot* res = new Robot(robotBasis, treeFact_.CreateTree( HumanTorso, Vector3(0.0, 0., 0), 4), manip_core::enums::robot::HumanCanap);
		Tree* rightLeg = treeFact_.CreateTree( RightLegCanap, Vector3(0.0, -0.2, 0.1), 0);
		Tree* leftLeg  = treeFact_.CreateTree( LeftLegCanap, Vector3(0.0, 0.2 , 0.1), 1);
		Tree* rightArm = treeFact_.CreateTree( RightArmCanap, Vector3(0.0, -0.4, 1.3), 2);
		Tree* leftArm  = treeFact_.CreateTree( LeftArmCanap, Vector3(0.0, 0.4, 1.3), 3);
		//rightArm->SetBoundaryRadius(rightArm->GetBoundaryRadius() * 8 / 10 );
		//leftArm->SetBoundaryRadius(leftArm->GetBoundaryRadius() * 8 / 10 );
		res->AddTree(rightLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(leftLeg, matrices::Vector3(0,0,0), 0);
		res->AddTree(rightArm, matrices::Vector3(0,0,1.2), 1);
		res->AddTree(leftArm, matrices::Vector3(0,0,1.2), 1);
		/*rightLeg->LockTarget(rightLeg->GetTarget());
		leftLeg->LockTarget(leftLeg->GetTarget());*/

	//rightLeg->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), rightLeg->GetPosition() + Vector3( -0.3, 0, -1.6)));
		//leftLeg ->LockTarget(matrix4TimesVect3(res->ToWorldCoordinates(), leftLeg->GetPosition()  + Vector3( 0.3, 0, -1.4)));

		return res;
	}

	Robot* CreateHumanCrouch(const Matrix4& robotBasis) const
	{
		Robot* res = new Robot(robotBasis, treeFact_.CreateTree( HumanTorsoCrouch, Vector3(0.0, 0., 0), 4), manip_core::enums::robot::Human);
		Tree* rightLeg = treeFact_.CreateTree( RightLegCrouch, Vector3(0.1, -0.2, 0.), 0);
		Tree* leftLeg  = treeFact_.CreateTree( LeftLegCrouch, Vector3(0.1, 0.2 , 0.), 1);
		Tree* rightArm = treeFact_.CreateTree( RightArmCrouch, Vector3(1.3, -0.4, 0.), 2);
		Tree* leftArm  = treeFact_.CreateTree( LeftArmCrouch, Vector3(1.3, 0.4, 0.), 3);
		//rightArm->SetBoundaryRadius(rightArm->GetBoundaryRadius() * 8 / 10 );
		//leftArm->SetBoundaryRadius(leftArm->GetBoundaryRadius() * 8 / 10 );
		res->AddTree(rightLeg, matrices::Vector3(0,0,0), 0);
		res-",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GdFmLu
code,"// RUN: %clang_cc1 %s -triple=x86_64-apple-darwin10 -emit-llvm -o - | FileCheck %s

// CHECK: ; ModuleID
struct A {
  template<typename T>
  A(T);
};

template<typename T> A::A(T) {}

struct B {
  template<typename T>
  B(T);
};

template<typename T> B::B(T) {}

// CHECK: define void @_ZN1BC1IiEET_(%struct.B* %this, i32)
// CHECK: define void @_ZN1BC2IiEET_(%struct.B* %this, i32)
template B::B(int);

template<typename T>
struct C {
  void f() {
    int a[] = { 1, 2, 3 };
  }
};

void f(C<int>& c) {
  c.f();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",D4cigS
code,"// © 2016 and later: Unicode, Inc. and others.
// License & terms of use: http://www.unicode.org/copyright.html
//
//  file:  rbbirb.cpp
//
//  Copyright (C) 2002-2011, International Business Machines Corporation and others.
//  All Rights Reserved.
//
//  This file contains the RBBIRuleBuilder class implementation.  This is the main class for
//    building (compiling) break rules into the tables required by the runtime
//    RBBI engine.
//

#include ""unicode/utypes.h""

#if !UCONFIG_NO_BREAK_ITERATION

#include ""unicode/brkiter.h""
#include ""unicode/rbbi.h""
#include ""unicode/ubrk.h""
#include ""unicode/unistr.h""
#include ""unicode/uniset.h""
#include ""unicode/uchar.h""
#include ""unicode/uchriter.h""
#include ""unicode/parsepos.h""
#include ""unicode/parseerr.h""

#include ""cmemory.h""
#include ""cstring.h""
#include ""rbbirb.h""
#include ""rbbinode.h""
#include ""rbbiscan.h""
#include ""rbbisetb.h""
#include ""rbbitblb.h""
#include ""rbbidata.h""
#include ""uassert.h""


U_NAMESPACE_BEGIN


//----------------------------------------------------------------------------------------
//
//  Constructor.
//
//----------------------------------------------------------------------------------------
RBBIRuleBuilder::RBBIRuleBuilder(const UnicodeString   &rules,
                                       UParseError     *parseErr,
                                       UErrorCode      &status)
 : fRules(rules), fStrippedRules(rules)
{
    fStatus = &status; // status is checked below
    fParseError = parseErr;
    fDebugEnv   = NULL;
#ifdef RBBI_DEBUG
    fDebugEnv   = getenv(""U_RBBIDEBUG"");
#endif


    fForwardTree        = NULL;
    fReverseTree        = NULL;
    fSafeFwdTree        = NULL;
    fSafeRevTree        = NULL;
    fDefaultTree        = &fForwardTree;
    fForwardTable       = NULL;
    fRuleStatusVals     = NULL;
    fChainRules         = FALSE;
    fLBCMNoChain        = FALSE;
    fLookAheadHardBreak = FALSE;
    fUSetNodes          = NULL;
    fRuleStatusVals     = NULL;
    fScanner            = NULL;
    fSetBuilder         = NULL;
    if (parseErr) {
        uprv_memset(parseErr, 0, sizeof(UParseError));
    }

    if (U_FAILURE(status)) {
        return;
    }

    fUSetNodes          = new UVector(status); // bcos status gets overwritten here
    fRuleStatusVals     = new UVector(status);
    fScanner            = new RBBIRuleScanner(this);
    fSetBuilder         = new RBBISetBuilder(this);
    if (U_FAILURE(status)) {
        return;
    }
    if(fSetBuilder == 0 || fScanner == 0 || fUSetNodes == 0 || fRuleStatusVals == 0) {
        status = U_MEMORY_ALLOCATION_ERROR;
    }
}



//----------------------------------------------------------------------------------------
//
//  Destructor
//
//----------------------------------------------------------------------------------------
RBBIRuleBuilder::~RBBIRuleBuilder() {

    int        i;
    for (i=0; ; i++) {
        RBBINode *n = (RBBINode *)fUSetNodes->elementAt(i);
        if (n==NULL) {
            break;
        }
        delete n;
    }

    delete fUSetNodes;
    delete fSetBuilder;
    delete fForwardTable;
    delete fForwardTree;
    delete fReverseTree;
    delete fSafeFwdTree;
    delete fSafeRevTree;
    delete fScanner;
    delete fRuleStatusVals;
}





//----------------------------------------------------------------------------------------
//
//   flattenData() -  Collect up the compiled RBBI rule data and put it into
//                    the format for saving in ICU data files,
//                    which is also the format needed by the RBBI runtime engine.
//
//----------------------------------------------------------------------------------------
static int32_t align8(int32_t i) {return (i+7) & 0xfffffff8;}

RBBIDataHeader *RBBIRuleBuilder::flattenData() {
    int32_t    i;

    if (U_FAILURE(*fStatus)) {
        return NULL;
    }

    // Remove whitespace from the rules to make it smaller.
    // The rule parser has already removed comments.
    fStrippedRules = fScanner->stripRules(fStrippedRules);

    // Calculate the size of each section in the data.
    //   Sizes here are padded up to a multiple of 8 for better memory alignment.
    //   Sections sizes actually stored in the header are for the actual data
    //     without the padding.
    //
    int32_t headerSize        = align8(sizeof(RBBIDataHeader));
    int32_t forwardTableSize  = align8(fForwardTable->getTableSize());
    int32_t reverseTableSize  = align8(fForwardTable->getSafeTableSize());
    int32_t trieSize          = align8(fSetBuilder->getTrieSize());
    int32_t statusTableSize   = align8(fRuleStatusVals->size() * sizeof(int32_t));
    int32_t rulesSize         = align8((fStrippedRules.length()+1) * sizeof(UChar));

    int32_t         totalSize = headerSize
                                + forwardTableSize
                                + reverseTableSize
                                + statusTableSize + trieSize + rulesSize;

    RBBIDataHeader  *data     = (RBBIDataHeader *)uprv_malloc(totalSize);
    if (data == NULL) {
        *fStatus = U_MEMORY_ALLOCATION_ERROR;
        return NULL;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_WgQTc
code,"#include <QDebug>

#include <net/if.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/ioctl.h>

#include ""monitor.h""

Monitor::Monitor()
{
	running = 0;
}

void Monitor::start()
{
	int rc;
	int s;
	fd_set rdfs;
	int nbytes;
	struct sockaddr_can addr;
	struct canfd_frame frame;
	struct iovec iov;
	char ctrlmsg[CMSG_SPACE(sizeof(struct timeval)) + CMSG_SPACE(sizeof(__u32))];
	struct msghdr msg;
	struct ifreq ifr;
	char* ifname = ""can0"";

	running = 1;

	s = socket(PF_CAN, SOCK_RAW, CAN_RAW);
	if (s < 0)
	{
		qDebug() << ""Error opening socket: "" << s;
		stop();
		return;
	}

	strcpy(ifr.ifr_name, ifname);
	ioctl(s, SIOCGIFINDEX, &ifr);

	addr.can_family = AF_CAN;
	addr.can_ifindex = ifr.ifr_ifindex;

	rc = bind(s, (struct sockaddr*)&addr, sizeof(addr));
	if (rc < 0)
	{
		qDebug() << ""Error binding to interface: "" << rc;
		stop();
		return;
	}

	iov.iov_base = &frame;
	msg.msg_name = &addr;
	msg.msg_iov = &iov;
	msg.msg_iovlen = 1;
	msg.msg_control = &ctrlmsg;

	while (running)
	{
		FD_ZERO(&rdfs);
		FD_SET(s, &rdfs);
		rc = select(s, &rdfs, NULL, NULL, NULL);
		if (rc < 0)
		{
			qDebug() << ""Error calling select"" << rc;
			stop();
			continue;
		}

		if (FD_ISSET(s, &rdfs))
		{
			int maxdlen;

			// These can apparently get changed, so set before each read
			iov.iov_len = sizeof(frame);
			msg.msg_namelen = sizeof(addr);
			msg.msg_controllen = sizeof(ctrlmsg);
			msg.msg_flags = 0;

			nbytes = recvmsg(s, &msg, 0);
			if (nbytes < 0)
			{
				qDebug() << ""Error calling recvmsg : "" << nbytes;
				stop();
				continue;
			}

			if ((size_t)nbytes == CAN_MTU)
				maxdlen = CAN_MAX_DLEN;
			else if ((size_t)nbytes == CANFD_MTU)
				maxdlen = CANFD_MAX_DLEN;
			else
			{
				qDebug() << ""Warning: read incomplete CAN frame : "" << nbytes;
				continue;
			}
			// TODO get timestamp from message

			sendMsg(&frame, maxdlen);
		}
	}
}

void Monitor::stop()
{
	running = 0;
}

void Monitor::sendMsg(struct canfd_frame *frame, int maxdlen)
{
	canMessage msg;
	char buf[200];
	int pBuf = 0;
	int i;
	int len = (frame->len > maxdlen) ? maxdlen : frame->len;

	msg.interface = 1; // TODO set in constructor at some point
	msg.identifier = QString(""%1:%03X"")
						.arg(msg.interface)
						.arg(frame->can_id & CAN_SFF_MASK);
	msg.time = QTime::currentTime();

	pBuf += sprintf(buf + pBuf, ""[%d]"", frame->len);
	if (frame->can_id & CAN_RTR_FLAG)
	{
		pBuf += sprintf(buf + pBuf, "" remote request"");
		emit messageInBuffer(&msg);
		return;
	}
	for (i = 0; i < len; i++)
	{
		pBuf += sprintf(buf + pBuf, "" [%02X]"", frame->data[i]);
	}
	msg.content = QString(""%1"").arg(buf);

	emit messageInBuffer(&msg);
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SmIGsy
code,"/****************************************************************************
 *
 * $Id: vpHinkley.cpp 4056 2013-01-05 13:04:42Z fspindle $
 *
 * This file is part of the ViSP software.
 * Copyright (C) 2005 - 2013 by INRIA. All rights reserved.
 * 
 * This software is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * (""GPL"") version 2 as published by the Free Software Foundation.
 * See the file LICENSE.txt at the root directory of this source
 * distribution for additional information about the GNU GPL.
 *
 * For using ViSP with software that can not be combined with the GNU
 * GPL, please contact INRIA about acquiring a ViSP Professional 
 * Edition License.
 *
 * See http://www.irisa.fr/lagadic/visp/visp.html for more information.
 * 
 * This software was developed at:
 * INRIA Rennes - Bretagne Atlantique
 * Campus Universitaire de Beaulieu
 * 35042 Rennes Cedex
 * France
 * http://www.irisa.fr/lagadic
 *
 * If you have questions regarding the use of this file, please contact
 * INRIA at visp@inria.fr
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 *
 * Description:
 * Hinkley's cumulative sum test implementation.
 *
 * Authors:
 * Fabien Spindler
 *
 *****************************************************************************/

/*!

  \file vpHinkley.cpp

  \brief Definition of the vpHinkley class corresponding to the Hinkley's
  cumulative sum test.

*/

#include <visp/vpHinkley.h>
#include <visp/vpDebug.h>
#include <visp/vpIoTools.h>
#include <visp/vpMath.h>

#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <cmath>    // std::fabs
#include <limits>   // numeric_limits

/* VP_DEBUG_MODE fixed by configure:
   1:
   2:
   3: Print data
*/


/*!

  Constructor.

  Call init() to initialise the Hinkley's test and set \f$\alpha\f$
  and \f$\delta\f$ to default values.

  By default \f$ \delta = 0.2 \f$ and \f$ \alpha = 0.2\f$. Use
  setDelta() and setAlpha() to modify these values.

*/
vpHinkley::vpHinkley()
{
  init();

  setAlpha(0.2);
  setDelta(0.2);
}

/*!

  Constructor.

  Call init() to initialise the Hinkley's test and set \f$\alpha\f$
  and \f$\delta\f$ thresholds.

  \param alpha : \f$\alpha\f$ is a predefined threshold.

  \param delta : \f$\delta\f$ denotes the jump minimal magnitude that
  we want to detect.

  \sa setAlpha(), setDelta()

*/

vpHinkley::vpHinkley(double alpha, double delta)
{
  init();

  setAlpha(alpha);
  setDelta(delta);
}

/*!

  Call init() to initialise the Hinkley's test and set \f$\alpha\f$
  and \f$\delta\f$ thresholds.

  \param alpha : \f$\alpha\f$ is a predefined threshold.

  \param delta : \f$\delta\f$ denotes the jump minimal magnitude that
  we want to detect.

  \sa setAlpha(), setDelta()

*/
void
vpHinkley::init(double alpha, double delta)
{
  init();

  setAlpha(alpha);
  setDelta(delta);
}

/*!

  Destructor.

*/
vpHinkley::~vpHinkley()
{
}

/*!

  Initialise the Hinkley's test by setting the mean signal value
  \f$m_0\f$ to zero as well as \f$S_k, M_k, T_k, N_k\f$.

*/
void vpHinkley::init()
{
  nsignal = 0;
  mean  = 0.0;

  Sk = 0;
  Mk = 0;

  Tk = 0;
  Nk = 0;
}

/*!

  Set the value of \f$\delta\f$, the jump minimal magnetude that we want to
  detect.

  \sa setAlpha()

*/
void vpHinkley::setDelta(double delta)
{
  dmin2 = delta / 2;
}

/*!

  Set the value of \f$\alpha\f$, a predefined threshold.

  \sa setDelta()

*/
void vpHinkley::setAlpha(double alpha)
{
  this->alpha = alpha;
}

/*!

  Perform the Hinkley test. A downward jump is detected if
  \f$ M_k - S_k > \alpha \f$.

  \param signal : Observed signal \f$ s(t) \f$.

  \sa setDelta(), setAlpha(), testUpwardJump()

*/
vpHinkley::vpHinkleyJumpType vpHinkley::testDownwardJump(double signal)
{

  vpHinkleyJumpType jump = noJump;

  nsignal ++; // Signal length

  if (nsignal == 1) mean = signal;

  // Calcul des variables cumulées
  computeSk(signal);

  computeMk();

  vpCDEBUG(2) << ""alpha: "" << alpha << "" dmin2: "" << dmin2
	    << "" signal: "" << signal << "" Sk: "" << Sk << "" Mk: "" << Mk;

  // teste si les variables cumulées excèdent le seuil
  if ((Mk - Sk) > alpha)
    jump = downwardJump;

#ifdef VP_DEBUG
  if (VP_DEBUG_MODE >=2) {
    switch(jump) {
    case noJump:
      std::cout << ""noJump "" << std::endl;
     break;
    case downwardJump:
      std::cout << ""downWardJump "" << std::endl;
      break;
    case upwardJump:
      std::cout << ""upwardJump "" << std::endl;
      break;
    }
  }
#endif

  computeMean(signal);

  if (jump == downwardJump)  {
    vpCDEBUG(2) << ""\n*** Reset the Hinkley test  ***\n"";

    Sk = 0; Mk = 0;  nsignal = 0;
  }

  return (jump);
}

/*!

  Perform the Hinkley test. An upward jump is detected if \f$ T_k - N_k >
  \alpha \f$.

  \param signal : Observed signal \f$ s(t) \f$.

  \sa setDelta(), setAlpha(), testDownwardJump()

*/
vpHinkley::vpHinkleyJumpType vpHinkley::testUpwardJump(double signal)
{

  vpHinkleyJumpType jump = noJump;

  nsignal ++; // Signal length

  if (nsignal ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jGN5Ty
code,"/*
MobileRobots Advanced Robotics Interface for Applications (ARIA)
Copyright (C) 2004, 2005 ActivMedia Robotics LLC
Copyright (C) 2006, 2007, 2008, 2009 MobileRobots Inc.
Copyright (C) 2010, 2011 Adept Technology, Inc.

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

If you wish to redistribute ARIA under different terms, contact 
Adept MobileRobots for information about a commercial version of ARIA at 
robots@mobilerobots.com or 
Adept MobileRobots, 10 Columbia Drive, Amherst, NH 03031; 800-639-9481
*/
#include ""Aria.h""
#include ""ArExport.h""
#include ""ArServerModeRatioDrive.h""
#include ""ArServerHandlerCommands.h""

AREXPORT ArServerModeRatioDrive::ArServerModeRatioDrive(
	ArServerBase *server, ArRobot *robot, bool takeControlOnJoystick,
	bool useComputerJoystick, bool useRobotJoystick, 
	bool useServerCommands, const char *name,
	bool robotJoystickOverridesLocks) : 
  ArServerMode(robot, server, name),
  myRatioDriveGroup(robot),
  myJoyUserTaskCB(this, &ArServerModeRatioDrive::joyUserTask),
  myServerSetSafeDriveCB(this, 
			 &ArServerModeRatioDrive::serverSetSafeDrive),
  myServerGetSafeDriveCB(this, 
			 &ArServerModeRatioDrive::serverGetSafeDrive),
  myServerRatioDriveCB(this, &ArServerModeRatioDrive::serverRatioDrive),
  myRatioFireCB(this, &ArServerModeRatioDrive::ratioFireCallback),
  myServerSafeDrivingEnableCB(this, 
			     &ArServerModeRatioDrive::serverSafeDrivingEnable),
  myServerSafeDrivingDisableCB(this, 
			     &ArServerModeRatioDrive::serverSafeDrivingDisable)
{
  myHandlerCommands = NULL;
  myDriveSafely = true;
  myTakeControlOnJoystick = takeControlOnJoystick;
  myUseComputerJoystick = useComputerJoystick;
  myUseRobotJoystick = useRobotJoystick;
  myUseServerCommands = useServerCommands;
  myUseLocationDependentDevices = true;
  myRobotJoystickOverridesLock = robotJoystickOverridesLocks;
  myTimeout = 2;
  myGotServerCommand = true;

  myLastTimedOut = false;
  
  // SEEKUR
  mySentRecenter = false;

  // add the actions, put the ratio input on top, then have the
  // limiters since the ratio doesn't touch decel except lightly
  // whereas the limiter will touch it strongly

  myRatioAction = new ArActionRatioInput;
  myRatioDriveGroup.addAction(myRatioAction, 50);

  myLimiterForward = new ArActionDeceleratingLimiter(
	  ""DeceleratingLimiterForward"", ArActionDeceleratingLimiter::FORWARDS);
  myRatioDriveGroup.addAction(myLimiterForward, 40);

  myLimiterBackward = new ArActionDeceleratingLimiter(
	  ""DeceleratingLimiterBackward"", 
	  ArActionDeceleratingLimiter::BACKWARDS);
  myRatioDriveGroup.addAction(myLimiterBackward, 39);

  myLimiterLateralLeft = NULL;
  myLimiterLateralRight = NULL;
  if (myRobot->hasLatVel())
  {
    myLimiterLateralLeft = new ArActionDeceleratingLimiter(
	    ""DeceleratingLimiterLateralLeft"", 
	    ArActionDeceleratingLimiter::LATERAL_LEFT);
    myRatioDriveGroup.addAction(myLimiterLateralLeft, 38);
    myLimiterLateralRight = new ArActionDeceleratingLimiter(
	    ""DeceleratingLimiterLateralRight"", 
	    ArActionDeceleratingLimiter::LATERAL_RIGHT);
    myRatioDriveGroup.addAction(myLimiterLateralRight, 37);
  }

  myMovementParameters = new ArActionMovementParameters(""TeleopMovementParameters"", false);
  myRatioDriveGroup.addAction(myMovementParameters, 1);

  myRatioFireCB.setName(""ArServerModeRatioDrive"");
  myRatioAction->addFireCallback(30, &myRatioFireCB);
  
  myLastRobotSafeDrive = true;
  
  if (myServer != NULL && myUseServerCommands)
  {
    addModeData(""ratioDrive"", ""drives the robot as with a joystick"",
		&myServerRatioDriveCB,
		""double: transRatio; double: rotRatio; double: throttleRatio "",
		""none"", ""Movement"", ""RETURN_NONE"");
    myServer->addData(""setSafeDrive"", 
		      ""sets whether we drive the robot safely or not"",
		      &myServerSetSafeDriveCB,
		      ""byte: 1 == drive safely, 0 == drive unsafely"",
		      ""none"", ""UnsafeMovement"", ""RETURN_NONE"");
    myServer->addData(""getSafeDrive"", 
		      ""gets whether we drive the robot safely or not"",
		      &myServerGetSafeDriveCB,
		      ""none"", 
		      ""byte: 1 == driving safely, 0 == driving unsafely"", 
		      ""Movement"", ""RETURN_SINGLE"");
  }

  if (myUseComputerJoystick)
  {
    myJoydrive = new ArRatioInputJoydrive(robot, myRatioAction);
    if ((myJoyHandler = Aria::getJoyHandler()) == NULL)
    {
      myJoyHandler = new ArJoyHandler;
      myJoyHandler->init();
      Aria::setJoyHandler(myJoyHandler);
    }
  }
  if (myUseRob",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EgyHHz
code,"/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                                                         *
 *  This file is part of guh.                                              *
 *                                                                         *
 *  Guh is free software: you can redistribute it and/or modify            *
 *  it under the terms of the GNU General Public License as published by   *
 *  the Free Software Foundation, version 2 of the License.                *
 *                                                                         *
 *  Guh is distributed in the hope that it will be useful,                 *
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
 *  GNU General Public License for more details.                           *
 *                                                                         *
 *  You should have received a copy of the GNU General Public License      *
 *  along with guh. If not, see <http://www.gnu.org/licenses/>.            *
 *                                                                         *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/*!
    \page openweathermap.html
    \title Open Weather Map

    \ingroup plugins
    \ingroup services

    This plugin alows you to get the current weather data from \l{http://www.openweathermap.org}.
    The plugin offers two different search methods: if the user searches for a empty string,
    the plugin makes an autodetction with the WAN ip and offers the user the found autodetectresult.
    Otherwise the plugin return the list with the found searchresults.

    \section1 Examples
    \section2 Autodetect location
    If you want to autodetect your location dend a discovery request with an empty string.
    \code
    {
        ""id"":1,
        ""method"":""Devices.GetDiscoveredDevices"",
        ""params"":{
            ""deviceClassId"":""985195aa-17ad-4530-88a4-cdd753d747d7"",
            ""discoveryParams"": {
                ""location"":""""
            }
        }
    }
    \endcode
    response from autodetection...
    \code
    {
        ""id"": 1,
        ""params"": {
            ""deviceDescriptors"": [
                {
                    ""description"": ""AT"",
                    ""id"": ""{75607672-5354-428f-a752-910140c22b18}"",
                    ""title"": ""Vienna""
                }
            ],
            ""errorMessage"": """",
            ""success"": true
        },
        ""status"": ""success""
    }
    \endcode
    \section2 Searching city
    If you want to search a string send following discovery message:
    \code
    {
        ""id"":1,
        ""method"":""Devices.GetDiscoveredDevices"",
        ""params"":{
            ""deviceClassId"":""985195aa-17ad-4530-88a4-cdd753d747d7"",
            ""discoveryParams"": {
                ""location"":""Vie""
            }
        }
    }
    \endcode
    response...
    \code
    {
        ""id"": 1,
        ""params"": {
            ""deviceDescriptors"": [
                {
                    ""description"": ""DE"",
                    ""id"": ""{6dc6be43-5bdc-4dbd-bcbf-6f8e1f90000b}"",
                    ""title"": ""Viersen""
                },
                {
                    ""description"": ""VN"",
                    ""id"": ""{af275298-77f1-40b4-843a-d0f3c7aef6bb}"",
                    ""title"": ""Viet Tri""
                },
                {
                    ""description"": ""DE"",
                    ""id"": ""{86a4ab63-41b4-4348-9830-4bf6c87474bf}"",
                    ""title"": ""Viernheim""
                },
                {
                    ""description"": ""AR"",
                    ""id"": ""{3b5f8eea-6159-4375-bd01-1f07de9c3a9d}"",
                    ""title"": ""Viedma""
                },
                {
                    ""description"": ""FR"",
                    ""id"": ""{f3b91f26-3275-4bb4-a594-924202a2124e}"",
                    ""title"": ""Vierzon""
                },
                {
                    ""description"": ""AT"",
                    ""id"": ""{b59d15f7-f52b-43a0-a9c5-a3fa80cbc2bd}"",
                    ""title"": ""Vienna""
                }
            ],
            ""errorMessage"": """",
            ""success"": true
        },
        ""status"": ""success""
    }
    \endcode
    \section2 Adding a discovered city
    If you want to add a dicovered city send the add ""AddConfiguredDevice"" message
    with the deviceDescriptorId from the searchresult list. In this example the id for Vienna.
    \code
    {
        ""id"":1,
        ""method"":""Devices.AddConfiguredDevice"",
        ""params"":{
            ""deviceClassId"":""985195aa-17ad-4530-88a4-cdd753d747d7"",
            ""deviceDescriptorId"": ""b59d15f7-f52b-43a0-a9c5-a3fa80cbc2bd""
        }
    }
    \endcode
    response...
    \code
    {
        ""id"": 1,
        ""params"": {
            ""deviceId"": ""{af0f1958-b901-48da-ad97-d4d64af88cf8}"",
            ""errorMessage"": """",
            ""success"": true
        },
        ""status"": ""success""
    }
    \endcode

    \section1 P",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Jakek4
code,"// Copyright (c) 2016- PPSSPP Project.

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, version 2.0 or later versions.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License 2.0 for more details.

// A copy of the GPL 2.0 should have been included with the program.
// If not, see http://www.gnu.org/licenses/

// Official git repository and contact information can be found at
// https://github.com/hrydgard/ppsspp and http://www.ppsspp.org/.

#include ""base/basictypes.h""
#include ""Common/Log.h""
#include ""Common/Vulkan/VulkanContext.h""
#include ""GPU/Vulkan/VulkanUtil.h""

Vulkan2D::Vulkan2D(VulkanContext *vulkan) : vulkan_(vulkan) {
	InitDeviceObjects();
}

Vulkan2D::~Vulkan2D() {
	DestroyDeviceObjects();
}

void Vulkan2D::Shutdown() {
	DestroyDeviceObjects();
}

void Vulkan2D::DestroyDeviceObjects() {
	for (int i = 0; i < vulkan_->GetInflightFrames(); i++) {
		if (frameData_[i].descPool != VK_NULL_HANDLE) {
			vulkan_->Delete().QueueDeleteDescriptorPool(frameData_[i].descPool);
			frameData_[i].descPool = VK_NULL_HANDLE;
		}
	}
	for (auto it : pipelines_) {
		vulkan_->Delete().QueueDeletePipeline(it.second);
	}
	pipelines_.clear();

	VkDevice device = vulkan_->GetDevice();
	if (descriptorSetLayout_ != VK_NULL_HANDLE) {
		vkDestroyDescriptorSetLayout(device, descriptorSetLayout_, nullptr);
		descriptorSetLayout_ = VK_NULL_HANDLE;
	}
	if (pipelineLayout_ != VK_NULL_HANDLE) {
		vkDestroyPipelineLayout(device, pipelineLayout_, nullptr);
		pipelineLayout_ = VK_NULL_HANDLE;
	}

	// pipelineBasicTex_ and pipelineBasicTex_ come from vulkan2D_.
	if (pipelineCache_ != VK_NULL_HANDLE) {
		vulkan_->Delete().QueueDeletePipelineCache(pipelineCache_);
		pipelineCache_ = VK_NULL_HANDLE;
	}
}

void Vulkan2D::InitDeviceObjects() {
	pipelineCache_ = vulkan_->CreatePipelineCache();
	// All resources we need for PSP drawing. Usually only bindings 0 and 2-4 are populated.
	VkDescriptorSetLayoutBinding bindings[2] = {};
	bindings[0].descriptorCount = 1;
	bindings[0].descriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;
	bindings[0].stageFlags = VK_SHADER_STAGE_FRAGMENT_BIT;
	bindings[0].binding = 0;
	bindings[1].descriptorCount = 1;
	bindings[1].descriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;
	bindings[1].stageFlags = VK_SHADER_STAGE_FRAGMENT_BIT;
	bindings[1].binding = 1;

	VkDevice device = vulkan_->GetDevice();

	VkDescriptorSetLayoutCreateInfo dsl = { VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO };
	dsl.bindingCount = 2;
	dsl.pBindings = bindings;
	VkResult res = vkCreateDescriptorSetLayout(device, &dsl, nullptr, &descriptorSetLayout_);
	assert(VK_SUCCESS == res);

	VkDescriptorPoolSize dpTypes[1];
	dpTypes[0].descriptorCount = 3000;
	dpTypes[0].type = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;

	VkDescriptorPoolCreateInfo dp = { VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO };
	dp.flags = 0;   // Don't want to mess around with individually freeing these, let's go fixed each frame and zap the whole array. Might try the dynamic approach later.
	dp.maxSets = 3000;
	dp.pPoolSizes = dpTypes;
	dp.poolSizeCount = ARRAY_SIZE(dpTypes);
	for (int i = 0; i < ARRAY_SIZE(frameData_); i++) {
		VkResult res = vkCreateDescriptorPool(vulkan_->GetDevice(), &dp, nullptr, &frameData_[i].descPool);
		assert(VK_SUCCESS == res);
	}

	VkPushConstantRange push = {};
	push.offset = 0;
	push.size = 16;
	push.stageFlags = VK_SHADER_STAGE_FRAGMENT_BIT;

	VkPipelineLayoutCreateInfo pl = { VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO };
	pl.pPushConstantRanges = &push;
	pl.pushConstantRangeCount = 1;
	pl.setLayoutCount = 1;
	pl.pSetLayouts = &descriptorSetLayout_;
	pl.flags = 0;
	res = vkCreatePipelineLayout(device, &pl, nullptr, &pipelineLayout_);
	assert(VK_SUCCESS == res);
}

void Vulkan2D::DeviceLost() {
	DestroyDeviceObjects();
}

void Vulkan2D::DeviceRestore(VulkanContext *vulkan) {
	vulkan_ = vulkan;
	InitDeviceObjects();
}

void Vulkan2D::BeginFrame() {
	int curFrame = vulkan_->GetCurFrame();
	FrameData &frame = frameData_[curFrame];
	frame.descSets.clear();
	vkResetDescriptorPool(vulkan_->GetDevice(), frame.descPool, 0);
}

void Vulkan2D::EndFrame() {
}

VkDescriptorSet Vulkan2D::GetDescriptorSet(VkImageView tex1, VkSampler sampler1, VkImageView tex2, VkSampler sampler2) {
	DescriptorSetKey key;
	key.imageView[0] = tex1;
	key.imageView[1] = tex2;
	key.sampler[0] = sampler1;
	key.sampler[1] = sampler2;

	int curFrame = vulkan_->GetCurFrame();
	FrameData *frame = &frameData_[curFrame];
	auto iter = frame->descSets.find(key);
	if (iter != frame->descSets.end()) {
		return iter->second;
	}

	// Didn't find one in the frame descriptor set cache, let's make a new one.
	// We wipe the cache on every frame.

	VkDescriptorSet desc;
	VkDescriptorSetAllocateInfo descAlloc = { VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO };
	descAlloc.pSetLayouts = &desc",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4nIVtZ
code,"/*
 * AudioCore.c: Implements the JNi interface and handles
 *
 * (C) Copyright 2015 Simon Grätzer
 * Email: simon@graetzer.org
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; version 2
 * of the License.
 */

#include ""de_rwth_aachen_comsys_audiosync_AudioCore.h""
#include <android/log.h>
#include <android/asset_manager.h>
#include <android/asset_manager_jni.h>
#include <signal.h>
#include <assert.h>
#include ""audioplayer.h""
#include ""AudioStreamSession.h""
#include ""SenderSession.h""
#include ""ReceiverSession.h""
#include ""decoder.h""

#include ""jrtplib/rtpsourcedata.h""

#define debugLog(...) __android_log_print(ANDROID_LOG_DEBUG, ""AudioCore"", __VA_ARGS__)
//#define debugLog(...) printf(__VA_ARGS__)

#ifdef RTP_SUPPORT_THREAD

void thread_exit_handler(int sig) {
    debugLog(""this signal is %d \n"", sig);
    pthread_exit(0);
}

#endif

// Global audiostream manager
AudioStreamSession *audioSession;

void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_initAudio(JNIEnv *env, jobject thiz,
                                                               jint samplesPerSec,
                                                               jint framesPerBuffer) {
    audioplayer_initGlobal((uint32_t) samplesPerSec, (uint32_t) framesPerBuffer);

#ifdef RTP_SUPPORT_THREAD
    // Workaround to kill threads since pthread_cancel is not supported
    // See jthread.cpp
    struct sigaction actions;
    memset(&actions, 0, sizeof(actions));
    sigemptyset(&actions.sa_mask);
    actions.sa_flags = 0;
    actions.sa_handler = thread_exit_handler;
    sigaction(SIGUSR1, &actions, NULL);
#endif
}

void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_deinitAudio(JNIEnv *env, jobject thiz) {
    if (audioSession) audioSession->Stop();
    if (audioSession) delete audioSession;
    audioplayer_cleanup();
}


void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_startStreamingAsset (JNIEnv *env, jobject thiz,
                                                                    jint portbase,
                                                                    jobject assetManager,
                                                                    jstring jPath) {

    AAssetManager *mgr = AAssetManager_fromJava(env, assetManager);
    const char *path = env->GetStringUTFChars(jPath, 0);
    // Open the asset from the assets/ folder
    AAsset *asset = AAssetManager_open(mgr, path, AASSET_MODE_UNKNOWN);
    env->ReleaseStringUTFChars(jPath, path);
    if (NULL == asset) {
        debugLog(""_ASSET_NOT_FOUND_"");
        return;
    }

    off_t outStart, fileSize;
    int fd = AAsset_openFileDescriptor(asset, &outStart, &fileSize);
    assert(0 <= fd);

    debugLog(""Audio file offset: %ld, size: %ld"", outStart, fileSize);
    AMediaExtractor *extr = decoder_createExtractorFromFd(fd, outStart, fileSize);
    audioSession = SenderSession::StartStreaming((uint16_t) portbase, extr);

    AAsset_close(asset);
}

void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_startStreamingUri
        (JNIEnv *env, jobject thiz, jint portbase, jstring jPath) {

    const char *path = env->GetStringUTFChars(jPath, 0);
    AMediaExtractor *extr = decoder_createExtractorFromUri(path);
    env->ReleaseStringUTFChars(jPath, path);
    audioSession = SenderSession::StartStreaming((uint16_t) portbase, extr);
}

/*
 * Class:     de_rwth_aachen_comsys_audiosync_AudioCore
 * Method:    startReceiving
 * Signature: (Ljava/lang/String;I)V
 */
void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_startReceiving(JNIEnv *env, jobject thiz,
                                                                    jstring jHost, jint portbase) {
    const char *host = env->GetStringUTFChars(jHost, 0);
    audioSession = ReceiverSession::StartReceiving(host, (uint16_t) portbase);
    env->ReleaseStringUTFChars(jHost, host);
}

/*
 * Class:     de_rwth_aachen_comsys_audiosync_AudioCore
 * Method:    stop
 * Signature: ()V
 */
void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_stopServices(JNIEnv *env, jobject thiz) {
    if (audioSession) audioSession->Stop();
    audioplayer_stopPlayback();
}

void Java_de_rwth_1aachen_comsys_audiosync_AudioCore_setDeviceLatency(JNIEnv *env, jobject thiz,  jlong latencyMs) {
    if (latencyMs >= 0)
        audioplayer_setDeviceLatency((int64_t)latencyMs * 1000);
}

/*
 * Class:     de_rwth_aachen_comsys_audiosync_AudioCore
 * Method:    getRtpSourceCount
 * Signature: ()I
 */
jobjectArray Java_de_rwth_1aachen_comsys_audiosync_AudioCore_getAudioDestinations
        (JNIEnv *env, jobject thiz) {
    if (audioSession == NULL) return NULL;
    int i = 0;
    if (audioSession->GotoFirstSource())
        do {
            jrtplib::RTPSourceData *source = audioSession->GetCurrentSourceInfo();
            if (source == nullptr || source->IsOwnSSRC()) continue;
            i++;
        } while (audioSession->GotoNextSource());
    if (i == 0) return NULL;

    jclass clzz = env->FindClass(""de/rwth_aachen/comsys/audiosync/AudioDestination"");",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",be41GB
code,"INTERFACE:

#include ""initcalls.h""
#include ""types.h""

class Jdb_symbol_info;
class Jdb_lines_info;

class Jdb_dbinfo
{
};


//---------------------------------------------------------------------------
IMPLEMENTATION:

#include ""config.h""

// We have to do this here because Jdb_symbol and Jdb_lines must not depend
// on Kmem_alloc.
PRIVATE static inline NOEXPORT
void
Jdb_dbinfo::init_symbols_lines ()
{
  Mword p;

  p = (sizeof(Jdb_symbol_info)*Jdb_symbol::Max_tasks) >> Config::PAGE_SHIFT;
  Jdb_symbol::init(Kmem_alloc::allocator()
      ->unaligned_alloc(p*Config::PAGE_SIZE), p);
  p = (sizeof(Jdb_lines_info) *Jdb_lines::Max_tasks)  >> Config::PAGE_SHIFT;
  Jdb_lines::init(Kmem_alloc::allocator()
      ->unaligned_alloc(p*Config::PAGE_SIZE), p);
}


//---------------------------------------------------------------------------
IMPLEMENTATION[ia32,amd64]:

#include ""cpu_lock.h""
#include ""jdb_lines.h""
#include ""jdb_symbol.h""
#include ""kmem.h""
#include ""kmem_alloc.h""
#include ""mem_layout.h""
#include ""mem_unit.h""
#include ""paging.h""
#include ""space.h""
#include ""static_init.h""

const Address  area_start  = Mem_layout::Jdb_debug_start;
const Address  area_end    = Mem_layout::Jdb_debug_end;
const unsigned area_size   = area_end - area_start;
const unsigned bitmap_size = (area_size / Config::PAGE_SIZE) / 8;

// We don't use the amm library here anymore since it is nearly impossible
// to debug it and I got some strange behavior. Instead of this we use a
// simple bitfield here that takes 2k for a virtual memory size of 64MB
// which is enough for the Jdb debug info. Speed for allocating/deallocating
// pages is not an issue here.
static unsigned char bitmap[bitmap_size];

STATIC_INITIALIZE(Jdb_dbinfo);

//---------------------------------------------------------------------------
IMPLEMENTATION[ia32, amd64]:

PUBLIC static FIASCO_INIT
void
Jdb_dbinfo::init()
{
  Address addr;

  for (addr = area_start; addr < area_end; addr += Config::SUPERPAGE_SIZE)
    Kmem::kdir->walk(Virt_addr(addr), 100, pdir_alloc(Kmem_alloc::allocator()));

  init_symbols_lines();
}


PRIVATE static
Address
Jdb_dbinfo::reserve_pages(unsigned pages)
{
  auto guard = lock_guard(cpu_lock);

  Unsigned8 *ptr, bit;

  for (ptr=bitmap, bit=0; ptr<bitmap+bitmap_size;)
    {
      Unsigned8 *ptr1, bit1, c;
      unsigned pages1;

      for (ptr1=ptr, bit1=bit, pages1=pages;;)
	{
	  if (ptr1>=bitmap+bitmap_size)
	    return 0;

	  c = *ptr1 & (1<<bit1);

	  if (++bit1 >= 8)
	    {
    	      bit1 = 0;
	      ptr1++;
	    }

	  if (c)
	    {
	      ptr = ptr1;
	      bit = bit1;
	      break;
	    }

	  if (!--pages1)
	    {
	      // found area -- make it as reserved
	      for (ptr1=ptr, bit1=bit, pages1=pages; pages1>0; pages1--)
		{
		  *ptr1 |= (1<<bit1);
		  if (++bit1 >= 8)
		    {
		      bit1 = 0;
		      ptr1++;
		    }
		}
	      return area_start + Config::PAGE_SIZE * (8*(ptr-bitmap) + bit);
	    }
	}
    }

  return 0;
}

PRIVATE static
void
Jdb_dbinfo::return_pages(Address addr, unsigned pages)
{
  auto guard = lock_guard(cpu_lock);

  unsigned nr_page = (addr-area_start) / Config::PAGE_SIZE;
  Unsigned8 *ptr = bitmap + nr_page/8, bit = nr_page % 8;

  for (; pages && ptr < bitmap+bitmap_size; pages--)
    {
      assert (*ptr & (1<<bit));
      *ptr &= ~(1<<bit);
      if (++bit >= 8)
	{
	  bit = 0;
	  ptr++;
	}
    }
}

//---------------------------------------------------------------------------
IMPLEMENTATION[ia32, amd64]:

PUBLIC static
bool
Jdb_dbinfo::map(Address phys, size_t &size, Address &virt)
{
  Address offs  = phys & ~Config::PAGE_MASK;

  size = (offs + size + Config::PAGE_SIZE - 1) & Config::PAGE_MASK;
  virt = reserve_pages (size / Config::PAGE_SIZE);
  if (!virt)
    return false;

  phys &= Config::PAGE_MASK;

  Kmem::kdir->map(phys, Virt_addr(virt), Virt_size(size),
      Pt_entry::Valid | Pt_entry::Writable | Pt_entry::Referenced
      | Pt_entry::Dirty, 100, Ptab::Null_alloc());

  virt += offs;
  return true;
}

PUBLIC static
void
Jdb_dbinfo::unmap(Address virt, size_t size)
{
  if (virt && size)
    {
      virt &= Config::PAGE_MASK;

      Kmem::kdir->unmap(Virt_addr(virt), Virt_size(size), 100);
      Mem_unit::tlb_flush ();

      return_pages(virt, size/Config::PAGE_SIZE);
    }
}

PUBLIC static
void
Jdb_dbinfo::set(Jdb_symbol_info *sym, Address phys, size_t size)
{
  Address virt;

  if (!sym)
    return;

  if (!phys)
    {
      sym->get (virt, size);
      if (! virt)
	return;

      unmap (virt, size);
      sym->reset ();
      return;
    }

  if (! map (phys, size, virt))
    return;

  if (! sym->set (virt, size))
    {
      unmap (virt, size);
      sym->reset ();
    }
}

PUBLIC static
void
Jdb_dbinfo::set(Jdb_lines_info *lin, Address phys, size_t size)
{
  Address virt;

  if (!lin)
    return;

  if (!phys)
    {
      lin->get(virt, size);
      if (! virt)
	return;

      unmap(virt, size);
      lin->reset ();
    }

  if (!map(phys, size, virt))
    return;

  if (!lin->set(virt, size))
    {
      unmap(virt, size);
      lin->reset();
    }
}


//------------------------------------------------------------",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",K00so6
code,"
#include ""logging.hpp""
#include <fstream>
#include <boost/log/sinks/text_file_backend.hpp>
#include <boost/log/utility/setup/file.hpp>
#include <boost/log/utility/setup/common_attributes.hpp>
#include <boost/log/sinks.hpp>

namespace p2l { namespace common {

    //=====================================================================

    void _init_logging()
    {
      boost::log::add_common_attributes();
      boost::log::core::get()->set_filter
	(
	 boost::log::trivial::severity >= boost::log::trivial::trace
	 );
   
      typedef boost::log::sinks::synchronous_sink< boost::log::sinks::text_ostream_backend > text_sink;

      // the file sink for hte default logger
      boost::shared_ptr< text_sink > default_sink = boost::make_shared< text_sink >();
      default_sink->locked_backend()->add_stream
	( boost::make_shared< std::ofstream >( ""default_log.log"" ) );
      boost::log::core::get()->add_sink( default_sink );

      // the file sink for hte stat logger
      boost::shared_ptr< text_sink > stat_sink = boost::make_shared< text_sink >();
      stat_sink->locked_backend()->add_stream
	( boost::make_shared< std::ofstream >( ""stat_log.log"" ) );
      boost::log::core::get()->add_sink( stat_sink );
    }

    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    //=====================================================================
    

  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mGiCzd
code,"// Copyright 2017 Dolphin Emulator Project
// Licensed under GPLv2+
// Refer to the license.txt file included.

#include <QComboBox>
#include <QDialogButtonBox>
#include <QGroupBox>
#include <QHBoxLayout>
#include <QMessageBox>
#include <QPushButton>
#include <QTabWidget>
#include <QVBoxLayout>

#include ""DolphinQt2/Config/Mapping/MappingWindow.h""

#include ""Common/FileUtil.h""
#include ""Common/IniFile.h""
#include ""Core/Core.h""
#include ""Core/HW/GCPad.h""
#include ""DolphinQt2/Config/Mapping/GCKeyboardEmu.h""
#include ""DolphinQt2/Config/Mapping/GCPadEmu.h""
#include ""DolphinQt2/Config/Mapping/GCPadWiiU.h""
#include ""DolphinQt2/Config/Mapping/WiimoteEmuExtension.h""
#include ""DolphinQt2/Config/Mapping/WiimoteEmuGeneral.h""
#include ""DolphinQt2/Config/Mapping/WiimoteEmuMotionControl.h""
#include ""DolphinQt2/Settings.h""
#include ""InputCommon/ControllerEmu/ControllerEmu.h""
#include ""InputCommon/ControllerInterface/Device.h""
#include ""InputCommon/InputConfig.h""

#include ""InputCommon/ControllerInterface/ControllerInterface.h""

MappingWindow::MappingWindow(QWidget* parent, int port_num) : QDialog(parent), m_port(port_num)
{
  setWindowTitle(tr(""Port %1"").arg(port_num + 1));

  CreateDevicesLayout();
  CreateProfilesLayout();
  CreateResetLayout();
  CreateMainLayout();
  ConnectWidgets();
}

void MappingWindow::CreateDevicesLayout()
{
  m_devices_layout = new QHBoxLayout();
  m_devices_box = new QGroupBox(tr(""Devices""));
  m_devices_combo = new QComboBox();
  m_devices_refresh = new QPushButton(tr(""Refresh""));

  m_devices_refresh->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
  m_devices_layout->addWidget(m_devices_combo);
  m_devices_layout->addWidget(m_devices_refresh);

  m_devices_box->setLayout(m_devices_layout);
}

void MappingWindow::CreateProfilesLayout()
{
  m_profiles_layout = new QVBoxLayout();
  m_profiles_box = new QGroupBox(tr(""Profiles""));
  m_profiles_combo = new QComboBox();
  m_profiles_load = new QPushButton(tr(""Load""));
  m_profiles_save = new QPushButton(tr(""Save""));
  m_profiles_delete = new QPushButton(tr(""Delete""));

  auto* button_layout = new QHBoxLayout();

  m_profiles_box->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Fixed);
  m_profiles_combo->setEditable(true);

  m_profiles_layout->addWidget(m_profiles_combo);
  button_layout->addWidget(m_profiles_load);
  button_layout->addWidget(m_profiles_save);
  button_layout->addWidget(m_profiles_delete);
  m_profiles_layout->addItem(button_layout);

  m_profiles_box->setLayout(m_profiles_layout);
}

void MappingWindow::CreateResetLayout()
{
  m_reset_layout = new QVBoxLayout();
  m_reset_box = new QGroupBox(tr(""Reset""));
  m_reset_clear = new QPushButton(tr(""Clear""));
  m_reset_default = new QPushButton(tr(""Default""));

  m_reset_box->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);

  m_reset_layout->addWidget(m_reset_clear);
  m_reset_layout->addWidget(m_reset_default);

  m_reset_box->setLayout(m_reset_layout);
}

void MappingWindow::CreateMainLayout()
{
  m_main_layout = new QVBoxLayout();
  m_config_layout = new QHBoxLayout();
  m_tab_widget = new QTabWidget();
  m_button_box = new QDialogButtonBox(QDialogButtonBox::Ok);

  m_config_layout->addWidget(m_profiles_box);
  m_config_layout->addWidget(m_reset_box);

  m_main_layout->addWidget(m_devices_box);
  m_main_layout->addItem(m_config_layout);
  m_main_layout->addWidget(m_tab_widget);
  m_main_layout->addWidget(m_button_box);

  setLayout(m_main_layout);
}

void MappingWindow::ConnectWidgets()
{
  connect(m_devices_refresh, &QPushButton::clicked, this, &MappingWindow::RefreshDevices);
  connect(m_devices_combo, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged),
          this, &MappingWindow::OnDeviceChanged);
  connect(m_reset_clear, &QPushButton::clicked, this, [this] { emit ClearFields(); });
  connect(m_reset_default, &QPushButton::clicked, this, &MappingWindow::OnDefaultFieldsPressed);
  connect(m_profiles_save, &QPushButton::clicked, this, &MappingWindow::OnSaveProfilePressed);
  connect(m_profiles_load, &QPushButton::clicked, this, &MappingWindow::OnLoadProfilePressed);
  connect(m_profiles_delete, &QPushButton::clicked, this, &MappingWindow::OnDeleteProfilePressed);
  connect(m_button_box, &QDialogButtonBox::accepted, this, &MappingWindow::accept);
}

void MappingWindow::OnDeleteProfilePressed()
{
  auto& settings = Settings::Instance();
  const QString profile_name = m_profiles_combo->currentText();
  if (!settings.GetProfiles(m_config).contains(profile_name))
  {
    QMessageBox error;
    error.setIcon(QMessageBox::Critical);
    error.setText(tr(""The profile '%1' does not exist"").arg(profile_name));

    error.exec();
    return;
  }

  QMessageBox confirm(this);

  confirm.setIcon(QMessageBox::Warning);
  confirm.setText(tr(""Are you sure that you want to delete '%1'?"").arg(profile_name));
  confirm.setInformativeText(tr(""This cannot be undone!""));
  confirm.setStandardButtons(QMessageBox::Yes | QMessageBox::Cancel);

  if (confirm.exec() != QMessageBox::Yes)
  {
    return;
  }

  m_profiles_combo->removeItem(m_profiles_combo->currentIndex());

  QMessageBo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ek6br-
code,"/* This file is part of the ScriptDev2 Project. See AUTHORS file for Copyright information
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/* ScriptData
SDName: Instance_Sunwell_Plateau
SD%Complete: 70%
SDComment:
SDCategory: Sunwell_Plateau
EndScriptData */

#include ""precompiled.h""
#include ""sunwell_plateau.h""

/* Sunwell Plateau:
0 - Kalecgos and Sathrovarr
1 - Brutallus
2 - Felmyst
3 - Eredar Twins (Alythess and Sacrolash)
4 - M'uru
5 - Kil'Jaeden
*/

static const DialogueEntry aFelmystOutroDialogue[] =
{
    {NPC_KALECGOS_MADRIGOSA, 0,                        10000},
    {SAY_KALECGOS_OUTRO,     NPC_KALECGOS_MADRIGOSA,   5000},
    {NPC_FELMYST,            0,                        5000},
    {SPELL_OPEN_BACK_DOOR,   0,                        9000},
    {NPC_BRUTALLUS,          0,                        0},
    {0, 0, 0},
};

instance_sunwell_plateau::instance_sunwell_plateau(Map* pMap) : ScriptedInstance(pMap), DialogueHelper(aFelmystOutroDialogue),
    m_uiDeceiversKilled(0),
    m_uiSpectralRealmTimer(5000),
    m_uiKalecRespawnTimer(0),
    m_uiMuruBerserkTimer(0),
    m_uiKiljaedenYellTimer(90000)
{
    Initialize();
}

void instance_sunwell_plateau::Initialize()
{
    memset(&m_auiEncounter, 0, sizeof(m_auiEncounter));
    InitializeDialogueHelper(this);
}

bool instance_sunwell_plateau::IsEncounterInProgress() const
{
    for (uint8 i = 0; i < MAX_ENCOUNTER; ++i)
    {
        if (m_auiEncounter[i] == IN_PROGRESS)
            return true;
    }

    return false;
}

void instance_sunwell_plateau::OnPlayerEnter(Player* pPlayer)
{
    // Return if Felmyst already dead, or Brutallus alive
    if (m_auiEncounter[TYPE_BRUTALLUS] != DONE || m_auiEncounter[TYPE_FELMYST] == DONE)
        return;

    // Return if already summoned
    if (GetSingleCreatureFromStorage(NPC_FELMYST, true))
        return;

    // Summon Felmyst in reload case
    pPlayer->SummonCreature(NPC_FELMYST, aMadrigosaLoc[0].m_fX, aMadrigosaLoc[0].m_fY, aMadrigosaLoc[0].m_fZ, aMadrigosaLoc[0].m_fO, TEMPSUMMON_DEAD_DESPAWN, 0);
}

void instance_sunwell_plateau::OnCreatureCreate(Creature* pCreature)
{
    switch (pCreature->GetEntry())
    {
        case NPC_KALECGOS_DRAGON:
        case NPC_KALECGOS_HUMAN:
        case NPC_SATHROVARR:
        case NPC_FLIGHT_TRIGGER_LEFT:
        case NPC_FLIGHT_TRIGGER_RIGHT:
        case NPC_MADRIGOSA:
        case NPC_BRUTALLUS:
        case NPC_FELMYST:
        case NPC_KALECGOS_MADRIGOSA:
        case NPC_ALYTHESS:
        case NPC_SACROLASH:
        case NPC_MURU:
        case NPC_ENTROPIUS:
        case NPC_KILJAEDEN_CONTROLLER:
        case NPC_KILJAEDEN:
        case NPC_KALECGOS:
        case NPC_ANVEENA:
        case NPC_VELEN:
        case NPC_LIADRIN:
            m_mNpcEntryGuidStore[pCreature->GetEntry()] = pCreature->GetObjectGuid();
            break;
        case NPC_DECEIVER:
            m_lDeceiversGuidList.push_back(pCreature->GetObjectGuid());
            break;
        case NPC_WORLD_TRIGGER:
            // sort triggers for flightpath
            if (pCreature->GetPositionZ() < 51.0f)
                m_lAllFlightTriggersList.push_back(pCreature->GetObjectGuid());
            break;
        case NPC_WORLD_TRIGGER_LARGE:
            if (pCreature->GetPositionY() < 523.0f)
                m_lBackdoorTriggersList.push_back(pCreature->GetObjectGuid());
            break;
    }
}

void instance_sunwell_plateau::OnCreatureDeath(Creature* pCreature)
{
    if (pCreature->GetEntry() == NPC_DECEIVER)
    {
        ++m_uiDeceiversKilled;
        // Spawn Kiljaeden when all deceivers are killed
        if (m_uiDeceiversKilled == MAX_DECEIVERS)
        {
            if (Creature* pController = GetSingleCreatureFromStorage(NPC_KILJAEDEN_CONTROLLER))
            {
                if (Creature* pKiljaeden = pController->SummonCreature(NPC_KILJAEDEN, pController->GetPositionX(), pController->GetPositionY(), pController->GetPositionZ(), pController->GetOrientation(), TEMPSUMMON_DEAD_DESPAWN, 0))
                    pKiljaeden->SetInCombatWithZone();

                pController->RemoveAurasDueToSpell(SPELL_ANVEENA_DRAIN);
            }
        }
    }
}

void instance_sunwell_plateau::OnCreatureEvade(Creature* pCreature)
{
    // Reset encounter if raid wipes at deceivers
    if (pCreature->GetEntry() == NPC_DECEIVER)
        SetData(TYPE_KILJAEDEN, FAIL);
}

void instance_sunwell_plateau::OnObjectCreate(GameObject* pGo)
{
    switch (pGo->GetEntry())
    {
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pyGpnR
code,"/* ----------------------------------------------------------------------
   LAMMPS - Large-scale Atomic/Molecular Massively Parallel Simulator
   http://lammps.sandia.gov, Sandia National Laboratories
   Steve Plimpton, sjplimp@sandia.gov

   This software is distributed under the GNU General Public License.

   See the README file in the top-level LAMMPS directory.
------------------------------------------------------------------------- */

/* ----------------------------------------------------------------------
   Contributing author: Axel Kohlmeyer (Temple U)
------------------------------------------------------------------------- */

#include ""omp_compat.h""
#include <cmath>
#include ""pair_lj_charmm_coul_long_omp.h""
#include ""atom.h""
#include ""comm.h""
#include ""force.h""
#include ""neighbor.h""
#include ""neigh_list.h""

#include ""suffix.h""
using namespace LAMMPS_NS;

/* ---------------------------------------------------------------------- */

PairLJCharmmCoulLongOMP::PairLJCharmmCoulLongOMP(LAMMPS *lmp) :
  PairLJCharmmCoulLong(lmp), ThrOMP(lmp, THR_PAIR)
{
  suffix_flag |= Suffix::OMP;
  respa_enable = 0;
  cut_respa = NULL;
}

/* ---------------------------------------------------------------------- */

void PairLJCharmmCoulLongOMP::compute(int eflag, int vflag)
{
  ev_init(eflag,vflag);

  const int nall = atom->nlocal + atom->nghost;
  const int nthreads = comm->nthreads;
  const int inum = list->inum;

#if defined(_OPENMP)
#pragma omp parallel LMP_DEFAULT_NONE LMP_SHARED(eflag,vflag)
#endif
  {
    int ifrom, ito, tid;

    loop_setup_thr(ifrom, ito, tid, inum, nthreads);
    ThrData *thr = fix->get_thr(tid);
    thr->timer(Timer::START);
    ev_setup_thr(eflag, vflag, nall, eatom, vatom, NULL, thr);

    if (evflag) {
      if (eflag) {
        if (force->newton_pair) eval<1,1,1>(ifrom, ito, thr);
        else eval<1,1,0>(ifrom, ito, thr);
      } else {
        if (force->newton_pair) eval<1,0,1>(ifrom, ito, thr);
        else eval<1,0,0>(ifrom, ito, thr);
      }
    } else {
      if (force->newton_pair) eval<0,0,1>(ifrom, ito, thr);
      else eval<0,0,0>(ifrom, ito, thr);
    }

    thr->timer(Timer::PAIR);
    reduce_thr(this, eflag, vflag, thr);
  } // end of omp parallel region
}

/* ---------------------------------------------------------------------- */

template <int EVFLAG, int EFLAG, int NEWTON_PAIR>
void PairLJCharmmCoulLongOMP::eval(int iifrom, int iito, ThrData * const thr)
{

  const dbl3_t * _noalias const x = (dbl3_t *) atom->x[0];
  dbl3_t * _noalias const f = (dbl3_t *) thr->get_f()[0];
  const double * _noalias const q = atom->q;
  const int * _noalias const type = atom->type;
  const double * _noalias const special_coul = force->special_coul;
  const double * _noalias const special_lj = force->special_lj;
  const double qqrd2e = force->qqrd2e;
  const double inv_denom_lj = 1.0/denom_lj;

  const int * const ilist = list->ilist;
  const int * const numneigh = list->numneigh;
  const int * const * const firstneigh = list->firstneigh;
  const int nlocal = atom->nlocal;

  // loop over neighbors of my atoms

  for (int ii = iifrom; ii < iito; ++ii) {

    const int i = ilist[ii];
    const int itype = type[i];
    const double qtmp = q[i];
    const double xtmp = x[i].x;
    const double ytmp = x[i].y;
    const double ztmp = x[i].z;
    double fxtmp,fytmp,fztmp;
    fxtmp=fytmp=fztmp=0.0;

    const int * const jlist = firstneigh[i];
    const int jnum = numneigh[i];
    const double * _noalias const lj1i = lj1[itype];
    const double * _noalias const lj2i = lj2[itype];
    const double * _noalias const lj3i = lj3[itype];
    const double * _noalias const lj4i = lj4[itype];

    for (int jj = 0; jj < jnum; jj++) {
      double forcecoul, forcelj, evdwl, ecoul;
      forcecoul = forcelj = evdwl = ecoul = 0.0;

      const int sbindex = sbmask(jlist[jj]);
      const int j = jlist[jj] & NEIGHMASK;

      const double delx = xtmp - x[j].x;
      const double dely = ytmp - x[j].y;
      const double delz = ztmp - x[j].z;
      const double rsq = delx*delx + dely*dely + delz*delz;
      const int jtype = type[j];

      if (rsq < cut_bothsq) {
        const double r2inv = 1.0/rsq;

        if (rsq < cut_coulsq) {
          if (!ncoultablebits || rsq <= tabinnersq) {
            const double A1 =  0.254829592;
            const double A2 = -0.284496736;
            const double A3 =  1.421413741;
            const double A4 = -1.453152027;
            const double A5 =  1.061405429;
            const double EWALD_F = 1.12837917;
            const double INV_EWALD_P = 1.0/0.3275911;

            const double r = sqrt(rsq);
            const double grij = g_ewald * r;
            const double expm2 = exp(-grij*grij);
            const double t = INV_EWALD_P / (INV_EWALD_P + grij);
            const double erfc = t * (A1+t*(A2+t*(A3+t*(A4+t*A5)))) * expm2;
            const double prefactor = qqrd2e * qtmp*q[j]/r;
            forcecoul = prefactor * (erfc + EWALD_F*grij*expm2);
            if (EFLAG) ecoul = prefactor*erfc;
            if (sbindex) {
              const double adjust = (1.0-special_cou",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ESthQZ
code,"// Copyright (C) 1999,2000 Bruce Guenter <bruceg@em.ca>
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#include <config.h>
#include ""response.h""

mystring response::codestr() const
{
  static const mystring errstr = ""ERROR"";
  static const mystring econnstr = ""ECONN"";
  static const mystring badstr = ""BAD"";
  static const mystring okstr = ""OK"";
  static const mystring unknownstr = ""???"";
  switch(code) {
  case err: return errstr;
  case econn: return econnstr;
  case bad: return badstr;
  case ok: return okstr;
  default: return unknownstr;
  }
}

mystring response::message() const
{
  return codestr() + "": "" + msg;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9AWRAD
code,"/*****************************************************************************
 * Free42 -- an HP-42S calculator simulator
 * Copyright (C) 2004-2016  Thomas Okken
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see http://www.gnu.org/licenses/.
 *****************************************************************************/

#include <stdlib.h>

#include ""core_commands2.h""
#include ""core_commands3.h""
#include ""core_commands4.h""
#include ""core_display.h""
#include ""core_helpers.h""
#include ""core_linalg1.h""
#include ""core_sto_rcl.h""
#include ""core_variables.h""

/********************************************************/
/* Implementations of HP-42S built-in functions, part 4 */
/********************************************************/

int docmd_insr(arg_struct *arg) {
    vartype *m, *newx;
    vartype_realmatrix *rm;
    vartype_complexmatrix *cm;
    int4 rows, columns, i;
    int err, refcount;
    int interactive;

    switch (matedit_mode) {
        case 0:
            return ERR_NONEXISTENT;
        case 1:
        case 3:
            m = recall_var(matedit_name, matedit_length);
            break;
        case 2:
            m = matedit_x;
            break;
        default:
            return ERR_INTERNAL_ERROR;
    }
    if (m == NULL)
        return ERR_NONEXISTENT;
    if (m->type != TYPE_REALMATRIX && m->type != TYPE_COMPLEXMATRIX)
        return ERR_INVALID_TYPE;

    interactive = matedit_mode == 2 || matedit_mode == 3;
    if (interactive) {
        err = docmd_stoel(NULL);
        if (err != ERR_NONE)
            return err;
    }

    if (m->type == TYPE_REALMATRIX) {
        rm = (vartype_realmatrix *) m;
        rows = rm->rows;
        columns = rm->columns;
        refcount = rm->array->refcount;
        if (interactive) {
            newx = new_real(0);
            if (newx == NULL)
                return ERR_INSUFFICIENT_MEMORY;
        }
    } else {
        cm = (vartype_complexmatrix *) m;
        rows = cm->rows;
        columns = cm->columns;
        refcount = cm->array->refcount;
        if (interactive) {
            newx = new_complex(0, 0);
            if (newx == NULL)
                return ERR_INSUFFICIENT_MEMORY;
        }
    }

    if (matedit_i >= rows)
        matedit_i = rows - 1;
    if (matedit_j >= columns)
        matedit_j = columns - 1;

    if (refcount == 1) {
        /* We have this array to ourselves so we can modify it in place */
        err = dimension_array_ref(m, rows + 1, columns);
        if (err != ERR_NONE) {
            if (interactive)
                free_vartype(newx);
            return err;
        }
        rows++;
        if (m->type == TYPE_REALMATRIX) {
            for (i = rows * columns - 1; i >= (matedit_i + 1) * columns; i--) {
                rm->array->is_string[i] = rm->array->is_string[i - columns];
                rm->array->data[i] = rm->array->data[i - columns];
            }
            for (i = matedit_i * columns; i < (matedit_i + 1) * columns; i++) {
                rm->array->is_string[i] = 0;
                rm->array->data[i] = 0;
            }
        } else {
            for (i = 2 * rows * columns - 1;
                            i >= 2 * (matedit_i + 1) * columns; i--)
                cm->array->data[i] = cm->array->data[i - 2 * columns];
            for (i = 2 * matedit_i * columns;
                            i < 2 * (matedit_i + 1) * columns; i++)
                cm->array->data[i] = 0;
        }
    } else {
        /* We're sharing this array. I don't use disentangle() because it
         * does not deal with resizing. */
        int4 newsize = (rows + 1) * columns;
        if (m->type == TYPE_REALMATRIX) {
            realmatrix_data *array = (realmatrix_data *)
                                malloc(sizeof(realmatrix_data));
            if (array == NULL) {
                if (interactive)
                    free_vartype(newx);
                return ERR_INSUFFICIENT_MEMORY;
            }
            array->data = (phloat *) malloc(newsize * sizeof(phloat));
            if (array->data == NULL) {
                if (interactive)
                    free_vartype(newx);
                free(array);
                return ERR_INSUFFICIENT_MEMORY;
            }
            array->is_string = (char *) malloc(newsize);
            if (array->is_string == NULL) {
                if (interactive)
                    free_vartype(newx);
                free(array->data);
                free(array);
                return ERR_INSUFFICIENT_MEMORY;
            }
            for (i = 0; i < matedit_i * columns; i++) {
                array->is_stri",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0ObFDe
code,"/*
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2001 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       ""This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/).""
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names ""Xerces"" and ""Apache Software Foundation"" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache\@apache.org.
 *
 * 5. Products derived from this software may not be called ""Apache"",
 *    nor may ""Apache"" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation, and was
 * originally based on software copyright (c) 2001, International
 * Business Machines, Inc., http://www.ibm.com .  For more information
 * on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 */

/*
 * $Log: CMAny.hpp,v $
 * Revision 1.2  2001/05/11 13:27:14  tng
 * Copyright update.
 *
 * Revision 1.1  2001/02/27 14:48:46  tng
 * Schema: Add CMAny and ContentLeafNameTypeVector, by Pei Yong Zhang
 *
 */

#if !defined(CMANY_HPP)
#define CMANY_HPP

#include <util/XercesDefs.hpp>
#include <validators/common/CMNode.hpp>

class CMStateSet;

class CMAny : public CMNode
{
public :
    // -----------------------------------------------------------------------
    //  Constructors
    // -----------------------------------------------------------------------
    CMAny
    (
        const   ContentSpecNode::NodeTypes  type
        , const unsigned int                URI
        , const unsigned int                position
    );
    ~CMAny();

    // -----------------------------------------------------------------------
    //  Getter methods
    // -----------------------------------------------------------------------
    unsigned int getURI() const;

    unsigned int getPosition() const;

    // -----------------------------------------------------------------------
    //  Setter methods
    // -----------------------------------------------------------------------
    void setPosition(const unsigned int newPosition);

    // -----------------------------------------------------------------------
    //  Implementation of the public CMNode virtual interface
    // -----------------------------------------------------------------------
    bool isNullable() const;


protected :
    // -----------------------------------------------------------------------
    //  Implementation of the protected CMNode virtual interface
    // -----------------------------------------------------------------------
    void calcFirstPos(CMStateSet& toSet) const;
    void calcLastPos(CMStateSet& toSet) const;

private :
    // -----------------------------------------------------------------------
    //  Private data members
    //
    //  fURI;
    //  URI of the any content model. This value is set if the type is
    //  of the following:
    //  XMLContentSpec.CONTENTSPECNODE_ANY,
    //  XMLContentSpec.CONTENTSPECNODE_ANY_OTHER.
    //
	//  fPosition
    //  Part of the algorithm to convert a regex directly to a DFA
    //  numbers each leaf sequentially. If its -1, that means its an
    //  epsilon node. Zero and greater are non-epsilon positions.
    // ----------------------------------------------",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eXWxra
code,"/* $Id$ */
/** @file
 * VMM - Raw-mode Context.
 */

/*
 * Copyright (C) 2006-2012 Oracle Corporation
 *
 * This file is part of VirtualBox Open Source Edition (OSE), as
 * available from http://www.virtualbox.org. This file is free software;
 * you can redistribute it and/or modify it under the terms of the GNU
 * General Public License (GPL) as published by the Free Software
 * Foundation, in version 2 as it comes in the ""COPYING"" file of the
 * VirtualBox OSE distribution. VirtualBox OSE is distributed in the
 * hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
 */


/*******************************************************************************
*   Header Files                                                               *
*******************************************************************************/
#define LOG_GROUP LOG_GROUP_VMM
#include <iprt/asm-amd64-x86.h> /* for SUPGetCpuHzFromGIP */
#include <VBox/vmm/vmm.h>
#include <VBox/vmm/trpm.h>
#include <VBox/vmm/pgm.h>
#include ""VMMInternal.h""
#include <VBox/vmm/vm.h>
#include <VBox/sup.h>
#include <VBox/err.h>
#include <VBox/log.h>
#include <iprt/assert.h>
#include <iprt/initterm.h>


/*******************************************************************************
*   Global Variables                                                           *
*******************************************************************************/
/** Default logger instance. */
extern ""C"" DECLIMPORT(RTLOGGERRC)   g_Logger;
extern ""C"" DECLIMPORT(RTLOGGERRC)   g_RelLogger;


/*******************************************************************************
*   Internal Functions                                                         *
*******************************************************************************/
static int vmmGCTest(PVM pVM, unsigned uOperation, unsigned uArg);
static DECLCALLBACK(int) vmmGCTestTmpPFHandler(PVM pVM, PCPUMCTXCORE pRegFrame);
static DECLCALLBACK(int) vmmGCTestTmpPFHandlerCorruptFS(PVM pVM, PCPUMCTXCORE pRegFrame);



/**
 * The GC entry point.
 *
 * @returns VBox status code.
 * @param   pVM         Pointer to the VM.
 * @param   uOperation  Which operation to execute (VMMGCOPERATION).
 * @param   uArg        Argument to that operation.
 */
VMMRCDECL(int) VMMGCEntry(PVM pVM, unsigned uOperation, unsigned uArg, ...)
{
    /* todo */
    switch (uOperation)
    {
        /*
         * Init RC modules.
         */
        case VMMGC_DO_VMMGC_INIT:
        {
            /*
             * Validate the svn revision (uArg) and build type (ellipsis).
             */
            if (uArg != VMMGetSvnRev())
                return VERR_VMM_RC_VERSION_MISMATCH;

            va_list va;
            va_start(va, uArg);

            uint32_t uBuildType = va_arg(va, uint32_t);
            if (uBuildType != vmmGetBuildType())
                return VERR_VMM_RC_VERSION_MISMATCH;

            /*
             * Initialize the runtime.
             */
            uint64_t u64TS = va_arg(va, uint64_t);

            va_end(va);

            int rc = RTRCInit(u64TS);
            Log((""VMMGCEntry: VMMGC_DO_VMMGC_INIT - uArg=%u (svn revision) u64TS=%RX64; rc=%Rrc\n"", uArg, u64TS, rc));
            AssertRCReturn(rc, rc);

            rc = PGMRegisterStringFormatTypes();
            AssertRCReturn(rc, rc);

            rc = PGMRCDynMapInit(pVM);
            AssertRCReturn(rc, rc);
            return VINF_SUCCESS;
        }

        /*
         * Testcase which is used to test interrupt forwarding.
         * It spins for a while with interrupts enabled.
         */
        case VMMGC_DO_TESTCASE_HYPER_INTERRUPT:
        {
            uint32_t volatile i = 0;
            ASMIntEnable();
            while (i < _2G32)
                i++;
            ASMIntDisable();
            return 0;
        }

        /*
         * Testcase which simply returns, this is used for
         * profiling of the switcher.
         */
        case VMMGC_DO_TESTCASE_NOP:
            return 0;

        /*
         * Testcase executes a privileged instruction to force a world switch. (in both SVM & VMX)
         */
        case VMMGC_DO_TESTCASE_HM_NOP:
            ASMRdMsr_Low(MSR_IA32_SYSENTER_CS);
            return 0;

        /*
         * Delay for ~100us.
         */
        case VMMGC_DO_TESTCASE_INTERRUPT_MASKING:
        {
            uint64_t u64MaxTicks = (SUPGetCpuHzFromGIP(g_pSUPGlobalInfoPage) != ~(uint64_t)0
                                    ? SUPGetCpuHzFromGIP(g_pSUPGlobalInfoPage)
                                    : _2G)
                                   / 10000;
            uint64_t u64StartTSC = ASMReadTSC();
            uint64_t u64TicksNow;
            uint32_t volatile i = 0;

            do
            {
                /* waste some time and protect against getting stuck. */
                for (uint32_t volatile j = 0; j < 1000; j++, i++)
                    if (i > _2G32)
                        return VERR_GENERAL_FAILURE;

                /* check if we're done.*/
                u64TicksNow = ASMReadTSC() - u64StartTSC;
            } while (u64TicksNow < u6",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vS7wRF
code,"/* *****************************************************************************
 * The method lives() is based on Xitari's code, from Google Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  ""An Atari 2600 VCS Emulator""
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 */

#include ""games/supported/ChopperCommand.hpp""

#include ""games/RomUtils.hpp""

namespace ale {
using namespace stella;

ChopperCommandSettings::ChopperCommandSettings() { reset(); }

/* create a new instance of the rom */
RomSettings* ChopperCommandSettings::clone() const {
  return new ChopperCommandSettings(*this);
}

/* process the latest information from ALE */
void ChopperCommandSettings::step(const System& system) {
  // update the reward
  reward_t score = getDecimalScore(0xEE, 0xEC, &system);
  score *= 100;
  m_reward = score - m_score;
  m_score = score;

  // update terminal status
  m_lives = readRam(&system, 0xE4) & 0xF;
  m_terminal = (m_lives == 0);
  /*
   * Memory address 0xC2 indicates whether the Chopper is pointed
   * left or right on the screen.
   *  - If the value is 0x00 we're looking left.
   *  - If the value ix 0x01 we are looking right.
   * At the beginning of the game when we're selecting the game mode
   * we are always facing left, therefore, 0xC2 == 0x00.
   * When the game starts the chopper is initialized facing
   * right, i.e., 0xC2 == 0x01. We know if the game has started
   * if at any point 0xC2 == 0x01 so we can just OR the LSB of 0xC2
   * to keep track of whether the game has started or not.
   *
   * */
  m_is_started |= readRam(&system, 0xC2) & 0x1;
}

/* is end of game */
bool ChopperCommandSettings::isTerminal() const {
  return (m_is_started && m_terminal);
};

/* get the most recently observed reward */
reward_t ChopperCommandSettings::getReward() const { return m_reward; }

/* is an action part of the minimal set? */
bool ChopperCommandSettings::isMinimal(const Action& a) const {
  switch (a) {
    case PLAYER_A_NOOP:
    case PLAYER_A_FIRE:
    case PLAYER_A_UP:
    case PLAYER_A_RIGHT:
    case PLAYER_A_LEFT:
    case PLAYER_A_DOWN:
    case PLAYER_A_UPRIGHT:
    case PLAYER_A_UPLEFT:
    case PLAYER_A_DOWNRIGHT:
    case PLAYER_A_DOWNLEFT:
    case PLAYER_A_UPFIRE:
    case PLAYER_A_RIGHTFIRE:
    case PLAYER_A_LEFTFIRE:
    case PLAYER_A_DOWNFIRE:
    case PLAYER_A_UPRIGHTFIRE:
    case PLAYER_A_UPLEFTFIRE:
    case PLAYER_A_DOWNRIGHTFIRE:
    case PLAYER_A_DOWNLEFTFIRE:
      return true;
    default:
      return false;
  }
}

/* reset the state of the game */
void ChopperCommandSettings::reset() {
  m_reward = 0;
  m_score = 0;
  m_terminal = false;
  m_lives = 3;
  m_is_started = false;
}

/* saves the state of the rom settings */
void ChopperCommandSettings::saveState(Serializer& ser) {
  ser.putInt(m_reward);
  ser.putInt(m_score);
  ser.putBool(m_terminal);
  ser.putInt(m_lives);
}

// loads the state of the rom settings
void ChopperCommandSettings::loadState(Deserializer& ser) {
  m_reward = ser.getInt();
  m_score = ser.getInt();
  m_terminal = ser.getBool();
  m_lives = ser.getInt();
}

// returns a list of mode that the game can be played in
ModeVect ChopperCommandSettings::getAvailableModes() {
  return {0, 2};
}

// set the mode of the game
// the given mode must be one returned by the previous function
void ChopperCommandSettings::setMode(
    game_mode_t m, System& system,
    std::unique_ptr<StellaEnvironmentWrapper> environment) {
  if (m == 0 || m == 2) {
    // read the mode we are currently in
    unsigned char mode = readRam(&system, 0xE0);
    // press select until the correct mode is reached
    while (mode != m) {
      environment->pressSelect(2);
      mode = readRam(&system, 0xE0);
    }
    //reset the environment to apply changes.
    environment->softReset();
  } else {
    throw std::runtime_error(""This mode doesn't currently exist for this game"");
  }
}

DifficultyVect ChopperCommandSettings::getAvailableDifficulties() {
  return {0, 1};
}

}  // namespace ale
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tHr5Z8
code,"#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
// #pragma GCC optimize(""Ofast"")
// #pragma GCC optimize(""inline"")
// #pragma GCC optimize(""-fgcse"")
// #pragma GCC optimize(""-fgcse-lm"")
// #pragma GCC optimize(""-fipa-sra"")
// #pragma GCC optimize(""-ftree-pre"")
// #pragma GCC optimize(""-ftree-vrp"")
// #pragma GCC optimize(""-fpeephole2"")
// #pragma GCC optimize(""-ffast-math"")
// #pragma GCC optimize(""-fsched-spec"")
// #pragma GCC optimize(""unroll-loops"")
// #pragma GCC optimize(""-falign-jumps"")
// #pragma GCC optimize(""-falign-loops"")
// #pragma GCC optimize(""-falign-labels"")
// #pragma GCC optimize(""-fdevirtualize"")
// #pragma GCC optimize(""-fcaller-saves"")
// #pragma GCC optimize(""-fcrossjumping"")
// #pragma GCC optimize(""-fthread-jumps"")
// #pragma GCC optimize(""-funroll-loops"")
// #pragma GCC optimize(""-fwhole-program"")
// #pragma GCC optimize(""-freorder-blocks"")
// #pragma GCC optimize(""-fschedule-insns"")
// #pragma GCC optimize(""inline-functions"")
// #pragma GCC optimize(""-ftree-tail-merge"")
// #pragma GCC optimize(""-fschedule-insns2"")
// #pragma GCC optimize(""-fstrict-aliasing"")
// #pragma GCC optimize(""-fstrict-overflow"")
// #pragma GCC optimize(""-falign-functions"")
// #pragma GCC optimize(""-fcse-skip-blocks"")
// #pragma GCC optimize(""-fcse-follow-jumps"")
// #pragma GCC optimize(""-fsched-interblock"")
// #pragma GCC optimize(""-fpartial-inlining"")
// #pragma GCC optimize(""no-stack-protector"")
// #pragma GCC optimize(""-freorder-functions"")
// #pragma GCC optimize(""-findirect-inlining"")
// #pragma GCC optimize(""-fhoist-adjacent-loads"")
// #pragma GCC optimize(""-frerun-cse-after-loop"")
// #pragma GCC optimize(""inline-small-functions"")
// #pragma GCC optimize(""-finline-small-functions"")
// #pragma GCC optimize(""-ftree-switch-conversion"")
// #pragma GCC optimize(""-foptimize-sibling-calls"")
// #pragma GCC optimize(""-fexpensive-optimizations"")
// #pragma GCC optimize(""-funsafe-loop-optimizations"")
// #pragma GCC optimize(""inline-functions-called-once"")
// #pragma GCC optimize(""-fdelete-null-pointer-checks"")
#define rep(i, l, r) for (int i = (l); i <= (r); ++i)
#define per(i, l, r) for (int i = (l); i >= (r); --i)
using std::cerr;
using std::endl;
using std::make_pair;
using std::pair;
typedef pair<int, int> pii;
typedef long long ll;
typedef unsigned int ui;
typedef unsigned long long ull;

// #define DEBUG 1  //调试开关
struct IO {
#define MAXSIZE (1 << 20)
#define isdigit(x) (x >= '0' && x <= '9')
    char buf[MAXSIZE], *p1, *p2;
    char pbuf[MAXSIZE], *pp;
#if DEBUG
#else
    IO() : p1(buf), p2(buf), pp(pbuf) {}
    ~IO() { fwrite(pbuf, 1, pp - pbuf, stdout); }
#endif
    inline char gc() {
#if DEBUG  //调试，可显示字符
        return getchar();
#endif
        if (p1 == p2) p2 = (p1 = buf) + fread(buf, 1, MAXSIZE, stdin);
        return p1 == p2 ? -1 : *p1++;
    }
    inline bool blank(char ch) { return ch == ' ' || ch == '\n' || ch == '\r' || ch == '\t'; }
    template <class T>
    inline void read(T &x) {
        register double tmp = 1;
        register bool sign = 0;
        x = 0;
        register char ch = gc();
        for (; !isdigit(ch); ch = gc())
            if (ch == '-') sign = 1;
        for (; isdigit(ch); ch = gc()) x = x * 10 + (ch - '0');
        if (ch == '.')
            for (ch = gc(); isdigit(ch); ch = gc()) tmp /= 10.0, x += tmp * (ch - '0');
        if (sign) x = -x;
    }
    inline void read(char *s) {
        register char ch = gc();
        for (; blank(ch); ch = gc())
            ;
        for (; !blank(ch); ch = gc()) *s++ = ch;
        *s = 0;
    }
    inline void read(char &c) {
        for (c = gc(); blank(c); c = gc())
            ;
    }
    inline void push(const char &c) {
#if DEBUG  //调试，可显示字符
        putchar(c);
#else
        if (pp - pbuf == MAXSIZE) fwrite(pbuf, 1, MAXSIZE, stdout), pp = pbuf;
        *pp++ = c;
#endif
    }
    template <class T>
    inline void write(T x) {
        if (x < 0) x = -x, push('-');  // 负数输出
        static T sta[35];
        T top = 0;
        do {
            sta[top++] = x % 10, x /= 10;
        } while (x);
        while (top) push(sta[--top] + '0');
    }
    inline void write(const char *s) {
        while (*s != '\0') push(*(s++));
    }
    template <class T>
    inline void write(T x, char lastChar) {
        write(x), push(lastChar);
    }
} io;

int a[510][510];

int main() {
#ifdef LOCAL
    freopen(""input"", ""r"", stdin);
#endif
    int n;
    io.read(n);
    rep(i, 1, n) {
        rep(j, i + 1, n) {
            io.read(a[i][j]);
            a[j][i] = a[i][j];
        }
    }
    int ans = 0;
    rep(i, 1, n) {
        std::sort(a[i] + 1, a[i] + 1 + n);
        ans = std::max(ans, a[i][n - 1]);
    }
    io.write(""1\n"");
    io.write(ans);
    return 0;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6Hp3yu
code,"/*
 * Copyright (C) 2001-2006 Jacek Sieka, arnetheduck on gmail point com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include ""stdinc.h""
#include ""DCPlusPlus.h""

#include ""ZUtils.h""
#include ""Exception.h""
#include ""ResourceManager.h""

const double ZFilter::MIN_COMPRESSION_LEVEL = 0.9;

ZFilter::ZFilter() : totalIn(0), totalOut(0), compressing(true) {
	memset(&zs, 0, sizeof(zs));

	if(deflateInit(&zs, 3) != Z_OK) {
		throw Exception(STRING(COMPRESSION_ERROR));
	}
}

ZFilter::~ZFilter() {
	dcdebug(""ZFilter end, %ld/%ld = %.04f\n"", zs.total_out, zs.total_in, (float)zs.total_out / max((float)zs.total_in, (float)1));
	deflateEnd(&zs);
}

bool ZFilter::operator()(const void* in, size_t& insize, void* out, size_t& outsize) {
	if(outsize == 0)
		return false;

	zs.next_in = (Bytef*)in;
	zs.next_out = (Bytef*)out;

	// Check if there's any use compressing; if not, save some cpu...
	if(compressing && insize > 0 && outsize > 16 && (totalIn > (64*1024)) && ((static_cast<double>(totalOut) / totalIn) > 0.95)) {
		zs.avail_in = 0;
		zs.avail_out = outsize;
		if(deflateParams(&zs, 0, Z_DEFAULT_STRATEGY) != Z_OK) {
			throw Exception(STRING(COMPRESSION_ERROR));
		}
		zs.avail_in = insize;
		compressing = false;
		dcdebug(""Dynamically disabled compression"");

		// Check if we ate all space already...
		if(zs.avail_out == 0) {
			outsize = outsize - zs.avail_out;
			insize = insize - zs.avail_in;
			totalOut += outsize;
			totalIn += insize;
			return true;
		}
	} else {
		zs.avail_in = insize;
		zs.avail_out = outsize;
	}

	if(insize == 0) {
		int err = ::deflate(&zs, Z_FINISH);
		if(err != Z_OK && err != Z_STREAM_END)
			throw Exception(STRING(COMPRESSION_ERROR));

		outsize = outsize - zs.avail_out;
		insize = insize - zs.avail_in;
		totalOut += outsize;
		totalIn += insize;
		return err == Z_OK;
	} else {
		int err = ::deflate(&zs, Z_NO_FLUSH);
		if(err != Z_OK)
			throw Exception(STRING(COMPRESSION_ERROR));

		outsize = outsize - zs.avail_out;
		insize = insize - zs.avail_in;
		totalOut += outsize;
		totalIn += insize;
		return true;
	}
}

UnZFilter::UnZFilter() {
	memset(&zs, 0, sizeof(zs));

	if(inflateInit(&zs) != Z_OK)
		throw Exception(STRING(DECOMPRESSION_ERROR));
}

UnZFilter::~UnZFilter() {
	dcdebug(""UnZFilter end, %ld/%ld = %.04f\n"", zs.total_out, zs.total_in, (float)zs.total_out / max((float)zs.total_in, (float)1));
	inflateEnd(&zs);
}

bool UnZFilter::operator()(const void* in, size_t& insize, void* out, size_t& outsize) {
	if(outsize == 0)
		return 0;

	zs.avail_in = insize;
	zs.next_in = (Bytef*)in;
	zs.avail_out = outsize;
	zs.next_out = (Bytef*)out;

	int err = ::inflate(&zs, Z_NO_FLUSH);

	// see zlib/contrib/minizip/unzip.c, Z_BUF_ERROR means we should have padded
	// with a dummy byte if at end of stream - since we don't do this it's not a real
	// error
	if(!(err == Z_OK || err == Z_STREAM_END || (err == Z_BUF_ERROR && in == NULL)))
		throw Exception(STRING(DECOMPRESSION_ERROR));

	outsize = outsize - zs.avail_out;
	insize = insize - zs.avail_in;
	return err == Z_OK;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TxDxdD
code,"/* 
 * File:   ShardExceptions.cpp
 * Author: dagothar
 * 
 * Created on October 22, 2015, 8:00 PM
 */

#include ""ShardExceptions.hpp""

using namespace gripperz::shards;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zip92A
code,"/*
 * Copyright (C) 2005-2009 MaNGOS <http://getmangos.com/>
 *
 * Copyright (C) 2008-2010 Trinity <http://www.trinitycore.org/>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#include ""Common.h""
#include ""WorldPacket.h""
#include ""Opcodes.h""
#include ""Log.h""
#include ""ObjectMgr.h""
#include ""SpellMgr.h""
#include ""Player.h""
#include ""Unit.h""
#include ""Spell.h""
#include ""SpellAuraEffects.h""
#include ""DynamicObject.h""
#include ""ObjectAccessor.h""
#include ""Util.h""
#include ""GridNotifiers.h""
#include ""GridNotifiersImpl.h""
#include ""CellImpl.h""

AuraApplication::AuraApplication(Unit * target, Unit * caster, Aura * aura, uint8 effMask)
    : m_target(target), m_base(aura), m_slot(MAX_AURAS), m_flags(AFLAG_NONE), m_needClientUpdate(false)
    , m_removeMode(AURA_REMOVE_NONE), m_effectsToApply(effMask)
{
    assert(GetTarget() && GetBase());

    if (GetBase()->IsVisible())
    {
        // Try find slot for aura
        uint8 slot = MAX_AURAS;
        // Lookup for auras already applied from spell
        if (AuraApplication * foundAura = m_target->GetAuraApplication(m_base->GetId(), m_base->GetCasterGUID()))
        {
            // allow use single slot only by auras from same caster
            slot = foundAura->GetSlot();
        }
        else
        {
            Unit::VisibleAuraMap const * visibleAuras = m_target->GetVisibleAuras();
            // lookup for free slots in units visibleAuras
            Unit::VisibleAuraMap::const_iterator itr = visibleAuras->find(0);
            for (uint32 freeSlot = 0; freeSlot < MAX_AURAS; ++itr , ++freeSlot)
            {
                if (itr == visibleAuras->end() || itr->first != freeSlot)
                {
                    slot = freeSlot;
                    break;
                }
            }
        }

        // Register Visible Aura
        if (slot < MAX_AURAS)
        {
            m_slot = slot;
            m_target->SetVisibleAura(slot, this);
            SetNeedClientUpdate();
            sLog.outDebug(""Aura: %u Effect: %d put to unit visible auras slot: %u"", GetBase()->GetId(), GetEffectMask(), slot);
        }
        else
            sLog.outDebug(""Aura: %u Effect: %d could not find empty unit visible slot"", GetBase()->GetId(), GetEffectMask());
    }
    m_flags |= (_CheckPositive(caster) ? AFLAG_POSITIVE : AFLAG_NEGATIVE) |
        (GetBase()->GetCasterGUID() == GetTarget()->GetGUID() ? AFLAG_CASTER : AFLAG_NONE);

    m_isNeedManyNegativeEffects = false;
    if (GetBase()->GetCasterGUID() == GetTarget()->GetGUID()) // caster == target - 1 negative effect is enough for aura to be negative
        m_isNeedManyNegativeEffects = false;
    else if (caster)
        m_isNeedManyNegativeEffects = caster->IsFriendlyTo(m_target);
}

void AuraApplication::_Remove()
{
    uint8 slot = GetSlot();

    if (slot >= MAX_AURAS)
        return;

    if (AuraApplication * foundAura = m_target->GetAuraApplication(GetBase()->GetId(), GetBase()->GetCasterGUID()))
    {
        // Reuse visible aura slot by aura which is still applied - prevent storing dead pointers
        if (slot == foundAura->GetSlot())
        {
            if (GetTarget()->GetVisibleAura(slot) == this)
            {
                GetTarget()->SetVisibleAura(slot, foundAura);
                foundAura->SetNeedClientUpdate();
            }
            // set not valid slot for aura - prevent removing other visible aura
            slot = MAX_AURAS;
        }
    }

    // update for out of range group members
    if (slot < MAX_AURAS)
    {
        GetTarget()->RemoveVisibleAura(slot);
        ClientUpdate(true);
    }
}

bool AuraApplication::_CheckPositive(Unit * caster) const
{
    // Aura is positive when it is casted by friend and at least one aura is positive
    // or when it is casted by enemy and at least one aura is negative

    for (uint8 i = 0; i < MAX_SPELL_EFFECTS; ++i)
    {
        if ((1<<i & GetEffectMask()))
        {
            if (m_isNeedManyNegativeEffects == IsPositiveEffect(GetBase()->GetId(), i))
                return m_isNeedManyNegativeEffects;
        }
    }
    return !m_isNeedManyNegativeEffects;
}

void AuraApplication::_HandleEffect(uint8 effIndex, bool apply)
{
    AuraEffect * aurEff = GetBase()->GetEffect(effIndex);
    assert(aurEff);
    assert(HasEffect(effIndex) == (!apply));
    assert((1<<effIndex) & m_effectsToApply);
    sLog.outDebug(""AuraApplication::_HandleEffect: %u, apply: %u: amount: %u"", aurEff",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lh3oRs
code,"////////////////////////////////////////////////////////////////////////////////
//
// Copyright 2016 RWS Inc, All Rights Reserved
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of version 2 of the GNU General Public License as published by
// the Free Software Foundation
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
//
// fire.cpp
// Project: Postal
//
// This module implements the CFire weapon class which is a burning flame
//	for several different effects and weapons.
// 
//
// History:
//		01/17/97 BRH	Started this weapon object.
//
//		01/23/97 BRH	Updated the time to GetGameTime rather than using
//							real time..
//
//		02/04/97	JMI	Changed LoadDib() call to Load() (which now supports
//							loading of DIBs).
//
//		02/06/97 BRH	Added RAnimSprite animation of the explosion for now.  
//							We are going to do an Alpha effect on the explosion, so
//							there are two animations, one of the image and one of
//							the Alpha information stored as a BMP8 animation.  When
//							the Alpha effect is ready, we will pass a frame from
//							each animation to a function to draw it.
//
//		02/06/97 BRH	Fixed problem with timer.  Since all Explosion objects
//							are using the same resource managed animation, they cannot
//							use the animation timer, they have to do the timing 
//							themselves.
//
//		02/07/97 BRH	Changed the sprite from CSprite2 to CSpriteAlpha2 for
//							the Alpha Blit effect.
//
//		02/09/97 BRH	Started the Fire from Explode file since they are
//							similar.
//
//		02/10/97	JMI	rspReleaseResource() now takes a ptr to a ptr.
//
//		02/11/97 BRH	Changed the fire to start on a random frame number
//							so if you have many fires, they don't pulsate or all
//							burn in sync with each other.
//
//		02/14/97 BRH	Changed from using the RAnimSprite to channel data.
//
//		02/17/97 BRH	Now uses the resource manager to get the assets and starts
//							at a random time interval so the fire will be random again.
//
//		02/17/97 BRH	Changed the lifetime to be time based rather than frame
//							based which was causing the fire to live on forever 
//							since being switched from RAnimSprite to RChannel1.
//
//		02/18/97 BRH	Now the fire changes to different Alpha channels as it
//							burns out during its time to live.  
//
//		02/19/97 BRH	Checks for collisions and sends messages.
//
//		02/19/97 BRH	Added the ability to run both small and large fire
//							animations.  Change the duration on the alpha layers
//							so that the initial alpha channel gets played for 80%
//							of the burning time.  Also added bThick parameter to startup
//							which will start using the 0th Alpha channel which is
//							more opaque.  If you want more Alpha, set to false which
//							will start on the next Alpha level down.
//
//		02/23/97 BRH	Added static Preload() funciton which will be called
//							before play begins to cache a resource for this object.
//
//		02/24/97	JMI	No longer sets the m_type member of the m_sprite b/c it
//							is set by m_sprite's constructor.
//
//		02/24/97 BRH	Set the default state in ProcessMessages
//
//		02/24/97 BRH	Added a timer for checkin collisions so it doesn't have
//							to check each time, but it was checking only when changing
//							alpha levels which was too long.
//
//		03/05/97	JMI	Render()'s mapping from 3D to 2D had a typo (was adding m_dY
//							instead of subtracting).  Now uses Map3Dto2D().
//
//		03/13/97	JMI	Load now takes a version number.
//
//		04/10/97 BRH	Updated this to work with the new multi layer attribute
//							maps.
//
//		04/14/97 BRH	Added CSmash::Item to the collide bits so that the fire
//							will send messages to barrels and other items.
//
//		04/21/97 BRH	Added Smoke animation to the fire and the ability of the
//							fire to change to smoke.
//
//		02/22/97 BRH	Adjusted the timer for the smoke effect to eliminate some
//							of the final frames so that the smoke wouldn't pulsate
//							like it did.				
//
//		04/23/97	JMI	Changed this item's m_smash bits from CSmash::Item to
//							CSmash::Fire.
//							Now affects Characters, Miscs, Mines, and Barrels.
//
//		04/24/97 BRH	Added static wind direction variable that will get
//							adjusted slightly by each new creation of smoke which
//							calls WindDirectionUpdate() to randomly vary the wind
//							direction.
//
//		04/25/97 BRH	Fixed problem with smoke that was created as smoke, 
//							setting people on fire.  Also fixed wall detection
//							and added an individual direction variable to each 
//							instance of smoke that initially copies the wind
//							di",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_U2qiP
code,"/* ----------------------------------------------------------------------
   LAMMPS - Large-scale Atomic/Molecular Massively Parallel Simulator
   https://lammps.sandia.gov/, Sandia National Laboratories
   Steve Plimpton, sjplimp@sandia.gov

   Copyright (2003) Sandia Corporation.  Under the terms of Contract
   DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains
   certain rights in this software.  This software is distributed under
   the GNU General Public License.

   See the README file in the top-level LAMMPS directory.
------------------------------------------------------------------------- */

#include ""fix_nve.h""

#include ""atom.h""
#include ""error.h""
#include ""force.h""
#include ""respa.h""
#include ""update.h""

using namespace LAMMPS_NS;
using namespace FixConst;

/* ---------------------------------------------------------------------- */

FixNVE::FixNVE(LAMMPS *lmp, int narg, char **arg) :
  Fix(lmp, narg, arg)
{
  if (!utils::strmatch(style,""^nve/sphere"") && narg < 3)
    error->all(FLERR,""Illegal fix nve command"");

  dynamic_group_allow = 1;
  time_integrate = 1;
}

/* ---------------------------------------------------------------------- */

int FixNVE::setmask()
{
  int mask = 0;
  mask |= INITIAL_INTEGRATE;
  mask |= FINAL_INTEGRATE;
  mask |= INITIAL_INTEGRATE_RESPA;
  mask |= FINAL_INTEGRATE_RESPA;
  return mask;
}

/* ---------------------------------------------------------------------- */

void FixNVE::init()
{
  dtv = update->dt;
  dtf = 0.5 * update->dt * force->ftm2v;

  if (utils::strmatch(update->integrate_style,""^respa""))
    step_respa = ((Respa *) update->integrate)->step;
}

/* ----------------------------------------------------------------------
   allow for both per-type and per-atom mass
------------------------------------------------------------------------- */

void FixNVE::initial_integrate(int /*vflag*/)
{
  double dtfm;

  // update v and x of atoms in group

  double **x = atom->x;
  double **v = atom->v;
  double **f = atom->f;
  double *rmass = atom->rmass;
  double *mass = atom->mass;
  int *type = atom->type;
  int *mask = atom->mask;
  int nlocal = atom->nlocal;
  if (igroup == atom->firstgroup) nlocal = atom->nfirst;

  if (rmass) {
    for (int i = 0; i < nlocal; i++)
      if (mask[i] & groupbit) {
        dtfm = dtf / rmass[i];
        v[i][0] += dtfm * f[i][0];
        v[i][1] += dtfm * f[i][1];
        v[i][2] += dtfm * f[i][2];
        x[i][0] += dtv * v[i][0];
        x[i][1] += dtv * v[i][1];
        x[i][2] += dtv * v[i][2];
      }

  } else {
    for (int i = 0; i < nlocal; i++)
      if (mask[i] & groupbit) {
        dtfm = dtf / mass[type[i]];
        v[i][0] += dtfm * f[i][0];
        v[i][1] += dtfm * f[i][1];
        v[i][2] += dtfm * f[i][2];
        x[i][0] += dtv * v[i][0];
        x[i][1] += dtv * v[i][1];
        x[i][2] += dtv * v[i][2];
      }
  }
}

/* ---------------------------------------------------------------------- */

void FixNVE::final_integrate()
{
  double dtfm;

  // update v of atoms in group

  double **v = atom->v;
  double **f = atom->f;
  double *rmass = atom->rmass;
  double *mass = atom->mass;
  int *type = atom->type;
  int *mask = atom->mask;
  int nlocal = atom->nlocal;
  if (igroup == atom->firstgroup) nlocal = atom->nfirst;

  if (rmass) {
    for (int i = 0; i < nlocal; i++)
      if (mask[i] & groupbit) {
        dtfm = dtf / rmass[i];
        v[i][0] += dtfm * f[i][0];
        v[i][1] += dtfm * f[i][1];
        v[i][2] += dtfm * f[i][2];
      }

  } else {
    for (int i = 0; i < nlocal; i++)
      if (mask[i] & groupbit) {
        dtfm = dtf / mass[type[i]];
        v[i][0] += dtfm * f[i][0];
        v[i][1] += dtfm * f[i][1];
        v[i][2] += dtfm * f[i][2];
      }
  }
}

/* ---------------------------------------------------------------------- */

void FixNVE::initial_integrate_respa(int vflag, int ilevel, int /*iloop*/)
{
  dtv = step_respa[ilevel];
  dtf = 0.5 * step_respa[ilevel] * force->ftm2v;

  // innermost level - NVE update of v and x
  // all other levels - NVE update of v

  if (ilevel == 0) initial_integrate(vflag);
  else final_integrate();
}

/* ---------------------------------------------------------------------- */

void FixNVE::final_integrate_respa(int ilevel, int /*iloop*/)
{
  dtf = 0.5 * step_respa[ilevel] * force->ftm2v;
  final_integrate();
}

/* ---------------------------------------------------------------------- */

void FixNVE::reset_dt()
{
  dtv = update->dt;
  dtf = 0.5 * update->dt * force->ftm2v;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_6lbQr
code,"/* -*- c-basic-offset: 4 indent-tabs-mode: nil -*- vi:set ts=8 sts=4 sw=4: */

/*
    Rosegarden
    A MIDI and audio sequencer and musical notation editor.
    Copyright 2000-2018 the Rosegarden development team.
 
    Other copyrights also apply to some parts of this work.  Please
    see the AUTHORS file and individual file headers for details.
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License as
    published by the Free Software Foundation; either version 2 of the
    License, or (at your option) any later version.  See the file
    COPYING included with this distribution for more information.
*/

#define RG_MODULE_STRING ""[TrackButtons]""

#include ""TrackButtons.h""

#include ""TrackLabel.h""
#include ""TrackVUMeter.h""

#include ""misc/Debug.h""
#include ""misc/Strings.h""
#include ""base/AudioPluginInstance.h""
#include ""base/Composition.h""
#include ""base/Device.h""
#include ""base/Instrument.h""
#include ""base/InstrumentStaticSignals.h""
#include ""base/MidiProgram.h""
#include ""base/Studio.h""
#include ""base/Track.h""

#include ""commands/segment/RenameTrackCommand.h""
#include ""document/RosegardenDocument.h""
#include ""document/CommandHistory.h""
#include ""gui/application/RosegardenMainWindow.h""
#include ""gui/general/GUIPalette.h""
#include ""gui/general/IconLoader.h""
#include ""gui/seqmanager/SequenceManager.h""
#include ""gui/widgets/LedButton.h""
#include ""sound/AudioFileManager.h""
#include ""sound/ControlBlock.h""
#include ""sound/PluginIdentifier.h""
#include ""sequencer/RosegardenSequencer.h""

#include <QApplication>
#include <QLayout>
#include <QMessageBox>
#include <QCursor>
#include <QFrame>
#include <QIcon>
#include <QLabel>
#include <QObject>
#include <QPixmap>
#include <QMenu>
#include <QSignalMapper>
#include <QString>
#include <QTimer>
#include <QWidget>
#include <QStackedWidget>
#include <QToolTip>


namespace Rosegarden
{


// Constants
const int TrackButtons::m_borderGap = 1;
const int TrackButtons::m_buttonGap = 8;
const int TrackButtons::m_vuWidth = 20;
const int TrackButtons::m_vuSpacing = 2;


TrackButtons::TrackButtons(RosegardenDocument* doc,
                           int trackCellHeight,
                           int trackLabelWidth,
                           bool showTrackLabels,
                           int overallHeight,
                           QWidget* parent) :
        QFrame(parent),
        m_doc(doc),
        m_layout(new QVBoxLayout(this)),
        m_recordSigMapper(new QSignalMapper(this)),
        m_muteSigMapper(new QSignalMapper(this)),
        m_soloSigMapper(new QSignalMapper(this)),
        m_clickedSigMapper(new QSignalMapper(this)),
        m_instListSigMapper(new QSignalMapper(this)),
        m_tracks(doc->getComposition().getNbTracks()),
//        m_offset(4),
        m_cellSize(trackCellHeight),
        m_trackLabelWidth(trackLabelWidth),
        m_popupTrackPos(0),
        m_lastSelected(-1)
{
    setFrameStyle(Plain);

    QPalette pal = palette();
    pal.setColor(backgroundRole(), QColor(0xDD, 0xDD, 0xDD));
    pal.setColor(foregroundRole(), Qt::black);
    setPalette(pal);

    // when we create the widget, what are we looking at?
    if (showTrackLabels) {
        m_labelDisplayMode = TrackLabel::ShowTrack;
    } else {
        m_labelDisplayMode = TrackLabel::ShowInstrument;
    }

    m_layout->setMargin(0);
    // Set the spacing between vertical elements
    m_layout->setSpacing(m_borderGap);

    // Now draw the buttons and labels and meters
    //
    makeButtons();

    m_layout->addStretch(20);

    connect(m_recordSigMapper, SIGNAL(mapped(int)),
            this, SLOT(slotToggleRecord(int)));

    connect(m_muteSigMapper, SIGNAL(mapped(int)),
            this, SLOT(slotToggleMute(int)));

    connect(m_soloSigMapper, SIGNAL(mapped(int)),
            this, SLOT(slotToggleSolo(int)));

    // connect signal mappers
    connect(m_instListSigMapper, SIGNAL(mapped(int)),
            this, SLOT(slotInstrumentMenu(int)));

    connect(m_clickedSigMapper, SIGNAL(mapped(int)),
            this, SLOT(slotTrackSelected(int)));

    // We have to force the height for the moment
    //
    setMinimumHeight(overallHeight);

    m_doc->getComposition().addObserver(this);

    // We do not care about documentChanged() because if the
    // document is changing, we are going away.  A new TrackButtons
    // is created for each new document.
    //connect(RosegardenMainWindow::self(),
    //            SIGNAL(documentChanged(RosegardenDocument *)),
    //        SLOT(slotNewDocument(RosegardenDocument *)));
}

TrackButtons::~TrackButtons() {
    // CRASH!  Probably m_doc is gone...
    // Probably don't need to disconnect as we only go away when the
    // doc and composition do.  shared_ptr would help here.
//    m_doc->getComposition().removeObserver(this);
}

void
TrackButtons::updateUI(Track *track)
{
    if (!track)
        return;

    int pos = track->getPosition();

    if (pos < 0  ||  pos >= m_tracks)
        return;


    // *** Archive Background

    QFrame *hbox = m_trackHBoxes.at(pos);
    if (track->isA",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cQFlKb
code,"#include ""../ProtocolCommand.h""
//#include <sqlite3.h>



using namespace org::esb::net;
using namespace org::esb::hive;
using namespace std;


class CreateHive:public ProtocolCommand {

  private:
	Socket * socket;
  public:
	~CreateHive () {
	} CreateHive (TcpSocket * socket) {
		this->socket = socket;
		this->is = socket->getInputStream ();
		this->os = socket->getOutputStream ();
	}
	CreateHive (InputStream * is, OutputStream * os) {
		this->is = is;
		this->os = os;
	}

	int isResponsible (cmdId & cmid) {
	
	}
	int isResponsible (char *command) {
		if (strstr (command, ""create hive"") > 0) {
			return CMD_PROCESS;
		}
		else if (strcmp (command, ""help"") == 0) {
			return CMD_HELP;
		}
		return CMD_NA;
	}

	void process (char *data) {
		string msg = ""Creating Hive at "";
		string path = data + 12;
		msg += path;
		os->write ((char *) msg.c_str (), msg.length ());
		string tableFile = ""CREATE TABLE FILE (id, name, size, type)"";
		string tablePacket =
			""CREATE TABLE PACKET (id,pts,dts,stream_index,flags,duration,pos,data_size,data)"";
		string tableJob = ""CREATE TABLE JOB(id,infile,outfile)"";
		sqlite3 *db;
		sqlite3_stmt *pStmt;
		char *zErrMsg = 0;
		int rc = sqlite3_open (path.c_str (), &db);
		if (rc) {
			fprintf (stderr, ""Can't open database: %s\n"",
					 sqlite3_errmsg (db));
			sqlite3_close (db);
			return;
		}
		sqlite3_exec (db, tableFile.c_str (), NULL, NULL, NULL);
		sqlite3_exec (db, tablePacket.c_str (), NULL, NULL, NULL);
		sqlite3_exec (db, tableJob.c_str (), NULL, NULL, NULL);
	}

	void printHelp () {
	}

};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mF0J7x
code,"/**
  @file TextOutput.cpp

  @maintainer Morgan McGuire, http://graphics.cs.williams.edu
  @created 2004-06-21
  @edited  2010-03-14

  Copyright 2000-2010, Morgan McGuire.
  All rights reserved.
 */

#include ""G3D/TextOutput.h""
#include ""G3D/Log.h""
#include ""G3D/fileutils.h""
#include ""G3D/FileSystem.h""

namespace G3D {

TextOutput::TextOutput(const TextOutput::Settings& opt) :
    startingNewLine(true),
    currentColumn(0),
    inDQuote(false),
    filename(""""),
    indentLevel(0)
{
    setOptions(opt);
}

TextOutput::TextOutput(const std::string& fil, const TextOutput::Settings& opt) :
    startingNewLine(true),
    currentColumn(0),
    inDQuote(false),
    filename(fil),
    indentLevel(0)
{

    setOptions(opt);
}

void TextOutput::setIndentLevel(int i) {
    indentLevel = i;

    // If there were more pops than pushes, don't let that take us below 0 indent.
    // Don't ever indent more than the number of columns.
    indentSpaces =
        iClamp(option.spacesPerIndent * indentLevel,
               0,
               option.numColumns - 1);
}

void TextOutput::setOptions(const Settings& _opt) {
    option = _opt;

    debugAssert(option.numColumns > 1);

    setIndentLevel(indentLevel);

    newline = (option.newlineStyle == Settings::NEWLINE_WINDOWS) ? ""\r\n"" : ""\n"";
}

void TextOutput::pushIndent() {
    setIndentLevel(indentLevel + 1);
}

void TextOutput::popIndent() {
    setIndentLevel(indentLevel - 1);
}

static std::string escape(const std::string& string) {
    std::string result = """";

    for (std::string::size_type i = 0; i < string.length(); ++i) {
        char c = string.at(i);
        switch (c) {
        case '\0':
            result += ""\\0"";
            break;

        case '\r':
            result += ""\\r"";
            break;

        case '\n':
            result += ""\\n"";
            break;

        case '\t':
            result += ""\\t"";
            break;

        case '\\':
            result += ""\\\\"";
            break;

        default:
            result += c;
        }
    }

    return result;
}

void TextOutput::writeString(const std::string& string) {
    // Convert special characters to escape sequences
    this->printf(""\""%s\"""", escape(string).c_str());
}

void TextOutput::writeBoolean(bool b) {
    this->printf(""%s "", b ? option.trueSymbol.c_str() : option.falseSymbol.c_str());
}

void TextOutput::writeNumber(double n) {
    this->printf(""%f "", n);
}

void TextOutput::writeNumber(int n) {
    this->printf(""%d "", n);
}

void TextOutput::writeSymbol(const std::string& string) {
    if (string.size() > 0) {
        // TODO: check for legal symbols?
        this->printf(""%s "", string.c_str());
    }
}

void TextOutput::writeSymbols(
    const std::string& a,
    const std::string& b,
    const std::string& c,
    const std::string& d,
    const std::string& e,
    const std::string& f) {

    writeSymbol(a);
    writeSymbol(b);
    writeSymbol(c);
    writeSymbol(d);
    writeSymbol(e);
    writeSymbol(f);
}

void TextOutput::printf(const std::string formatString, ...) {
    va_list argList;
    va_start(argList, formatString);
    this->vprintf(formatString.c_str(), argList);
    va_end(argList);
}

void TextOutput::printf(const char* formatString, ...) {
    va_list argList;
    va_start(argList, formatString);
    this->vprintf(formatString, argList);
    va_end(argList);
}

void TextOutput::convertNewlines(const std::string& in, std::string& out) {
    // TODO: can be significantly optimized in cases where
    // single characters are copied in order by walking through
    // the array and copying substrings as needed.

    if (option.convertNewlines) {
        out = """";
        for (uint32 i = 0; i < in.size(); ++i) {
            if (in[i] == '\n') {
                // Unix newline
                out += newline;
            } else if ((in[i] == '\r') && (i + 1 < in.size()) && (in[i + 1] == '\n')) {
                // Windows newline
                out += newline;
                ++i;
            } else {
                out += in[i];
            }
        }
    } else {
        out = in;
    }
}

void TextOutput::writeNewline() {
    for (uint32 i = 0; i < newline.size(); ++i) {
        indentAppend(newline[i]);
    }
}

void TextOutput::writeNewlines(int numLines) {
    for (int i = 0; i < numLines; ++i) {
        writeNewline();
    }
}

void TextOutput::wordWrapIndentAppend(const std::string& str) {
    // TODO: keep track of the last space character we saw so we don't
    // have to always search.

    if ((option.wordWrap == Settings::WRAP_NONE) ||
        (currentColumn + (int)str.size() <= option.numColumns)) {
        // No word-wrapping is needed

        // Add one character at a time.
        // TODO: optimize for strings without newlines to add multiple
        // characters.
        for (uint32 i = 0; i < str.size(); ++i) {
            indentAppend(str[i]);
        }
        return;
    }

    // Number of columns to wrap against
    int cols = option.numColumns - indentSpaces;

    // Copy forward until we exceed the column size,
    // and then back up and try to in",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nnpXFI
code,"/*
  DC++ Widget Toolkit

  Copyright (c) 2007-2013, Jacek Sieka

  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

      * Redistributions of source code must retain the above copyright notice,
        this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice,
        this list of conditions and the following disclaimer in the documentation
        and/or other materials provided with the distribution.
      * Neither the name of the DWT nor the names of its contributors
        may be used to endorse or promote products derived from this software
        without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include <dwt/widgets/ProgressBar.h>

namespace dwt {

const TCHAR ProgressBar::windowClass[] = PROGRESS_CLASS;

ProgressBar::Seed::Seed() :
BaseType::Seed(WS_CHILD | PBS_SMOOTH)
{
}

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EIvwLK
code,"/***************************************************************************
                          ofxdump.cpp
                             -------------------
    copyright            : (C) 2002 by Benoit Grégoire
    email                : bock@step.polymtl.ca
***************************************************************************/
/**@file
 * \brief Code for ofxdump utility.  C++ example code
 *
 * ofxdump prints to stdout, in human readable form, everything the library 
 understands about a particular ofx response file, and sends errors to 
 stderr.  To know exactly what the library understands about of a particular
 ofx response file, just call ofxdump on that file.
 *
 * ofxdump is meant as both a C++ code example and a developper/debuging
 tool.  It uses every function and every structure of the LibOFX API.  By
 default, WARNING, INFO, ERROR and STATUS messages are enabled.  You can
 change these defaults at the top of ofxdump.cpp
 *
 * usage: ofxdump path_to_ofx_file/ofx_filename
 */
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
#include <iostream>
#include <iomanip>
#include <string>
#include ""libofx.h""
#include <stdio.h>		/* for printf() */
#include <config.h>		/* Include config constants, e.g., VERSION TF */
#include <errno.h>

#include ""cmdline.h"" /* Gengetopt generated parser */

using namespace std;


int ofx_proc_security_cb(struct OfxSecurityData data, void * security_data)
{
  char dest_string[255];
  cout<<""ofx_proc_security():\n"";
  if(data.unique_id_valid==true){
    cout<<""    Unique ID of the security being traded: ""<<data.unique_id<<""\n"";
  }
  if(data.unique_id_type_valid==true){
    cout<<""    Format of the Unique ID: ""<<data.unique_id_type<<""\n"";
  }
  if(data.secname_valid==true){
    cout<<""    Name of the security: ""<<data.secname<<""\n"";
  }
  if(data.ticker_valid==true){
    cout<<""    Ticker symbol: ""<<data.ticker<<""\n"";
  }
  if(data.unitprice_valid==true){
    cout<<""    Price of each unit of the security: ""<<data.unitprice<<""\n"";
  }
  if(data.date_unitprice_valid==true){
    strftime(dest_string,sizeof(dest_string),""%c %Z"",localtime(&(data.date_unitprice)));
    cout<<""    Date as of which the unitprice is valid: ""<<dest_string<<""\n"";
  }
  if(data.currency_valid==true){
    cout<<""    Currency of the unitprice: ""<<data.currency<<""\n"";
  }
  if(data.memo_valid==true){
    cout<<""    Extra transaction information (memo): ""<<data.memo<<""\n"";
  }
  cout<<""\n"";
  return 0;
}

int ofx_proc_transaction_cb(struct OfxTransactionData data, void * transaction_data)
{
  char dest_string[255];
  cout<<""ofx_proc_transaction():\n"";
  
  if(data.account_id_valid==true){
    cout<<""    Account ID : ""<<data.account_id<<""\n"";
  }
  
  if(data.transactiontype_valid==true)
    {
      if(data.transactiontype==OFX_CREDIT)
	strncpy(dest_string, ""CREDIT: Generic credit"", sizeof(dest_string));
      else if (data.transactiontype==OFX_DEBIT)
	strncpy(dest_string, ""DEBIT: Generic debit"", sizeof(dest_string));
      else if (data.transactiontype==OFX_INT)
	strncpy(dest_string, ""INT: Interest earned or paid (Note: Depends on signage of amount)"", sizeof(dest_string));
      else if (data.transactiontype==OFX_DIV)
	strncpy(dest_string, ""DIV: Dividend"", sizeof(dest_string));
      else if (data.transactiontype==OFX_FEE)
	strncpy(dest_string, ""FEE: FI fee"", sizeof(dest_string));
      else if (data.transactiontype==OFX_SRVCHG)
	strncpy(dest_string, ""SRVCHG: Service charge"", sizeof(dest_string));
      else if (data.transactiontype==OFX_DEP)
	strncpy(dest_string, ""DEP: Deposit"", sizeof(dest_string));
      else if (data.transactiontype==OFX_ATM)
	strncpy(dest_string, ""ATM: ATM debit or credit (Note: Depends on signage of amount)"", sizeof(dest_string));
      else if (data.transactiontype==OFX_POS)
	strncpy(dest_string, ""POS: Point of sale debit or credit (Note: Depends on signage of amount)"", sizeof(dest_string));
      else if (data.transactiontype==OFX_XFER)
	strncpy(dest_string, ""XFER: Transfer"", sizeof(dest_string));
      else if (data.transactiontype==OFX_CHECK)
	strncpy(dest_string, ""CHECK: Check"", sizeof(dest_string));
      else if (data.transactiontype==OFX_PAYMENT)
	strncpy(dest_string, ""PAYMENT: Electronic payment"", sizeof(dest_string));
      else if (data.transactiontype==OFX_CASH)
	strncpy(dest_string, ""CASH: Cash withdrawal"", sizeof(dest_string));
      else if (data.transactiontype==OFX_DIRECTDEP)
	strncpy(dest_string, ""DIRECTDEP: Direct deposit"", sizeof(dest_string));
      else if (data.transactiontype==OFX_DIRECTDEBIT)
	strncpy(dest_st",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BJsgAr
code,"/**
 * UGENE - Integrated Bioinformatics Tools.
 * Copyright (C) 2008-2022 UniPro <ugene@unipro.ru>
 * http://ugene.net
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 */

#include ""ScriptEditorWidget.h""

#include <QBoxLayout>
#include <QLineEdit>
#include <QSplitter>
#include <QTextEdit>

#include ""ScriptHighlighter.h""

const char* SCRIPT_TEXT_PROPERTY_NAME = ""script text"";

namespace U2 {

ScriptEditorWidget::ScriptEditorWidget(QWidget* parent, ScriptEditorType typeOfField)
    : QWidget(parent) {
    scriptContainer = new QSplitter(Qt::Vertical, this);
    scriptContainer->setFocusPolicy(Qt::NoFocus);

    QBoxLayout* layout = new QBoxLayout(QBoxLayout::TopToBottom, this);
    layout->setMargin(0);
    layout->addWidget(scriptContainer);

    variablesEdit = new QTextEdit(scriptContainer);
    variablesEdit->setReadOnly(true);

    new ScriptHighlighter(variablesEdit->document());

    scriptEdit = AbstractScriptEditorDelegate::createInstance(scriptContainer, typeOfField);
    scriptEdit->installScriptHighlighter();
    connect(scriptEdit, SIGNAL(si_textChanged()), SIGNAL(si_textChanged()));
    connect(scriptEdit, SIGNAL(si_cursorPositionChanged()), SIGNAL(si_cursorPositionChanged()));
}

void ScriptEditorWidget::setVariablesText(const QString& variablesText) {
    variablesEdit->setText(variablesText);
}

QString ScriptEditorWidget::variablesText() const {
    return variablesEdit->toPlainText();
}

void ScriptEditorWidget::setScriptText(const QString& text) {
    scriptEdit->setText(text);
}

QString ScriptEditorWidget::scriptText() const {
    return scriptEdit->text();
}

int ScriptEditorWidget::scriptEditCursorLineNumber() const {
    return scriptEdit->cursorLineNumber();
}

}  // namespace U2
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gqpJB2
code,"/*
 * UriMapFeature.hpp
 *
 * Copyright (c) 2010 Paul Giblock <pgib/at/users.sourceforge.net>
 *
 * This file is part of Unison - http://unison.sourceforge.net
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this program (see COPYING); if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 */

#ifndef UNISON_LV2_URI_MAP_FEATURE_H
#define UNISON_LV2_URI_MAP_FEATURE_H

#include ""Feature.hpp""

#include <lv2/uri-map.lv2/uri-map.h>

namespace Lv2 {
  namespace Internal {

class UriMap;

class UriMapFeature : public Feature
{
  public:
    UriMapFeature (UriMap* uriMap);

    LV2_Feature* lv2Feature ();
    void initialize (LV2_Feature*, const Lv2Plugin&) const {};
    void cleanup (LV2_Feature*) const {};

  private:
    static uint32_t uriToId (LV2_URI_Map_Callback_Data cbData, const char* map, const char* uri);

    LV2_Feature m_feature;
    LV2_URI_Map_Feature m_data;

    UriMap* m_uriMap;
};

  } // Internal
} // Lv2

#endif

// vim: tw=90 ts=8 sw=2 sts=2 et sta noai
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sOcJCW
code,"# Copyright (c) 2016-2018, Ruslan Baratov
# All rights reserved.

# !!! DO NOT PLACE HEADER GUARDS HERE !!!

include(hunter_add_version)
include(hunter_cacheable)
include(hunter_cmake_args)
include(hunter_download)
include(hunter_pick_scheme)

hunter_add_version(
    PACKAGE_NAME
    mxnet
    VERSION
    0.0.0-5b86701f2-p0
    URL
    ""https://github.com/hunter-packages/mxnet/archive/0.0.0-5b86701f2-p0.tar.gz""
    SHA1
    8b7d898d2f474bef2ca436cca2c2ab15483535cd
)

hunter_add_version(
    PACKAGE_NAME
    mxnet
    VERSION
    0.0.0-5b86701f2-p1
    URL
    ""https://github.com/hunter-packages/mxnet/archive/0.0.0-5b86701f2-p1.tar.gz""
    SHA1
    71c01aaa65448f4826e2ec4cadb44987370d664f
)

hunter_add_version(
    PACKAGE_NAME
    mxnet
    VERSION
    0.0.0-5b86701f2-p2
    URL
    ""https://github.com/hunter-packages/mxnet/archive/0.0.0-5b86701f2-p2.tar.gz""
    SHA1
    60c4d0ef4b9ac35e6a23c5482a1702da7e377d5c
)


hunter_cmake_args(
    mxnet
    CMAKE_ARGS
    BUILD_CPP_EXAMPLES=OFF
    BUILD_TESTS=OFF
    USE_CPP_PACKAGE=ON
    USE_GPERFTOOLS=OFF
    USE_JEMALLOC=OFF
    USE_OPENMP=OFF
)

hunter_pick_scheme(DEFAULT url_sha1_cmake)
hunter_cacheable(mxnet)
hunter_download(PACKAGE_NAME mxnet)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",p1sd0s
code,"# Try to find Coin3D
# Once done this will define
#
# COIN_LIBRARY_FOUND - if Coin3d is found
# COIN_CXXFLAGS - extra flags
# COIN_LINK_FLAGS - extra flags
# COIN_INCLUDE_DIRS - include directories
# COIN_LINK_DIRS - link directories
# COIN_LIBRARY_RELEASE - the relase version
# COIN_LIBRARY_DEBUG - the debug version
# COIN_LIBRARY - a default library, with priority debug.

# use coin-config
find_program(COIN_CONFIG_EXECUTABLE NAMES coin-config DOC ""coin-config executable"")
mark_as_advanced(COIN_CONFIG_EXECUTABLE)

if(COIN_CONFIG_EXECUTABLE)
  set(COIN_LIBRARY_FOUND 1)

  execute_process(
    COMMAND ${COIN_CONFIG_EXECUTABLE} --cppflags
    OUTPUT_VARIABLE _coinconfig_cppflags
    RESULT_VARIABLE _coinconfig_failed)
  string(REGEX REPLACE ""[\r\n]"" "" "" _coinconfig_cppflags ""${_coinconfig_cppflags}"")
  execute_process(
    COMMAND ${COIN_CONFIG_EXECUTABLE} --includedir
    OUTPUT_VARIABLE _coinconfig_includedir
    RESULT_VARIABLE _coinconfig_failed)
  string(REGEX REPLACE ""[\r\n]"" "" "" _coinconfig_includedir ""${_coinconfig_includedir}"")
  execute_process(
    COMMAND ${COIN_CONFIG_EXECUTABLE} --ldflags
    OUTPUT_VARIABLE _coinconfig_ldflags
    RESULT_VARIABLE _coinconfig_failed)
  string(REGEX REPLACE ""[\r\n]"" "" "" _coinconfig_ldflags ""${_coinconfig_ldflags}"")
  execute_process(
    COMMAND ${COIN_CONFIG_EXECUTABLE} --libs
    OUTPUT_VARIABLE _coinconfig_libs
    RESULT_VARIABLE _coinconfig_failed)

  string(REGEX MATCHALL ""(^| )-l([./+-_\\a-zA-Z]*)"" _coinconfig_libs ""${_coinconfig_libs}"")
  string(REGEX REPLACE ""(^| )-l"" """" _coinconfig_libs ""${_coinconfig_libs}"")

  string(REGEX MATCHALL ""(^| )-L([./+-_\\a-zA-Z]*)"" _coinconfig_ldirs ""${_coinconfig_ldflags}"")
  string(REGEX REPLACE ""(^| )-L"" """" _coinconfig_ldirs ""${_coinconfig_ldirs}"")

  string(REGEX REPLACE ""(^| )-l([./+-_\\a-zA-Z]*)"" "" "" _coinconfig_ldflags ""${_coinconfig_ldflags}"")
  string(REGEX REPLACE ""(^| )-L([./+-_\\a-zA-Z]*)"" "" "" _coinconfig_ldflags ""${_coinconfig_ldflags}"")

  separate_arguments(_coinconfig_includedir)

  set( COIN_CXXFLAGS ""${_coinconfig_cppflags}"" )
  set( COIN_LINK_FLAGS ""${_coinconfig_ldflags}"" )
  set( COIN_INCLUDE_DIRS ${_coinconfig_includedir})
  set( COIN_LINK_DIRS ${_coinconfig_ldirs})
  set( COIN_LIBRARY ${_coinconfig_libs})
  set( COIN_LIBRARY_RELEASE ${COIN_LIBRARY})
  set( COIN_LIBRARY_DEBUG ${COIN_LIBRARY})
else(COIN_CONFIG_EXECUTABLE)
  # coin include files in local directory
  if( MSVC )
    set(COIN_LIBRARY_FOUND 1)
    set( COIN_CXXFLAGS ""-DCOIN_DLL -DSIMAGE_DLL"")
    set( COIN_LINK_FLAGS """")
    set( COIN_INCLUDE_DIRS """")
    set( COIN_LINK_DIRS """" )
    if( MSVC70 OR MSVC71 OR MSVC80 )
      set( COIN_LIBRARY coin3.1-vc80-mt)
    elseif( MSVC90 )
      set( COIN_LIBRARY coin3.1-vc90-mt)
    else() # vc100+
      set( COIN_LIBRARY coin3.1-vc100-mt)
    endif()
    set( COIN_LIBRARY_RELEASE ${COIN_LIBRARY})
    set( COIN_LIBRARY_DEBUG ${COIN_LIBRARY})
  else( MSVC )
    set(COIN_LIBRARY_FOUND 0)
  endif( MSVC )  
endif(COIN_CONFIG_EXECUTABLE)

MARK_AS_ADVANCED(
    COIN_LIBRARY_FOUND
    COIN_CXXFLAGS
    COIN_LINK_FLAGS
    COIN_INCLUDE_DIRS
    COIN_LINK_DIRS
    COIN_LIBRARY
    COIN_LIBRARY_RELEASE
    COIN_LIBRARY_DEBUG
)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tmrkF_
code,"# Lib3ds_FOUND
# Lib3ds_INCLUDE_DIR
# Lib3ds_LIBRARIES

find_path(Lib3ds_INCLUDE_DIR
    NAMES lib3ds/file.h
    HINTS /usr/include /usr/local/include
)
find_library(Lib3ds_LIBRARIES
    NAMES 3ds lib3ds
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(Lib3ds DEFAULT_MSG Lib3ds_LIBRARIES Lib3ds_INCLUDE_DIR)

mark_as_advanced(Lib3ds_INCLUDE_DIR Lib3ds_LIBRARIES)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hwoE9N
code,"# -*- mode: cmake; -*-
# - Try to find rocksdb include dirs and libraries
# Usage of this module as follows:
# This file defines:
# * ROCKSDB_FOUND if protoc was found
# * ROCKSDB_LIBRARY The lib to link to (currently only a static unix lib, not
# portable)
# * ROCKSDB_INCLUDE The include directories for rocksdb.

include(FindPackageHandleStandardArgs)

# set defaults
SET(_rocksdb_HOME ""/opt/rocksdb"")
SET(_rocksdb_INCLUDE_SEARCH_DIRS
  ${CMAKE_INCLUDE_PATH}
  /usr/local/include
  /usr/include
  /opt/rocksdb/include
)

SET(_rocksdb_LIBRARIES_SEARCH_DIRS
  ${CMAKE_LIBRARY_PATH}
  /usr/local/lib
  /usr/lib
  /opt/rocksdb
)

##
if( ""${ROCKSDB_HOME}"" STREQUAL """")
  if("""" MATCHES ""$ENV{ROCKSDB_HOME}"")
    set (ROCKSDB_HOME ${_rocksdb_HOME})
  else("""" MATCHES ""$ENV{ROCKSDB_HOME}"")
    set (ROCKSDB_HOME ""$ENV{ROCKSDB_HOME}"")
  endif("""" MATCHES ""$ENV{ROCKSDB_HOME}"")
else( ""${ROCKSDB_HOME}"" STREQUAL """")
  message(STATUS ""ROCKSDB_HOME is not empty: \""${ROCKSDB_HOME}\"""")
endif( ""${ROCKSDB_HOME}"" STREQUAL """")
##

IF( NOT ${ROCKSDB_HOME} STREQUAL """" )
  SET(_rocksdb_INCLUDE_SEARCH_DIRS ${ROCKSDB_HOME}/include ${_rocksdb_INCLUDE_SEARCH_DIRS})
  SET(_rocksdb_LIBRARIES_SEARCH_DIRS ${ROCKSDB_HOME}/lib ${_rocksdb_LIBRARIES_SEARCH_DIRS})
  SET(_rocksdb_HOME ${ROCKSDB_HOME})
ENDIF( NOT ${ROCKSDB_HOME} STREQUAL """" )

IF( NOT $ENV{ROCKSDB_INCLUDEDIR} STREQUAL """" )
  SET(_rocksdb_INCLUDE_SEARCH_DIRS $ENV{ROCKSDB_INCLUDEDIR} ${_rocksdb_INCLUDE_SEARCH_DIRS})
ENDIF( NOT $ENV{ROCKSDB_INCLUDEDIR} STREQUAL """" )

IF( NOT $ENV{ROCKSDB_LIBRARYDIR} STREQUAL """" )
  SET(_rocksdb_LIBRARIES_SEARCH_DIRS $ENV{ROCKSDB_LIBRARYDIR} ${_rocksdb_LIBRARIES_SEARCH_DIRS})
ENDIF( NOT $ENV{ROCKSDB_LIBRARYDIR} STREQUAL """" )

IF( ROCKSDB_HOME )
  SET(_rocksdb_INCLUDE_SEARCH_DIRS ${ROCKSDB_HOME}/include ${_rocksdb_INCLUDE_SEARCH_DIRS})
  SET(_rocksdb_LIBRARIES_SEARCH_DIRS ${ROCKSDB_HOME}/lib ${_rocksdb_LIBRARIES_SEARCH_DIRS})
  SET(_rocksdb_HOME ${ROCKSDB_HOME})
ENDIF( ROCKSDB_HOME )

# find the include files
FIND_PATH(ROCKSDB_INCLUDE_DIR rocksdb/db.h
  HINTS
  ${_rocksdb_INCLUDE_SEARCH_DIRS}
  ${PC_ROCKSDB_INCLUDEDIR}
  ${PC_ROCKSDB_INCLUDE_DIRS}
  ${CMAKE_INCLUDE_PATH}
)

# locate the library
if(${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"")
  # On MacOS
  set(ROCKSDB_LIBRARY_NAMES librocksdb.dylib)
  set(ROCKSDB_LITE_LIBRARY_NAMES librocksdb_lite.dylib)
elseif(${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")
  # On Linux
  set(ROCKSDB_LIBRARY_NAMES librocksdb.so)
  set(ROCKSDB_LITE_LIBRARY_NAMES librocksdb_lite.so)
else()
  set(ROCKSDB_LIBRARY_NAMES librocksdb.a)
  set(ROCKSDB_LITE_LIBRARY_NAMES librocksdb_lite.a)
endif()

set(ROCKSDB_STATIC_LIBRARY_NAMES librocksdb.a)
set(ROCKSDB_LITE_STATIC_LIBRARY_NAMES librocksdb_lite.a)

find_library(ROCKSDB_LIBRARIES NAMES ${ROCKSDB_LIBRARY_NAMES}
  HINTS ${_rocksdb_LIBRARIES_SEARCH_DIRS}
)

find_library(ROCKSDB_LITE_LIBRARIES NAMES ${ROCKSDB_LITE_LIBRARY_NAMES}
  HINTS ${_rocksdb_LIBRARIES_SEARCH_DIRS}
)

find_library(ROCKSDB_STATIC_LIBRARY NAMES ${ROCKSDB_STATIC_LIBRARY_NAMES}
  HINTS ${_rocksdb_LIBRARIES_SEARCH_DIRS}
)

find_library(ROCKSDB_LITE_STATIC_LIBRARY NAMES ${ROCKSDB_LITE_STATIC_LIBRARY_NAMES}
  HINTS ${_rocksdb_LIBRARIES_SEARCH_DIRS}
)

find_library(ROCKSDB_SNAPPY_LIBRARY NAMES libsnappy.a
  HINTS ${_rocksdb_LIBRARIES_SEARCH_DIRS}
)

# If the lite library was found, override and prefer LITE.
if(NOT ${ROCKSDB_LITE_LIBRARIES} STREQUAL ""ROCKSDB_LITE_LIBRARIES-NOTFOUND"")
  set(ROCKSDB_LIBRARIES ${ROCKSDB_LITE_LIBRARIES})
  set(ROCKSDB_LITE_FOUND ""YES"")
endif()

if(NOT ${ROCKSDB_LITE_STATIC_LIBRARY} STREQUAL ""ROCKSDB_LITE_STATIC_LIBRARY-NOTFOUND"")
  set(ROCKSDB_STATIC_LIBRARY ${ROCKSDB_LITE_STATIC_LIBRARY})
  set(ROCKSDB_LITE_FOUND ""YES"")
endif()

# If shared libraries are not found, fall back to static.
# If not explicitly building using shared libraries, prefer static libraries.
if(${ROCKSDB_LIBRARIES} STREQUAL ""ROCKSDB_LIBRARIES-NOTFOUND""
    OR NOT DEFINED $ENV{BUILD_LINK_SHARED})
  set(ROCKSDB_LIBRARIES ${ROCKSDB_STATIC_LIBRARY} ${ROCKSDB_SNAPPY_LIBRARY})
  LOG_LIBRARY(rocksdb ""${ROCKSDB_STATIC_LIBRARY}"")
  LOG_LIBRARY(snappy ""${ROCKSDB_SNAPPY_LIBRARY}"")
else()
  LOG_LIBRARY(rocksdb ""${ROCKSDB_LIBRARIES}"")
endif()

# if the include and the program are found then we have it
if(ROCKSDB_INCLUDE_DIR AND ROCKSDB_LIBRARIES)
  set(ROCKSDB_FOUND ""YES"")
endif()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",X9lZUD
code,"## feature detection
find_package(Threads)
find_package(ZLIB REQUIRED)

option(USE_BDB ""Build some tools and tests with bdb (requires a proper BerkeleyDB include directory and library)."" ON)
if(USE_BDB)
  find_package(BDB REQUIRED)
endif()

option(USE_VALGRIND ""Build to run safely under valgrind (often slower)."" ON)
if(USE_VALGRIND)
  find_package(Valgrind REQUIRED)
endif()

option(TOKU_DEBUG_PARANOID ""Enable paranoid asserts."" ON)

include(CheckIncludeFiles)

## check for some include files
check_include_files(alloca.h HAVE_ALLOCA_H)
check_include_files(arpa/inet.h HAVE_ARPA_INET_H)
check_include_files(byteswap.h HAVE_BYTESWAP_H)
check_include_files(endian.h HAVE_ENDIAN_H)
check_include_files(fcntl.h HAVE_FCNTL_H)
check_include_files(inttypes.h HAVE_INTTYPES_H)
check_include_files(libkern/OSAtomic.h HAVE_LIBKERN_OSATOMIC_H)
check_include_files(libkern/OSByteOrder.h HAVE_LIBKERN_OSBYTEORDER_H)
check_include_files(limits.h HAVE_LIMITS_H)
check_include_files(machine/endian.h HAVE_MACHINE_ENDIAN_H)
check_include_files(malloc.h HAVE_MALLOC_H)
check_include_files(malloc/malloc.h HAVE_MALLOC_MALLOC_H)
check_include_files(malloc_np.h HAVE_MALLOC_NP_H)
check_include_files(pthread.h HAVE_PTHREAD_H)
check_include_files(pthread_np.h HAVE_PTHREAD_NP_H)
check_include_files(stdint.h HAVE_STDINT_H)
check_include_files(stdlib.h HAVE_STDLIB_H)
check_include_files(string.h HAVE_STRING_H)
check_include_files(syscall.h HAVE_SYSCALL_H)
check_include_files(sys/endian.h HAVE_SYS_ENDIAN_H)
check_include_files(sys/file.h HAVE_SYS_FILE_H)
check_include_files(sys/malloc.h HAVE_SYS_MALLOC_H)
check_include_files(sys/prctl.h HAVE_SYS_PRCTL_H)
check_include_files(sys/resource.h HAVE_SYS_RESOURCE_H)
check_include_files(sys/statvfs.h HAVE_SYS_STATVFS_H)
check_include_files(sys/syscall.h HAVE_SYS_SYSCALL_H)
check_include_files(sys/sysctl.h HAVE_SYS_SYSCTL_H)
check_include_files(sys/syslimits.h HAVE_SYS_SYSLIMITS_H)
check_include_files(sys/time.h HAVE_SYS_TIME_H)
check_include_files(unistd.h HAVE_UNISTD_H)

include(CheckSymbolExists)

## check whether we can set the mmap threshold like we can in gnu libc's malloc
check_symbol_exists(M_MMAP_THRESHOLD ""malloc.h"" HAVE_M_MMAP_THRESHOLD)
## check whether we have CLOCK_REALTIME
check_symbol_exists(CLOCK_REALTIME ""time.h"" HAVE_CLOCK_REALTIME)
## check how to do direct I/O
if (NOT CMAKE_SYSTEM_NAME STREQUAL FreeBSD)
  set(CMAKE_REQUIRED_DEFINITIONS -D_GNU_SOURCE)
endif ()
check_symbol_exists(O_DIRECT ""fcntl.h"" HAVE_O_DIRECT)
check_symbol_exists(F_NOCACHE ""fcntl.h"" HAVE_F_NOCACHE)
check_symbol_exists(MAP_ANONYMOUS ""sys/mman.h"" HAVE_MAP_ANONYMOUS)
check_symbol_exists(PR_SET_PTRACER ""sys/prctl.h"" HAVE_PR_SET_PTRACER)
check_symbol_exists(PR_SET_PTRACER_ANY ""sys/prctl.h"" HAVE_PR_SET_PTRACER_ANY)

include(CheckFunctionExists)

## check for the right way to get the actual allocation size of a pointer
check_function_exists(malloc_size HAVE_MALLOC_SIZE)
check_function_exists(malloc_usable_size HAVE_MALLOC_USABLE_SIZE)
## check whether we have memalign or valloc (a weak substitute for memalign on darwin)
check_function_exists(memalign HAVE_MEMALIGN)
check_function_exists(valloc HAVE_VALLOC)
## check whether we have random_r or nrand48 to use as a reentrant random function
check_function_exists(nrand48 HAVE_NRAND48)
check_function_exists(random_r HAVE_RANDOM_R)
check_function_exists(mincore HAVE_MINCORE)

## clear this out in case mysql modified it
set(CMAKE_REQUIRED_LIBRARIES """")
set(EXTRA_SYSTEM_LIBS """")
check_function_exists(dlsym HAVE_DLSYM_WITHOUT_DL)
if (NOT HAVE_DLSYM_WITHOUT_DL)
  set(CMAKE_REQUIRED_LIBRARIES dl)
  check_function_exists(dlsym HAVE_DLSYM_WITH_DL)
  if (HAVE_DLSYM_WITH_DL)
    list(APPEND EXTRA_SYSTEM_LIBS dl)
  else ()
    message(FATAL_ERROR ""Cannot find dlsym(), even with -ldl."")
  endif ()
endif ()
check_function_exists(backtrace HAVE_BACKTRACE_WITHOUT_EXECINFO)
if (NOT HAVE_BACKTRACE_WITHOUT_EXECINFO)
  set(CMAKE_REQUIRED_LIBRARIES execinfo)
  check_function_exists(backtrace HAVE_BACKTRACE_WITH_EXECINFO)
  if (HAVE_BACKTRACE_WITH_EXECINFO)
    list(APPEND EXTRA_SYSTEM_LIBS execinfo)
  else ()
    message(FATAL_ERROR ""Cannot find backtrace(), even with -lexecinfo."")
  endif ()
endif ()

if(HAVE_CLOCK_REALTIME)
  list(APPEND EXTRA_SYSTEM_LIBS rt)
else()
  list(APPEND EXTRA_SYSTEM_LIBS System)
endif()

set(CMAKE_REQUIRED_LIBRARIES pthread)
## check whether we can change rwlock preference
check_function_exists(pthread_rwlockattr_setkind_np HAVE_PTHREAD_RWLOCKATTR_SETKIND_NP)
## check for the right way to yield using pthreads
check_function_exists(pthread_yield HAVE_PTHREAD_YIELD)
check_function_exists(pthread_yield_np HAVE_PTHREAD_YIELD_NP)
## check if we have pthread_getthreadid_np() (i.e. freebsd)
check_function_exists(pthread_getthreadid_np HAVE_PTHREAD_GETTHREADID_NP)

include(CheckCSourceCompiles)

if (HAVE_PTHREAD_YIELD)
  include(CheckPrototypeDefinition)

  check_prototype_definition(pthread_yield ""void pthread_yield(void)"" 0 ""pthread.h"" PTHREAD_YIELD_RETURNS_VOID)
  check_c_source_compiles(""#include <pthread.h>
int main(void) {
  int r = pthread_yield();
  return r;
}"" PTHREAD_YIELD_RETURNS_INT)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vmiL6T
code,"#.rst:
# FindFLTK2
# ---------
#
# Find the native FLTK2 includes and library
#
# The following settings are defined
#
# ::
#
#   FLTK2_FLUID_EXECUTABLE, where to find the Fluid tool
#   FLTK2_WRAP_UI, This enables the FLTK2_WRAP_UI command
#   FLTK2_INCLUDE_DIR, where to find include files
#   FLTK2_LIBRARIES, list of fltk2 libraries
#   FLTK2_FOUND, Don't use FLTK2 if false.
#
# The following settings should not be used in general.
#
# ::
#
#   FLTK2_BASE_LIBRARY   = the full path to fltk2.lib
#   FLTK2_GL_LIBRARY     = the full path to fltk2_gl.lib
#   FLTK2_IMAGES_LIBRARY = the full path to fltk2_images.lib

#=============================================================================
# Copyright 2007-2009 Kitware, Inc.
#
# Distributed under the OSI-approved BSD License (the ""License"");
# see accompanying file Copyright.txt for details.
#
# This software is distributed WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the License for more information.
#=============================================================================
# (To distribute this file outside of CMake, substitute the full
#  License text for the above reference.)

set (FLTK2_DIR $ENV{FLTK2_DIR} )

#  Platform dependent libraries required by FLTK2
if(WIN32)
  if(NOT CYGWIN)
    if(BORLAND)
      set( FLTK2_PLATFORM_DEPENDENT_LIBS import32 )
    else()
      set( FLTK2_PLATFORM_DEPENDENT_LIBS wsock32 comctl32 )
    endif()
  endif()
endif()

if(UNIX)
  include(${CMAKE_ROOT}/Modules/FindX11.cmake)
  set( FLTK2_PLATFORM_DEPENDENT_LIBS ${X11_LIBRARIES} -lm)
endif()

if(APPLE)
  set( FLTK2_PLATFORM_DEPENDENT_LIBS  ""-framework Carbon -framework Cocoa -framework ApplicationServices -lz"")
endif()

# If FLTK2_INCLUDE_DIR is already defined we assign its value to FLTK2_DIR
if(FLTK2_INCLUDE_DIR)
  set(FLTK2_DIR ${FLTK2_INCLUDE_DIR})
else()
  set(FLTK2_INCLUDE_DIR ${FLTK2_DIR})
endif()


# If FLTK2 has been built using CMake we try to find everything directly
set(FLTK2_DIR_STRING ""directory containing FLTK2Config.cmake.  This is either the root of the build tree, or PREFIX/lib/fltk for an installation."")

# Search only if the location is not already known.
if(NOT FLTK2_DIR)
  # Get the system search path as a list.
  file(TO_CMAKE_PATH ""$ENV{PATH}"" FLTK2_DIR_SEARCH2)

  # Construct a set of paths relative to the system search path.
  set(FLTK2_DIR_SEARCH """")
  foreach(dir ${FLTK2_DIR_SEARCH2})
    set(FLTK2_DIR_SEARCH ${FLTK2_DIR_SEARCH} ""${dir}/../lib/fltk"")
  endforeach()
  string(REPLACE ""//"" ""/"" FLTK2_DIR_SEARCH ""${FLTK2_DIR_SEARCH}"")

  #
  # Look for an installation or build tree.
  #
  find_path(FLTK2_DIR FLTK2Config.cmake
    # Look for an environment variable FLTK2_DIR.
    ENV FLTK2_DIR

    # Look in places relative to the system executable search path.
    ${FLTK2_DIR_SEARCH}

    # Look in standard UNIX install locations.
    /usr/local/lib/fltk2
    /usr/lib/fltk2
    /usr/local/fltk2
    /usr/X11R6/include

    # Help the user find it if we cannot.
    DOC ""The ${FLTK2_DIR_STRING}""
    )

  if(NOT FLTK2_DIR)
    find_path(FLTK2_DIR fltk/run.h ${FLTK2_INCLUDE_SEARCH_PATH})
  endif()

endif()


# If FLTK2 was found, load the configuration file to get the rest of the
# settings.
if(FLTK2_DIR)

  # Check if FLTK2 was built using CMake
  if(EXISTS ${FLTK2_DIR}/FLTK2Config.cmake)
    set(FLTK2_BUILT_WITH_CMAKE 1)
  endif()

  if(FLTK2_BUILT_WITH_CMAKE)
    set(FLTK2_FOUND 1)
    include(${FLTK2_DIR}/FLTK2Config.cmake)

    # Fluid
    if(FLUID_COMMAND)
      set(FLTK2_FLUID_EXECUTABLE ${FLUID_COMMAND} CACHE FILEPATH ""Fluid executable"")
    else()
      find_program(FLTK2_FLUID_EXECUTABLE fluid2 PATHS
        ${FLTK2_EXECUTABLE_DIRS}
        ${FLTK2_EXECUTABLE_DIRS}/RelWithDebInfo
        ${FLTK2_EXECUTABLE_DIRS}/Debug
        ${FLTK2_EXECUTABLE_DIRS}/Release
        NO_SYSTEM_PATH)
    endif()

    mark_as_advanced(FLTK2_FLUID_EXECUTABLE)
    set( FLTK_FLUID_EXECUTABLE ${FLTK2_FLUID_EXECUTABLE} )




    set(FLTK2_INCLUDE_DIR ${FLTK2_DIR})
    link_directories(${FLTK2_LIBRARY_DIRS})

    set(FLTK2_BASE_LIBRARY fltk2)
    set(FLTK2_GL_LIBRARY fltk2_gl)
    set(FLTK2_IMAGES_LIBRARY fltk2_images)

    # Add the extra libraries
    load_cache(${FLTK2_DIR}
      READ_WITH_PREFIX
      FL FLTK2_USE_SYSTEM_JPEG
      FL FLTK2_USE_SYSTEM_PNG
      FL FLTK2_USE_SYSTEM_ZLIB
      )

    set(FLTK2_IMAGES_LIBS """")
    if(FLFLTK2_USE_SYSTEM_JPEG)
      set(FLTK2_IMAGES_LIBS ${FLTK2_IMAGES_LIBS} fltk2_jpeg)
    endif()
    if(FLFLTK2_USE_SYSTEM_PNG)
      set(FLTK2_IMAGES_LIBS ${FLTK2_IMAGES_LIBS} fltk2_png)
    endif()
    if(FLFLTK2_USE_SYSTEM_ZLIB)
      set(FLTK2_IMAGES_LIBS ${FLTK2_IMAGES_LIBS} fltk2_zlib)
    endif()
    set(FLTK2_IMAGES_LIBS ""${FLTK2_IMAGES_LIBS}"" CACHE INTERNAL
      ""Extra libraries for fltk2_images library."")

  else()

    # if FLTK2 was not built using CMake
    # Find fluid executable.
    find_program(FLTK2_FLUID_EXECUTABLE fluid2 ${FLTK2_INCLUDE_DIR}/fluid)

    # Use location of fluid to help find everything else.
    set(FLTK2_INCLUDE_SEARCH_PATH """")
    set(FLTK2_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",C5XzC5
code,"# CMAKE generated file: DO NOT EDIT!
# Generated by ""Unix Makefiles"" Generator, CMake Version 2.8

# Relative path conversion top directories.
SET(CMAKE_RELATIVE_PATH_TOP_SOURCE ""/ufs/dijkstra/Projects/SomaticMutationCalling/cmake_add"")
SET(CMAKE_RELATIVE_PATH_TOP_BINARY ""/ufs/dijkstra/Projects/SomaticMutationCalling/cmake_add"")

# Force unix paths in dependencies.
SET(CMAKE_FORCE_UNIX_PATHS 1)


# The C and CXX include file regular expressions for this directory.
SET(CMAKE_C_INCLUDE_REGEX_SCAN ""^.*$"")
SET(CMAKE_C_INCLUDE_REGEX_COMPLAIN ""^$"")
SET(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
SET(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",K_cBHz
code,"# Copyright (c) 2013, Ruslan Baratov
# All rights reserved.

if(DEFINED POLLY_UTILITIES_COMMON_CMAKE)
  return()
else()
  set(POLLY_UTILITIES_COMMON_CMAKE 1)
endif()

option(POLLY_STATUS_PRINT ""Print process messages"" ON)
option(POLLY_STATUS_DEBUG ""Print all process messages"" OFF)

# Add extra cmake modules
include(""${CMAKE_CURRENT_LIST_DIR}/polly_module_path.cmake"")

include(polly_fatal_error)
include(polly_status_debug)
include(polly_status_print)

# All well-known variables must be CACHE type:
#     http://www.cmake.org/pipermail/cmake/2012-January/048429.html

# Check and print customization variables
if(NOT POLLY_TOOLCHAIN_NAME)
  polly_fatal_error(""POLLY_TOOLCHAIN_NAME is empty"")
endif()

if(NOT POLLY_TOOLCHAIN_TAG)
  polly_fatal_error(""POLLY_TOOLCHAIN_TAG is empty"")
endif()

polly_status_print(""Used toolchain: ${POLLY_TOOLCHAIN_NAME}"")
polly_status_debug(""Used tag: ${POLLY_TOOLCHAIN_TAG}"")

# support for hunter (github.com/ruslo/hunter)
set(HUNTER_INSTALL_TAG ${POLLY_TOOLCHAIN_TAG})

# Other
if(NOT CMAKE_DEBUG_POSTFIX)
  polly_status_debug(""CMAKE_DEBUG_POSTFIX is empty"")
  set(
      CMAKE_DEBUG_POSTFIX
      ""d""
      CACHE
      STRING
      ""Debug postfix (e.g. libmy.a libmyd.a)""
  )
  polly_status_debug(""CMAKE_DEBUG_POSTFIX set to '${CMAKE_DEBUG_POSTFIX}'"")
endif()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xnl08_
code,"#.rst:
# FindBoost
# ---------
#
# Find Boost include dirs and libraries
#
# Use this module by invoking find_package with the form::
#
#   find_package(Boost
#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.36.0
#     [REQUIRED]             # Fail with error if Boost is not found
#     [COMPONENTS <libs>...] # Boost libraries by their canonical name
#     )                      # e.g. ""date_time"" for ""libboost_date_time""
#
# This module finds headers and requested component libraries OR a CMake
# package configuration file provided by a ""Boost CMake"" build.  For the
# latter case skip to the ""Boost CMake"" section below.  For the former
# case results are reported in variables::
#
#   Boost_FOUND            - True if headers and requested libraries were found
#   Boost_INCLUDE_DIRS     - Boost include directories
#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries
#   Boost_LIBRARIES        - Boost component libraries to be linked
#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)
#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include
#                            target_link_libraries debug/optimized keywords)
#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp
#   Boost_LIB_VERSION      - Version string appended to library filenames
#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)
#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)
#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)
#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)
#                          - Pass to add_definitions() to have diagnostic
#                            information about Boost's automatic linking
#                            displayed during compilation
#
# This module reads hints about search locations from variables::
#
#   BOOST_ROOT             - Preferred installation prefix
#    (or BOOSTROOT)
#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include
#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib
#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not
#                            specified by these hint variables. Default is OFF.
#   Boost_ADDITIONAL_VERSIONS
#                          - List of Boost versions not known to this module
#                            (Boost install locations may contain the version)
#
# and saves search results persistently in CMake cache entries::
#
#   Boost_INCLUDE_DIR         - Directory containing Boost headers
#   Boost_LIBRARY_DIR         - Directory containing Boost libraries
#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant
#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant
#
# Users may set these hints or results as cache entries.  Projects
# should not read these entries directly but instead use the above
# result variables.  Note that some hint names start in upper-case
# ""BOOST"".  One may specify these as environment variables if they are
# not specified as CMake variables or cache entries.
#
# This module first searches for the Boost header files using the above
# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in
# Boost_INCLUDE_DIR.  Then it searches for requested component libraries
# using the above hints (excluding BOOST_INCLUDEDIR and
# Boost_ADDITIONAL_VERSIONS), ""lib"" directories near Boost_INCLUDE_DIR,
# and the library name configuration settings below.  It saves the
# library directory in Boost_LIBRARY_DIR and individual library
# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.
# When one changes settings used by previous searches in the same build
# tree (excluding environment variables) this module discards previous
# search results affected by the changes and searches again.
#
# Boost libraries come in many variants encoded in their file name.
# Users or projects may tell this module which variant to find by
# setting variables::
#
#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded
#                              libraries ('mt' tag).  Default is ON.
#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static
#                              libraries.  Default is OFF.
#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use
#                              libraries linked statically to the C++ runtime
#                              ('s' tag).  Default is platform dependent.
#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use
#                              libraries linked to the MS debug C++ runtime
#                              ('g' tag).  Default is ON.
#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a
#                              debug Python build ('y' tag). Default is OFF.
#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with
#                              STLPort ('p' tag).  Default is OFF.
#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS
#                            - S",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hOv4re
code," ################################################################################
 #    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #
 #                                                                              #
 #              This software is distributed under the terms of the             # 
 #         GNU Lesser General Public Licence version 3 (LGPL) version 3,        #  
 #                  copied verbatim in the file ""LICENSE""                       #
 ################################################################################
# -*- mode: cmake -*-

#message("" -- Read CTestCustom.cmake --"")

# -----------------------------------------------------------
# -- Number of warnings to display
# -----------------------------------------------------------

set(CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS ""500"" )

# -----------------------------------------------------------
# -- Number of errors to display
# -----------------------------------------------------------

set(CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS   ""50"" )

# -----------------------------------------------------------
# -- Warning execptions
# -----------------------------------------------------------

set(CTEST_CUSTOM_WARNING_EXCEPTION
	${CTEST_CUSTOM_WARNING_EXCEPTION}


        # -- warnings from ubuntu systems which are a little to much
        # -- probably defined warn-unused-result. ignoring the result
        # -- of fgets is common practice. A work around would be to
        # -- store the return value in a dummy variable
        ""ignoring return value of 'char* fgets(char*, int, FILE*)'""
        ""ignoring return value of 'char* fscanf(char*, int, FILE*)'""

        # boost warnings related to -Weffc++ are now 
        # switched off in the code using preprocessor statements
        # which changes the compiler flags fro the problematic
        # part of the code

        # filter warnings from generated files 
        ""FairTestDetectorPayload.pb""
        ""Tuto7Payload.pb""
        ""G__.*Dict""
  )

# -----------------------------------------------------------
# -- Warning addon's
# -----------------------------------------------------------
set(CTEST_CUSTOM_WARNING_MATCH	${CTEST_CUSTOM_WARNING_MATCH}
	)

Set (CTEST_CUSTOM_COVERAGE_EXCLUDE
     "".*Dict.h""
     "".*Dict.cxx""
     "".*GTest.*""
    )

# -----------------------------------------------------------
# -- Error execptions
# -- Get rid of boost warnings which are misinterpreted as errors
# -----------------------------------------------------------

Set(CTEST_CUSTOM_ERROR_EXCEPTION
	${CTEST_CUSTOM_ERROR_EXCEPTION}
        ""/include/boost/""
)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",D1lYAq
code,"################################################################################
#
# CMake macro for generating a properties file suitable for Visual Studio
# MSbuild projects.
#
# Copyright (c) 2015, Kalycito Infotech Private Limited
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the copyright holders nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
################################################################################
MACRO(GEN_VS_FILE_LIST IN_SRC_LIST RES_SRC_LIST)

    SET(TMP_RESULT ""  <ItemGroup>\n"")

    FOREACH(SRC_FILE IN ITEMS ${IN_SRC_LIST})
        GET_FILENAME_COMPONENT(SRC_NAME ${SRC_FILE} NAME)
        SET(TMP_RESULT ""${TMP_RESULT}    <ClCompile Include=\""${SRC_FILE}\"" />\n"")
    ENDFOREACH()

    SET(TMP_RESULT ""${TMP_RESULT}  </ItemGroup>\n"")
    # Add to result list
    SET(${RES_SRC_LIST} ${TMP_RESULT})
    MESSAGE(STATUS ""Source list generated"")
ENDMACRO()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sza6bC
code,"# The set of languages for which implicit dependencies are needed:
SET(CMAKE_DEPENDS_LANGUAGES
  ""CXX""
  )
# The set of files for implicit dependencies of each language:
SET(CMAKE_DEPENDS_CHECK_CXX
  ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/src/third_party/jsoncpp/json_reader.cpp"" ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/build/src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_reader.cpp.o""
  ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/src/third_party/jsoncpp/json_value.cpp"" ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/build/src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_value.cpp.o""
  ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/src/third_party/jsoncpp/json_writer.cpp"" ""/home/gosuzombie/Desktop/pipeline/tools/freebayes/bamtools/build/src/third_party/jsoncpp/CMakeFiles/jsoncpp.dir/json_writer.cpp.o""
  )
SET(CMAKE_CXX_COMPILER_ID ""GNU"")

# Preprocessor definitions for this target.
SET(CMAKE_TARGET_DEFINITIONS
  ""BAMTOOLS_JSONCPP_LIBRARY""
  ""_FILE_OFFSET_BITS=64""
  )

# Targets to which this target links.
SET(CMAKE_TARGET_LINKED_INFO_FILES
  )

# The include file search paths:
SET(CMAKE_C_TARGET_INCLUDE_PATH
  ""../src""
  )
SET(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
SET(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
SET(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",n8L_Wo
code,"# - Try to find the link-grammar library; Once done this will define
#
#  LINK_GRAMMAR_FOUND - system has the link-grammar library
#  LINK_GRAMMAR_INCLUDE_DIRS - the link-grammar include directory
#  LINK_GRAMMAR_LIBRARIES - The libraries needed to use link-grammar
#  LINK_GRAMMAR_DATA_DIR - the dir where you will find the dictionaries

# Copyright (c) 2008 OpenCog.org (http://opencog.org)
# Copyright (c) 2014 Linas Vepstas
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Look for the header file
FIND_PATH(LINK_GRAMMAR_INCLUDE_DIR link-grammar/link-includes.h)
FIND_PATH(LINK_GRAMMAR_DATA_DIR 4.0.dict
	PATHS 
		/usr/share/link-grammar/en/
		/usr/local/share/link-grammar/en/
		/opt/local/share/link-grammar/en/
	PATH_SUFFIXES share/link-grammar/en/ )

# Look for the library
FIND_LIBRARY(LINK_GRAMMAR_LIBRARY
	NAMES
		link-grammar
	PATHS
		/usr/lib 
		/usr/local/lib
		/opt/link-grammar/lib
		/opt/local/lib)

# Copy the results to the output variables.
IF (LINK_GRAMMAR_INCLUDE_DIR AND LINK_GRAMMAR_LIBRARY AND LINK_GRAMMAR_DATA_DIR)
	SET(LINK_GRAMMAR_FOUND 1)
	SET(LINK_GRAMMAR_LIBRARIES ${LINK_GRAMMAR_LIBRARY})
	SET(LINK_GRAMMAR_INCLUDE_DIRS ${LINK_GRAMMAR_INCLUDE_DIR})
ELSE (LINK_GRAMMAR_INCLUDE_DIR AND LINK_GRAMMAR_LIBRARY AND LINK_GRAMMAR_DATA_DIR)
	SET(LINK_GRAMMAR_FOUND 0)
	SET(LINK_GRAMMAR_LIBRARIES)
	SET(LINK_GRAMMAR_INCLUDE_DIRS)
ENDIF (LINK_GRAMMAR_INCLUDE_DIR AND LINK_GRAMMAR_LIBRARY AND LINK_GRAMMAR_DATA_DIR)

# check link-grammar's version if we're using cmake >= 2.6
IF(LINK_GRAMMAR_INCLUDE_DIR AND NOT CMAKE_MAJOR_VERSION LESS 2 AND NOT CMAKE_MINOR_VERSION LESS 6)
	SET(LG_VERSION_MAJOR 0)
	SET(LG_VERSION_MINOR 0)
	SET(LG_VERSION_PATCH 0)

	# Extract the version from the 'version.h' file
	FILE(READ ""${LINK_GRAMMAR_INCLUDE_DIR}/link-grammar/link-features.h"" _LG_FEAT_H_CONTENTS)

	STRING(REGEX MATCH ""#define LINK_MAJOR_VERSION[	 ]+([0-9]+)"" _MATCH ""${_LG_FEAT_H_CONTENTS}"")
	SET(LG_VERSION_MAJOR ${CMAKE_MATCH_1})
	STRING(REGEX MATCH ""#define LINK_MINOR_VERSION[	 ]+([0-9]+)"" _MATCH ""${_LG_FEAT_H_CONTENTS}"")
	SET(LG_VERSION_MINOR ${CMAKE_MATCH_1})
	STRING(REGEX MATCH ""#define LINK_MICRO_VERSION[	 ]+([0-9]+)"" _MATCH ""${_LG_FEAT_H_CONTENTS}"")
	SET(LG_VERSION_PATCH ${CMAKE_MATCH_1})

	SET(LG_VERSION ""${LG_VERSION_MAJOR}.${LG_VERSION_MINOR}.${LG_VERSION_PATCH}"")

	# Check found version against required one
	IF (DEFINED LinkGrammar_FIND_VERSION AND ${LG_VERSION} VERSION_LESS LinkGrammar_FIND_VERSION)
		SET(LINK_GRAMMAR_FOUND FALSE)
	ELSE ()
		SET(LINK_GRAMMAR_FOUND TRUE)
	ENDIF ()
ENDIF(LINK_GRAMMAR_INCLUDE_DIR AND NOT CMAKE_MAJOR_VERSION LESS 2 AND NOT CMAKE_MINOR_VERSION LESS 6)

IF (LinkGrammar_FIND_VERSION)
	SET(_LG_VERSION_MESSAGE_STRING ""(${LG_VERSION} >= ${LinkGrammar_FIND_VERSION})"")
ENDIF (LinkGrammar_FIND_VERSION)

# Report the results.
IF (LINK_GRAMMAR_FOUND)
	IF (NOT LINK_GRAMMAR_FIND_QUIETLY)
		MESSAGE(STATUS ""Link Grammar ${_LG_VERSION_MESSAGE_STRING} found."")
	ENDIF (NOT LINK_GRAMMAR_FIND_QUIETLY)
ELSE (LINK_GRAMMAR_FOUND)
	SET(LINK_GRAMMAR_DIR_MESSAGE
		""link-grammar${_LG_VERSION_MESSAGE_STRING} was not found. Make sure LINK_GRAMMAR_LIBRARY, LINK_GRAMMAR_INCLUDE_DIR and LINK_GRAMMAR_DATA_DIR are set."")
	IF (NOT LINK_GRAMMAR_FIND_QUIETLY)
		MESSAGE(STATUS ""${LINK_GRAMMAR_DIR_MESSAGE}"")
	ELSE (NOT LINK_GRAMMAR_FIND_QUIETLY)
		IF (LINK_GRAMMAR_FIND_REQUIRED)
			MESSAGE(FATAL_ERROR ""${LINK_GRAMMAR_DIR_MESSAGE}"")
		ENDIF (LINK_GRAMMAR_FIND_REQUIRED)
	ENDIF (NOT LINK_GRAMMAR_FIND_QUIETLY)
ENDIF (LINK_GRAMMAR_FOUND)

MARK_AS_ADVANCED(
	LINK_GRAMMAR_INCLUDE_DIR
	LINK_GRAMMAR_LIBRARY
)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1bZYTE
code,"set(_CATKIN_CURRENT_PACKAGE ""translator"")
set(translator_VERSION ""0.0.0"")
set(translator_MAINTAINER ""jorge <jorge@todo.todo>"")
set(translator_PACKAGE_FORMAT ""1"")
set(translator_BUILD_DEPENDS ""message_generation"" ""roscpp"" ""rospy"" ""std_msgs"" ""sensor_msgs"")
set(translator_BUILD_EXPORT_DEPENDS ""roscpp"" ""rospy"" ""std_msgs"")
set(translator_BUILDTOOL_DEPENDS ""catkin"")
set(translator_BUILDTOOL_EXPORT_DEPENDS )
set(translator_EXEC_DEPENDS ""roscpp"" ""rospy"" ""std_msgs"")
set(translator_RUN_DEPENDS ""roscpp"" ""rospy"" ""std_msgs"")
set(translator_TEST_DEPENDS )
set(translator_DOC_DEPENDS )
set(translator_DEPRECATED """")",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dWL9-l
code,"# IMPORTANT: FILES_H must be set under """"
macro( _install_library LIBRARY_NAME FILES_H HEADER_DESTINATION ) 
  set_target_properties(${LIBRARY_NAME} PROPERTIES PUBLIC_HEADER ""${FILES_H}"")
  install(TARGETS ${LIBRARY_NAME}
    # IMPORTANT: Add the library to the ""export-set""
    EXPORT ${PROJECT_NAME}Targets
    RUNTIME DESTINATION ""${INSTALL_BIN_DIR}"" COMPONENT bin
    LIBRARY DESTINATION ""${INSTALL_LIB_DIR}"" COMPONENT shlib
    PUBLIC_HEADER DESTINATION ""${INSTALL_INCLUDE_DIR}/${HEADER_DESTINATION}""
    COMPONENT dev)
  set(EXPORT_LIBS ""${EXPORT_LIBS} ${LIBRARY_NAME}"" CACHE INTERNAL ""libraries to export"") 
endmacro( _install_library ) 

macro( _install_binary BINARY_NAME)
  install (TARGETS ${BINARY_NAME} DESTINATION ${INSTALL_BIN_DIR})
endmacro( _install_binary)

macro( _doxygen)
  # add a target to generate API documentation with Doxygen
  find_package(Doxygen)
  if(DOXYGEN_FOUND)
    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    add_custom_target(doc
      ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
      WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
      COMMENT ""Generating API documentation with Doxygen"" VERBATIM
    )
  endif()
endmacro( _doxygen)


macro( _installation_destinations)
  # Offer the user the choice of overriding the installation directories
  set(INSTALL_LIB_DIR lib CACHE PATH ""Installation directory for libraries"")
  set(INSTALL_BIN_DIR bin CACHE PATH ""Installation directory for executables"")
  set(INSTALL_INCLUDE_DIR include CACHE PATH ""Installation directory for header files"")
  if(WIN32 AND NOT CYGWIN)
    set(DEF_INSTALL_CMAKE_DIR CMake)
  else()
    set(DEF_INSTALL_CMAKE_DIR lib/CMake/${PROJECT_NAME})
  endif()
  set(INSTALL_CMAKE_DIR ${DEF_INSTALL_CMAKE_DIR} CACHE PATH  ""Installation directory for CMake files"")

endmacro( _installation_destinations)

macro( _uninstall)
  # uninstall target
  configure_file(
      ""${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in""
      ""${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake""
      IMMEDIATE @ONLY)
  add_custom_target(uninstall
      COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)
endmacro( _uninstall)


macro( _generate_find_package)

  # Make relative paths absolute (needed later on)
  foreach(p LIB BIN INCLUDE CMAKE)
    set(var INSTALL_${p}_DIR)
    if(NOT IS_ABSOLUTE ""${${var}}"")
      set(${var} ""${CMAKE_INSTALL_PREFIX}/${${var}}"")
    endif()
  endforeach()


  # Add all targets to the build-tree export set
  foreach(val ${EXPORT_LIBS})
    export(TARGETS ${EXPORT_LIB}  FILE ""${PROJECT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake"")
  endforeach()

  
  # Export the package for use from the build-tree
  # (this registers the build-tree with a global CMake-registry)
  export(PACKAGE ${PROJECT_NAME})
  
  # Create the ${PROJECT_NAME}Config.cmake and ${PROJECT_NAME}ConfigVersion files
  file(RELATIVE_PATH REL_INCLUDE_DIR ""${INSTALL_CMAKE_DIR}""  ""${INSTALL_INCLUDE_DIR}"")
  # ... for the build tree
  set(CONF_INCLUDE_DIRS ""${PROJECT_SOURCE_DIR}"" ""${PROJECT_BINARY_DIR}"")
  configure_file(Config.cmake.in ""${PROJECT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"" @ONLY)
  # ... for the install tree
  set(CONF_INCLUDE_DIRS ""\${${PROJECT_NAME}_CMAKE_DIR}/${REL_INCLUDE_DIR}"")
  configure_file(Config.cmake.in ""${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${PROJECT_NAME}Config.cmake"" @ONLY)
  # ... for both
  configure_file(ConfigVersion.cmake.in ""${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"" @ONLY)
  
  # Install the Config.cmake and ConfigVersion.cmake
  install(FILES
    ""${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/${PROJECT_NAME}Config.cmake""
    ""${PROJECT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake""
    DESTINATION ""${INSTALL_CMAKE_DIR}"" COMPONENT dev)

endmacro( _generate_find_package)

macro( _output_prefix)
  #prefixes for libs and binaries
  string(TOLOWER ""${PROJECT_NAME}_"" PREFIX_LIB)
  string(TOLOWER ""${PROJECT_NAME}-"" PREFIX_BIN)
endmacro( _output_prefix)

macro( _set_output_paths)
  # place executeables into a bin folder
  SET(EXECUTABLE_OUTPUT_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/bin"")
  # place libraries into a lib folder
  SET(LIBRARY_OUTPUT_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/lib"")
  # reset export libs
  set(EXPORT_LIBS """" CACHE INTERNAL ""libraries to export"") 
endmacro( _set_output_paths)

macro( _version MAJOR MINOR PATCH)
  set(${PROJECT_NAME}_MAJOR_VERSION ${MAJOR})
  set(${PROJECT_NAME}_MINOR_VERSION ${MINOR})
  set(${PROJECT_NAME}_PATCH_VERSION ${PATCH})
  set(PACKAGE_VERSION ${MAJOR}.${MINOR}.${MINOR})
endmacro( _version)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uDarNL
code,"# ===================================================================================
#  The OpenCV CMake configuration file
#
#             ** File generated automatically, do not modify **
#
#  Usage from an external project:
#    In your CMakeLists.txt, add these lines:
#
#    FIND_PACKAGE(OpenCV REQUIRED)
#    TARGET_LINK_LIBRARIES(MY_TARGET_NAME ${OpenCV_LIBS})
#
#    Or you can search for specific OpenCV modules:
#
#    FIND_PACKAGE(OpenCV REQUIRED core highgui)
#
#    If the module is found then OPENCV_<MODULE>_FOUND is set to TRUE.
#
#    This file will define the following variables:
#      - OpenCV_LIBS                     : The list of all imported targets for OpenCV modules.
#      - OpenCV_INCLUDE_DIRS             : The OpenCV include directories.
#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability.
#      - OpenCV_ANDROID_NATIVE_API_LEVEL : Minimum required level of Android API.
#      - OpenCV_VERSION                  : The version of this OpenCV build: ""2.4.10""
#      - OpenCV_VERSION_MAJOR            : Major version part of OpenCV_VERSION: ""2""
#      - OpenCV_VERSION_MINOR            : Minor version part of OpenCV_VERSION: ""4""
#      - OpenCV_VERSION_PATCH            : Patch version part of OpenCV_VERSION: ""10""
#      - OpenCV_VERSION_TWEAK            : Tweak version part of OpenCV_VERSION: ""0""
#
#    Advanced variables:
#      - OpenCV_SHARED                   : Use OpenCV as shared library
#      - OpenCV_CONFIG_PATH              : Path to this OpenCVConfig.cmake
#      - OpenCV_INSTALL_PATH             : OpenCV location (not set on Windows)
#      - OpenCV_LIB_COMPONENTS           : Present OpenCV modules list
#      - OpenCV_USE_MANGLED_PATHS        : Mangled OpenCV path flag
#      - OpenCV_MODULES_SUFFIX           : The suffix for OpenCVModules-XXX.cmake file
#      - OpenCV_HAVE_ANDROID_CAMERA      : Presence of Android native camera wrappers
#
# ===================================================================================

if(NOT DEFINED OpenCV_MODULES_SUFFIX)
  if(ANDROID)
    string(REPLACE - _ OpenCV_MODULES_SUFFIX ""_${ANDROID_NDK_ABI_NAME}"")
  else()
    set(OpenCV_MODULES_SUFFIX """")
  endif()
endif()

if(NOT TARGET opencv_core)
  include(${CMAKE_CURRENT_LIST_DIR}/OpenCVModules${OpenCV_MODULES_SUFFIX}.cmake)
endif()

# TODO All things below should be reviewed. What is about of moving this code into related modules (special vars/hooks/files)

# Version Compute Capability from which OpenCV has been compiled is remembered
set(OpenCV_COMPUTE_CAPABILITIES """")

set(OpenCV_CUDA_VERSION )
set(OpenCV_USE_CUBLAS   )
set(OpenCV_USE_CUFFT    )
set(OpenCV_USE_NVCUVID  )

# Android API level from which OpenCV has been compiled is remembered
if(ANDROID)
  set(OpenCV_ANDROID_NATIVE_API_LEVEL 0)
else()
  set(OpenCV_ANDROID_NATIVE_API_LEVEL 0)
endif()

# Some additional settings are required if OpenCV is built as static libs
set(OpenCV_SHARED OFF)

# Enables mangled install paths, that help with side by side installs
set(OpenCV_USE_MANGLED_PATHS FALSE)

# Extract the directory where *this* file has been installed (determined at cmake run-time)
get_filename_component(OpenCV_CONFIG_PATH ""${CMAKE_CURRENT_LIST_FILE}"" PATH CACHE)

if(NOT WIN32 OR ANDROID)
  if(ANDROID)
    set(OpenCV_INSTALL_PATH ""${OpenCV_CONFIG_PATH}/../../.."")
  else()
    set(OpenCV_INSTALL_PATH ""${OpenCV_CONFIG_PATH}/../.."")
  endif()
  # Get the absolute path with no ../.. relative marks, to eliminate implicit linker warnings
  if(${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} VERSION_LESS 2.8)
    get_filename_component(OpenCV_INSTALL_PATH ""${OpenCV_INSTALL_PATH}"" ABSOLUTE)
  else()
    get_filename_component(OpenCV_INSTALL_PATH ""${OpenCV_INSTALL_PATH}"" REALPATH)
  endif()
endif()

# Presence of Android native camera wrappers
set(OpenCV_HAVE_ANDROID_CAMERA OFF)

# ======================================================
# Include directories to add to the user project:
# ======================================================

# Provide the include directories to the caller
set(OpenCV_INCLUDE_DIRS ""${OpenCV_CONFIG_PATH}/include"" ""${OpenCV_CONFIG_PATH}/include/opencv"")
include_directories(${OpenCV_INCLUDE_DIRS})

# ======================================================
# Link directories to add to the user project:
# ======================================================

# Provide the libs directories to the caller
set(OpenCV_LIB_DIR_OPT  CACHE PATH ""Path where release OpenCV libraries are located"")
set(OpenCV_LIB_DIR_DBG  CACHE PATH ""Path where debug OpenCV libraries are located"")
set(OpenCV_3RDPARTY_LIB_DIR_OPT  CACHE PATH ""Path where release 3rdpaty OpenCV dependencies are located"")
set(OpenCV_3RDPARTY_LIB_DIR_DBG  CACHE PATH ""Path where debug 3rdpaty OpenCV dependencies are located"")
mark_as_advanced(FORCE OpenCV_LIB_DIR_OPT OpenCV_LIB_DIR_DBG OpenCV_3RDPARTY_LIB_DIR_OPT OpenCV_3RDPARTY_LIB_DIR_DBG OpenCV_CONFIG_PATH)

# ======================================================
#  Version variables:
# ======================================================
SET(OpenCV_VERSION 2.4.10)
SET(OpenCV_VERSION_MAJOR  2)
SET(Ope",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LtJlJZ
code,"#============================================================================
#
# Copyright (c) Kitware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#============================================================================
################################################################################
#
#  Program: 3D Slicer
#
#  Copyright (c) Kitware, Inc.
#
#  See http://www.slicer.org/copyright/copyright.txt for details.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an ""AS IS"" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  This file was originally developed by Jean-Christophe Fillion-Robin, Kitware, Inc.
#  and was partially funded by NIH grant 3P41RR013218-12S1
#
################################################################################

#
# SlicerBlockSetCMakeOSXVariables
#

#
# Adapted from Paraview/Superbuild/CMakeLists.txt
#

# Note: Change architecture *before* any enable_language() or project()
#       calls so that it's set properly to detect 64-bit-ness, and
#       deployment target for the standard c++ library.
#
if(APPLE)

  # Waiting universal binaries are supported and tested, complain if
  # multiple architectures are specified.
  if(NOT ""${CMAKE_OSX_ARCHITECTURES}"" STREQUAL """")
    list(LENGTH CMAKE_OSX_ARCHITECTURES arch_count)
    if(arch_count GREATER 1)
      message(FATAL_ERROR ""error: Only one value (i386 or x86_64) should be associated with CMAKE_OSX_ARCHITECTURES."")
    endif()
  endif()

  # See CMake/Modules/Platform/Darwin.cmake)
  #   8.x == Mac OSX 10.4 (Tiger)
  #   9.x == Mac OSX 10.5 (Leopard)
  #  10.x == Mac OSX 10.6 (Snow Leopard)
  #  11.x == Mac OSX 10.7 (Lion)
  #  12.x == Mac OSX 10.8 (Mountain Lion)
  #  13.x == Mac OSX 10.9 (Mavericks)
  #  14.x == Mac OSX 10.10 (Yosemite)
  set(OSX_SDK_104_NAME ""Tiger"")
  set(OSX_SDK_105_NAME ""Leopard"")
  set(OSX_SDK_106_NAME ""Snow Leopard"")
  set(OSX_SDK_107_NAME ""Lion"")
  set(OSX_SDK_108_NAME ""Mountain Lion"")
  set(OSX_SDK_109_NAME ""Mavericks"")
  set(OSX_SDK_1010_NAME ""Yosemite"")

set(OSX_SDK_ROOTS
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
    /Developer/SDKs
    )

  # Explicitly set the OSX_SYSROOT to the latest one, as its required
  #       when the SX_DEPLOYMENT_TARGET is explicitly set
  foreach(SDK_ROOT ${OSX_SDK_ROOTS})
    if( ""x${CMAKE_OSX_SYSROOT}x"" STREQUAL ""xx"")
      file(GLOB SDK_SYSROOTS ""${SDK_ROOT}/MacOSX*.sdk"")

      if(NOT ""x${SDK_SYSROOTS}x"" STREQUAL ""xx"")
        set(SDK_SYSROOT_NEWEST """")
        set(SDK_VERSION ""0"")
        # find the latest SDK
        foreach(SDK_ROOT_I ${SDK_SYSROOTS})
          # extract version from SDK
          string(REGEX MATCH ""MacOSX([0-9]+\\.[0-9]+)\\.sdk"" _match ""${SDK_ROOT_I}"")
          if(""${CMAKE_MATCH_1}"" VERSION_GREATER ""${SDK_VERSION}"")
            set(SDK_SYSROOT_NEWEST ""${SDK_ROOT_I}"")
            set(SDK_VERSION ""${CMAKE_MATCH_1}"")
          endif()
        endforeach()

        if(NOT ""x${SDK_SYSROOT_NEWEST}x"" STREQUAL ""xx"")
          string(REPLACE ""."" """" sdk_version_no_dot ${SDK_VERSION})
          set(OSX_NAME ${OSX_SDK_${sdk_version_no_dot}_NAME})
          set(CMAKE_OSX_ARCHITECTURES ""x86_64"" CACHE STRING ""Force build for 64-bit ${OSX_NAME}."" FORCE)
          set(CMAKE_OSX_SYSROOT ""${SDK_SYSROOT_NEWEST}"" CACHE PATH ""Force build for 64-bit ${OSX_NAME}."" FORCE)
          message(STATUS ""Setting OSX_ARCHITECTURES to '${CMAKE_OSX_ARCHITECTURES}' as none was specified."")
          message(STATUS ""Setting OSX_SYSROOT to latest '${CMAKE_OSX_SYSROOT}' as none was specified."")
        endif()
      endif()
    endif()
  endforeach()

  if(""x${CMAKE_OSX_DEPLOYMENT_TARGET}x"" STREQUAL ""xx"")
    string(REGEX MATCH ""MacOSX([0-9]+\\.[0-9]+)\\.sdk"" _match ""${CMAKE_OSX_SYSROOT}"")
    set(SDK_VERSION ""${CMAKE_MATCH_1}"")
    if( ""${SDK_VERSION}"" VERSION_GREATER ""10.8"" )
      # add to cache to allow interactive editing after fatal error
      set(CMAKE_OSX_DEPLOYMENT_TARGET """" CACHE PATH ""Deployment target needs to be explicitly set."" FORCE)
      message(FATAL_ERROR
        ""The OSX_SYSROOT is set to version ${SDK_VERSION} (>10.8) and OSX_DEPLOYMENT_TARGET is not explicitly set!\n""
        ""Since:\n""
        "" (1) the default runtime associated with >=10.9 deployment target is 'libc++'.[1]\n""
        "" (2) the default runtime associated with <=10.8 deployment target is 'libstdc++'.\n""
        "" (3) Qt support for 'macx",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uuaKiA
code,"## `([!]<expr> <value>|(""=""|""+="" <expr><call>)) -> <any>`
##
## the assign function allows the user to perform some nonetrivial 
## operations that other programming languages allow 
##
## Examples
## 
  function(assign __lvalue __operation __rvalue)    
    ## is a __value

    if(NOT ""${__operation}"" MATCHES ""^(=|\\+=)$"" )
      ## if no equals sign is present then interpret all
      ## args as a simple literal cmake value
      ## this allows the user to set an expression to 
      ## a complicated string with spaces without needing
      ## to single quote it
      set(__value ${__operation} ${__rvalue} ${ARGN})
    elseif(""${__rvalue}"" MATCHES ""^'.*'$"")
      string_decode_delimited(""${__rvalue}"" ')
      ans(__value)
    elseif(""${__rvalue}"" MATCHES ""(^{.*}$)|(^\\[.*\\]$)"")
      script(""${__rvalue}"")
      ans(__value)
    else()
      navigation_expression_parse(""${__rvalue}"")
      ans(__rvalue)
      list_pop_front(__rvalue)
      ans(__ref)

      if(""${ARGN}"" MATCHES ""^\\(.*\\)$"")
        ref_nav_get(""${${__ref}}"" ""&${__rvalue}"")
        ans(__value)

        map_tryget(${__value} ref)
        ans(__value_ref)

        data(""${ARGN}"")
        ans(__args)
        if(NOT __value_ref)
          call(""${__ref}"" ${__args})
          ans(__value)
      
        else()
          map_tryget(${__value} property)
          ans(__prop)
          map_tryget(${__value} range)
          ans(ranges)

          if(NOT ranges)
            list_pop_front(__args)
            list_pop_back(__args)
            obj_member_call(""${__value_ref}"" ""${__prop}"" ${__args})
            ans(__value)

          else()
            map_tryget(${__value} __value)
            ans(__callables)
            set(__value)
            set(this ""${__value_ref}"")
            foreach(__callable ${__callables})
              call(""${__callable}"" ${__args})
              ans(__res)
              list(APPEND __value ${__res})
            endforeach()
          endif()
        endif()
      else()      
        ref_nav_get(""${${__ref}}"" ${__rvalue})
        ans(__value)
      endif()
    endif()
    string_take(__lvalue !)
    ans(__exc)
    navigation_expression_parse(""${__lvalue}"")
    ans(__lvalue)
    list_pop_front(__lvalue)
    ans(__lvalue_ref)

    if(""${__operation}"" STREQUAL ""+="")
      ref_nav_get(""${${__lvalue_ref}}"" ""${__lvalue}"")
      ans(prev_value)
      set(__value ""${prev_value}${__value}"")
    endif()
   # message(""ref_nav_set ${${__lvalue_ref}} ${__exc}${__lvalue} ${__value}"" )
    ref_nav_set(""${${__lvalue_ref}}"" ""${__exc}${__lvalue}"" ""${__value}"")
    ans(__value)
    set(${__lvalue_ref} ${__value} PARENT_SCOPE)
    return_ref(__value)
  endfunction()",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IGqQ2H
code,"set(CMAKE_HOST_SYSTEM ""Linux-4.4.0-66-generic"")
set(CMAKE_HOST_SYSTEM_NAME ""Linux"")
set(CMAKE_HOST_SYSTEM_VERSION ""4.4.0-66-generic"")
set(CMAKE_HOST_SYSTEM_PROCESSOR ""x86_64"")

include(""/home/bladestery/Android/Sdk/ndk-bundle/build/cmake/android.toolchain.cmake"")

set(CMAKE_SYSTEM ""Android-21"")
set(CMAKE_SYSTEM_NAME ""Android"")
set(CMAKE_SYSTEM_VERSION ""21"")
set(CMAKE_SYSTEM_PROCESSOR ""aarch64"")

set(CMAKE_CROSSCOMPILING ""TRUE"")

set(CMAKE_SYSTEM_LOADED 1)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xENzp9
code,"# Copyright (c) 2014-2022 AscEmu Team <http://www.ascemu.org>

if (MSVC_VERSION VERSION_LESS 19.28)
    message(FATAL_ERROR ""AscEmu requires at least Visual Studio 2019 update 16.9"")
endif ()

message(STATUS ""Applying settings for ${CMAKE_CXX_COMPILER_ID}"")

add_definitions(-D_CRT_SECURE_NO_WARNINGS)

# set defines for msvc
set(CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} /std:c++17 /EHa /MP /bigobj"")
set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /std:c++17 /EHa /MP /bigobj"")

# set build platform specific settings (x86/x64)
if (NOT IS_64BIT)
    set(CMAKE_EXE_LINKER_FLAGS ""${CMAKE_EXE_LINKER_FLAGS} /LARGEADDRESSAWARE"")
endif ()

if (TREAT_WARNINGS_AS_ERRORS)
    set(CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} /WX"")
    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /WX"")
endif ()

# enable/disable warnings
# dll warning 4251 disabled by default.
if (BUILD_WITH_WARNINGS)
    set(CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} /Wall /wd4251 /wd4820 /wd4062 /wd4061 /wd5045"")
    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /Wall /wd4251 /wd4820 /wd4062 /wd4061 /wd5045"")
else ()
    set(CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} /W0"")
    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /W0"")
endif ()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jujdyD
code,"add_executable(mbgl-test
    ${MBGL_TEST_FILES}
)

target_compile_options(mbgl-test
    PRIVATE -fvisibility-inlines-hidden
)

set_source_files_properties(test/src/mbgl/test/util.cpp PROPERTIES COMPILE_FLAGS -DNODE_EXECUTABLE=""${NodeJS_EXECUTABLE}"")

target_include_directories(mbgl-test
    PRIVATE include
    PRIVATE src # TODO: eliminate
    PRIVATE test/include
    PRIVATE test/src
    PRIVATE platform/default
    PRIVATE ${MBGL_GENERATED}/include
)

target_link_libraries(mbgl-test
    PRIVATE mbgl-core
)

target_add_mason_package(mbgl-test PRIVATE geometry)
target_add_mason_package(mbgl-test PRIVATE variant)
target_add_mason_package(mbgl-test PRIVATE unique_resource)
target_add_mason_package(mbgl-test PRIVATE rapidjson)
target_add_mason_package(mbgl-test PRIVATE gtest)
target_add_mason_package(mbgl-test PRIVATE pixelmatch)
target_add_mason_package(mbgl-test PRIVATE boost)
target_add_mason_package(mbgl-test PRIVATE geojson)
target_add_mason_package(mbgl-test PRIVATE geojsonvt)

mbgl_platform_test()

create_source_groups(mbgl-test)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QQJLOG
code,"#
# Custom targets
#

# Target: userconfig {{{

configure_file(
  ${PROJECT_SOURCE_DIR}/cmake/templates/userconfig.cmake.in
  ${PROJECT_BINARY_DIR}/cmake/userconfig.cmake
  ESCAPE_QUOTES @ONLY)

add_custom_target(userconfig
  DEPENDS ${PROJECT_NAME}
  COMMAND ${CMAKE_COMMAND} -P ${PROJECT_BINARY_DIR}/cmake/userconfig.cmake)

# }}}
# Target: uninstall {{{

configure_file(
  ${PROJECT_SOURCE_DIR}/cmake/templates/uninstall.cmake.in
  ${PROJECT_BINARY_DIR}/cmake/uninstall.cmake
  ESCAPE_QUOTES @ONLY)

add_custom_target(uninstall
  COMMAND ${CMAKE_COMMAND} -P ${PROJECT_BINARY_DIR}/cmake/uninstall.cmake)

# }}}

# folders where the clang tools should operate
set(CLANG_SEARCH_PATHS ${PROJECT_SOURCE_DIR}/src ${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/tests)

# Target: codeformat (clang-format) {{{

add_custom_target(codeformat)
add_custom_command(TARGET codeformat
  COMMAND ${PROJECT_SOURCE_DIR}/common/clang-format.sh ${CLANG_SEARCH_PATHS})

# }}}
# Target: codecheck (clang-tidy) {{{

add_custom_target(codecheck)
add_custom_command(TARGET codecheck
  COMMAND ${PROJECT_SOURCE_DIR}/common/clang-tidy.sh
  ${PROJECT_BINARY_DIR} ${CLANG_SEARCH_PATHS})

# }}}
# Target: codecheck-fix (clang-tidy + clang-format) {{{

add_custom_target(codecheck-fix)
add_custom_command(TARGET codecheck-fix
  COMMAND ${PROJECT_SOURCE_DIR}/common/clang-tidy.sh
  ${PROJECT_BINARY_DIR} -fix ${CLANG_SEARCH_PATHS})

# }}}

# Target: memcheck (valgrind) {{{

add_custom_target(memcheck)
add_custom_command(TARGET memcheck
  COMMAND valgrind
  --leak-check=summary
  --suppressions=${PROJECT_SOURCE_DIR}/.valgrind-suppressions
  ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/${PROJECT_NAME}
  example --config=${PROJECT_SOURCE_DIR}/doc/config)

add_custom_target(memcheck-full)
add_custom_command(TARGET memcheck-full
  COMMAND valgrind
  --leak-check=full
  --track-origins=yes
  --track-fds=yes
  --suppressions=${PROJECT_SOURCE_DIR}/.valgrind-suppressions
  ${PROJECT_BINARY_DIR}/${CMAKE_INSTALL_BINDIR}/${PROJECT_NAME}
  example --config=${PROJECT_SOURCE_DIR}/doc/config)

# }}}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GZ_7LZ
code,"#
# Try to find GLEW library and include path.
# Once done this will define
#
# GLEW_FOUND
# GLEW_INCLUDE_PATH
# GLEW_LIBRARY
# 

#IF (WIN32)
# 	FIND_PATH( GLEW_INCLUDE_PATH GL/glew.h
# 		$ENV{PROGRAMFILES}/GLEW/include
# 		${PROJECT_SOURCE_DIR}/src/nvgl/glew/include
# 		DOC ""The directory where GL/glew.h resides"")
# 	FIND_LIBRARY( GLEW_LIBRARY
# 		NAMES glew GLEW glew32 glew32s
# 		PATHS
# 		$ENV{PROGRAMFILES}/GLEW/lib
# 		${PROJECT_SOURCE_DIR}/src/nvgl/glew/bin
# 		${PROJECT_SOURCE_DIR}/src/nvgl/glew/lib
# 		DOC ""The GLEW library"")
FIND_PATH( DVBEN50221_INCLUDE_PATH libdvben50221/en50221_stdcam.h
	/usr/include
	/usr/local/include
	/sw/include
	/opt/local/include
	DOC ""The directory wherelibdvben50221/en50221_stdcam.h resides"")
FIND_LIBRARY( DVBEN50221_LIBRARY
	NAMES dvben50221
	PATHS
	/usr/lib64
	/usr/lib
	/usr/local/lib64
	/usr/local/lib
	/sw/lib
	/opt/local/lib
	DOC ""The DVB50221 library"")

IF (DVBEN50221_INCLUDE_PATH)
	SET( DVBEN50221_FOUND 1 CACHE STRING ""Set to 1 if DVBEN50221 is found, 0 otherwise"")
ELSE (DVBEN50221_INCLUDE_PATH)
	SET( DVBEN50221_FOUND 0 CACHE STRING ""Set to 1 if DVBEN50221 is found, 0 otherwise"")
ENDIF (DVBEN50221_INCLUDE_PATH)

MARK_AS_ADVANCED( DVBEN50221_FOUND )
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1dHIS4
code,"# books.cmake - CMake file configuration for the Snow Leopard book tests

#
# Copyright (C) 2015 Roel Sergeant (rsergeant@panix.com).
#
# This file is part of the Snow Leopard project.
#
# The Snow Leopard project is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option) any later
# version.
#
# The Snow Leopard project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# the Snow Leopard project; see the file COPYING. If not see
# <http://www.gnu.org/licenses/>.
#

project(Snow_Leopard_Books_Tests)

#
# Test header files
#
set(BOOKS_HEADER_FILES
    tests/books/c/t10_cdiC_1_lexer.h
    tests/books/c/t10_cdiC_1_parser.h
)

#
# Test source files
#
set(BOOKS_SOURCE_FILES
    tests/books/c/t1_tCpl2_1_helloworld.c
    tests/books/c/t2_tCpl2_e11_no_main.c
    tests/books/c/t3_tCpl2_e11_unknown_function.c
    tests/books/c/t4_tCpl2_e12_printf_escape_chars.c
    tests/books/c/t5_tCpl2_2_fahrenheit_celsius.c
    tests/books/c/t6_tCpl2_3_fahrenheit_celsius.c
    tests/books/c/t7_tCpl2_e13_table_with_header.c
    tests/books/c/t8_tCpl2_e14_celsius_fahrenheit.c
    tests/books/c/t9_tCpl2_4_fahrenheit_celsius.c
    tests/books/c/t10_cdiC_1_advance.c
    tests/books/c/t10_cdiC_1_lexer.c
    tests/books/c/t10_cdiC_1_match.c
    tests/books/c/t10_cdiC_1_simple_lexer_parser.c
    tests/books/c/t10_cdiC_1_statements.c
)

#
# Test private header files
#
set(BOOKS_PRIVATE_HEADER_FILES
    tests/books/c/t10_cdiC_1__lexer.h
)

#
# Test private source files
#
set(BOOKS_PRIVATE_SOURCE_FILES
    tests/books/c/t10_cdiC_1__lexer.c
    tests/books/c/t10_cdiC_1__Lex.c
)

#
# Test data files
#
set(BOOKS_DATA_FILES
    tests/books/c/ot5_tCpl2_2
    tests/books/c/ot6_tCpl2_3
    tests/books/c/ot7_tCpl2_e13
    tests/books/c/ot8_tCpl2_e14
)

#-<EOF>-

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Pk1nup
code,"find_path(gtest_INCLUDE_DIRS gtest/gtest.h)

find_library(gtest_LIBRARIES gtest)
find_library(gtest_MAIN_LIBRARIES gtest_main)

find_package(PackageHandleStandardArgs REQUIRED)
find_package_handle_standard_args(gtest
  REQUIRED_VARS gtest_INCLUDE_DIRS gtest_LIBRARIES gtest_MAIN_LIBRARIES
  )

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WmUT7l
code,"# Required Eigen external dependency

find_package(Eigen3 REQUIRED)
include_directories(SYSTEM ${EIGEN3_INCLUDE_DIR})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",c5u5fa
code,"# Copyright (C) 2014, 2015 Igor Kushnir <igorkuo AT Google mail>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7E_HR1
code,"file(REMOVE_RECURSE
  ""CMakeFiles/miscmatrices_3.dir/miscmatrices.cpp.o""
  ""miscmatrices_3.pdb""
  ""miscmatrices_3""
)

# Per-language clean rules from dependency scanning.
foreach(lang CXX)
  include(CMakeFiles/miscmatrices_3.dir/cmake_clean_${lang}.cmake OPTIONAL)
endforeach()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZlTE91
code,"# Copyright (c) 2014, Ruslan Baratov
# All rights reserved.

if(DEFINED POLLY_UTILITIES_POLLY_INIT_CMAKE_)
  return()
else()
  set(POLLY_UTILITIES_POLLY_INIT_CMAKE_ 1)
endif()

include(""${CMAKE_CURRENT_LIST_DIR}/polly_fatal_error.cmake"")

macro(polly_init name generator)
  set(POLLY_TOOLCHAIN_NAME ""${name}"")
  get_filename_component(
      POLLY_TOOLCHAIN_TAG ""${CMAKE_CURRENT_LIST_FILE}"" NAME_WE
  )

  string(COMPARE EQUAL ""${CMAKE_GENERATOR}"" ""${generator}"" _polly_correct)
  if(NOT _polly_correct)
    polly_fatal_error(
        ""Please change generator to: ${generator}\n""
        ""(Current generator: ${CMAKE_GENERATOR})""
    )
  endif()
  set(HUNTER_CMAKE_GENERATOR ""${generator}"")
endmacro()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DgdKdi
code,"file(REMOVE_RECURSE
  ""eyebot_flocking_automoc.cpp""
  ""CMakeFiles/eyebot_flocking.dir/eyebot_flocking.cpp.o""
  ""CMakeFiles/eyebot_flocking.dir/eyebot_flocking_automoc.cpp.o""
  ""libeyebot_flocking.pdb""
  ""libeyebot_flocking.so""
)

# Per-language clean rules from dependency scanning.
foreach(lang CXX)
  include(CMakeFiles/eyebot_flocking.dir/cmake_clean_${lang}.cmake OPTIONAL)
endforeach()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jR3EXB
code,"# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  ""CXX""
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_CXX
  ""/Users/brendanbusey/Desktop/Github/InterviewPreparation/LeetCode/Medium/NumberOfEnclaves/main.cpp"" ""/Users/brendanbusey/Desktop/Github/InterviewPreparation/LeetCode/Medium/NumberOfEnclaves/cmake-build-debug/CMakeFiles/NumberOfEnclaves.dir/main.cpp.o""
  )
set(CMAKE_CXX_COMPILER_ID ""AppleClang"")

# The include file search paths:
set(CMAKE_CXX_TARGET_INCLUDE_PATH
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR """")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EHeX0z
code,"#==================================================================================================#
#                                                                                                  #
#  Copyright 2012 MaidSafe.net limited                                                             #
#                                                                                                  #
#  This MaidSafe Software is licensed to you under (1) the MaidSafe.net Commercial License,        #
#  version 1.0 or later, or (2) The General Public License (GPL), version 3, depending on which    #
#  licence you accepted on initial access to the Software (the ""Licences"").                        #
#                                                                                                  #
#  By contributing code to the MaidSafe Software, or to this project generally, you agree to be    #
#  bound by the terms of the MaidSafe Contributor Agreement, version 1.0, found in the root        #
#  directory of this project at LICENSE, COPYING and CONTRIBUTOR respectively and also available   #
#  at: http://www.maidsafe.net/licenses                                                            #
#                                                                                                  #
#  Unless required by applicable law or agreed to in writing, the MaidSafe Software distributed    #
#  under the GPL Licence is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF   #
#  ANY KIND, either express or implied.                                                            #
#                                                                                                  #
#  See the Licences for the specific language governing permissions and limitations relating to    #
#  use of the MaidSafe Software.                                                                   #
#                                                                                                  #
#==================================================================================================#


set(CTEST_PROJECT_NAME ""maidsafe"")
set(CTEST_NIGHTLY_START_TIME ""00:01:00 UTC"")
set(CTEST_DROP_METHOD ""http"")
set(CTEST_DROP_SITE ""dash.maidsafe.net"")
set(CTEST_DROP_LOCATION ""/submit.php?project=MaidSafe"")
set(CTEST_DROP_SITE_CDASH TRUE)
set(CTEST_PROJECT_SUBPROJECTS
    ThirdParty
    Common
    Passport
    Rudp
    Routing
    Nfs
    Encrypt
    Drive
    Vault
#    Vault-Manager
#    API
    )
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0f1SUP
code,"FILE(REMOVE_RECURSE
  ""CMakeFiles/robot_localization_generate_messages_py""
  ""/home/perdziu/catkin_ws/devel/lib/python2.7/dist-packages/robot_localization/srv/_SetDatum.py""
  ""/home/perdziu/catkin_ws/devel/lib/python2.7/dist-packages/robot_localization/srv/_SetPose.py""
  ""/home/perdziu/catkin_ws/devel/lib/python2.7/dist-packages/robot_localization/srv/__init__.py""
)

# Per-language clean rules from dependency scanning.
FOREACH(lang)
  INCLUDE(CMakeFiles/robot_localization_generate_messages_py.dir/cmake_clean_${lang}.cmake OPTIONAL)
ENDFOREACH(lang)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wqKELW
code,"############################################################################
# mswebrtc.cmake
# Copyright (C) 2014-2018  Belledonne Communications, Grenoble France
#
############################################################################
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
############################################################################

lcb_git_repository(""git://git.linphone.org/mswebrtc.git"")
lcb_git_tag_latest(""master"")
lcb_git_tag(""88c0fa6ae7ea35fa25eac5ce4b50898e85443ff0"")
lcb_external_source_paths(""mswebrtc"")
lcb_groupable(YES)
lcb_sanitizable(YES)
lcb_package_source(YES)
lcb_plugin(YES)
lcb_spec_file(""mswebrtc.spec"")

lcb_dependencies(""ms2"")

lcb_cmake_options(
	""-DENABLE_ISAC=${ENABLE_ISAC}""
	""-DENABLE_ILBC=${ENABLE_ILBC}""
	""-DENABLE_AEC=${ENABLE_WEBRTC_AEC}""
	""-DENABLE_AECM=${ENABLE_WEBRTC_AECM}""
)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",98WJq6
code,"# The set of languages for which implicit dependencies are needed:
SET(CMAKE_DEPENDS_LANGUAGES
  ""CXX""
  )
# The set of files for implicit dependencies of each language:
SET(CMAKE_DEPENDS_CHECK_CXX
  ""/home/cmeon/SimplexLP/eigen/test/ref.cpp"" ""/home/cmeon/SimplexLP/lib/test/CMakeFiles/ref_3.dir/ref.cpp.o""
  )
SET(CMAKE_CXX_COMPILER_ID ""GNU"")

# Targets to which this target links.
SET(CMAKE_TARGET_LINKED_INFO_FILES
  )

# The include file search paths:
SET(CMAKE_C_TARGET_INCLUDE_PATH
  ""test""
  ""/home/cmeon/SimplexLP/eigen/test""
  ""/home/cmeon/SimplexLP/eigen""
  "".""
  )
SET(CMAKE_CXX_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
SET(CMAKE_Fortran_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
SET(CMAKE_ASM_TARGET_INCLUDE_PATH ${CMAKE_C_TARGET_INCLUDE_PATH})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5B7OTr
code,"set(COMMAND_A1 ""1."")
set(COMMAND_A2 ""1."")
set(COMMAND_FILE ""${CMAKE_SOURCE_DIR}/tests/zz_source/orca-4.2/h2o_wfntyp/h2o_rhf.wfx"")
set(COMMAND_AHF ""0."")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1pZYBt
code,"FILE(REMOVE_RECURSE
  ""../msg_gen""
  ""../msg_gen""
  ""../src/hovercraft/msg""
  ""CMakeFiles/rosbuild_premsgsrvgen""
)

# Per-language clean rules from dependency scanning.
FOREACH(lang)
  INCLUDE(CMakeFiles/rosbuild_premsgsrvgen.dir/cmake_clean_${lang}.cmake OPTIONAL)
ENDFOREACH(lang)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vQ6i97
code,"#-----------------------------------------------------------------------------
# redland
#-----------------------------------------------------------------------------

if(MITK_USE_Redland)

# Sanity checks
if(DEFINED Redland_DIR AND NOT EXISTS ${Redland_DIR})
  message(FATAL_ERROR ""Redland_DIR variable is defined but corresponds to non-existing directory"")
endif()

set(proj Redland)
set(proj_DEPENDENCIES ${Raptor2_DEPENDS} ${Rasqal_DEPENDS})
set(${proj}_DEPENDS ${proj})

if(NOT DEFINED Redland_DIR)

  set(additional_cmake_args )
  if(CTEST_USE_LAUNCHERS)
    list(APPEND additional_cmake_args
      ""-DCMAKE_PROJECT_${proj}_INCLUDE:FILEPATH=${CMAKE_ROOT}/Modules/CTestUseLaunchers.cmake""
    )
  endif()

  ExternalProject_Add(${proj}
     LIST_SEPARATOR ${sep}
     URL ${MITK_THIRDPARTY_DOWNLOAD_PREFIX_URL}/redland-1.0.17.tar.gz
     URL_MD5 e5be03eda13ef68aabab6e42aa67715e
     PATCH_COMMAND ${PATCH_COMMAND} -N -p1 -i ${CMAKE_CURRENT_LIST_DIR}/Redland-1.0.17.patch
     CMAKE_GENERATOR ${gen}
     CMAKE_ARGS
       ${ep_common_args}
       ${additional_cmake_args}
       -DWITH_THREADS:BOOL=OFF
     CMAKE_CACHE_ARGS
       ${ep_common_cache_args}
     CMAKE_CACHE_DEFAULT_ARGS
       ${ep_common_cache_default_args}
     DEPENDS ${proj_DEPENDENCIES}
    )

  set(${proj}_DIR ${ep_prefix}/lib/redland/cmake)
  mitkFunctionInstallExternalCMakeProject(${proj})

else()

  mitkMacroEmptyExternalProject(${proj} ""${proj_DEPENDENCIES}"")

endif()

endif()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qq8JHk
code,"#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# ""License""); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#


# Visual Studio specific options
if(MSVC)
    #For visual studio the library naming is as following:
    # Dynamic libraries:
    #  - thrift.dll  for release library
    #  - thriftd.dll for debug library
    #
    # Static libraries:
    #  - thriftmd.lib for /MD release build
    #  - thriftmt.lib for /MT release build
    #
    #  - thriftmdd.lib for /MD debug build
    #  - thriftmtd.lib for /MT debug build
    #
    # the same holds for other libraries like libthriftz etc.

    # For Debug build types, append a ""d"" to the library names.
    set(CMAKE_DEBUG_POSTFIX ""d"" CACHE STRING ""Set debug library postfix"" FORCE)
    set(CMAKE_RELEASE_POSTFIX """" CACHE STRING ""Set release library postfix"" FORCE)

    # Build using /MT option instead of /MD if the WITH_MT options is set
    if(WITH_MT)
        set(CompilerFlags
                CMAKE_CXX_FLAGS
                CMAKE_CXX_FLAGS_DEBUG
                CMAKE_CXX_FLAGS_RELEASE
                CMAKE_C_FLAGS
                CMAKE_C_FLAGS_DEBUG
                CMAKE_C_FLAGS_RELEASE
                )
        foreach(CompilerFlag ${CompilerFlags})
          string(REPLACE ""/MD"" ""/MT"" ${CompilerFlag} ""${${CompilerFlag}}"")
        endforeach()
        set(STATIC_POSTFIX ""mt"" CACHE STRING ""Set static library postfix"" FORCE)
    else(WITH_MT)
        set(STATIC_POSTFIX ""md"" CACHE STRING ""Set static library postfix"" FORCE)
    endif(WITH_MT)

    # Disable Windows.h definition of macros for min and max
    add_definitions(""-DNOMINMAX"")

    # Disable boost auto linking pragmas - cmake includes the right files
    add_definitions(""-DBOOST_ALL_NO_LIB"")

    # Windows build does not know how to make a shared library yet
    # as there are no __declspec(dllexport) or exports files in the project.
    if (WITH_SHARED_LIB)
        message (FATAL_ERROR ""Windows build does not support shared library output yet!"")
    endif()

elseif(UNIX)
  # For UNIX
  # WITH_*THREADS selects which threading library to use
  if(WITH_BOOSTTHREADS)
    add_definitions(""-DUSE_BOOST_THREAD=1"")
  elseif(WITH_STDTHREADS)
    add_definitions(""-DUSE_STD_THREAD=1"")
  endif()

  find_program( MEMORYCHECK_COMMAND valgrind )
  set( MEMORYCHECK_COMMAND_OPTIONS ""--gen-suppressions=all --leak-check=full"" )
  set( MEMORYCHECK_SUPPRESSIONS_FILE ""${PROJECT_SOURCE_DIR}/test/valgrind.suppress"" )
endif()

# GCC and Clang.
if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES ""Clang"")
  # FIXME -pedantic can not be used at the moment because of: https://issues.apache.org/jira/browse/THRIFT-2784
  #set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11 -O2 -Wall -Wextra -pedantic"")
  # FIXME enabling c++11 breaks some Linux builds on Travis by triggering a g++ bug, see
  # https://travis-ci.org/apache/thrift/jobs/58017022
  # on the other hand, both MacOSX and FreeBSD need c++11
  if(${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" OR ${CMAKE_SYSTEM_NAME} MATCHES ""FreeBSD"")
    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11 -O2 -Wall -Wextra"")
  endif()
endif()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fcbdOr
code,"#  Copyright (c) 2013, 2014, Pyhrol, pyhrol@rambler.ru
#  GEO: N55.703431,E37.623324 .. N48.742359,E44.536997
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  4. Neither the name of the Pyhrol nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
#
# Find Python library and headers and define targets for extension modules
# Behaviour:
#
#  -- If Python library and headers found, define targets:
#     pygen, pyhrol[safe], pyself[safe] used by any Pyhrol based projects
#
#  -- If Python library or headers not found, and PYTHON_REQUIRED defined
#     fatal error occured
#
#  -- If Python library or headers not found or invalid, and PYTHON_REQUIRED
#     not defined warns and continue;
#     Python related targets must be inactivated by PYTHONLIBS_FOUND switch

# $Date: 2015-06-05 01:14:02 +0300 (Пт., 05 июня 2015) $
# $Revision: 1035 $

find_package (PythonLibs 2.4)


set (TMP_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/../tmp/include CACHE PATH ""Path to temporary \""include\"" directory"")
set (TMP_RES_DIR ${CMAKE_CURRENT_LIST_DIR}/../tmp/res CACHE PATH ""Path to directory for generated files"")
set (PYHROL_MAX_INPUT_ARGS 16 CACHE STRING ""Max number of arguments for PyArg_*ParseTuple* function, limited by the number of relevant macros PYHROL_PARSE_TUPLE_{M}"")
set (PYHROL_MAX_OUTPUT_ARGS 8 CACHE STRING ""Max number of arguments for Py_VaBuildValue, limited by the number of relevant macros PYHROL_BUILD_VALUE_{N}"")


if (NOT PYTHONLIBS_FOUND)
  if (PYTHON_REQUIRED)
    message (FATAL_ERROR ""Python libraries not found"")
  else()
    message (WARNING ""Python related targets disabled"")
  endif()
endif()

if (CMAKE_VERBOSE_MAKEFILE)
  message (STATUS ""PythonLibs
  PYTHONLIBS_FOUND           = \""${PYTHONLIBS_FOUND}\""
  PYTHON_LIBRARIES           = \""${PYTHON_LIBRARIES}\""
  PYTHON_INCLUDE_PATH        = \""${PYTHON_INCLUDE_PATH}\""
  PYTHON_INCLUDE_DIRS        = \""${PYTHON_INCLUDE_DIRS}\""
  PYTHON_DEBUG_LIBRARIES     = \""${PYTHON_DEBUG_LIBRARIES}\""
  PYTHONLIBS_VERSION_STRING  = \""${PYTHONLIBS_VERSION_STRING}\""
"")
endif()

if (PYTHONLIBS_FOUND)
  set (PYHROL_SAFE_MODE OFF CACHE BOOL ""Use library version with minimal functionality"")
  set (PYHROL_USE_STATIC OFF CACHE BOOL ""Use static Pyhrol libraries instead of dynamic"")

  add_library(pyhrolbase OBJECT
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/array_square.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/binary_operations.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/demangling.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_auto_holder.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_common.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_index.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_keywords.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_trace.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_tuple_describer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_tuple_in.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_tuple_out.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_tuples.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_type_base.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_type_iterable.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_type_number_any.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_type_sequence.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_type_traits.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/self_addressed_cstring.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/signature_parser.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/strings_manip.cpp
  )
  set_target_properties (pyhrolbase PROPERTIES
    COMPILE_FLAGS ""-fPIC -I${PYTHON_INCLUDE_PATH}""
    COMPILE_DEFINITIONS USE_TRACER
  )

  set (PYHROL_COMMON_DEV
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_container.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_exception_handler.cpp
    ${CMAKE_CURRENT_LIST_DIR}/../cpp/pyhrol_tuples_exc",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QTG7Cp
code,"file(COPY FileTest.cmake DESTINATION tmp PATTERN * FILE_PERMISSIONS)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",i45AQY
code,"# The set of languages for which implicit dependencies are needed:
set(CMAKE_DEPENDS_LANGUAGES
  ""CXX""
  )
# The set of files for implicit dependencies of each language:
set(CMAKE_DEPENDS_CHECK_CXX
  ""C:/Users/david/Desktop/Cloud Code/More CPP Practice/main.cpp"" ""C:/Users/david/Desktop/Cloud Code/More CPP Practice/cmake-build-debug/CMakeFiles/More_CPP_Practice.dir/main.cpp.obj""
  )
set(CMAKE_CXX_COMPILER_ID ""GNU"")

# The include file search paths:
set(CMAKE_CXX_TARGET_INCLUDE_PATH
  )

# Targets to which this target links.
set(CMAKE_TARGET_LINKED_INFO_FILES
  )

# Fortran module output directory.
set(CMAKE_Fortran_TARGET_MODULE_DIR """")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",b011UE
code,"# CMAKE generated file: DO NOT EDIT!
# Generated by ""Unix Makefiles"" Generator, CMake Version 3.5

# Relative path conversion top directories.
set(CMAKE_RELATIVE_PATH_TOP_SOURCE ""/home/neo/workspce/opencv_threshold"")
set(CMAKE_RELATIVE_PATH_TOP_BINARY ""/home/neo/workspce/opencv_threshold"")

# Force unix paths in dependencies.
set(CMAKE_FORCE_UNIX_PATHS 1)


# The C and CXX include file regular expressions for this directory.
set(CMAKE_C_INCLUDE_REGEX_SCAN ""^.*$"")
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN ""^$"")
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tgcGG4
code,"# Install script for directory: /Users/pearl790131/apriltags/OpenIGTLink/Examples/ImageMeta

# Set the install prefix
IF(NOT DEFINED CMAKE_INSTALL_PREFIX)
  SET(CMAKE_INSTALL_PREFIX ""/usr/local"")
ENDIF(NOT DEFINED CMAKE_INSTALL_PREFIX)
STRING(REGEX REPLACE ""/$"" """" CMAKE_INSTALL_PREFIX ""${CMAKE_INSTALL_PREFIX}"")

# Set the install configuration name.
IF(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
  IF(BUILD_TYPE)
    STRING(REGEX REPLACE ""^[^A-Za-z0-9_]+"" """"
           CMAKE_INSTALL_CONFIG_NAME ""${BUILD_TYPE}"")
  ELSE(BUILD_TYPE)
    SET(CMAKE_INSTALL_CONFIG_NAME """")
  ENDIF(BUILD_TYPE)
  MESSAGE(STATUS ""Install configuration: \""${CMAKE_INSTALL_CONFIG_NAME}\"""")
ENDIF(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)

# Set the component getting installed.
IF(NOT CMAKE_INSTALL_COMPONENT)
  IF(COMPONENT)
    MESSAGE(STATUS ""Install component: \""${COMPONENT}\"""")
    SET(CMAKE_INSTALL_COMPONENT ""${COMPONENT}"")
  ELSE(COMPONENT)
    SET(CMAKE_INSTALL_COMPONENT)
  ENDIF(COMPONENT)
ENDIF(NOT CMAKE_INSTALL_COMPONENT)

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QP3yIU
code,"### If you want to edit this, copy it from cmake/share to cmake. It will be
### picked up in preference over the one in cmake/share. And it will not get
### clobbered with the next upgrade.

if( MULLE_TRACE_INCLUDE)
   message( STATUS ""# Include \""${CMAKE_CURRENT_LIST_FILE}\"""" )
endif()

### MultiPhase
if( NOT __MULTI_PHASE__CMAKE__)
   set( __MULTI_PHASE__CMAKE__ ON)

   #
   # Parallel build support. run all ""participating"" projects once for
   # HEADERS_PHASE in parallel.
   # Now run all ""participating"" projects for COMPILE_PHASE in parallel.
   # Finally run all participating and non-participating projects in craftorder
   # serially together with the LINK_PHASE. What is tricky is that the
   # sequential projects may need to run first.
   #
   option( HEADERS_PHASE  ""Install headers only phase (1)"" OFF)
   option( COMPILE_PHASE  ""Compile sources only phase (2)"" OFF)
   option( LINK_PHASE     ""Link and install only phase (3)"" OFF)

   if( MULLE_MAKE_PHASE STREQUAL ""HEADERS"")
      set( HEADERS_PHASE ON)
   endif()
   if( MULLE_MAKE_PHASE STREQUAL ""COMPILE"")
      set( COMPILE_PHASE ON)
   endif()
   if( MULLE_MAKE_PHASE STREQUAL ""LINK"")
      set( LINK_PHASE ON)
   endif()

   if( NOT HEADERS_PHASE AND
       NOT COMPILE_PHASE AND
       NOT LINK_PHASE)
      set( HEADERS_PHASE ON)
      set( COMPILE_PHASE ON)
      set( LINK_PHASE ON)
   endif()
endif()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",D1FiWk
code,"#The MIT License
#
#Copyright (c) 2017-2017 Albert Murienne
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the ""Software""), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#THE SOFTWARE.

if (APPLE)
    set (extra_includes ""/opt/X11/include"")
    set (extra_link_paths ""/usr/X11/lib"")
endif ()

include_directories(
	${extra_includes}
)

link_directories(${extra_link_paths})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ieru7i
code,"# http://pastebin.com/gvF5JzHt

# - find Sqlite 3
# SQLITE_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)
# SQLITE_LIBRARIES - Sqlite 3 libraries
# SQLITE_LIBRARY_RELEASE - Where the release library is
# SQLITE_LIBRARY_DEBUG - Where the debug library is
# SQLITE_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( SQLITE_INCLUDE_DIR AND SQLITE_LIBRARY_RELEASE AND SQLITE_LIBRARY_DEBUG )
    SET(SQLITE_FIND_QUIETLY TRUE)
ENDIF( SQLITE_INCLUDE_DIR AND SQLITE_LIBRARY_RELEASE AND SQLITE_LIBRARY_DEBUG )

FIND_PATH( SQLITE_INCLUDE_DIR sqlite3.h  )

FIND_LIBRARY(SQLITE_LIBRARY_RELEASE NAMES sqlite3 )

FIND_LIBRARY(SQLITE_LIBRARY_DEBUG NAMES sqlite3 sqlite3d  HINTS /usr/lib/debug/usr/lib/ )

IF( SQLITE_LIBRARY_RELEASE OR SQLITE_LIBRARY_DEBUG AND SQLITE_INCLUDE_DIR )
        SET( SQLITE_FOUND TRUE )
ENDIF( SQLITE_LIBRARY_RELEASE OR SQLITE_LIBRARY_DEBUG AND SQLITE_INCLUDE_DIR )

IF( SQLITE_LIBRARY_DEBUG AND SQLITE_LIBRARY_RELEASE )
        # if the generator supports configuration types then set
        # optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
        IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
                SET( SQLITE_LIBRARIES optimized ${SQLITE_LIBRARY_RELEASE} debug ${SQLITE_LIBRARY_DEBUG} )
        ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
    # then just use the release libraries
                SET( SQLITE_LIBRARIES ${SQLITE_LIBRARY_RELEASE} )
        ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( SQLITE_LIBRARY_RELEASE )
        SET( SQLITE_LIBRARIES ${SQLITE_LIBRARY_RELEASE} )
ELSE( SQLITE_LIBRARY_DEBUG AND SQLITE_LIBRARY_RELEASE )
        SET( SQLITE_LIBRARIES ${SQLITE_LIBRARY_DEBUG} )
ENDIF( SQLITE_LIBRARY_DEBUG AND SQLITE_LIBRARY_RELEASE )

IF( SQLITE_FOUND )
        IF( NOT SQLITE_FIND_QUIETLY )
                MESSAGE( STATUS ""Found Sqlite3 header file in ${SQLITE_INCLUDE_DIR}"")
                MESSAGE( STATUS ""Found Sqlite3 libraries: ${SQLITE_LIBRARIES}"")
        ENDIF( NOT SQLITE_FIND_QUIETLY )
ELSE(SQLITE_FOUND)
        IF( SQLITE_FIND_REQUIRED)
                MESSAGE( FATAL_ERROR ""Could not find Sqlite3"" )
        ELSE( SQLITE_FIND_REQUIRED)
                MESSAGE( STATUS ""Optional package Sqlite3 was not found"" )
        ENDIF( SQLITE_FIND_REQUIRED)
ENDIF(SQLITE_FOUND)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m0jJQp
code,"file(REMOVE_RECURSE
  ""CMakeFiles/grayworld.dir/__/shell/main.cxx.o""
  ""CMakeFiles/grayworld.dir/grayworld/grayworld_modules.cpp.o""
  ""../../bin/grayworld.pdb""
  ""../../bin/grayworld""
)

# Per-language clean rules from dependency scanning.
foreach(lang CXX)
  include(CMakeFiles/grayworld.dir/cmake_clean_${lang}.cmake OPTIONAL)
endforeach()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tpZxGI
code,"# - Find the yaml-cpp include file and library
#
#  YAMLCPP_FOUND - system has yaml-cpp library
#  YAMLCPP_LIBRARY - The libraries needed to use yaml-cpp
#  YAMLCPP_HAVE_H - true if yaml.h is available
#  YAMLCPP_INCLUDE_DIR - yaml.h path
#

if (UNIX)
  find_library(YAMLCPP_LIBRARY NAMES yaml-cpp)
  find_file(YAMLCPP_HAVE_H yaml-cpp/yaml.h )
  find_path(YAMLCPP_H_INCLUDE_DIR yaml-cpp/yaml.h )
  SET(YAMLCPP_INCLUDE_DIR ${YAMLCPP_H_INCLUDE_DIR}/yaml-cpp)
else()
  find_library(
    YAMLCPP_LIBRARY
    NAMES yamlcpp.lib
    NO_DEFAULT_PATH 
    PATHS 
    $ENV{YAMLCPP_ROOT}/lib
  )
  find_file(YAMLCPP_HAVE_H include/yaml.h PATHS $ENV{YAMLCPP_ROOT} NO_DEFAULT_PATH)
  find_path(YAMLCPP_H_INCLUDE_DIR include/yaml.h PATHS $ENV{YAMLCPP_ROOT} NO_DEFAULT_PATH)
  SET(YAMLCPP_INCLUDE_DIR ${YAMLCPP_H_INCLUDE_DIR}/include)
endif(UNIX)

SET(YAMLCPP_FOUND FALSE)
if (YAMLCPP_HAVE_H)
  if (YAMLCPP_LIBRARY)
    SET(YAMLCPP_FOUND TRUE)
  endif (YAMLCPP_LIBRARY)
endif (YAMLCPP_HAVE_H)

if(NOT YAMLCPP_FOUND)
  message(STATUS ""YamlCpp Can't be found"")
  break()
else()
  message(STATUS ""YamlCpp Library: "" ${YAMLCPP_LIBRARY} )
  message(STATUS ""YamlCpp Header: "" ${YAMLCPP_INCLUDE_DIR} )
endif(NOT YAMLCPP_FOUND)

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4sB0tU
code,"# CMAKE_TOOLCHAIN_FILE For cross MinGW builds.
# THIS IS NOT REQUIRED FOR NATIVE WINDOWS BUILDS
# to use it add -DCMAKE_TOOLCHAIN_FILE=<path to this file>
# to the initial cmake command line call 
# or set CMAKE_TOOLCHAIN_FILE
# to the path of this file to the CMAKE GUI.



set(CMAKE_SYSTEM_NAME Windows)
# which compilers to use for C and C++
set(CMAKE_C_COMPILER x86_64-w64-mingw32-gcc)
set(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)
set(CMAKE_SYSROOT /usr/x86_64-w64-mingw32)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# mingw-w64-libogg mingw-w64-libvorbis mingw-w64-portaudio mingw-w64-zlib mingw-w64-protobuf",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MWLx4j
code,"


    /* HORIZONTAL */
    
    /* increase bottom margin to fit the pips */
    .ui-slider-horizontal.ui-slider-pips { 
        margin-bottom: 1.4em; 
    }

    /* default hide the labels and pips that arnt visible */
    /* we just use css to hide incase we want to show certain */
    /* labels/pips individually later */
    .ui-slider-pips .ui-slider-label,
    .ui-slider-pips .ui-slider-pip-hide { 
        display: none; 
    }

    /* now we show any labels that we've set to show in the options */
    .ui-slider-pips .ui-slider-pip-label .ui-slider-label { 
        display: block; 
    }
    
    /* PIP/LABEL WRAPPER */
    /* position each pip absolutely just below the default slider */
    /* and also prevent accidental selection */
    .ui-slider-pips .ui-slider-pip { 
        width: 2em;
        height: 1em;
        line-height: 1em;
        position: absolute;
        font-size: 0.8em;
        color: #999;
        overflow: visible;
        text-align: center;
        top: 20px;
        left: 20px;
        margin-left: -1em;
        cursor: pointer;

        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    .ui-state-disabled.ui-slider-pips .ui-slider-pip {
        cursor: default;
    }

    /* little pip/line position & size */
    .ui-slider-pips .ui-slider-line {
        background: #999;
        width: 1px;
        height: 3px;
        position: absolute;
        left: 50%;
    }

    /* the text label postion & size */
    /* it overflows so no need for width to be accurate */
    .ui-slider-pips .ui-slider-label {
        position: absolute;
        top: 5px;
        left: 50%;
        margin-left: -1em;
        width: 2em;
    }

    /* make it easy to see when we hover a label */
    .ui-slider-pips:not(.ui-slider-disabled) .ui-slider-pip:hover .ui-slider-label {
        color: black;
        font-weight: bold;
    }




    /* VERTICAL */

    /* vertical slider needs right-margin, not bottom */
    .ui-slider-vertical.ui-slider-pips {
        margin-bottom: 1em;
        margin-right: 2em;
    }

    /* align vertical pips left and to right of the slider */
    .ui-slider-vertical.ui-slider-pips .ui-slider-pip {
        text-align: left;
        top: auto;
        left: 20px;
        margin-left: 0;
        margin-bottom: -0.5em;
    }

    /* vertical line/pip should be horizontal instead */
    .ui-slider-vertical.ui-slider-pips .ui-slider-line {
        width: 3px;
        height: 1px;
        position: absolute;
        top: 50%;
        left: 0;
    }

    .ui-slider-vertical.ui-slider-pips .ui-slider-label {
        top: 50%;
        left: 0.5em;
        margin-left: 0;
        margin-top: -0.5em;
        width: 2em;
    }




    /* FLOATING HORIZTONAL TOOLTIPS */

    /* remove the godawful looking focus outline on handle and float */
    .ui-slider-float .ui-slider-handle:focus,
    .ui-slider-float .ui-slider-handle.ui-state-focus .ui-slider-tip-label,
    .ui-slider-float .ui-slider-handle:focus .ui-slider-tip,
    .ui-slider-float .ui-slider-handle.ui-state-focus .ui-slider-tip-label,
    .ui-slider-float .ui-slider-handle:focus .ui-slider-tip-label
    .ui-slider-float .ui-slider-handle.ui-state-focus .ui-slider-tip-label {
        outline: none;
    }
    
    /* style tooltips on handles and on labels */
    /* also has a nice transition */
    .ui-slider-float .ui-slider-tip,
    .ui-slider-float .ui-slider-tip-label {

        position: absolute;
        visibility: hidden;
        top: -40px;
        display: block;
        width: 34px;
        margin-left: -18px;
        left: 50%;
        height: 20px;
        line-height: 20px;
        background: white;
        border-radius: 3px;
        border: 1px solid #888;
        text-align: center;
        font-size: 12px;
        opacity: 0;
        color: #333;

        -webkit-transition-property: opacity, top, visibility;
        -moz-transition-property: opacity, top, visibility;
        -ms-transition-property: opacity, top, visibility;
        transition-property: opacity, top, visibility;

        -webkit-transition-timing-function: ease-in;
        -moz-transition-timing-function: ease-in;
        -ms-transition-timing-function: ease-in;
        transition-timing-function: ease-in;

        -webkit-transition-duration: 200ms, 200ms, 0ms;
        -moz-transition-duration: 200ms, 200ms, 0ms;
        -ms-transition-duration: 200ms, 200ms, 0ms;
        transition-duration: 200ms, 200ms, 0ms;
        
        -webkit-transition-delay: 0ms, 0ms, 200ms;
        -moz-transition-delay: 0ms, 0ms, 200ms;
        -ms-transition-delay: 0ms, 0ms, 200ms;
        transition-delay: 0ms, 0ms, 200ms;
    }
    
    /* show the tooltip on hover or focus */
    /* also switch transition delay around */    
    .ui-slider-float .ui-slider-handle:hover .ui-slider-tip,
    .ui-slider-float .ui-slider-handle.ui-state-hover .ui-slider-tip,
    .ui-slider-float .ui-slider-handle:focus .ui-slider-tip,
    .ui-slid",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7tD2PI
code,"/*

Core.css for Mocha UI

Theme: Default

Copyright:
	Copyright (c) 2007-2009 Greg Houston, <http://greghoustondesign.com/>.
	
License:
	MIT-style license.

Required by:
	Layout.js
 
*/

/* Layout
---------------------------------------------------------------- */

html, body {
	background: #fff;	
}	

body {
	margin: 0; /* Required */
}

#desktop {
	position: relative;
	min-width: 400px; /* Helps keep header content from wrapping */
	height: 100%;
	min-height: 100%;
	overflow: hidden;
	cursor: default; /* Fix for issue in IE7. IE7 wants to use the I-bar text cursor */
}

#desktopHeader {
	background: #f2f2f2;
}

#desktopTitlebarWrapper {
	position: relative;	
	height: 45px;
	overflow: hidden;
	background: #718BA6 url(../images/skin/bg-header.gif) repeat-x;
}

#desktopTitlebar {
	padding: 7px 8px 6px 8px;
	height: 32px;
	background: url(../images/skin/logo.gif) no-repeat;
	background-position: left 0;
}

#desktopTitlebar h1.applicationTitle {
	display: none;
	margin: 0;
	padding: 0 5px 0 0;
	font-size: 20px;
	line-height: 25px;
	font-weight: bold;
	color: #fff;
}

#desktopTitlebar h2.tagline {
	padding: 7px 0 0 0;	
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 10px;    
	color: #d4dce4;    
	font-weight: bold;
	text-align: center;
	text-transform: uppercase;
}

#desktopTitlebar h2.tagline .taglineEm {
	color: #fff;
	font-weight: bold;
}

#topNav {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 10px;
	position: absolute;
	right: 0;
	top: 0;
	color: #d4dce4;
	text-align: right;
	padding: 13px 10px 0 0;
}

#topNav a {
	color: #fff;
	font-weight: normal;
}

#topNav a:hover {
	text-decoration: none;
}

/* Navbar */

#desktopNavbar {
	background: #f2f2f2;
	/*height: 30px;*/
	margin: 0 0px;
	overflow: hidden; /* Remove this line if you want the menu to be backward compatible with Firefox 2 */
	/* Fixes by Chris */
	/*background-color: #ccc;*/
	height: 20px;
	margin-bottom: 5px;
	border-bottom: 1px solid #3f3f3f;
}

#desktopNavbar ul {	
	padding: 0;
	margin: 0;
	list-style: none;
	font-size: 12px;
}

#desktopNavbar li {
	float: left;
}

#desktopNavbar a {
	display: block;
}	
	
#desktopNavbar ul li a {
	/*padding: 6px 10px 6px 10px;*/
	color: #333;
	font-weight: normal;
	/* Fix by Chris */
	padding: 2px 10px 6px 10px;
}

#desktopNavbar ul li a:hover {
	color: #333;
	/* Fix By Chris */
        background-color: #fff;
}

#desktopNavbar ul li a.arrow-right, #desktopNavbar ul li a:hover.arrow-right {
	background-image: url(../images/skin/arrow-right.gif);
	background-repeat: no-repeat;
	background-position: right 7px;	
} 

#desktopNavbar li ul {
	padding: 2px;
	border: 1px solid #3f3f3f;
	background: #fff url(../images/skin/bg-dropdown.gif) repeat-y;
	position: absolute;
	width: 164px;
	left: -999em;
	z-index: 8000;
	/* Fix by Chris */
	margin-top: -6px;
}

#desktopNavbar li:hover ul ul,
#desktopNavbar li.ieHover ul ul,
#desktopNavbar li:hover ul ul ul,
#desktopNavbar li.ieHover ul ul ul {
	left: -999em;
}

#desktopNavbar li ul ul { /* third-and-above-level lists */
	margin: -22px 0 0 163px;
}

#desktopNavbar li ul li .check {
	position: absolute;
	top: 8px;
	left: 6px;
	width: 5px;
	height: 5px;
	background: #555;
	overflow: hidden;
	line-height: 1px;
	font-size: 1px;
}

#desktopNavbar li ul li a {
	position: relative;
	/*padding: 1px 9px 1px 25px;*/
	width: 130px;
	color: #3f3f3f;
	font-weight: normal;
	/* Fix By Chris */
	padding: 1px 9px 1px 20px; /* Reduce left padding */
}

#desktopNavbar li ul li a:hover {
	background: #6C98D9;
	color: #fff;
	-moz-border-radius: 2px;	
}

#desktopNavbar li ul li a:hover .check {
	background: #fff;
}

#desktopNavbar li:hover ul,
#desktopNavbar li.ieHover ul,
#desktopNavbar li li.ieHover ul,
#desktopNavbar li li li.ieHover ul,
#desktopNavbar li li:hover ul,
#desktopNavbar li li li:hover ul { /* lists nested under hovered list items */
	left: auto;
}

#desktopNavbar li:hover { /* For IE7 */
    position: static;
}

li.divider {
	margin-top: 2px;
	padding-top: 3px;	
	border-top: 1px solid #ebebeb;
}	

#pageWrapper {
	position: relative;
	overflow: hidden; /* This can be set to hidden or auto */
	border-top: 1px solid #909090;
	border-bottom: 1px solid #909090;
	/*height: 100%;*/
}

/* Footer */

#desktopFooterWrapper {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	height: 30px;
	overflow: hidden;
}

#desktopFooter {
	font-family: Verdana, Arial, Helvetica, sans-serif;
	font-size: 10px;
	height: 24px;
	padding: 6px 8px 0 8px;
	background: #f2f2f2;
}



/* Panel Layout
---------------------------------------------------------------- */

/* Columns */

.column {
	position: relative;	
	float: left;
	overflow: hidden; /* Required by IE6 */
}

/* Panels */

.panel {
	position: relative;
	overflow: auto;
	background: #f8f8f8;	
	border-bottom: 1px solid #b9b9b9;
}

.panelWrapper.collapsed .panel",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qZe3Qu
code,".foo > .bar, .foo > .bip + .baz {
  a: b; }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3dfpwB
code,"
/* PIED DE PAGE*/
#nom_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#prenom_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#date_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#sexe_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#adresse_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#nationalite_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

#effectuer_ input[type=""text""]
{ /*le input ou le textarea*/

background-color: #fffffa; /*la couleur du champ*/

height: 25px; /*la hauteur du champ input*/

width: 100%; /* la largeur du champ input*/
}

/* EN TETE*/
#nom
{
	width: 13%;
}

#prenom
{
	width: 15%;
}

#date
{
	width: 12%;
}
#sexe
{
	width: 7%;
}

#adresse
{
	width: 28%;
}

#nationalite
{
	width: 15%;
}

#effectuer
{
	width: 10%;
}


/* STYLE POUR LA LISTE DE SELECTION DE LA TABLE*/
#listeDataTable{
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: -10px;
}


.dataTables_paginate *
{
	background: #e9e8e8;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 6px;
	padding-right: 6px;
    color: black;	
	/*margin-top: 100px;*/
	cursor: pointer;

}

div .dataTables_paginate
{
	margin-bottom: 20px;
}

.dataTables_paginate .first
{
	margin-right: 0px;
}

.dataTables_paginate .last
{
	margin-left: 0px;
}

.dataTables_paginate .previous
{
	margin-right: 2px;
	border-left: 1px solid #bdb9b9;
}

.dataTables_paginate .next
{
	margin-left: 3px;
	border-right: 1px solid #bdb9b9;
}

.dataTables_paginate a:hover
{
	text-decoration: none;
	background-color: #c3c1c1;
	color: white;
}

.dataTables_paginate .paginate_active
{
	text-decoration: none;
	background-color: #b5b2b2;
	color: white;
}

#liste_personnel select 
{
	border-right-width: 2px;                
	border-left-width: 2px; 
	border-top-width: 2px; 
	border-bottom-width: 2px; 
	border-color: #cccccc;""
}

.foot_style th
{
  font-size: 14px;
  font-weight: normal;
  color: #fefefe;
  padding-top: 10px;
  padding-right: 8px;
  padding-bottom: 5px;
  padding-left: 8px;
  border-bottom-width: 0px;
  
}

#titre, #titre2 {
	height: 30px;
    border: 2px solid #ccc;
	border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    border-bottom: 2px solid #cccccc;
    background : #fff;
    padding-left: 10px;
    padding-bottom: 5px;
    padding-top : 13px;
    box-shadow: 0pt 0pt 12px rgba(0, 0, 0, 0.5);
}

#contenu {
    background: #fff; max-height: 1000px;
    border: 2px solid #ccc ;
    border-bottom-right-radius: 10px;
    border-bottom-left-radius: 10px;
    border-top: 2px solid #cccccc;
    padding-left: 20px;
    padding-right: 25px;
    padding-top: 5px;
    padding-bottom: 10px;
    box-shadow: 0pt 5pt 12px rgba(0, 0, 0, 0.5);
}

tr:hover
{
	background: white;
}

#vue_patient{
	min-height:385px;
    background: #fff;
    border: 2px solid #ccc;
    border-top: 2px solid #cccccc;
    border-bottom-right-radius: 10px;
    border-bottom-left-radius: 10px;
    box-shadow: 0pt 5pt 12px rgba(0, 0, 0, 0.5);
}

#circonstance_deces{
	width: 260px;
    height: 80px;
	border: 1px solid #ccc ;
    border-bottom-right-radius: 10px;
    border-bottom-left-radius: 10px;
    border-top-right-radius: 10px;
}

#photo, #modifier_photo  /*photo*/
{

width: 100px;

float: left;

border-top-width: 10px;

border-right-width: 10px;

border-right-width-ltr-source: physical;

border-right-width-rtl-source: physical;

border-bottom-width: 10px;

border-left-width: 10px;

border-left-width-ltr-source: physical;

border-left-width-rtl-source: physical;

border-top-style: solid;

border-right-style: solid;

border-right-style-ltr-source: physical;

border-right-style-rtl-source: physical;

border-bottom-style: solid;

border-left-style: solid;

border-left-style-ltr-source: physical;

border-left-style-rtl-source: physical;

border-top-color: white;

border-right-color: white;

border-right-color-ltr-source: physical;

border-right-color-rtl-source: physical;

border-bottom-color: white;

border-left-color: white;

border-left-color-ltr-source: physical;

border-left-color-rtl-source: physical;

box-shadow: 0pt 0pt 12px rgba(0, 0, 0, 0.2);

}

/****************************BOUTON************************/
#thoughtbot button
{
    width:auto;
    padding:8px 0;
    text-align:center;
    display: inline-block;
    float",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7rX6bM
code,"#flash-messages {position: absolute;}

#flash-messages .success ul, .notice ul, .error ul { list-style: none; margin: 0; padding: 0; }
#flash-messages .success ul li, .notice ul li, .error ul li { float: none; display: block; }

#flash-messages .success ul, .notice ul, .error ul { list-style: none; margin: 0; padding: 0; font-weight: bold; }
#flash-messages .success ul li, .notice ul li, .error ul li { float: none; display: block; text-align: center;}

#flash-messages div.success, div.notice, div.error { 
	-webkit-border-radius: 8px;
	-moz-border-radius: 8px;
	border-radius: 8px;
	-moz-box-shadow: 0 2px 4px #ccc;
	-webkit-box-shadow: 0 2px 4px #ccc;
	box-shadow: 0 2px 4px #ccc;
	position: relative;
	z-index: 1;
}

#flash-messages span.close {
	position: absolute;
	top: 1px;
	right: 6px;
	cursor: pointer;
	font-weight: bold;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uqjUW-
code,.mblTextArea {overflow: auto;}.dj_ff3 .mblTextArea {-moz-border-radius: 0;},codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ToAAP9
code,"#myGallery, #myGallerySet, #flickrGallery
{
	width: 520px;
	height: 300px;
	z-index:5;
	margin-bottom: 20px;
}

.jdGallery a
{
	outline:0;
}


#flickrGallery
{
	width: 500px;
	height: 334px;
}

#myGallery img.thumbnail, #myGallerySet img.thumbnail
{
	display: none;
}

.jdGallery
{
	overflow: hidden;
	position: relative;
}

.jdGallery img
{
	border: 0;
	margin: 0;
}

.jdGallery .slideElement
{
	width: 100%;
	height: 100%;
	background-color: #000;
	background-repeat: no-repeat;
	background-position: center center;
	background-image: url('img/loading-bar-black.gif');
}

.jdGallery .loadingElement
{
	width: 100%;
	height: 100%;
	position: absolute;
	left: 0;
	top: 0;
	background-color: #000;
	background-repeat: no-repeat;
	background-position: center center;
	background-image: url('img/loading-bar-black.gif');
}

.jdGallery .slideInfoZone
{
	position: absolute;
	z-index: 10;
	width: 100%;
	margin: 0px;
	left: 0;
	bottom: 0;
	height: 120px;
	background: #181818;
	color: #fff;
	text-indent: 0;
	overflow: hidden;
}

* html .jdGallery .slideInfoZone
{
	bottom: -1px;
}

.jdGallery .slideInfoZone h2
{
	padding: 0;
	font-size: 14px;
	margin: 0;
	margin: 2px 5px;
	font-weight: bold;
	color: #fff !important;
}

.jdGallery .slideInfoZone p
{
	padding: 0;
	font-size: 12px;
	margin: 2px 5px;
	color: #eee;
}

.jdGallery div.carouselContainer
{
	position: absolute;
	height: 135px;
	width: 100%;
	z-index: 10;
	margin: 0px;
	left: 0;
	top: 0;
}

.jdGallery a.carouselBtn
{
	position: absolute;
	bottom: 0;
	right: 30px;
	height: 20px;
	/*width: 100px; background: url('img/carousel_btn.gif') no-repeat;*/
	text-align: center;
	padding: 0 10px;
	font-size: 13px;
	background: #333;
	color: #fff;
	cursor: pointer;
}

.jdGallery .carousel
{
	position: absolute;
	width: 100%;
	margin: 0px;
	left: 0;
	top: 0;
	height: 115px;
	background: #333;
	color: #fff;
	text-indent: 0;
	overflow: hidden;
}

.jdExtCarousel
{
	overflow: hidden;
	position: relative;
}

.jdGallery .carousel .carouselWrapper, .jdExtCarousel .carouselWrapper
{
	position: absolute;
	width: 100%;
	height: 78px;
	top: 10px;
	left: 0;
	overflow: hidden;
}

.jdGallery .carousel .carouselInner, .jdExtCarousel .carouselInner
{
	position: relative;
}

.jdGallery .carousel .carouselInner .thumbnail, .jdExtCarousel .carouselInner .thumbnail
{
	cursor: pointer;
	background: #000;
	background-position: center center;
	float: left;
	border: solid 1px #fff;
}

.jdGallery .wall .thumbnail, .jdExtCarousel .wall .thumbnail
{
	margin-bottom: 10px;
}

.jdGallery .carousel .label, .jdExtCarousel .label
{
	font-size: 13px;
	position: absolute;
	bottom: 5px;
	left: 10px;
	padding: 0;
	margin: 0;
}

.jdGallery .carousel .wallButton, .jdExtCarousel .wallButton
{
	font-size: 10px;
	position: absolute;
	bottom: 5px;
	right: 10px;
	padding: 1px 2px;
	margin: 0;
	background: #222;
	border: 1px solid #888;
	cursor: pointer;
}

.jdGallery .carousel .label .number, .jdExtCarousel .label .number
{
	color: #b5b5b5;
}

.jdGallery a
{
	font-size: 100%;
	text-decoration: none;
	color: #fff;
}

.jdGallery a.right, .jdGallery a.left
{
	position: absolute;
	height: 99%;
	width: 25%;
	cursor: pointer;
	z-index:10;
	filter:alpha(opacity=20);
	-moz-opacity:0.2;
	-khtml-opacity: 0.2;
	opacity: 0.2;
}

* html .jdGallery a.right, * html .jdGallery a.left
{
	filter:alpha(opacity=50);
}

.jdGallery a.right:hover, .jdGallery a.left:hover
{
	filter:alpha(opacity=80);
	-moz-opacity:0.8;
	-khtml-opacity: 0.8;
	opacity: 0.8;
}

.jdGallery a.left
{
	left: 0;
	top: 0;
	background: url('img/fleche1.png') no-repeat center left;
}

* html .jdGallery a.left { background: url('img/fleche1.gif') no-repeat center left; }

.jdGallery a.right
{
	right: 0;
	top: 0;
	background: url('img/fleche2.png') no-repeat center right;
}

* html .jdGallery a.right { background: url('img/fleche2.gif') no-repeat center right; }

.jdGallery a.open
{
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
}

.withArrows a.open
{
	position: absolute;
	top: 0;
	left: 25%;
	height: 99%;
	width: 50%;
	cursor: pointer;
	z-index: 10;
	background: none;
	-moz-opacity:0.8;
	-khtml-opacity: 0.8;
	opacity: 0.8;
}

.withArrows a.open:hover { background: url('img/open.png') no-repeat center center; }

* html .withArrows a.open:hover { background: url('img/open.gif') no-repeat center center;
	filter:alpha(opacity=80); }
	
	
/* Gallery Sets */

.jdGallery a.gallerySelectorBtn
{
	z-index: 15;
	position: absolute;
	top: 0;
	left: 30px;
	height: 20px;
	/*width: 100px; background: url('img/carousel_btn.gif') no-repeat;*/
	text-align: center;
	padding: 0 10px;
	font-size: 13px;
	background: #333;
	color: #fff;
	cursor: pointer;
	opacity: .4;
	-moz-opacity: .4;
	-khtml-opacity: 0.4;
	filter:alpha(opacity=40);
}

.jdGallery .gallerySelector
{
	z-index: 20;
	width: 100%;
	height: 100%;
	positio",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u_H9al
code,"﻿/* Default MDL font size */
.wj-control,
.wj-control input {
  font-size: 16px;
}
/* Extra padding in grids and listboxes */
.wj-flexgrid .wj-cell {
  padding: 6px;
}
.wj-listbox-item {
  padding: 6px 10px;
}
/* Backgrounds */
.wj-content,
div[wj-part='cells'] {
  background: #ffffff;
  color: #212121;
}
.wj-content .wj-input-group .wj-form-control {
  background: #ffffff;
  color: #212121;
}
/* Headers */
.wj-header {
  background: #e8e8e8;
  color: black;
}
/* FlexGrid */
div[wj-part='root'] {
  background: #ffffff;
}
.wj-state-selected {
  background: #e91e63;
  color: #ffffff;
}
.wj-state-multi-selected {
  background: #f06493;
  color: #ffffff;
}
.wj-input-group .wj-form-control,
.wj-grid-editor {
  background: #ffffff;
  color: #212121;
}
.wj-flexgrid .wj-cell {
  border-right: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}
[dir=""rtl""] .wj-cell {
  border-left: 1px solid rgba(0, 0, 0, 0.1);
}
/* Default grid cell color */
.wj-flexgrid .wj-cell:not(.wj-header):not(.wj-group):not(.wj-alt):not(.wj-state-selected):not(.wj-state-multi-selected) {
  background: #ffffff;
}
/* Alternate grid cell color */
.wj-flexgrid .wj-alt:not(.wj-header):not(.wj-group):not(.wj-state-selected):not(.wj-state-multi-selected) {
  background: #ffffff;
}
/* Group row background */
.wj-flexgrid .wj-group:not(.wj-state-selected):not(.wj-state-multi-selected) {
  background: #aa1145;
  color: #ffffff;
}
/* Default frozen boundaries */
.wj-flexgrid .wj-cell.wj-frozen-row {
  border-bottom-color: black;
  border-width: 1px;
}
.wj-flexgrid .wj-cell.wj-frozen-col {
  border-right-color: black;
  border-width: 1px;
}
/* Grid headers */
.wj-flexgrid .wj-header.wj-state-multi-selected {
  background: #d5d5d5;
}
.wj-flexgrid .wj-colheaders .wj-header.wj-state-multi-selected {
  border-bottom: 3px solid #e91e63;
}
.wj-flexgrid .wj-rowheaders .wj-header.wj-state-multi-selected {
  border-right: 3px solid #e91e63;
}
/* Marquee */
.wj-flexgrid .wj-marquee {
  position: absolute;
  box-sizing: border-box;
  border: 2px solid #e91e63;
}
.wj-flexsheet .wj-marquee {
  border: 2px solid #e91e63;
}
/* Drag marker */
.wj-flexgrid .wj-marker {
  background: #f44336;
}
/* Input Controls */
.wj-control.wj-content.wj-dropdown,
.wj-inputnumber {
  background-color: transparent;
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
}
.wj-control.wj-content .wj-input-group input.wj-form-control {
  background-color: transparent;
  padding-bottom: 0;
  padding-top: 0;
}
.wj-content .wj-input-group-btn > .wj-btn:hover,
.wj-content .wj-btn-group > .wj-btn:hover {
  background-color: rgba(0, 0, 0, 0.1);
}
.wj-content .wj-input-group-btn > .wj-btn,
.wj-content .wj-btn-group > .wj-btn {
  border-style: none;
  border-radius: 2px;
  background-color: rgba(0, 0, 0, 0.02);
  color: rgba(0, 0, 0, 0.8);
  min-width: 32px;
}
/* Border Radii */
.wj-content,
.wj-input-group,
.wj-btn-group,
.wj-btn-group-vertical,
.wj-tooltip {
  border-radius: 0;
}
/* Tooltip */
/* style tooltips like https://www.getmdl.io/customize/index.html */
.wj-tooltip {
  padding: 20px;
  color: white;
  font-weight: bold;
  background-color: rgba(128, 128, 128, 0.85);
  border: none;
}
/* Gauges */
.wj-gauge .wj-pointer {
  fill: #e91e63;
}
.wj-gauge.wj-state-focused circle.wj-pointer {
  fill: #f44336;
  transition: fill .2s;
  /* delay used in MDL */
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hI4S-W
code,"body {
  background: #EEE;
  font-family: arial, helvetica, sans-serif;
}

.controls {
  position: relative;
  width: 640px;
}

#seek {
  width: 400px;
  position: absolute;
  right: 0;
  top: 0;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Z7wbZk
code,"/************************************************************************************************************

	DHTML Suite for Applications
	(C) www.dhtmlgoodies.com, Janury 2007

	CSS for the DHTMLSuite.imageSelection class.
	
	
	www.dhtmlgoodies.com
	Alf Magne Kalleland

************************************************************************************************************/

/* Mane selection div - the dragable rectangle */
#DHTMLSuite_imageSelectionSel{
	position:absolute;
	overflow:hidden;
	border:1px solid #222;	/* Blue border */
	z-index:5000000;
}
/* Transparent div inside the image selection div */
#DHTMLSuite_imageSelection_transparentDiv{	/* This is the transparent div placed inside #DHTMLSuite_imageSelection */
	filter:alpha(opacity=50);
	opacity:0.5;
	-moz-opacity:0.5;
	background-color:#666;	/* Blue background color */
	position:absolute;
	left:-5px;
	top:-5px;
	width:200%;
	height:200%;
}

/* Div for the drag process - dragging images */
#DHTMLSuite_imageSelectionDrag{
	position:absolute;
	border:1px solid #222;
	z-index:5000000;
	overflow:hidden;
	width:107px;
}

#DHTMLSuite_imageSelectionDrag #DHTMLSuite_imageSelectionDragContent{
	padding:0px;
	z-index:5;
	position:relative;
}

/* Div for the drag process - small boxes for each image. These divs are placed inside #DHTMLSuite_imageSelectionDragContent */
#DHTMLSuite_imageSelectionDrag .DHTMLSuite_imageSelectionDragBox{	/* Individual box for each image */
	width:35px;
	height:35px;
	float:left;
	background-repeat:no-repeat;
	background-position:center center;

}

/* Div inside the div with id #DHTMLSuite_imageSelectionDrag - it could be transparent or not, that's your choice */
#DHTMLSuite_imageSelectionDrag .DHTMLSuite_imageSelectionDrag_transparentDiv{
	background-color:#666;	/* Blue background color */
	position:absolute;
	left:-5px;
	top:-5px;
	width:200%;
	height:200%;
	z-index:4;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7Kpjfx
code,"﻿@CHARSET ""UTF-8"";

/*PRINCIPAL*/

body{
margin:0px;
padding:0;
font-family:verdana;
font-size: 10px;
height:100%;
width: 100%;

}

img {
	border:0;
}

em {
	color: #b1b1b1;
	font-style: italic;
}

a {
	color:#333333;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
h1, h2, h3, h4, h5, h6 {
	font-family: Arial;
	color:#333;
}

h1 {
	font-size:2em;
}

h2 {
	clear:both;
	margin-top: 22px;
}

#principal {
	background-image:url(../imagens/bg-topo.png);
	background-repeat:repeat-x;
	background-position:top;
}

#topo{
height: 110px; /*Height of top section*/
background-image:url(""../imagens/topo.png"");
background-position:bottom left;
background-repeat:no-repeat;
}
	#logo {
		width:150px;
		height:70px;
		float:left;
	}
	#logon {
		width:254px;
		height:25px;
		float:right;
		padding-left:10px;
		margin: 10px 30px 0 30px;
	}
		#logon img{
			margin-top:5px;
		}
	#logo-sistema {
		height: 30px;
		position: absolute;
		right: 82px;
		top: 43px;
		width: 127px;
	}
	
	
	#topo h1{
	margin: 0;
	padding-top: 15px;
	}
#barra-1 {
	width:100%;
	background-color: #cc0001;
}
#barra-2 {
	width:100%;
	background-color: #c8fc98;
}


#conteudo-col{
margin-left: 193px; /*Set left margin to LeftColumnWidth*/
}
	#cabecalho-div-1 {
		background-image:url(../imagens/bg-cabecalho-1.png);
		width:394px;
		width /*\**/: 393px;  /* IE8 */
		height:29px;
		float:left;
		background-repeat:repeat-x;
		background-position:left bottom;
		margin-bottom:5px;
	}

	:root #cabecalho-div-1 {
		width:375px\0/IE9; /* IE9 */
	}
	
	#cabecalho-div-2 {
		background-image:url(../imagens/bg-cabecalho-2.png);
		width:165px;
		width /*\**/: 166px; /* IE8 */
		height:29px;
		float:left;
		background-repeat:repeat-x;
		background-position:left bottom;
		margin-bottom:5px;
	}
	:root #cabecalho-div-2 {
		width:158px\0/IE9; /* IE9 */
	}
	
	
	#miolo{
	float: left;
	width: 100%;
	}
	
	.principal {
		background: none repeat scroll 0 0 #FFFFFF;
		border-bottom: 4px solid #B31419;
		clear: both;
		float: left;
		overflow: hidden;
		padding-bottom: 20px;
		width: 100%;
}

#col-esquerda{
float: left;
width: 175px; /*Width of left column*/
height: 100%;
margin-left: -100%;
background: #efefef;
margin-top:3px;
}
	#titulo-pag{
		margin-left:193px;
		width:57%;
		float:left;
	}
	
	#ico-internos{
		float:right;
		text-align:right;
		margin:10px 20px 0 0;
	}
		#ico-internos img {

		}
		
	.alerta {
		margin-left:193px;
		width:100%;
		float:left;
	}		
	
	#parametros {
		width:100%;
		margin-bottom:20px;
	}
	
   #menu {
     
   }
   		#smoothmenu2 {
   			height:400px;
   		}

#rodape{
clear: left;
width: 100%;
background: #d9d9d9;
color: #333333;
text-align: center;
padding: 4px 0;
text-align:center;
}

	#rodape a{
	color: #FFFF80;
	}



/*FORMULARIO*/



.label-inter { /*Diminui o tamanho da label do formulário para estabelecer campos intermediários*/
	position:absolute;
    top:0;
    left:5px;
    margin-right: 3px;
    text-align: right;
    width:80px;
    font-size:11px;
    z-index:1;  
}

.obs {
    color: #b1b1b1;
    font-size: 11px;
    margin-left:5px;
    float:left;
}



div.form-divisoria {
	margin:-10px 0 5px 0px;
	width:100%;
	height:1px;
	background-color:#fff;
	clear:both;
}

div.field {

}

.field-busca {
	margin-bottom: 7px;
    margin-top: 7px;
    position: relative;
    text-align: right;
}


	
.buscar {
    height: 27px;
    width: 32px;
	float: left;
}

.buttonSubmit {
  clear:both;
}

#bt-submit {
	border: none;
	text-indent:-9999px;
}

.bt-salvar {
    background-image: url(""../imagens/bt-salvar.png"");
    height: 30px;
    width: 63px;
}
.bt-cancelar {
	background-image:url(../imagens/bt-cancelar.png);
	width:30px;
	height:25px;
}
#bt-submit:hover{
	border: none;
}

.botoes-internos {
	width:98.5%;
	text-align:right;
	margin-top:17px;
}

#voltar, #buscar-modal, #alteraplano-modal, #alteraextrato-modal, #desativaplano-modal, #novo-plano-modal, #pesquisar, #adiciona-linha-tabela-modal {
    display: inline;
    float: left;
    margin-left: 2px;
}

div.field input.error, div.field select.error, tr.errorRow div.field input, tr.errorRow div.field select {
	border: 1px solid #b31419;
	background-color: #FAFFD6;
	color: #b31419;
}

div.field div.formError {
	display: none;
	color: #FF0000;
}

div.field div.formError {
	font-weight: normal;
}

div.error {
	margin: 5px 0 23px 0;
	color: #b31419 !important;
	width:400px;
	padding:10px 0px 5px 3px;
	border:1px solid #b31419;
}

div.error a {
	color: #336699;
	font-size: 12px;
	text-decoration: underline;
}

label.error {
    color: #b31419;
}

.error span {
	margin-top:10px;
}

.botoes-externos {
	float:right;
	margin: -14px 30px 10px 0;
}

#caixa-pesquisa {					/*Este não configura o MODAL */
    background-color: #F5F5F5;
    background-image: url(""../imagens/bg-pesquisa-lupa.gif"")",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hEHLQv
code,"/**
 * Copyright 2020 The AMP HTML Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS-IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


.i-amphtml-story-interactive-option-container {
  background-color: var(--i-amphtml-interactive-option-background-color) !important;
  border-radius: 16px !important;
  color: var(--i-amphtml-interactive-strong-text-color) !important;
  font-weight: bold !important;
  padding: 8px !important;
}

.i-amphtml-story-interactive-option {
  display: flex !important;
  align-items: center !important;
  justify-content: space-between !important;
  height: 58px !important;
  overflow: hidden !important;
  padding: 0px 12px !important;
  position: relative !important;
  box-shadow: var(--i-amphtml-interactive-chip-shadow), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  -webkit-box-shadow: var(--i-amphtml-interactive-chip-shadow), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  -moz-box-shadow: var(--i-amphtml-interactive-chip-shadow), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  border-radius: 8px !important;
}

.i-amphtml-story-interactive-option:not(:first-child) {
  margin-top: 8px !important;
}

.i-amphtml-story-interactive-option.i-amphtml-story-interactive-option-selected {
  background-color: var(--i-amphtml-interactive-theme-shading);
  box-shadow: var(--i-amphtml-interactive-chip-shadow-inset), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  -webkit-box-shadow: var(--i-amphtml-interactive-chip-shadow-inset), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  -moz-box-shadow: var(--i-amphtml-interactive-chip-shadow-inset), inset 0px 0px 0px 1px var(--i-amphtml-interactive-theme-border) !important;
  animation: i-amphtml-interactive-animation-flash-background-color forwards var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve) !important;
}

.i-amphtml-story-interactive-option::after {
  content: '' !important;
  background-color: var(--i-amphtml-interactive-theme-shading) !important;
  position: absolute !important;
  height: 100% !important;
  width: 100% !important;
  left: 0 !important;
  top: 0 !important;
  transform: translateX(-100%) !important;
  transition: transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve) !important;
}

.i-amphtml-story-interactive-poll-container[dir=""rtl""] .i-amphtml-story-interactive-option::after {
  transform: translateX(100%)!important;
}

.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option::after {
  transform: translateX(calc(var(--option-percentage) - 100%)) !important;
}

.i-amphtml-story-interactive-poll-container.i-amphtml-story-interactive-post-selection[dir=""rtl""] .i-amphtml-story-interactive-option::after {
  transform: translateX(calc(100% - var(--option-percentage)))!important;
}

.i-amphtml-story-interactive-poll-container:not(.i-amphtml-story-interactive-has-data) .i-amphtml-story-interactive-option::after {
  display: none !important;
}

.i-amphtml-story-interactive-option-text {
  font-size: 22px !important;
  margin: 0 !important;
  z-index: 1 !important;
  transition: transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve) !important;
  transform-origin: left !important;
  white-space: nowrap !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
}

.i-amphtml-story-interactive-poll-container[dir=""rtl""] .i-amphtml-story-interactive-option-text{
  transform-origin: right !important;
}

.i-amphtml-story-interactive-post-selection .i-amphtml-story-interactive-option-text {
  transform: scale(0.72) !important;
}

.i-amphtml-story-interactive-option-percentage {
  font-weight: 700 !important;
  font-size: 28px !important;
  margin: 0 !important;
  opacity: 0 !important;
  transition: transform var(--i-amphtml-interactive-animation-time) var(--i-amphtml-interactive-ease-out-curve) !important;
  transform: translateX(60px) !important;
  /* Percentage sign always goes to the right of the number, regardless of language. TODO(mszylkowski): rtl for arabic */
  direction: ltr !important;
}

.i-amphtml-story-interactive-poll-container[dir=""rtl""] .i-amphtml-story-interactive-option-percentage {
  transform: translateX(-60px) !important;
}

.i-amphtml-story-interactive-poll-container.i-amphtml-story-interactive-post-selection[dir=""rtl""] .i-amphtml-story-interactive-option-percentage,
.i-amphtml-story-interactive-poll-container.i-amphtml-story-interactiv",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZT7egq
code,"/*------------------------------------------------------------------
Bootstrap Admin Template by EGrappler.com
------------------------------------------------------------------*/



/*------------------------------------------------------------------
[1. Global]
*/

body {
	background: #f9f6f1;
	font: 13px/1.7em 'Open Sans';
}
    
p { 
	font: 13px/1.7em 'Open Sans'; 	
}
    
input,
button,
select,
textarea {
  font-family: 'Open Sans';
}

h5 {
	padding-left:10px;
	padding-top:10px;
}

.dropdown .dropdown-menu {
	-webkit-border-radius: 6px;
	-moz-border-radius: 6px;
	border-radius: 6px;
}

.btn-icon-only {
	padding-right: 3px;
	padding-left: 3px;
}

.table td {
	vertical-align: middle;
}

.table-bordered th {
	background: #E9E9E9;
	background:-moz-linear-gradient(top, #FAFAFA 0%, #E9E9E9 100%); /* FF3.6+ */
	background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#FAFAFA), color-stop(100%,#E9E9E9)); /* Chrome,Safari4+ */
	background:-webkit-linear-gradient(top, #FAFAFA 0%,#E9E9E9 100%); /* Chrome10+,Safari5.1+ */
	background:-o-linear-gradient(top, #FAFAFA 0%,#E9E9E9 100%); /* Opera11.10+ */
	background:-ms-linear-gradient(top, #FAFAFA 0%,#E9E9E9 100%); /* IE10+ */
	background:linear-gradient(top, #FAFAFA 0%,#E9E9E9 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FAFAFA', endColorstr='#E9E9E9');
	-ms-filter: ""progid:DXImageTransform.Microsoft.gradient(startColorstr='#FAFAFA', endColorstr='#E9E9E9')"";
	
	font-size: 10px;
	color: #444;
	text-transform: uppercase;
}







/*------------------------------------------------------------------
[2. Navbar / .navbar]
*/

.navbar .container {
	position: relative;
	border:none;
	
}

.navbar-inner {
	padding: 7px 0;
	margin-bottom:15px;
	
	background: transparent !important;
	border:none;
	-moz-border-radius: 0;
	-webkit-border-radius: 0;
	border-radius: 0;
}

.navbar-fixed-top {
	position: static;
	border:none;
}
.nav-collapse {
	margin-top:7px;
}
.navbar .nav a {
	font-size: 11px;
}
.navbar .nav>li>a { color:#444 !important;font-size:14px;}
.navbar .brand {
	font-weight: 900;
	position: relative;
	color:#444;
	font-size:24px;
	font: 27px 'Open Sans';
	
}

.navbar .search-query {
	background-color: #444;
	width: 150px;
	font-size: 11px;
	font-weight: bold;
}

.navbar .search-query::-webkit-input-placeholder {
    color: #666;
}

.navbar .search-query:-moz-placeholder {
    color: #666;
}

.navbar-search .search-query { background:#008866; border:0; color:#fff; line-height:normal;}


/*------------------------------------------------------------------
[3. Subnavbar / .subnavbar]
*/

.subnavbar {
    	margin-bottom: 2.5em;
    }
    
.subnavbar-inner {
	height: 60px;
	background: #fff;
	
}

.subnavbar .container > ul {
	display: inline-block;
	
	height: 80px;
	padding: 0;
	margin: 0;
	
}

.subnavbar .container > ul > li {
	float: left;
	
	min-width: 90px;
	height: 60px;
	padding: 0;
	margin: 0;
	
	text-align: center;
	list-style: none;
	
	border-left: 1px solid #d9d9d9;
	
	
}

.subnavbar .container > ul > li > a {
	display: block;
	
	height: 100%;
	padding: 0 15px;
	
	font-size: 12px;
	font-weight: bold;
	color: #b2afaa;
}

.subnavbar .container > ul > li > a:hover {
	color: #888;
	text-decoration: none;
}

.subnavbar .container > ul > li > a > i {
	display: inline-block;
	
	width: 24px;
	height: 24px;
	margin-top: 11px;
	margin-bottom: -3px;
	font-size: 20px;
}

.subnavbar .container > ul > li > a > span {
	display: block;
	
}


.subnavbar .container > ul > li.active > a {
	
	
	color: #383838;
}
    

.subnavbar .dropdown .dropdown-menu a {
	font-size: 12px;
}

    
.subnavbar .dropdown .dropdown-menu {
    	text-align: left;
    	
		-webkit-border-top-left-radius: 0;
		-webkit-border-top-right-radius: 0;
		-moz-border-radius-topleft: 0;
		-moz-border-radius-topright: 0;
		border-top-left-radius: 0;
		border-top-right-radius: 0;
    }
    
    
    
.subnavbar .dropdown-menu::before {
	content: '';
	display: inline-block;
	border-left: 7px solid transparent;
	border-right: 7px solid transparent;
	border-bottom: 7px solid #CCC;
	border-bottom-color: rgba(0, 0, 0, 0.2);
	position: absolute;
	top: -7px;
	left: 9px;
}

.subnavbar .dropdown-menu::after {
	content: '';
	display: inline-block;
	border-left: 6px solid transparent;
	border-right: 6px solid transparent;
	border-bottom: 6px solid white;
	position: absolute;
	top: -6px;
	left: 10px;
}


.subnavbar .caret {
	margin-top: 4px;
	
	border-top-color: white;
	border-bottom-color: white;
}

.subnavbar .dropdown.open .caret {
	display: none;
}





/*------------------------------------------------------------------
[4. Main / .main]
*/

.main {
	padding-bottom: 2em;
}



/*------------------------------------------------------------------
[5. Extra / .extra]
*/

.extra {

	border-top: 1px solid #585858;
	border-bottom: 1px solid #000;

}

.extra-inner {
	padding: 20px 0;
	
	font-size: 11px;
	color: #BBB;
	
	background: #1A1A1A;
}

.extra a {
	color: #666;
}

.extra h4 {
	margin-bottom: 1em;
	
	font-weight: 400;
}

.extra ul {
	padding: 0;
	margin: 0;
}

.extra li {
	margin-bottom: .6e",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HsfFWi
code,"/**
 * Copyright 2015 Telerik AD
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Common Platform CSS */
@-ms-viewport {
  width: device-width;
  user-zoom: fixed;
  max-zoom: 1;
  min-zoom: 1;
}
@media (orientation: landscape) {
  .km-tablet .km-on-ios.km-horizontal.km-web:not(.km-ios-chrome) {
    position: fixed;
    bottom: 0;
  }
}
.km-root {
  font-size: .92em;
}
.km-root.km-retina input,
.km-root.km-retina select,
.km-root.km-retina textarea {
  font-size: 1em;
}
.km-root a {
  color: inherit;
}
.km-tablet {
  font-size: 1em;
}
.km-root *:focus {
  outline-width: 0;
}
.km-root,
.km-pane,
.km-pane-wrapper {
  width: 100%;
  height: 100%;
  -ms-touch-action: none;
  -ms-content-zooming: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  text-size-adjust: none;
  overflow-x: hidden;
}
.km-pane-wrapper {
  position: absolute;
}
.km-pane,
.km-shim {
  font-family: sans-serif;
}
.km-pane {
  overflow-x: hidden;
  position: relative;
}
.km-vertical .km-collapsible-pane {
  position: absolute;
  z-index: 2 !important;
  -webkit-transition: -webkit-transform 350ms ease-out;
  -ms-transition: -ms-transform 350ms ease-out;
  -o-transition: -o-transform 350ms ease-out;
  transition: transform 350ms ease-out;
  -webkit-transform: translatex(-100%);
  -ms-transform: translatex(-100%);
  -o-transform: translatex(-100%);
  transform: translatex(-100%);
}
.km-vertical .km-expanded-splitview .km-collapsible-pane {
  -webkit-transform: translatex(0);
  -ms-transform: translatex(0);
  -o-transform: translatex(0);
  transform: translatex(0);
}
.km-expanded-pane-shim {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: none;
}
.km-expanded-splitview .km-expanded-pane-shim {
  display: block;
  z-index: 1;
}
.km-root > * {
  margin: 0;
  padding: 0;
}
.km-root * {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
.km-content {
  display: block;
}
.km-view,
.km-split-content {
  top: 0;
  left: 0;
  position: absolute;
  display: -moz-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  width: 100%;
  -moz-box-orient: vertical;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: stretch;
  -ms-align-items: stretch;
  align-items: stretch;
  -webkit-align-content: stretch;
  align-content: stretch;
  vertical-align: top;
}
.k-ff .km-view,
.k-ff .km-pane {
  overflow: hidden;
}
.k-ff18 .km-view,
.k-ff18 .km-pane,
.k-ff19 .km-view,
.k-ff19 .km-pane,
.k-ff20 .km-view,
.k-ff20 .km-pane,
.k-ff21 .km-view,
.k-ff21 .km-pane {
  position: relative;
}
.k-ff .km-view {
  display: -moz-inline-box;
  display: inline-flex;
}
.km-content {
  min-height: 1px;
  -moz-box-flex: 1;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -moz-box-align: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  flex-align: stretch;
  width: auto;
  overflow: hidden;
  position: relative;
}
.km-content p,
.km-content h1,
.km-content h2,
.km-content h3,
.km-content h4,
.km-content h5,
.km-content h6 {
  margin-left: 1rem;
  margin-right: 1rem;
}
.km-header,
.km-footer {
  display: block;
  display: -moz-box;
  -moz-box-orient: vertical;
  width: 100%;
}
.km-header {
  padding: 0;
}
.km-footer {
  background: #1a1a1a;
}
[data-role=""layout""] {
  display: none;
}
/**
 * The angular tags will be converted to div kendo-mobile-view
 *
 */
[data-role=""view""],
[data-role=""drawer""],
kendo-mobile-view,
kendo-mobile-split-view,
kendo-mobile-drawer {
  visibility: hidden;
}
.km-view {
  visibility: visible;
}
.km-header,
.km-footer {
  position: relative;
  z-index: 1;
}
@media all and (-webkit-min-device-pixel-ratio: 10000), not all and (-webkit-min-device-pixel-ratio: 0) {
  .km-view {
    display: table;
  }
  .km-header,
  .km-footer,
  .km-content {
    display: table-row;
  }
  .km-header,
  .km-footer {
    height: 1px;
  }
}
.km-root .k-toolbar,
.km-navbar,
.km-button,
.km-buttongroup,
.km-tabstrip,
.km-blackberry li.km-actionsheet-cancel > a {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-origin: border-box;
  position: relative;
  display: inline-block;
  padding: .4em .7em;
  margin: .1rem;
  overflow: visible;
  text-decoration: none;
}
.km-tabstrip,
.km-root .k-toolbar,
.km-navbar {
  display: block;
  padding: .8em;
  margin: 0;
  width: 100%;
  border-width: 0;
  -moz-box-sizing: border-box;
  -webkit-b",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4qH6R2
code,"/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1
 * 
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the ""License""); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an ""AS IS"" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 * 
 * The Original Code is Bespin.
 * 
 * The Initial Developer of the Original Code is Mozilla.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 * 
 * Contributor(s):
 *     Bespin Team (bespin@mozilla.com)
 *
 * 
 * ***** END LICENSE BLOCK ***** */

body {
    padding: 0;
    margin: 0;
    background-color: #4f4e45;
    font-family: Calibri, Arial, sans-serif;
}

#version {
    float: left;
    padding: 8px;
}

#version a {
    text-decoration: none;
    color: #aaa;
}

.versionnumber {
    color: #777;
}

#loginbutton {
    float: right;
    padding: 9px 10px 0 7px;
    cursor: pointer;
}

#logged_in > div {
    float: right;
}

#loginpane {
    height: 32px;
    background-image: url(""../images/splash_toolbar_bg.png"");
    background-repeat: repeat-x;
    color: #4f4e45;
    font-size: 10pt;
    text-align: right;
}

#loginpane a {
    color: #DAD4BA;
}

#loginpane #login-holder {
    padding-top: 8px;
}

#loginpane #login-holder #psw-label {
    padding-left: 12px;
}

#loginpane input#username,
#loginpane input#password {
    border: none;
    background-image: url(""../images/splash_inputs.png"");
    background-repeat: no-repeat;
    padding: 0px 4px;
    height: 16px;
    width: 81px;
    color: #ddd;
}

#logo {
    background-image: url(""../images/splash_logo.jpg"");
    background-position: center;
    height: 269px;
}

#welcome {
    z-index: 30;
    height: 269px;
    background-image: url(""../images/splash_logo_bg.jpg"");
    background-repeat: repeat-x;
}

#toolbar {
    z-index: 40;
    height: 24px;
    margin-top: -9px;
    padding-top: 12px;
    background-image: url(""../images/splash_lowertoolbar_bg.png"");
    background-repeat: repeat-x;
    border-bottom: 1px solid black;
    color: #dad4ba;
    font-size: 12pt;
    text-shadow: 1px 1px 1px #000;
}

#footer {
    font-size: 8pt;
    color: #7c7b74;
    padding-bottom: 1em;
}

#main {
    margin: 20px auto;
    height: 181px;
    width: 800px;
}

#main h3 {
    font-size: 14px;
    font-family: ""Lucida Grande"", Tahoma, Arial, sans-serif;
    text-shadow: 1px 1px 1px #000;
}

#main p {
    font-size: 12px;
    font-family: ""Lucida Grande"", Tahoma, Arial, sans-serif;
}

#learnbespin {
    float: left;
    padding-left: 16px;
    padding-right: 0;
    padding-top: 10px;
    width: 370px;
    height: 356px;
    background-image: url(""../images/splash_contentarea_bg.png"");
    background-repeat: no-repeat;
    text-align: left;
    color: #dad4ba;
    font-size: 10pt;
}

#learnbespin img {
    cursor: pointer;
}

#main a {
    font-family: ""Lucida Grande"", Tahoma, Arial, sans-serif;
    font-size: 12px;
    color: #ff9600;
}

#usebespin {
    float: right;
    margin-left: 0;
    padding-left: 16px;
    padding-right: 16px;
    padding-top: 10px;
    width: 353px;
    height: 356px;
    background-image: url(""../images/splash_contentarea_bg.png"");
    background-repeat: no-repeat;
    text-align: left;
    color: #dad4ba;
    font-size: 10pt;
}

#usebespin h2, #learnbespin h2 {
    font-weight: normal;
    margin: 0;
    color: #ff9600;
    font-family: ""Lucida Grande"", Tahoma, Arial, sans-serif;
    font-size: 20px;
    text-align: left;
    text-shadow: 1px 1px 1px #000;
}

#usebespin input {
    border: none;
    background-image: url(""../images/splash_editnow_input.png"");
    background-repeat: no-repeat;
    padding-left: 4px;
    padding-right: 4px;
    width: 252px;
    color: #ddd;
}

#usebespin img {
    padding-right: 4px;
    padding-top: 12px;
    cursor: pointer;
}

#openid {
    float: left;
    padding-top: 9px;
    padding-left: 1em;
    color: #DDDDDD;
}

#newversion a {
    color: #ff9600;
}

#overlay {
    z-index: 10;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-color: #000000;
    opacity: 0.6;
}

#browser_not_compat {
    z-index: 20;
    background: url(""../images/background_white_50.png"");
    position: absolute;
    padding: 10px;
    width: 400px;
    -moz-border-radius: 10px;
    -webkit-border-radius: 10px;    
}

#inner_browser_not_compat {
    border: 1px solid #000;
    background: #d1cfc1;
    -moz-border-radius: 3px;
    -webkit-border-radius: 3px;
}

#browser_not_compat h3 {
    background-color: #22211e;
    background-image: url(""../images/register_toolbar_background.png"");
    background-repeat: repeat-x;
    margin: 0;
    padding: 5px;
    border: 0;
    color: #eee;
    height: 16px;
    font-size: small;
}

#sorry_browser_text {
    font-family: ""Lucida Grande"", Tahoma, ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ivuvq6
code,"﻿body {
  margin:0px;
  background-image:none;
  position:relative;
  left:-0px;
  width:1074px;
  margin-left:auto;
  margin-right:auto;
  text-align:left;
}
#base {
  position:absolute;
  z-index:0;
}
#u6641 {
  position:absolute;
  left:0px;
  top:63px;
  width:128px;
  height:320px;
}
#u6641_menu {
  position:absolute;
  left:-3px;
  top:-3px;
  width:134px;
  height:326px;
}
#u6642 {
  position:absolute;
  left:0px;
  top:0px;
  width:133px;
  height:325px;
}
#u6643_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6643 {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6644 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6645_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6645 {
  position:absolute;
  left:0px;
  top:32px;
  width:128px;
  height:32px;
}
#u6646 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6647_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6647 {
  position:absolute;
  left:0px;
  top:64px;
  width:128px;
  height:32px;
}
#u6648 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6649_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6649 {
  position:absolute;
  left:0px;
  top:96px;
  width:128px;
  height:32px;
}
#u6650 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6651_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6651 {
  position:absolute;
  left:0px;
  top:128px;
  width:128px;
  height:32px;
}
#u6652 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6653_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6653 {
  position:absolute;
  left:0px;
  top:160px;
  width:128px;
  height:32px;
}
#u6654 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6655_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6655 {
  position:absolute;
  left:0px;
  top:192px;
  width:128px;
  height:32px;
}
#u6656 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6657_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6657 {
  position:absolute;
  left:0px;
  top:224px;
  width:128px;
  height:32px;
}
#u6658 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6659_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6659 {
  position:absolute;
  left:0px;
  top:256px;
  width:128px;
  height:32px;
}
#u6660 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6661_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6661 {
  position:absolute;
  left:0px;
  top:288px;
  width:128px;
  height:32px;
}
#u6662 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  visibility:hidden;
  word-wrap:break-word;
}
#u6663 {
  position:absolute;
  left:128px;
  top:0px;
  width:128px;
  height:192px;
  visibility:hidden;
}
#u6663_menu {
  position:absolute;
  left:-3px;
  top:-3px;
  width:134px;
  height:198px;
}
#u6664 {
  position:absolute;
  left:0px;
  top:0px;
  width:133px;
  height:197px;
}
#u6665_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6665 {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6666 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6667_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6667 {
  position:absolute;
  left:0px;
  top:32px;
  width:128px;
  height:32px;
}
#u6668 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6669_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6669 {
  position:absolute;
  left:0px;
  top:64px;
  width:128px;
  height:32px;
}
#u6670 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6671_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6671 {
  position:absolute;
  left:0px;
  top:96px;
  width:128px;
  height:32px;
}
#u6672 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6673_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6673 {
  position:absolute;
  left:0px;
  top:128px;
  width:128px;
  height:32px;
}
#u6674 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6675_img {
  position:absolute;
  left:0px;
  top:0px;
  width:128px;
  height:32px;
}
#u6675 {
  position:absolute;
  left:0px;
  top:160px;
  width:128px;
  height:32px;
}
#u6676 {
  position:absolute;
  left:2px;
  top:8px;
  width:124px;
  word-wrap:break-word;
}
#u6677 {
  position:absolute;
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",epN_tL
code,"body {
	font-size: 1.0em;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",a3iw73
code,"@media (min-width: 980px) {
    /*-----*/
    .custom-bar-chart {
        margin-bottom: 40px;
    }

}

@media (min-width: 768px) and (max-width: 979px) {

    /*-----*/
    .custom-bar-chart {
        margin-bottom: 40px;
    }

    /*chat room*/

}

@media (max-width: 768px) {

    .header {
        position: absolute;
    }

    /*sidebar*/
    #sidebar {
        height: auto;
        overflow: hidden;
        position: absolute;
        width: 100%;
        z-index: 1001;
    }

    /* body container */
    #main-content {
        margin: 0px !important;
        position: none !important;
    }

    #sidebar > ul > li > a > span {
        line-height: 35px;
    }

    #sidebar > ul > li {
        margin: 0 10px 5px 10px;
    }

    #sidebar > ul > li > a {
        height: 35px;
        line-height: 35px;
        padding: 0 10px;
        text-align: left;
    }

    #sidebar > ul > li > a i {
        /*display: none !important;*/
    }

    #sidebar ul > li > a .arrow, #sidebar > ul > li > a .arrow.open {
        margin-right: 10px;
        margin-top: 15px;
    }

    #sidebar ul > li.active > a .arrow, #sidebar ul > li > a:hover .arrow, #sidebar ul > li > a:focus .arrow,
    #sidebar > ul > li.active > a .arrow.open, #sidebar > ul > li > a:hover .arrow.open, #sidebar > ul > li > a:focus .arrow.open {
        margin-top: 15px;
    }

    #sidebar > ul > li > a, #sidebar > ul > li > ul.sub > li {
        width: 100%;
    }

    #sidebar > ul > li > ul.sub > li > a {
        background: transparent !important;
    }

    #sidebar > ul > li > ul.sub > li > a:hover {

    }

    /* sidebar */
    #sidebar {
        margin: 0px !important;
    }

    /* sidebar collabler */
    #sidebar .btn-navbar.collapsed .arrow {
        display: none;
    }

    #sidebar .btn-navbar .arrow {
        position: absolute;
        right: 35px;
        width: 0;
        height: 0;
        top: 48px;
        border-bottom: 15px solid #282e36;
        border-left: 15px solid transparent;
        border-right: 15px solid transparent;
    }

    /*---------*/
    .modal-footer .btn {
        margin-bottom: 0px !important;
    }

    .btn {
        margin-bottom: 5px;
    }

    /* full calendar fix */
    .fc-header-right {
        left: 25px;
        position: absolute;
    }

    .fc-header-left .fc-button {
        margin: 0px !important;
        top: -10px !important;
    }

    .fc-header-right .fc-button {
        margin: 0px !important;
        top: -50px !important;
    }

    .fc-state-active, .fc-state-active .fc-button-inner, .fc-state-hover, .fc-state-hover .fc-button-inner {
        background: none !important;
        color: #FFFFFF !important;
    }

    .fc-state-default, .fc-state-default .fc-button-inner {
        background: none !important;
    }

    .fc-button {
        border: none !important;
        margin-right: 2px;
    }

    .fc-view {
        top: 0px !important;
    }

    .fc-button .fc-button-inner {
        margin: 0px !important;
        padding: 2px !important;
        border: none !important;
        margin-right: 2px !important;
        background-color: #fafafa !important;
        background-image: -moz-linear-gradient(top, #fafafa, #efefef) !important;
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fafafa), to(#efefef)) !important;
        background-image: -webkit-linear-gradient(top, #fafafa, #efefef) !important;
        background-image: -o-linear-gradient(top, #fafafa, #efefef) !important;
        background-image: linear-gradient(to bottom, #fafafa, #efefef) !important;
        filter: progid:dximagetransform.microsoft.gradient(startColorstr='#fafafa', endColorstr='#efefef', GradientType=0) !important;
        -webkit-box-shadow: 0 1px 0px rgba(255, 255, 255, .8) !important;
        -moz-box-shadow: 0 1px 0px rgba(255, 255, 255, .8) !important;
        box-shadow: 0 1px 0px rgba(255, 255, 255, .8) !important;
        -webkit-border-radius: 3px !important;
        -moz-border-radius: 3px !important;
        border-radius: 3px !important;
        color: #646464 !important;
        border: 1px solid #ddd !important;
        text-shadow: 0 1px 0px rgba(255, 255, 255, .6) !important;
        text-align: center;
    }

    .fc-button.fc-state-disabled .fc-button-inner {
        color: #bcbbbb !important;
    }

    .fc-button.fc-state-active .fc-button-inner {
        background-color: #e5e4e4 !important;
        background-image: -moz-linear-gradient(top, #e5e4e4, #dddcdc) !important;
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#e5e4e4), to(#dddcdc)) !important;
        background-image: -webkit-linear-gradient(top, #e5e4e4, #dddcdc) !important;
        background-image: -o-linear-gradient(top, #e5e4e4, #dddcdc) !important;
        background-image: linear-gradient(to bottom, #e5e4e4, #dddcdc) !important;
        filter: progid:dximagetransform.microsoft.gradient(startColorstr='#e5e4e4', endColorstr='#dddcdc', GradientType=0) !important;
    }

    .fc-content {
        margin-top: 50px;
    }

    .fc-header-title h2 {
        line-height: 40px !important;
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CZ9rE-
code,".ff0{font-family:sans-serif;visibility:hidden;}
@font-face{font-family:ff1;src:url(f1.woff)format(""woff"");}.ff1{font-family:ff1;line-height:1.534180;font-style:normal;font-weight:normal;visibility:visible;}
@font-face{font-family:ff2;src:url(f2.woff)format(""woff"");}.ff2{font-family:ff2;line-height:1.456055;font-style:normal;font-weight:normal;visibility:visible;}
@font-face{font-family:ff3;src:url(f3.woff)format(""woff"");}.ff3{font-family:ff3;line-height:1.695312;font-style:normal;font-weight:normal;visibility:visible;}
@font-face{font-family:ff4;src:url(f4.woff)format(""woff"");}.ff4{font-family:ff4;line-height:0.910645;font-style:normal;font-weight:normal;visibility:visible;}
.m0{transform:matrix(0.250000,0.000000,0.000000,0.250000,0,0);-ms-transform:matrix(0.250000,0.000000,0.000000,0.250000,0,0);-webkit-transform:matrix(0.250000,0.000000,0.000000,0.250000,0,0);}
.m1{transform:none;-ms-transform:none;-webkit-transform:none;}
.v0{vertical-align:0.000000px;}
.ls2{letter-spacing:-0.096000px;}
.ls0{letter-spacing:0.000000px;}
.ls1{letter-spacing:0.096000px;}
.sc_{text-shadow:none;}
.sc0{text-shadow:-0.015em 0 transparent,0 0.015em transparent,0.015em 0 transparent,0 -0.015em  transparent;}
@media screen and (-webkit-min-device-pixel-ratio:0){
.sc_{-webkit-text-stroke:0px transparent;}
.sc0{-webkit-text-stroke:0.015em transparent;text-shadow:none;}
}
.ws0{word-spacing:0.000000px;}
._0{margin-left:-1.008000px;}
._1{width:1.016000px;}
.fc1{color:rgb(255,0,0);}
.fc0{color:rgb(0,0,0);}
.fs0{font-size:48.000000px;}
.fs1{font-size:56.000000px;}
.y26{bottom:16.000000px;}
.y52{bottom:79.584000px;}
.y25{bottom:88.464000px;}
.y4e{bottom:90.144000px;}
.y51{bottom:95.544000px;}
.y24{bottom:104.420000px;}
.y4d{bottom:105.980000px;}
.y4f{bottom:108.500000px;}
.y50{bottom:108.620000px;}
.y23{bottom:120.260000px;}
.y4c{bottom:121.820000px;}
.y22{bottom:136.100000px;}
.y4b{bottom:137.660000px;}
.y21{bottom:151.940000px;}
.y4a{bottom:153.620000px;}
.y20{bottom:167.900000px;}
.y49{bottom:169.460000px;}
.y1f{bottom:183.740000px;}
.y48{bottom:185.300000px;}
.y1e{bottom:199.580000px;}
.y47{bottom:201.140000px;}
.y1d{bottom:215.450000px;}
.y46{bottom:217.130000px;}
.y1c{bottom:231.410000px;}
.y45{bottom:232.970000px;}
.y1b{bottom:247.250000px;}
.y44{bottom:248.810000px;}
.y1a{bottom:263.090000px;}
.y43{bottom:264.650000px;}
.y19{bottom:278.930000px;}
.y42{bottom:280.610000px;}
.y18{bottom:294.770000px;}
.y41{bottom:296.450000px;}
.y17{bottom:310.730000px;}
.y40{bottom:312.290000px;}
.y16{bottom:326.570000px;}
.y3f{bottom:328.130000px;}
.y15{bottom:342.410000px;}
.y3e{bottom:344.090000px;}
.y14{bottom:358.250000px;}
.y3d{bottom:359.930000px;}
.y13{bottom:374.230000px;}
.y3c{bottom:375.790000px;}
.y12{bottom:390.070000px;}
.y3b{bottom:391.630000px;}
.y11{bottom:405.910000px;}
.y3a{bottom:407.470000px;}
.y10{bottom:421.750000px;}
.y39{bottom:423.430000px;}
.yf{bottom:437.710000px;}
.y38{bottom:439.270000px;}
.ye{bottom:453.550000px;}
.y37{bottom:455.110000px;}
.yd{bottom:469.150000px;}
.y36{bottom:470.950000px;}
.yc{bottom:484.990000px;}
.y35{bottom:486.910000px;}
.yb{bottom:500.950000px;}
.y34{bottom:502.750000px;}
.ya{bottom:516.790000px;}
.y33{bottom:518.590000px;}
.y9{bottom:532.630000px;}
.y32{bottom:534.430000px;}
.y8{bottom:548.500000px;}
.y31{bottom:550.420000px;}
.y7{bottom:564.460000px;}
.y30{bottom:566.260000px;}
.y6{bottom:580.300000px;}
.y2f{bottom:582.100000px;}
.y5{bottom:596.140000px;}
.y2e{bottom:597.940000px;}
.y4{bottom:611.980000px;}
.y2d{bottom:613.900000px;}
.y3{bottom:627.940000px;}
.y2c{bottom:629.740000px;}
.y2{bottom:643.780000px;}
.y2b{bottom:645.580000px;}
.y0{bottom:656.500000px;}
.y1{bottom:656.980000px;}
.y2a{bottom:661.420000px;}
.y29{bottom:677.380000px;}
.y28{bottom:693.220000px;}
.y27{bottom:709.080000px;}
.h3{height:53.250000px;}
.h2{height:54.960938px;}
.h1{height:63.500000px;}
.h4{height:69.015625px;}
.h5{height:183.500000px;}
.h0{height:792.000000px;}
.w1{width:208.000000px;}
.w2{width:468.000000px;}
.w0{width:612.000000px;}
.x0{left:72.000000px;}
.x4{left:186.980000px;}
.x6{left:253.000000px;}
.x5{left:277.010000px;}
.x1{left:279.890000px;}
.x2{left:286.010000px;}
.x3{left:306.050000px;}
.x7{left:539.980000px;}
@media print{
.v0{vertical-align:0.000000pt;}
.ls2{letter-spacing:-0.128000pt;}
.ls0{letter-spacing:0.000000pt;}
.ls1{letter-spacing:0.128000pt;}
.ws0{word-spacing:0.000000pt;}
._0{margin-left:-1.344000pt;}
._1{width:1.354667pt;}
.fs0{font-size:64.000000pt;}
.fs1{font-size:74.666667pt;}
.y26{bottom:21.333333pt;}
.y52{bottom:106.112000pt;}
.y25{bottom:117.952000pt;}
.y4e{bottom:120.192000pt;}
.y51{bottom:127.392000pt;}
.y24{bottom:139.226667pt;}
.y4d{bottom:141.306667pt;}
.y4f{bottom:144.666667pt;}
.y50{bottom:144.826667pt;}
.y23{bottom:160.346667pt;}
.y4c{bottom:162.426667pt;}
.y22{bottom:181.466667pt;}
.y4b{bottom:183.546667pt;}
.y21{bottom:202.586667pt;}
.y4a{bottom:204.826667pt;}
.y20{bottom:223.866667pt;}
.y49{bottom:225.946667pt;}
.y1f{bottom:244.986667pt;}
.y48{bottom:247.066667pt;}
.y1e{bottom:266.106667pt;}
.y47{bottom:268.186667pt;}
.y1d{bottom:287.266667pt;}
.y46{bottom:289.506667pt;}
.y1c{bottom:30",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zc-mxR
code,"/*
 *  Copyright 2016 Detlef Gregor Herm
 *
 *  Licensed under the Apache License, Version 2.0 (the ""License"");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an ""AS IS"" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/* JavaFX CSS - Leave this comment until you have at least create one rule which uses -fx-Property */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h6llrD
code,"/*
Copyright (c) 2003-2011, CKSource - Frederico Knabben. All rights reserved.
For licensing, see LICENSE.html or http://ckeditor.com/license
*/

.yui-h-slider, .yui-v-slider {
  position: relative;
}

.yui-h-slider .yui-slider-thumb, .yui-v-slider .yui-slider-thumb {
  position: absolute;
  cursor: default;
}

.yui-skin-sam .yui-h-slider {
  background: url(bg-h.gif) no-repeat 5px 0;
  height: 28px;
  width: 228px;
}

.yui-skin-sam .yui-h-slider .yui-slider-thumb {
  top: 4px;
}

.yui-skin-sam .yui-v-slider {
  background: url(bg-v.gif) no-repeat 12px 0;
  height: 228px;
  width: 48px;
}

.cke_uicolor_picker .yui-picker-panel {
  background: #e3e3e3;
  border-color: #888;
}

.cke_uicolor_picker .yui-picker-panel .hd {
  background-color: #ccc;
  font-size: 100%;
  line-height: 100%;
  border: 1px solid #e3e3e3;
  font-weight: bold;
  overflow: hidden;
  padding: 6px;
  color: #000;
}

.cke_uicolor_picker .yui-picker-panel .bd {
  background: #e8e8e8;
  margin: 1px;
  height: 200px;
}

.cke_uicolor_picker .yui-picker-panel .ft {
  background: #e8e8e8;
  margin: 1px;
  padding: 1px;
}

.cke_uicolor_picker .yui-picker {
  position: relative;
}

.cke_uicolor_picker .yui-picker-hue-thumb {
  cursor: default;
  width: 18px;
  height: 18px;
  top: -8px;
  left: -2px;
  z-index: 9;
  position: absolute;
}

.cke_uicolor_picker .yui-picker-hue-bg {
  -moz-outline: none;
  outline: 0 none;
  position: absolute;
  left: 200px;
  height: 183px;
  width: 14px;
  background: url(hue_bg.png) no-repeat;
  top: 4px;
}

.cke_uicolor_picker .yui-picker-bg {
  -moz-outline: none;
  outline: 0 none;
  position: absolute;
  top: 4px;
  left: 4px;
  height: 182px;
  width: 182px;
  background-color: #F00;
  background-image: url(picker_mask.png);
}

*html .cke_uicolor_picker .yui-picker-bg {
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src = 'picker_mask.png', sizingMethod = 'scale');
}

.cke_uicolor_picker .yui-picker-mask {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
}

.cke_uicolor_picker .yui-picker-thumb {
  cursor: default;
  width: 11px;
  height: 11px;
  z-index: 9;
  position: absolute;
  top: -4px;
  left: -4px;
}

.cke_uicolor_picker .yui-picker-swatch {
  position: absolute;
  left: 240px;
  top: 4px;
  height: 60px;
  width: 55px;
  border: 1px solid #888;
}

.cke_uicolor_picker .yui-picker-websafe-swatch {
  position: absolute;
  left: 304px;
  top: 4px;
  height: 24px;
  width: 24px;
  border: 1px solid #888;
}

.cke_uicolor_picker .yui-picker-controls {
  position: absolute;
  top: 72px;
  left: 226px;
  font: 1em monospace;
}

.cke_uicolor_picker .yui-picker-controls .hd {
  background: transparent;
  border-width: 0 !important;
}

.cke_uicolor_picker .yui-picker-controls .bd {
  height: 100px;
  border-width: 0 !important;
}

.cke_uicolor_picker .yui-picker-controls ul {
  float: left;
  padding: 0 2px 0 0;
  margin: 0;
}

.cke_uicolor_picker .yui-picker-controls li {
  padding: 2px;
  list-style: none;
  margin: 0;
}

.cke_uicolor_picker .yui-picker-controls input {
  font-size: .85em;
  width: 2.4em;
}

.cke_uicolor_picker .yui-picker-hex-controls {
  clear: both;
  padding: 2px;
}

.cke_uicolor_picker .yui-picker-hex-controls input {
  width: 4.6em;
}

.cke_uicolor_picker .yui-picker-controls a {
  font: 1em arial, helvetica, clean, sans-serif;
  display: block;
  *display: inline-block;
  padding: 0;
  color: #000;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hIbjuR
code,".help {
    cursor: help;
    display: inline-block;
    font-size: 18px;
    margin-left: .33em;
    vertical-align: middle;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ODSxV6
code,"/*!
 * OOjs UI v0.12.4
 * https://www.mediawiki.org/wiki/OOjs_UI
 *
 * Copyright 2011–2015 OOjs UI Team and other contributors.
 * Released under the MIT license
 * http://oojs.mit-license.org
 *
 * Date: 2015-08-13T21:01:12Z
 */
.oo-ui-icon-bigger {
	background-image: url(""themes/mediawiki/images/icons/bigger-rtl.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bigger-rtl.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bigger-rtl.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/bigger-rtl.png"");
}
.oo-ui-icon-bigger-invert {
	background-image: url(""themes/mediawiki/images/icons/bigger-rtl-invert.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bigger-rtl-invert.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bigger-rtl-invert.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/bigger-rtl-invert.png"");
}
.oo-ui-icon-smaller {
	background-image: url(""themes/mediawiki/images/icons/smaller-rtl.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/smaller-rtl.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/smaller-rtl.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/smaller-rtl.png"");
}
.oo-ui-icon-smaller-invert {
	background-image: url(""themes/mediawiki/images/icons/smaller-rtl-invert.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/smaller-rtl-invert.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/smaller-rtl-invert.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/smaller-rtl-invert.png"");
}
.oo-ui-icon-subscript {
	background-image: url(""themes/mediawiki/images/icons/subscript-rtl.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/subscript-rtl.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/subscript-rtl.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/subscript-rtl.png"");
}
.oo-ui-icon-subscript-invert {
	background-image: url(""themes/mediawiki/images/icons/subscript-rtl-invert.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/subscript-rtl-invert.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/subscript-rtl-invert.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/subscript-rtl-invert.png"");
}
.oo-ui-icon-superscript {
	background-image: url(""themes/mediawiki/images/icons/superscript-rtl.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/superscript-rtl.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/superscript-rtl.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/superscript-rtl.png"");
}
.oo-ui-icon-superscript-invert {
	background-image: url(""themes/mediawiki/images/icons/superscript-rtl-invert.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/superscript-rtl-invert.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/superscript-rtl-invert.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/superscript-rtl-invert.png"");
}
.oo-ui-icon-bold {
	background-image: url(""themes/mediawiki/images/icons/bold-a.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bold-a.svg"");
	background-image:         linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bold-a.svg"");
	background-image:      -o-linear-gradient(transparent, transparent), url(""themes/mediawiki/images/icons/bold-a.png"");
}
/* @noflip */
.oo-ui-icon-bold:lang(ar) {
	background-image: url(""themes/mediawiki/images/icons/bold-arab-ain.png"");
	background-image: -webkit-linear-gradient(transparent, transparent), /* @embed */ url(""themes/mediawiki/images/icons/bold-arab-ain.svg"");
	background-",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BWrNVD
code,"/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
/* CSS file */
global {
    chromeColor: #9999FF;
    contentBackgroundColor: #CC9966;
    symbolColor: #66FF00;
    selectionColor: #0099FF;
    rollOverColor: #FF9933;
    focusColor: #009900;
    focusedTextSelectionColor: #0099FF;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tJCkOf
code,"body {
  background: red; }
  body h2 {
    color: yellow; }

/*# sourceMappingURL=styles.css.map */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AAJIyo
code,"/*QMainWindow, QMenuBar, QToolBar, QPushButton {
    background-color: #000000;
    color: #ffffff;
}

QDockWidget::title, QDockWidget::float-button, QDockWidget::close-button {
    background-color: #999999;
    color: #ffffff;
}*/



/****************************************************/
/* http://tech-artists.org/forum/showthread.php?2359-Release-Qt-dark-orange-stylesheet */
QToolTip
{
     border: 1px solid black;
     background-color: %ACCENT3%;
     /*padding: 2px;*/
     /*border-radius: 3px;*/
     opacity: 100;
     color: black;
}

QWidget
{
    color: #c0c0c0;
    background-color: #323232;
}

QWidget:item:hover
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT4%);
    color: #000000;
}

QWidget:item:selected
{
    background-color: %ACCENT2%; /*QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);*/
}


QDockWidget {
    border: 5px solid black;
}


/* MENUS */
/***********************************************/
QMenuBar::item
{
    background: transparent;
}

QMenuBar::item:selected
{
    background: transparent;
    border: 1px solid %ACCENT%;
}

QMenuBar::item:pressed
{
    background: #444;
    border: 1px solid #000;
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:1 #212121,
        stop:0.4 #343434/*,
        stop:0.2 #343434,
        stop:0.1 %ACCENT%*/
    );
    margin-bottom:-1px;
    padding-bottom:1px;
}

QMenu
{
    border: 1px solid #000;
}

QMenu::item
{
    padding: 2px 20px 2px 20px;
}

QMenu::item:selected
{
    color: #000000;
}


QWidget:disabled
{
    color: #808080;
    /*background-color: #606060;*/
}

QAbstractItemView
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0.1 #646464, stop: 1 #5d5d5d);
}

QWidget:focus
{
    /*border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);*/
}

QLineEdit
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0 #646464, stop: 1 #5d5d5d);
    padding: 1px;
    border-style: solid;
    border: 1px solid #1e1e1e;
    border-radius: 5;
}


/* CONTROLS */
/***********************************************/
QPushButton
{
    /*color: #b1b1b1;*/
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #565656, stop: 0.1 #525252, stop: 0.5 #4e4e4e, stop: 0.9 #4a4a4a, stop: 1 #464646);
    border-width: 1px;
    border-color: #1e1e1e;
    border-style: solid;
    /*border-radius: 6;*/
    /*font-size: 12px;*/
    /*padding: 5px;*/
    /*padding-left: 5px;
    padding-right: 5px;*/
}

QPushButton:pressed
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);
}

QPushButton:checked
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);
}

QComboBox
{
    selection-background-color: %ACCENT%;
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #565656, stop: 0.1 #525252, stop: 0.5 #4e4e4e, stop: 0.9 #4a4a4a, stop: 1 #464646);
    border-style: solid;
    border: 1px solid #1e1e1e;
    
    /*border-radius: 5;*/
}

QComboBox:hover,QPushButton:hover
{
    border: 1px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);
}


QComboBox:on
{
    padding-top: 3px;
    padding-left: 4px;
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);
    selection-background-color: %ACCENT%;
}

QComboBox QAbstractItemView
{
    border: 1px solid darkgray;
    selection-background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);
    selection-color: #000000;
}

QComboBox::drop-down
{
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;

     border-left-width: 0px;
     border-left-color: darkgray;
     border-left-style: solid; 
     /*border-top-right-radius: 3px; 
     border-bottom-right-radius: 3px;*/
 }

QComboBox::down-arrow
{
     image: url(:/icons/down_arrow.png);
}

QGroupBox:focus
{
border: 1px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);
}

QTextEdit:focus
{
    border: 1px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 %ACCENT3%, stop: 1 %ACCENT2%);
}



/* SCROLL BAR */
/***********************************************/

QScrollBar:horizontal {
     border: 1px solid #222222;
     background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0.0 #121212, stop: 0.2 #282828, stop: 1 #484848);
     height: 20px;
     margin: 0px 16px 0 16px;
}

QScrollBar::handle:horizontal
{
      background: ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LZ54PB
code,"/*!
 * OOjs UI v0.9.7
 * https://www.mediawiki.org/wiki/OOjs_UI
 *
 * Copyright 2011–2015 OOjs Team and other contributors.
 * Released under the MIT license
 * http://oojs.mit-license.org
 *
 * Date: 2015-04-03T21:10:27Z
 */
.oo-ui-icon-bell {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/bell.png);
}
.oo-ui-icon-bellOn {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/bellOn-ltr.png);
}
.oo-ui-icon-eye {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/eye.png);
}
.oo-ui-icon-eyeClosed {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/eyeClosed.png);
}
.oo-ui-icon-message {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/message-ltr.png);
}
.oo-ui-icon-signature {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/signature-ltr.png);
}
.oo-ui-icon-speechBubble {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/speechBubble-ltr.png);
}
.oo-ui-icon-speechBubbleAdd {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/speechBubbleAdd-ltr.png);
}
.oo-ui-icon-speechBubbles {
	background-image: /* @embed */ url(themes/mediawiki/images/icons/speechBubbles-ltr.png);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yPZ95f
code,"/* Generated by Font Squirrel (http://www.fontsquirrel.com) on June 7, 2012 02:07:42 PM America/New_York */

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-Light-webfont.eot');
    src: url('OpenSans-Light-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-Light-webfont.woff') format('woff'),
         url('OpenSans-Light-webfont.ttf') format('truetype'),
         url('OpenSans-Light-webfont.svg#OpenSansLight') format('svg');
    font-weight: lighter;
    font-weight: 300;
    font-style: normal;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-LightItalic-webfont.eot');
    src: url('OpenSans-LightItalic-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-LightItalic-webfont.woff') format('woff'),
         url('OpenSans-LightItalic-webfont.ttf') format('truetype'),
         url('OpenSans-LightItalic-webfont.svg#OpenSansLightItalic') format('svg');
    font-weight: lighter;
    font-weight: 300;
    font-style: italic;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-Regular-webfont.eot');
    src: url('OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-Regular-webfont.woff') format('woff'),
         url('OpenSans-Regular-webfont.ttf') format('truetype'),
         url('OpenSans-Regular-webfont.svg#OpenSansRegular') format('svg');
    font-weight: normal;
    font-weight: 400;
    font-style: normal;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-Italic-webfont.eot');
    src: url('OpenSans-Italic-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-Italic-webfont.woff') format('woff'),
         url('OpenSans-Italic-webfont.ttf') format('truetype'),
         url('OpenSans-Italic-webfont.svg#OpenSansItalic') format('svg');
    font-weight: normal;
    font-weight: 400;
    font-style: italic;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-Semibold-webfont.eot');
    src: url('OpenSans-Semibold-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-Semibold-webfont.woff') format('woff'),
         url('OpenSans-Semibold-webfont.ttf') format('truetype'),
         url('OpenSans-Semibold-webfont.svg#OpenSansSemibold') format('svg');
    font-weight: bold;
    font-weight: 700;
    font-style: normal;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-SemiboldItalic-webfont.eot');
    src: url('OpenSans-SemiboldItalic-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-SemiboldItalic-webfont.woff') format('woff'),
         url('OpenSans-SemiboldItalic-webfont.ttf') format('truetype'),
         url('OpenSans-SemiboldItalic-webfont.svg#OpenSansSemiboldItalic') format('svg');
    font-weight: bold;
    font-weight: 700;
    font-style: italic;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-Bold-webfont.eot');
    src: url('OpenSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-Bold-webfont.woff') format('woff'),
         url('OpenSans-Bold-webfont.ttf') format('truetype'),
         url('OpenSans-Bold-webfont.svg#OpenSansBold') format('svg');
    font-weight: bolder;
    font-weight: 700;
    font-style: normal;

}

@font-face {
    font-family: 'OpenSans';
    src: url('OpenSans-BoldItalic-webfont.eot');
    src: url('OpenSans-BoldItalic-webfont.eot?#iefix') format('embedded-opentype'),
         url('OpenSans-BoldItalic-webfont.woff') format('woff'),
         url('OpenSans-BoldItalic-webfont.ttf') format('truetype'),
         url('OpenSans-BoldItalic-webfont.svg#OpenSansBoldItalic') format('svg');
    font-weight: bolder;
    font-weight: 700;
    font-style: italic;

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fLMmeg
code,"/* css Zen Garden submission 145 - 'Paravion', by Emiliano Pennisi, http://www.peamarte.it/01/metro.html */
/* css released under Creative Commons License - http://creativecommons.org/licenses/by-nc-sa/1.0/  */
/* All associated graphics copyright 2004, Emiliano Pennisi */
/* Added: Dec. 16th, 2004 */

/* IMPORTANT */
/* This design is not a template. You may not reproduce it elsewhere without the 
   designer's written permission. However, feel free to study the CSS and use 
   techniques you learn from it elsewhere. */



body{
	font-family: ""Book Antiqua"",Georgia,""MS Sans Serif"", Geneva, sans-serif;
	background: #A3181E url(bg_body.gif) fixed repeat-x;
	margin: 0;
	text-align: center;
	margin: 0;
	padding: 0;
	height: 100%;
}

acronym {
	color: #A3181E;
	font-weight: bold;
}

/*h3 rules*/
div#linkList h3 span{
	font-size: 16px;
	background: #A3181E;
	border-bottom: 2px solid white;
	color: White;
	margin-left: 5px;
	margin-bottom: 0;
	padding: 3px;
	width: 185px;
	display: block;
}

#preamble h3 span,#supportingText h3 span{
	font-family: ""Courier New"", Courier, monospace;
	background: url(h3bg.gif) no-repeat 6px 0;
	color: #A3181E;
	font-size: 20px;
	letter-spacing: -1px;
	padding-left: 35px;
}

div#linkList h3{
	font-family: ""Book Antiqua"",Times, Helvetica, sans-serif;
	font-weight: bold;
}

/*link*/
#preamble a, #supportingText a,#linkList a{
	color: #2B497B;
	font-weight: bold;
}

#preamble a:hover,#supportingText a:hover{
	background: #2B497B;
	color: White;
	text-decoration: none;
}

/*Style for linkList acronym*/
div#linkList acronym {
	background: #A3181E;
	color: White;
}

/*child selector only for compliant mode*/
body>div#container{
	height: auto;
	min-height: 100%;
}

/*container*/
div#container{
	position: relative;
	height: 100%;
	background: url(bg_container.gif);
	margin-left: auto;
	margin-right: auto;
	border-right: 3px solid white;
	border-left: 3px solid white;
	border-bottom: 20px solid white;
	width: 650px;
	text-align: left;
	font-size: 0.8em;
}

#pageHeader {
	background: url(head.gif) no-repeat;
	height: 452px;
	margin: 0 0 30px 0;
}

#pageHeader h1,#pageHeader h2{
	display: none;
}

/*Hide quicksummary*/
#quickSummary .p2 a{
	color: #A3181E;
}

#quickSummary p.p1 span{
	display: none;
}

#quickSummary p.p2 {
	font-size: 0.9em;
	line-height: 12px;
	position: absolute;
	top: 275px;
	left: 235px;
	padding: 0 0 8px 0;
	width: 200px;
	text-transform: uppercase;
	font-weight: bold;
	border-top: 1px dashed #000;
	padding-top: 2px;
}
#preamble,#supportingText{
	position: relative;
	margin-left: 250px;
	margin-top: -30px;
	width: 400px;
}

/*child selector only for compliant mode*/
div#preamble,div#supportingText{
	background: url(st_bg.gif);
}

div#preamble,#supportingText{
	padding: 10px;
	margin-bottom: 10px;
	width: 370px; /*Start Tantek Box Model Hack*/
	voice-family: ""\""}\"""";
	voice-family: inherit;
	width: 350px;
}

/*child selector only for compliant mode*/
body > div#preamble,#supportingText{
	width: 350px;
}

/**************************Navigation**********************************/
#linkList{
	font-family: Georgia,""MS Sans Serif"", Geneva, sans-serif;
	background: url(linklist_bg.jpg);
	padding: 10px;
	width: 220px;
	position: absolute;
	top: 450px;
	margin-left: 15px; /*Start Tantek Box Model Hack*/
	voice-family: ""\""}\"""";
	voice-family: inherit;
	width: 200px;
}

#linkList li
	{
	color: #fff;
}

#linkList ul
	{
	list-style: none;
	margin: 5px;
	margin-top: -20px;
	padding: 0px;
	border-top: 10px solid #CAD2DE;
	background: #2B497B;
}

#linkList li
	{
	color: #000;
	border-bottom: 1px dotted #fff;
	padding: 0.2em 10px;
	line-height: 15px;
}

#linkList li:hover
	{
	background: #A3181E;
}

#container > #linkList ul li a:hover{
	color: White;
}

#linkList ul li a:hover{
	color: #A3181E;
}

	
#linkList li a
	{
	font-size: 10px;
	display: block;
	color: #fff;
	font-weight: bold;
	text-decoration: none;
	text-transform: uppercase;
}

#linkList li a:hover
	{
	color: #fff;
}

#linkList li a.c:hover
	{
	color: #fff;
}

#lselect ul li{
	color: White;
}

#lselect ul li a.c{
	font-weight: bold;
	display: inline;
	color: White;
	text-transform: none;
}

/*Start Footer rules*/
#footer {
	font-family: Georgia,""MS Sans Serif"", Geneva, sans-serif;
	margin: 0  -5px -5px;
	border-top: 5px solid #FFF;
	background-color: #A3181E;
	padding: 10px;
	text-transform: uppercase;
	text-align: right;
}

#footer a{
	font-size: 9px;
	color: #fff;
	font-weight: bold;
	padding: 3px;
	text-decoration: none;
	border-right: 1px solid white;
	padding: 0 5px 0 0;
}

/*End of code*/
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-dOvsp
code,"/*!
 * Bootstrap v2.3.2
 *
 * Copyright 2012 Twitter, Inc
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world @twitter by @mdo and @fat.
 */
.clearfix {
  *zoom: 1;
}
.clearfix:before,
.clearfix:after {
  display: table;
  content: """";
  line-height: 0;
}
.clearfix:after {
  clear: both;
}
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.input-block-level {
  display: block;
  width: 100%;
  min-height: 30px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]) {
  display: none;
}
html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
a:focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
a:hover,
a:active {
  outline: 0;
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  /* Responsive images (ensure images don't scale beyond their parents) */

  max-width: 100%;
  /* Part 1: Set a maxium relative to the parent */

  width: auto\9;
  /* IE7-8 need help adjusting responsive images */

  height: auto;
  /* Part 2: Scale the height according to the width, otherwise you get stretching */

  vertical-align: middle;
  border: 0;
  -ms-interpolation-mode: bicubic;
}
#map_canvas img,
.google-maps img {
  max-width: none;
}
button,
input,
select,
textarea {
  margin: 0;
  font-size: 100%;
  vertical-align: middle;
}
button,
input {
  *overflow: visible;
  line-height: normal;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}
button,
html input[type=""button""],
input[type=""reset""],
input[type=""submit""] {
  -webkit-appearance: button;
  cursor: pointer;
}
label,
select,
button,
input[type=""button""],
input[type=""reset""],
input[type=""submit""],
input[type=""radio""],
input[type=""checkbox""] {
  cursor: pointer;
}
input[type=""search""] {
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  -webkit-appearance: textfield;
}
input[type=""search""]::-webkit-search-decoration,
input[type=""search""]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}
textarea {
  overflow: auto;
  vertical-align: top;
}
@media print {
  * {
    text-shadow: none !important;
    color: #000 !important;
    background: transparent !important;
    box-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: "" ("" attr(href) "")"";
  }
  abbr[title]:after {
    content: "" ("" attr(title) "")"";
  }
  .ir a:after,
  a[href^=""javascript:""]:after,
  a[href^=""#""]:after {
    content: """";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  @page  {
    margin: 0.5cm;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
body {
  margin: 0;
  font-family: ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 20px;
  color: #2a2a2a;
  background-color: #c5ad91;
}
a {
  color: #715458;
  text-decoration: none;
}
a:hover,
a:focus {
  color: #ca3308;
  text-decoration: underline;
}
.img-rounded {
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  border-radius: 6px;
}
.img-polaroid {
  padding: 4px;
  background-color: #fff;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, 0.2);
  -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}
.img-circle {
  -webkit-border-radius: 500px;
  -moz-border-radius: 500px;
  border-radius: 500px;
}
.row {
  margin-left: -20px;
  *zoom: 1;
}
.row:before,
.row:after {
  display: table;
  content: """";
  line-height: 0;
}
.row:after {
  clear: both;
}
[class*=""span""] {
  float: left;
  min-height: 1px;
  margin-left: 20px;
}
.container,
.navbar-static-top .container,
.navbar-fixed-top .container,
.navbar-fixed-bottom .container {
  width: 940px;
}
.span12 {
  width: 940px;
}
.span11 {
  width: 860px;
}
.span10 {
  width: 780px;
}
.span9 {
  width: 700px;
}
.span8 {
  width: 620px;
}
.span7 {
  width: 540px;
}
.span6 {
  width: 460px;
}
.span5 {
  width: 380px;
}
.span4 {
  width: 300px;
}
.span3 {
  width: 220px;
}
.span2 {
  width: 140px;
}
.span1 {
  width: 60px;
}
.offset12 {
  margin-left: 980px;
}
.offset11 {
  margin-left: 900px;
}
.offset10 {
  margin-left: 820px;
}
.offset9 {
  margin-left: 740px;
}
.offset8 {
  margin-left: 660px;
}
.offset7 {
  margin-left: 580px;
}
.offset6 {
  margin-left: 500px;
}
.offset5 {
  margin-left: 420px;
}
.offset4 {
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GhWtqX
code,"	/*
 * ------------------------------------------------------------------------
 * JA Slideshow Module for J25 & J31
 * ------------------------------------------------------------------------
 * Copyright (C) 2004-2011 J.O.O.M Solutions Co., Ltd. All Rights Reserved.
 * @license - GNU/GPL, http://www.gnu.org/licenses/gpl.html
 * Author: J.O.O.M Solutions Co., Ltd
 * Websites: http://www.joomlart.com - http://www.joomlancers.com
 * ------------------------------------------------------------------------
*/

.ja-slidewrap_erio {
	width: 100%;
	position: relative;
}

.ja-slide-item img {
	background: #fff;
}

.active .ja-slide-thumb-inner {
	border: none;
	color: #fff;
}

.active .ja-slide-thumb-inner img {
	background: #57212A;
	border: 1px solid #67373F;
}

.ja-slide-thumbs-mask-left,
.ja-slide-thumbs-mask-right,
.ja-slide-thumbs-mask-center {
	float: left;
}

.ja-slide-thumbs-mask-left, .ja-slide-thumbs-mask-right {}


/* Mask Desc */
.maskDesc {
	z-index: 11;
	top: 0;
}

.main .maskDesc .inner {
	padding: 0 0 0 510px;
	position: absolute;
	top: 252px;
	left: 0;
	z-index: 12;
}

.maskDesc a.readon {
	background: #61abd6;
	color: #fff; 
	padding: 7px 15px 6px;
	display: inline-block;
	border-radius: 3px;
	-moz-border-radius: 3px;
	-webkit-border-radius: 3px;
}

.maskDesc a.readon span { cursor: pointer; }

.maskDesc a.readmore { margin-top: 30px; }

.maskDesc a.readon:hover, .maskDesc a.readon:active, .maskDesc a.readon:focus {
	background: #666;
}

.ja-slide-desc {
	position: absolute;
	top: 0;
	right: 0;
	height: 268px;
	width: 390px;
	background: #000;
	opacity: .9;
	filter: alpha(opacity = 90);
	padding: 52px 40px 40px;
}

div.ja-moduletable .ja-slide-desc h3 {
	color: #fff; 
	font-size: 300%;
}

div.ja-moduletable .ja-slide-desc h3 a { color: #fff; }

.ja-slide-desc p { color: #7b7d80; line-height: 2; }

/* Slide buttons */
#ja-slideshow .ja-slide-buttons  {
	height: 10px;
    position: relative;
    top: 10px;
    width: 28px;
    bottom: 0;
    left: 470px !important;
    z-index: 50;
} 

.ja-slide-buttons .ja-slide-playback, .ja-slide-buttons .ja-slide-stop, 
.ja-slide-buttons .ja-slide-play  {
	display: none !important;
}

.ja-slide-buttons span.ja-slide-prev, .ja-slide-buttons span.ja-slide-next {
	width: 10px;
	height: 10px;
	font-size: 0px;
	line-height: 0px;
	text-indent: -9999em;
	background: url(""thumb.png"") no-repeat scroll left top;
	padding: 0px !important;
	margin: 0px 0px 0px 3px !important;
}

.ja-slide-buttons span.ja-slide-prev.hover,
.ja-slide-buttons span.ja-slide-next.hover {
	background: url(""thumb.png"") no-repeat scroll left bottom;
}

.ja-slide-buttons span {
	color: #fff;
	cursor: pointer;
	display: block;
	float: left;
	margin-right: 5px;
	padding: 2px 5px;
	background: #61abd6;
}

/* From Articles */
.ja-articles .ja-slide-thumbs-handles,
.ja-slide-thumbs-wrap .ja-slide-thumbs-handles {
	opacity: 0.001 !important;
	filter: alpha(opacity = 0.10) !important;
	background: #000 ;
}

.ja-slide-thumbs, .ja-slide-thumbs-mask, .ja-slide-thumbs-handles {
	width: auto;
	height: auto;
	position: absolute;
	top: 0;
	left: 0 !important;
}

.ja-slide-thumb-inner {
	background: none; 
	border: none; 
	margin: 0px !important;
	padding: 0px !important;
}

#ja-slideshow .ja-slide-thumb img  {
	padding: 0px !important;
	border: none;
	margin: 0px !important;
}

#ja-slideshow .ja-slide-thumbs-wrap {
	bottom: 0px;
	right: 0px;
	background: none;
	
}
p.ja-slide-thumbs-handles {
	z-index: 1000;
}

.ja-slide-thumb .ja-slide-thumb-inner,
.ja-slide-thumbs .ja-slide-thumb {
	background: #000 !important;
	opacity: 0.3;
	filter: alpha(opacity = 30);
}

.ja-slide-thumb.active .ja-slide-thumb-inner,
.ja-slide-thumbs .ja-slide-thumb.active {
	opacity: 1;
	filter: alpha(opacity = 100);
}

.ja-slide-thumb-inner h3 {
	display: none;
}

.ja-slide-thumbs-mask {
	background: #000;
	opacity: 0.1;
	filter: alpha(opacity = 10);
}
.ja-slide-desc a {
	color: #fff;
	font-size: 300%;
	line-height: 1.2;
	margin: 0px 0px 25px;
	padding: 0px 0px 13px;
	background: url(short_hor_line.gif) no-repeat scroll 0 100%;
	display: block;
	font-family: Helvetica,Arial,sans-serif;
}

.ja-slide-desc a:hover,
.ja-slide-desc a:focus,
.ja-slide-desc a:active {
	color: #fff;
	
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",w3T0Vf
code,"/* ========================================================================
 * TABLE OF CONTENTS
 * ========================================================================
 
 * ========================================================================
 * LAYOUT
 * ========================================================================
   01. HEADER
   02. SIDEBAR LEFT & RIGHT
   03. PAGE CONTENT
 * ========================================================================
 
 * ========================================================================
 * PAGES
 * ========================================================================
   01. SIGN
   02. ERROR
   03. INVOICE
 * ========================================================================
 
 * ========================================================================
 * COMPONENT
 * ========================================================================
   01. RESET
   02. PANEL
   03. MEDIA MANAGER
   04. PAGINATION
   05. RATING STAR
   06. DROPDOWN
   07. LIST GROUP
   08. FORM
   09. TABLE
   10. BUTTON
   11. MISC
 * ========================================================================
 
 * ========================================================================
 * PLUGINS
 * ========================================================================
   01. CHOSEN
   02. DROPZONE
   03. JPRELOADER
   04. DATEPICKER
   05. ION SLIDER
 * ======================================================================== */
/* ========================================================================
 * HEADER
 * ======================================================================== */
body.page-sidebar-minimize #header .navbar-minimize > a {
  background-color: #8d8d6e;
  color: #ffffff;
}
body.page-sidebar-minimize #header .navbar-minimize:hover > a {
  background-color: #7f7f63;
}
#header .navbar-header {
  background-color: #8d8d6e;
}
/* ========================================================================
 * SIDEBAR LEFT & RIGHT
 * ======================================================================== */
.sidebar-content img {
  border: 2px solid #8d8d6e;
}
#sidebar-left.sidebar-box .sidebar-menu > li.active > a > .icon i,
#sidebar-left.sidebar-rounded .sidebar-menu > li.active > a > .icon i,
#sidebar-left.sidebar-circle .sidebar-menu > li.active > a > .icon i {
  background-color: #8d8d6e;
}
#sidebar-left.sidebar-box .sidebar-menu > li > ul > li:hover:after,
#sidebar-left.sidebar-rounded .sidebar-menu > li > ul > li:hover:after,
#sidebar-left.sidebar-circle .sidebar-menu > li > ul > li:hover:after {
  -webkit-box-shadow: 0 0 0 5px #707058;
  -moz-box-shadow: 0 0 0 5px #707058;
  box-shadow: 0 0 0 5px #707058;
}
#sidebar-left .sidebar-menu ul li:hover:after {
  background-color: #8d8d6e;
}
#sidebar-left .sidebar-menu ul li:hover a:before {
  color: #8d8d6e;
}
#sidebar-left .sidebar-menu ul li.active:after {
  background-color: #8d8d6e;
}
#sidebar-left .sidebar-menu ul li.active > ul > li.active a:before {
  color: #8d8d6e;
}
/* ========================================================================
 * PAGE CONTENT
 * ======================================================================== */
body.page-sidebar-minimize .navbar-minimize,
body.page-sidebar-minimize-auto .navbar-minimize {
  border-right: 1px solid #8d8d6e !important;
}
body.page-sidebar-minimize .navbar-minimize a,
body.page-sidebar-minimize-auto .navbar-minimize a {
  background-color: #8d8d6e;
  border-bottom: 1px solid #8d8d6e;
}
body.page-sidebar-minimize .navbar-minimize a:hover,
body.page-sidebar-minimize-auto .navbar-minimize a:hover {
  background-color: #7f7f63;
  border-bottom: 1px solid #7f7f63;
}
body.page-sidebar-minimize .navbar-minimize a i,
body.page-sidebar-minimize-auto .navbar-minimize a i {
  color: #ffffff;
}
.navbar-minimize-mobile {
  background-color: #8d8d6e;
}
.navbar-minimize-mobile:hover {
  background-color: #7f7f63;
}
@media (max-width: 768px) {
  body.page-sidebar-left-show .navbar-minimize-mobile,
  body.page-sidebar-right-show .navbar-minimize-mobile {
    background-color: #707058;
  }
  body.page-sidebar-left-show .navbar-minimize-mobile:hover,
  body.page-sidebar-right-show .navbar-minimize-mobile:hover {
    background-color: #7f7f63;
  }
}
.navbar-toolbar .navbar-form input:focus {
  border: 1px solid #8d8d6e;
}
.navbar-toolbar .navbar-form .btn-focus {
  background-color: #8d8d6e;
  box-shadow: none;
  border: none;
  color: #ffffff;
}
.navbar-toolbar .navbar-right .dropdown > a:focus > i {
  color: #8d8d6e;
}
/* ========================================================================
 * SIGN
 * ======================================================================== */
.sign-wrapper a {
  color: #8d8d6e;
}
.sign-wrapper a:hover,
.sign-wrapper a:focus,
.sign-wrapper a:active {
  color: #8a8a6c;
}
.sign-text:before {
  background-color: #a4a48a;
}
.sign-header {
  background-color: #8d8d6e;
  border-bottom: 10px solid #79795e;
}
.sign-text span {
  background-color: #8d8d6e;
}
.sign-text img {
  border: 7px solid #8d8d6e;
}
/* =========================================",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3wM7S4
code,"
ace_comment { color: #a86; }
ace_keyword { line-height: 1em; font-weight: bold; color: blue; }
ace_string { color: #a22; }
ace_builtin { line-height: 1em; font-weight: bold; color: #077; }
ace_special { line-height: 1em; font-weight: bold; color: #0aa; }
ace_variable { color: black; }
ace_number, ace_atom { color: #3a3; }
ace_meta { color: #555; }
ace_link { color: #3a3; }
ace_activeline-background { background: #e8f2ff; }
ace_matchingbracket { outline:1px solid grey; color:black !important; }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NF9cg2
code,"*{
	margin: 0px;
	padding: 0px;
}

#introduce{
	width: 1000px;
	height: 680px;
	background-color: #f4f4f4;
	margin: auto;
}

h1{
	font-size: 2em;
	text-align: center;
}

li{
	list-style: none;
	font-size: 1em;
}

#pic1{
	margin-left: 60px;
	float: left;
	width: 361px;
	height: 237px;
}

#pic2{
	margin-left: 300px;
	float: left;
	width: 169px;
	height: 237px;
}

#pic-describe{
	text-align: center;
	font-size: 13px;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pSNw6Q
code,"/*
 * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.
 * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Apple Computer, Inc. (""Apple"") nor the names of
 *     its contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS ""AS IS"" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

.resources.panel .sidebar {
    padding-left: 0;
    z-index: 10;
    display: block;
}

.resources.panel .sidebar li {
    height: 18px;
    white-space: nowrap;
}

.resources.panel .sidebar li.selected {
    color: white;
    text-shadow: rgba(0, 0, 0, 0.33) 1px 1px 0;
}

.resources.panel .sidebar li.selected .selection {
    background-image: linear-gradient(to bottom, rgb(162, 177, 207), rgb(120, 138, 177));
    border-top: 1px solid #979797;
    height: 18px;
}

.resources.panel .sidebar :focus li.selected .selection {
    background-image: linear-gradient(to bottom, rgb(92, 147, 213), rgb(21, 83, 170));
    border-top: 1px solid rgb(68, 128, 200);
}

body.inactive .resources.panel .sidebar li.selected .selection {
    background-image: linear-gradient(to bottom, rgb(180, 180, 180), rgb(138, 138, 138));
    border-top: 1px solid rgb(151, 151, 151);
}

.resources.panel .sidebar .icon {
    width: 16px;
    height: 16px;
    float: left;
}

.resources.panel .base-storage-tree-element-title {
    overflow: hidden;
    position: relative;
    text-overflow: ellipsis;
    padding-left: 2px;
    top: 1px;
}

.resources-toolbar {
    border-top: 1px solid #ccc;
    background-color: #eee;
}

li.selected .base-storage-tree-element-subtitle {
    color: white;
}

.base-storage-tree-element-subtitle {
    padding-left: 2px;
    color: rgb(80, 80, 80);
    text-shadow: none;
}

.resources.panel .status {
    float: right;
    height: 16px;
    margin-top: 1px;
    margin-left: 4px;
    line-height: 1em;
}

.resources.panel li .status .bubble-repeat-count {
    height: 13px;
    margin-top: 1px;
    padding-top: 0;
}

.storage-view {
    display: flex;
    overflow: hidden;
}

.storage-view {
    overflow: hidden;
}

.storage-view .data-grid:not(.inline) {
    border: none;
    flex: auto;
}

.storage-view .storage-table-error {
    color: rgb(66%, 33%, 33%);
    font-size: 24px;
    font-weight: bold;
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.storage-view.query {
    padding: 2px 0;
    overflow-y: overlay;
    overflow-x: hidden;
}

.database-query-prompt {
    position: relative;
    padding: 1px 22px 1px 24px;
    min-height: 16px;
    white-space: pre-wrap;
    -webkit-user-modify: read-write-plaintext-only;
    -webkit-user-select: text;
}

.database-user-query::before,
.database-query-prompt::before,
.database-query-result::before {
    position: absolute;
    display: block;
    content: """";
    left: 7px;
    top: 0.8em;
    width: 10px;
    height: 10px;
    margin-top: -7px;
    -webkit-user-select: none;
    background-image: url(Images/toolbarButtonGlyphs.png);
    background-size: 352px 168px;
}

@media (-webkit-min-device-pixel-ratio: 1.5) {
.database-user-query::before,
.database-query-prompt::before,
.database-query-result::before {
    background-image: url(Images/toolbarButtonGlyphs_2x.png);
}
} /* media */

.database-query-prompt::before {
    background-position: -192px -96px;
}

.database-user-query {
    position: relative;
    border-bottom: 1px solid rgb(245, 245, 245);
    padding: 1px 22px 1px 24px;
    min-height: 16px;
    flex-shrink: 0;
}

.database-user-query::before {
    background-position: -192px -107px;
}

.database-query-text {
    color: rgb(0, 128, 255);
    -webkit-user-select: text;
}

.database-query-result {
    position: relative;
    padding: 1px 22px 1px 24px;
    min-height: 16px;
    margin-left: -24px;
    padding-right: 0;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",L5UKam
code,"/****************************************************************************************************************

	Default styles for the WYSIWYG editor
	
	Adding style-editor.css to a child theme's root will over-write these styles.

****************************************************************************************************************/

html .mceContentBody {
	max-width:640px;
	background:#fff;
	color:#333;
	font:100% Arial,sans-serif;
	line-height:1.5em;
}
* {
	font-family: Arial,sans-serif;
	color: #333;
	line-height: 1.5em;
}
a, a:visited {
	text-decoration:none;
	color:#999;
}
a:hover, a:active {
	color:#333;
}
h1,h2,h3,h4,h5,h6 {
	color:#111;
	font-weight:bold;
	font-family:Arial,sans-serif;
	line-height:2em;
}
h1 { font-size:2em; }
h2 { font-size:1.8em; }
h3 { font-size:1.4em; }
h4 { font-size:1.2em; }
h5 { font-size:1em; }
h6 { font-size:.8em; }
hr {
	margin:1.4em auto;
	display:block;
	clear:both;
	border-collapse:collapse;
	border:0;
	border-bottom:1px solid #aaa;
}
p { margin-bottom:18px; }
blockquote { font-style:italic; }
cite { border:0; }
sup, sub { font-size:.6em; }
pre {
	background:#f9f9f9;
	padding:1em;
	border:1px solid #dadada;
}
del {
	color:inherit;
}
ins {
	background:#ff8;
	color:inherit;
	text-decoration:none;
	border:0;
	padding:0 4px;
}
.wp-caption {
	background:#f0f0f0;
	color:#555;
	padding:10px;
	border:1px solid #ddd;
}
.wp-caption img { margin:0; padding:0; }

strong { color:#111; }
table {
	border:1px solid #ddd;
	width:100%;
}
table th {
	padding:5px 20px;
	text-align:left;
	font-weight:bold;
	color:#111;
}
table td {
	border-top:1px solid #ddd;
	padding:5px 20px;
}
.al, .alignleft, .left {
	position:relative;
	float:left!important;
	margin-right:10px;
}
.ar, .alignright, .right {
	position:relative;
	float:right!important;
	margin-left:10px;
}
.ma {margin:auto;}
.cb {clear:both;}
img, p img {
	float:none;
	margin:auto;
	border:0;
}
.more-link {
	display:block;
	position:relative;
	float:left;
	clear:both;
}
.submit-button {
	background:#333;
	color:#fff;
	border:0;
	width:auto;
	font-weight:bold;
	text-transform:uppercase;
}
.submit-button:hover {
	background:#555;
}
.hideme {
	display:none;
}
dl,
ul,
ol {
	margin:1em 2em;
}
dl dl,
ul ul,
ol ol {
	margin:0em 2em;
}
ul {
	list-style:disc;
}
ol {
	list-style-type:lower-roman;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JdFPbn
code,"/*

   TEXT DECORATION

*/
.strike { text-decoration: line-through; }
.underline { text-decoration: underline; }
.no-underline { text-decoration: none; }
@media screen and (min-width: 30em) {
 .strike-ns { text-decoration: line-through; }
 .underline-ns { text-decoration: underline; }
 .no-underline-ns { text-decoration: none; }
}
@media screen and (min-width: 30em) and (max-width: 60em) {
 .strike-m { text-decoration: line-through; }
 .underline-m { text-decoration: underline; }
 .no-underline-m { text-decoration: none; }
}
@media screen and (min-width: 60em) {
 .strike-l { text-decoration: line-through; }
 .underline-l { text-decoration: underline; }
 .no-underline-l { text-decoration: none; }
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uKKOKl
code,".container {
  margin:10px;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HPk432
code,"li a {
    color: green;
}

body {
    background: white url(""images/background.gif"") no-repeat right bottom;
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",noaM5W
code,".dividend-wrap {
  display: none;
}
.dividend-wrap.active {
  display: flex;
  width: 100%;
}
.overflow.dividendModal > form input::-webkit-input-placeholder { /* Chrome/Opera/Safari */
  opacity: .8;
  color: #fff;
  font-size: 14px;
}
.overflow.dividendModal > form input::-moz-placeholder { /* Firefox 19+ */
  opacity: .8;
  color: #fff;
  font-size: 14px;
}
.overflow.dividendModal > form input:-moz-placeholder { /* Firefox 18- */
  opacity: .8;
  color: #fff;
  font-size: 14px;
}
.overflow.dividendModal > form input:-ms-input-placeholder { /* IE 10+ */
  opacity: .8;
  color: #fff;
  font-size: 14px;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FtYbCK
code,"/**
 * @package    AcyMailing for Joomla!
 * @version    4.8.1
 * @author     acyba.com
 * @copyright  (C) 2009-2014 ACYBA S.A.R.L. All rights reserved.
 * @license    GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 */

@import url(""module_default_radial_black.css"");




.acymailing_module .inputbox:hover{
	border:1px solid #bfd8e1 !important;
	border-bottom:1px solid #9dbcc7 !important;
	-moz-box-shadow: inset 0 0 3px 3px #e2eef2 !important;
-webkit-box-shadow: inset 0 0 3px 3px#e2eef2 !important;}

.acymailing_module .inputbox:focus{
	border:1px solid  #6A9195 !important;}




.acysubbuttons .button, .acysubbuttons button.validate, .acymailing_mootoolsbutton a:link, .acymailing_mootoolsbutton a:visited {
	color:#fff !important;
	border:1px solid #6A9195 !important;
	-moz-border-radius:5px !important;
	text-shadow:1px 1px 1px #666 !important;

background-image: radial-gradient(top, #dae9ee  21%, #6A9195 58%) !important;
background-image: -o-radial-gradient(top, #dae9ee 21%, #6A9195 58%) !important;
background-image: -moz-radial-gradient(top, #dae9ee 21%, #6A9195 58%) !important;
background-image: -webkit-radial-gradient(top, #dae9ee 21%, #6A9195 58%) !important;
background-image: -ms-radial-gradient(top, #dae9ee 21%, #6A9195 58%) !important;

  background: -ms-radial-gradient(top, ellipse cover, #dae9ee 0%,#6A9195 100%); 
  background: radial-gradient(top, ellipse cover, #dae9ee 0%,#6A9195 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#dae9ee', endColorstr='#6A9195',GradientType=1 ) !important; 
}

.acysubbuttons .button:hover, .acysubbuttons button.validate:hover, .acymailing_mootoolsbutton a:hover, .acymailing_mootoolsbutton a:active {
	color:#fff !important;
	border:1px solid #68a2b2 !important;
	-moz-border-radius:5px !important;
	text-shadow:1px 1px 1px #666 !important;

background-image: radial-gradient(top, #dae9ee  21%, #68a2b2 58%) !important;
background-image: -o-radial-gradient(top, #dae9ee 21%, #68a2b2 58%) !important;
background-image: -moz-radial-gradient(top, #dae9ee 21%, #68a2b2 58%) !important;
background-image: -webkit-radial-gradient(top, #dae9ee 21%, #68a2b2 58%) !important;
background-image: -ms-radial-gradient(top, #dae9ee 21%, #68a2b2 58%) !important;

  background: -ms-radial-gradient(top, ellipse cover, #dae9ee 0%,#68a2b2 100%); 
  background: radial-gradient(top, ellipse cover, #dae9ee 0%,#68a2b2 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#dae9ee', endColorstr='#68a2b2',GradientType=1 ) !important; 
}




.acymailing_module form a:hover, .acymailing_module form a:active, .acymailing_module form a:focus{
	color:#79adb2!important;
	text-decoration:underline !important;
	background-color:transparent !important;}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",j3-mue
code,"html {
  overflow-y: auto;
}

body {
  padding: 1em;
}

.snippets {
}

.snippet {
  background: white;
  padding: 10px 20px 0px 20px;
  margin-top: 20px;
  border: 1px solid #ddd;
}

.snippet h2 {
  margin-top: 0;
  margin-left: -10px;
}

.snippet pre {
  font-size: 13px;
  overflow: auto;
  -webkit-user-select: initial;
}

.snippet h2 span {
  display: inline-block;
  margin-left: 1em;
  font-size: 10px;
  font-weight: normal;
}

.snippet h2 span a {
  text-decoration: none;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9V5ybg
code,"#form {
    top: 70%;
    left: 50%;
    width: 60%;
}

#main-login-form {
  top: 70%;
  left: 50%;
  width: 60%;
  background-color: #FFFFFF;
  border-radius: 10px;
  padding: 12px 20px;
}

.fixed-form {
	position: fixed;
	-webkit-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
}

.form-partial-container {
	margin: 0 auto;
}

.centered {
  text-align: center;
}

.error-message {
  color: red;
  margin-bottom: 10px;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oCIuB9
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at <http://mozilla.org/MPL/2.0/>. */

.frames ul .frames-group .group,
.frames ul .frames-group .group .location {
  font-weight: 500;
  cursor: default;
}

.frames ul .frames-group.expanded .group,
.frames ul .frames-group.expanded .group .location {
  color: var(--theme-highlight-blue);
}

.frames ul .frames-group.expanded .react path {
  fill: var(--theme-highlight-blue);
}

.frames ul .frames-group .frames-list li {
  padding-left: 30px;
}

.frames ul .frames-group .frames-list {
  border-top: 1px solid var(--theme-splitter-color);
  border-bottom: 1px solid var(--theme-splitter-color);
}

.frames ul .frames-group.expanded .badge {
  color: var(--theme-highlight-blue);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wbXwkK
code,"/* Slideshow container */
.slideshow-container {
  max-width: 1000px;
  position: relative;
  margin: auto;
}

/* Next & previous buttons */
.prev, .next {
  cursor: pointer;
  position: absolute;
  top: 50%;
  width: auto;
  margin-top: -22px;
  padding: 16px;
  color: white;
  font-weight: bold;
  font-size: 18px;
  transition: 0.6s ease;
  border-radius: 0 3px 3px 0;
}

/* Position the ""next button"" to the right */
.next {
  right: 0;
  border-radius: 3px 0 0 3px;
}

/* On hover, add a black background color with a little bit see-through */
.prev:hover, .next:hover {
  background-color: rgba(0,0,0,0.8);
}

/* Caption text */
.text {
  color: #f2f2f2;
  font-size: 15px;
  padding: 8px 12px;
  position: absolute;
  bottom: 8px;
  width: 100%;
  text-align: center;
}

/* Number text (1/3 etc) */
.numbertext {
  color: #f2f2f2;
  font-size: 12px;
  padding: 8px 12px;
  position: absolute;
  top: 0;
}

/* The dots/bullets/indicators */
.dot {
  cursor:pointer;
  height: 13px;
  width: 13px;
  margin: 0 2px;
  background-color: #bbb;
  border-radius: 50%;
  display: inline-block;
  transition: background-color 0.6s ease;
}

.active, .dot:hover {
  background-color: #717171;
}

/* Fading animation */
.fade {
  -webkit-animation-name: fade;
  -webkit-animation-duration: 1.5s;
  animation-name: fade;
  animation-duration: 1.5s;
}

@-webkit-keyframes fade {
  from {opacity: .4} 
  to {opacity: 1}
}

@keyframes fade {
  from {opacity: .4} 
  to {opacity: 1}
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F2EU8p
code,"#datatable-filter-form td,
#summary-filter-form td,
#datalist-filter-form td {
    border: none;
}

.filter-controls {
    clear: both;
}

/*button.btn.btn-primary.btn-filter,*/
input.btn.btn-primary.filter-submit {
    width: 90%;
    padding-right: 5px;
    padding-left: 5px;
}

input.btn.btn-primary.filter-submit.filter-ajax {
    width: 100%;
    margin-top: 15px;
    margin-bottom: -15px;
    margin-left: -1px;
}

/* Responsive styling */
input.filter-search{
    width: 50%;
    text-align: left;
}

/* Large desktop */
@media (min-width: 1200px) { 
    input.filter-search{
        width: 66%;
    }
}

/* Portrait tablet to landscape and desktop */
@media (min-width: 768px) and (max-width: 979px) {
    input.filter-search{
        width: 33%;
    }
    input.btn.btn-primary.filter-submit.filter-ajax {
        width: 100%;
        margin-left: -1px;
    }
}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
    input.filter-search{
		width: 100% !important;
	}
	input.btn.btn-primary.filter-submit.filter-ajax {
        width: 100%;
        margin-left: -1px;
    }
}

/* Landscape phones and down */
@media (max-width: 480px) { 
	input.filter-search{
		width: 100% !important;
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ivZ3YW
code,"#device-check, #landing-device-check {
	background: #000000;
}


/****** landing start ******/
.landing-logo-container {
	width: 100%;
	height: 140px;
	margin: 0 auto 10px auto;
	padding-top: 15px;
	background: rgba(0, 0, 0, 0.5);
}

.landing-logo {
	width: 130px;
	height: 125px;
}

.landing-social-container {
	position: absolute;
	display: inline-block;
	width: 100%;
	margin: 0 auto;
	padding: 0 0 20px 0;
	bottom: 0;
	left: 0;
	text-align: center;
}

.landing-social-container input {
	height: 40px;
	font-size: 0.6em;
	font-weight: 300;
	padding-left: 10px;
	padding-right: 30px;
	width: 250px;
	text-align: center;
	border: none;
	background: rgba(0, 0, 0, 0.5);
}

.landing-social-container > img {
	display: inline-block;
	height: 34px;
	width: 30px;
	padding: 3px 5px;
	margin-left: -45px;
	vertical-align: bottom;
	cursor: pointer;
	background: rgba(0, 0, 0, 0.5);
	opacity: 0.5;
}

.landing-social-container > img:hover {
	opacity: 1;
}

.landing-social-container > a > img.social-icon {
	width: 50px;
	height: 50px;
	margin: 15px 5px 0 5px;
	opacity: 0.3;
}

.landing-social-container > a > img.social-icon:hover {
	opacity: 1;
}
/****** landing end ******/


.container {
	width: 100%;
}

.container > .logo-container > input {
	width: 60%;
	height: 50px;
	margin-top: 8px;
}

.container > .logo-container .withLeftMargin {
	margin-left: 5%;
}

nav, nav > ul, nav > ul > li {
	height: 50px;
}

nav > ul > li {
	padding-top: 30px;
}

nav > ul > li > img {
	width: 25px;
	height: 25px;
}

nav > ul > li.special > img {
	width: 32px;
	height: 23px;
	margin-top: 2px;
}

.container > section.page-container {
	height: 350px;
	padding-top: 30px;
}

.container > button {
	height: 70px;
}

.container > button > img {
	width: 40px;
	height: 30px;
	margin-top: 5px;
}

/* info page */
div#page4 #address-icon {
	margin-top: 25px;
}

div#page4 hr {
	margin-bottom: 10px;
}

div#page4 input {
	width: 60%;
	font-size: 0.8em;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",deTKJw
code,"form.style {
	clear: both;
}

form.style label { 
	width:100px; 
	display:block; 
	float:left; 
	padding-top:4px; 
	font-size:14px;
	color:#FFF;
	text-align:right; 
	padding-right:30px;
}




form.style label.long {
	width: auto;
	display: inline;
	float:none;
	padding: 0;
	
}


form.style input, form.style textarea {
	padding:3px 6px 3px 6px;
	font-size:14px;
	background-color:#EEE;
	border:2px solid #999;
	font-family:""Trebuchet MS"";
	color:#0099FF;
	width:200px;
	
	
}

form.style textarea { width: 300px}
form.style input.radio {width: 30px;}
form.style input:focus, form.style textarea:focus {
	border-color:#00A8FF
}

form.style input.submit {
	color:#FFF;
	background-color:#0F414F;
	border-color:#000000;
	width:100px;

}

form.style fieldset {
		border:0
}

form.style h2 {
	margin-bottom:25px;
	margin-top:10px;
	width: 60%;
	border-bottom: 1px dashed #00A8FF;
	padding-bottom: 7px;
	padding-left:10px;
	font-size:20px
}


.contact_l {
	margin-left:80px !important; margin-left: 50px;
	width: 250px;
	float:left
} .contact_l img { vertical-align: middle;}
.contact_d {
	width: 500px;
	float:left
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YwZTAb
code,"/*!
 * Start Bootstrap - Agency Bootstrap Theme (http://startbootstrap.com)
 * Code licensed under the Apache License v2.0.
 * For details, see http://www.apache.org/licenses/LICENSE-2.0.
 */
body {
  overflow-x: hidden;
  font-family: ""Roboto Slab"", ""Helvetica Neue"", Helvetica, Arial, sans-serif;
}
.text-muted {
  color: #777;
}
.text-primary {
  color: #fed136;
}
p {
  font-size: 14px;
  line-height: 1.75;
  font-family: ""Merriweather"", serif;
}
p.large {
  font-size: 16px;
}
a,
a:hover,
a:focus,
a:active,
a.active {
  outline: 0;
}
a {
  color: #fed136;
}
a:hover,
a:focus,
a:active,
a.active {
  color: #fed136;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-transform: uppercase;
  font-family: Montserrat, ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  font-weight: 700;
}
.img-centered {
  margin: 0 auto;
}
.bg-light-gray {
  background-color: #f7f7f7;
}
.bg-darkest-gray {
  background-color: #222;
}
.btn-primary {
  border-color: #fed136;
  text-transform: uppercase;
  font-family: Montserrat, ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  font-weight: 700;
  color: #fff;
  background-color: #fed136;
}
.btn-primary:hover,
.btn-primary:focus,
.btn-primary:active,
.btn-primary.active,
.open .dropdown-toggle.btn-primary {
  border-color: #f6bf01;
  color: #fff;
  background-color: #fec503;
}
.btn-primary:active,
.btn-primary.active,
.open .dropdown-toggle.btn-primary {
  background-image: none;
}
.btn-primary.disabled,
.btn-primary[disabled],
fieldset[disabled] .btn-primary,
.btn-primary.disabled:hover,
.btn-primary[disabled]:hover,
fieldset[disabled] .btn-primary:hover,
.btn-primary.disabled:focus,
.btn-primary[disabled]:focus,
fieldset[disabled] .btn-primary:focus,
.btn-primary.disabled:active,
.btn-primary[disabled]:active,
fieldset[disabled] .btn-primary:active,
.btn-primary.disabled.active,
.btn-primary[disabled].active,
fieldset[disabled] .btn-primary.active {
  border-color: #fed136;
  background-color: #fed136;
}
.btn-primary .badge {
  color: #fed136;
  background-color: #fff;
}
.btn-xl {
  padding: 20px 40px;
  border-color: #fed136;
  border-radius: 3px;
  text-transform: uppercase;
  font-family: Montserrat, ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  font-size: 18px;
  font-weight: 700;
  color: #fff;
  background-color: #fed136;
}
.btn-xl:hover,
.btn-xl:focus,
.btn-xl:active,
.btn-xl.active,
.open .dropdown-toggle.btn-xl {
  border-color: #f6bf01;
  color: #fff;
  background-color: #fec503;
}
.btn-xl:active,
.btn-xl.active,
.open .dropdown-toggle.btn-xl {
  background-image: none;
}
.btn-xl.disabled,
.btn-xl[disabled],
fieldset[disabled] .btn-xl,
.btn-xl.disabled:hover,
.btn-xl[disabled]:hover,
fieldset[disabled] .btn-xl:hover,
.btn-xl.disabled:focus,
.btn-xl[disabled]:focus,
fieldset[disabled] .btn-xl:focus,
.btn-xl.disabled:active,
.btn-xl[disabled]:active,
fieldset[disabled] .btn-xl:active,
.btn-xl.disabled.active,
.btn-xl[disabled].active,
fieldset[disabled] .btn-xl.active {
  border-color: #fed136;
  background-color: #fed136;
}
.btn-xl .badge {
  color: #fed136;
  background-color: #fff;
}
.navbar-default {
  border-color: transparent;
  background-color: #222;
}
.navbar-default .navbar-brand {
  font-family: ""Jockey One"", ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  color: #fed136;
}
.navbar-default .navbar-brand:hover,
.navbar-default .navbar-brand:focus,
.navbar-default .navbar-brand:active,
.navbar-default .navbar-brand.active {
  color: #fed136;
}
.navbar-default .navbar-collapse {
  border-color: rgba(255, 255, 255, 0.02);
}
.navbar-default .navbar-toggle {
  border-color: #fed136;
  background-color: #fed136;
}
.navbar-default .navbar-toggle .icon-bar {
  background-color: #fff;
}
.navbar-default .navbar-toggle:hover,
.navbar-default .navbar-toggle:focus {
  background-color: #fed136;
}
.navbar-default .nav li a {
  text-transform: uppercase;
  font-family: Montserrat, ""Helvetica Neue"", Helvetica, Arial, sans-serif;
  font-weight: 400;
  letter-spacing: 1px;
  color: #fff;
}
.navbar-default .nav li a:hover,
.navbar-default .nav li a:focus {
  outline: 0;
  color: #fed136;
}
.navbar-default .navbar-nav > .active > a {
  border-radius: 0;
  color: #fff;
  background-color: #fed136;
}
.navbar-default .navbar-nav > .active > a:hover,
.navbar-default .navbar-nav > .active > a:focus {
  color: #fff;
  background-color: #fec503;
}
@media (min-width: 768px) {
  .navbar-default {
    padding: 25px 0;
    border: 0;
    background-color: transparent;
    -webkit-transition: padding .3s;
    -moz-transition: padding .3s;
    transition: padding .3s;
  }
  .navbar-default .navbar-brand {
    font-size: 2em;
    -webkit-transition: all .3s;
    -moz-transition: all .3s;
    transition: all .3s;
  }
  .navbar-default .navbar-nav > .active > a {
    border-radius: 3px;
  }
  .navbar-default.navbar-shrink {
    padding: 10px 0;
    background-color: #222;
  }
  .navbar-default.navbar-shrink .navbar-brand {
    font-size: 1.5em;
  }
}
header {
  text-align: center;
  color: #fff;
  background-attachment: scroll;
  background-image: url('../img/globe2.jpg');
  background-position: center center;
  background-rep",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mKa5eJ
code,"/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.0-master-ce33beb
 */
md-radio-button.md-THEME_NAME-theme .md-off {
  border-color: '{{foreground-2}}'; }

md-radio-button.md-THEME_NAME-theme .md-on {
  background-color: '{{accent-color-0.87}}'; }

md-radio-button.md-THEME_NAME-theme.md-checked .md-off {
  border-color: '{{accent-color-0.87}}'; }

md-radio-button.md-THEME_NAME-theme.md-checked .md-ink-ripple {
  color: '{{accent-color-0.87}}'; }

md-radio-button.md-THEME_NAME-theme .md-container .md-ripple {
  color: '{{accent-A700}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-on,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-on,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-on {
  background-color: '{{primary-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-off {
  border-color: '{{primary-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple {
  color: '{{primary-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-container .md-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-container .md-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-container .md-ripple {
  color: '{{primary-600}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-on,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-on,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-on {
  background-color: '{{warn-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-off,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-off {
  border-color: '{{warn-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple {
  color: '{{warn-color-0.87}}'; }

md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-container .md-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-container .md-ripple,
md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-container .md-ripple {
  color: '{{warn-600}}'; }

md-radio-group.md-THEME_NAME-theme[disabled],
md-radio-button.md-THEME_NAME-theme[disabled] {
  color: '{{foreground-3}}'; }
  md-radio-group.md-THEME_NAME-theme[disabled] .md-container .md-off,
  md-radio-button.md-T",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wYOsh2
code,"# Run Chrome Headless in a container
#
# What was once a container using the experimental build of headless_shell from
# tip, this container now runs and exposes stable Chrome headless via
# google-chome --headless.
#
# What's New
#
# 1. Pulls from Chrome Stable
# 2. You can now use the ever-awesome Jessie Frazelle seccomp profile for Chrome.
#     wget https://raw.githubusercontent.com/jfrazelle/dotfiles/master/etc/docker/seccomp/chrome.json -O ~/chrome.json
#
#
# To run (without seccomp):
# docker run -d -p 9222:9222 --cap-add=SYS_ADMIN justinribeiro/chrome-headless
#
# To run a better way (with seccomp):
# docker run -d -p 9222:9222 --security-opt seccomp=$HOME/chrome.json justinribeiro/chrome-headless
#
# Basic use: open Chrome, navigate to http://localhost:9222/
#

# Base docker image
FROM debian:buster-slim
LABEL name=""chrome-headless"" \
	maintainer=""Justin Ribeiro <justin@justinribeiro.com>"" \
	version=""3.0"" \
	description=""Google Chrome Headless in a container""

# Install deps + add Chrome Stable + purge all the things
RUN apt-get update && apt-get install -y \
	apt-transport-https \
	ca-certificates \
	curl \
	gnupg \
	--no-install-recommends \
	&& curl -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
	&& echo ""deb https://dl.google.com/linux/chrome/deb/ stable main"" > /etc/apt/sources.list.d/google-chrome.list \
	&& apt-get update && apt-get install -y \
	google-chrome-stable \
	fontconfig \
	fonts-ipafont-gothic \
	fonts-wqy-zenhei \
	fonts-thai-tlwg \
	fonts-kacst \
	fonts-symbola \
	fonts-noto \
	fonts-freefont-ttf \
	--no-install-recommends \
	&& apt-get purge --auto-remove -y curl gnupg \
	&& rm -rf /var/lib/apt/lists/*

# Add Chrome as a user
RUN groupadd -r chrome && useradd -r -g chrome -G audio,video chrome \
	&& mkdir -p /home/chrome && chown -R chrome:chrome /home/chrome

# Run Chrome non-privileged
USER chrome

# Expose port 9222
EXPOSE 9222

# Autorun chrome headless with no GPU
ENTRYPOINT [ ""google-chrome"" ]
CMD [ ""--headless"", ""--disable-gpu"", ""--remote-debugging-address=0.0.0.0"", ""--remote-debugging-port=9222"" ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YJ5E0g
code,"FROM nginx

MAINTAINER Alexander Li <a.li@playboy.de>

RUN rm /etc/nginx/nginx.conf
ADD nginx.conf /etc/nginx/

RUN \
  apt-get update && apt-get -y install apt-utils && \
  apt-get -y install wget && \
  apt-get -y install imagemagick && \
  wget http://pear.php.net/go-pear.phar && \
  apt-get -y install vim && \

# Install PHP, MySQL Client, Curl
  apt-get -y install php5-cli php5-fpm php5-pgsql php5-gd php5-imagick php5-curl php5-mysqlnd php5-xdebug php5-dev curl mysql-client && \

# Various
  php go-pear.phar && \
  pecl install -f xhprof && \

# PHP Settings
  echo ""listen.mode = 0666"" >> /etc/php5/fpm/pool.d/www.conf && echo ""clear_env = no"" >> /etc/php5/fpm/pool.d/www.conf && \
  echo ""date.timezone = Europe/Berlin"" >> /etc/php5/cli/php.ini && echo ""date.timezone = Europe/Berlin"" >> /etc/php5/fpm/php.ini && \
  echo ""clear_env = no"" >> /etc/php5/fpm/pool.d/www.conf && \
  sed -i 's/memory_limit = .*/memory_limit = 512M/' /etc/php5/fpm/php.ini && \
  #echo ""extension=xhprof.so"" >> /etc/php5/fpm/php.ini && \

# Install Supervisor to start processes
  apt-get install -y supervisor && \
  mkdir -p /var/log/supervisor && \

# Install Composer and Drush
  curl -sS https://getcomposer.org/installer | php && \
  mv composer.phar /usr/local/bin/composer && \
  composer global require drush/drush:dev-master && \
  echo 'export PATH=""$HOME/.composer/vendor/bin:$PATH""' >> ~/.bashrc && \

# Install Node
  apt-get update && apt-get install -y python python-dev python-pip python-virtualenv && \
  rm -rf /var/lib/apt/lists/* && \

  cd /tmp && \
  wget http://nodejs.org/dist/node-latest.tar.gz && \
  tar xvzf node-latest.tar.gz && \
  rm -f node-latest.tar.gz && \
  cd node-v* && \
  ./configure && \
  CXX=""g++ -Wno-unused-local-typedefs"" make && \
  CXX=""g++ -Wno-unused-local-typedefs"" make install && \
  cd /tmp && \
  rm -rf /tmp/node-v* && \
  npm install -g npm && \
  echo '\n# Node.js\nexport PATH=""node_modules/.bin:$PATH""' >> /root/.bashrc

RUN rm /etc/php5/mods-available/xdebug.ini
ADD xdebug.ini /etc/php5/mods-available/

COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

CMD [""/usr/bin/supervisord""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",naGJMV
code,"FROM rocker/tidyverse:3.4.2

## Add LaTeX, rticles and bookdown support
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
    ## for rJava
    default-jdk \
    ## Nice Google fonts
    fonts-roboto \    
    ## used by some base R plots
    ghostscript \
    ## used to build rJava and other packages
    libbz2-dev \
    libicu-dev \
    liblzma-dev \
    ## system dependency of hunspell (devtools)
    libhunspell-dev \
    ## system dependency of hadley/pkgdown
    libmagick++-dev \
    ## rdf, for redland / linked data
    librdf0-dev \
    ## for V8-based javascript wrappers
    libv8-dev \
    ## R CMD Check wants qpdf to check pdf sizes, or throws a Warning 
    qpdf \
    ## for git via ssh key 
    ssh \
    ## for building pdfs via pandoc/LaTeX (These are large!)
    lmodern \
    texlive-fonts-recommended \
    texlive-generic-recommended \
    texlive-humanities \
    texlive-latex-extra \
    texlive-science \
    texinfo \
    ## just because
    less \
    vim \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/ \
  && cd /usr/share/texlive/texmf-dist/tex/latex \
  ## additional tex files needed for certain rticles templates
  && wget http://mirrors.ctan.org/macros/latex/contrib/ametsoc.zip \
  && unzip ametsoc.zip \
  && rm *.zip \
## R manuals use inconsolata font, but texlive-fonts-extra is huge, so:
  && cd /usr/share/texlive/texmf-dist \
  && wget http://mirrors.ctan.org/install/fonts/inconsolata.tds.zip \
  && unzip inconsolata.tds.zip \
  && rm *.zip \
  && echo ""Map zi4.map"" >> /usr/share/texlive/texmf-dist/web2c/updmap.cfg \
  && mktexlsr \
  && updmap-sys \
  ## Currently (2017-06-06) need devel PKI for ssl issue: https://github.com/s-u/PKI/issues/19
  && install2.r -r http://rforge.net PKI \
  ## And some nice R packages for publishing-related stuff
  && install2.r --error --deps TRUE \
    bookdown rticles rmdshower

## Consider including: 
# - yihui/printr R package (when released to CRAN)
# - libgsl0-dev (GSL math library dependencies)
# - librdf0-dev
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rCMGru
code,"FROM golang:1.4.2

ADD . /go/src/github.com/arvinkulagin/wschat

RUN go get github.com/gorilla/websocket

RUN go install github.com/arvinkulagin/wschat

WORKDIR /go/src/github.com/arvinkulagin/wschat

EXPOSE 8888

ENTRYPOINT wschat",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5av7QE
code,"<%= generation_message %>
FROM instructure/node:<%= version %>
MAINTAINER Instructure

USER root

# Install Nginx with Passenger from official repository on x86_64
RUN if [ ""$(dpkg --print-architecture)"" = ""amd64"" ]; then \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \
    && apt-get install -y apt-transport-https ca-certificates \
    && echo deb https://oss-binaries.phusionpassenger.com/apt/passenger <%= base_distro %> main > /etc/apt/sources.list.d/passenger.list ; \
  elif [ ""$(dpkg --print-architecture)"" = ""arm64"" ]; then \
    # Install Nginx with Passenger from Instructure packages on arm64
    curl -fsSL https://packagecloud.io/instructure/docker-support/gpgkey | gpg --dearmor | apt-key add - \
    && echo ""deb https://packagecloud.io/instructure/docker-support/ubuntu <%= base_distro %> main"" > /etc/apt/sources.list.d/instructure-ruby.list ; \
  fi

RUN  apt-get update \
  && apt-get install -y --no-install-recommends \
    nginx-extras \
    passenger \
    sudo \
<% if ['bionic', 'focal'].include? base_distro -%>
    libnginx-mod-http-passenger \
<% end -%>
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN echo 'docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/nginx' >> /etc/sudoers

USER docker
RUN passenger-config build-native-support

# Nginx Configuration
USER root

COPY entrypoint /usr/src/entrypoint
COPY nginx.conf.erb /usr/src/nginx/nginx.conf.erb
COPY main.d/* /usr/src/nginx/main.d/
RUN mkdir -p /usr/src/nginx/conf.d \
 && mkdir -p /usr/src/nginx/location.d \
 && mkdir -p /usr/src/nginx/main.d \
 && mkdir -p /usr/src/nginx/server.d \
 && ln -sf /dev/stdout /var/log/nginx/access.log \
 && ln -sf /dev/stderr /var/log/nginx/error.log \
 && chown docker:docker -R /usr/src/nginx

USER docker

EXPOSE 80
CMD [""/tini"", ""--"", ""/usr/src/entrypoint""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aIfw-x
code,"FROM logstash:latest

RUN apt-get update && apt-get install pv

COPY docker-entrypoint.sh /

ENV HOME /od-index

COPY config/log4j2.properties /etc/logstash

COPY config $HOME/config

COPY ArcGIS_Open_Data_Index.txt.gz /tmp
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8ww_ji
code,"FROM scratch
EXPOSE 8000 9000 10000

ADD _output/qaclana /

CMD [""/qaclana""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RYyZpV
code,"FROM webdevops/apache:ubuntu-16.04

MAINTAINER Eric Pfeiffer <computerfr33k@users.noreply.github.com>

ARG PHP_SOCKET=""php-fpm:9000""

ENV WEB_PHP_SOCKET=$PHP_SOCKET

ENV WEB_DOCUMENT_ROOT=/var/www/laravel/public

EXPOSE 80 443

WORKDIR /var/www/laravel/public

ENTRYPOINT [""/opt/docker/bin/entrypoint.sh""]

CMD [""supervisord""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d5LGH2
code,"FROM maven:3.6.1-jdk-11-slim as maven
WORKDIR /proteus
COPY pom.xml pom.xml
COPY src src
RUN mvn package -q --update-snapshots

FROM openjdk:11.0.3-jre-slim
WORKDIR /proteus
COPY --from=maven /proteus/target/proteus-techempower-1.0.0.jar app.jar
COPY --from=maven /proteus/target/lib lib
COPY conf conf
CMD [""java"", ""-Dlogback.configurationFile=conf/logback.xml"", ""-Dconfig.file=conf/application.conf"", ""-Xms4g"", ""-Xmx4g"", ""-XX:+AggressiveOpts"", ""-server"", ""-XX:-UseBiasedLocking"", ""-XX:+UseStringDeduplication"", ""-Djava.net.preferIPv4Stack=true"", ""-XX:+UseNUMA"", ""-classpath"", ""app.jar:lib/*"", ""io.sinistral.ExampleApplication""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",efopGx
code,"FROM nginx
COPY dist /usr/share/nginx/html

COPY docker/nginx.conf /etc/nginx/nginx.conf

# Set the command to start the node server.
CMD echo ""{ \
  \""BACKEND_SERVER_URL\"": \""${GEOWEBBACKENDURL}\"", \
  \""BACKEND_SERVER_XML2JSON\"": \""${XML2JSONPROXY}\"" \
}"" > usr/share/nginx/html/urls.json \
  && nginx -g 'daemon off;'
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HK-4hV
code,"#
# Copyright (C) 2020 by frePPLe bv
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation; either version 3 of the License, or
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#
# STAGE 1: Compile and build the application
#

FROM debian:10-slim as builder

RUN apt-get -y -q update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
  libxerces-c3.2 apache2 libapache2-mod-wsgi-py3 \
  python3-psycopg2 python3-pip postgresql \
  git cmake g++ python3-dev libxerces-c-dev \
  python3-sphinx \
  openssl libssl-dev libpq-dev python3-lxml

# OPTION 1: BUILDING FROM LOCAL DISTRIBUTION:
COPY requirements.txt .
RUN python3 -m pip install --upgrade pip && pip3 install -r requirements.txt 

COPY *.tar.gz ./
COPY debian/  debian/

# subtle - and _ things going on here...
RUN sed -i 's/local\(\s*\)all\(\s*\)all\(\s*\)peer/local\1all\2all\3\md5/g' /etc/postgresql/11/main/pg_hba.conf && \
  /etc/init.d/postgresql start && \
  sudo -u postgres psql template1 -c ""create role frepple login superuser password 'frepple'"" && \
  tar -xzf *.orig.tar.gz && \
  src=`basename --suffix=.orig.tar.gz frepple-*` && \
  mv debian $src && \
  cd $src && \
  mkdir logs && \
  dpkg-buildpackage -us -uc -D

# OPTION 2: BUILDING FROM GIT REPOSITORY
# This is useful when using this dockerfile standalone.
# A trick to force rebuilding from here if there are new commits
#ADD https://api.github.com/repos/jdetaeye/frepple-enterprise/compare/master...HEAD /dev/null
#RUN git clone https://github.com/jdetaeye/frepple-enterprise.git frepple && \
#  pip3 install -r frepple/requirements.txt
# TODO build from git repo

FROM scratch as package
COPY --from=builder frepple-*/build/*.deb .
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GF6QnY
code,"# Copyright 2015 basebuilder authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

from ubuntu:14.04
run locale-gen en_US.UTF-8
env LANG en_US.UTF-8
env LANGUAGE en_US:en
env LC_ALL en_US.UTF-8
run apt-get update
run apt-get install nginx -u
run apt-get install make wget -y --force-yes
run apt-get install lua5.1 luarocks -y
run luarocks install lapis

run wget http://openresty.org/download/ngx_openresty-1.7.2.1.tar.gz
run tar -zxvf ngx_openresty-1.7.2.1.tar.gz
run cd ngx_openresty-1.7.2.1/
run ./configure
run make
run make install
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FSlC0h
code,"FROM ubuntu
COPY search /usr/bin/
COPY static /usr/share/search
EXPOSE 8080
ENV ELASTIC_URL http://elastic:9200
ENV GIN_MODE release
ENV STATIC_FOLDER /usr/share/search/
CMD /usr/bin/search
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yT4iSx
code,"FROM gcr.io/google-appengine/python
LABEL python_version=python3.5
RUN virtualenv --no-download /env -p python3.5

# Set virtualenv environment variables. This is equivalent to running
# source /env/bin/activate
ENV VIRTUAL_ENV /env
ENV PATH /env/bin:$PATH
ADD requirements.txt /app/
RUN pip install -r requirements.txt
ADD . /app/
CMD exec gunicorn -b :$PORT main:app
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1V5q4L
code,"# Name: bt.advform
# Author: Kenson Man <kenson@breakthrough.org.hk>
# Desc:   The file used to create the docker container that provide the advform application.
FROM django:1.9-python3
MAINTAINER Kenson Man <kenson@kenson.idv.hk>
ARG UID=1000
ARG GID=1000
ARG USERNAME=docker
ARG PORT=9876

ADD requirements.txt /usr/src/app/

RUN echo ""Installating the system dependencies..."" 	&& \
  echo ""alias ll=\""ls -l\"""" >> /root/.bashrc 		&& \
  apt-get update && apt-get install --fix-missing -y libpq-dev python3-dev libsasl2-dev libldap2-dev libssl-dev vim libjpeg-dev && \
  pip install --upgrade pip 				&& \
  echo ""Installating the django dependencies...""	&& \
  pip install -r /usr/src/app/requirements.txt		&& \
  echo ""Creating the user<${USERNAME}::${UID}> and group<${GID}>...""			&& \
  groupadd -g ${GID} ${USERNAME}			&& \
  useradd -u ${UID} -g ${GID} -M -d /usr/src/app ${USERNAME}	&& \
  echo ""Generating the startup scripts...""		&& \
  echo ""#/bin/bash"" > /startup				&& \
  echo ""python /usr/src/app/manage.py runserver 0.0.0.0:${PORT}"" >> /startup && \
  echo ""alias ll='ls -l'"" >> ~/.bashrc			&& \
  chown ${UID}:${GID} /startup				&& \
  chmod 700 /startup

WORKDIR /usr/src/app
USER ${USERNAME}
EXPOSE ${PORT} 
CMD /startup
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BmC1d_
code,"# Copyright 2020 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
#
# THIS IS A GENERATED DOCKERFILE.
#
# This file was assembled from multiple pieces, whose use is documented
# throughout. Please refer to the TensorFlow dockerfiles documentation
# for more information.

ARG UBUNTU_VERSION=20.04

FROM ubuntu:${UBUNTU_VERSION} AS base

ARG DEBIAN_FRONTEND=""noninteractive""

RUN apt-get update && apt-get install -y --no-install-recommends --fix-missing \
        build-essential \
        curl \
        git \
        libcurl3-dev \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libzmq3-dev \
        pkg-config \
        rsync \
        software-properties-common \
        sudo \
        unzip \
        zip \
        zlib1g-dev \
        openjdk-8-jdk \
        openjdk-8-jre-headless \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

ENV CI_BUILD_PYTHON python

# CACHE_STOP is used to rerun future commands, otherwise cloning tensorflow will be cached and will not pull the most recent version
ARG CACHE_STOP=1
# Check out TensorFlow source code if --build-arg CHECKOUT_TF_SRC=1
ARG CHECKOUT_TF_SRC=0
ARG TF_BRANCH=master
RUN test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true

# See http://bugs.python.org/issue19846
ENV LANG C.UTF-8

RUN apt-get update && apt-get install -y --no-install-recommends --fix-missing \
    python3 \
    python3-pip

RUN python3 -m pip --no-cache-dir install --upgrade \
    pip \
    setuptools

# Some TF tools expect a ""python"" binary
RUN ln -s $(which python3) /usr/local/bin/python

RUN apt-get update && apt-get install -y --no-install-recommends --fix-missing \
    curl

# Install bazel
ARG BAZEL_VERSION=3.1.0
RUN mkdir /bazel && \
    curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" && \
    curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" && \
    bash /bazel/installer.sh && \
    rm -f /bazel/installer.sh

COPY bashrc /etc/bash.bashrc
RUN chmod a+rwx /etc/bash.bashrc
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FBwKhh
code,"FROM            ubuntu:12.04

MAINTAINER      zhlong73 <longzh@houzz.com>

ENV             MCROUTER_DIR            /usr/local/mcrouter
ENV             MCROUTER_REPO           https://github.com/zhlong73/mcrouter.git
ENV             DEBIAN_FRONTEND         noninteractive

RUN             apt-get update && apt-get install sudo libidn11 wget
 
RUN             apt-get update && apt-get install -y git && \
                mkdir -p $MCROUTER_DIR/repo && \
                cd $MCROUTER_DIR/repo && git clone $MCROUTER_REPO && \
                cd $MCROUTER_DIR/repo/mcrouter/mcrouter/scripts && \
                ./install_ubuntu_12.04.sh $MCROUTER_DIR && \
                ./clean_ubuntu_12.04.sh $MCROUTER_DIR && rm -rf $MCROUTER_DIR/repo && \
                ln -s $MCROUTER_DIR/install/bin/mcrouter /usr/local/bin/mcrouter

ENV             DEBIAN_FRONTEND newt
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MrEnzF
code,"FROM larskanis/rake-compiler-dock-mri-arm64-darwin:1.1.0
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Xi0oK7
code,"FROM ruby:2.6-alpine3.15

# explicitly set uid/gid to guarantee that it won't change in the future
# the values 999:999 are identical to the current user/group id assigned
# alpine already has a gid 999, so we'll use the next id
RUN addgroup -S -g 1000 redmine && adduser -S -H -G redmine -u 999 redmine

RUN set -eux; \
	apk add --no-cache \
		bash \
		ca-certificates \
		su-exec \
		tini \
		tzdata \
		wget \
		\
		breezy \
		git \
		mercurial \
		openssh-client \
		subversion \
		\
# we need ""gsfonts"" for generating PNGs of Gantt charts
# and ""ghostscript"" for creating PDF thumbnails (in 4.1+)
		ghostscript \
		ghostscript-fonts \
		imagemagick \
	;

ENV RAILS_ENV production
WORKDIR /usr/src/redmine

# https://github.com/docker-library/redmine/issues/138#issuecomment-438834176
# (bundler needs this for running as an arbitrary user)
ENV HOME /home/redmine
RUN set -eux; \
	[ ! -d ""$HOME"" ]; \
	mkdir -p ""$HOME""; \
	chown redmine:redmine ""$HOME""; \
	chmod 1777 ""$HOME""

ENV REDMINE_VERSION 4.1.6
ENV REDMINE_DOWNLOAD_URL https://www.redmine.org/releases/redmine-4.1.6.tar.gz
ENV REDMINE_DOWNLOAD_SHA256 ad78999cb65ba2d1be344fdd582e4f24a9b97c88710ab217a954df437e04072f

RUN set -eux; \
	wget -O redmine.tar.gz ""$REDMINE_DOWNLOAD_URL""; \
	echo ""$REDMINE_DOWNLOAD_SHA256 *redmine.tar.gz"" | sha256sum -c -; \
	tar -xf redmine.tar.gz --strip-components=1; \
	rm redmine.tar.gz files/delete.me log/delete.me; \
	mkdir -p log public/plugin_assets sqlite tmp/pdf tmp/pids; \
	chown -R redmine:redmine ./; \
# log to STDOUT (https://github.com/docker-library/redmine/issues/108)
	echo 'config.logger = Logger.new(STDOUT)' > config/additional_environment.rb; \
# fix permissions for running as an arbitrary user
	chmod -R ugo=rwX config db sqlite; \
	find log tmp -type d -exec chmod 1777 '{}' +

# build for musl-libc, not glibc (see https://github.com/sparklemotion/nokogiri/issues/2075, https://github.com/rubygems/rubygems/issues/3174)
ENV BUNDLE_FORCE_RUBY_PLATFORM 1
RUN set -eux; \
	\
	apk add --no-cache --virtual .build-deps \
		coreutils \
		freetds-dev \
		gcc \
		make \
		mariadb-dev \
		musl-dev \
		patch \
		postgresql-dev \
		sqlite-dev \
		ttf2ufm \
		zlib-dev \
	; \
	\
	su-exec redmine bundle config --local without 'development test'; \
# fill up ""database.yml"" with bogus entries so the redmine Gemfile will pre-install all database adapter dependencies
# https://github.com/redmine/redmine/blob/e9f9767089a4e3efbd73c35fc55c5c7eb85dd7d3/Gemfile#L50-L79
	echo '# the following entries only exist to force `bundle install` to pre-install all database adapter dependencies -- they can be safely removed/ignored' > ./config/database.yml; \
	for adapter in mysql2 postgresql sqlserver sqlite3; do \
		echo ""$adapter:"" >> ./config/database.yml; \
		echo ""  adapter: $adapter"" >> ./config/database.yml; \
	done; \
	su-exec redmine bundle install --jobs ""$(nproc)""; \
	rm ./config/database.yml; \
# fix permissions for running as an arbitrary user
	chmod -R ugo=rwX Gemfile.lock ""$GEM_HOME""; \
# this requires coreutils because ""chmod +X"" in busybox will remove +x on files (and coreutils leaves files alone with +X)
	rm -rf ~redmine/.bundle; \
	\
# https://github.com/naitoh/rbpdf/issues/31
	rm /usr/local/bundle/gems/rbpdf-font-1.19.*/lib/fonts/ttf2ufm/ttf2ufm; \
	\
	runDeps=""$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/bundle/gems \
		| tr ',' '\n' \
		| sort -u \
		| awk 'system(""[ -e /usr/local/lib/"" $1 "" ]"") == 0 { next } { print ""so:"" $1 }' \
	)""; \
	apk add --no-network --virtual .redmine-rundeps $runDeps; \
	apk del --no-network .build-deps

VOLUME /usr/src/redmine/files

COPY docker-entrypoint.sh /
ENTRYPOINT [""/docker-entrypoint.sh""]

EXPOSE 3000
CMD [""rails"", ""server"", ""-b"", ""0.0.0.0""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MFJFbX
code,"FROM java:8

MAINTAINER Hyun Min Choi <hyunmin.personal@gmail.com>

RUN apt-get -y update
RUN apt-get -y upgrade
RUN apt-get install -y build-essential \
    gcc \
    nginx \
    supervisor \
    git \
    vim \
    redis-server
RUN update-ca-certificates -f

ENV SCALA_VERSION 2.12.1
ENV SBT_VERSION 0.13.15

# install scala
RUN wget https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.deb
RUN dpkg -i scala-$SCALA_VERSION.deb && \
    rm scala-$SCALA_VERSION.deb

# install sbt
RUN wget https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
RUN dpkg -i sbt-$SBT_VERSION.deb && \
    rm sbt-$SBT_VERSION.deb && \
    sbt sbtVersion && \
    rm -rf target/

# sbt warmup
ADD . /var/www
WORKDIR /var/www/sbt-warmup
RUN sbt run
RUN rm -rf ./*

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rbmefg
code,"FROM centos

RUN yum -y install dnsmasq

VOLUME /etc/dnsmasq.d

EXPOSE 5353

ENTRYPOINT [""/usr/sbin/dnsmasq"", ""-d"", ""-p"", ""5353""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sSVqxc
code,"FROM python:2.7

#create a repo for project
RUN mkdir -p /opt/subena

RUN apt-get update && \
 apt-get install mysql-server && \
 service mysql start

##SOURCES FROM MANUAL
#ADD * /opt/subena/

##SOURCES FROM GITHUB
RUN git clone https://github.com/subena-io/subena.git /opt/subena

#add python dependencies for compiling source code
RUN pip install numpy && \
 pip install SQLAlchemy && \
 pip install eve && \
 pip install eve-sqlalchemy && \
 pip install MySQL-python

WORKDIR /opt/subena

# 5000 = expose rest service through eve-sqlachemy
EXPOSE 5000

CMD [ ""python"", ""/opt/subena/expose.py"" ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UZhGnT
code,"# This image adds the authorization schema and sample OAuth 2.0 credentials to a PostgreSQL database.

FROM postgres:latest
MAINTAINER Emerson Farrugia <emerson@openmhealth.org>
# Originally contributed by Matthew Schulkind <mschulkind@gmail.com>.

COPY create-database.sql oauth2-ddl.sql /docker-entrypoint-initdb.d/
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ntn1X6
code,"# syntax=docker/dockerfile:experimental

FROM 482956169056.dkr.ecr.us-east-1.amazonaws.com/uw/python-postgres-build:v0.3 as build
COPY hdt_monitor/requirements/*.txt /code/
RUN --mount=type=ssh,id=build_ssh_key ./python_venv/bin/pip3 install gunicorn && ./python_venv/bin/pip3 install -r aws.txt
COPY . /code/
RUN chmod a+x /code/docker-entrypoint.sh

FROM 482956169056.dkr.ecr.us-east-1.amazonaws.com/uw/python-postgres-base:v0.3
COPY --from=build /code /code/
ENV PYTHONUNBUFFERED 1
WORKDIR /code
ENTRYPOINT [""/code/docker-entrypoint.sh""]
EXPOSE 8000
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ld-lZa
code,"FROM alpine:latest AS librdkafka

# Versions available on Ubuntu: https://packages.ubuntu.com/search?keywords=librdkafka
ENV LIBRDKAFKA_VERSION=0.11.3
ENV CFLAGS=""-Os -march=x86-64""
ENV LDFLAGS=""-s""

WORKDIR /tmp

ADD https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.zip .

RUN apk add --no-cache \
    bash \
    build-base \
    cyrus-sasl-dev \
    lz4-dev \
    openssl-dev \
    python3 \
    zlib-dev \
 && ln -s /usr/bin/python3 /usr/bin/python \
 && unzip v${LIBRDKAFKA_VERSION}.zip

WORKDIR /tmp/librdkafka-${LIBRDKAFKA_VERSION}

RUN ./configure --help \
 && ./configure

RUN make -j$(nproc)

RUN make install

RUN find examples/* -executable -exec cp {} /usr/local/bin \;

FROM 1maa/alpine:latest AS build

ENV PHP_VERSION=7.3.33

ENV CFLAGS=""-Os -march=x86-64""
ENV LDFLAGS=""-s""

WORKDIR /tmp

COPY 7.3/pubkeys.asc .

ADD https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz .
ADD https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz.asc .

RUN apk add --no-cache gnupg \
 && gpg --import pubkeys.asc \
 && gpg --verify php-${PHP_VERSION}.tar.gz.asc php-${PHP_VERSION}.tar.gz

RUN apk add --no-cache \
    # generic dependencies for compiling the source
    autoconf \
    automake \
    build-base \
    file \
    flex \
    libtool \
    re2c \
\
    upx \
\
    # dependencies for building specific extensions
    argon2-dev \
    bzip2-dev \
    curl-dev \
    gd-dev \
    gmp-dev \
    gpgme-dev \
    libevent-dev \
    libmaxminddb-dev \
    libmemcached-dev \
    libpng-dev \
    libpq-dev \
    libsodium-dev \
    libssh2-dev \
    libxml2-dev \
    libxslt-dev \
    libzip-dev \
    openssl-dev \
    rabbitmq-c-dev \
    readline-dev \
    yaml-dev

RUN tar zxof php-${PHP_VERSION}.tar.gz \
 && cd ./php-${PHP_VERSION} \
 && ./configure \
    EXTENSION_DIR=""/usr/lib/php"" \
\
    --prefix=/usr \
    --sysconfdir=/etc/php/cli \
    --with-config-file-path=/etc/php/cli \
    --with-config-file-scan-dir=/etc/php/cli/conf.d \
\
    --enable-cli \
    --disable-fpm \
    --disable-cgi \
    --disable-phpdbg \
\
    --enable-bcmath \
    --enable-calendar \
    --enable-exif \
    --enable-ftp \
    --enable-mbstring \
    --enable-opcache \
    --enable-pcntl \
    --enable-shmop \
    --enable-soap \
    --enable-sockets \
    --enable-wddx \
    --enable-zip \
\
    --with-bz2 \
    --with-curl \
    --with-gd \
    --with-gmp \
    --with-libzip \
    --with-mysqli \
    --with-openssl \
    --with-password-argon2 \
    --with-pdo-mysql \
    --with-pdo-pgsql \
    --with-pgsql \
    --with-readline \
    --with-sodium \
    --with-xmlrpc \
    --with-xsl \
    --with-zlib \
 && make -j$(nproc) \
 && make install

RUN rm -rf php-${PHP_VERSION} \
 && tar zxof php-${PHP_VERSION}.tar.gz \
 && cd ./php-${PHP_VERSION} \
 && ./configure \
    EXTENSION_DIR=""/usr/lib/php"" \
\
    --prefix=/usr \
    --sysconfdir=/etc/php/fpm \
    --with-config-file-path=/etc/php/fpm \
    --with-config-file-scan-dir=/etc/php/fpm/conf.d \
\
    --enable-fpm \
    --disable-cli \
    --disable-cgi \
    --disable-phpdbg \
\
    --enable-bcmath \
    --enable-calendar \
    --enable-exif \
    --enable-ftp \
    --enable-mbstring \
    --enable-opcache \
    --enable-shmop \
    --enable-soap \
    --enable-sockets \
    --enable-wddx \
    --enable-zip \
\
    --with-bz2 \
    --with-curl \
    --with-gd \
    --with-gmp \
    --with-libzip \
    --with-mysqli \
    --with-openssl \
    --with-password-argon2 \
    --with-pdo-mysql \
    --with-pdo-pgsql \
    --with-pgsql \
    --with-sodium \
    --with-xmlrpc \
    --with-xsl \
    --with-zlib \
 && make -j$(nproc) \
 && mv sapi/fpm/php-fpm /usr/sbin/php-fpm \
\
 && sed -e 's#;phar.readonly = On#phar.readonly = Off#' \
        php.ini-production > /tmp/php.ini \
\
 && sed -e 's#@php_fpm_sysconfdir@#/etc/php/fpm#' \
        -e 's#;daemonize = yes#daemonize = no#' \
        -e 's#;error_log = log/php-fpm.log#error_log = /dev/stderr#' \
        -e 's#;log_buffering = no#log_buffering = yes#' \
        -e 's#;log_limit = 4096#log_limit = 65536#' \
        sapi/fpm/php-fpm.conf.in > /tmp/php-fpm.conf \
\
 && sed -e 's#user = @php_fpm_user@#user = root#' \
        -e 's#group = @php_fpm_group@#group = root#' \
        -e 's#listen = 127.0.0.1:9000#listen = 9000#' \
        -e 's#;clear_env = no#clear_env = no#' \
        -e 's#;catch_workers_output = yes#catch_workers_output = yes#' \
        -e 's#;decorate_workers_output = no#decorate_workers_output = no#' \
        sapi/fpm/www.conf.in > /tmp/www.conf \
\
 && upx --lzma /usr/bin/php /usr/sbin/php-fpm

# Force invalidation of the build cache from here on if any
# extension has released a new version since the last build
ADD https://pecl.php.net/get/amqp .
ADD https://pecl.php.net/get/apcu .
ADD https://pecl.php.net/get/csv .
ADD https://pecl.php.net/get/ds .
ADD https://pecl.php.net/get/event .
ADD https://pecl.php.net/get/excimer .
ADD https://pecl.php.net/get/gnupg .
ADD https://pecl.php.net/get/igbinary .
ADD https://pecl.php.net/get/maxminddb .
ADD https://pecl.php.net/get/memcached .
ADD https://pecl.php.net/get/mongo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KERkys
code,"FROM ubuntu:14.04
MAINTAINER Lars K.W. Gohlke <lkwg82@gmx.de>

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        bash-completion \
        debhelper \
        devscripts equivs \
        dh-make \
        dpkg-dev \
        git \
        software-properties-common \
        python-software-properties \
    && apt-get clean

RUN mkdir -p /development
WORKDIR /development

ENTRYPOINT /bin/bash -c 'while(true); do sleep 10; done'
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pSM8or
code,"# Container for Sage with MariaDB and Python.
#
#     http://www.sagemath.org/
#     https://www.mariadb.org/ 
#

FROM tylertreat/mariapy
MAINTAINER Tyler Treat <tyler.treat@webfilings.com>

RUN apt-get update

RUN apt-get install -y build-essential ca-certificates m4 curl
RUN curl -Lso /tmp/sage-6.1.1.tar.gz http://boxen.math.washington.edu/home/sagemath/sage-mirror/src/sage-6.1.1.tar.gz
RUN tar zxvf /tmp/sage-6.1.1.tar.gz
RUN cd sage-6.1.1 && make

# Warm up
RUN sage-6.1.1/sage -c 'quit()'

ENTRYPOINT sage-6.1.1/sage

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gJMhkv
code,"FROM ubuntu:19.10

WORKDIR /h2o_app_src
COPY ./ ./

RUN apt update && \
    apt install -yqq autoconf bison cmake curl file flex g++ git libnuma-dev libpq-dev libssl-dev \
                     libtool libyajl-dev libz-dev make wget

### Install mustache-c

ENV MUSTACHE_C_REVISION=c1948c599edfe48c6099ed70ab1d5911d8c3ddc8

ENV MUSTACHE_C_BUILD_DIR=mustache-c-build
ENV MUSTACHE_C_PREFIX=/opt/mustache-c

RUN mkdir -p ""$MUSTACHE_C_BUILD_DIR"" && \
    cd ""$MUSTACHE_C_BUILD_DIR"" && \
    wget -qO - ""https://github.com/x86-64/mustache-c/archive/${MUSTACHE_C_REVISION}.tar.gz"" | \
    tar xz --strip-components=1 && \
    CFLAGS=""-O3 -flto -march=native"" ./autogen.sh --prefix=""$MUSTACHE_C_PREFIX"" && \
    make -j ""$(nproc)"" install && \
    cd .. && \
    rm -rf ""$MUSTACHE_C_BUILD_DIR""

### Install h2o

ENV H2O_VERSION=v2.2.6

ENV H2O_BUILD_DIR=h2o-build
ENV H2O_PREFIX=/opt/h2o

RUN mkdir -p ""${H2O_BUILD_DIR}/build"" && \
    cd ""$H2O_BUILD_DIR"" && \
    wget -qO - ""https://github.com/h2o/h2o/archive/${H2O_VERSION}.tar.gz"" | \
    tar xz --strip-components=1 && \
    cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=""$H2O_PREFIX"" -DCMAKE_C_FLAGS=""-flto -march=native"" \
          -DCMAKE_AR=/usr/bin/gcc-ar -DCMAKE_RANLIB=/usr/bin/gcc-ranlib .. && \
    make -j ""$(nproc)"" install && \
    cd ../.. && \
    rm -rf ""$H2O_BUILD_DIR""

CMD [""./h2o.sh""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",irNMP-
code,"FROM tensorflow/tensorflow:1.14.0-gpu-py3

RUN apt-get update && \
    apt-get install -y python3-pip && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install twitterscraper gpt_2_simple

ADD tweets.py /
ADD train.py /
ADD generate.py /
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LtmYy7
code,"FROM golang:1.11

RUN mkdir -p /usr/src/email-me
WORKDIR /usr/src/email-me

ENV CROSSPLATFORMS \
        linux/amd64 linux/386 linux/arm \
        darwin/amd64 darwin/386 \
        freebsd/amd64 freebsd/386 freebsd/arm \
        windows/amd64 windows/386

ENV GOARM 5

CMD set -x \
    && for platform in $CROSSPLATFORMS; do \
            GOOS=${platform%/*} \
            GOARCH=${platform##*/} \
                go build -v -o bin/email-me-${platform%/*}-${platform##*/}; \
    done
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qxElrV
code,"# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# ""License""); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Change tags to build with different cuda/cudnn versions:
FROM nvidia/cuda:9.0-devel-ubuntu16.04


ENV CUDNN_VERSION 7.4.2.24

RUN apt-get update && apt-get install -y --no-install-recommends \
        libcudnn7=$CUDNN_VERSION-1+cuda9.0 \
        libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \
    apt-mark hold libcudnn7 && \
    rm -rf /var/lib/apt/lists/*

# install dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        git \
        build-essential \
        cmake \
        wget \
        openssh-server \
        ca-certificates \
    && apt-get clean \
    && apt-get autoremove \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/* \
    #
    # install conda, conda-build and anaconda-client
    #
    && wget --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \
    && bash miniconda.sh -b -p /root/miniconda \
    && /root/miniconda/bin/conda config --set always_yes yes --set changeps1 no \
    && /root/miniconda/bin/conda update -q conda \
    && /root/miniconda/bin/conda install -y \
        conda-build \
        anaconda-client \
    && /root/miniconda/bin/conda clean -tipsy \
    # config ssh service
    && mkdir /var/run/sshd \
    && echo 'root:singa' | chpasswd \
    # for ubuntu 16.04 prohibit
    && sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    # SSH login fix. Otherwise user is kicked off after login
    && sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \
    # dump environment variables into files, so that ssh can see also
    && env | grep _ >> /etc/environment

# Add conda to PATH. Doing this here so other RUN steps can be grouped above
ENV PATH /root/miniconda/bin:${PATH}

EXPOSE 22

CMD [""/usr/sbin/sshd"", ""-D""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Dq2_3o
code,"# Build with:
# docker build -t ogrisel/openblas .
FROM ubuntu:14.04
MAINTAINER Olivier Grisel <olivier.grisel@ensta.org>

ADD openblas.conf /etc/ld.so.conf.d/openblas.conf
ADD build_openblas.sh build_openblas.sh
RUN bash build_openblas.sh
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UOUkon
code,"FROM node:6

# Apt
RUN apt-get update
RUN apt-get install -y git wget curl

# Create directory for the app
RUN mkdir -p /opt/bridge-gui
WORKDIR /opt/bridge-gui

ADD package.json .
RUN npm install --production

RUN rm -rf node_modules/bitcore-lib && mv node_modules/bitcore-ecies/node_modules/bitcore-lib node_modules/

# Copy over the app and install
COPY . /opt/bridge-gui/

# Clean any extra files that got coppied from the host's repo
# Commenting this so we can build something thats not in the upstream repo
#RUN git reset --hard
#RUN git clean -fdx

# Install node modules for production (i.e. don't install devdeps)
#RUN npm i --production

ARG NODE_ENV=NODE_ENV_ENV
ARG APIHOST=APIHOST_ENV
ARG APIPORT=APIPORT_ENV
ARG APIPROTOCOL=APIPROTOCOL_ENV
ARG APOLLO_CLIENT_URL=APOLLO_CLIENT_URL_ENV
ARG STRIPE_PUBLISHABLE_KEY=STRIPE_PUBLISHABLE_KEY_ENV
ARG OUTPUT_PUBLIC_PATH_PROTOCOL=OUTPUT_PUBLIC_PATH_PROTOCOL_ENV
ARG OUTPUT_PUBLIC_PATH_URL=OUTPUT_PUBLIC_PATH_URL_ENV

ENV NODE_ENV $NODE_ENV
ENV APIHOST $APIHOST
ENV APIPORT $APIPORT
ENV APIPROTOCOL $APIPROTOCOL
ENV APOLLO_CLIENT_URL $APOLLO_CLIENT_URL
ENV STRIPE_PUBLISHABLE_KEY $STRIPE_PUBLISHABLE_KEY
ENV OUTPUT_PUBLIC_PATH_PROTOCOL $OUTPUT_PUBLIC_PATH_PROTOCOL
ENV OUTPUT_PUBLIC_PATH_URL $OUTPUT_PUBLIC_PATH_URL


# Build for production
RUN npm run build

# Expose listen port
EXPOSE 8080

# Start the app
CMD [ ""./dockerfiles/scripts/start-bridge-gui"" ]

# Use for testing
#CMD [ ""/bin/sleep"", ""5000"" ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W16V51
code,"FROM ubuntu:latest

# Install python and pip using miniconda
RUN apt-get -qq update && apt-get -qq -y install curl bzip2 wget \
    && curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \
    && bash /tmp/miniconda.sh -bfp /usr/local \
    && rm -rf /tmp/miniconda.sh \
    && conda install -y python=3.6 \
    && conda update conda \
    && apt-get -qq -y remove curl bzip2 \
    && apt-get -qq -y autoremove \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/* /var/log/dpkg.log \
    && conda clean --all --yes

# Download Bilingual corpora
RUN mkdir -p /tvecs/data/bilingual_dictionary \
    && wget -q https://www.dropbox.com/s/vphpv025s8mkphr/english_hindi_train_bd?dl=1 -O /tvecs/data/bilingual_dictionary/english_hindi_train_bd \
    && wget -q https://www.dropbox.com/s/erba49z64ef6nkp/hindi_english_train_bd?dl=1 -O /tvecs/data/bilingual_dictionary/hindi_english_train_bd

# Download models
RUN mkdir -p /tvecs/data/models \
    && wget -q https://www.dropbox.com/s/a6mh6f073czk0vg/t-vex-english-model?dl=1 -O /tvecs/data/models/t-vex-english-model \
    && wget -q https://www.dropbox.com/s/wouwsdwuobcvs0b/t-vex-hindi-model?dl=1 -O /tvecs/data/models/t-vex-hindi-model

# Install python dependencies
COPY requirements.txt requirements-test.txt /tvecs/
RUN pip3 install wheel \
    && pip3 install -r /tvecs/requirements.txt \
    && pip3 install -r /tvecs/requirements-test.txt \
    && mkdir -p tvecs/data/models

# Download nltk data for tokenizing
RUN python3 -c ""import nltk;nltk.download('punkt')""

# Copy package files into the image
COPY setup.py setup.cfg conf.py config.json /tvecs/
COPY tvecs/ /tvecs/tvecs
COPY tests /tvecs/tests

# Add our code
WORKDIR /tvecs

# Expose for cherrypy
EXPOSE 5000

# Run the app.
CMD [""python3"", ""-m"", ""tvecs.visualization.server""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",217M3U
code,"# Dock de prod pour application python 3.4 / uwsgi
# Pour mettre à jours les sources il faut relancer le dock
FROM ubuntu:latest
MAINTAINER Maxime Rayanal <me@maxproject.fr>

ENV GIT_URL 'http://github.io/user/project.git'

# Il faut remplacer __application__ par le nom de l'application
ENV PROJECT_DIRECTORY '/var/www/__application__'

# Container pour les commandes APT
RUN apt-get -y update && \
    apt-get install -y --force-yes --fix-missing \
    python3.4-dev python3-pip

# Installation de l'application et des dépendance
RUN mkdir $PROJECT_DIRECTORY

WORKDIR ${PROJECT_DIRECTORY}

# Au lancement on déploie l'application,
# on installe les dépendances, on update la bd et on lance uwsgi
CMD git clone $GIT_URL $PROJECT_DIRECTORY && \
    python3.4 -m pip install -r $PROJECT_DIRECTORY/requirements.txt
    python3.4 $PROJECT_DIRECTORY/manage.py makemigrations && \
    python3.4 $PROJECT_DIRECTORY/manage.py migrate && \
    uwsgi --uid www-data --gid www-data --socket :9090 \
    --wsgi-file $PROJECT_DIRECTORY/__application__/wsgi.py
# Il faut penser à modifier le chemin vers wsgi.py /|\",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EgdskV
code,"FROM jderobot/jderobot


LABEL manteiner Aitor Martínez Fernández+aitor.martinez.fernandez@gmail.com

RUN apt-get update && apt-get -y  install \
    wget \
    && rm -rf /var/lib/apt/lists/*

########## setup Repositories ##############
## ROS ##
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
RUN echo ""deb http://packages.ros.org/ros/ubuntu xenial main"" > /etc/apt/sources.list.d/ros-latest.list

## ZeroC ##
RUN sh -c 'echo deb http://zeroc.com/download/apt/ubuntu16.04 stable main > /etc/apt/sources.list.d/zeroc.list'
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv 5E6DA83306132997

## Gazebo ##
RUN echo ""deb http://packages.osrfoundation.org/gazebo/ubuntu-stable xenial main"" > /etc/apt/sources.list.d/gazebo-stable.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key 67170598AF249743


## JdeRobot Test ##
RUN sh -c 'echo ""deb http://jderobot.org/aptest xenial main"" > /etc/apt/sources.list.d/jderobot.list'
RUN wget -qO - www.jderobot.org/aptest/aptest.key | apt-key add -


## JdeRobot ##
#RUN sh -c 'echo ""deb http://jderobot.org/apt xenial main"" > /etc/apt/sources.list.d/jderobot.list'
#RUN apt-key adv --keyserver keyserver.ubuntu.com --recv B0E7F58E82C8091DF945A0453DA08892EE69A25C

########## Install JdeRobot ##############
RUN apt-get update && apt-get -y  install --only-upgrade\
    jderobot-parallelice \
    && rm -rf /var/lib/apt/lists/*

COPY ./search_file.sh /
COPY ./parallelice.txt /

RUN ./search_file.sh parallelice.txt




",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4Gk5j7
code,"# All Dockerfiles must start with a 'FROM' instruction, which specifies a base image
# See: https://docs.docker.com/engine/reference/builder/#format
# Note, some online sources say that you should put FROM django here (e.g., https://runnable.com/docker/python/dockerize-your-django-application)
# but, in fact, you should NOT do this according to the official docs (as this approach has been deprecated). 
# See: https://hub.docker.com/_/django/
FROM python:3.8

# Echo out the start of the Dockerfile
RUN echo ""Running the Makeability Lab Dockerfile!""

# Sometimes we get warnings about old pip, so take care of that here
RUN pip install --upgrade pip 

# See: https://www.quora.com/How-does-one-install-pip-in-a-Docker-container-using-a-Dockerfile
RUN apt-get update && apt-get --assume-yes install imagemagick ghostscript sqlite3

# The ENV instruction sets the environment variable <key> to the <value> in ENV <key> <value>. 
# See: https://docs.docker.com/engine/reference/builder/#environment-replacement
# In this case, we are setting the stdout/stderr streams in Python to be unbuffered
ENV PYTHONUNBUFFERED 1

#Create a system user which we'll use later.
#We're using the 'apache' user since that's what we're trying to map
#outside the container -- it could be called anything, but apache is convenient
RUN useradd -u 48 apache
RUN groupmod -g 48 apache

# The RUN instruction will execute any commands in a new layer on top of the current image and commit the results. 
# The resulting committed image will be used for the next step in the Dockerfile.
# See: https://docs.docker.com/engine/reference/builder/#run
RUN mkdir /code

# The WORKDIR instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions 
# that follow it in the Dockerfile. If the WORKDIR doesn’t exist, it will be created even if it’s not used 
# in any subsequent Dockerfile instruction. 
# See: https://docs.docker.com/engine/reference/builder/#workdir
WORKDIR /code

# COPY the requirements.txt into the docker container
# As an fyi: Layering RUN instructions and generating commits conforms to the core concepts 
# of Docker where commits are cheap and containers can be created from any point in an image’s history, much like source control.
# See: https://docs.docker.com/engine/reference/builder/#run
COPY requirements.txt /code/
RUN pip3.8 install -r requirements.txt

## TEMP related to: https://github.com/jonfroehlich/makeabilitylabwebsite/issues/866
#RUN pip install django-ckeditor

# Our local user needs write access to a website and static files
RUN chown -R apache /code/

# Despite the above, still getting permission errors on WSL2
# -- PermissionError: [Errno 13] Permission denied: '/code/static'
# -- PermissionError: [Errno 13] Permission denied: '/code/website/migrations'
# RUN chown apache:apache -R /code/

COPY . /code/

# Copy over the new ImageMagick policy, see:
# https://github.com/makeabilitylab/makeabilitylabwebsite/issues/974
COPY imagemagick-policy.xml /etc/ImageMagick-6/policy.xml

# Run the process as our local user:
USER apache

COPY docker-entrypoint.sh docker-entrypoint.sh
CMD [""/code/docker-entrypoint.sh""] 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nEhKth
code,"FROM php:5.6-apache
ENV INSTALL_DIR /var/www/html
EXPOSE 80
VOLUME $INSTALL_DIR

RUN apt-get update && apt-get install -y libcurl4-openssl-dev 
RUN a2enmod rewrite

RUN docker-php-ext-install mysqli

WORKDIR /tmp
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HS3j0e
code,"FROM debian
ENV DISPLAY :0
RUN apt-get update && apt-get install -y tk git
RUN git clone https://github.com/phil294/tkbash
COPY guibuilder.sh .
RUN ln -s /tkbash/tkbash /bin
CMD ./guibuilder.sh",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jjquUS
code,"FROM balenalib/armv7hf-debian:bullseye-run
LABEL io.balena.device-type=""raspberrypi3""
RUN echo ""deb http://archive.raspbian.org/raspbian bullseye main contrib non-free rpi firmware"" >>  /etc/apt/sources.list \
	&& apt-key adv --batch --keyserver ha.pool.sks-keyservers.net  --recv-key 0x9165938D90FDDD2E \
	&& echo ""deb http://archive.raspberrypi.org/debian bullseye main ui"" >>  /etc/apt/sources.list.d/raspi.list \
	&& apt-key adv --batch --keyserver ha.pool.sks-keyservers.net  --recv-key 0x82B129927FA3303E

RUN apt-get update && apt-get install -y --no-install-recommends \
		less \
		libraspberrypi-bin \
		kmod \
		nano \
		net-tools \
		ifupdown \
		iputils-ping \
		i2c-tools \
		usbutils \
	&& rm -rf /var/lib/apt/lists/*

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v7 \nOS: Debian Bullseye \nVariant: run variant \nDefault variable(s): UDEV=off \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SbTKIb
code,"FROM sath89/oracle-12c:latest

ADD ./*.sql /docker-entrypoint-initdb.d/

ENV WEB_CONSOLE false
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dI9uRN
code,"# Name:     xbin-store-cloud-web-cart
# Time:     2017-05-07

FROM java:8-jre-alpine

MAINTAINER Binux <xu.binux@gmail.com>

RUN mkdir /app

WORKDIR /app

COPY xbin-store-cloud-web-cart-1.0.0.jar /app

ADD http://on2bs9q7q.bkt.clouddn.com/wait-for-it.sh /

RUN chmod +x /wait-for-it.sh

ENTRYPOINT [""./wait-for-it.sh"", ""xbin-store-cloud-service-cart:8517"",""--"", ""java"", ""-Djava.security.egd=file:/dev/./urandom"", ""-jar"", ""/app/xbin-store-cloud-web-cart-1.0.0.jar""]

EXPOSE 8106",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RZrrhp
code,"# Start with busybox, but with libc.so.6
FROM busybox:ubuntu-14.04

MAINTAINER Michael Stapelberg <michael@robustirc.net>

# So that we can run as unprivileged user inside the container.
RUN echo 'nobody:x:99:99:nobody:/:/bin/sh' >> /etc/passwd

USER nobody

ADD robustirc-refuse /usr/bin/robustirc-refuse

EXPOSE 6667

ENTRYPOINT [""/usr/bin/robustirc-refuse""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uAJsbV
code,"FROM balenalib/aarch64-ubuntu:hirsute-build
LABEL io.balena.device-type=""photon-tx2-nx""

RUN apt-get update && apt-get install -y --no-install-recommends \
		less \
		kmod \
		nano \
		net-tools \
		ifupdown \
		iputils-ping \
		i2c-tools \
		usbutils \
	&& rm -rf /var/lib/apt/lists/*

RUN [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \nArchitecture: ARM v8 \nOS: Ubuntu hirsute \nVariant: build variant \nDefault variable(s): UDEV=off \nExtra features: \n- Easy way to install packages with `install_packages <package-name>` command \n- Run anywhere with cross-build feature  (for ARM only) \n- Keep the container idling with `balena-idle` command \n- Show base image details with `balena-info` command' > /.balena/messages/image-info

RUN echo '#!/bin/sh.real\nbalena-info\nrm -f /bin/sh\ncp /bin/sh.real /bin/sh\n/bin/sh ""$@""' > /bin/sh-shim \
	&& chmod +x /bin/sh-shim \
	&& cp /bin/sh /bin/sh.real \
	&& mv /bin/sh-shim /bin/sh",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5whZAR
code,"# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This docker image is for development of Shipshape istelf. It provides a
# ready-made environment in which Shipshape can be built and tested.
#
# Shipshape has the following build and test dependencies:
#
#  - Docker - Needed by Shipshape
#  - JDK version 8 - Needed by Bazel
#  - Bazel - Needed by Shipshape for building/testing
#  - Bison
#  - Clang
#  - Flex
#  - Go
#  - Android lint - Needed by Shipshape for testing
#
# Dependencies are listed at https://github.com/google/shipshape.
#

# -- Docker --
# This is a dind container and provides us with Docker
FROM beta.gcr.io/dev-con/cloud-dev-java:prod

# Make sure image is up to date
RUN apt-get -qq update && \
    apt-get -qq install --no-install-recommends \
        bison \
        clang \
        flex \
        g++ \ 
        openjdk-8-jdk \
        openjdk-8-source \
        pkg-config \
        unzip \
        zip \
        zlib1g-dev 

# -- Go --
RUN curl -L -s http://golang.org/dl/go1.5.1.linux-amd64.tar.gz | tar -zx -C /usr/local
ENV PATH $PATH:/usr/local/go/bin
ENV GOPATH /go
ENV GOROOT /usr/local/go

# -- Bazel --
RUN wget -nv -O /tmp/bazel-installer.sh https://github.com/bazelbuild/bazel/releases/download/0.1.0/bazel-0.1.0-installer-linux-x86_64.sh && \
    bash /tmp/bazel-installer.sh && \
    rm /tmp/bazel-installer.sh

# -- Android lint --
ENV PATH /android-sdk-linux/platform-tools:/android-sdk-linux/tools:$PATH
# The latter half of this command is a workaround for a failure in the ""android
# update"" command: https://github.com/google/shipshape/issues/27. The update
# fails to clobber the /tools directory for some reason, so we have to do the
# clobbering for it.
RUN wget -nv -O - http://dl.google.com/android/android-sdk_r23-linux.tgz | tar -zx && \
    echo ""y"" | android -s update sdk --no-ui --filter platform-tool && \
    echo ""y"" | android -s update sdk --no-ui --filter tools && \
    ! { stat -t /android-sdk-linux/temp/tools_*-linux.zip; } || \
    { rm -rf /android-sdk-linux/tools && \
      unzip -qq /android-sdk-linux/temp/tools_*-linux.zip -d /android-sdk-linux && \
      rm -rf /android-sdk-linux/temp; }

# startup.sh doesn't actually do anything; this is some kind of Docker-in-Docker
# black magic.
ADD shipshape/dev_container/startup.sh /startup.sh
ENV ONRUN ${ONRUN} ""/startup.sh""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WpQHuA
code,"
ARG NODE_VERSION=8

FROM node:${NODE_VERSION}-stretch

MAINTAINER nathan.rollins@asu.edu

RUN apt-get update -qq && \
    yarn global add gulp-cli


# Define where our application will live inside the image
ENV APP_ROOT /app

# Create application home.
RUN mkdir -p $APP_ROOT

# Set our working directory inside the image
WORKDIR $APP_ROOT

COPY package.json yarn.lock $APP_ROOT/

# Cache node_modules
RUN yarn install

# Copy the application into image
COPY . $APP_ROOT/

VOLUME /app

COPY docker-entrypoint.sh /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT [""/docker-entrypoint.sh""]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",T22JF8
code,"# Base image
FROM golang:1.4.2

# Maintainer info
MAINTAINER Adrian Moreno <adrian.moreno@emc.com>

# Get the project
RUN go get github.com/emccode/mars-challenge/game-controller
RUN go get -u -v golang.org/x/net/websocket

# Set working directory
WORKDIR /go/src/github.com/emccode/mars-challenge/gateway/go

# Expose port
EXPOSE 8080

# Run Game Controller
CMD go run *.go
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cBmoDu
code,"FROM node:latest

MAINTAINER Bertrand Martel <bmartel.fr@gmail.com>

# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# install pm2 (node package manager) & setup pm2 start script
RUN npm install -g pm2

# Install app dependencies
COPY app/package.json /usr/src/app/

# Bundle app source
COPY ./app /usr/src/app

ADD start.sh /var/www/
RUN chmod +x /var/www/start.sh

CMD [""/var/www/start.sh""] 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5iHIp_
code,"ARG X_DCKR_TAG=edge
FROM alpine:$X_DCKR_TAG
MAINTAINER B. van Berkum <dev@dotmpe.com>

RUN apk update && \
    apk add --no-cache \
      ncurses jq curl \
      git bash && \
    rm -rf /var/cache/apk/*

# Install BATS from source
ARG BATS_DEV_REPO=https://github.com/bvberkum/bats-core.git
ARG BATS_DEV_BRANCH=master

RUN cd && git clone $BATS_DEV_REPO bats && \
      cd bats && git checkout $BATS_DEV_BRANCH && \
      ./install.sh /usr/local

ARG X_DCKR_PREFIX=x-docker
ARG X_DCKR_BASENAME=alpine-bats
ARG X_DCKR_NAME=$X_DCKR_PREFIX/$X_DCKR_BASENAME

ENV X_DCKR_CMD=/usr/local/bin/bats
ENV X_DCKR_APK=""""

# Generate entry point script
RUN printf ""#!/bin/sh\n\
set -e\n\
test -z \""\$X_DCKR_APK\"" || {\n\
  echo \""$X_DCKR_NAME: Installing additional packages '\$X_DCKR_APK'\"" >&2\n\
  apk update \
 && apk add --no-cache \$X_DCKR_APK\n\
}\n\
test \""\$1\"" = \""--\"" && { shift\n\
  echo \""$X_DCKR_NAME: Running script, remaining argv: \$*\"" >&2;\n\
  while test \$# -ne 0 ; do\n\
    cmd=\""\$1\""; shift\n\
    while test \$# -ne 0 ; do\n\
      cmd=\""\$cmd \$1\""; shift\n\
      test \""\$1\"" = '--' && { shift; break; } || continue; done;\n\
    echo \""$X_DCKR_NAME: Running '\$cmd'\"";\n\
    \$cmd || exit \$?;\n\
  done\n\
  echo \""$X_DCKR_NAME: Script finished without errors\"" >&2;\n\
} || {\n\
  exec \$X_DCKR_CMD \""\$@\""\n\
}\n\
"" >> /x-docker-entrypoint.sh
RUN chmod +x /x-docker-entrypoint.sh
RUN ls -la /x-docker-entrypoint.sh && cat /x-docker-entrypoint.sh

ENTRYPOINT [""/x-docker-entrypoint.sh""]
CMD [""-v""]

VOLUME [""/project""]
WORKDIR /project
# Id: x-docker/0.0.2-dev ./alpine-bats_dev/latest/Dockerfile
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KriEBQ
code,"# Base image of the IPython/Jupyter notebook, with conda
# Intended to be used in a tmpnb installation
# Customized from https://github.com/jupyter/docker-demo-images/tree/master/common

FROM debian:jessie

MAINTAINER Andrew Osheroff <andrewosh@gmail.com>

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update -y &&\
    apt-get install -y curl git vim wget build-essential python-dev ca-certificates bzip2 libsm6\
      nodejs-legacy npm python-virtualenv python-pip gcc gfortran libglib2.0-0 python-qt4 &&\
    apt-get clean &&\
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*tmp

# We run our docker images with a non-root user as a security precaution.
# main is our user
RUN useradd -m -s /bin/bash main

EXPOSE 8888

USER main
ENV HOME /home/main
ENV SHELL /bin/bash
ENV USER main
WORKDIR $HOME

# Add helper script
ADD start-notebook.sh /home/main/
ADD templates/ /srv/templates/

USER root
RUN chmod a+rX /srv/templates
RUN chown -R main:main /home/main

RUN pip install --upgrade setuptools pip

USER main

# Install Anaconda and Jupyter
RUN wget https://3230d63b5fc54e62148e-c95ac804525aac4b6dba79b00b39d1d3.ssl.cf1.rackcdn.com/Anaconda-2.3.0-Linux-x86_64.sh
RUN bash Anaconda-2.3.0-Linux-x86_64.sh -b &&\
    rm Anaconda-2.3.0-Linux-x86_64.sh
ENV PATH $HOME/anaconda/bin:$PATH
RUN conda create -n python3 python=3.3 anaconda
RUN /bin/bash -c ""source activate python3 && ipython kernelspec install-self --user""

# Convert notebooks to the current format
# RUN find . -name '*.ipynb' -exec ipython nbconvert --to notebook {} --output {} \;
# RUN find . -name '*.ipynb' -exec ipython trust {} \;

ENV SHELL /bin/bash
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mrTBot
code,"      SUBROUTINE AAP(NOOT)
      DIMENSION NOOT(*)
      END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jHDAdp
code,"!========================================================================
!
!                   S P E C F E M 2 D  Version 7 . 0
!                   --------------------------------
!
!     Main historical authors: Dimitri Komatitsch and Jeroen Tromp
!                        Princeton University, USA
!                and CNRS / University of Marseille, France
!                 (there are currently many more authors!)
! (c) Princeton University and CNRS / University of Marseille, April 2014
!
! This software is a computer program whose purpose is to solve
! the two-dimensional viscoelastic anisotropic or poroelastic wave equation
! using a spectral-element method (SEM).
!
! This program is free software; you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation; either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License along
! with this program; if not, write to the Free Software Foundation, Inc.,
! 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
!
! The full text of the license is available in file ""LICENSE"".
!
!========================================================================

  subroutine read_source_file(NSOURCES)

  ! reads in source file DATA/SOURCE

  use constants, only: IMAIN,IGNORE_JUNK,NLINES_PER_SOURCE,TINYVAL,PI,mygroup,IN_DATA_FILES
  use source_file_par
  use shared_parameters, only: DT

  implicit none

  integer,intent(in) :: NSOURCES

  ! local parameters
  integer :: ier,icounter,i_source,num_sources
  character(len=256) string_read
  character(len=MAX_STRING_LEN) :: source_filename,path_to_add
  integer, parameter :: IIN_SOURCE = 22

  ! allocates memory arrays
  allocate(source_surf(NSOURCES), &
           xs(NSOURCES), &
           zs(NSOURCES), &
           source_type(NSOURCES), &
           time_function_type(NSOURCES), &
           name_of_source_file(NSOURCES), &
           burst_band_width(NSOURCES), &
           f0_source(NSOURCES), &
           tshift_src(NSOURCES), &
           anglesource(NSOURCES), &
           Mxx(NSOURCES), &
           Mxz(NSOURCES), &
           Mzz(NSOURCES), &
           factor(NSOURCES),stat=ier)
  if (ier /= 0) stop 'Error allocating source arrays'

  ! initializes
  xs(:) = 0.d0
  zs(:) = 0.d0

  source_type(:) = 0
  time_function_type(:) = 0

  f0_source(:) = 0.d0
  tshift_src(:) = 0.d0
  anglesource(:) = 0.d0
  Mxx(:) = 0.d0
  Mxz(:) = 0.d0
  Mzz(:) = 0.d0

  source_filename = trim(IN_DATA_FILES)//'SOURCE'

  ! mygroup has been initialized with negative value. It is positive just in the case NUMBER_OF_SIMULTANEOUS_RUNS > 1
  if (mygroup >= 0) then
    write(path_to_add,""('run',i4.4,'/')"") mygroup + 1
    source_filename = path_to_add(1:len_trim(path_to_add))//source_filename(1:len_trim(source_filename))
  endif

  ! counts lines
  open(unit=IIN_SOURCE,file=trim(source_filename),status='old',action='read',iostat=ier)
  if (ier /= 0) stop 'Error opening source file, please make sure file exists...'

  ! counts number of lines
  icounter = 0
  do while(ier == 0)
    read(IIN_SOURCE,""(a)"",iostat=ier) string_read

    if (ier == 0) then
      ! suppress trailing carriage return (ASCII code 13) if any (e.g. if input text file coming from Windows/DOS)
      if (index(string_read,achar(13)) > 0) string_read = string_read(1:index(string_read,achar(13))-1)

      ! suppress leading and trailing white spaces, if any
      string_read = adjustl(string_read)
      string_read = string_read(1:len_trim(string_read))

      ! if the line is not empty and is not a comment, count it
      if (len_trim(string_read) > 0 .and. (index(string_read,'#') == 0 .or. index(string_read,'#') > 1)) icounter = icounter + 1
    endif
  enddo
  close(IIN_SOURCE)

  ! checks counter
  if (mod(icounter,NLINES_PER_SOURCE) /= 0) &
    stop 'total number of non blank and non comment lines in SOURCE file should be a multiple of NLINES_PER_SOURCE'

  ! total number of sources
  num_sources = icounter / NLINES_PER_SOURCE

  ! checks number of sources
  if (num_sources < 1) stop 'need at least one source in SOURCE file'
  if (num_sources /= NSOURCES) then
       print *,'Error invalid num_sources :',num_sources
       print *,'NSOURCES :',NSOURCES
       stop 'Error: Total number of sources in DATA/SOURCE is different from that declared in the Par_file, please check...'
  endif

  ! reads in source parameters
  open(unit=IIN_SOURCE,file=trim(source_filename),status='old',action='read',iostat=ier)
  if (ier /= 0) stop 'Error opening source file, please make sure file exists...'

  ! reads in all source informations
  do  i_source= 1,NSOURCES

    ! source set to surface
    call read_value_logical(IIN_SOURCE,IGNORE_JUNK,source_surf(i_source))

    ! x/z location
    call read_value_doubl",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GufhLA
code,"c
c  Copyright (C) 1998-2001  Ljubomir Milanovic & Horst Wagner
c  This file is part of the g2 library
c
c  This library is free software; you can redistribute it and/or
c  modify it under the terms of the GNU Lesser General Public
c  License as published by the Free Software Foundation; either
c  version 2.1 of the License, or (at your option) any later version.
c
c  This library is distributed in the hope that it will be useful,
c  but WITHOUT ANY WARRANTY; without even the implied warranty of
c  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
c  Lesser General Public License for more details.
c
c  You should have received a copy of the GNU Lesser General Public
c  License along with this library; if not, write to the Free Software
c  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
c

c
c  This file will be processed by cpp, the outpu g2testf.f is feeded into fortran compiler
c  See Makefile for details.
c

c	program main
c	implicit none
	integer  ndev, i, j
	real d, c, dev(0:10)
	character str*256
	real pts(0:10)
	real y
	include 'penguin.inc'
c	integer image(64)
c	data image/
c     & 0, 0, 2, 2, 2, 2, 0, 0,
c     & 0, 2, 0, 0, 0, 0, 2, 0,
c     & 2, 0, 3, 0, 0, 3, 0, 2,
c     & 2, 0, 0, 0, 0, 0, 0, 2,
c     & 2, 3, 0, 0, 0, 0, 3, 2,
c     & 2, 0, 3, 3, 3, 3, 0, 2,
c     & 0, 2, 0, 0, 0, 0, 2, 0,
c     & 0, 0, 2, 2, 2, 2, 0, 0 /
c /*open virtual device */
	d=g2_open_vd()
	print*,""Adding.. VD="", d
	ndev = 1

#ifdef DO_PS
	dev(ndev)=g2_open_ps('g2testf.ps', 4., 0.)
	print*,""..PS="",dev(ndev)
	call g2_attach(d, dev(ndev))
	ndev = ndev + 1
#endif
#ifdef DO_X11
	dev(ndev)=g2_open_x11(775., 575.)
	print*,""..X11="",dev(ndev)
	call g2_attach(d,dev(ndev))
	ndev = ndev + 1
#endif
#ifdef DO_GD
	str='g2testf.png'
	str(12:12)=char(0)
	dev(ndev)=g2_open_gd(str, 775., 575., 0.)
	print*,""..GD="",dev(ndev)
	call g2_attach(d,dev(ndev))
	ndev = ndev + 1
#endif
	call g2_set_auto_flush(d,0.)

c        call g2_set_coordinate_system(d, 775., 575., -0.75, -1.0)

	do i=0,27
	 call g2_pen(d, float(i))
	 call g2_filled_circle(d, float(i*20+10), 10., 10.) 
	 call g2_pen(d, 1.)
	 call g2_circle(d, float(i*20+10), 10., 10.)
	 write(str(1:4),'(i3,a1)') i,char(0)
	 call g2_string(d, float(i*20+7), 21., str(1:4))
	enddo
    
    	do j=1,ndev
	 if(dev(j).gt.0) then
	  do i=0,64
	   call g2_move(dev(j), float(2*i+575), 5.)
	   c = g2_ink(dev(j), float(i)/64., 0., 0.)
	   call g2_pen(dev(j), c)
	   call g2_line_r(dev(j), 0., 20.)
	   c = g2_ink(dev(j), 0., float(i)/64., 0.)
	   call g2_pen(dev(j), c )
	   call g2_line_r(dev(j), 10., 20.)
	   c = g2_ink(dev(j), 0., 0., float(i)/64.)
	   call g2_pen(dev(j), c)
	   call g2_line_r(dev(j), -10., 20.)
	  enddo
	 endif
	enddo
	call g2_pen(d, 1.)
	call g2_line(d, 200., 50., 350., 50.)
	call g2_line(d, 200., 48., 350., 48.)
	call g2_line(d, 200., 46., 350., 46.)
	call g2_line(d, 200., 46., 200., 75.)
	call g2_line(d, 198., 46., 198., 75.)
	call g2_line(d, 196., 46., 196., 75.)
	str=""012abcABC#())(\\-+~*!$%&""//char(0)
	call g2_string(d, 200., 50., str)
    
    	call g2_pen(d, 1.)
    	do i=1,25
	 call g2_line(d, 15., float(i*20+50), 15., float(i*20+50+i))
	 call g2_set_font_size(d, 12.)
	 write(str(1:3),'(i2,a1)') i,char(0)
	 call g2_string(d, 20., float(i*20+50), str)
	 call g2_set_font_size(d, float(i))
	 str='Hello, world!'//char(0)
	 call g2_string(d, 40., float(i*20+50), str)
	enddo


	call g2_plot(d, 150., 70.)
	call g2_line(d, 147., 68., 153., 68.)
		
       y=100.
	call g2_line(d, 100., y, 150., y+50.)
	call g2_triangle(d, 150., y, 250., y, 200., y+50.)
	call g2_rectangle(d, 300., y, 400., y+50.)
	call g2_circle(d, 450., y+25., 25.)
	call g2_ellipse(d, 550., y+25., 45., 25.)
	call g2_arc(d, 650., y+25., 25., 45., 90., 360.)
    
       y=200.
	call g2_filled_triangle(d, 150., y, 250., y, 200., y+50.)
	call g2_filled_rectangle(d, 300., y, 400., y+50.)
	call g2_filled_circle(d, 450., y+25., 25.)
	call g2_filled_ellipse(d, 550., y+25., 45., 25.)
	call g2_filled_arc(d, 650., y+25., 25., 45., 90., 360.)


	y=300.
	pts(0)=150.
	pts(1)=y
	pts(2)=175.
	pts(3)=y+100.
	pts(4)=200.
	pts(5)=y
	pts(6)=225.
	pts(7)=y+100.
	pts(8)=250.
	pts(9)=y
	call g2_poly_line(d, 5., pts)
	call g2_pen(d, 19.)
	call g2_b_spline(d, 5., pts, 20.)
	call g2_pen(d, 1.)
	
	pts(0)=300.
	pts(1)=y
	pts(2)=350.
	pts(3)=y
	pts(4)=375.
	pts(5)=y+50.
	pts(6)=325.
	pts(7)=y+90.
	pts(8)=275.
	pts(9)=y+50.
	call g2_polygon(d, 5., pts)

	pts(0)=450.
	pts(1)=y
	pts(2)=500.
	pts(3)=y
	pts(4)=525.
	pts(5)=y+50.
	pts(6)=475.
	pts(7)=y+90.
	pts(8)=425.
	pts(9)=y+50.
	call g2_filled_polygon(d, 5, pts)
	
	call g2_image(d, 55., 50., 53., 62., penguin)
	call g2_image(d, 75., 130., 53., 62., penguin)
	call g2_pen(d, 1.)
    
	call g2_line(d, 225., 448., float(200+19*25), 448.)
    	do i=1,20
    	 call g2_pen(d,float(i+1))
	 call g2_set_line_width(d, float(i))
	 call g2_move(d, float(200+i*25), 450.)
	 call g2_line_to(d, float(200+i*25), 550.)
       enddo
	call g2_pen(d,1.)
    
	call g2_set_line_width(d, 5.)
      do i=1,10
	pts(0)=float(1*i)
	pts(1)=float(2*i)
	pts(2)=float(3*i)
	call g2_set_dash(d, 3., pts)
	call g2_li",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rXQaMM
code,"C     example program to run siscone and/or pp sequential recombination
C     algorithms from f77
C     
C     To compile, first make sure that the installation bin directory is
C     in your path (so as to have access to fastjet-config) and then
C     type make -f Makefile.alt fastjet_fortran_example
C     
C     Given the complications inherent in mixing C++ and fortran, your
C     mileage may vary...
C     
C     To use, type: ./fastjet_fortran_example < ../example/data/single-event.dat
C     
C     $Id: fastjet_fortran_example.f 4006 2015-10-05 21:39:13Z cacciari $
C     
      program fastjet_fortran_example
      implicit none
c ... maximum number of particles
      integer n
      parameter (n = 1000)
      integer i,j
c ... momenta: first index is Lorentz index (1=px,2=py,3=pz,4=E),
c ... second index indicates which particle it is 
c ... [note, indices are inverted relative to convention in Pythia]
      double precision p(4,n)
c ... parameters of the jet algorithm
      double precision  R, f, palg    
c ... array to store the returned jets
      double precision jets(4,n)
      double precision fastjetdmerge,fastjetarea
      integer constituents(n)
      integer npart, njets, nconst ! <= n
      double precision ghost_maxrap, ghost_area
      double precision rapmin,rapmax,phimin,phimax,rho,sigma,meanarea
      integer nrepeat
c ... fill in p (NB, energy is p(4,i))
      do i=1,n
         read(*,*,end=500) p(1,i),p(2,i),p(3,i),p(4,i)
      enddo
      
 500  npart = i-1

      R = 0.6d0
      f = 0.75d0
c.....run the clustering with SISCone
c      call fastjetsiscone(p,npart,R,f,jets,njets)   ! ... now you have the jets
c.....or with a pp generalised-kt sequential recombination alg
      palg = 1d0 ! 1.0d0 = kt, 0.0d0 = Cam/Aachen, -1.0d0 = anti-kt
c      call fastjetppgenkt(p,npart,R,palg,jets,njets)   ! ... now you have the jets

c.....the same, but calculating area information too 
c.....(uselessy slower if you do not need areas)
      ghost_maxrap = 6.0d0 ! make sure you define this as a double precision (with the d0)
      nrepeat = 1
      ghost_area = 0.01d0 ! make sure you define this as a double precision (with the d0)
      call fastjetppgenktwitharea(p,npart,R,palg,
     #                            ghost_maxrap,nrepeat,ghost_area,
     #                            jets,njets)   ! ... now you have the jets


c.....write out all inclusive jets, in order of decreasing pt
      write(*,*) '      px         py          pz         E         pT  
     #        area'
      do i=1,njets
         write(*,*) i,(jets(j,i),j=1,4), sqrt(jets(1,i)**2+jets(2,i)**2)
     #      , fastjetarea(i)
      enddo
      
c.....write out indices of constituents of first jet
      write(*,*)
      write(*,*) 'Indices of constituents of first jet'
      i = 1;
      call fastjetconstituents(i, constituents, nconst)
      write(*,*) (constituents(i),i=1,nconst)

c.....write out the last 5 dmerge values
      write(*,*)
      write(*,*) ""dmerge values from last 5 steps""
      do i=0,4
         write(*,*) "" dmerge from "",i+1,"" to "",i,"" = "", fastjetdmerge(i)
      end do


c.....write out the values of rho, sigma and mean_area in the event
      write(*,*)
      write(*,*) ""Background determination""
      rapmin = -3d0
      rapmax = 3d0
      phimin = 0d0
      phimax = 8d0*datan(1d0) ! 2pi
      call fastjetglobalrhoandsigma(rapmin,rapmax,phimin,phimax,
     #                              rho,sigma,meanarea)
      write(*,*) "" rho       = "", rho
      write(*,*) "" sigma     = "", sigma
      write(*,*) "" mean area = "", meanarea
      end
      
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",i6Sru-
code,"module mod_parameters
     ! Contains definitions for all the parameters, 
     ! in addition to some hard-coded values.
     
     integer, parameter                 :: i64 = selected_int_kind(18)

     ! Length of the buffer before writing to disk.
     ! Only relevant if saving the entire position history.
     ! Run time is bottlenecked by read/writes to file to a severe degree, so in general 
     ! this should be made as large as possible while still fitting in memory.
     !
     ! Simulation memory with no buffer is
     ! approximately the size of a double (8 bytes) times 2 
     ! or 3 X,Y(,Z) times the number of particles. For example, with 1e6 particles, 
     ! approximate memory usage for channel simulation is 16e6 bytes, or 15.26MB.
     ! With a buffer length of 100, this becomes 1526MB, or 1.49GB.
     integer, parameter                 :: buffer_len = 100

     ! Number of bins when looking at the cross-sectionally averaged distribution.
     integer, parameter                 :: nhb = 400

     ! Scale of the channel: [-a,a]. Not much reason to use anything other than 1.0d0.
     double precision, parameter        :: a = 1.0d0
     double precision                   :: b
     character(len=1024)                :: geometry
     
     ! These will be read from file.
     double precision                   :: aratio, q, Pe, x0width, y0, z0, t_warmup, &
                                             dt, dtmax, Tfinal
     integer                            :: nGates, x0n, nbins
     logical                            :: save_hist, save_hist2d, use_external_ic, use_oscillatory
     character(len=1024)                :: ic_file, tstep_type, other_file
     
     integer(i64)                       :: mt_seed

end module mod_parameters
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jhnLZx
code,"!> @file sirius.f90
!! @brief SIRIUS interface to Fortran
module sirius

use, intrinsic :: ISO_C_BINDING

contains

function string(f_string) result(res)
    implicit none
    character(len=*), intent(in)  :: f_string
    character(len=1, kind=C_CHAR) :: res(len_trim(f_string) + 1)
    integer i
    do i = 1, len_trim(f_string)
        res(i) = f_string(i:i)
    end do
    res(len_trim(f_string) + 1) = C_NULL_CHAR
end function string

function bool(val) result(res)
    implicit none
    logical, intent(in) :: val
    logical(C_BOOL)     :: res
    res = val
end function bool

include 'generated.f90'

end module
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PovfW9
code,"C Copyright(C) 2009-2017 National Technology & Engineering Solutions of
C Sandia, LLC (NTESS).  Under the terms of Contract DE-NA0003525 with
C NTESS, the U.S. Government retains certain rights in this software.
C 
C Redistribution and use in source and binary forms, with or without
C modification, are permitted provided that the following conditions are
C met:
C 
C     * Redistributions of source code must retain the above copyright
C       notice, this list of conditions and the following disclaimer.
C 
C     * Redistributions in binary form must reproduce the above
C       copyright notice, this list of conditions and the following
C       disclaimer in the documentation and/or other materials provided
C       with the distribution.
C     * Neither the name of NTESS nor the names of its
C       contributors may be used to endorse or promote products derived
C       from this software without specific prior written permission.
C 
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
C ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
C LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
C A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
C OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
C SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
C LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
C DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
C THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
C (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

C=======================================================================
      SUBROUTINE CMDELB (VERB, INLINE, IFLD, INTYP, CFIELD, IFIELD,
     &                   IDELB, IELBST, NEWELB, *)
C=======================================================================

C   --*** CMDELB *** (MESH) Process active element block commands
C   --   Written by Amy Gilkey - revised 05/18/88
C   --
C   --Parameters:
C   --   VERB    - I/O - the verbs for the SHOW command
C   --   INLINE  - I/O - the parsed input line for the log file
C   --   IFLD    - I/O - the free-field reader index and fields 
C   --   INTYP   - I/O - the free-field reader index and fields
C   --   CFIELD  - I/O - the free-field reader index and fields
C   --   IFIELD  - I/O - the free-field reader index and fields
C   --   IDELB   - IN  - the element block IDs
C   --   IELBST  - I/O - the element block status:
C   --                   -1 = OFF, 0 = ON, but not selected, 1 = selected
C   --   NEWELB  - I/O - the new element blocks flag, set 0 in ROUTER only
C   --                   0 = no new element blocks
C   --                   1 = new selected element blocks
C   --                   2 = new displayed element blocks
C   --                       (implies new selected blocks)
C   --
C   --Common Variables:
C   --   Uses IS3DIM of /D3NUMS/
C   --   Uses NELBLK of /DBNUMS/

      include 'params.blk'
      include 'dbnums.blk'
      include 'd3nums.blk'

      CHARACTER*(*) VERB
      CHARACTER*(*) INLINE
      INTEGER     INTYP(*)
      CHARACTER*(*) CFIELD(*)
      INTEGER     IFIELD(*)
      INTEGER IDELB(NELBLK)
      INTEGER IELBST(NELBLK)
      INTEGER NEWELB

      CHARACTER*(MXSTLN) WORD
      CHARACTER OPTION
      LOGICAL FFEXST, FFNUMB, FFMATC

      IF (VERB .EQ. 'VISIBLE') THEN
         CALL FFADDC (VERB, INLINE)
         IF (.NOT. IS3DIM) THEN
            CALL PRTERR ('CMDERR', 'Command allowed in 3D only')
            GOTO 190
         END IF

         NEWELB = 2

         IF (.NOT. FFEXST (IFLD, INTYP)) THEN

C         --Select all element blocks if no parameters
            DO 100 IELB = 1, NELBLK
               IF (IELBST(IELB) .LT. 0) IELBST(IELB) = 1
  100       CONTINUE

         ELSE IF (FFMATC (IFLD, INTYP, CFIELD, 'OFF', 3)) THEN

C         --Turn off all element blocks if OFF
            CALL FFADDC ('OFF', INLINE)
            DO 110 IELB = 1, NELBLK
               IF (IELBST(IELB) .GE. 0) IELBST(IELB) = -1
  110       CONTINUE

         ELSE

C         --Strip off ADD or DELETE option
            IF (FFMATC (IFLD, INTYP, CFIELD, 'ADD', 3)) THEN
               CALL FFADDC ('ADD', INLINE)
               OPTION = '+'
            ELSE IF (FFMATC (IFLD, INTYP, CFIELD, 'DELETE', 3)) THEN
               CALL FFADDC ('DELETE', INLINE)
               OPTION = '-'
            ELSE
               IF (.NOT. FFNUMB (IFLD, INTYP)) THEN
                  CALL PRTERR ('CMDERR',
     &               'Expected ""OFF"" or ""ADD"" or ""DELETE""'
     &               // ' or element block ID')
                  GOTO 190
               END IF
C            --De-select all element blocks so only listed blocks are selected
               CALL INIINT (NELBLK, -1, IELBST)
               OPTION = '+'
            END IF

  120       CONTINUE
            IF (FFEXST (IFLD, INTYP)) THEN
               CALL FFINTG (IFLD, INTYP, IFIELD,
     &            'element block ID', 0, ID, *130)
   ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VuT_iB
code,"! { dg-do compile }
! { dg-require-effective-target tls }

      SUBROUTINE A24(A)
      INTEGER A
      INTEGER X, Y, Z(1000)
      INTEGER OMP_GET_NUM_THREADS
      COMMON/BLOCKX/X
      COMMON/BLOCKY/Y
      COMMON/BLOCKZ/Z
!$OMP THREADPRIVATE(/BLOCKX/)
      INTEGER I, J
      i=1
!$OMP PARALLEL DEFAULT(NONE) PRIVATE(A) SHARED(Z) PRIVATE(J)
      J = OMP_GET_NUM_THREADS();
               ! O.K. - J is listed in PRIVATE clause
      A = Z(J) ! O.K. - A is listed in PRIVATE clause
               !       - Z is listed in SHARED clause
      X=1      ! O.K. - X is THREADPRIVATE
      Z(I) = Y ! Error - cannot reference I or Y here
! { dg-error ""'i' not specified"" """" { target *-*-* } .-1 } */
! { dg-error ""enclosing 'parallel'"" """" { target *-*-* } 14 } */
! { dg-error ""'y' not specified"" """" { target *-*-* } 20 }  */
!$OMP DO firstprivate(y)
      DO I = 1,10
        Z(I) = Y ! O.K. - I is the loop iteration variable
                 ! Y is listed in FIRSTPRIVATE clause
      END DO
      Z(I) = Y    ! Error - cannot reference I or Y here
!$OMP END PARALLEL
      END SUBROUTINE A24
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uQGyLL
code,"      subroutine impris(ndata,x,y,a)
c
c     + + + PURPOSE + + +
c
c     SR IMPRIS is an impoundment element subroutine used to
c     develop fit coefficients for the perforated riser outflow
c     function.  It is based upon the ""Numerical Recipes
c     in Fortran"" SR SVDFIT.
c
c     Called from: IMPINT
c
c     Copyright (C) 1986, 1992 Numerical Recipes Software
c
c     Permission is granted for use only within USDA Water Erosion
c     Prediction Project code
c
c     + + + KEYWORDS + + +
c
c     + + + PARAMETERS + + +
c
c     + + + ARGUMENT DECLARATIONS + + +
c
      integer ndata
      real x(100), y(100), a(5)
c
c     + + + ARGUMENT DEFINITIONS + + +
c
c     a(i)  - the fit coefficients returned to SR IMPINT
c     ndata - number of points to be fitted
c     x(i)  - stage values from SR IMPINT
c     y(i)  - discharge values from SR IMPINT
c
c     + + + COMMON BLOCKS + + +
c
c     + + + LOCAL VARIABLES + + +
c
      integer ma, mp, np, i, j
      real chisq, u(100,5), v(5,5), w(5), tol, sum, thresh, wmax,
     1    afunc(5), b(100)
c
c     + + + LOCAL DEFINITIONS + + +
c
c     Variable definitions (note:  this is a canned subroutine
c     only the varibles entering and exiting are defined)
c
c     afunc(i) - the transformed x values
c     ma       - number of x values in the function (2)
c     mp       - number of pairs of points included in the regression
c     np       - set to ma
c     u(i,j)   - transformed matrix of x values
c
c     + + + SAVES + + +
c
c     + + + SUBROUTINES CALLED + + +
c
c     impsvb
c     impsvd
c
c     + + + DATA INITIALIZATIONS + + +
c
c     + + + END SPECIFICATIONS + + +
c
c
      ma = 2
      mp = ndata
      np = ma
      tol = 1.e-5
c
c     defining afunc and u
c
      do 20 i = 1, ndata
        afunc(1) = 1.0
        afunc(2) = 1.0 / x(i) ** 1.5
        y(i) = 1.0 / y(i)
c
        do 10 j = 1, ma
          u(i,j) = afunc(j)
   10   continue
c
        b(i) = y(i)
   20 continue
c
      call impsvd(u,ndata,ma,w,v)
c
      wmax = 0.0
c
      do 30 j = 1, ma
        if (w(j).gt.wmax) wmax = w(j)
   30 continue
c
      thresh = tol * wmax
c
      do 40 j = 1, ma
        if (w(j).lt.thresh) w(j) = 0.
   40 continue
c
      call impsvb(u,w,v,ndata,ma,b,a)
c
      chisq = 0.0
c
      do 60 i = 1, ndata
        afunc(1) = 1.0
        afunc(2) = 1.0 / x(i) ** 1.5
        sum = 0.0
c
        do 50 j = 1, ma
          sum = sum + a(j) * afunc(j)
   50   continue
c
        chisq = chisq + (y(i)-sum) ** 2
        y(i) = 1.0 / y(i)
   60 continue
c
      return
      end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8DH_qI
code,"!
! libui-draw-text.f90
! Fortran から　libui　を使う。
!
! Author Yoji.Hosokawa 2016/4
!
! gfortran -O2 -g -Wall -o libui-window libui-window.f90 -L.-lui `pkg-config gtk+-3.0 --libs`
!

module handlers
  use iso_c_binding
  use libuif_structs
  use libuif
  implicit none

    type(c_ptr) :: mainwin;

    type(c_ptr) :: textString
    type(c_ptr) :: textFontButton
    type(c_ptr) :: textColorButton
    type(c_ptr) :: textWidth
    type(c_ptr) :: textApply
    type(c_ptr) :: noZ
    type(c_ptr) :: textArea
    type(uiAreaHandler) :: textAreaHandler

    integer,parameter :: colorWhite = x'FFFFFF'
    integer,parameter :: colorBlack = x'000000'

contains

  ! ""close mainwindow"" is a this app

  function shouldQuit() result(ret)
    use iso_c_binding
    use libuif
      integer :: ret
        call uiControlDestroy(mainwin)
        ret = 1
  end function shouldQuit

  subroutine onClosing()
    use iso_c_binding
    use libuif
      call uiQuit()
  end subroutine onClosing

  subroutine d2dColorToRGB(color, r, g, b)
    use iso_c_binding
    use libuif
      integer :: color
      double precision :: r,g,b
        r = dble(ibits(color,16,8)) / 255.0d0
        g = dble(ibits(color,8,8)) / 255.0d0
        b = dble(ibits(color,0,8)) / 255.0d0
  end subroutine d2dColorToRGB

  subroutine d2dSolidBrush(brush, color, alpha)
    use iso_c_binding
    use libuif_structs
    use libuif
      type(uiDrawBrush) :: brush
      integer :: color
      double precision :: alpha
        brush%Type = uiDrawBrushTypeSolid
        call d2dColorToRGB(color, brush%R, brush%G, brush%B)
        brush%A = alpha;
  end subroutine d2dSolidBrush

  subroutine handlerDraw(a, area, dp)
    use iso_c_binding
    use libuif_structs
    use libuif
    implicit none
      type(uiAreaHandler) :: a
      type(c_ptr) :: area
      type(uiAreaDrawParams) :: dp
      type(c_ptr) :: font
      type(c_ptr) :: layout
      double precision :: r, g, b, al
      character :: surrogates(7), composed(12)

      double precision :: width, height

! draw text
       font = uiFontButtonFont(textFontButton)

      layout = uiDrawNewTextLayout(""One two three four""//c_null_char, font, -1.0d0)
!      call uiDrawTextLayoutSetColor(layout, 0, 3, 0.0d0, 0.0d0, 0.0d0, 1.0d0)
      call uiDrawTextLayoutSetColor(layout, 4, 7, 1.0d0, 0.0d0, 0.0d0, 1.0d0)
      call uiDrawTextLayoutSetColor(layout, 8, 14,1.0d0, 0.0d0, 0.5d0, 0.5d0)
      call uiColorButtonColor(textColorButton, r, g, b, al)
      call uiDrawTextLayoutSetColor(layout, 14, 18, r, g, b, al)
      call uiDrawText(dp%Context, 10.0d0, 10.0d0, layout)
      call uiDrawTextLayoutExtents(layout, width, height)
      call uiDrawFreeTextLayout(layout)

      surrogates(1) = char(120)         ! x
      surrogates(2) = char(x'F0')       !// surrogates D800 DF08
      surrogates(3) = char(x'90')
      surrogates(4) = char(x'8C')
      surrogates(5) = char(x'88')
      surrogates(6) = char(121)         !y
      surrogates(7) = char(0)

      layout = uiDrawNewTextLayout(surrogates, font, -1.0d0)
!      call uiDrawTextLayoutSetColor(layout, 0, 6, 0.0d0, 0.0d0, 0.0d0, 1.0d0)
      call uiDrawTextLayoutSetColor(layout, 1, 2, 1.0d0, 0.0d0, 0.5d0, 0.5d0)
      call uiDrawText(dp%Context, 10.0d0, 10.0d0 + height, layout)
      call uiDrawFreeTextLayout(layout)

      composed(1) = char(122)       ! z
      composed(2) = char(122)       ! z
      composed(3) = char(x'C3')     !// 2
      composed(4) = char(x'A9')
      composed(5) = char(122)       ! z
      composed(6) = char(122)       ! z
      composed(7) = char(x'65')     !// 5
      composed(8) = char(x'CC')
      composed(9) = char(x'81')
      composed(10) = char(122)       ! z
      composed(11) = char(122)       ! z
      composed(12) = char(0)

      layout = uiDrawNewTextLayout(composed, font, -1.0d0)
!      call uiDrawTextLayoutSetColor(layout, 0, 11, 0.0d0, 0.0d0, 0.0d0, 1.0d0)
      call uiDrawTextLayoutSetColor(layout, 2, 3, 1.0d0, 0.0d0, 0.5d0, 0.5d0)
      call uiDrawTextLayoutSetColor(layout, 5, 6, 1.0d0, 0.0d0, 0.5d0, 0.5d0)
      if (uiCheckboxChecked(noZ) == 0) then
        call uiDrawTextLayoutSetColor(layout, 6, 7, 0.5d0, 0.0d0, 1.0d0, 0.5d0)
      end if
      call uiDrawText(dp%Context, 10.0d0, 10.0d0 + height + height, layout)
      call uiDrawFreeTextLayout(layout)

      call uiDrawFreeTextFont(font)

  end subroutine handlerDraw

  subroutine handlerMouseEvent()
    use iso_c_binding
    use libuif
!  do nothing
  end subroutine handlerMouseEvent

  subroutine handlerMouseCrossed() 
    use iso_c_binding
    use libuif
!  do nothing
  end subroutine handlerMouseCrossed 

  subroutine handlerDragBroken()
    use iso_c_binding
    use libuif
!  do nothing
  end subroutine handlerDragBroken

  function handlerKeyEvent() result(ret)
    use iso_c_binding
    use libuif
      integer :: ret
!  reject all keys
    ret = 0
  end function handlerKeyEvent

  subroutine onFontChanged()
    use iso_c_binding
    use libuif
      call uiAreaQueueRedrawAll(textArea)
  end subroutine onFontChanged

  subroutine onColorChanged()
    use iso_c_binding
    use libuif
    use iso_c_bindi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",unjxia
code,"!  OpenMP runtime library to be used in conjunction with Open64 Compiler Suites.
!
!  Copyright (C) 2003 - 2009 Tsinghua University.
!
!  This library is free software; you can redistribute it and/or
!  modify it under the terms of the GNU Lesser General Public
!  License as published by the Free Software Foundation; either
!  version 2.1 of the License, or (at your option) any later version.
!
!  This library is distributed in the hope that it will be useful,
!  but WITHOUT ANY WARRANTY; without even the implied warranty of
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
!  Lesser General Public License for more details.
!
!  You should have received a copy of the GNU Lesser General Public
!  License along with this library; if not, write to the Free Software
!  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
!  
!  Contact information: HPC Institute, Department of Computer Science and Technology,
!  Tsinghua University, Beijing 100084, CHINA, or:
!
!  http://hpc.cs.tsinghua.edu.cn

        module omp_lib_kinds
        integer, parameter :: omp_integer_kind   = 4
        integer, parameter :: omp_logical_kind   = 4
        integer, parameter :: omp_lock_kind      = 8
        integer, parameter :: omp_nest_lock_kind = 8
        end module omp_lib_kinds

        module omp_lib
          use omp_lib_kinds
          integer, parameter :: openmp_version = 199910

          interface
            subroutine omp_destroy_lock (var)
              use omp_lib_kinds
              integer (kind=omp_lock_kind), intent(inout) :: var
            end subroutine omp_destroy_lock
          end interface

          interface
            subroutine omp_destroy_nest_lock (var)
              use omp_lib_kinds
              integer (kind=omp_nest_lock_kind), intent(inout) :: var
            end subroutine omp_destroy_nest_lock
          end interface

          interface
            function omp_get_dynamic ()
              use omp_lib_kinds
              logical (kind=omp_logical_kind) :: omp_get_dynamic
            end function omp_get_dynamic
          end interface

          interface
            function omp_get_max_threads ()
              use omp_lib_kinds
              integer (kind=omp_integer_kind) :: omp_get_max_threads
            end function omp_get_max_threads
          end interface

          interface
            function omp_get_nested ()
              use omp_lib_kinds
              logical (kind=omp_logical_kind) :: omp_get_nested
            end function omp_get_nested
          end interface

          interface
            function omp_get_num_procs ()
              use omp_lib_kinds
              integer (kind=omp_integer_kind) :: omp_get_num_procs
            end function omp_get_num_procs
          end interface

          interface
            function omp_get_num_threads ()
              use omp_lib_kinds
              integer (kind=omp_integer_kind) :: omp_get_num_threads
            end function omp_get_num_threads
          end interface

          interface
            function omp_get_thread_num ()
              use omp_lib_kinds
              integer (kind=omp_integer_kind) :: omp_get_thread_num
            end function omp_get_thread_num
          end interface

          interface
            function omp_get_wtick ()
              use omp_lib_kinds
              double precision :: omp_get_wtick
            end function omp_get_wtick
          end interface

          interface
            function omp_get_wtime ()
              use omp_lib_kinds
              double precision :: omp_get_wtime
            end function omp_get_wtime
          end interface

          interface
            subroutine omp_init_lock (var)
              use omp_lib_kinds
              integer (kind=omp_lock_kind), intent(out) :: var
            end subroutine omp_init_lock
          end interface

          interface
            subroutine omp_init_nest_lock (var)
              use omp_lib_kinds
              integer (kind=omp_nest_lock_kind), intent(out) :: var
            end subroutine omp_init_nest_lock
          end interface

          interface
            function omp_in_parallel ()
              use omp_lib_kinds
              logical (kind=omp_logical_kind) :: omp_in_parallel
            end function omp_in_parallel
          end interface

          interface
            subroutine omp_set_dynamic (enable)
              use omp_lib_kinds
              logical (kind=omp_logical_kind), intent(in) :: enable
            end subroutine omp_set_dynamic
          end interface

          interface
            subroutine omp_set_lock (var)
              use omp_lib_kinds
              integer (kind=omp_lock_kind), intent(inout) :: var
            end subroutine omp_set_lock
          end interface

          interface
            subroutine omp_set_nest_lock (var)
              use omp_lib_kinds
              integer (kind=omp_nest_lock_kind), intent(inout) :: var
            end subroutine omp_set_nest_lock
          end interface

          interface
            subroutine om",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FbljgO
code,"!! 
!! @HEADER
!!
!!!!**********************************************************************
!!
!!  Zoltan Toolkit for Load-balancing, Partitioning, Ordering and Coloring
!!                  Copyright 2012 Sandia Corporation
!!
!! Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
!! the U.S. Government retains certain rights in this software.
!!
!! Redistribution and use in source and binary forms, with or without
!! modification, are permitted provided that the following conditions are
!! met:
!!
!! 1. Redistributions of source code must retain the above copyright
!! notice, this list of conditions and the following disclaimer.
!!
!! 2. Redistributions in binary form must reproduce the above copyright
!! notice, this list of conditions and the following disclaimer in the
!! documentation and/or other materials provided with the distribution.
!!
!! 3. Neither the name of the Corporation nor the names of the
!! contributors may be used to endorse or promote products derived from
!! this software without specific prior written permission.
!!
!! THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION ""AS IS"" AND ANY
!! EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
!! IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
!! PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
!! CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
!! EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
!! PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
!! PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
!! LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
!! NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
!! SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
!!
!! Questions? Contact Karen Devine	kddevin@sandia.gov
!!                    Erik Boman	egboman@sandia.gov
!!
!!!!**********************************************************************
!!
!! @HEADER
 !!

! Command line argument functions for NAGWare f95 4.0

      integer function mpir_iargc()
      use f90_unix_env
      mpir_iargc = iargc()
      return
      end

      subroutine mpir_getarg( i, s )
      use f90_unix_env
      integer       i
      character*(*) s
      integer lenarg, ierr
      call getarg(i,s,lenarg,ierr)
      return
      end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SKhE_p
code,"!
! Copyright (C) 2001-2009 Quantum ESPRESSO group
! This file is distributed under the terms of the
! GNU General Public License. See the file `License'
! in the root directory of the present distribution,
! or http://www.gnu.org/copyleft/gpl.txt .
!
!
!---------------------------------------------------------------------
subroutine set_irr_sym_tpw ( t, tmq, npertx )
!---------------------------------------------------------------------
!
!     This subroutine computes: 
!     1) the matrices which represent the small group of q on the
!        pattern basis.
!
  USE kinds, ONLY : DP
  USE constants, ONLY: tpi
  USE ions_base, ONLY : nat
  USE cell_base, ONLY : at, bg
  USE symm_base, ONLY : s, irt, t_rev
  USE modes,     ONLY : u, nirr, npert
  USE control_flags, ONLY : modenum
  USE mp,        ONLY : mp_bcast
  USE mp_images, ONLY : intra_image_comm
  USE io_global, ONLY : ionode_id, stdout

  USE qpoint,       ONLY : xq
  USE lr_symm_base, ONLY : nsymq, irotmq, rtau, minus_q

  implicit none
!
!   first the dummy variables
!
  integer, intent(in) ::  npertx
! input: maximum dimension of the irreducible representations 
!
  complex(DP), intent(out) :: t(npertx, npertx, 48, 3*nat), &
                              tmq (npertx, npertx, 3*nat)
! output: the symmetry matrices
! output: the matrice sending q -> -q+G
!
!   here the local variables
!
  integer :: na, imode, jmode, ipert, jpert, kpert, nsymtot, imode0, &
       irr, ipol, jpol, isymq, irot, sna
  ! counters and auxiliary variables

  real(DP) :: arg
! the argument of the phase

  complex(DP) :: wrk_u (3, nat), wrk_ru (3, nat), fase, wrk
! pattern
! rotated pattern
! the phase factor

!
!   We compute the matrices which represent the symmetry transformation
!   in the basis of the displacements
!
  t(:,:,:,:) = (0.d0, 0.d0)
  tmq(:,:,:) = (0.d0, 0.d0)
  if (minus_q) then
     nsymtot = nsymq + 1
  else
     nsymtot = nsymq
  endif
  do isymq = 1, nsymtot
     if (isymq.le.nsymq) then
        irot = isymq
     else
        irot = irotmq
     endif
     imode0 = 0
     do irr = 1, nirr
        do ipert = 1, npert (irr)
           if (modenum /= 0 .AND. modenum /= irr) CYCLE
           imode = imode0 + ipert
           do na = 1, nat
              do ipol = 1, 3
                 jmode = 3 * (na - 1) + ipol
                 wrk_u (ipol, na) = u (jmode, imode)
              enddo
           enddo
!
!     transform this pattern to crystal basis
!
           do na = 1, nat
              call trnvecc (wrk_u (1, na), at, bg, - 1)
           enddo
!
!     the patterns are rotated with this symmetry
!
           wrk_ru(:,:) = (0.d0, 0.d0)
           do na = 1, nat
              sna = irt (irot, na)
              arg = 0.d0
              do ipol = 1, 3
                 arg = arg + xq (ipol) * rtau (ipol, irot, na)
              enddo
              arg = arg * tpi
              if ((isymq.eq.nsymtot.and.minus_q).OR.(t_rev(isymq)==1)) then
                 fase = CMPLX (cos (arg), sin (arg), KIND=dp )
              else
                 fase = CMPLX (cos (arg),-sin (arg), KIND=dp )
              endif
              do ipol = 1, 3
                 do jpol = 1, 3
                    wrk_ru (ipol, sna) = wrk_ru (ipol, sna) + s (jpol, ipol, irot) &
                         * wrk_u (jpol, na) * fase
                 enddo
              enddo
           enddo
!
!    Transform back the rotated pattern
!
           do na = 1, nat
              call trnvecc (wrk_ru (1, na), at, bg, 1)
           enddo
            
!
!     Computes the symmetry matrices on the basis of the pattern
!
           do jpert = 1, npert (irr)
              imode = imode0 + jpert
              do na = 1, nat
                 do ipol = 1, 3
                    jmode = ipol + (na - 1) * 3
                    if (isymq.eq.nsymtot.and.minus_q) then
                       tmq (jpert, ipert, irr) = tmq (jpert, ipert, irr) + &
                        CONJG(u (jmode, imode) * wrk_ru (ipol, na) )
                    else
                       IF (t_rev(irot)==1) THEN
                          t (jpert,ipert,irot,irr)=t(jpert,ipert,irot,irr) &
                            + CONJG(u (jmode, imode) * wrk_ru (ipol, na))
                       ELSE
                         t (jpert,ipert,irot,irr)=t(jpert,ipert,irot,irr) &
                            + CONJG(u (jmode, imode) ) * wrk_ru (ipol, na)
                       ENDIF
                    endif
                 enddo
              enddo
           enddo
        enddo
        imode0 = imode0 + npert (irr)

!
! If the representations are irreducible, the rotations should be unitary matrices
! if this is not the case, the way the representations have been chosen has failed
! for some reasons (check set_irr.f90)
!
        
        if(isymq<=nsymq) then 
        do ipert = 1, npert (irr)
!           WRITE(6,*) isymq, ipert, irr, npert(irr)
           IF (modenum /= 0 .AND. modenum /= irr) CYCLE
           do jpert = 1, npert (irr)
              wrk = (0.d0,0.d0)
              do kpert = 1, npert (irr)
                 wrk = wrk + t (ipert,kpert,irot,irr) * conjg( t(jpert,kper",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pVeQyY
code,"module tmp_mod
  type shape
     integer :: color
     logical :: filled
     integer :: x
     integer :: y
   contains
     procedure::init => init_shape
  end type shape

  type, EXTENDS ( shape ) :: rectangle
     integer :: length
     integer :: width
  end type rectangle

  type, EXTENDS ( rectangle ) :: square
  end type square


contains

  subroutine init_shape(sh)
    class(shape) sh
    sh%color = 1
    sh%filled = .false.
    sh%x = 0
    sh%y = 0
    select type(sh)
    type is (shape)
       sh%x = -1
       sh%y = -1
    class is(rectangle)
       sh%length = 1
       sh%width = 1
    class default
       stop ""UNKNOWN type""
    end select
  end subroutine init_shape

end module tmp_mod
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4LAxLh
code,"! cp_autopilot.f90
!********************************************************************************
! cp_autopilot.f90                             Copyright (c) 2005 Targacept, Inc.
!********************************************************************************
!   The Autopilot Feature suite is a user level enhancement that enables the 
! following features:  
!      automatic restart of a job; 
!      preconfiguration of job parameters; 
!      on-the-fly changes to job parameters; 
!      and pausing of a running job.  
!
! For more information, see AUTOPILOT in document directory.
!
! This program is free software; you can redistribute it and/or modify it under 
! the terms of the GNU General Public License as published by the Free Software 
! Foundation; either version 2 of the License, or (at your option) any later version.
! This program is distributed in the hope that it will be useful, but WITHOUT ANY 
! WARRANTY; without even the implied warranty of MERCHANTABILITY FOR A PARTICULAR 
! PURPOSE.  See the GNU General Public License at www.gnu.or/copyleft/gpl.txt for 
! more details.
! 
! THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  
! EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES 
! PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
! INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND 
! FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND THE 
! PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, 
! YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
!
! IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING, 
! WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE 
! THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY 
! GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR 
! INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA 
! BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A 
! FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER 
! OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
!
! You should have received a copy of the GNU General Public License along with 
! this program; if not, write to the 
! Free Software Foundation, Inc., 
! 51 Franklin Street, 
! Fifth Floor, 
! Boston, MA  02110-1301, USA.
! 
! Targacept's address is 
! 200 East First Street, Suite 300
! Winston-Salem, North Carolina USA 27101-4165 
! Attn: Molecular Design. 
! Email: atp@targacept.com
!
! This work was supported by the Advanced Technology Program of the 
! National Institute of Standards and Technology (NIST), Award No. 70NANB3H3065 
!
!********************************************************************************
 

MODULE cp_autopilot
  !---------------------------------------------------------------------------
  !
  ! This module handles the Autopilot Feature Suite
  ! Written by Lee Atkinson, with help from the ATP team at Targacept, Inc 
  ! Created June 2005
  ! Modified by Yonas Abrahm Sept 2006
  !
  !   The address for Targacept, Inc. is:
  !     200 East First Street, Suite
  !     300, Winston-Salem, North Carolina 27101; 
  !     Attn: Molecular Design.
  !
  ! See README.AUTOPILOT in the Doc directory for more information.
  !---------------------------------------------------------------------------

  USE kinds
  USE autopilot, ONLY : current_nfi, pilot_p, pilot_unit, pause_p,auto_error, &
        &  parse_mailbox, rule_isave, rule_iprint, rule_dt, rule_emass,       &
        &  rule_electron_dynamics, rule_electron_damping, rule_ion_dynamics, &
        &  rule_ion_damping,  rule_ion_temperature, rule_tempw
  USE autopilot, ONLY : event_index, event_step, event_isave, event_iprint, &
        &  event_dt, event_emass, event_electron_dynamics, event_electron_damping, &
        &  event_ion_dynamics, event_ion_damping, event_ion_temperature, event_tempw 

  IMPLICIT NONE
  SAVE


  PRIVATE
  PUBLIC ::  pilot, employ_rules

CONTAINS


  !-----------------------------------------------------------------------
  ! EMPLOY_RULES
  !-----------------------------------------------------------------------
  SUBROUTINE employ_rules()
    USE input_parameters, ONLY :   dt, & 
         &  electron_dynamics, electron_damping, &
         & ion_dynamics, ion_damping, &
         & ion_temperature, fnosep, nhpcl, nhptyp, nhgrp, fnhscl, ndega, nat
    use ions_nose, ONLY: tempw
    USE control_flags, only: tsde, tsdp, tfor, tcp, tnosep, isave,iprint,&
                             tconvthrs, tolp, &
                             ekin_conv_thr, forc_conv_thr, etot_conv_thr
    USE control_flags, only: tsteepdesc_    => tsteepdesc, &
                             tdamp_         => tdamp,      &
                             tdampions_ => tdampions
    use wave_base, only: frice
    use ions_base, only: fricp
    USE ions_nose, ONLY: ions_nose_init
    USE",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E5eMlm
code,"*> \brief \b  CHETRS_ROOK computes the solution to a system of linear equations A * X = B for HE matrices using factorization obtained with one of the bounded diagonal pivoting methods (max 2 interchanges)
*
*  =========== DOCUMENTATION ===========
*
* Online html documentation available at
*            http://www.netlib.org/lapack/explore-html/
*
*> \htmlonly
*> Download CHETRS_ROOK + dependencies
*> <a href=""http://www.netlib.org/cgi-bin/netlibfiles.tgz?format=tgz&filename=/lapack/lapack_routine/chetrs_rook.f"">
*> [TGZ]</a>
*> <a href=""http://www.netlib.org/cgi-bin/netlibfiles.zip?format=zip&filename=/lapack/lapack_routine/chetrs_rook.f"">
*> [ZIP]</a>
*> <a href=""http://www.netlib.org/cgi-bin/netlibfiles.txt?format=txt&filename=/lapack/lapack_routine/chetrs_rook.f"">
*> [TXT]</a>
*> \endhtmlonly
*
*  Definition:
*  ===========
*
*       SUBROUTINE CHETRS_ROOK( UPLO, N, NRHS, A, LDA, IPIV, B, LDB, INFO )
*
*       .. Scalar Arguments ..
*       CHARACTER          UPLO
*       INTEGER            INFO, LDA, LDB, N, NRHS
*       ..
*       .. Array Arguments ..
*       INTEGER            IPIV( * )
*       COMPLEX            A( LDA, * ), B( LDB, * )
*       ..
*
*
*> \par Purpose:
*  =============
*>
*> \verbatim
*>
*> CHETRS_ROOK solves a system of linear equations A*X = B with a complex
*> Hermitian matrix A using the factorization A = U*D*U**H or
*> A = L*D*L**H computed by CHETRF_ROOK.
*> \endverbatim
*
*  Arguments:
*  ==========
*
*> \param[in] UPLO
*> \verbatim
*>          UPLO is CHARACTER*1
*>          Specifies whether the details of the factorization are stored
*>          as an upper or lower triangular matrix.
*>          = 'U':  Upper triangular, form is A = U*D*U**H;
*>          = 'L':  Lower triangular, form is A = L*D*L**H.
*> \endverbatim
*>
*> \param[in] N
*> \verbatim
*>          N is INTEGER
*>          The order of the matrix A.  N >= 0.
*> \endverbatim
*>
*> \param[in] NRHS
*> \verbatim
*>          NRHS is INTEGER
*>          The number of right hand sides, i.e., the number of columns
*>          of the matrix B.  NRHS >= 0.
*> \endverbatim
*>
*> \param[in] A
*> \verbatim
*>          A is COMPLEX array, dimension (LDA,N)
*>          The block diagonal matrix D and the multipliers used to
*>          obtain the factor U or L as computed by CHETRF_ROOK.
*> \endverbatim
*>
*> \param[in] LDA
*> \verbatim
*>          LDA is INTEGER
*>          The leading dimension of the array A.  LDA >= max(1,N).
*> \endverbatim
*>
*> \param[in] IPIV
*> \verbatim
*>          IPIV is INTEGER array, dimension (N)
*>          Details of the interchanges and the block structure of D
*>          as determined by CHETRF_ROOK.
*> \endverbatim
*>
*> \param[in,out] B
*> \verbatim
*>          B is COMPLEX array, dimension (LDB,NRHS)
*>          On entry, the right hand side matrix B.
*>          On exit, the solution matrix X.
*> \endverbatim
*>
*> \param[in] LDB
*> \verbatim
*>          LDB is INTEGER
*>          The leading dimension of the array B.  LDB >= max(1,N).
*> \endverbatim
*>
*> \param[out] INFO
*> \verbatim
*>          INFO is INTEGER
*>          = 0:  successful exit
*>          < 0:  if INFO = -i, the i-th argument had an illegal value
*> \endverbatim
*
*  Authors:
*  ========
*
*> \author Univ. of Tennessee
*> \author Univ. of California Berkeley
*> \author Univ. of Colorado Denver
*> \author NAG Ltd.
*
*> \date November 2013
*
*> \ingroup complexHEcomputational
*
*> \par Contributors:
*  ==================
*>
*> \verbatim
*>
*>  November 2013,  Igor Kozachenko,
*>                  Computer Science Division,
*>                  University of California, Berkeley
*>
*>  September 2007, Sven Hammarling, Nicholas J. Higham, Craig Lucas,
*>                  School of Mathematics,
*>                  University of Manchester
*>
*> \endverbatim
*
*  =====================================================================
      SUBROUTINE CHETRS_ROOK( UPLO, N, NRHS, A, LDA, IPIV, B, LDB,
     $                        INFO )
*
*  -- LAPACK computational routine (version 3.5.0) --
*  -- LAPACK is a software package provided by Univ. of Tennessee,    --
*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
*     November 2013
*
*     .. Scalar Arguments ..
      CHARACTER          UPLO
      INTEGER            INFO, LDA, LDB, N, NRHS
*     ..
*     .. Array Arguments ..
      INTEGER            IPIV( * )
      COMPLEX            A( LDA, * ), B( LDB, * )
*     ..
*
*  =====================================================================
*
*     .. Parameters ..
      COMPLEX            ONE
      PARAMETER          ( ONE = ( 1.0E+0, 0.0E+0 ) )
*     ..
*     .. Local Scalars ..
      LOGICAL            UPPER
      INTEGER            J, K, KP
      REAL               S
      COMPLEX            AK, AKM1, AKM1K, BK, BKM1, DENOM
*     ..
*     .. External Functions ..
      LOGICAL            LSAME
      EXTERNAL           LSAME
*     ..
*     .. External Subroutines ..
      EXTERNAL           CGEMV, CGERU, CLACGV, CSSCAL, CSWAP, XERBLA
*     ..
*     .. Intrinsic Functions ..
      INTRINSIC          CONJG, MAX, R",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nZQkHb
code,"! { dg-do compile }
! PR43832 Missing UNIT in OPEN
  open () ! { dg-error ""must have UNIT"" }
  open (file=""test"") ! { dg-error ""must have UNIT"" }
  end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tmNfPy
code,"











module module_bl_ysu
contains




   subroutine ysu(u3d,v3d,th3d,t3d,qv3d,qc3d,qi3d,p3d,p3di,pi3d,               &
                  rublten,rvblten,rthblten,                                    &
                  rqvblten,rqcblten,rqiblten,flag_qi,                          &
                  cp,g,rovcp,rd,rovg,ep1,ep2,karman,xlv,rv,                    &
                  dz8w,psfc,                                                   &
                  znu,znw,mut,p_top,                                           &
                  znt,ust,hpbl,psim,psih,                                      &
                  xland,hfx,qfx,wspd,br,                                       &
                  dt,kpbl2d,                                                   &
                  exch_h,                                                      &
                  wstar,delta,                                                 &
                  u10,v10,                                                     &
                  uoce,voce,                                                   &
                  rthraten,ysu_topdown_pblmix,                                 &
                  ctopo,ctopo2,                                                &
                  ids,ide, jds,jde, kds,kde,                                   &
                  ims,ime, jms,jme, kms,kme,                                   &
                  its,ite, jts,jte, kts,kte,                                   &
                
                  regime                                           )

   implicit none









































































   integer,parameter ::  ndiff = 3
   real,parameter    ::  rcl = 1.0

   integer,  intent(in   )   ::      ids,ide, jds,jde, kds,kde,                &
                                     ims,ime, jms,jme, kms,kme,                &
                                     its,ite, jts,jte, kts,kte

   integer,  intent(in)      ::      ysu_topdown_pblmix

   real,     intent(in   )   ::      dt,cp,g,rovcp,rovg,rd,xlv,rv

   real,     intent(in )     ::      ep1,ep2,karman

   real,     dimension( ims:ime, kms:kme, jms:jme )                          , &
             intent(in   )   ::                                          qv3d, &
                                                                         qc3d, &
                                                                         qi3d, &
                                                                          p3d, &
                                                                         pi3d, &
                                                                         th3d, &
                                                                          t3d, &
                                                                         dz8w, &
                                                                     rthraten
   real,     dimension( ims:ime, kms:kme, jms:jme )                          , &
             intent(in   )   ::                                          p3di

   real,     dimension( ims:ime, kms:kme, jms:jme )                          , &
             intent(inout)   ::                                       rublten, &
                                                                      rvblten, &
                                                                     rthblten, &
                                                                     rqvblten, &
                                                                     rqcblten

   real,     dimension( ims:ime, kms:kme, jms:jme )                          , &
             intent(inout)   ::                                        exch_h
   real,     dimension( ims:ime, jms:jme )                                   , &
             intent(inout)   ::                                         wstar
   real,     dimension( ims:ime, jms:jme )                                   , &
             intent(inout)   ::                                         delta
   real,     dimension( ims:ime, jms:jme )                                   , &
             intent(inout)   ::                                           u10, &
                                                                          v10
   real,     dimension( ims:ime, jms:jme )                                   , &
             intent(in   )   ::                                          uoce, &
                                                                         voce

   real,     dimension( ims:ime, jms:jme )                                   , &
             intent(in   )   ::                                         xland, &
                                                                          hfx, &
                                                                          qfx, &
                                                                           br, &
                                                                         psfc
   real,     dimension( ims:ime, jms:jme )                               ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vEGlph
code,"      SUBROUTINE DLA_WWADDW( N, X, Y, W )
*
*     -- LAPACK routine (version 3.2.2)                                 --
*     -- Contributed by James Demmel, Deaglan Halligan, Yozo Hida and --
*     -- Jason Riedy of Univ. of California Berkeley.                 --
*     -- June 2010                                                    --
*
*     -- LAPACK is a software package provided by Univ. of Tennessee, --
*     -- Univ. of California Berkeley and NAG Ltd.                    --
*
      IMPLICIT NONE
*     ..
*     .. Scalar Arguments ..
      INTEGER            N
*     ..
*     .. Array Arguments ..
      DOUBLE PRECISION   X( * ), Y( * ), W( * )
*     ..
*
*     Purpose
*     =======
*
*     DLA_WWADDW adds a vector W into a doubled-single vector (X, Y).
*
*     This works for all extant IBM's hex and binary floating point
*     arithmetics, but not for decimal.
*
*     Arguments
*     =========
*
*     N      (input) INTEGER
*            The length of vectors X, Y, and W.
*
*     X      (input/output) DOUBLE PRECISION array, dimension (N)
*            The first part of the doubled-single accumulation vector.
*
*     Y      (input/output) DOUBLE PRECISION array, dimension (N)
*            The second part of the doubled-single accumulation vector.
*
*     W      (input) DOUBLE PRECISION array, dimension (N)
*            The vector to be added.
*
*  =====================================================================
*
*     .. Local Scalars ..
      DOUBLE PRECISION   S
      INTEGER            I
*     ..
*     .. Executable Statements ..
*
      DO 10 I = 1, N
        S = X(I) + W(I)
        S = (S + S) - S
        Y(I) = ((X(I) - S) + W(I)) + Y(I)
        X(I) = S
 10   CONTINUE
      RETURN
      END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",c1GIqH
code,"c-----------------------------------------------------------------------
c Demonstration program for the DLSODA package.
c This is the version of 14 June 2001.
c
c This version is in double precision.
c
c The package is used to solve two simple problems,
c one with a full Jacobian, the other with a banded Jacobian,
c with the 2 appropriate values of jt in each case.
c If the errors are too large, or other difficulty occurs,
c a warning message is printed.  All output is on unit lout = 6.
c-----------------------------------------------------------------------
      external f1, jac1, f2, jac2
      integer i, iopar, iopt, iout, istate, itask, itol, iwork,
     1   jt, leniw, lenrw, liw, lout, lrw, mband, mused,
     2   ml, mu, neq, nerr, nfe, nfea, nje, nout, nqu, nst
      double precision atol, dtout, dtout0, dtout1, er, erm, ero, hu,
     1     rtol, rwork, t, tout, tout1, tsw, y
      dimension y(25), rwork(522), iwork(45), neq(1), atol(1), rtol(1)
      data lout/6/, tout1/16.921743d0/, dtout/17.341162d0/
c
      nerr = 0
      itol = 1
      rtol(1) = 0.0d0
      atol(1) = 1.0d-8
      lrw = 522
      liw = 45
      iopt = 0
c
c First problem
c
      neq(1) = 2
      nout = 4
      write (lout,110) neq(1),itol,rtol(1),atol(1)
 110  format(/'Demonstration program for DLSODA package'////
     1  ' Problem 1:   Van der Pol oscillator:'/
     2  '              xdotdot - 20*(1 - x**2)*xdot + x = 0, ',
     3  '   x(0) = 2, xdot(0) = 0'/' neq =',i2/
     4  ' itol =',i3,'   rtol =',d10.1,'   atol =',d10.1//)
c
      do 190 jt = 1,2
      write (lout,120) jt
 120  format(//' Solution with jt =',i3//
     1       '  t               x               xdot       meth',
     2       '   nq     h           tsw'//)
      t = 0.0d0
      y(1) = 2.0d0
      y(2) = 0.0d0
      itask = 1
      istate = 1
      dtout0 = 0.5d0*tout1
      dtout1 = 0.5d0*dtout
      tout = dtout0
      ero = 0.0d0
      do 170 iout = 1,nout
        call dlsoda(f1,neq,y,t,tout,itol,rtol,atol,itask,istate,
     1              iopt,rwork,lrw,iwork,liw,jac1,jt)
        hu = rwork(11)
        tsw = rwork(15)
        nqu = iwork(14)
        mused = iwork(19)
        write (lout,140) t,y(1),y(2),mused,nqu,hu,tsw
 140    format(d12.5,d16.5,d14.3,2i6,2d13.3)
        if (istate .lt. 0) go to 175
        iopar = iout - 2*(iout/2)
        if (iopar .ne. 0) go to 160
        er = abs(y(1))
        ero = max(ero,er)
        if (er .gt. 1.0d-2) then
          write (lout,150)
 150      format(//' Warning: value at root exceeds 1.0d-2'//)
          nerr = nerr + 1
        endif
 160    if (iout .eq. 1) tout = tout + dtout0
        if (iout .gt. 1) tout = tout + dtout1
 170    continue
 175  continue
      if (istate .lt. 0) nerr = nerr + 1
      nst = iwork(11)
      nfe = iwork(12)
      nje = iwork(13)
      lenrw = iwork(17)
      leniw = iwork(18)
      nfea = nfe
      if (jt .eq. 2) nfea = nfe - neq(1)*nje
      write (lout,180) lenrw,leniw,nst,nfe,nfea,nje,ero
 180  format(//' Final statistics for this run:'/
     1  ' rwork size =',i4,'   iwork size =',i4/
     2  ' number of steps =',i5/
     3  ' number of f-s   =',i5/
     4  ' (excluding J-s) =',i5/
     5  ' number of J-s   =',i5/
     6  ' max. error at root =',d10.2)
 190  continue
c
c Second problem
c
      neq(1) = 25
      ml = 5
      mu = 0
      iwork(1) = ml
      iwork(2) = mu
      mband = ml + mu + 1
      atol(1) = 1.0d-6
      nout = 5
      write (lout,210) neq(1),ml,mu,itol,rtol(1),atol(1)
 210  format(///80('-')///
     1  ' Problem 2: ydot = A * y , where',
     2  '  A is a banded lower triangular matrix'/
     2  '            derived from 2-D advection PDE'/
     3  ' neq =',i3,'   ml =',i2,'   mu =',i2/
     4  ' itol =',i3,'   rtol =',d10.1,'   atol =',d10.1//)
      do 290 jt = 4,5
      write (lout,220) jt
 220  format(//' Solution with jt =',i3//
     1       '     t             max.err.     meth   ',
     2       'nq      h            tsw'//)
      t = 0.0d0
      do 230 i = 2,neq(1)
 230    y(i) = 0.0d0
      y(1) = 1.0d0
      itask = 1
      istate = 1
      tout = 0.01d0
      ero = 0.0d0
      do 270 iout = 1,nout
        call dlsoda(f2,neq,y,t,tout,itol,rtol,atol,itask,istate,
     1              iopt,rwork,lrw,iwork,liw,jac2,jt)
        call edit2(y,t,erm)
        hu = rwork(11)
        tsw = rwork(15)
        nqu = iwork(14)
        mused = iwork(19)
        write (lout,240) t,erm,mused,nqu,hu,tsw
 240    format(d15.5,d14.3,2i6,2d14.3)
        if (istate .lt. 0) go to 275
        er = erm/atol(1)
        ero = max(ero,er)
        if (er .gt. 1000.0d0) then
          write (lout,150)
          nerr = nerr + 1
        endif
 270    tout = tout*10.0d0
 275  continue
      if (istate .lt. 0) nerr = nerr + 1
      nst = iwork(11)
      nfe = iwork(12)
      nje = iwork(13)
      lenrw = iwork(17)
      leniw = iwork(18)
      nfea = nfe
      if (jt .eq. 5) nfea = nfe - mband*nje
      write (lout,280) lenrw,leniw,nst,nfe,nfea,nje,ero
 280  format(//' Final statistics for this run:'/
     1  ' rwork size =',i4,'   iwork size =',i4/
     2  ' number of steps =',i5/
     3  ' number",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AToZcP
code,"!---------------------------------------------------!
! Copyright (c) 2017 Shunsuke A. Sato               !
! Released under the MIT license                    !
! https://opensource.org/licenses/mit-license.php   !
!---------------------------------------------------!
subroutine FBTS
  use global_variables
  implicit none
  integer :: itraj,it
  complex(8) :: zweight0

  if(calc_mode == 'JFBTS')then
     call random_seeds_for_parallel(Myrank,Nprocs)
     do it = 1,10000
        call FBTS_initial_distribution
     end do
  end if

  Szt_t=0d0; Szt_l = 0d0
  call setting_bath_parameters

  do itraj = 1,Ntraj

    call thermal_bath_distribution
    call FBTS_initial_distribution

    if(mod(itraj,Nprocs) /= myrank)cycle
    if(myrank == 0)write(*,*)""itraj="",itraj,""/"",Ntraj
    zweight0 = (x_m(1) + zI * p_m(1))*(x_n(1) - zI * p_n(1))

    select case(calc_mode)
    case('FBTS','FBTS_mod','FBTS_approx')
      call FBTS_dynamics
      Szt_l = Szt_l + zSzt_t*zweight0
    case('JFBTS')
      call JFBTS_dynamics(zweight0)
      Szt_l = Szt_l + zSzt_t
    case default
      call err_finalize('Invalid calc_mode in FBTS')
    end select



  end do
  call MPI_ALLREDUCE(Szt_l,Szt,Nt+1,MPI_REAL8,MPI_SUM,MPI_COMM_WORLD,ierr)
  Szt = Szt/Ntraj

  if(myrank == 0)then
    open(nfile_FBTS_Sz,file=file_FBTS_Sz)
    do it = 0,Nt
      write(nfile_FBTS_Sz,""(999e26.16e3)"")dt*it,Szt(it)
    end do
    close(nfile_FBTS_Sz)
  end if


end subroutine FBTS

subroutine random_seeds_for_parallel(myrank,Nprocs)
  implicit none
  integer,intent(in) :: myrank,nprocs
  integer i, seedsize
  integer,allocatable:: seed(:)

  call random_seed(size=seedsize) 
  allocate(seed(seedsize))  
  call random_seed(get=seed) 

  do i = 1,seedsize
     seed(i) = seed(i) -1**myrank* (myrank*(seed(i)/Nprocs)+myrank)
  end do

end subroutine random_seeds_for_parallel
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yyv5Mz
code,"!*************************************************************************
!****m* /baryonWidth
! NAME
! module baryonWidth
! PURPOSE
! When this module is initialized then all information
! for the VACUUM width is once calculated for all resonances
! and then stored into the field gammaField, which is of
! type gammaFieldType. This is done by initWidth.
! Afterwards this field is used to return full and
! partial width of the resonances in the vacuum by the
! subroutine ""partialWidthBaryon, fullWidthBaryon""
! USES
! module baryonWidthVacuum
!*************************************************************************
module baryonWidth

  use IdTable, only: nbar
  use particleProperties, only: nDecays

  implicit none
  Private

  ! Parameters to store the partial widths depending on mass
  ! in the range (minimalmass, minimalMass+maxIndex*deltaMass)
  integer, parameter :: maxIndexMass=2000
  real, parameter :: deltaMass=0.004

  ! The type used for storage:
  type tGammaField
     real :: gammatotal           !total decay rate
     real, dimension(nDecays) :: ratio      ! ratio of different decay channels
     real, dimension(nDecays) :: rho_AB_atPole ! Formula 2.76 in Effes PhD thesis evaluated at the polemass of the resonance
  end type tGammaField

  ! Field which holds all the information for concerning  the vacuum width, initialized in ""initWidth""
  ! First Index: ID of Resonance
  ! Second Index: Mass Index in the range (0,maxIndexMass)
  type(tGammaField), dimension(:,:), allocatable, save  :: gammaField

  ! Flag to check wether this module is initialized by initWidth
  logical, save :: initFlag=.true.

  ! Switching debugging infos off and on
  logical, parameter :: debug=.false.

  ! Array to hold the integrals over the spectral functions
  real, save :: arrSpectralIntegral(1:nbar) = 0.0


  ! public subroutines :
  PUBLIC :: partialWidthBaryon
  PUBLIC :: fullWidthBaryon
  PUBLIC :: decayWidthBaryon
  PUBLIC :: baryonWidth_gammaN
  PUBLIC :: GetMaxQ
  PUBLIC :: cleanUp


  !*************************************************************************
  !****g* baryonWidth/readTable
  ! PURPOSE
  ! There is a tabulation of the widths saved in buuinput which is used to
  ! initialize ('baryonWidthVacuum.dat.bz2').
  ! If you don't want to use this pre-tabulated input,
  ! then you can set ""readTable=.false"". This is useful for runs on
  ! a cluster where you want to minimize input/output. Also it is necessary
  ! if the decay channels have been modified (cf. DecayChannels.dat).
  ! SOURCE
  !
  logical, save :: readTable = .true.
  !*************************************************************************


  !*************************************************************************
  !****g* baryonWidth/writeTable
  ! PURPOSE
  ! This flag determines whether we write out a new tabulation of the widths
  ! ('baryonWidthVacuum.dat.bz2').
  ! It will only have an effects if readTable == .false. or reading of the
  ! tabulation file fails for some reason.
  ! SOURCE
  !
  logical, save :: writeTable = .false.
  !*************************************************************************


contains


  !*****************************************************************************
  !****s* baryonWidth/partialWidthBaryon
  ! NAME
  ! real function partialwidthBaryon (ID, mass, inWidth, mesonID, baryonID, mesonMass, baryonMass)
  ! PURPOSE
  ! This function calculates the mass-dependent partial width for a specific
  ! decay channel of a baryon resonance.
  ! INPUTS
  ! * integer :: ID                           -- id of resonance
  ! * real :: mass                            -- p_mu p^mu = mass of the resonance (offshell)
  ! * logical :: inWidth                      -- .true. => in width(only important for channels with unstable particles), .false. => out width
  ! * integer :: mesonID, baryonID            -- ID's of the decay products which one is interested in
  ! * real, optional :: mesonMass, baryonMass -- Possibility to define the masses of the incoming baryon and meson,
  !                                              needed in the case of the In-Width if one of them is off-shell.
  !                                              Otherwise not relevant.
  !*****************************************************************************
  function partialwidthBaryon (ID, mass, inWidth, mesonID, baryonID, mesonMass, baryonMass) result(width)
    use DecayChannels, only: Decay2BodyBaryon
    use IdTable, only: isMeson, isBaryon
    use particleProperties, only: Hadron, nDecays, getAngularMomentum_baryon
    use baryonWidthVacuum, only: interactionRadius, srts_srt_switch
    use distributions, only: BlattWeisskopf
    use CallStack, only: TRACEBACK
    use twoBodyTools, only: pCM

    integer, intent(in) :: ID
    real, intent(in) :: mass
    logical, intent(in) ::  inWidth
    integer, intent(in) :: mesonID, baryonID
    real, intent(in), optional :: mesonMass, baryonMass

    real    :: width, partialVacuumWidth, momentum, gamma_tot, mass_down, weight
    integer :: L, massIndex, i, dId, down, up
    logical :: lDummy

    if ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gZ7OTM
code,"SUBROUTINE UHYPER(I1B, I2B, JAC, U, DU, D2U, D3U, TEMP, NOEL, CMNAME, &
     INCMPFLAG, NSTATEV, STATEV, NFIELDV, FIELDV, FIELDVINC, &
     NPROPS, PROPS)
  ! ----------------------------------------------------------------------- !
  ! HYPERELASTIC COMPRESSIBLE NEO-HOOKEAN MATERIAL
  ! ----------------------------------------------------------------------- !
  ! CANNOT BE USED FOR PLANE STRESS
  ! PROPS(1)  - C10
  ! PROPS(2)  - D1
  ! ----------------------------------------------------------------------- !
  IMPLICIT NONE
  INTEGER, PARAMETER :: DP=SELECTED_REAL_KIND(14)
  REAL(KIND=DP), PARAMETER :: ZERO=0._DP, ONE=1._DP, TWO=2._DP, THREE=3._DP
  CHARACTER*8, INTENT(IN) :: CMNAME
  INTEGER, INTENT(IN) :: NPROPS, NOEL, NSTATEV, INCMPFLAG, NFIELDV
  REAL(KIND=DP), INTENT(IN) :: I1B, I2B, JAC, PROPS(NPROPS), TEMP
  REAL(KIND=DP), INTENT(INOUT) :: U(2), DU(3), D2U(6), D3U(6), STATEV(NSTATEV)
  REAL(KIND=DP), INTENT(INOUT) :: FIELDV(NFIELDV), FIELDVINC(NFIELDV)
  REAL(KIND=DP) :: C10, D1, U_VOL, U_DEV
  ! -------------------------------------------------------------- UHYPER --- !

  C10 = PROPS(1)
  D1 = PROPS(2)

  ! ENERGY: U
  U_VOL = ONE / D1 * (JAC - ONE) ** 2
  U_DEV = C10 * (I1B - THREE)
  U(1) = U_VOL + U_DEV
  U(2) = U_DEV

  ! FIRST DERIVATIVE OF ENERGY: DU
  DU(1) = C10                       ! DU/DI1B
  DU(2) = ZERO                      ! DU/DI2B
  DU(3) = TWO / D1 * (JAC - ONE)    ! DU/DJ

  ! SECOND DERIVATIVE OF ENERGY: D2U
  D2U(1) = ZERO      ! D(DU/DI1B)/DI1B
  D2U(2) = ZERO      ! D(DU/DI2B)/DI2B
  D2U(3) = TWO / D1  ! D(DU/DJ)/DJ
  D2U(4) = ZERO      ! D(DU/DI1B)/DI2B
  D2U(5) = ZERO      ! D(DU/DI1B)/DJ
  D2U(6) = ZERO      ! D(DU/DI2B)/DJ

  ! THIRD DERIVATIVE OF ENERGY: D3U
  D3U(1) = ZERO      ! D(D(DU/DI1B)/DI1B)/DJ
  D3U(2) = ZERO      ! D(D(DU/DI2B)/DI2B)/DJ
  D3U(3) = ZERO      ! D(D(DU/DI1B)/DI2B)/DJ
  D3U(4) = ZERO      ! D(D(DU/DI1B)/DJ)/DJ
  D3U(5) = ZERO      ! D(D(DU/DI1B)/DJ)/DJ
  D3U(6) = ZERO      ! D(D(DU/DJ)/DJ)/DJ
  RETURN
END SUBROUTINE UHYPER
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Sso9n4
code,"c-----------------------------------------------------------------------
c EXCESS NEAR-BANK LONGITUDINAL VELOCITY
c Zolezzi & Seminara model (2001), with free boundary conditions,
c i.e., cm1=cm2=cm3=cm4=0.
c-----------------------------------------------------------------------
      subroutine dUZS
      use module_global
      use module_zs
      use module_geometry
      implicit none
      
      integer j, jm, jev, jsend, jtoll
      real*8 TOLL, c_bc
      parameter(TOLL=1.D-04)
      real*8, allocatable :: um(:)
      complex*16 lambda, gj0, CONV
      complex*16 SEMIANA1, SEMIANA2
      complex*16, allocatable :: UPSTR(:), DWSTR(:), LOCAL(:)
      complex*16, allocatable :: DWSTR_BC(:), UPSTR_BC(:)
c UPSTR : upstream propagating influence (i.e. negative-exp convolution)
c DWSTR : downstream propagating influence (i.e. positive-exp convolution)
c DWSTR_BC : upstream-propagating donwstream boundary conditions (positive exp) 
c UPSTR_BC : downstream-propagating upstream boundary conditions (negative exp)
c LOCAL : local effect of the curvature     
       
c initialize the excess near-bank velocity array
      dU(:) = 0.d0
      
c initialize the five components
      allocate ( UPSTR(N),DWSTR(N),UPSTR_BC(N),DWSTR_BC(N),LOCAL(N) )
      allocate ( um(N) )

c-----------------------------------------------------------------------
c loop over Fourier components
      do jm = 1, Mdat
c-----------------------------------------------------------------------

c reset the five components
        UPSTR(:) = 0.d0
        DWSTR(:) = 0.d0
        UPSTR_BC(:) = 0.d0
        DWSTR_BC(:) = 0.d0
        LOCAL(:) = 0.d0

c-----------------------------------------------------------------------
c loop over the eigenvalues
        do jev = 1, 4
c-----------------------------------------------------------------------
        
c set current eigenvalues
          select case (jev)
            case(1)
              lambda = lamb1(jm)
              gj0 = g10(jm)
              c_bc = 0.d0
            case(2)
              lambda = lamb2(jm)
              gj0 = g20(jm)
              c_bc = 0.d0
            case(3)
              lambda = lamb3(jm)
              gj0 = g30(jm)
              c_bc = 0.d0
            case(4)
              lambda = lamb4(jm)
              gj0 = g40(jm)
              c_bc = 0.d0
          end select
        
c initialize pointer
          jtoll = 1
          
c UPSTREAM PROPAGATING INFLUENCE (+ DOWNSTREAM BOUNDARY CONDITIONS)
          if ( DBLE(lambda).gt.0.d0) then
        
            do j = 1, N
              if ( DEXP(-DBLE(lambda)*(s(j)-s(1))).gt.TOLL ) then
                jtoll = jtoll + 1
              end if
            end do              

            do j = 1, N, +1
              if (j.le.(N-1)) then
                jsend = MIN(j+jtoll-1,N)
                CONV = SEMIANA1(j,N,c,jsend,deltas,lambda)
                UPSTR(j) = UPSTR(j) - Am(jm) * gj0 * CONV
              end if
              DWSTR_BC(j) = DWSTR_BC(j) + c_bc * 
     6                      DEXP(-DBLE(lambda)*(s(N)-s(j)))  
            end do
            
c DOWNSTREAM PROPAGATING INFLUENCE (+ UPSTREAM BOUNDARY CONDITIONS)
          else if ( DBLE(lambda).lt.0.d0) then
            
            do j = 1, N
              if ( DEXP(DBLE(lambda)*(s(j)-s(1))).gt.TOLL ) then
                jtoll = jtoll + 1
              end if
            end do 
            
            do j = N, 1, -1
              if (j.ge.2) then
                jsend = MAX(j-jtoll+1,1)
                CONV = SEMIANA2(j,N,c,jsend,deltas,lambda)
                DWSTR(j) = DWSTR(j) + Am(jm) * gj0 * CONV
              end if
              UPSTR_BC(j) = UPSTR_BC(j) + c_bc * 
     6                      DEXP(DBLE(lambda)*(s(j)-s(1)))         
            end do
            
          end if
          
c-----------------------------------------------------------------------
c end loop over the eigenvalues
        end do
c-----------------------------------------------------------------------
            
c local effect of the curvature, longitudinal velocity and excess near-
c bank velocity
        do j = 1, N
          LOCAL(j) = Am(jm) * c(j) * (g11(jm)+g21(jm)+g31(jm)+g41(jm))
          um(j) = DBLE( UPSTR(j) + UPSTR_BC(j) +
     6                  DWSTR(j) + DWSTR_BC(j) + LOCAL(j) )
          dU(j) = dU(j) + 2.d0 * um(j) * (-1.d0)**(jm-1)
        end do

c-----------------------------------------------------------------------
c end loop over the Fourier components
      end do
c-----------------------------------------------------------------------

c end of the subroutine
      return
      end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Lxbeho
code,"*DECK DP1VLU
      SUBROUTINE DP1VLU (L, NDER, X, YFIT, YP, A)
C***BEGIN PROLOGUE  DP1VLU
C***PURPOSE  Use the coefficients generated by DPOLFT to evaluate the
C            polynomial fit of degree L, along with the first NDER of
C            its derivatives, at a specified point.
C***LIBRARY   SLATEC
C***CATEGORY  K6
C***TYPE      DOUBLE PRECISION (PVALUE-S, DP1VLU-D)
C***KEYWORDS  CURVE FITTING, LEAST SQUARES, POLYNOMIAL APPROXIMATION
C***AUTHOR  Shampine, L. F., (SNLA)
C           Davenport, S. M., (SNLA)
C***DESCRIPTION
C
C     Abstract
C
C     The subroutine  DP1VLU  uses the coefficients generated by  DPOLFT
C     to evaluate the polynomial fit of degree  L , along with the first
C     NDER  of its derivatives, at a specified point.  Computationally
C     stable recurrence relations are used to perform this task.
C
C     The parameters for  DP1VLU  are
C
C     Input -- ALL TYPE REAL variables are DOUBLE PRECISION
C         L -      the degree of polynomial to be evaluated.  L  may be
C                  any non-negative integer which is less than or equal
C                  to  NDEG , the highest degree polynomial provided
C                  by  DPOLFT .
C         NDER -   the number of derivatives to be evaluated.  NDER
C                  may be 0 or any positive value.  If NDER is less
C                  than 0, it will be treated as 0.
C         X -      the argument at which the polynomial and its
C                  derivatives are to be evaluated.
C         A -      work and output array containing values from last
C                  call to  DPOLFT .
C
C     Output -- ALL TYPE REAL variables are DOUBLE PRECISION
C         YFIT -   value of the fitting polynomial of degree  L  at  X
C         YP -     array containing the first through  NDER  derivatives
C                  of the polynomial of degree  L .  YP  must be
C                  dimensioned at least  NDER  in the calling program.
C
C***REFERENCES  L. F. Shampine, S. M. Davenport and R. E. Huddleston,
C                 Curve fitting by polynomials in one variable, Report
C                 SLA-74-0270, Sandia Laboratories, June 1974.
C***ROUTINES CALLED  XERMSG
C***REVISION HISTORY  (YYMMDD)
C   740601  DATE WRITTEN
C   890531  Changed all specific intrinsics to generic.  (WRB)
C   890911  Removed unnecessary intrinsics.  (WRB)
C   891006  Cosmetic changes to prologue.  (WRB)
C   891006  REVISION DATE from Version 3.2
C   891214  Prologue converted to Version 4.0 format.  (BAB)
C   900315  CALLs to XERROR changed to CALLs to XERMSG.  (THJ)
C   900510  Convert XERRWV calls to XERMSG calls.  (RWC)
C   920501  Reformatted the REFERENCES section.  (WRB)
C***END PROLOGUE  DP1VLU
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER I,IC,ILO,IN,INP1,IUP,K1,K1I,K2,K3,K3P1,K3PN,K4,K4P1,K4PN,
     * KC,L,LM1,LP1,MAXORD,N,NDER,NDO,NDP1,NORD
      DOUBLE PRECISION A(*),CC,DIF,VAL,X,YFIT,YP(*)
      CHARACTER*8 XERN1, XERN2
C***FIRST EXECUTABLE STATEMENT  DP1VLU
      IF (L .LT. 0) GO TO 12
      NDO = MAX(NDER,0)
      NDO = MIN(NDO,L)
      MAXORD = A(1) + 0.5D0
      K1 = MAXORD + 1
      K2 = K1 + MAXORD
      K3 = K2 + MAXORD + 2
      NORD = A(K3) + 0.5D0
      IF (L .GT. NORD) GO TO 11
      K4 = K3 + L + 1
      IF (NDER .LT. 1) GO TO 2
      DO 1 I = 1,NDER
 1      YP(I) = 0.0D0
 2    IF (L .GE. 2) GO TO 4
      IF (L .EQ. 1) GO TO 3
C
C L IS 0
C
      VAL = A(K2+1)
      GO TO 10
C
C L IS 1
C
 3    CC = A(K2+2)
      VAL = A(K2+1) + (X-A(2))*CC
      IF (NDER .GE. 1) YP(1) = CC
      GO TO 10
C
C L IS GREATER THAN 1
C
 4    NDP1 = NDO + 1
      K3P1 = K3 + 1
      K4P1 = K4 + 1
      LP1 = L + 1
      LM1 = L - 1
      ILO = K3 + 3
      IUP = K4 + NDP1
      DO 5 I = ILO,IUP
 5      A(I) = 0.0D0
      DIF = X - A(LP1)
      KC = K2 + LP1
      A(K4P1) = A(KC)
      A(K3P1) = A(KC-1) + DIF*A(K4P1)
      A(K3+2) = A(K4P1)
C
C EVALUATE RECURRENCE RELATIONS FOR FUNCTION VALUE AND DERIVATIVES
C
      DO 9 I = 1,LM1
        IN = L - I
        INP1 = IN + 1
        K1I = K1 + INP1
        IC = K2 + IN
        DIF = X - A(INP1)
        VAL = A(IC) + DIF*A(K3P1) - A(K1I)*A(K4P1)
        IF (NDO .LE. 0) GO TO 8
        DO 6 N = 1,NDO
          K3PN = K3P1 + N
          K4PN = K4P1 + N
 6        YP(N) = DIF*A(K3PN) + N*A(K3PN-1) - A(K1I)*A(K4PN)
C
C SAVE VALUES NEEDED FOR NEXT EVALUATION OF RECURRENCE RELATIONS
C
        DO 7 N = 1,NDO
          K3PN = K3P1 + N
          K4PN = K4P1 + N
          A(K4PN) = A(K3PN)
 7        A(K3PN) = YP(N)
 8      A(K4P1) = A(K3P1)
 9      A(K3P1) = VAL
C
C NORMAL RETURN OR ABORT DUE TO ERROR
C
 10   YFIT = VAL
      RETURN
C
   11 WRITE (XERN1, '(I8)') L
      WRITE (XERN2, '(I8)') NORD
      CALL XERMSG ('SLATEC', 'DP1VLU',
     *   'THE ORDER OF POLYNOMIAL EVALUATION, L = ' // XERN1 //
     *   ' REQUESTED EXCEEDS THE HIGHEST ORDER FIT, NORD = ' // XERN2 //
     *   ', COMPUTED BY DPOLFT -- EXECUTION TERMINATED.', 8, 2)
      RETURN
C
   12 CALL XERMSG ('SLATEC', 'DP1VLU',
     +   'INVALID INPUT PARAMETER.  ORDER OF POLYNOMIAL EVALUATION ' //
     +   'REQUESTED IS NEGATIVE.', 2, 2)
      RETURN
      END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6MP5rE
code,"! https://github.com/MichaelSiehl/Atomic_Subroutines--How_the_Parallel_Codes_may_look_like--Part_1

module OOOPimma_admImageManager
!************************************************
! Namespace: OOOP - Parallel
!************************************************
! Abstact Data Type Short Name: OOOPimma
!********************************************************
! Abstract Data Type (ADT):         OOOPimma_adtImageManager
! Abstract Data Type Module (adm):  OOOPimma_admImageManager.f90
!********************************************************
! Purpose:                    ImageManager-Object
! Language:                   mainly Fortran 95 with Fortran 2008 coarrays
! Programmer:                 Michael Siehl
! Date:                       March 2017
!********************************************************
! Naming Conventions:
!
!  for scalar members:
!                             m: object member
!                             S: setter, G: getter,
!                             S_atomic: the setter operates on atomic values using atomic_define and SYNC MEMORY
!                             G_check_atomic: the getter only checks local PGAS memory for specific values atomically
!
!  for array members:
!                             A: array
!                             mA: array member
!                             SA: set array, GA: get array,
!
!  for elements of array members:
!                             SAElement: set only one array element
!                             GAElement: get only one array element
!
!                             99: signals a static array member which has an upper array bound
!                                 larger than necessary; the upper bound is given by a global parameter
!
!  other naming conventions:
!                             _CA: coarray routine / coarray declaration
!                             _SYNC_: synchronization routine
!
!                             Enum: enumeration
!
!                             OO: public (outer) scope (the two leading namespace letters)
!                             II: private (inner) scope
!                             UU: sub-object
!********************************************************
!___________________________________________________________

use OOOGglob_Globals
use OOOEerro_admError
!
use OOOPimsc_admImageStatus_CA ! access corresponding coarrays to
                               ! communicate with remote or local PGAS memory
use OOOPinma_admInitialManager
!___________________________________________________________

implicit none
!___________________________________________________________

private
!___________________________________________________________
!
!
!*******************
! ADT-Management: **
!*******************
public :: OOOPimma_StructureConstructor
!___________________________________________________________
!
!********************
!** Program Logic: **
!********************
public :: OOOPimma_Start
private :: IIimma_SYNC_CheckActivityFlag ! synchronization routine
!___________________________________________________________
!
!********************
!** Error Handling: *
!********************
private :: IIimma_ErrorHandler
!___________________________________________________________
!
!*********************
!**  Enumerations:  **
!*********************

!___________________________________________________________
!
!***************************************
!***  Type Definition: *****************
!***************************************
type, public :: OOOPimma_adtImageManager
  private
  !*****
  type (OOOEerroc_colError) :: m_UUerrocError ! error-Collection
  !
end type OOOPimma_adtImageManager
!__________________________________________________________
!
!****************************************************
!***  Corresponding Local Object Declaration:  ******
!****************************************************
!***
type (OOOPimma_adtImageManager), public, save :: OOOPimmaImageManager_1
!
!___________________________________________________________




contains


!##################################################################################################
!##################################################################################################
!##################################################################################################

!*******************************
! access routines for scalar   *
! and static array members:    *
!*******************************






!##################################################################################################
!##################################################################################################
!##################################################################################################

!*******************
! ADT-Management:  *
!*******************
!___________________________________________________________

subroutine OOOPimma_StructureConstructor (Object)
  ! structure constructor
  type (OOOPimma_adtImageManager), intent (inout) :: Object
  !
                                                                call OOOGglob",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Oem-cV
code,"module m_prem

  implicit none
  integer, parameter :: DP = 8

contains
 
  !! ------------------------------------------------------------------------------------------ !!
  !> Return the modified PREM 1D velocity structure
  !! 
  !! Compared to the original model of the Diewonski and Anderson (1981), the seawater layer is
  !! substituted to a crustal structure:
  !! rho=2.6 g/cm^3, vp=5.8 km/s, vs=3.2 km/s qmu=600, qkappa = 57823
  !!
  !! This routine returns Q_P and Q_S rather than Q_kappa and Q_mu, by converting using 
  !! a formula of (9.59) & (9.60) of Dahlen and Tromp (1998)
  !--
  subroutine prem(z, rho, vp, vs, qp, qs)

    real(DP), intent(in)  :: z      ! depth
    real(DP), intent(out) :: rho    ! density [g/cm^3]
    real(DP), intent(out) :: vp     ! P wavespeed [km/s]
    real(DP), intent(out) :: vs     ! S wavespped [km/s]
    real(DP), intent(out) :: qp     ! Qp
    real(DP), intent(out) :: qs     ! Qs
    !--
    real(DP)              :: r, x   ! Radius, Normalized Radius
    real(DP) :: qk, qm ! Q_kappa, Q_mu
    real(DP) :: qki, qmi, qpi, qsi
    !----    
  
    r = 6371.0_DP - z
    x = r / 6371.0_DP
  
    if( 0.0 <= r ) then
  
      if      ( r <= 1221.5_DP ) then                          ! Inner Core
        rho = 13.0885_DP              -  8.8381_DP*x*x
        vp  = 11.2622_DP              -  6.3640_DP*x*x
        vs  =  3.6678_DP              -  4.4475_DP*x*x
        qm  = 84.6_DP
        qk  = 1327.7_DP
      else if ( r <= 3480.0_DP ) then                                ! Outer Core
        rho = 12.5815_DP -  1.2638_DP*x -  3.6426_DP*x*x -  5.5281_DP*x*x*x
        vp  = 11.0487_DP -  4.0362_DP*x +  4.8023_DP*x*x - 13.5732_DP*x*x*x
        vs  = 0.0_DP
        qm  = 1d100
        qk  = 57823_DP
      else if ( r <= 3630.0_DP ) then                            ! Lower Mantle 1
        rho =  7.9565_DP -  6.4761_DP*x +  5.5283_DP*x*x -  3.0807_DP*x*x*x
        vp  = 15.3891_DP -  5.3181_DP*x +  5.5242_DP*x*x -  2.5514_DP*x*x*x
        vs  =  6.9254_DP +  1.4672_DP*x -  2.0834_DP*x*x +  0.9783_DP*x*x*x
        qm  = 312_DP
        qk  = 57823_DP
      else if ( r <= 5600.0_DP ) then                            ! Lower Mantle 2
        rho =  7.9565_DP -  6.4761_DP*x +  5.5283_DP*x*x -  3.0807_DP*x*x*x
        vp  = 24.9520_DP - 40.4673_DP*x + 51.4832_DP*x*x - 26.6419_DP*x*x*x
        vs  = 11.1671_DP - 13.7818_DP*x + 17.4575_DP*x*x -  9.2777_DP*x*x*x
        qm  = 312_DP
        qk  = 57823_DP
      else if ( r <= 5701.0_DP ) then                            ! Lower Mantle 3
        rho =  7.9565_DP -  6.4761_DP*x +  5.5283_DP*x*x -  3.0807_DP*x*x*x
        vp  = 29.2766_DP - 23.6027_DP*x +  5.5242_DP*x*x -  2.5514_DP*x*x*x
        vs  = 22.3459_DP - 17.2473_DP*x -  2.0834_DP*x*x +  0.9783_DP*x*x*x
        qm  = 312_DP
        qk  = 57823_DP
      else if ( r <= 5771.0_DP ) then                         ! Transition zone 1
        rho =  5.3197_DP -  1.4836_DP*x
        vp  = 19.0957_DP -  9.8672_DP*x
        vs  =  9.9839_DP -  4.9324_DP*x
        qm  = 143_DP
        qk  = 57823_DP
      else if ( r <= 5971.0_DP ) then                         ! Transition zone 2
        rho = 11.2494_DP -  8.0298_DP*x
        vp  = 39.7027_DP - 32.6166_DP*x
        vs  = 22.3512_DP - 18.5856_DP*x
        qm  = 143_DP
        qk  = 57823_DP
      else if ( r <= 6151.0_DP ) then                         ! Transition zone 3
        rho =  7.1089_DP -  3.8045_DP*x
        vp  = 20.3926_DP - 12.2569_DP*x
        vs  =  8.9496_DP -  4.4597_DP*x
        qm  = 143_DP
        qk  = 57823_DP
      else if ( r <= 6346.6_DP ) then                                       ! LVZ
        rho =  2.6910_DP +  0.6924_DP*x
        vp  =  4.1875_DP +  3.9382_DP*x
        vs  =  2.1519_DP +  2.3481_DP*x
        qm  = 80_DP
        qk  = 57823_DP
      else if ( r <= 6346.6_DP ) then                                       ! LID
        rho =  2.6910_DP +  0.6924_DP*x
        vp  =  4.1875_DP +  3.9382_DP*x
        vs  =  2.1519_DP +  2.3481_DP*x
        qm  =  600_DP
        qk  =  57823_DP
      else if ( r <= 6356.0_DP ) then                                   ! Crust 1
        rho =  2.900_DP
        vp  =  6.800_DP
        vs  =  3.900_DP
        qm  =  600_DP
        qk  =  57823_DP
      else if ( r <= 6368.0_DP ) then                                   ! Crust 2
        rho =  2.600_DP
        vp  =  5.800_DP
        vs  =  3.200_DP
        qm  =  600_DP
        qk  =  57823_DP
      else if ( r <= 6371.0_DP ) then                                   ! Crust 3
        rho =  2.600_DP
        vp  =  5.800_DP
        vs  =  3.200_DP
        qm  =  600_DP
        qk  =  57823_DP
      end if
      
    else 
      rho = 0.0_DP
      vp  = 0.0_DP
      vs  = 0.0_DP                            ! for illegal value
      qm  = 0.0_DP
      qk  = 0.0_DP
    end if

    ! atetnuation
    qmi = 1._dp / qm
    qki = 1._dp / qm
    qpi = ( 1.0_dp - (4.0_dp/3.0_dp)*vs*vs/vp/vp ) * qki &
        + 4.0_dp/3.0_dp * vs*vs/vp/vp * qmi
    qsi = qmi
    qp = 1.0_dp / qpi
    qs = 1.0_dp / qsi

  end subroutine prem

end module m_prem",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1xci0I
code,"      SUBROUTINE SSBGST( VECT, UPLO, N, KA, KB, AB, LDAB, BB, LDBB, X,
     $                   LDX, WORK, INFO )
*
*  -- LAPACK routine (version 3.0) --
*     Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd.,
*     Courant Institute, Argonne National Lab, and Rice University
*     June 30, 1999
*
*     .. Scalar Arguments ..
      CHARACTER          UPLO, VECT
      INTEGER            INFO, KA, KB, LDAB, LDBB, LDX, N
*     ..
*     .. Array Arguments ..
      REAL               AB( LDAB, * ), BB( LDBB, * ), WORK( * ),
     $                   X( LDX, * )
*     ..
*
*  Purpose
*  =======
*
*  SSBGST reduces a real symmetric-definite banded generalized
*  eigenproblem  A*x = lambda*B*x  to standard form  C*y = lambda*y,
*  such that C has the same bandwidth as A.
*
*  B must have been previously factorized as S**T*S by SPBSTF, using a
*  split Cholesky factorization. A is overwritten by C = X**T*A*X, where
*  X = S**(-1)*Q and Q is an orthogonal matrix chosen to preserve the
*  bandwidth of A.
*
*  Arguments
*  =========
*
*  VECT    (input) CHARACTER*1
*          = 'N':  do not form the transformation matrix X;
*          = 'V':  form X.
*
*  UPLO    (input) CHARACTER*1
*          = 'U':  Upper triangle of A is stored;
*          = 'L':  Lower triangle of A is stored.
*
*  N       (input) INTEGER
*          The order of the matrices A and B.  N >= 0.
*
*  KA      (input) INTEGER
*          The number of superdiagonals of the matrix A if UPLO = 'U',
*          or the number of subdiagonals if UPLO = 'L'.  KA >= 0.
*
*  KB      (input) INTEGER
*          The number of superdiagonals of the matrix B if UPLO = 'U',
*          or the number of subdiagonals if UPLO = 'L'.  KA >= KB >= 0.
*
*  AB      (input/output) REAL array, dimension (LDAB,N)
*          On entry, the upper or lower triangle of the symmetric band
*          matrix A, stored in the first ka+1 rows of the array.  The
*          j-th column of A is stored in the j-th column of the array AB
*          as follows:
*          if UPLO = 'U', AB(ka+1+i-j,j) = A(i,j) for max(1,j-ka)<=i<=j;
*          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+ka).
*
*          On exit, the transformed matrix X**T*A*X, stored in the same
*          format as A.
*
*  LDAB    (input) INTEGER
*          The leading dimension of the array AB.  LDAB >= KA+1.
*
*  BB      (input) REAL array, dimension (LDBB,N)
*          The banded factor S from the split Cholesky factorization of
*          B, as returned by SPBSTF, stored in the first KB+1 rows of
*          the array.
*
*  LDBB    (input) INTEGER
*          The leading dimension of the array BB.  LDBB >= KB+1.
*
*  X       (output) REAL array, dimension (LDX,N)
*          If VECT = 'V', the n-by-n matrix X.
*          If VECT = 'N', the array X is not referenced.
*
*  LDX     (input) INTEGER
*          The leading dimension of the array X.
*          LDX >= max(1,N) if VECT = 'V'; LDX >= 1 otherwise.
*
*  WORK    (workspace) REAL array, dimension (2*N)
*
*  INFO    (output) INTEGER
*          = 0:  successful exit
*          < 0:  if INFO = -i, the i-th argument had an illegal value.
*
*  =====================================================================
*
*     .. Parameters ..
      REAL               ZERO, ONE
      PARAMETER          ( ZERO = 0.0E+0, ONE = 1.0E+0 )
*     ..
*     .. Local Scalars ..
      LOGICAL            UPDATE, UPPER, WANTX
      INTEGER            I, I0, I1, I2, INCA, J, J1, J1T, J2, J2T, K,
     $                   KA1, KB1, KBT, L, M, NR, NRT, NX
      REAL               BII, RA, RA1, T
*     ..
*     .. External Functions ..
      LOGICAL            LSAME
      EXTERNAL           LSAME
*     ..
*     .. External Subroutines ..
      EXTERNAL           SGER, SLAR2V, SLARGV, SLARTG, SLARTV, SLASET,
     $                   SROT, SSCAL, XERBLA
*     ..
*     .. Intrinsic Functions ..
      INTRINSIC          MAX, MIN
*     ..
*     .. Executable Statements ..
*
*     Test the input parameters
*
      WANTX = LSAME( VECT, 'V' )
      UPPER = LSAME( UPLO, 'U' )
      KA1 = KA + 1
      KB1 = KB + 1
      INFO = 0
      IF( .NOT.WANTX .AND. .NOT.LSAME( VECT, 'N' ) ) THEN
         INFO = -1
      ELSE IF( .NOT.UPPER .AND. .NOT.LSAME( UPLO, 'L' ) ) THEN
         INFO = -2
      ELSE IF( N.LT.0 ) THEN
         INFO = -3
      ELSE IF( KA.LT.0 ) THEN
         INFO = -4
      ELSE IF( KB.LT.0 ) THEN
         INFO = -5
      ELSE IF( LDAB.LT.KA+1 ) THEN
         INFO = -7
      ELSE IF( LDBB.LT.KB+1 ) THEN
         INFO = -9
      ELSE IF( LDX.LT.1 .OR. WANTX .AND. LDX.LT.MAX( 1, N ) ) THEN
         INFO = -11
      END IF
      IF( INFO.NE.0 ) THEN
         CALL XERBLA( 'SSBGST', -INFO )
         RETURN
      END IF
*
*     Quick return if possible
*
      IF( N.EQ.0 )
     $   RETURN
*
      INCA = LDAB*KA1
*
*     Initialize X to the unit matrix, if needed
*
      IF( WANTX )
     $   CALL SLASET( 'Full', N, N, ZERO, ONE, X, LDX )
*
*     Set M ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1cKBr9
code,"      SUBROUTINE RSP_ARGS( L_NAM, R_NAM )

!***********************************************************************
!* Gets the Response Program Inputs
!*
!* Language: Fortran
!*
!* Author: Stuart G. Mentzer
!*
!* Date: 1999/08/20
!***********************************************************************


      ! Arguments ______________________________________________________

      CHARACTER*(*) L_NAM ! List file name

      CHARACTER*(*) R_NAM ! Response file name


      ! Get response program inputs
      CALL GET_COMMAND_ARGUMENT( 1, L_NAM )
      CALL GET_COMMAND_ARGUMENT( 2, R_NAM )

      RETURN
      END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h502j2
code,"      SUBROUTINE ZUNI2(ZR, ZI, FNU, KODE, N, YR, YI, NZ, NLAST, FNUL,
     * TOL, ELIM, ALIM)
C***BEGIN PROLOGUE  ZUNI2
C***REFER TO  ZBESI,ZBESK
C
C     ZUNI2 COMPUTES I(FNU,Z) IN THE RIGHT HALF PLANE BY MEANS OF
C     UNIFORM ASYMPTOTIC EXPANSION FOR J(FNU,ZN) WHERE ZN IS Z*I
C     OR -Z*I AND ZN IS IN THE RIGHT HALF PLANE ALSO.
C
C     FNUL IS THE SMALLEST ORDER PERMITTED FOR THE ASYMPTOTIC
C     EXPANSION. NLAST=0 MEANS ALL OF THE Y VALUES WERE SET.
C     NLAST.NE.0 IS THE NUMBER LEFT TO BE COMPUTED BY ANOTHER
C     FORMULA FOR ORDERS FNU TO FNU+NLAST-1 BECAUSE FNU+NLAST-1.LT.FNUL.
C     Y(I)=CZERO FOR I=NLAST+1,N
C
C***ROUTINES CALLED  ZAIRY,ZUCHK,ZUNHJ,ZUOIK,D1MACH,AZABS
C***END PROLOGUE  ZUNI2
C     COMPLEX AI,ARG,ASUM,BSUM,CFN,CI,CID,CIP,CONE,CRSC,CSCL,CSR,CSS,
C    *CZERO,C1,C2,DAI,PHI,RZ,S1,S2,Y,Z,ZB,ZETA1,ZETA2,ZN
      DOUBLE PRECISION AARG, AIC, AII, AIR, ALIM, ANG, APHI, ARGI,
     * ARGR, ASCLE, ASUMI, ASUMR, BRY, BSUMI, BSUMR, CIDI, CIPI, CIPR,
     * CONER, CRSC, CSCL, CSRR, CSSR, C1R, C2I, C2M, C2R, DAII,
     * DAIR, ELIM, FN, FNU, FNUL, HPI, PHII, PHIR, RAST, RAZ, RS1, RZI,
     * RZR, STI, STR, S1I, S1R, S2I, S2R, TOL, YI, YR, ZBI, ZBR, ZEROI,
     * ZEROR, ZETA1I, ZETA1R, ZETA2I, ZETA2R, ZI, ZNI, ZNR, ZR, CYR,
     * CYI, D1MACH, AZABS, CAR, SAR
      INTEGER I, IFLAG, IN, INU, J, K, KODE, N, NAI, ND, NDAI, NLAST,
     * NN, NUF, NW, NZ, IDUM
      DIMENSION BRY(3), YR(N), YI(N), CIPR(4), CIPI(4), CSSR(3),
     * CSRR(3), CYR(2), CYI(2)
      DATA ZEROR,ZEROI,CONER / 0.0D0, 0.0D0, 1.0D0 /
      DATA CIPR(1),CIPI(1),CIPR(2),CIPI(2),CIPR(3),CIPI(3),CIPR(4),
     * CIPI(4)/ 1.0D0,0.0D0, 0.0D0,1.0D0, -1.0D0,0.0D0, 0.0D0,-1.0D0/
      DATA HPI, AIC  /
     1      1.57079632679489662D+00,     1.265512123484645396D+00/
C
      NZ = 0
      ND = N
      NLAST = 0
C-----------------------------------------------------------------------
C     COMPUTED VALUES WITH EXPONENTS BETWEEN ALIM AND ELIM IN MAG-
C     NITUDE ARE SCALED TO KEEP INTERMEDIATE ARITHMETIC ON SCALE,
C     EXP(ALIM)=EXP(ELIM)*TOL
C-----------------------------------------------------------------------
      CSCL = 1.0D0/TOL
      CRSC = TOL
      CSSR(1) = CSCL
      CSSR(2) = CONER
      CSSR(3) = CRSC
      CSRR(1) = CRSC
      CSRR(2) = CONER
      CSRR(3) = CSCL
      BRY(1) = 1.0D+3*D1MACH(1)/TOL
C-----------------------------------------------------------------------
C     ZN IS IN THE RIGHT HALF PLANE AFTER ROTATION BY CI OR -CI
C-----------------------------------------------------------------------
      ZNR = ZI
      ZNI = -ZR
      ZBR = ZR
      ZBI = ZI
      CIDI = -CONER
      INU = INT(SNGL(FNU))
      ANG = HPI*(FNU-DBLE(FLOAT(INU)))
      C2R = DCOS(ANG)
      C2I = DSIN(ANG)
      CAR = C2R
      SAR = C2I
      IN = INU + N - 1
      IN = MOD(IN,4) + 1
      STR = C2R*CIPR(IN) - C2I*CIPI(IN)
      C2I = C2R*CIPI(IN) + C2I*CIPR(IN)
      C2R = STR
      IF (ZI.GT.0.0D0) GO TO 10
      ZNR = -ZNR
      ZBI = -ZBI
      CIDI = -CIDI
      C2I = -C2I
   10 CONTINUE
C-----------------------------------------------------------------------
C     CHECK FOR UNDERFLOW AND OVERFLOW ON FIRST MEMBER
C-----------------------------------------------------------------------
      FN = DMAX1(FNU,1.0D0)
      CALL ZUNHJ(ZNR, ZNI, FN, 1, TOL, PHIR, PHII, ARGR, ARGI, ZETA1R,
     * ZETA1I, ZETA2R, ZETA2I, ASUMR, ASUMI, BSUMR, BSUMI)
      IF (KODE.EQ.1) GO TO 20
      STR = ZBR + ZETA2R
      STI = ZBI + ZETA2I
      RAST = FN/AZABS(STR,STI)
      STR = STR*RAST*RAST
      STI = -STI*RAST*RAST
      S1R = -ZETA1R + STR
      S1I = -ZETA1I + STI
      GO TO 30
   20 CONTINUE
      S1R = -ZETA1R + ZETA2R
      S1I = -ZETA1I + ZETA2I
   30 CONTINUE
      RS1 = S1R
      IF (DABS(RS1).GT.ELIM) GO TO 150
   40 CONTINUE
      NN = MIN0(2,ND)
      DO 90 I=1,NN
        FN = FNU + DBLE(FLOAT(ND-I))
        CALL ZUNHJ(ZNR, ZNI, FN, 0, TOL, PHIR, PHII, ARGR, ARGI,
     *   ZETA1R, ZETA1I, ZETA2R, ZETA2I, ASUMR, ASUMI, BSUMR, BSUMI)
        IF (KODE.EQ.1) GO TO 50
        STR = ZBR + ZETA2R
        STI = ZBI + ZETA2I
        RAST = FN/AZABS(STR,STI)
        STR = STR*RAST*RAST
        STI = -STI*RAST*RAST
        S1R = -ZETA1R + STR
        S1I = -ZETA1I + STI + DABS(ZI)
        GO TO 60
   50   CONTINUE
        S1R = -ZETA1R + ZETA2R
        S1I = -ZETA1I + ZETA2I
   60   CONTINUE
C-----------------------------------------------------------------------
C     TEST FOR UNDERFLOW AND OVERFLOW
C-----------------------------------------------------------------------
        RS1 = S1R
        IF (DABS(RS1).GT.ELIM) GO TO 120
        IF (I.EQ.1) IFLAG = 2
        IF (DABS(RS1).LT.ALIM) GO TO 70
C-----------------------------------------------------------------------
C     REFINE  TEST AND SCALE
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
        APHI = AZABS(PHIR,PHII)
        AARG = AZABS(ARGR,ARGI)
        RS1 = RS1 + DLOG(APHI) - 0.25D0*DLOG(AARG) - AIC
        IF (DABS(RS1).GT.ELIM) GO TO 120
        IF (I.EQ.1) IFLAG = 1
        IF (RS1.LT.0.0D0) GO TO 70
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5oK0ZJ
code,"! { dg-do run { target fd_truncate } }
! PR25307 Check handling of end-of-file conditions for list directed reads.
! Prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>
program pr25307
   character(len=10) :: str
   character(len=10) :: a(5)
   a=""""
   a(1)=""123""
   a(3)=""234""
   str = '123'
! Check internal unit
   i = 0
   j = 0
   read( str, *, end=10 ) i,j
   call abort()
10 continue
   if (i.ne.123) call abort()
   if (j.ne.0) call abort()
! Check file unit
   i = 0
   write(10,'(a)') ""123""
   rewind(10)
   read(10, *, end=20) i,j
   call abort()
20 continue
   if (i.ne.123) call abort()
   if (j.ne.0) call abort()
! Check internal array unit
   i = 0
   j = 0
   k = 0
   read(a(1:5:2),*, end=30)i,j,k
   call abort()
30 continue
   if (i.ne.123) call abort()
   if (j.ne.234) call abort()
   if (k.ne.0) call abort()
end program pr25307
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-g3Mhg
code,"!========================================================================
!
!                   S P E C F E M 2 D  Version 7 . 0
!                   --------------------------------
!
!     Main historical authors: Dimitri Komatitsch and Jeroen Tromp
!                              CNRS, France
!                       and Princeton University, USA
!                 (there are currently many more authors!)
!                           (c) October 2017
!
! This software is a computer program whose purpose is to solve
! the two-dimensional viscoelastic anisotropic or poroelastic wave equation
! using a spectral-element method (SEM).
!
! This program is free software; you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation; either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License along
! with this program; if not, write to the Free Software Foundation, Inc.,
! 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
!
! The full text of the license is available in file ""LICENSE"".
!
!========================================================================

  subroutine save_databases()

! generates the databases for the solver

  use constants, only: IMAIN,IOUT,MAX_STRING_LEN,OUTPUT_FILES
  use part_unstruct_par, only: nspec,iproc
  use shared_parameters, only: NPROC

  implicit none

  ! local parameters
  integer :: ier
  character(len=MAX_STRING_LEN) :: prname

  do iproc = 0, NPROC-1

    ! opens Database file
    write(prname, ""(a,i5.5,a)"") './'//trim(OUTPUT_FILES)//'Database',iproc,'.bin'
    open(unit=IOUT,file=trim(prname),status='unknown',action='write',form='unformatted',iostat=ier)
    if (ier /= 0 ) call stop_the_code('Error saving databases; check that directory OUTPUT_FILES exists')

    ! saves header infos and simulation setup
    call save_databases_init()

    ! sources setup
    call save_databases_sources()

    ! mesh node coordinates and mesh properties
    call save_databases_coorg_elem()

    ! attenuation
    call save_databases_attenuation()

    ! material properties
    call save_databases_materials()

    ! saves mpi/partition interface
    call save_databases_interfaces()

    ! absorbing boundary
    call save_databases_absorbing()

    ! acoustic forcing
    call save_databases_acoustic_forcing()

    ! acoustic free surface
    call save_databases_free_surf()

    ! coupled domain edges
    call save_databases_coupled()

    ! tangential detection curve
    call save_databases_tangential()

    ! axial elements
    call save_databases_axial_elements()

    ! closes Database file
    close(IOUT)

    ! user output
    if (iproc == 0) write(IMAIN,*)
    write(IMAIN,*) 'slice ',iproc,' has number of spectral elements =',nspec
    call flush_IMAIN()

  enddo

  end subroutine save_databases


!-------------------------------------------------------------------------------

  subroutine save_databases_init()

  use constants, only: IOUT
  use shared_parameters
  use part_unstruct_par, only: iproc,nspec,npgeo,region_pml_external_mesh

  implicit none

  ! prepare total numbers
  ! only counts number of nodes (npgeo) for this partition (iproc)
  call write_glob2loc_nodes_database(IOUT, iproc, npgeo, 1)

  ! only counts number of elements (nspec) for this partition (iproc)
  !   DK DK add support for using PML in MPI mode with external mesh
  !   call write_partition_database(IOUT, iproc, nspec, num_material, ngnod, 1)
  call write_partition_database(IOUT, iproc, nspec, num_material, region_pml_external_mesh, ngnod, 1)

  ! file output
  ! note: older version used ascii-output and annotated all parameters
  !       since this is now in binary format, we remove the text strings as they were not used any further
  ! header infos and simulation setup
  ! '# Database for SPECFEM2D'

  ! 'Title of the simulation'
  write(IOUT) title

  ! 'Type of simulation'
  write(IOUT) NOISE_TOMOGRAPHY, UNDO_ATTENUATION_AND_OR_PML

  ! 'nspec'
  write(IOUT) nspec

  ! 'npgeo NPROC'
  write(IOUT) npgeo,NPROC

  ! 'output_grid_Gnuplot interpol'
  write(IOUT) output_grid_Gnuplot,interpol

  ! 'NSTEP_BETWEEN_OUTPUT_INFO'
  write(IOUT) NSTEP_BETWEEN_OUTPUT_INFO

  ! 'NSTEP_BETWEEN_OUTPUT_SEISMOS'
  write(IOUT) NSTEP_BETWEEN_OUTPUT_SEISMOS

  ! 'NSTEP_BETWEEN_OUTPUT_IMAGES'
  write(IOUT) NSTEP_BETWEEN_OUTPUT_IMAGES

  ! 'PML_BOUNDARY_CONDITIONS'
  write(IOUT) PML_BOUNDARY_CONDITIONS

  ! 'ROTATE_PML_ACTIVATE'
  write(IOUT) ROTATE_PML_ACTIVATE

  ! 'ROTATE_PML_ANGLE'
  write(IOUT) ROTATE_PML_ANGLE

  ! 'K_MIN_PML'
  write(IOUT) K_MIN_PML

  ! 'K_MAX_PML'
  write(IOUT) K_MAX_PML

  ! 'damping_change_factor_acoustic'
  write(IOUT) damping_change_factor_acoustic

  ! 'damping_change_factor_elastic'
  write(IOUT) damping_change",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Dg-Qut
code,"! { dg-do run }
! { dg-additional-sources c_size_t_driver.c }
module c_size_t_test
  use, intrinsic :: iso_c_binding

contains
  subroutine sub0(my_c_size) bind(c)
    integer(c_int), value :: my_c_size ! value of C's sizeof(size_t)

    ! if the value of c_size_t isn't equal to the value of C's sizeof(size_t) 
    ! we call abort.
    if(c_size_t .ne. my_c_size) then
       STOP 1
    end if
  end subroutine sub0
end module c_size_t_test
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iFjI9z
code,"! { dg-do compile }
! { dg-options ""-std=f95"" }
!
! PR fortran/52335
!

integer :: lun
character(len=20) :: str

! VALID Fortran 95:
open(unit=lun,file=str,delim='apostrophe',status='old')
inquire(lun, delim=str)

! Fortran 2003:
write(*,*, delim='apostrophe') 'a' ! { dg-error ""Fortran 2003: DELIM= at .1. not allowed in Fortran 95"" }
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Gp3Wrl
code,"        !COMPILER-GENERATED INTERFACE MODULE: Fri Mar 11 15:53:54 2016
        MODULE IT_COMPUTE_STRAIN_ATT_BACKWARD__genmod
          INTERFACE 
            SUBROUTINE IT_COMPUTE_STRAIN_ATT_BACKWARD
            END SUBROUTINE IT_COMPUTE_STRAIN_ATT_BACKWARD
          END INTERFACE 
        END MODULE IT_COMPUTE_STRAIN_ATT_BACKWARD__genmod
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aoxxfe
code,"
! Copyright (C) 2011 S. Sharma, J. K. Dewhurst and E. K. U. Gross.
! This file is distributed under the terms of the GNU General Public License.
! See the file COPYING for license details.

subroutine genvfxc(gqc,vchi0,eps0,eps,vfxc)
use modmain
use modtddft
implicit none
! arguments
real(8), intent(in) :: gqc(ngrf)
complex(8), intent(in) :: vchi0(nwrf,ngrf,ngrf)
complex(8), intent(in) :: eps0(ngrf,ngrf,nwrf)
complex(8), intent(in) :: eps(ngrf,ngrf,nwrf)
complex(8), intent(out) :: vfxc(ngrf,ngrf,nwrf)
! local variables
integer ig,jg,iw
real(8) t1
! allocatable arrays
complex(8), allocatable :: a(:,:),b(:,:)
! compute v^(-1/2) f_xc v^(-1/2)
select case(fxctype(1))
case(0,1)
! RPA
  vfxc(:,:,:)=0.d0
  return
case(3)
! ALDA
  call genvfxcg(gqc,vfxc)
case(200)
! long-range contribution with dynamic correlations
  vfxc(:,:,:)=0.d0
  do ig=1,ngrf
    vfxc(ig,ig,:)=-(fxclrc(1)+fxclrc(2)*dble(wrf(:))**2)/fourpi
  end do
case(210)
! bootstrap
  vfxc(:,:,:)=0.d0
  t1=-1.d0/(dble(eps0(1,1,1))-1.d0)
  do ig=1,ngrf
    do jg=1,ngrf
      vfxc(ig,jg,:)=t1*eps(ig,jg,1)
    end do
  end do
case default
  write(*,*)
  write(*,'(""Error(genvfxc): fxctype not defined : "",I8)') fxctype
  write(*,*)
  stop
end select
! right multiply by v^1/2 chi0 v^1/2
allocate(a(ngrf,ngrf),b(ngrf,ngrf))
do iw=1,nwrf
  a(:,:)=vfxc(:,:,iw)
  b(:,:)=vchi0(iw,:,:)
  call zgemm('N','N',ngrf,ngrf,ngrf,zone,a,ngrf,b,ngrf,zzero,vfxc(:,:,iw),ngrf)
end do
deallocate(a,b)
return
end subroutine

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k_6zxu
code,"*========================================================================
* File Name : fourier_main.f
* Copyright (C) 2008-2011 Po-Jen Hsu <xanadu8850@pchome.com.tw>
* Creation Date : 2011-02-07
* Last Modified : Thu 21 Apr 2011 11:14:52 AM CST
* License : GPL (see bottom)
* Encoding : utf-8
* Project : 
* Description : 
*========================================================================

      subroutine fourier_main
      implicit none
      include ""../../include/global_common.h""
      include ""../../include/common.h""
      include ""../../include/tester/tester.h""
      include ""../../include/tester/fourier.h""
      if(fourier_method.eq.1)then
C        call DFT_main
      endif
      if(fourier_method.eq.2)then
C        call FFT main
      endif
      return
      end

      subroutine DFT_main   !Discrete Fourier Transformation
      implicit none
      include ""../../include/global_common.h""
      include ""../../include/common.h""
      include ""../../include/job.h""
      include ""../../include/file.h""
      include ""../../include/pes.h""
      include ""../../include/header.h""
      include ""../../include/tester/fourier.h""
      include ""../../include/tools/ft.h""
      integer total_loop_int_fixed
      real*8 read_value(observe_time_step_max),pi,theta,theta_t
      if(job_skip)return
      if(wscreen)write(*,""(I5,1x,A25)"")
     &myid,""Start reading source file""
C      call power2array(total_loop_int,total_loop_int_fixed)
C      if(wscreen)write(*,""(I5,1x,A40,1x,I13)"")
C     &myid,""Fixed the total loops to the power of 2="",
C     &total_loop_int_fixed
      open(30,file=source_file_name,status=""old"")
      theta=2.D0*pi/dble(2*total_loop_int)
      do I0=1,fourier_dim
        read(30,*)! first line is the definition
        do I1=1,init_loop_int-1
          read(30,*)
        enddo
        do I1=1,total_loop_int
C          read(30,*) fourier_time(I1),(read_temp(I2),
C     &I2=1,fourier_dim-1),read_value(I1)
        enddo
        do I1=total_loop_int+1,total_loop_int_fixed
          read_value(I1)=0.D0
        enddo
        if(wscreen)write(*,""(I5,1x,A12,1x,I4,1x,A9)"")
     &myid,""FFT for index"",I0,""completed""
        call realft(read_value,total_loop_int_fixed,1)
        do I1=1,delta_loop_int-1
          read(30,*)
        enddo
        rewind(30)
      enddo
      if(wscreen)write(*,""(I5,1x,A22)"")
     &myid,""FFT completed""
C=============Output DFT==========================================
      pi=read_unit(""Pi "",""Pi "",""1 "")
      theta=2.D0*pi/dble(2*final_loop+1)   !w=(2*pi*k)/N and F=F*dt 
      theta_t=theta/fourier_delta_time
      file_name=
     &fourier_dft_file_name(:index(fourier_dft_file_name,"" "")-1)
      open(25,file=file_name,status=""replace"")
      file_name=
     &fourier_dft_file_name(:index(fourier_dft_file_name,"" "")-1)
      open(26,file=file_name,status=""replace"")
      write(25,""(A62,I5,A1)"")
     &""# freq_in_rad DFT_mean_real DFT_real_atom(1) to DFT_real_atom(""
     &,atom_num,"")""
      write(26,""(A65,I5,A1)"")
     &""# freq_in_rad DFT_mean_image DFT_image_atom(1) to DFT_image_atom(
     &"",atom_num,"")""
C      do I1=-(gvacf_observe_time_step-1),gvacf_observe_time_step-1
      do I1=1,total_loop_int_fixed
        if(dabs(read_value(I1)).gt.0.001D0)then
          write(25,102) theta_t*dble(I1),
     &(read_value(I0)*fourier_delta_time,I0=1,fourier_dim)
        endif
      enddo
102   format(F14.7,1x,F14.7,1000(1x,F14.7))
      close(25)
      close(26)
      return
      end

* ======================GNU General Public License=======================
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
* =======================================================================
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wDxCDL
code,"!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
!
! Molden2AIM: a utility to convert the format from MOLDEN to AIM-WFN, AIM-WFX, and NBO-47.
!
! Webpage: https://github.com/zorkzou/Molden2AIM
!
! E-mail: qcband@gmail.com
!
!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
program Molden2AIM
 implicit real(kind=8) (a-h,o-z)
 parameter(nprog=10)

 allocatable   :: iza(:), icore(:), xyz(:,:), ene(:), ispin(:), occup(:), carmo(:), sphmo(:), lprtmo(:),  &
                  s2cd(:), s2cf(:), s2cg(:), s2ch(:),  &  ! coefficients for sph. --> Car. GTF
                  mapatm(:),        &  ! atomic center of each contracted shell
                  lqnm(:),          &  ! L-quantum number of each contracted shell
                  nshlls(:),        &  ! starting primitive shell in each contracted shell
                  nshlln(:),        &  ! number of primitive shells in each contracted shell
                  expgto(:),        &  ! primitive exponent of each primitive shell
                  congto(:),        &  ! contraction coeffients of each primitive shell
                  scalmocar(:)         ! scaling factor of each contracted Cartesian function

 ! Cartesian NC-/C-GTFs; Spherical NC-/C-GTFs
 dimension         :: ncar(2),nsph(2)

 dimension         :: ICntrl(8)
 logical           :: doit,ifopen,ifcomm,ifwbo

 character         :: fnam*150, fwfn*157, fwfx*157, fnbo*157, fmdn*164, ctmp*314
 character         :: dt*10, ver*5
 character         :: yn*1, L2U*1, stline*120

!=================================================================================================================================
!  command mode or not
!=================================================================================================================================
 call commandline(ifcomm,fnam,ctmp)

!=================================================================================================================================
!  head
!=================================================================================================================================
 ver = ""5.0.6""
 dt  = ""11/12/2021""
 call headprt(ver,dt)

!=================================================================================================================================
!  Initialization
!=================================================================================================================================
 ICntrl(1)=1         ! Generating a standard Molden file in Cartesian functions
 ICntrl(2)=1         ! Generating a WFN file
 ICntrl(3)=0         ! Generating a WFX file
 ICntrl(4)=0         ! Generating an NBO .47 file
 ICntrl(5)=0         ! Checking normalization for WFN
 ICntrl(6)=0         ! Checking normalization for WFX
 ICntrl(7)=0         ! Checking normalization for NBO's .47
 ICntrl(8)=0         ! Calculate Generalized Wiberg bond order when ICntrl(4) >= 0
                     !
                     ! >0:  always performs the operation without asking the user
                     ! =0:  asks the user whether to perform the operation
                     ! <0:  always neglect the operation without asking the user

 IAllMO=0            ! for new-MOLDEN, WFN, and WFX
                     ! =0: print only the orbitals with occ. number > 5.0d-8
                     ! <0: print only the orbitals with occ. number > 0.1 (debug)
                     ! >0: print all the orbitals

 ICln=1              ! delete temporary files (1) or not (0)

 iprog=0             ! 1: ORCA, 2: CFOUR, 3: TURBOMOLE, 4: JAGUAR, ... (see Sub. countmo)
                     ! 0: other programs, or read [Program] xxx from MOLDEN.
                     ! If one of the above program is always used, you can provide iprog here without defining
                     ! [Program] xxx in MOLDEN any more.

 nosupp=0            ! Print (< 0) or do not print (> 0) supporting information; =0: ask the user

 ledt=0              ! Type of EDF. X2C/HF (=0) or X2C/PBE0 (=1)

 lpspin=1            ! 0/1: print the $MOSPIN block in wfn (=1)

 iunknw=1            ! 0/1: print 0.0 for Energy and 2.0 for Virial Ratio

!=================================================================================================================================
! Port numbers. Do not modify them.
!
! Port numbers 4x: important input and output files
! Port numbers 6x: temporary files used in sub. backupgto
! Port numbers 7x: temporary files
!=================================================================================================================================
 iini=40             ! m2a.ini
 imod=44             ! original molden file
 inmd=45             ! new molden file in Cartesian functions
 iwfn=46             ! wfn file
 iwfx=47             ! wfx file
 inbo=48             ! NBO 47 file
 iwbo=49             ! Generalized Wiberg bond order

 imtm=64             ! a temporary Molden file
 itmp=65             ! see backupgto
 igin=66         ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Db4mzO
code,"      SUBROUTINE STPMV ( UPLO, TRANS, DIAG, N, AP, X, INCX )
*     .. Scalar Arguments ..
      INTEGER            INCX, N
      CHARACTER*1        DIAG, TRANS, UPLO
*     .. Array Arguments ..
      REAL               AP( * ), X( * )
*     ..
*
*  Purpose
*  =======
*
*  STPMV  performs one of the matrix-vector operations
*
*     x := A*x,   or   x := A'*x,
*
*  where x is an n element vector and  A is an n by n unit, or non-unit,
*  upper or lower triangular matrix, supplied in packed form.
*
*  Parameters
*  ==========
*
*  UPLO   - CHARACTER*1.
*           On entry, UPLO specifies whether the matrix is an upper or
*           lower triangular matrix as follows:
*
*              UPLO = 'U' or 'u'   A is an upper triangular matrix.
*
*              UPLO = 'L' or 'l'   A is a lower triangular matrix.
*
*           Unchanged on exit.
*
*  TRANS  - CHARACTER*1.
*           On entry, TRANS specifies the operation to be performed as
*           follows:
*
*              TRANS = 'N' or 'n'   x := A*x.
*
*              TRANS = 'T' or 't'   x := A'*x.
*
*              TRANS = 'C' or 'c'   x := A'*x.
*
*           Unchanged on exit.
*
*  DIAG   - CHARACTER*1.
*           On entry, DIAG specifies whether or not A is unit
*           triangular as follows:
*
*              DIAG = 'U' or 'u'   A is assumed to be unit triangular.
*
*              DIAG = 'N' or 'n'   A is not assumed to be unit
*                                  triangular.
*
*           Unchanged on exit.
*
*  N      - INTEGER.
*           On entry, N specifies the order of the matrix A.
*           N must be at least zero.
*           Unchanged on exit.
*
*  AP     - REAL             array of DIMENSION at least
*           ( ( n*( n + 1 ) )/2 ).
*           Before entry with  UPLO = 'U' or 'u', the array AP must
*           contain the upper triangular matrix packed sequentially,
*           column by column, so that AP( 1 ) contains a( 1, 1 ),
*           AP( 2 ) and AP( 3 ) contain a( 1, 2 ) and a( 2, 2 )
*           respectively, and so on.
*           Before entry with UPLO = 'L' or 'l', the array AP must
*           contain the lower triangular matrix packed sequentially,
*           column by column, so that AP( 1 ) contains a( 1, 1 ),
*           AP( 2 ) and AP( 3 ) contain a( 2, 1 ) and a( 3, 1 )
*           respectively, and so on.
*           Note that when  DIAG = 'U' or 'u', the diagonal elements of
*           A are not referenced, but are assumed to be unity.
*           Unchanged on exit.
*
*  X      - REAL             array of dimension at least
*           ( 1 + ( n - 1 )*abs( INCX ) ).
*           Before entry, the incremented array X must contain the n
*           element vector x. On exit, X is overwritten with the
*           tranformed vector x.
*
*  INCX   - INTEGER.
*           On entry, INCX specifies the increment for the elements of
*           X. INCX must not be zero.
*           Unchanged on exit.
*
*
*  Level 2 Blas routine.
*
*  -- Written on 22-October-1986.
*     Jack Dongarra, Argonne National Lab.
*     Jeremy Du Croz, Nag Central Office.
*     Sven Hammarling, Nag Central Office.
*     Richard Hanson, Sandia National Labs.
*
*
*     .. Parameters ..
      REAL               ZERO
      PARAMETER        ( ZERO = 0.0E+0 )
*     .. Local Scalars ..
      REAL               TEMP
      INTEGER            I, INFO, IX, J, JX, K, KK, KX
      LOGICAL            NOUNIT
*     .. External Functions ..
      LOGICAL            LSAME
      EXTERNAL           LSAME
*     .. External Subroutines ..
      EXTERNAL           XERBLA
*     ..
*     .. Executable Statements ..
*
*     Test the input parameters.
*
      INFO = 0
      IF     ( .NOT.LSAME( UPLO , 'U' ).AND.
     $         .NOT.LSAME( UPLO , 'L' )      )THEN
         INFO = 1
      ELSE IF( .NOT.LSAME( TRANS, 'N' ).AND.
     $         .NOT.LSAME( TRANS, 'T' ).AND.
     $         .NOT.LSAME( TRANS, 'C' )      )THEN
         INFO = 2
      ELSE IF( .NOT.LSAME( DIAG , 'U' ).AND.
     $         .NOT.LSAME( DIAG , 'N' )      )THEN
         INFO = 3
      ELSE IF( N.LT.0 )THEN
         INFO = 4
      ELSE IF( INCX.EQ.0 )THEN
         INFO = 7
      END IF
      IF( INFO.NE.0 )THEN
         CALL XERBLA( 'STPMV ', INFO )
         RETURN
      END IF
*
*     Quick return if possible.
*
      IF( N.EQ.0 )
     $   RETURN
*
      NOUNIT = LSAME( DIAG, 'N' )
*
*     Set up the start point in X if the increment is not unity. This
*     will be  ( N - 1 )*INCX  too small for descending loops.
*
      IF( INCX.LE.0 )THEN
         KX = 1 - ( N - 1 )*INCX
      ELSE IF( INCX.NE.1 )THEN
         KX = 1
      END IF
*
*     Start the operations. In this version the elements of AP are
*     accessed sequentially with one pass through AP.
*
      IF( LSAME( TRANS, 'N' ) )THEN
*
*        Form  x:= A*x.
*
         IF( LSAME( UPLO, 'U' ) )THEN
            KK =1
            IF( INCX.EQ.1 )THEN
               DO 20, J = 1, N
                  IF( X( J ).NE.ZERO )THEN
                     TEMP = X( J )
                     K    = KK
                     DO 10, I = 1, J - 1
                        X( I ) = X( I ) + ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZaT6Md
code,"C
C
C  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
C
C  This program is free software; you can redistribute it and/or modify it
C  under the terms of version 2.1 of the GNU Lesser General Public License 
C  as published by the Free Software Foundation.
C
C  This program is distributed in the hope that it would be useful, but
C  WITHOUT ANY WARRANTY; without even the implied warranty of
C  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
C
C  Further, this software is distributed without any warranty that it is
C  free of the rightful claim of any third person regarding infringement 
C  or the like.  Any license provided herein, whether implied or 
C  otherwise, applies only to this software file.  Patent licenses, if
C  any, provided herein do not apply to combinations of this program with 
C  other software, or any other product whatsoever.  
C
C  You should have received a copy of the GNU Lesser General Public 
C  License along with this program; if not, write the Free Software 
C  Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, 
C  USA.
C
C  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
C  Mountain View, CA 94043, or:
C
C  http://www.sgi.com
C
C  For further information regarding this notice, see:
C
C  http://oss.sgi.com/projects/GenInfo/NoticeExplan
C
C


 	subroutine _JGEMMX
     $			( m, n, k, alpha, a, inc1a, inc2a, 
     $			b, inc1b, inc2b, beta, c, inc1c, inc2c )
CDIR$ ID ""@(#) libfi/matrix/jgemmx.f	92.0	10/08/98 14:37:14""
        entry JGEMMX_
     $			( m, n, k, alpha, a, inc1a, inc2a, 
     $			b, inc1b, inc2b, beta, c, inc1c, inc2c )
C       Replace the type*len with KIND when f90 is the gen compiler for mpp.
        integer(KIND=8)	alpha, beta
C	integer*8	alpha, beta
 	integer(KIND=8)	temp
C	integer*8	temp
 	integer(KIND=8)	a( * )
C	integer*8	a( * )
 	integer(KIND=8)	b( * )
C	integer*8	b( * )
 	integer(KIND=8)	c( * )
C	integer*8 	c( * )

	include 'xgemmx.h'
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vfm3xS
code,"*> \brief \b SGETSLS
*
*  Definition:
*  ===========
*
*       SUBROUTINE SGETSLS( TRANS, M, N, NRHS, A, LDA, B, LDB,
*     $                     WORK, LWORK, INFO )
*
*       .. Scalar Arguments ..
*       CHARACTER          TRANS
*       INTEGER            INFO, LDA, LDB, LWORK, M, N, NRHS
*       ..
*       .. Array Arguments ..
*       REAL               A( LDA, * ), B( LDB, * ), WORK( * )
*       ..
*
*
*> \par Purpose:
*  =============
*>
*> \verbatim
*>
*> SGETSLS solves overdetermined or underdetermined real linear systems
*> involving an M-by-N matrix A, using a tall skinny QR or short wide LQ
*> factorization of A.  It is assumed that A has full rank.
*>
*>
*>
*> The following options are provided:
*>
*> 1. If TRANS = 'N' and m >= n:  find the least squares solution of
*>    an overdetermined system, i.e., solve the least squares problem
*>                 minimize || B - A*X ||.
*>
*> 2. If TRANS = 'N' and m < n:  find the minimum norm solution of
*>    an underdetermined system A * X = B.
*>
*> 3. If TRANS = 'T' and m >= n:  find the minimum norm solution of
*>    an undetermined system A**T * X = B.
*>
*> 4. If TRANS = 'T' and m < n:  find the least squares solution of
*>    an overdetermined system, i.e., solve the least squares problem
*>                 minimize || B - A**T * X ||.
*>
*> Several right hand side vectors b and solution vectors x can be
*> handled in a single call; they are stored as the columns of the
*> M-by-NRHS right hand side matrix B and the N-by-NRHS solution
*> matrix X.
*> \endverbatim
*
*  Arguments:
*  ==========
*
*> \param[in] TRANS
*> \verbatim
*>          TRANS is CHARACTER*1
*>          = 'N': the linear system involves A;
*>          = 'T': the linear system involves A**T.
*> \endverbatim
*>
*> \param[in] M
*> \verbatim
*>          M is INTEGER
*>          The number of rows of the matrix A.  M >= 0.
*> \endverbatim
*>
*> \param[in] N
*> \verbatim
*>          N is INTEGER
*>          The number of columns of the matrix A.  N >= 0.
*> \endverbatim
*>
*> \param[in] NRHS
*> \verbatim
*>          NRHS is INTEGER
*>          The number of right hand sides, i.e., the number of
*>          columns of the matrices B and X. NRHS >=0.
*> \endverbatim
*>
*> \param[in,out] A
*> \verbatim
*>          A is REAL array, dimension (LDA,N)
*>          On entry, the M-by-N matrix A.
*>          On exit,
*>          A is overwritten by details of its QR or LQ
*>          factorization as returned by SGEQR or SGELQ.
*> \endverbatim
*>
*> \param[in] LDA
*> \verbatim
*>          LDA is INTEGER
*>          The leading dimension of the array A.  LDA >= max(1,M).
*> \endverbatim
*>
*> \param[in,out] B
*> \verbatim
*>          B is REAL array, dimension (LDB,NRHS)
*>          On entry, the matrix B of right hand side vectors, stored
*>          columnwise; B is M-by-NRHS if TRANS = 'N', or N-by-NRHS
*>          if TRANS = 'T'.
*>          On exit, if INFO = 0, B is overwritten by the solution
*>          vectors, stored columnwise:
*>          if TRANS = 'N' and m >= n, rows 1 to n of B contain the least
*>          squares solution vectors.
*>          if TRANS = 'N' and m < n, rows 1 to N of B contain the
*>          minimum norm solution vectors;
*>          if TRANS = 'T' and m >= n, rows 1 to M of B contain the
*>          minimum norm solution vectors;
*>          if TRANS = 'T' and m < n, rows 1 to M of B contain the
*>          least squares solution vectors.
*> \endverbatim
*>
*> \param[in] LDB
*> \verbatim
*>          LDB is INTEGER
*>          The leading dimension of the array B. LDB >= MAX(1,M,N).
*> \endverbatim
*>
*> \param[out] WORK
*> \verbatim
*>          (workspace) REAL array, dimension (MAX(1,LWORK))
*>          On exit, if INFO = 0, WORK(1) contains optimal (or either minimal
*>          or optimal, if query was assumed) LWORK.
*>          See LWORK for details.
*> \endverbatim
*>
*> \param[in] LWORK
*> \verbatim
*>          LWORK is INTEGER
*>          The dimension of the array WORK.
*>          If LWORK = -1 or -2, then a workspace query is assumed.
*>          If LWORK = -1, the routine calculates optimal size of WORK for the
*>          optimal performance and returns this value in WORK(1).
*>          If LWORK = -2, the routine calculates minimal size of WORK and 
*>          returns this value in WORK(1).
*> \endverbatim
*>
*> \param[out] INFO
*> \verbatim
*>          INFO is INTEGER
*>          = 0:  successful exit
*>          < 0:  if INFO = -i, the i-th argument had an illegal value
*>          > 0:  if INFO =  i, the i-th diagonal element of the
*>                triangular factor of A is zero, so that A does not have
*>                full rank; the least squares solution could not be
*>                computed.
*> \endverbatim
*
*  Authors:
*  ========
*
*> \author Univ. of Tennessee
*> \author Univ. of California Berkeley
*> \author Univ. of Colorado Denver
*> \author NAG Ltd.
*
*> \date June 2017
*
*> \ingroup realGEsolve
*
*  =====================================================================
      SUBROUTINE SGETSLS( TRANS, M, N, NRHS, A, LDA, B, LDB,
     $      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h33icv
code,"! <testinfo>
! test_generator=config/mercurium-fortran
! </testinfo>
subroutine w3reddat()
integer,dimension(5),parameter:: itd=(/1,24,1440,86400,86400000/), itm=itd(5)/itd

PRINT *, itm(2:5)
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BfDV6B
code,"!
! Copyright (C) 2001-2007 Quantum ESPRESSO group
! This file is distributed under the terms of the
! GNU General Public License. See the file `License'
! in the root directory of the present distribution,
! or http://www.gnu.org/copyleft/gpl.txt .
!
!
!----------------------------------------------------------------------
subroutine stres_har (sigmahar)
  !----------------------------------------------------------------------
  !
  USE kinds, ONLY : DP
  USE constants, ONLY : e2, fpi
  USE cell_base, ONLY: omega, tpiba2
  USE ener,      ONLY: ehart
  USE fft_base,  ONLY : dfftp
  USE fft_interfaces,ONLY : fwfft
  USE gvect,     ONLY: ngm, gstart, nl, g, gg
  USE lsda_mod,  ONLY: nspin
  USE scf,       ONLY: rho
  USE control_flags,        ONLY: gamma_only
  USE wavefunctions_module, ONLY : psic
  USE mp_global, ONLY: intra_pool_comm, intra_bgrp_comm
  USE mp,        ONLY: mp_sum

  implicit none
  !
  real(DP) :: sigmahar (3, 3), shart, g2
  real(DP), parameter :: eps = 1.d-8
  integer :: is, ig, l, m, nspin0

  sigmahar(:,:) = 0.d0
  psic (:) = (0.d0, 0.d0)
  nspin0=nspin
  if (nspin==4) nspin0=1
  do is = 1, nspin0
     call daxpy (dfftp%nnr, 1.d0, rho%of_r (1, is), 1, psic, 2)
  enddo

  CALL fwfft ('Dense', psic, dfftp)
  ! psic contains now the charge density in G space
  ! the  G=0 component is not computed
  do ig = gstart, ngm
     g2 = gg (ig) * tpiba2
     shart = psic (nl (ig) ) * CONJG(psic (nl (ig) ) ) / g2
     do l = 1, 3
        do m = 1, l
           sigmahar (l, m) = sigmahar (l, m) + shart * tpiba2 * 2 * &
                g (l, ig) * g (m, ig) / g2
        enddo
     enddo
  enddo
  !
  call mp_sum(  sigmahar, intra_bgrp_comm )
  !
  if (gamma_only) then
     sigmahar(:,:) =       fpi * e2 * sigmahar(:,:)
  else
     sigmahar(:,:) = 0.5d0 * fpi * e2 * sigmahar(:,:)
  end if
  do l = 1, 3
     sigmahar (l, l) = sigmahar (l, l) - ehart / omega
  enddo
  do l = 1, 3
     do m = 1, l - 1
        sigmahar (m, l) = sigmahar (l, m)
     enddo
  enddo

  sigmahar(:,:) = -sigmahar(:,:)

  return
end subroutine stres_har

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oVVbj-
code,"!-----------------------------------------------------------------------
! PSCF - Polymer Self-Consistent Field Theory
! Copyright (2007) David C. Morse
! email: morse@cems.umn.edu
!
! This program is free software; you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation. A copy of this license is included in
! the LICENSE file in the top-level PSCF directory. 
!-----------------------------------------------------------------------
!****m scf/field_io_mod
! MODULE
!   field_io_mod
! PURPOSE
!   Read and/or write field coeficients to data files. Routines 
!   input_field and output_field read and write representations of a
!   N_monomer component field as a list of coefficients of symetrized
!   basis functions. Routine output_field_grid outputs values of the
!   field on an FFT grid. 
! SOURCE
!-----------------------------------------------------------------------
module field_io_mod
   use const_mod
   use io_mod
   use string_mod,     only : int_string
   use version_mod,    only : version_type, input_version, output_version
   use basis_mod,      only : N_star, which_wave, star_of_wave, &
                              wave_of_star, star_count, valid_wave
   use chemistry_mod,  only : N_monomer
   use unit_cell_mod,  only : output_unit_cell, N_cell_param, cell_param
   use fft_mod,        only : fft_plan, create_fft_plan, ifft
   use grid_basis_mod, only : basis_to_kgrid
   implicit none

   private
   public  :: input_field
   public  :: output_field
   public  :: output_field_grid
   !***

contains

   !-------------------------------------------------------------------
   !****p field_io_mod/input_field
   ! SUBROUTINE
   !   input_field(field,field_unit)
   ! PURPOSE
   !   Read field components from supplied io-unit
   ! ARGUMENTS
   !   field      =  real array containing the coefficients of 
   !                 symmetry-adapted basis functions.
   !   field_unit =  unit number of file to read (open for reading)
   ! SOURCE
   !-------------------------------------------------------------------
   subroutine input_field(field,field_unit)

   real(long),intent(INOUT) :: field(:,:)  ! (monomer,basis_function)
   integer,intent(IN)       :: field_unit
   !***

   integer            :: i, N, G(3), N_arm, i_star
   real(long)         :: swap(N_monomer)
   type(version_type) :: version

   ! Input file format version (e.g., `format 1 0')
   call input_version(version, field_unit)

   ! skip 12 header lines (input_unit_cell, group_name, N_monomer)
   do i=1,12
      read(field_unit,*)
   enddo

   call input(N,'N_star in field file=',i=field_unit)
   field = 0.0_long
   do i = 1, N
      read(field_unit,*) swap,G(1:dim),N_arm
      if ( valid_wave(G) ) then
         i_star = star_of_wave( which_wave(G(1),G(2),G(3)) )
         field(:,i_star) = swap * dsqrt( dble(N_arm) / dble(star_count(i_star)) )
      end if
   end do

   end subroutine input_field
   !==============================================================


   !-------------------------------------------------------------------
   !****p field_io_mod/output_field
   ! SUBROUTINE
   !    output_field(field,field_unit,group_name)
   ! PURPOSE
   !    store coefficients of omega or rho field to supplied io-unit
   ! ARGUMENTS
   !    field       =  field array to store the coefficients
   !    field_unit  =  io-unit for files storing the field coefficients
   !    group_name  =  space group name, supplementary information
   ! SOURCE
   !-------------------------------------------------------------------
   subroutine output_field(field,field_unit,group_name,N_basis_out)

   real(long),  intent(IN)       ::  field(:,:)
   integer,     intent(IN)       ::  field_unit
   character(*),intent(IN)       ::  group_name
   integer,optional,intent(IN)   ::  N_basis_out
   !***

   integer            :: i, N_output
   character(25)      :: fmt
   type(version_type) :: version

   N_output = N_star
   if ( present(N_basis_out) ) N_output = min(N_basis_out, N_star)

   ! Output file format version
   version%major = 1
   version%minor = 0
   call output_version(version, field_unit)

   ! Output unit cell, group_name, N_monomer, and N_star
   call output_unit_cell(field_unit,'F')
   call output(trim(group_name),'group_name',o=field_unit)
   call output(N_monomer,'N_monomer',o=field_unit)
   call output(N_output,'N_star',o=field_unit)

   fmt = '('//trim(int_string(N_monomer))//'ES20.12,4X,'
   fmt = trim(fmt)//trim(int_string(dim))//'I4,I6'//')'
   do i = 1, N_output
      write(field_unit,FMT=trim(fmt)) field(:,i), &
                          wave_of_star(1:dim,i), star_count(i)
   enddo

   end subroutine output_field
   !===============================================================


   !--------------------------------------------------------------   
   !****p field_io_mod/output_field_grid
   ! SUBROUTINE
   !    output_field_grid(field,field_unit,ngrid)
   ! PURPOSE
   !   Outputs field on a real-space FFT grid
   ! ARGUMENTS
   !   field      -  density/potential fields to be visual",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",U1ulbO
code,"! { dg-do run }

! PR fortran/37099
! Check for correct results when comparing array-section-substrings.

! This is the original test from the PR.
! Contributed by Dominique d'Humieres <dominiq@lps.ens.fr>

module xparams
  integer,parameter :: exprbeg=100,exprend=154
  character(*),dimension(exprbeg:exprend),parameter :: &
      exprs=(/'nint()  ','log10() ','sqrt()  ','acos()  ','asin()  ',   &
      'atan()  ','cosh()  ','sinh()  ','tanh()  ','int()   ',           &
      'cos()   ','sin()   ','tan()   ','exp()   ','log()   ','abs()   ',&
      'delta() ','step()  ','rect()  ','max(,)  ','min(,)  ','bj0()   ',&
      'bj1()   ','bjn(,)  ','by0()   ','by1()   ','byn(,)  ','logb(,) ',&
      'erf()   ','erfc()  ','lgamma()','gamma() ','csch()  ','sech()  ',&
      'coth()  ','lif(,,) ','gaus()  ','sinc()  ','atan2(,)','mod(,)  ',&
      'nthrt(,)','ramp()  ','fbi()   ','fbiq()  ','uran(,) ','aif(,,,)',&
      'sgn()   ','cbrt()  ','fact()  ','somb()  ','bk0()   ','bk1()   ',&
      'bkn(,)  ','bbi(,,) ','bbiq(,,)'/)
  logical :: tmp(55,26)
  character(26) :: al = 'abcdefghijklmnopqrstuvwxyz'
end

program pack_bug
  use xparams
    do i = 1, 1
      tmp(:,i) = (exprs(:)(1:1)==al(i:i))
      print '(55L1)', exprs(:)(1:1)=='a'
      print '(55L1)', tmp(:,i)

      if (any ((exprs(:)(1:1)=='a') .neqv. tmp(:,i))) then
        STOP 1
      end if
    end do
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",p_qCll
code,"module nli_0032
use kind_values
use lattice
use proclist_constants
implicit none
contains
pure function nli_co_desorption_bridge(cell)
    integer(kind=iint), dimension(4), intent(in) :: cell
    integer(kind=iint) :: nli_co_desorption_bridge

    select case(get_species(cell + (/0, 0, 0, ruo2_bridge/)))
      case(co)
        nli_co_desorption_bridge = co_desorption_bridge; return
      case default
        nli_co_desorption_bridge = 0; return
    end select

end function nli_co_desorption_bridge

end module
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VqaYGE
code,"program pingpong_put
  implicit none
  integer iter, i, j, me, loop, trans_size(21), data_size, stride, last_element(21)
  integer t1, t2, t_rate, t_max
  double precision :: loc_buf(2097152), rmt_buf(2097152)[*], diff

  iter = 21  ! log2(2097152) -> 21
  loop = 100
  stride = 2

  do i = 1, iter
     trans_size(i) = 2 ** i
     last_element(i) = (trans_size(i) - 1) * stride + 1
  end do

  loc_buf(:) = -1
  rmt_buf(:) = 9
  me = this_image()

  if( me .eq. 1) then
     write(*, *) ""DATASIZE  TIME(sec)  BANDWIDTH(MB/s)""
  end if

  do i = 1, iter
     sync all
     call system_clock(t1)
     do j = 1, loop
        if (me .eq. 1) then
           rmt_buf(1:last_element(i):stride)[2] = loc_buf(1:last_element(i):stride);
           do while (rmt_buf(1) .ne. -1)
              sync memory
           end do
           do while (rmt_buf(last_element(i)) .ne. -1)
              sync memory
           end do
           rmt_buf(1) = 9
           rmt_buf(last_element(i)) = 9
        else
           do while (rmt_buf(1) .ne. -1)
              sync memory
           end do
           do while (rmt_buf(last_element(i)) .ne. -1)
              sync memory
           end do
           rmt_buf(1) = 9
           rmt_buf(last_element(i)) = 9
           rmt_buf(1:last_element(i):stride)[1] = loc_buf(1:last_element(i):stride);
        endif
     end do
     sync all
     call system_clock(t2, t_rate, t_max)
     if (me .eq. 1) then
        diff = (t2-t1)/dble(t_rate)
        data_size = trans_size(i) * sizeof(diff)
        write(*, *) data_size, diff, (data_size*2) / diff / 1024 / 1024 * loop
     end if
  end do

end program pingpong_put
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TJ0idU
code,"!
! Copyright (C) 2002-2005 Quantum ESPRESSO group
! This file is distributed under the terms of the
! GNU General Public License. See the file `License'
! in the root directory of the present distribution,
! or http://www.gnu.org/copyleft/gpl.txt .
!
! written by Carlo Cavazzoni

!-----------------------------------------------------------------------

   SUBROUTINE writefile_x                                         &
     &     ( h,hold,nfi,c0,cm,taus,tausm,vels,velsm,acc,           &
     &       lambda,lambdam,descla,xnhe0,xnhem,vnhe,xnhp0,xnhpm,vnhp,nhpcl,nhpdim,ekincm,&
     &       xnhh0,xnhhm,vnhh,velh, fion, tps, mat_z, occ_f, rho )
!-----------------------------------------------------------------------
!
      USE kinds,            ONLY: DP
      USE ions_base,        ONLY: nsp, na, cdmi, taui
      USE cell_base,        ONLY: s_to_r
#if defined (__OLDXML)
      USE cp_restart,       ONLY: cp_writefile
#else
      USE cp_restart_new,   ONLY: cp_writefile
#endif
      USE cp_restart_new,   ONLY: cp_write_zmat
      USE cp_interfaces,    ONLY: set_evtot, set_eitot, c_bgrp_expand, &
           c_bgrp_pack
      USE electrons_base,   ONLY: nspin, nbnd, nbsp, iupdwn, nupdwn, nbspx
      USE electrons_module, ONLY: ei
      USE io_files,         ONLY: tmp_dir
      USE ensemble_dft,     ONLY: tens
      USE mp,               ONLY: mp_bcast
      USE control_flags,    ONLY: tksw, ndw, io_level, twfcollect
      USE electrons_module, ONLY: collect_c
      USE descriptors,      ONLY: la_descriptor
      USE gvecw,            ONLY: ngw
      USE wannier_module,   ONLY : wfc ! BS

!
      implicit none
      integer, INTENT(IN) ::  nfi
      REAL(DP), INTENT(IN) :: h(3,3), hold(3,3)
      complex(DP), INTENT(IN) :: c0(:,:), cm(:,:)
      REAL(DP), INTENT(IN) :: tausm(:,:), taus(:,:), fion(:,:)
      REAL(DP), INTENT(IN) :: vels(:,:), velsm(:,:)
      REAL(DP), INTENT(IN) :: acc(:), lambda(:,:,:), lambdam(:,:,:)
      REAL(DP), INTENT(IN) :: xnhe0, xnhem, vnhe, ekincm
      REAL(DP), INTENT(IN) :: xnhp0(:), xnhpm(:), vnhp(:)
      integer,      INTENT(in) :: nhpcl, nhpdim
      REAL(DP), INTENT(IN) :: xnhh0(3,3),xnhhm(3,3),vnhh(3,3),velh(3,3)
      REAL(DP), INTENT(in) :: tps
      REAL(DP), INTENT(in) :: rho(:,:)
      REAL(DP), INTENT(in) :: occ_f(:)
      REAL(DP), INTENT(in) :: mat_z(:,:,:)
      TYPE(la_descriptor), INTENT(IN) :: descla(:)

      REAL(DP) :: ht(3,3), htm(3,3), htvel(3,3), gvel(3,3)
      INTEGER  :: nk = 1, ispin, i, ib, ierr
      REAL(DP) :: xk(3,1) = 0.0d0, wk(1) = 2.0d0
      COMPLEX(DP), ALLOCATABLE :: ctot(:,:)
      REAL(DP),    ALLOCATABLE :: eitot(:,:)
      INTEGER  :: nupdwn_tot( 2 ), iupdwn_tot( 2 )

      if ( ndw < 1 ) then
         !
         ! Do not write restart file if the unit number 
         ! is negative, this is used mainly for benchmarks and tests
         !
         return
         !
      end if

      CALL c_bgrp_expand( c0 )
      CALL c_bgrp_expand( cm )

      ht     = TRANSPOSE( h ) 
      htm    = TRANSPOSE( hold ) 
      htvel  = TRANSPOSE( velh ) 
      gvel   = 0.0d0
      
      nupdwn_tot = nupdwn 
      iupdwn_tot(1) = iupdwn(1)
      iupdwn_tot(2) = nupdwn(1) + 1
      !
      ALLOCATE( eitot( nupdwn_tot(1), nspin ) )
      !
      CALL set_eitot( eitot )
      !
      IF( tksw ) THEN
         !
         ALLOCATE( ctot( SIZE( c0, 1 ), nupdwn_tot(1) * nspin ) )
         !
         CALL set_evtot( c0, ctot, lambda, descla, iupdwn_tot, nupdwn_tot )
         !
      END IF
      !
      CALL cp_writefile( ndw, .TRUE., nfi, tps, acc, nk, xk, wk,   &
           ht, htm, htvel, gvel, xnhh0, xnhhm, vnhh, taui, cdmi , taus,        &
           vels, tausm, velsm, fion, vnhp, xnhp0, xnhpm, nhpcl,nhpdim, occ_f , &
           occ_f , lambda, lambdam, xnhe0, xnhem, vnhe, ekincm, eitot,         &
           rho, c0, cm, ctot, iupdwn, nupdwn, iupdwn_tot, nupdwn_tot, wfc )
      ! BS added wfc
      !
      IF( tens ) CALL cp_write_zmat( ndw, mat_z, ierr )
      !
      DEALLOCATE( eitot )
      !
      IF( tksw ) DEALLOCATE( ctot )
      !
      CALL c_bgrp_pack( c0 )
      CALL c_bgrp_pack( cm )

      return
      end subroutine writefile_x

!-----------------------------------------------------------------------
      subroutine readfile_x                                        &
     &     ( flag, h,hold,nfi,c0,cm,taus,tausm,vels,velsm,acc,    &
     &       lambda,lambdam,xnhe0,xnhem,vnhe,xnhp0,xnhpm,vnhp,nhpcl,nhpdim,ekincm,&
     &       xnhh0,xnhhm,vnhh,velh,&
     &       fion, tps, mat_z, occ_f )
!-----------------------------------------------------------------------
!
! read from file and distribute data calculated in preceding iterations
!
      USE kinds,          ONLY : DP
      USE io_files,       ONLY : tmp_dir
      USE electrons_base, ONLY : nbnd, nbsp, nspin, nupdwn, iupdwn, keep_occ, nbspx
      USE gvecw,          ONLY : ngw
      USE ions_base,      ONLY : nsp, na, cdmi, taui
#if defined (__OLDXML)
      USE cp_restart,       ONLY: cp_readfile, cp_read_cell, cp_read_wfc
#else
      USE cp_restart_new,   ONLY: cp_readfile, cp_read_cell, cp_read_wfc
#endif
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BMmzbb
code,"module eapVarApp
contains
  function f(x)
    != unit 'a :: x
    real :: x, j, k, l, f
    j = x
    k = g(j*j)
    l = j * g(j * j * j)
    f = k
  end function f
  function g(x)
    != unit 'b :: x
    real :: x, n, m, g
    m = x
    n = m
    g = n
  end function g
  function h(x)
    != unit m :: x
    real :: x, h, y
    y = f(x)
    h = y
  end function h
end module eapVarApp
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4_Hj6N
code,"      SUBROUTINE PASSF4(IDO,L1,CC,CH,WA1,WA2,WA3)
      DOUBLE PRECISION CC
      DOUBLE PRECISION CH
      DOUBLE PRECISION WA1
      DOUBLE PRECISION WA2
      DOUBLE PRECISION WA3
      DOUBLE PRECISION TI1
      DOUBLE PRECISION TI2
      DOUBLE PRECISION TR4
      DOUBLE PRECISION TI3
      DOUBLE PRECISION TR1
      DOUBLE PRECISION TR2
      DOUBLE PRECISION TI4
      DOUBLE PRECISION TR3
      DOUBLE PRECISION CR3
      DOUBLE PRECISION CI3
      DOUBLE PRECISION CR2
      DOUBLE PRECISION CR4
      DOUBLE PRECISION CI2
      DOUBLE PRECISION CI4
      DIMENSION CC(IDO,4,L1),CH(IDO,L1,4),WA1(*),WA2(*),WA3(*)

      IF (IDO.NE.2) GO TO 102
      DO 101 K = 1,L1
          TI1 = CC(2,1,K) - CC(2,3,K)
          TI2 = CC(2,1,K) + CC(2,3,K)
          TR4 = CC(2,2,K) - CC(2,4,K)
          TI3 = CC(2,2,K) + CC(2,4,K)
          TR1 = CC(1,1,K) - CC(1,3,K)
          TR2 = CC(1,1,K) + CC(1,3,K)
          TI4 = CC(1,4,K) - CC(1,2,K)
          TR3 = CC(1,2,K) + CC(1,4,K)
          CH(1,K,1) = TR2 + TR3
          CH(1,K,3) = TR2 - TR3
          CH(2,K,1) = TI2 + TI3
          CH(2,K,3) = TI2 - TI3
          CH(1,K,2) = TR1 + TR4
          CH(1,K,4) = TR1 - TR4
          CH(2,K,2) = TI1 + TI4
          CH(2,K,4) = TI1 - TI4
  101 CONTINUE
      RETURN
  102 DO 104 K = 1,L1
          DO 103 I = 2,IDO,2
              TI1 = CC(I,1,K) - CC(I,3,K)
              TI2 = CC(I,1,K) + CC(I,3,K)
              TI3 = CC(I,2,K) + CC(I,4,K)
              TR4 = CC(I,2,K) - CC(I,4,K)
              TR1 = CC(I-1,1,K) - CC(I-1,3,K)
              TR2 = CC(I-1,1,K) + CC(I-1,3,K)
              TI4 = CC(I-1,4,K) - CC(I-1,2,K)
              TR3 = CC(I-1,2,K) + CC(I-1,4,K)
              CH(I-1,K,1) = TR2 + TR3
              CR3 = TR2 - TR3
              CH(I,K,1) = TI2 + TI3
              CI3 = TI2 - TI3
              CR2 = TR1 + TR4
              CR4 = TR1 - TR4
              CI2 = TI1 + TI4
              CI4 = TI1 - TI4
              CH(I-1,K,2) = WA1(I-1)*CR2 + WA1(I)*CI2
              CH(I,K,2) = WA1(I-1)*CI2 - WA1(I)*CR2
              CH(I-1,K,3) = WA2(I-1)*CR3 + WA2(I)*CI3
              CH(I,K,3) = WA2(I-1)*CI3 - WA2(I)*CR3
              CH(I-1,K,4) = WA3(I-1)*CR4 + WA3(I)*CI4
              CH(I,K,4) = WA3(I-1)*CI4 - WA3(I)*CR4
  103     CONTINUE
  104 CONTINUE
      RETURN
      END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gadFnp
code,"package corehttp

// TODO: move to IPNS
const WebUIPath = ""/ipfs/QmXc9raDM1M5G5fpBnVyQ71vR4gbnskwnB9iMEzBuLgvoZ""

// this is a list of all past webUI paths.
var WebUIPaths = []string{
	WebUIPath,
	""/ipfs/QmenEBWcAk3tN94fSKpKFtUMwty1qNwSYw3DMDFV6cPBXA"",
	""/ipfs/QmUnXcWZC5Ve21gUseouJsH5mLAyz5JPp8aHsg8qVUUK8e"",
	""/ipfs/QmSDgpiHco5yXdyVTfhKxr3aiJ82ynz8V14QcGKicM3rVh"",
	""/ipfs/QmRuvWJz1Fc8B9cTsAYANHTXqGmKR9DVfY5nvMD1uA2WQ8"",
	""/ipfs/QmQLXHs7K98JNQdWrBB2cQLJahPhmupbDjRuH1b9ibmwVa"",
	""/ipfs/QmXX7YRpU7nNBKfw75VG7Y1c3GwpSAGHRev67XVPgZFv9R"",
	""/ipfs/QmXdu7HWdV6CUaUabd9q2ZeA4iHZLVyDRj3Gi4dsJsWjbr"",
	""/ipfs/QmaaqrHyAQm7gALkRW8DcfGX3u8q9rWKnxEMmf7m9z515w"",
	""/ipfs/QmSHDxWsMPuJQKWmVA1rB5a3NX2Eme5fPqNb63qwaqiqSp"",
	""/ipfs/QmctngrQAt9fjpQUZr7Bx3BsXUcif52eZGTizWhvcShsjz"",
	""/ipfs/QmS2HL9v5YeKgQkkWMvs1EMnFtUowTEdFfSSeMT4pos1e6"",
	""/ipfs/QmR9MzChjp1MdFWik7NjEjqKQMzVmBkdK3dz14A6B5Cupm"",
	""/ipfs/QmRyWyKWmphamkMRnJVjUTzSFSAAZowYP4rnbgnfMXC9Mr"",
	""/ipfs/QmU3o9bvfenhTKhxUakbYrLDnZU7HezAVxPM6Ehjw9Xjqy"",
	""/ipfs/QmPhnvn747LqwPYMJmQVorMaGbMSgA7mRRoyyZYz3DoZRQ"",
}

var WebUIOption = RedirectOption(""webui"", WebUIPath)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IVV6au
code,"/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mungeopts

import (
	""time""

	""k8s.io/kubernetes/pkg/util/sets""
	""k8s.io/test-infra/mungegithub/options""
)

var (
	// Server holds the values of options used by mungers that serve web services.
	Server struct {
		Address string
		WWWRoot string
	}

	// GCS holds the values of GCS options.
	GCS struct {
		BucketName string
		LogDir     string

		// PullLogDir is the directory of the pr builder jenkins
		PullLogDir string

		// PullKey is a string to look for in a job name to figure out if it's
		// a pull (presubmit) job.
		PullKey string
	}

	// RequiredContexts holds options that specify which status contexts are required for various
	// actions.
	RequiredContexts struct {
		Merge  []string
		Retest []string
	}

	// Maximum time to wait for tests in a PR to start or finish.
	// This should be >2x as long as it normally takes for a PR
	// to complete, to avoid congestion collapse in the queue.
	PRMaxWaitTime time.Duration
)

// RegisterOptions registers options that may be used by any munger, feature, or report. It returns
// any options that require a restart when changed.
func RegisterOptions(opts *options.Options) sets.String {
	// Options for mungers that run web servers.
	opts.RegisterString(&Server.Address, ""address"", "":8080"", ""The address to listen on for HTTP Status"")
	opts.RegisterString(&Server.WWWRoot, ""www"", ""www"", ""Path to static web files to serve from the webserver"")

	// GCS options:
	opts.RegisterString(&GCS.BucketName, ""gcs-bucket"", """", ""Name of GCS bucket."")
	opts.RegisterString(&GCS.LogDir, ""gcs-logs-dir"", """", ""Directory containing test logs."")
	opts.RegisterString(&GCS.PullLogDir, ""pull-logs-dir"", """", ""Directory of the PR builder."")
	opts.RegisterString(&GCS.PullKey, ""pull-key"", """", ""String to look for in job name for it to be a pull (presubmit) job."")

	// Status context options:
	opts.RegisterStringSlice(&RequiredContexts.Retest, ""required-retest-contexts"", []string{}, ""Comma separate list of statuses which will be retested and which must come back green after the `retest-body` comment is posted to a PR"")
	opts.RegisterStringSlice(&RequiredContexts.Merge, ""required-contexts"", []string{}, ""Comma separate list of status contexts required for a PR to be considered ok to merge"")

	opts.RegisterDuration(&PRMaxWaitTime, ""pr-max-wait-time"", 2*time.Hour, ""Maximum time to wait for tests in a PR to start or finish"")

	return sets.NewString(""address"", ""www"")
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tPULDn
code,"package main

import (
	""github.com/ActiveState/tail""
	""github.com/ugorji/go/codec""
	""io/ioutil""
	""log""
	""os""
	""reflect""
	""regexp""
	""strconv""
	""strings""
	""time""
)

type inputTail struct {
	path     string
	format   string
	tag      string
	pos_file string

	offset        int64
	sync_interval int
	codec         *codec.JsonHandle
	time_key      string
}

func (self *inputTail) Init(f map[string]string) error {

	self.sync_interval = 2

	value := f[""path""]
	if len(value) > 0 {
		self.path = value
	}

	value = f[""format""]
	if len(value) > 0 {
		self.format = value
		if value == ""json"" {
			_codec := codec.JsonHandle{}
			_codec.MapType = reflect.TypeOf(map[string]interface{}(nil))
			self.codec = &_codec

			value = f[""time_key""]
			if len(value) > 0 {
				self.time_key = value
			} else {
				self.time_key = ""time""
			}
		}
	}

	value = f[""tag""]
	if len(value) > 0 {
		self.tag = value
	}

	value = f[""pos_file""]
	if len(value) > 0 {
		self.pos_file = value

		str, err := ioutil.ReadFile(self.pos_file)
		if err != nil {
			log.Println(""ioutil.ReadFile:"", err)
		}

		f, err := os.Open(self.path)
		if err != nil {
			log.Println(""os.Open:"", err)
		}

		info, err := f.Stat()
		if err != nil {
			log.Println(""f.Stat:"", err)
			self.offset = 0
		} else {
			offset, _ := strconv.Atoi(string(str))
			if int64(offset) > info.Size() {
				self.offset = info.Size()
			} else {
				self.offset = int64(offset)
			}
		}
	}

	value = f[""sync_interval""]
	if len(value) > 0 {
		sync_interval, err := strconv.Atoi(value)
		if err != nil {
			return err
		}
		self.sync_interval = sync_interval
	}

	return nil
}

func (self *inputTail) Run(runner InputRunner) error {
	defer func() {
		if err := recover(); err != nil {
			logs.Fatalln(""recover panic at err:"", err)
		}
	}()

	var seek int
	if self.offset > 0 {
		seek = os.SEEK_SET
	} else {
		seek = os.SEEK_END
	}

	t, err := tail.TailFile(self.path, tail.Config{
		Poll:      true,
		ReOpen:    true,
		Follow:    true,
		MustExist: false,
		Location:  &tail.SeekInfo{int64(self.offset), seek}})
	if err != nil {
		return err
	}

	f, err := os.OpenFile(self.pos_file, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0600)
	if err != nil {
		log.Fatalln(""os.OpenFile"", err)
	}
	defer f.Close()

	var re regexp.Regexp
	if string(self.format[0]) == string(""/"") || string(self.format[len(self.format)-1]) == string(""/"") {
		format := strings.Trim(self.format, ""/"")
		trueformat := regexp.MustCompile(""\\(\\?<"").ReplaceAllString(format, ""(?P<"")
		if trueformat != format {
			log.Printf(""pos_file:%s, format:%s"", self.path, trueformat)
		}
		re = *regexp.MustCompile(trueformat)
		self.format = ""regexp""
	} else if self.format == ""json"" {

	}

	tick := time.NewTicker(time.Second * time.Duration(self.sync_interval))
	count := 0

	for {
		select {
		case <-tick.C:
			{
				if count > 0 {
					offset, err := t.Tell()
					if err != nil {
						log.Println(""Tell return error: "", err)
						continue
					}

					str := strconv.Itoa(int(offset))

					_, err = f.WriteAt([]byte(str), 0)
					if err != nil {
						log.Println(""f.WriteAt"", err)
						return err
					}

					count = 0
				}
			}
		case line := <-t.Lines:
			{
				pack := <-runner.InChan()

				pack.MsgBytes = []byte(line.Text)
				pack.Msg.Tag = self.tag
				pack.Msg.Timestamp = line.Time.Unix()

				if self.format == ""regexp"" {
					text := re.FindSubmatch([]byte(line.Text))
					if text == nil {
						pack.Recycle()
						continue
					}

					for i, name := range re.SubexpNames() {
						if len(name) > 0 {
							pack.Msg.Data[name] = string(text[i])
						}
					}
				} else if self.format == ""json"" {
					dec := codec.NewDecoderBytes([]byte(line.Text), self.codec)
					err := dec.Decode(&pack.Msg.Data)
					if err != nil {
						log.Println(""json.Unmarshal"", err)
						pack.Recycle()
						continue
					} else {
						t, ok := pack.Msg.Data[self.time_key]
						if ok {
							if time, xx := t.(uint64); xx {
								pack.Msg.Timestamp = int64(time)
								delete(pack.Msg.Data, self.time_key)
							} else if time64, oo := t.(int64); oo {
								pack.Msg.Timestamp = time64
								delete(pack.Msg.Data, self.time_key)
							} else {
								log.Println(""time is not int64, "", t, "" typeof:"", reflect.TypeOf(t))
								pack.Recycle()
								continue
							}
						}
					}
				}

				count++
				runner.RouterChan() <- pack
			}
		}
	}

	err = t.Wait()
	if err != nil {
		return err
	}

	return err
}

func init() {
	RegisterInput(""tail"", func() interface{} {
		return new(inputTail)
	})
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FuZAtQ
code,"/*
Copyright 2014 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package volume

import (
	""fmt""
	""net""
	""strings""
	""sync""

	""github.com/golang/glog""
	""k8s.io/kubernetes/pkg/api""
	""k8s.io/kubernetes/pkg/api/resource""
	""k8s.io/kubernetes/pkg/api/unversioned""
	clientset ""k8s.io/kubernetes/pkg/client/clientset_generated/internalclientset""
	""k8s.io/kubernetes/pkg/cloudprovider""
	""k8s.io/kubernetes/pkg/types""
	utilerrors ""k8s.io/kubernetes/pkg/util/errors""
	""k8s.io/kubernetes/pkg/util/io""
	""k8s.io/kubernetes/pkg/util/mount""
	""k8s.io/kubernetes/pkg/util/validation""
)

// VolumeOptions contains option information about a volume.
type VolumeOptions struct {
	// The attributes below are required by volume.Provisioner
	// TODO: refactor all of this out of volumes when an admin can configure
	// many kinds of provisioners.

	// Capacity is the size of a volume.
	Capacity resource.Quantity
	// AccessModes of a volume
	AccessModes []api.PersistentVolumeAccessMode
	// Reclamation policy for a persistent volume
	PersistentVolumeReclaimPolicy api.PersistentVolumeReclaimPolicy
	// PV.Name of the appropriate PersistentVolume. Used to generate cloud
	// volume name.
	PVName string
	// PVC.Name of the PersistentVolumeClaim; only set during dynamic provisioning.
	PVCName string
	// Unique name of Kubernetes cluster.
	ClusterName string
	// Tags to attach to the real volume in the cloud provider - e.g. AWS EBS
	CloudTags *map[string]string
	// Volume provisioning parameters from StorageClass
	Parameters map[string]string
	// Volume selector from PersistentVolumeClaim
	Selector *unversioned.LabelSelector
}

// VolumePlugin is an interface to volume plugins that can be used on a
// kubernetes node (e.g. by kubelet) to instantiate and manage volumes.
type VolumePlugin interface {
	// Init initializes the plugin.  This will be called exactly once
	// before any New* calls are made - implementations of plugins may
	// depend on this.
	Init(host VolumeHost) error

	// Name returns the plugin's name.  Plugins should use namespaced names
	// such as ""example.com/volume"".  The ""kubernetes.io"" namespace is
	// reserved for plugins which are bundled with kubernetes.
	GetPluginName() string

	// GetVolumeName returns the name/ID to uniquely identifying the actual
	// backing device, directory, path, etc. referenced by the specified volume
	// spec.
	// For Attachable volumes, this value must be able to be passed back to
	// volume Detach methods to identify the device to act on.
	// If the plugin does not support the given spec, this returns an error.
	GetVolumeName(spec *Spec) (string, error)

	// CanSupport tests whether the plugin supports a given volume
	// specification from the API.  The spec pointer should be considered
	// const.
	CanSupport(spec *Spec) bool

	// RequiresRemount returns true if this plugin requires mount calls to be
	// reexecuted. Atomically updating volumes, like Downward API, depend on
	// this to update the contents of the volume.
	RequiresRemount() bool

	// NewMounter creates a new volume.Mounter from an API specification.
	// Ownership of the spec pointer in *not* transferred.
	// - spec: The api.Volume spec
	// - pod: The enclosing pod
	NewMounter(spec *Spec, podRef *api.Pod, opts VolumeOptions) (Mounter, error)

	// NewUnmounter creates a new volume.Unmounter from recoverable state.
	// - name: The volume name, as per the api.Volume spec.
	// - podUID: The UID of the enclosing pod
	NewUnmounter(name string, podUID types.UID) (Unmounter, error)

	// ConstructVolumeSpec constructs a volume spec based on the given volume name
	// and mountPath. The spec may have incomplete information due to limited
	// information from input. This function is used by volume manager to reconstruct
	// volume spec by reading the volume directories from disk
	ConstructVolumeSpec(volumeName, mountPath string) (*Spec, error)
}

// PersistentVolumePlugin is an extended interface of VolumePlugin and is used
// by volumes that want to provide long term persistence of data
type PersistentVolumePlugin interface {
	VolumePlugin
	// GetAccessModes describes the ways a given volume can be accessed/mounted.
	GetAccessModes() []api.PersistentVolumeAccessMode
}

// RecyclableVolumePlugin is an extended interface of VolumePlugin and is used
// by persistent volumes that want to be recycled before being made available
// again to new claims
type RecyclableVolumePlugin interface {
	VolumePlugin
	// NewRecycler creates a new volume.Recycler which knows how to reclaim
	// this resource after the volume's release from a PersistentVolumeClaim
	NewRecycler(pvName string,",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u_cO0J
code,"package registry

import (
	""crypto/tls""
	""fmt""
	""log""
	""net/http""
	""strings""
)

type LogfCallback func(format string, args ...interface{})

/*
 * Discard log messages silently.
 */
func Quiet(format string, args ...interface{}) {
	/* discard logs */
}

/*
 * Pass log messages along to Go's ""log"" module.
 */
func Log(format string, args ...interface{}) {
	log.Printf(format, args...)
}

type Registry struct {
	URL    string
	Client *http.Client
	Logf   LogfCallback
}

/*
 * Create a new Registry with the given URL and credentials, then Ping()s it
 * before returning it to verify that the registry is available.
 *
 * You can, alternately, construct a Registry manually by populating the fields.
 * This passes http.DefaultTransport to WrapTransport when creating the
 * http.Client.
 */
func New(registryURL, username, password string) (*Registry, error) {
	transport := http.DefaultTransport

	return newFromTransport(registryURL, username, password, transport, Log)
}

/*
 * Create a new Registry, as with New, using an http.Transport that disables
 * SSL certificate verification.
 */
func NewInsecure(registryURL, username, password string) (*Registry, error) {
	transport := &http.Transport{
		TLSClientConfig: &tls.Config{
			// TODO: Why?
			InsecureSkipVerify: true, //nolint:gosec
		},
	}

	return newFromTransport(registryURL, username, password, transport, Log)
}

/*
 * Given an existing http.RoundTripper such as http.DefaultTransport, build the
 * transport stack necessary to authenticate to the Docker registry API. This
 * adds in support for OAuth bearer tokens and HTTP Basic auth, and sets up
 * error handling this library relies on.
 */
func WrapTransport(transport http.RoundTripper, url, username, password string) http.RoundTripper {
	tokenTransport := &TokenTransport{
		Transport: transport,
		Username:  username,
		Password:  password,
	}
	basicAuthTransport := &BasicTransport{
		Transport: tokenTransport,
		URL:       url,
		Username:  username,
		Password:  password,
	}
	errorTransport := &ErrorTransport{
		Transport: basicAuthTransport,
	}
	return errorTransport
}

func newFromTransport(registryURL, username, password string, transport http.RoundTripper, logf LogfCallback) (*Registry, error) {
	url := strings.TrimSuffix(registryURL, ""/"")
	transport = WrapTransport(transport, url, username, password)
	registry := &Registry{
		URL: url,
		Client: &http.Client{
			Transport: transport,
		},
		Logf: logf,
	}

	if err := registry.Ping(); err != nil {
		return nil, err
	}

	return registry, nil
}

func (r *Registry) url(pathTemplate string, args ...interface{}) string {
	pathSuffix := fmt.Sprintf(pathTemplate, args...)
	url := fmt.Sprintf(""%s%s"", r.URL, pathSuffix)
	return url
}

func (r *Registry) Ping() error {
	url := r.url(""/v2/"")
	r.Logf(""registry.ping url=%s"", url)
	resp, err := r.Client.Get(url)
	if resp != nil {
		defer resp.Body.Close()
	}
	return err
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8_A_xp
code,"// Copyright 2019 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package netutil

import ""net""

// AddrIP gets the IP address contained in addr. It returns nil if no address is present.
func AddrIP(addr net.Addr) net.IP {
	switch a := addr.(type) {
	case *net.IPAddr:
		return a.IP
	case *net.TCPAddr:
		return a.IP
	case *net.UDPAddr:
		return a.IP
	default:
		return nil
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7juVpX
code,"// Code generated by msgraph.go/gen DO NOT EDIT.

package msgraph

import ""context""

//
type WorkbookFunctionsTanRequestBuilder struct{ BaseRequestBuilder }

// Tan action undocumented
func (b *WorkbookFunctionsRequestBuilder) Tan(reqObj *WorkbookFunctionsTanRequestParameter) *WorkbookFunctionsTanRequestBuilder {
	bb := &WorkbookFunctionsTanRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += ""/tan""
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookFunctionsTanRequest struct{ BaseRequest }

//
func (b *WorkbookFunctionsTanRequestBuilder) Request() *WorkbookFunctionsTanRequest {
	return &WorkbookFunctionsTanRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *WorkbookFunctionsTanRequest) Post(ctx context.Context) (resObj *WorkbookFunctionResult, err error) {
	err = r.JSONRequest(ctx, ""POST"", """", r.requestObject, &resObj)
	return
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",O33hYi
code,"// Copyright 2013 Matthew Baird
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package core

import (
	""encoding/json""
	""fmt""
	""github.com/mattbaird/elastigo/api""
)

// Validate allows a user to validate a potentially expensive query without executing it.
// see http://www.elasticsearch.org/guide/reference/api/validate.html
func Validate(index string, _type string, args map[string]interface{}) (api.BaseResponse, error) {
	var url string
	var retval api.BaseResponse
	if len(_type) > 0 {
		url = fmt.Sprintf(""/%s/%s/_validate/"", index, _type)
	} else {
		url = fmt.Sprintf(""/%s/_validate/"", index)
	}
	body, err := api.DoCommand(""GET"", url, args, nil)
	if err != nil {
		return retval, err
	}
	if err == nil {
		// marshall into json
		jsonErr := json.Unmarshal(body, &retval)
		if jsonErr != nil {
			return retval, jsonErr
		}
	}
	return retval, err
}

type Validation struct {
	Valid         bool           `json:""valid""`
	Shards        api.Status     `json:""_shards""`
	Explainations []Explaination `json:""explanations,omitempty""`
}

type Explaination struct {
	Index string `json:""index""`
	Valid bool   `json:""valid""`
	Error string `json:""error""`
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OkxTs5
code,"package main

import (
	""net/url""
	""time""

	""github.com/codegangsta/cli""
	""github.com/michaeltrobinson/cadvisor-integration/scraper""
	""github.com/signalfx/metricproxy/protocol/signalfx""

	log ""github.com/Sirupsen/logrus""
)

var (
	sfxAPIToken       string
	sfxIngestURL      string
	clusterName       string
	sendInterval      time.Duration
	cadvisorPort      int
	discoveryInterval time.Duration
	maxDatapoints     int
	kubeUser          string
	kubePass          string
)

func init() {
	app.Commands = append(app.Commands, cli.Command{
		Name:   ""run"",
		Usage:  ""start the service (the default)"",
		Action: run,
		Before: setupRun,
		Flags: []cli.Flag{
			cli.StringFlag{
				Name:   ""sfx-ingest-url"",
				EnvVar: ""SFX_ENDPOINT"",
				Value:  ""https://ingest.signalfx.com"",
				Usage:  ""SignalFx ingest URL"",
			},
			cli.StringFlag{
				Name:   ""sfx-api-token"",
				EnvVar: ""SFX_API_TOKEN"",
				Usage:  ""SignalFx API token"",
			},
			cli.StringFlag{
				Name:   ""cluster-name"",
				EnvVar: ""CLUSTER_NAME"",
				Usage:  ""Cluster name will appear as dimension"",
			},
			cli.DurationFlag{
				Name:   ""send-interval"",
				EnvVar: ""SEND_INTERVAL"",
				Value:  time.Second * 30,
				Usage:  ""Rate at which data is queried from cAdvisor and send to SignalFx"",
			},
			cli.IntFlag{
				Name:   ""cadvisor-port"",
				EnvVar: ""CADVISOR_PORT"",
				Value:  4194,
				Usage:  ""Port on which cAdvisor listens"",
			},
			cli.DurationFlag{
				Name:   ""discovery-interval"",
				EnvVar: ""NODE_SERVICE_DISCOVERY_INTERVAL"",
				Value:  time.Minute * 5,
				Usage:  ""Rate at which nodes and services will be rediscovered"",
			},
			cli.StringFlag{
				Name:   ""kube-user"",
				EnvVar: ""KUBE_USER"",
				Usage:  ""Username to authenticate to kubernetes api"",
			},
			cli.StringFlag{
				Name:   ""kube-pass"",
				EnvVar: ""KUBE_PASS"",
				Usage:  ""Password to authenticate to kubernetes api"",
			},
			cli.IntFlag{
				Name:   ""max-datapoints"",
				EnvVar: ""MAX_DATAPOINTS"",
				Value:  50,
				Usage:  ""How many datapoints to batch before forwarding to SignalFX"",
			},
		},
	})
}

func setupRun(c *cli.Context) error {
	sfxAPIToken = c.String(""sfx-api-token"")
	if sfxAPIToken == """" {
		cli.ShowAppHelp(c)
		log.Fatal(""API token is required"")
	}

	clusterName = c.String(""cluster-name"")
	if clusterName == """" {
		cli.ShowAppHelp(c)
		log.Fatal(""cluster name is required"")
	}

	sfxIngestURL = c.String(""sfx-ingest-url"")
	sendInterval = c.Duration(""send-interval"")
	cadvisorPort = c.Int(""cadvisor-port"")
	discoveryInterval = c.Duration(""discovery-interval"")

	kubeUser = c.String(""kube-user"")
	kubePass = c.String(""kube-pass"")
	if kubeUser == """" || kubePass == """" {
		cli.ShowAppHelp(c)
		log.Fatal(""kubernetes credentials are required"")
	}
	maxDatapoints = c.Int(""max-datapoints"")
	return nil
}

func run(c *cli.Context) {
	s := scraper.New(
		newSfxClient(sfxIngestURL, sfxAPIToken),
		scraper.Config{
			ClusterName:   clusterName,
			CadvisorPort:  cadvisorPort,
			KubeUser:      kubeUser,
			KubePass:      kubePass,
			MaxDatapoints: maxDatapoints,
		})

	if err := s.Run(sendInterval, discoveryInterval); err != nil {
		log.WithError(err).Fatal(""failure"")
	}
}

func newSfxClient(ingestURL, authToken string) *signalfx.Forwarder {
	sfxEndpoint, err := url.Parse(ingestURL)
	if err != nil {
		panic(""failed to parse SFX ingest URL"")
	}
	return signalfx.NewSignalfxJSONForwarder(sfxEndpoint.String(), time.Second*10, authToken, 10, """", """", """")
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FyNwuN
code,"// Copyright 2011 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build irix

package syscall

//sysnb raw_ptrace(request int, pid int, addr *byte, data *byte) (err Errno)
//ptrace(request _C_int, pid Pid_t, addr *byte, data *byte) _C_long
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2oFrDi
code,"/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Package setmilestone implements the `/milestone` command which allows members of the milestone
// maintainers team to specify a milestone to be applied to an Issue or PR.
package milestone

import (
	""fmt""
	""regexp""
	""sort""
	""strings""

	""github.com/sirupsen/logrus""

	""k8s.io/test-infra/prow/github""
	""k8s.io/test-infra/prow/pluginhelp""
	""k8s.io/test-infra/prow/plugins""
)

const pluginName = ""milestone""

var (
	milestoneRegex   = regexp.MustCompile(`(?m)^/milestone\s+(.+?)\s*$`)
	mustBeSigLead    = ""You must be a member of the [%s/%s](https://github.com/orgs/%s/teams/%s/members) github team to set the milestone.""
	invalidMilestone = ""The provided milestone is not valid for this repository. Milestones in this repository: [%s]\n\nUse `/milestone %s` to clear the milestone.""
	milestoneTeamMsg = ""The milestone maintainers team is the Github team with ID: %d.""
	clearKeyword     = ""clear""
)

type githubClient interface {
	CreateComment(owner, repo string, number int, comment string) error
	ClearMilestone(org, repo string, num int) error
	SetMilestone(org, repo string, issueNum, milestoneNum int) error
	ListTeamMembers(id int, role string) ([]github.TeamMember, error)
	ListMilestones(org, repo string) ([]github.Milestone, error)
}

func init() {
	plugins.RegisterGenericCommentHandler(pluginName, handleGenericComment, helpProvider)
}

func helpProvider(config *plugins.Configuration, enabledRepos []string) (*pluginhelp.PluginHelp, error) {
	pluginHelp := &pluginhelp.PluginHelp{
		Description: ""The milestone plugin allows members of a configurable GitHub team to set the milestone on an issue or pull request."",
		Config: func(repos []string) map[string]string {
			configMap := make(map[string]string)
			for _, repo := range repos {
				team, exists := config.RepoMilestone[repo]
				if exists {
					configMap[repo] = fmt.Sprintf(milestoneTeamMsg, team)
				}
			}
			configMap[""""] = fmt.Sprintf(milestoneTeamMsg, config.RepoMilestone[""""])
			return configMap
		}(enabledRepos),
	}
	pluginHelp.AddCommand(pluginhelp.Command{
		Usage:       ""/milestone <version> or /milestone clear"",
		Description: ""Updates the milestone for an issue or PR"",
		Featured:    false,
		WhoCanUse:   ""Members of the milestone maintainers GitHub team can use the '/milestone' command."",
		Examples:    []string{""/milestone v1.10"", ""/milestone v1.9"", ""/milestone clear""},
	})
	return pluginHelp, nil
}

func handleGenericComment(pc plugins.PluginClient, e github.GenericCommentEvent) error {
	return handle(pc.GitHubClient, pc.Logger, &e, pc.PluginConfig.RepoMilestone)
}

func buildMilestoneMap(milestones []github.Milestone) map[string]int {
	m := make(map[string]int)
	for _, ms := range milestones {
		m[ms.Title] = ms.Number
	}
	return m
}
func handle(gc githubClient, log *logrus.Entry, e *github.GenericCommentEvent, repoMilestone map[string]plugins.Milestone) error {
	if e.Action != github.GenericCommentActionCreated {
		return nil
	}

	milestoneMatch := milestoneRegex.FindStringSubmatch(e.Body)
	if len(milestoneMatch) != 2 {
		return nil
	}

	org := e.Repo.Owner.Login
	repo := e.Repo.Name

	milestone, exists := repoMilestone[fmt.Sprintf(""%s/%s"", org, repo)]
	if !exists {
		// fallback default
		milestone = repoMilestone[""""]
	}

	milestoneMaintainers, err := gc.ListTeamMembers(milestone.MaintainersID, github.RoleAll)
	if err != nil {
		return err
	}
	found := false
	for _, person := range milestoneMaintainers {
		login := github.NormLogin(e.User.Login)
		if github.NormLogin(person.Login) == login {
			found = true
			break
		}
	}
	if !found {
		// not in the milestone maintainers team
		msg := fmt.Sprintf(mustBeSigLead, org, milestone.MaintainersTeam, org, milestone.MaintainersTeam)
		return gc.CreateComment(org, repo, e.Number, plugins.FormatResponseRaw(e.Body, e.HTMLURL, e.User.Login, msg))
	}

	milestones, err := gc.ListMilestones(org, repo)
	if err != nil {
		log.WithError(err).Errorf(""Error listing the milestones in the %s/%s repo"", org, repo)
		return err
	}
	proposedMilestone := milestoneMatch[1]

	// special case, if the clear keyword is used
	if proposedMilestone == clearKeyword {
		if err := gc.ClearMilestone(org, repo, e.Number); err != nil {
			log.WithError(err).Errorf(""Error clearing the milestone for %s/%s#%d."", org, repo, e.Number)
		}
		return nil
	}

	milestoneMap := buildMilestoneMap(milestones)
	milestoneNumber, ok := milestoneMap[proposedMilestone]
	if !ok {
		slice := make([]string, 0, len(milestoneMap))
		for k := range milestoneMap {
			slice = append(slice, fmt.Sprintf(""`%s`"", k))
		}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XhxEih
code,"package strategy

import (
	""reflect""
	""strings""
	""testing""

	""k8s.io/apimachinery/pkg/api/resource""
	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
	""k8s.io/apimachinery/pkg/runtime""
	""k8s.io/apimachinery/pkg/util/validation""
	kapi ""k8s.io/kubernetes/pkg/api""

	buildapi ""github.com/openshift/origin/pkg/build/api""
	_ ""github.com/openshift/origin/pkg/build/api/install""
)

func TestDockerCreateBuildPod(t *testing.T) {
	strategy := DockerBuildStrategy{
		Image: ""docker-test-image"",
		Codec: kapi.Codecs.LegacyCodec(buildapi.LegacySchemeGroupVersion),
	}

	build := mockDockerBuild()
	actual, err := strategy.CreateBuildPod(build)
	if err != nil {
		t.Errorf(""Unexpected error: %v"", err)
	}

	if expected, actual := buildapi.GetBuildPodName(build), actual.ObjectMeta.Name; expected != actual {
		t.Errorf(""Expected %s, but got %s!"", expected, actual)
	}
	if !reflect.DeepEqual(map[string]string{buildapi.BuildLabel: buildapi.LabelValue(build.Name)}, actual.Labels) {
		t.Errorf(""Pod Labels does not match Build Labels!"")
	}
	if !reflect.DeepEqual(nodeSelector, actual.Spec.NodeSelector) {
		t.Errorf(""Pod NodeSelector does not match Build NodeSelector.  Expected: %v, got: %v"", nodeSelector, actual.Spec.NodeSelector)
	}

	container := actual.Spec.Containers[0]
	if container.Name != ""docker-build"" {
		t.Errorf(""Expected docker-build, but got %s!"", container.Name)
	}
	if container.Image != strategy.Image {
		t.Errorf(""Expected %s image, got %s!"", container.Image, strategy.Image)
	}
	if container.ImagePullPolicy != kapi.PullIfNotPresent {
		t.Errorf(""Expected %v, got %v"", kapi.PullIfNotPresent, container.ImagePullPolicy)
	}
	if actual.Spec.RestartPolicy != kapi.RestartPolicyNever {
		t.Errorf(""Expected never, got %#v"", actual.Spec.RestartPolicy)
	}
	if len(container.Env) != 10 {
		var keys []string
		for _, env := range container.Env {
			keys = append(keys, env.Name)
		}
		t.Fatalf(""Expected 10 elements in Env table, got %d:\n%s"", len(container.Env), strings.Join(keys, "", ""))
	}
	if len(container.VolumeMounts) != 4 {
		t.Fatalf(""Expected 4 volumes in container, got %d"", len(container.VolumeMounts))
	}
	if *actual.Spec.ActiveDeadlineSeconds != 60 {
		t.Errorf(""Expected ActiveDeadlineSeconds 60, got %d"", *actual.Spec.ActiveDeadlineSeconds)
	}
	for i, expected := range []string{dockerSocketPath, DockerPushSecretMountPath, DockerPullSecretMountPath, sourceSecretMountPath} {
		if container.VolumeMounts[i].MountPath != expected {
			t.Fatalf(""Expected %s in VolumeMount[%d], got %s"", expected, i, container.VolumeMounts[i].MountPath)
		}
	}
	if len(actual.Spec.Volumes) != 4 {
		t.Fatalf(""Expected 4 volumes in Build pod, got %d"", len(actual.Spec.Volumes))
	}
	if !kapi.Semantic.DeepEqual(container.Resources, build.Spec.Resources) {
		t.Fatalf(""Expected actual=expected, %v != %v"", container.Resources, build.Spec.Resources)
	}
	found := false
	foundIllegal := false
	for _, v := range container.Env {
		if v.Name == ""BUILD_LOGLEVEL"" && v.Value == ""bar"" {
			found = true
		}
		if v.Name == ""ILLEGAL"" {
			foundIllegal = true
		}
	}
	if !found {
		t.Fatalf(""Expected variable BUILD_LOGLEVEL be defined for the container"")
	}
	if foundIllegal {
		t.Fatalf(""Found illegal environment variable 'ILLEGAL' defined on container"")
	}

	buildJSON, _ := runtime.Encode(kapi.Codecs.LegacyCodec(buildapi.LegacySchemeGroupVersion), build)
	errorCases := map[int][]string{
		0: {""BUILD"", string(buildJSON)},
	}
	for index, exp := range errorCases {
		if e := container.Env[index]; e.Name != exp[0] || e.Value != exp[1] {
			t.Errorf(""Expected %s:%s, got %s:%s!\n"", exp[0], exp[1], e.Name, e.Value)
		}
	}
}

func TestDockerBuildLongName(t *testing.T) {
	strategy := DockerBuildStrategy{
		Image: ""docker-test-image"",
		Codec: kapi.Codecs.LegacyCodec(buildapi.LegacySchemeGroupVersion),
	}
	build := mockDockerBuild()
	build.Name = strings.Repeat(""a"", validation.DNS1123LabelMaxLength*2)
	pod, err := strategy.CreateBuildPod(build)
	if err != nil {
		t.Fatalf(""unexpected: %v"", err)
	}
	if pod.Labels[buildapi.BuildLabel] != build.Name[:validation.DNS1123LabelMaxLength] {
		t.Errorf(""Unexpected build label value: %s"", pod.Labels[buildapi.BuildLabel])
	}
}

func mockDockerBuild() *buildapi.Build {
	timeout := int64(60)
	return &buildapi.Build{
		ObjectMeta: metav1.ObjectMeta{
			Name: ""dockerBuild"",
			Labels: map[string]string{
				""name"": ""dockerBuild"",
			},
		},
		Spec: buildapi.BuildSpec{
			CommonSpec: buildapi.CommonSpec{
				Revision: &buildapi.SourceRevision{
					Git: &buildapi.GitSourceRevision{},
				},
				Source: buildapi.BuildSource{
					Git: &buildapi.GitBuildSource{
						URI: ""http://my.build.com/the/dockerbuild/Dockerfile"",
						Ref: ""master"",
					},
					ContextDir:   ""my/test/dir"",
					SourceSecret: &kapi.LocalObjectReference{Name: ""secretFoo""},
				},
				Strategy: buildapi.BuildStrategy{
					DockerStrategy: &buildapi.DockerBuildStrategy{
						PullSecret: &kapi.LocalObjectReference{Name: ""bar""},
						Env: []kapi.EnvVar{
							{Name: ""ILLEGAL"", Value: ""foo""},
							{Name: ""BUILD_LOGLEVEL"", Value: ""bar""},
						},
					},
				},
				Output: buildapi.BuildOutput{
					",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JOijME
code,"package repomodel

import (
	""github.com/kopia/kopia/repo/content""
	""github.com/kopia/kopia/repo/manifest""
)

// RepositorySession models the behavior of a single session in an repository.
type RepositorySession struct {
	OpenRepo *OpenRepository

	WrittenContents  ContentSet
	WrittenManifests ManifestSet
}

// WriteContent adds the provided content ID to the model.
func (s *RepositorySession) WriteContent(cid content.ID) {
	s.WrittenContents.Add(cid)
}

// WriteManifest adds the provided manifest ID to the model.
func (s *RepositorySession) WriteManifest(mid manifest.ID) {
	s.WrittenManifests.Add(mid)
}

// Refresh refreshes the set of committed contents and manifest from repositor.
func (s *RepositorySession) Refresh() {
	s.OpenRepo.Refresh()
}

// Flush flushes the changes written in this RepositorySession and makes them available
// to other RepositoryData model.
func (s *RepositorySession) Flush(wc *ContentSet, wm *ManifestSet) {
	s.OpenRepo.mu.Lock()
	defer s.OpenRepo.mu.Unlock()

	// data flushed is visible to other sessions in the same open repository.
	s.OpenRepo.Contents.Add(wc.ids...)
	s.OpenRepo.Manifests.Add(wm.ids...)

	// data flushed is visible to other sessions in other open repositories.
	s.OpenRepo.RepoData.Contents.Add(wc.ids...)
	s.OpenRepo.RepoData.Manifests.Add(wm.ids...)

	s.WrittenContents.RemoveAll(wc.ids...)
	s.WrittenManifests.RemoveAll(wm.ids...)
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bX7Kbc
code,"// -*- Mode: Go; indent-tabs-mode: t -*-

/*
 * Copyright (C) 2019 Canonical Ltd
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package main

import (
	""errors""
	""fmt""
	""strings""
	""time""

	""github.com/jessevdk/go-flags""

	""github.com/snapcore/snapd/asserts""
	""github.com/snapcore/snapd/client""
	""github.com/snapcore/snapd/i18n""
)

var (
	shortModelHelp = i18n.G(""Get the active model for this device"")
	longModelHelp  = i18n.G(`
The model command returns the active model assertion information for this
device.

By default, only the essential model identification information is
included in the output, but this can be expanded to include all of an
assertion's non-meta headers.

The verbose output is presented in a structured, yaml-like format.

Similarly, the active serial assertion can be used for the output instead of the
model assertion.
`)

	invalidTypeMessage    = i18n.G(""invalid type for %q header"")
	errNoMainAssertion    = errors.New(i18n.G(""device not ready yet (no assertions found)""))
	errNoSerial           = errors.New(i18n.G(""device not registered yet (no serial assertion found)""))
	errNoVerboseAssertion = errors.New(i18n.G(""cannot use --verbose with --assertion""))

	// this list is a ""nice"" ""human"" ""readable"" ""ordering"" of headers to print
	// off, sorted in lexical order with meta headers and primary key headers
	// removed, and big nasty keys such as device-key-sha3-384 and
	// device-key at the bottom
	// it also contains both serial and model assertion headers, but we
	// follow the same code path for both assertion types and some of the
	// headers are shared between the two, so it still works out correctly
	niceOrdering = [...]string{
		""architecture"",
		""base"",
		""classic"",
		""display-name"",
		""gadget"",
		""kernel"",
		""revision"",
		""store"",
		""system-user-authority"",
		""timestamp"",
		""required-snaps"", // for uc16 and uc18 models
		""snaps"",          // for uc20 models
		""device-key-sha3-384"",
		""device-key"",
	}
)

type cmdModel struct {
	clientMixin
	timeMixin
	colorMixin

	Serial    bool `long:""serial""`
	Verbose   bool `long:""verbose""`
	Assertion bool `long:""assertion""`
}

func init() {
	addCommand(""model"",
		shortModelHelp,
		longModelHelp,
		func() flags.Commander {
			return &cmdModel{}
		}, colorDescs.also(timeDescs).also(map[string]string{
			""assertion"": i18n.G(""Print the raw assertion.""),
			""verbose"":   i18n.G(""Print all specific assertion fields.""),
			""serial"": i18n.G(
				""Print the serial assertion instead of the model assertion.""),
		}),
		[]argDesc{},
	)
}

func (x *cmdModel) Execute(args []string) error {
	if x.Verbose && x.Assertion {
		// can't do a verbose mode for the assertion
		return errNoVerboseAssertion
	}

	var mainAssertion asserts.Assertion
	serialAssertion, serialErr := x.client.CurrentSerialAssertion()
	modelAssertion, modelErr := x.client.CurrentModelAssertion()

	// if we didn't get a model assertion bail early
	if modelErr != nil {
		if client.IsAssertionNotFoundError(modelErr) {
			// device is not registered yet - use specific error message
			return errNoMainAssertion
		}
		return modelErr
	}

	// if the serial assertion error is anything other than not found, also
	// bail early
	// the serial assertion not being found may not be fatal
	if serialErr != nil && !client.IsAssertionNotFoundError(serialErr) {
		return serialErr
	}

	if x.Serial {
		mainAssertion = serialAssertion
	} else {
		mainAssertion = modelAssertion
	}

	if x.Assertion {
		// if we are using the serial assertion and we specifically didn't find the
		// serial assertion, bail with specific error
		if x.Serial && client.IsAssertionNotFoundError(serialErr) {
			return errNoMainAssertion
		}

		_, err := Stdout.Write(asserts.Encode(mainAssertion))
		return err
	}

	termWidth, _ := termSize()
	termWidth -= 3
	if termWidth > 100 {
		// any wider than this and it gets hard to read
		termWidth = 100
	}

	esc := x.getEscapes()

	w := tabWriter()

	if x.Serial && client.IsAssertionNotFoundError(serialErr) {
		// for serial assertion, the primary keys are output (model and
		// brand-id), but if we didn't find the serial assertion then we still
		// output the brand-id and model from the model assertion, but also
		// return a devNotReady error
		fmt.Fprintf(w, ""brand-id:\t%s\n"", modelAssertion.HeaderString(""brand-id""))
		fmt.Fprintf(w, ""model:\t%s\n"", modelAssertion.HeaderString(""model""))
		w.Flush()
		return errNoSerial
	}

	// the rest of this function is the main flow for outputting either the
	// model or serial assertion in normal or verbose mode

	// for the `snap model` case with",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UEtcSx
code,"package plugin

/*
usage: !day
*/

import (
	""strings""
	""time""
	""github.com/microamp/gerri/cmd""
	""github.com/microamp/gerri/data""
)

func ReplyDay(pm data.Privmsg, config *data.Config) (string, error) {
	return cmd.Privmsg(pm.Target, strings.ToLower(time.Now().Weekday().String())), nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rRo0iR
code,"/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package signer

import (
	""crypto/x509""
	""io/ioutil""
	""reflect""
	""strings""
	""testing""
	""time""

	capi ""k8s.io/api/certificates/v1beta1""
	""k8s.io/client-go/util/cert""
)

func TestSigner(t *testing.T) {
	s, err := newCFSSLSigner(""./testdata/ca.crt"", ""./testdata/ca.key"", nil, 1*time.Hour)
	if err != nil {
		t.Fatalf(""failed to create signer: %v"", err)
	}

	csrb, err := ioutil.ReadFile(""./testdata/kubelet.csr"")
	if err != nil {
		t.Fatalf(""failed to read CSR: %v"", err)
	}

	csr := &capi.CertificateSigningRequest{
		Spec: capi.CertificateSigningRequestSpec{
			Request: []byte(csrb),
			Usages: []capi.KeyUsage{
				capi.UsageSigning,
				capi.UsageKeyEncipherment,
				capi.UsageServerAuth,
				capi.UsageClientAuth,
			},
		},
	}

	csr, err = s.sign(csr)
	if err != nil {
		t.Fatalf(""failed to sign CSR: %v"", err)
	}
	certData := csr.Status.Certificate
	if len(certData) == 0 {
		t.Fatalf(""expected a certificate after signing"")
	}

	certs, err := cert.ParseCertsPEM(certData)
	if err != nil {
		t.Fatalf(""failed to parse certificate: %v"", err)
	}
	if len(certs) != 1 {
		t.Fatalf(""expected one certificate"")
	}

	crt := certs[0]

	if crt.Subject.CommonName != ""system:node:k-a-node-s36b"" {
		t.Errorf(""expected common name of 'system:node:k-a-node-s36b', but got: %v"", certs[0].Subject.CommonName)
	}
	if !reflect.DeepEqual(crt.Subject.Organization, []string{""system:nodes""}) {
		t.Errorf(""expected organization to be [system:nodes] but got: %v"", crt.Subject.Organization)
	}
	if crt.KeyUsage != x509.KeyUsageDigitalSignature|x509.KeyUsageKeyEncipherment {
		t.Errorf(""bad key usage"")
	}
	if !reflect.DeepEqual(crt.ExtKeyUsage, []x509.ExtKeyUsage{x509.ExtKeyUsageServerAuth, x509.ExtKeyUsageClientAuth}) {
		t.Errorf(""bad extended key usage"")
	}
}

func TestSignerExpired(t *testing.T) {
	hundredYearsFromNowFn := func() time.Time {
		return time.Now().Add(24 * time.Hour * 365 * 100)
	}
	s, err := newCFSSLSigner(""./testdata/ca.crt"", ""./testdata/ca.key"", nil, 1*time.Hour)
	if err != nil {
		t.Fatalf(""failed to create signer: %v"", err)
	}
	s.nowFn = hundredYearsFromNowFn

	csrb, err := ioutil.ReadFile(""./testdata/kubelet.csr"")
	if err != nil {
		t.Fatalf(""failed to read CSR: %v"", err)
	}

	csr := &capi.CertificateSigningRequest{
		Spec: capi.CertificateSigningRequestSpec{
			Request: []byte(csrb),
			Usages: []capi.KeyUsage{
				capi.UsageSigning,
				capi.UsageKeyEncipherment,
				capi.UsageServerAuth,
				capi.UsageClientAuth,
			},
		},
	}

	_, err = s.sign(csr)
	if err == nil {
		t.Fatal(""missing error"")
	}
	if !strings.HasPrefix(err.Error(), ""the signer has expired"") {
		t.Fatal(err)
	}
}

func TestDurationLongerThanExpiry(t *testing.T) {
	testNow := time.Now()
	testNowFn := func() time.Time {
		return testNow
	}

	hundredYears := 24 * time.Hour * 365 * 100
	s, err := newCFSSLSigner(""./testdata/ca.crt"", ""./testdata/ca.key"", nil, hundredYears)
	if err != nil {
		t.Fatalf(""failed to create signer: %v"", err)
	}
	s.nowFn = testNowFn

	csrb, err := ioutil.ReadFile(""./testdata/kubelet.csr"")
	if err != nil {
		t.Fatalf(""failed to read CSR: %v"", err)
	}

	csr := &capi.CertificateSigningRequest{
		Spec: capi.CertificateSigningRequestSpec{
			Request: []byte(csrb),
			Usages: []capi.KeyUsage{
				capi.UsageSigning,
				capi.UsageKeyEncipherment,
				capi.UsageServerAuth,
				capi.UsageClientAuth,
			},
		},
	}

	_, err = s.sign(csr)
	if err != nil {
		t.Fatalf(""failed to sign CSR: %v"", err)
	}

	// now we just need to verify that the expiry is based on the signing cert
	certData := csr.Status.Certificate
	if len(certData) == 0 {
		t.Fatalf(""expected a certificate after signing"")
	}

	certs, err := cert.ParseCertsPEM(certData)
	if err != nil {
		t.Fatalf(""failed to parse certificate: %v"", err)
	}
	if len(certs) != 1 {
		t.Fatalf(""expected one certificate"")
	}

	crt := certs[0]
	expected, err := time.Parse(""2006-01-02 15:04:05.999999999 -0700 MST"", ""2044-05-09 00:20:11 +0000 UTC"")
	if err != nil {
		t.Fatal(err)
	}
	// there is some jitter that we need to tolerate
	diff := expected.Sub(crt.NotAfter)
	if diff > 10*time.Minute || diff < -10*time.Minute {
		t.Fatal(crt.NotAfter)
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iEfr4e
code,"// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package runtime

import ""unsafe""

// The calls to nop are to keep these functions from being inlined.
// If they are inlined we have no guarantee that later rewrites of the
// code by optimizers will preserve the relative order of memory accesses.

//go:nosplit
func atomicload(ptr *uint32) uint32 {
	nop()
	return *ptr
}

//go:nosplit
func atomicloadp(ptr unsafe.Pointer) unsafe.Pointer {
	nop()
	return *(*unsafe.Pointer)(ptr)
}

//go:nosplit
func xadd64(ptr *uint64, delta int64) uint64 {
	for {
		old := *ptr
		if cas64(ptr, old, old+uint64(delta)) {
			return old + uint64(delta)
		}
	}
}

//go:nosplit
func xchg64(ptr *uint64, new uint64) uint64 {
	for {
		old := *ptr
		if cas64(ptr, old, new) {
			return old
		}
	}
}

//go:noescape
func xadd(ptr *uint32, delta int32) uint32

//go:noescape
func xchg(ptr *uint32, new uint32) uint32

// NO go:noescape annotation; see atomic_pointer.go.
func xchgp1(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer

//go:noescape
func xchguintptr(ptr *uintptr, new uintptr) uintptr

//go:noescape
func atomicload64(ptr *uint64) uint64

//go:noescape
func atomicor8(ptr *uint8, val uint8)

//go:noescape
func cas64(ptr *uint64, old, new uint64) bool

//go:noescape
func atomicstore(ptr *uint32, val uint32)

//go:noescape
func atomicstore64(ptr *uint64, val uint64)

// NO go:noescape annotation; see atomic_pointer.go.
func atomicstorep1(ptr unsafe.Pointer, val unsafe.Pointer)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2aM8Eu
code,"package network

// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	""context""
	""github.com/Azure/go-autorest/autorest""
	""github.com/Azure/go-autorest/autorest/azure""
	""github.com/Azure/go-autorest/tracing""
	""net/http""
)

// LoadBalancerLoadBalancingRulesClient is the network Client
type LoadBalancerLoadBalancingRulesClient struct {
	BaseClient
}

// NewLoadBalancerLoadBalancingRulesClient creates an instance of the LoadBalancerLoadBalancingRulesClient client.
func NewLoadBalancerLoadBalancingRulesClient(subscriptionID string) LoadBalancerLoadBalancingRulesClient {
	return NewLoadBalancerLoadBalancingRulesClientWithBaseURI(DefaultBaseURI, subscriptionID)
}

// NewLoadBalancerLoadBalancingRulesClientWithBaseURI creates an instance of the LoadBalancerLoadBalancingRulesClient
// client using a custom endpoint.  Use this when interacting with an Azure cloud that uses a non-standard base URI
// (sovereign clouds, Azure stack).
func NewLoadBalancerLoadBalancingRulesClientWithBaseURI(baseURI string, subscriptionID string) LoadBalancerLoadBalancingRulesClient {
	return LoadBalancerLoadBalancingRulesClient{NewWithBaseURI(baseURI, subscriptionID)}
}

// Get gets the specified load balancer load balancing rule.
// Parameters:
// resourceGroupName - the name of the resource group.
// loadBalancerName - the name of the load balancer.
// loadBalancingRuleName - the name of the load balancing rule.
func (client LoadBalancerLoadBalancingRulesClient) Get(ctx context.Context, resourceGroupName string, loadBalancerName string, loadBalancingRuleName string) (result LoadBalancingRule, err error) {
	if tracing.IsEnabled() {
		ctx = tracing.StartSpan(ctx, fqdn+""/LoadBalancerLoadBalancingRulesClient.Get"")
		defer func() {
			sc := -1
			if result.Response.Response != nil {
				sc = result.Response.Response.StatusCode
			}
			tracing.EndSpan(ctx, sc, err)
		}()
	}
	req, err := client.GetPreparer(ctx, resourceGroupName, loadBalancerName, loadBalancingRuleName)
	if err != nil {
		err = autorest.NewErrorWithError(err, ""network.LoadBalancerLoadBalancingRulesClient"", ""Get"", nil, ""Failure preparing request"")
		return
	}

	resp, err := client.GetSender(req)
	if err != nil {
		result.Response = autorest.Response{Response: resp}
		err = autorest.NewErrorWithError(err, ""network.LoadBalancerLoadBalancingRulesClient"", ""Get"", resp, ""Failure sending request"")
		return
	}

	result, err = client.GetResponder(resp)
	if err != nil {
		err = autorest.NewErrorWithError(err, ""network.LoadBalancerLoadBalancingRulesClient"", ""Get"", resp, ""Failure responding to request"")
		return
	}

	return
}

// GetPreparer prepares the Get request.
func (client LoadBalancerLoadBalancingRulesClient) GetPreparer(ctx context.Context, resourceGroupName string, loadBalancerName string, loadBalancingRuleName string) (*http.Request, error) {
	pathParameters := map[string]interface{}{
		""loadBalancerName"":      autorest.Encode(""path"", loadBalancerName),
		""loadBalancingRuleName"": autorest.Encode(""path"", loadBalancingRuleName),
		""resourceGroupName"":     autorest.Encode(""path"", resourceGroupName),
		""subscriptionId"":        autorest.Encode(""path"", client.SubscriptionID),
	}

	const APIVersion = ""2017-10-01""
	queryParameters := map[string]interface{}{
		""api-version"": APIVersion,
	}

	preparer := autorest.CreatePreparer(
		autorest.AsGet(),
		autorest.WithBaseURL(client.BaseURI),
		autorest.WithPathParameters(""/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/loadBalancingRules/{loadBalancingRuleName}"", pathParameters),
		autorest.WithQueryParameters(queryParameters))
	return preparer.Prepare((&http.Request{}).WithContext(ctx))
}

// GetSender sends the Get request. The method will close the
// http.Response Body if it receives an error.
func (client LoadBalancerLoadBalancingRulesClient) GetSender(req *http.Request) (*http.Response, error) {
	return client.Send(req, azure.DoRetryWithRegistration(client.Client))
}

// GetResponder handles the response to the Get request. The method always
// closes the http.Response Body.
func (client LoadBalancerLoadBalancingRulesClient) GetResponder(resp *http.Response) (result LoadBalancingRule, err error) {
	err = autorest.Respond(
		resp,
		azure.WithErrorUnlessStatusCode(http.StatusOK),
		autorest.ByUnmarshallingJSON(&result),
		autorest.ByClosing())
	result.Response =",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",934AEs
code,"package ec2

import (
	""github.com/crowdmob/goamz/aws""
	""time""
)

func Sign(auth aws.Auth, method, path string, params map[string]string, host string) {
	sign(auth, method, path, params, host)
}

func fixedTime() time.Time {
	return time.Date(2012, 1, 1, 0, 0, 0, 0, time.UTC)
}

func FakeTime(fakeIt bool) {
	if fakeIt {
		timeNow = fixedTime
	} else {
		timeNow = time.Now
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DsUdfV
code,"package transaction

import (
	. ""DNA/common""
	""DNA/common/serialization""
	""DNA/core/contract""
	""DNA/core/contract/program""
	sig ""DNA/core/signature""
	""DNA/core/transaction/payload""
	. ""DNA/errors""
	""crypto/sha256""
	""errors""
	""fmt""
	""io""
	""sort""
)

//for different transaction types with different payload format
//and transaction process methods
type TransactionType byte

const (
	BookKeeping    TransactionType = 0x00
	IssueAsset     TransactionType = 0x01
	BookKeeper     TransactionType = 0x02
	PrivacyPayload TransactionType = 0x20
	RegisterAsset  TransactionType = 0x40
	TransferAsset  TransactionType = 0x80
	Record         TransactionType = 0x81
	DeployCode     TransactionType = 0xd0
	DataFile       TransactionType = 0x12
)

//Payload define the func for loading the payload data
//base on payload type which have different struture
type Payload interface {
	//  Get payload data
	Data(version byte) []byte

	//Serialize payload data
	Serialize(w io.Writer, version byte) error

	Deserialize(r io.Reader, version byte) error
}

//Transaction is used for carry information or action to Ledger
//validated transaction will be added to block and updates state correspondingly

var TxStore ILedgerStore

type Transaction struct {
	TxType         TransactionType
	PayloadVersion byte
	Payload        Payload
	Attributes     []*TxAttribute
	UTXOInputs     []*UTXOTxInput
	BalanceInputs  []*BalanceTxInput
	Outputs        []*TxOutput
	Programs       []*program.Program

	//Inputs/Outputs map base on Asset (needn't serialize)
	AssetOutputs      map[Uint256][]*TxOutput
	AssetInputAmount  map[Uint256]Fixed64
	AssetOutputAmount map[Uint256]Fixed64

	hash *Uint256
}

//Serialize the Transaction
func (tx *Transaction) Serialize(w io.Writer) error {

	err := tx.SerializeUnsigned(w)
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""Transaction txSerializeUnsigned Serialize failed."")
	}
	//Serialize  Transaction's programs
	lens := uint64(len(tx.Programs))
	err = serialization.WriteVarUint(w, lens)
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""Transaction WriteVarUint failed."")
	}
	if lens > 0 {
		for _, p := range tx.Programs {
			err = p.Serialize(w)
			if err != nil {
				return NewDetailErr(err, ErrNoCode, ""Transaction Programs Serialize failed."")
			}
		}
	}
	return nil
}

//Serialize the Transaction data without contracts
func (tx *Transaction) SerializeUnsigned(w io.Writer) error {
	//txType
	w.Write([]byte{byte(tx.TxType)})
	//PayloadVersion
	w.Write([]byte{tx.PayloadVersion})
	//Payload
	if tx.Payload == nil {
		return errors.New(""Transaction Payload is nil."")
	}
	tx.Payload.Serialize(w, tx.PayloadVersion)
	//[]*txAttribute
	err := serialization.WriteVarUint(w, uint64(len(tx.Attributes)))
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""Transaction item txAttribute length serialization failed."")
	}
	if len(tx.Attributes) > 0 {
		for _, attr := range tx.Attributes {
			attr.Serialize(w)
		}
	}
	//[]*UTXOInputs
	err = serialization.WriteVarUint(w, uint64(len(tx.UTXOInputs)))
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""Transaction item UTXOInputs length serialization failed."")
	}
	if len(tx.UTXOInputs) > 0 {
		for _, utxo := range tx.UTXOInputs {
			utxo.Serialize(w)
		}
	}
	// TODO BalanceInputs
	//[]*Outputs
	err = serialization.WriteVarUint(w, uint64(len(tx.Outputs)))
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""Transaction item Outputs length serialization failed."")
	}
	if len(tx.Outputs) > 0 {
		for _, output := range tx.Outputs {
			output.Serialize(w)
		}
	}

	return nil
}

//deserialize the Transaction
func (tx *Transaction) Deserialize(r io.Reader) error {
	// tx deserialize
	err := tx.DeserializeUnsigned(r)
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""transaction Deserialize error"")
	}

	// tx program
	lens, err := serialization.ReadVarUint(r, 0)
	if err != nil {
		return NewDetailErr(err, ErrNoCode, ""transaction tx program Deserialize error"")
	}

	programHashes := []*program.Program{}
	if lens > 0 {
		for i := 0; i < int(lens); i++ {
			outputHashes := new(program.Program)
			outputHashes.Deserialize(r)
			programHashes = append(programHashes, outputHashes)
		}
		tx.Programs = programHashes
	}
	return nil
}

func (tx *Transaction) DeserializeUnsigned(r io.Reader) error {
	var txType [1]byte
	_, err := io.ReadFull(r, txType[:])
	if err != nil {
		return err
	}
	tx.TxType = TransactionType(txType[0])
	return tx.DeserializeUnsignedWithoutType(r)
}

func (tx *Transaction) DeserializeUnsignedWithoutType(r io.Reader) error {
	var payloadVersion [1]byte
	_, err := io.ReadFull(r, payloadVersion[:])
	tx.PayloadVersion = payloadVersion[0]
	if err != nil {
		return err
	}

	//payload
	//tx.Payload.Deserialize(r)
	switch tx.TxType {
	case RegisterAsset:
		tx.Payload = new(payload.RegisterAsset)
	case IssueAsset:
		tx.Payload = new(payload.IssueAsset)
	case TransferAsset:
		tx.Payload = new(payload.TransferAsset)
	case BookKeeping:
		tx.Payload = new(payload.BookKeeping)
	case Record:
		tx.Payload = new(payload.Record)
	case BookKeeper:
		tx.Payload = new(payload.BookKeeper)
	case PrivacyPayloa",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-IbJX3
code,"// Copyright 2016-2022 The Libsacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package icon

import (
	""github.com/sacloud/libsacloud/v2/helper/service""
	""github.com/sacloud/libsacloud/v2/helper/validate""
	""github.com/sacloud/libsacloud/v2/sacloud""
	""github.com/sacloud/libsacloud/v2/sacloud/types""
)

type UpdateRequest struct {
	ID types.ID `request:""-"" validate:""required""`

	Name *string     `request:"",omitempty"" validate:""omitempty,min=1""`
	Tags *types.Tags `request:"",omitempty""`
}

func (req *UpdateRequest) Validate() error {
	return validate.Struct(req)
}

func (req *UpdateRequest) ToRequestParameter(current *sacloud.Icon) (*sacloud.IconUpdateRequest, error) {
	r := &sacloud.IconUpdateRequest{}
	if err := service.RequestConvertTo(current, r); err != nil {
		return nil, err
	}
	if err := service.RequestConvertTo(req, r); err != nil {
		return nil, err
	}
	return r, nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",J60YxY
code,"package sdp

func (s Session) appendAttributes(attrs Attributes) Session {
	for _, v := range attrs {
		if v.Value == blank {
			s = s.AddFlag(v.Key)
		} else {
			s = s.AddAttribute(v.Key, v.Value)
		}
	}
	return s
}

// Append encodes message to Session and returns result.
//
// See RFC 4566 Section 5.
func (m *Message) Append(s Session) Session {
	s = s.AddVersion(m.Version)
	s = s.AddOrigin(m.Origin)
	s = s.AddSessionName(m.Name)
	if len(m.Info) > 0 {
		s = s.AddSessionInfo(m.Info)
	}
	if len(m.URI) > 0 {
		s = s.AddURI(m.URI)
	}
	if len(m.Email) > 0 {
		s = s.AddEmail(m.Email)
	}
	if len(m.Phone) > 0 {
		s = s.AddPhone(m.Phone)
	}
	if !m.Connection.Blank() {
		s = s.AddConnectionData(m.Connection)
	}
	for t, v := range m.Bandwidths {
		s = s.AddBandwidth(t, v)
	}
	// One or more time descriptions (""t="" and ""r="" lines)
	for _, t := range m.Timing {
		s = s.AddTiming(t.Start, t.End)
		if len(t.Offsets) > 0 {
			s = s.AddRepeatTimesCompact(t.Repeat, t.Active, t.Offsets...)
		}
	}
	if len(m.TZAdjustments) > 0 {
		s = s.AddTimeZones(m.TZAdjustments...)
	}
	if !m.Encryption.Blank() {
		s = s.AddEncryption(m.Encryption)
	}
	s = s.appendAttributes(m.Attributes)

	for i := range m.Medias {
		s = s.AddMediaDescription(m.Medias[i].Description)
		if len(m.Medias[i].Title) > 0 {
			s = s.AddSessionInfo(m.Medias[i].Title)
		}
		if !m.Medias[i].Connection.Blank() {
			s = s.AddConnectionData(m.Medias[i].Connection)
		}
		for t, v := range m.Medias[i].Bandwidths {
			s = s.AddBandwidth(t, v)
		}
		if !m.Medias[i].Encryption.Blank() {
			s = s.AddEncryption(m.Medias[i].Encryption)
		}
		s = s.appendAttributes(m.Medias[i].Attributes)
	}
	return s
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AoiD_q
code,"/*
Copyright
*/

//go:generate rm -vf autogen/gen.go
//go:generate go-bindata -pkg autogen -o autogen/gen.go ./static/... ./templates/...

//go:generate mkdir -p vendor/github.com/docker/docker/autogen/dockerversion
//go:generate cp script/dockerversion vendor/github.com/docker/docker/autogen/dockerversion/dockerversion.go

package main
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Oo-sUD
code,"/*
Copyright 2021 The Kubeflow Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package main

import (
	""encoding/json""
	""fmt""
	""os""
	""strings""

	""github.com/go-openapi/spec""
	""github.com/kubeflow/katib/pkg/apis/v1beta1""
	""k8s.io/klog""
	""k8s.io/kube-openapi/pkg/common""
)

// Generate OpenAPI spec definitions for Katib Resource
func main() {
	if len(os.Args) <= 2 {
		klog.Fatal(""Supply Swagger version and Katib Version"")
	}
	version := os.Args[1]
	if !strings.HasPrefix(version, ""v"") {
		version = ""v"" + version
	}
	refCallback := func(name string) spec.Ref {
		return spec.MustCreateRef(""#/definitions/"" + common.EscapeJsonPointer(swaggify(name)))
	}

	katibVersion := os.Args[2]
	oAPIDefs := make(map[string]common.OpenAPIDefinition)
	if katibVersion == ""v1beta1"" {
		oAPIDefs = v1beta1.GetOpenAPIDefinitions(refCallback)
	} else {
		klog.Fatalf(""Katib version %v is not supported"", katibVersion)
	}

	defs := spec.Definitions{}
	for defName, val := range oAPIDefs {
		defs[swaggify(defName)] = val.Schema
	}
	swagger := spec.Swagger{
		SwaggerProps: spec.SwaggerProps{
			Swagger:     ""2.0"",
			Definitions: defs,
			Paths:       &spec.Paths{Paths: map[string]spec.PathItem{}},
			Info: &spec.Info{
				InfoProps: spec.InfoProps{
					Title:       ""Katib"",
					Description: ""Swagger description for Katib"",
					Version:     version,
				},
			},
		},
	}
	jsonBytes, err := json.MarshalIndent(swagger, """", ""  "")
	if err != nil {
		klog.Fatal(err.Error())
	}
	fmt.Println(string(jsonBytes))
}

func swaggify(name string) string {
	name = strings.Replace(name, ""github.com/kubeflow/katib/pkg/apis/controller/common/"", """", -1)
	name = strings.Replace(name, ""github.com/kubeflow/katib/pkg/apis/controller/experiments/"", """", -1)
	name = strings.Replace(name, ""github.com/kubeflow/katib/pkg/apis/controller/suggestions"", """", -1)
	name = strings.Replace(name, ""github.com/kubeflow/katib/pkg/apis/controller/trials"", """", -1)
	name = strings.Replace(name, ""k8s.io/api/core/"", """", -1)
	name = strings.Replace(name, ""k8s.io/apimachinery/pkg/apis/meta/"", """", -1)
	name = strings.Replace(name, ""/"", ""."", -1)
	return name
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tiaOUt
code,"// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the ""License""); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package graphx

import (
	""encoding/json""
	""fmt""

	""github.com/apache/beam/sdks/go/pkg/beam/core/graph/coder""
	""github.com/apache/beam/sdks/go/pkg/beam/core/runtime/graphx/v1""
	""github.com/apache/beam/sdks/go/pkg/beam/core/typex""
	""github.com/apache/beam/sdks/go/pkg/beam/core/util/protox""
	pb ""github.com/apache/beam/sdks/go/pkg/beam/model/pipeline_v1""
	""github.com/golang/protobuf/proto""
)

const (
	// Model constants

	urnBytesCoder         = ""beam:coder:bytes:v1""
	urnVarIntCoder        = ""beam:coder:varint:v1""
	urnLengthPrefixCoder  = ""beam:coder:length_prefix:v1""
	urnKVCoder            = ""beam:coder:kv:v1""
	urnIterableCoder      = ""beam:coder:iterable:v1""
	urnWindowedValueCoder = ""beam:coder:windowed_value:v1""

	urnGlobalWindow   = ""beam:coder:global_window:v1""
	urnIntervalWindow = ""beam:coder:interval_window:v1""

	// SDK constants

	urnCustomCoder = ""beam:go:coder:custom:v1""
	urnCoGBKList   = ""beam:go:coder:cogbklist:v1"" // CoGBK representation. Not a coder.
)

// MarshalCoders marshals a list of coders into model coders.
func MarshalCoders(coders []*coder.Coder) ([]string, map[string]*pb.Coder) {
	b := NewCoderMarshaller()
	ids := b.AddMulti(coders)
	return ids, b.Build()
}

// UnmarshalCoders unmarshals coders.
func UnmarshalCoders(ids []string, m map[string]*pb.Coder) ([]*coder.Coder, error) {
	b := NewCoderUnmarshaller(m)

	var coders []*coder.Coder
	for _, id := range ids {
		c, err := b.Coder(id)
		if err != nil {
			return nil, fmt.Errorf(""failed to unmarshal coder %v: %v"", id, err)
		}
		coders = append(coders, c)
	}
	return coders, nil
}

// CoderUnmarshaller is an incremental unmarshaller of model coders. Identical
// coders are shared.
type CoderUnmarshaller struct {
	models map[string]*pb.Coder

	coders       map[string]*coder.Coder
	windowCoders map[string]*coder.WindowCoder
}

// NewCoderUnmarshaller returns a new CoderUnmarshaller.
func NewCoderUnmarshaller(m map[string]*pb.Coder) *CoderUnmarshaller {
	return &CoderUnmarshaller{
		models:       m,
		coders:       make(map[string]*coder.Coder),
		windowCoders: make(map[string]*coder.WindowCoder),
	}
}

func (b *CoderUnmarshaller) Coders(ids []string) ([]*coder.Coder, error) {
	coders := make([]*coder.Coder, len(ids))
	for i, id := range ids {
		c, err := b.Coder(id)
		if err != nil {
			return nil, err
		}
		coders[i] = c
	}
	return coders, nil
}

// Coder unmarshals a coder with the given id.
func (b *CoderUnmarshaller) Coder(id string) (*coder.Coder, error) {
	if c, exists := b.coders[id]; exists {
		return c, nil
	}
	c, ok := b.models[id]
	if !ok {
		return nil, fmt.Errorf(""coder with id %v not found"", id)
	}

	ret, err := b.makeCoder(c)
	if err != nil {
		return nil, fmt.Errorf(""failed to unmarshal coder %v: %v"", id, err)
	}

	b.coders[id] = ret
	return ret, nil
}

// WindowCoder unmarshals a window coder with the given id.
func (b *CoderUnmarshaller) WindowCoder(id string) (*coder.WindowCoder, error) {
	if w, exists := b.windowCoders[id]; exists {
		return w, nil
	}

	c, err := b.peek(id)
	if err != nil {
		return nil, err
	}

	w := urnToWindowCoder(c.GetSpec().GetSpec().GetUrn())
	b.windowCoders[id] = w
	return w, nil
}

func urnToWindowCoder(urn string) *coder.WindowCoder {
	switch urn {
	case urnGlobalWindow:
		return coder.NewGlobalWindow()
	case urnIntervalWindow:
		return coder.NewIntervalWindow()
	default:
		panic(fmt.Sprintf(""Unexpected window coder: %v"", urn))
	}
}

func (b *CoderUnmarshaller) makeCoder(c *pb.Coder) (*coder.Coder, error) {
	urn := c.GetSpec().GetSpec().GetUrn()
	components := c.GetComponentCoderIds()

	switch urn {
	case urnBytesCoder:
		return coder.NewBytes(), nil

	case urnVarIntCoder:
		return coder.NewVarInt(), nil

	case urnKVCoder:
		if len(components) != 2 {
			return nil, fmt.Errorf(""bad pair: %v"", c)
		}

		key, err := b.Coder(components[0])
		if err != nil {
			return nil, err
		}

		id := components[1]
		kind := coder.KV
		root := typex.KVType

		elm, err := b.peek(id)
		if err != nil {
			return nil, err
		}
		isGBK := elm.GetSpec().GetSpec().GetUrn() == urnIterableCoder
		if isGBK {
			id = elm.GetComponentCoderIds()[0]
			kind = coder.CoGBK
			root = typex.CoGBKType

			// TODO(BEAM-490): If CoGBK with > 1 input, handle as special GBK. We expect
			// it to be encoded as CoGBK<K,LP<CoGBKList<V,W,..>>>. Remove this handling once
			//",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dfSNgk
code,"package main

import (
	""encoding/json""
	""fmt""
	""log""
	""time""

	""github.com/boltdb/bolt""
)

type Entry struct {
	Id        string `json:""id""`
	Url       string `json:""url""`
	Subreddit string `json:""subreddit""`
}

//InitDB initializes the BoltDB instance and loads in the database file.
func InitDB() {
	var err error
	db, err = bolt.Open(""data.db"", 0600, &bolt.Options{Timeout: 1 * time.Second})
	CheckErr(err, ""InitDB() - Open Database"", true)

	err = db.Update(func(tx *bolt.Tx) error {
		var err error
		_, err = tx.CreateBucketIfNotExists([]byte(""to_handle""))
		if err != nil {
			return fmt.Errorf(""create bucket: %s"", err)
		}

		_, err = tx.CreateBucketIfNotExists([]byte(""handled""))
		if err != nil {
			return fmt.Errorf(""create bucket: %s"", err)
		}

		_, err = tx.CreateBucketIfNotExists([]byte(""credentials""))
		if err != nil {
			return fmt.Errorf(""create bucket: %s"", err)
		}

		return nil
	})
	CheckErr(err, ""InitDB() - Create Buckets"", true)
}

//CloseDB closes the BoltDB database safely during the shutdown cleanup.
func CloseDB() {
	fmt.Print(""Closing database..."")
	db.Close()
	fmt.Println(""Done!"")
	fmt.Println(""Goodbye! <3"")
}

//ReadCreds reads the credential bucket from BotlDB.
func ReadCreds() {
	var user, pass []byte

	err := db.Update(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(""credentials""))

		u := b.Get([]byte(""user""))
		p := b.Get([]byte(""pass""))
		if u != nil && p != nil {
			user = make([]byte, len(u))
			pass = make([]byte, len(p))
			copy(user, u)
			copy(pass, p)
		}

		return nil
	})

	CheckErr(err, ""ReadCreds() - Read Database"", true)

	username = string(user)
	password = string(pass)

	if username == """" || password == """" {
		log.Fatalln(""Fatal Error: One or more stored credentials are missing, cannot continue without credentials!"")
	}
}

//UpdateCreds takes the current credentials and inserts them into
//the BoltDB database.
func UpdateCreds(user, pass string) {
	err := db.Update(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(""credentials""))

		err := b.Put([]byte(""user""), []byte(user))
		if err != nil {
			return err
		}

		err = b.Put([]byte(""pass""), []byte(pass))

		return err
	})

	CheckErr(err, ""UpdateCreds() - Write Database"", true)
}

//ClearCreds removes the stores credentials from the database.
func ClearCreds() {
	err := db.Update(func(tx *bolt.Tx) error {
		err := tx.DeleteBucket([]byte(""credentials""))
		if err != nil {
			return err
		}

		_, err = tx.CreateBucketIfNotExists([]byte(""credentials""))

		return err
	})

	CheckErr(err, ""ClearCreds() - Delete Bucket"", true)
}

//ClearDB removes all entires from the BotlDB database.
func ClearDB() {

	ClearCreds()

	err := db.Update(func(tx *bolt.Tx) error {
		err := tx.DeleteBucket([]byte(""to_handle""))
		if err != nil {
			return err
		}

		err = tx.DeleteBucket([]byte(""handled""))
		if err != nil {
			return err
		}

		_, err = tx.CreateBucketIfNotExists([]byte(""to_handle""))
		if err != nil {
			return err
		}

		_, err = tx.CreateBucketIfNotExists([]byte(""handled""))

		return err
	})

	CheckErr(err, ""ClearDB() - Delete Bucket"", true)
}

//KeyExists checks if a given key exists within the given BoltDB bucket.
func KeyExists(id, bucket string) bool {
	exists := false

	err := db.View(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(bucket))
		v := b.Get([]byte(id))
		exists = v != nil
		return nil
	})

	CheckErr(err, ""KeyExists() - Read Database"", true)

	return exists
}

//HandleLater takes the id (reddit thing_id) of a submission that the
//bot has determined to be offending, and adds it to the bucket of
//posts to be handled in the future.
func HandleLater(entry Entry) {
	bytes, err := json.Marshal(entry)
	if !CheckErr(err, ""HandleLater() - Marshal JSON"", false) {
		err := db.Update(func(tx *bolt.Tx) error {
			b := tx.Bucket([]byte(""to_handle""))
			err := b.Put([]byte(entry.Id), bytes)
			return err
		})

		CheckErr(err, ""HandleLater() - Add ID"", true)
	}
}

//AddToHandled adds the id (reddit thing_id) to the BoltDB handled bucket.
func AddToHandled(id string) {
	err := db.Update(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(""handled""))
		err := b.Put([]byte(id), []byte(""""))
		return err
	})

	CheckErr(err, ""AddToHandled() - Add 'handled' ID"", true)

	err = db.Update(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(""to_handle""))
		err := b.Delete([]byte(id))
		return err
	})

	CheckErr(err, ""AddToHandled() - Delete 'to_handle' ID"", true)
}

func FetchFromQueue() *Entry {
	var val []byte
	needhandle := false

	err := db.Update(func(tx *bolt.Tx) error {
		b := tx.Bucket([]byte(""to_handle""))
		c := b.Cursor()

		k, v := c.First()
		if k != nil {
			needhandle = true
			val = make([]byte, len(v))
			copy(val, v)
		}

		return nil
	})

	CheckErr(err, ""FetchFromQueue() - Read Database"", true)

	if needhandle {
		log.Printf(""Handling one post: %s\n"", val)
		entry := &Entry{}
		json.Unmarshal(val, entry)
		return entry",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t_SFWJ
code,"// Copyright (C) 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package f32_test

import (
	""testing""

	""github.com/google/gapid/core/assert""
	""github.com/google/gapid/core/math/f32""
)

func TestV4DSqrMagnitude(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		v f32.Vec4
		r float32
	}{
		{f32.Vec4{0, 0, 0, 0}, 0},
		{f32.Vec4{1, 0, 0, 0}, 1},
		{f32.Vec4{0, 2, 0, 0}, 4},
		{f32.Vec4{0, 0, -3, 0}, 9},
		{f32.Vec4{0, 0, 0, -4}, 16},
		{f32.Vec4{1, 1, 1, 1}, 4},
	} {
		assert.For(""%v.SqrMagnitude"", test.v).That(test.v.SqrMagnitude()).Equals(test.r)
	}
}

func TestV4DMagnitude(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		v f32.Vec4
		r float32
	}{
		{f32.Vec4{0, 0, 0, 0}, 0},
		{f32.Vec4{1, 0, 0, 0}, 1},
		{f32.Vec4{0, 2, 0, 0}, 2},
		{f32.Vec4{0, 0, -3, 0}, 3},
		{f32.Vec4{0, 0, 0, -4}, 4},
		{f32.Vec4{1, 1, 1, 1}, 2},
	} {
		assert.For(""%v.Magnitude"", test.v).That(test.v.Magnitude()).Equals(test.r)
	}
}

func TestV4DScale(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		v f32.Vec4
		s float32
		r f32.Vec4
	}{
		{f32.Vec4{1, 0, 0, 0}, -1, f32.Vec4{-1, 0, 0, 0}},
		{f32.Vec4{0, 2, 0, 0}, -2, f32.Vec4{0, -4, 0, 0}},
		{f32.Vec4{0, 0, 3, 0}, -3, f32.Vec4{0, 0, -9, 0}},
		{f32.Vec4{0, 0, 0, 4}, -4, f32.Vec4{0, 0, 0, -16}},
		{f32.Vec4{1, 1, 1, 1}, 0, f32.Vec4{0, 0, 0, 0}},
	} {
		assert.For(""%v.Scale"", test.v).That(test.v.Scale(test.s)).Equals(test.r)
	}
}

func TestV4DNormalize(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		v f32.Vec4
		r f32.Vec4
	}{
		{f32.Vec4{1, 0, 0, 0}, f32.Vec4{1, 0, 0, 0}},
		{f32.Vec4{0, -2, 0, 0}, f32.Vec4{0, -1, 0, 0}},
		{f32.Vec4{0, 0, 3, 0}, f32.Vec4{0, 0, 1, 0}},
		{f32.Vec4{0, 0, 0, -4}, f32.Vec4{0, 0, 0, -1}},
		{f32.Vec4{1, 2, -2, 4}, f32.Vec4{1. / 5, 2. / 5, -2. / 5, 4. / 5}},
	} {
		assert.For(""%v.Normalize"", test.v).That(test.v.Normalize()).Equals(test.r)
	}
}

func TestV4DXYZ(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		v f32.Vec4
		r f32.Vec3
	}{
		{f32.Vec4{0, 0, 0, 0}, f32.Vec3{0, 0, 0}},
		{f32.Vec4{1, 2, 3, 4}, f32.Vec3{1, 2, 3}},
	} {
		assert.For(""%v.V3D"", test.v).That(test.v.XYZ()).Equals(test.r)
	}
}

func TestAdd4D(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		a f32.Vec4
		b f32.Vec4
		r f32.Vec4
	}{
		{f32.Vec4{0, 0, 0, 0}, f32.Vec4{0, 0, 0, 0}, f32.Vec4{0, 0, 0, 0}},
		{f32.Vec4{1, 2, 3, 4}, f32.Vec4{0, 0, 0, 0}, f32.Vec4{1, 2, 3, 4}},
		{f32.Vec4{0, 0, 0, 0}, f32.Vec4{4, 3, 2, 1}, f32.Vec4{4, 3, 2, 1}},
		{f32.Vec4{1, 2, 3, 4}, f32.Vec4{-1, -2, -3, -4}, f32.Vec4{0, 0, 0, 0}},
	} {
		assert.For(""Add4D(%v, %v)"", test.a, test.b).
			That(f32.Add4D(test.a, test.b)).Equals(test.r)
	}
}

func TestSub4D(t *testing.T) {
	assert := assert.To(t)
	for _, test := range []struct {
		a f32.Vec4
		b f32.Vec4
		r f32.Vec4
	}{
		{f32.Vec4{0, 0, 0, 0}, f32.Vec4{0, 0, 0, 0}, f32.Vec4{0, 0, 0, 0}},
		{f32.Vec4{1, 2, 3, 4}, f32.Vec4{0, 0, 0, 0}, f32.Vec4{1, 2, 3, 4}},
		{f32.Vec4{0, 0, 0, 0}, f32.Vec4{4, 3, 2, 1}, f32.Vec4{-4, -3, -2, -1}},
		{f32.Vec4{1, 2, 3, 4}, f32.Vec4{-1, -2, -3, -4}, f32.Vec4{2, 4, 6, 8}},
	} {
		assert.For(""Sub4D(%v, %v)"", test.a, test.b).
			That(f32.Sub4D(test.a, test.b)).Equals(test.r)
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iqCRBx
code,"/*
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1_test

import (
	""reflect""
	""testing""

	""k8s.io/api/scheduling/v1alpha1""
	""k8s.io/apimachinery/pkg/runtime""
	""k8s.io/kubernetes/pkg/api/legacyscheme""

	apiv1 ""k8s.io/api/core/v1""
	utilfeature ""k8s.io/apiserver/pkg/util/feature""
	featuregatetesting ""k8s.io/component-base/featuregate/testing""
	// enforce that all types are installed
	_ ""k8s.io/kubernetes/pkg/api/testapi""
	""k8s.io/kubernetes/pkg/features""
)

func roundTrip(t *testing.T, obj runtime.Object) runtime.Object {
	codec := legacyscheme.Codecs.LegacyCodec(v1alpha1.SchemeGroupVersion)
	data, err := runtime.Encode(codec, obj)
	if err != nil {
		t.Errorf(""%v\n %#v"", err, obj)
		return nil
	}
	obj2, err := runtime.Decode(codec, data)
	if err != nil {
		t.Errorf(""%v\nData: %s\nSource: %#v"", err, string(data), obj)
		return nil
	}
	obj3 := reflect.New(reflect.TypeOf(obj).Elem()).Interface().(runtime.Object)
	err = legacyscheme.Scheme.Convert(obj2, obj3, nil)
	if err != nil {
		t.Errorf(""%v\nSource: %#v"", err, obj2)
		return nil
	}
	return obj3
}

func TestSetDefaultPreempting(t *testing.T) {
	priorityClass := &v1alpha1.PriorityClass{}

	// set NonPreemptingPriority true
	defer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.NonPreemptingPriority, true)()

	output := roundTrip(t, runtime.Object(priorityClass)).(*v1alpha1.PriorityClass)
	if output.PreemptionPolicy == nil || *output.PreemptionPolicy != apiv1.PreemptLowerPriority {
		t.Errorf(""Expected PriorityClass.Preempting value: %+v\ngot: %+v\n"", apiv1.PreemptLowerPriority, output.PreemptionPolicy)
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yCOP0F
code,"package net

import (
	""io""
)

const (
	bufferSize = 4 * 1024
)

// ReaderToChan dumps all content from a given reader to a chan by constantly reading it until EOF.
func ReaderToChan(stream chan<- []byte, reader io.Reader) error {
	for {
		buffer := make([]byte, bufferSize)
		nBytes, err := reader.Read(buffer)
		if nBytes > 0 {
			stream <- buffer[:nBytes]
		}
		if err != nil {
			return err
		}
	}
}

// ChanToWriter dumps all content from a given chan to a writer until the chan is closed.
func ChanToWriter(writer io.Writer, stream <-chan []byte) error {
	for buffer := range stream {
		_, err := writer.Write(buffer)
		if err != nil {
			return err
		}
	}
	return nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HTue8G
code,"/*
Copyright 2022 The Vitess Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package physical

import (
	""strings""

	""vitess.io/vitess/go/mysql/collations""
	""vitess.io/vitess/go/sqltypes""
	vtrpcpb ""vitess.io/vitess/go/vt/proto/vtrpc""
	""vitess.io/vitess/go/vt/sqlparser""
	""vitess.io/vitess/go/vt/vterrors""
	""vitess.io/vitess/go/vt/vtgate/evalengine""
)

func (rp *Route) findSysInfoRoutingPredicatesGen4(predicates []sqlparser.Expr, reservedVars *sqlparser.ReservedVars) error {
	for _, pred := range predicates {
		isTableSchema, bvName, out, err := extractInfoSchemaRoutingPredicate(pred, reservedVars)
		if err != nil {
			return err
		}
		if out == nil {
			// we didn't find a predicate to use for routing, continue to look for next predicate
			continue
		}

		if isTableSchema {
			rp.SysTableTableSchema = append(rp.SysTableTableSchema, out)
		} else {
			if rp.SysTableTableName == nil {
				rp.SysTableTableName = map[string]evalengine.Expr{}
			}
			rp.SysTableTableName[bvName] = out
		}
	}
	return nil
}

func extractInfoSchemaRoutingPredicate(in sqlparser.Expr, reservedVars *sqlparser.ReservedVars) (bool, string, evalengine.Expr, error) {
	switch cmp := in.(type) {
	case *sqlparser.ComparisonExpr:
		if cmp.Operator == sqlparser.EqualOp {
			isSchemaName, col, other, replaceOther := findOtherComparator(cmp)
			if col != nil && shouldRewrite(other) {
				evalExpr, err := evalengine.Translate(other, &notImplementedSchemaInfoConverter{})
				if err != nil {
					if strings.Contains(err.Error(), evalengine.ErrTranslateExprNotSupported) {
						// This just means we can't rewrite this particular expression,
						// not that we have to exit altogether
						return false, """", nil, nil
					}
					return false, """", nil, err
				}
				var name string
				if isSchemaName {
					name = sqltypes.BvSchemaName
				} else {
					name = reservedVars.ReserveColName(col.(*sqlparser.ColName))
				}
				replaceOther(sqlparser.NewArgument(name))
				return isSchemaName, name, evalExpr, nil
			}
		}
	}
	return false, """", nil, nil
}

func findOtherComparator(cmp *sqlparser.ComparisonExpr) (bool, sqlparser.Expr, sqlparser.Expr, func(arg sqlparser.Argument)) {
	if schema, table := isTableSchemaOrName(cmp.Left); schema || table {
		return schema, cmp.Left, cmp.Right, func(arg sqlparser.Argument) {
			cmp.Right = arg
		}
	}
	if schema, table := isTableSchemaOrName(cmp.Right); schema || table {
		return schema, cmp.Right, cmp.Left, func(arg sqlparser.Argument) {
			cmp.Left = arg
		}
	}

	return false, nil, nil, nil
}

func shouldRewrite(e sqlparser.Expr) bool {
	switch node := e.(type) {
	case *sqlparser.FuncExpr:
		// we should not rewrite database() calls against information_schema
		return !(node.Name.EqualString(""database"") || node.Name.EqualString(""schema""))
	}
	return true
}

func isTableSchemaOrName(e sqlparser.Expr) (isTableSchema bool, isTableName bool) {
	col, ok := e.(*sqlparser.ColName)
	if !ok {
		return false, false
	}
	return isDbNameCol(col), isTableNameCol(col)
}

func isDbNameCol(col *sqlparser.ColName) bool {
	return col.Name.EqualString(""table_schema"") || col.Name.EqualString(""constraint_schema"") || col.Name.EqualString(""schema_name"") || col.Name.EqualString(""routine_schema"")
}

func isTableNameCol(col *sqlparser.ColName) bool {
	return col.Name.EqualString(""table_name"")
}

type notImplementedSchemaInfoConverter struct{}

func (f *notImplementedSchemaInfoConverter) ColumnLookup(*sqlparser.ColName) (int, error) {
	return 0, vterrors.Errorf(vtrpcpb.Code_UNIMPLEMENTED, ""Comparing table schema name with a column name not yet supported"")
}

func (f *notImplementedSchemaInfoConverter) CollationForExpr(sqlparser.Expr) collations.ID {
	return collations.Unknown
}

func (f *notImplementedSchemaInfoConverter) DefaultCollation() collations.ID {
	return collations.Default()
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hiG1XC
code,"package connect

import (
	""strings""
	""testing""
)

func TestCatalogCommand_noTabs(t *testing.T) {
	t.Parallel()
	if strings.ContainsRune(New().Help(), '\t') {
		t.Fatal(""help has tabs"")
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WC1QAz
code,"package rule

import (
	""fmt""

	""github.com/mgechev/revive/lint""
)

// ImportsBlacklistRule lints given else constructs.
type ImportsBlacklistRule struct {
	blacklist map[string]bool
}

// Apply applies the rule to given file.
func (r *ImportsBlacklistRule) Apply(file *lint.File, arguments lint.Arguments) []lint.Failure {
	var failures []lint.Failure

	if file.IsTest() {
		return failures // skip, test file
	}

	if r.blacklist == nil {
		r.blacklist = make(map[string]bool, len(arguments))

		for _, arg := range arguments {
			argStr, ok := arg.(string)
			if !ok {
				panic(fmt.Sprintf(""Invalid argument to the imports-blacklist rule. Expecting a string, got %T"", arg))
			}
			// we add quotes if not present, because when parsed, the value of the AST node, will be quoted
			if len(argStr) > 2 && argStr[0] != '""' && argStr[len(argStr)-1] != '""' {
				argStr = fmt.Sprintf(`%q`, argStr)
			}
			r.blacklist[argStr] = true
		}
	}

	for _, is := range file.AST.Imports {
		path := is.Path
		if path != nil && r.blacklist[path.Value] {
			failures = append(failures, lint.Failure{
				Confidence: 1,
				Failure:    ""should not use the following blacklisted import: "" + path.Value,
				Node:       is,
				Category:   ""imports"",
			})
		}
	}

	return failures
}

// Name returns the rule name.
func (r *ImportsBlacklistRule) Name() string {
	return ""imports-blacklist""
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",X96Wr_
code,"package swarm

import (
	""testing""
	""time""

	ma ""github.com/ipfs/go-ipfs/Godeps/_workspace/src/github.com/jbenet/go-multiaddr""
	context ""github.com/ipfs/go-ipfs/Godeps/_workspace/src/golang.org/x/net/context""

	inet ""github.com/ipfs/go-ipfs/p2p/net""
)

func TestNotifications(t *testing.T) {
	ctx := context.Background()
	swarms := makeSwarms(ctx, t, 5)
	defer func() {
		for _, s := range swarms {
			s.Close()
		}
	}()

	timeout := 5 * time.Second

	// signup notifs
	notifiees := make([]*netNotifiee, len(swarms))
	for i, swarm := range swarms {
		n := newNetNotifiee()
		swarm.Notify(n)
		notifiees[i] = n
	}

	connectSwarms(t, ctx, swarms)

	<-time.After(time.Millisecond)
	// should've gotten 5 by now.

	// test everyone got the correct connection opened calls
	for i, s := range swarms {
		n := notifiees[i]
		for _, s2 := range swarms {
			if s == s2 {
				continue
			}

			var actual []inet.Conn
			for len(s.ConnectionsToPeer(s2.LocalPeer())) != len(actual) {
				select {
				case c := <-n.connected:
					actual = append(actual, c)
				case <-time.After(timeout):
					t.Fatal(""timeout"")
				}
			}

			expect := s.ConnectionsToPeer(s2.LocalPeer())
			for _, c1 := range actual {
				found := false
				for _, c2 := range expect {
					if c1 == c2 {
						found = true
						break
					}
				}
				if !found {
					t.Error(""connection not found"")
				}
			}

		}
	}

	complement := func(c inet.Conn) (*Swarm, *netNotifiee, *Conn) {
		for i, s := range swarms {
			for _, c2 := range s.Connections() {
				if c.LocalMultiaddr().Equal(c2.RemoteMultiaddr()) &&
					c2.LocalMultiaddr().Equal(c.RemoteMultiaddr()) {
					return s, notifiees[i], c2
				}
			}
		}
		t.Fatal(""complementary conn not found"", c)
		return nil, nil, nil
	}

	testOCStream := func(n *netNotifiee, s inet.Stream) {
		var s2 inet.Stream
		select {
		case s2 = <-n.openedStream:
			t.Log(""got notif for opened stream"")
		case <-time.After(timeout):
			t.Fatal(""timeout"")
		}
		if s != s2 {
			t.Fatal(""got incorrect stream"", s.Conn(), s2.Conn())
		}

		select {
		case s2 = <-n.closedStream:
			t.Log(""got notif for closed stream"")
		case <-time.After(timeout):
			t.Fatal(""timeout"")
		}
		if s != s2 {
			t.Fatal(""got incorrect stream"", s.Conn(), s2.Conn())
		}
	}

	streams := make(chan inet.Stream)
	for _, s := range swarms {
		s.SetStreamHandler(func(s inet.Stream) {
			streams <- s
			s.Close()
		})
	}

	// open a streams in each conn
	for i, s := range swarms {
		for _, c := range s.Connections() {
			_, n2, _ := complement(c)

			st1, err := c.NewStream()
			if err != nil {
				t.Error(err)
			} else {
				st1.Write([]byte(""hello""))
				st1.Close()
				testOCStream(notifiees[i], st1)
				st2 := <-streams
				testOCStream(n2, st2)
			}
		}
	}

	// close conns
	for i, s := range swarms {
		n := notifiees[i]
		for _, c := range s.Connections() {
			_, n2, c2 := complement(c)
			c.Close()
			c2.Close()

			var c3, c4 inet.Conn
			select {
			case c3 = <-n.disconnected:
			case <-time.After(timeout):
				t.Fatal(""timeout"")
			}
			if c != c3 {
				t.Fatal(""got incorrect conn"", c, c3)
			}

			select {
			case c4 = <-n2.disconnected:
			case <-time.After(timeout):
				t.Fatal(""timeout"")
			}
			if c2 != c4 {
				t.Fatal(""got incorrect conn"", c, c2)
			}
		}
	}
}

type netNotifiee struct {
	listen       chan ma.Multiaddr
	listenClose  chan ma.Multiaddr
	connected    chan inet.Conn
	disconnected chan inet.Conn
	openedStream chan inet.Stream
	closedStream chan inet.Stream
}

func newNetNotifiee() *netNotifiee {
	return &netNotifiee{
		listen:       make(chan ma.Multiaddr),
		listenClose:  make(chan ma.Multiaddr),
		connected:    make(chan inet.Conn),
		disconnected: make(chan inet.Conn),
		openedStream: make(chan inet.Stream),
		closedStream: make(chan inet.Stream),
	}
}

func (nn *netNotifiee) Listen(n inet.Network, a ma.Multiaddr) {
	nn.listen <- a
}
func (nn *netNotifiee) ListenClose(n inet.Network, a ma.Multiaddr) {
	nn.listenClose <- a
}
func (nn *netNotifiee) Connected(n inet.Network, v inet.Conn) {
	nn.connected <- v
}
func (nn *netNotifiee) Disconnected(n inet.Network, v inet.Conn) {
	nn.disconnected <- v
}
func (nn *netNotifiee) OpenedStream(n inet.Network, v inet.Stream) {
	nn.openedStream <- v
}
func (nn *netNotifiee) ClosedStream(n inet.Network, v inet.Stream) {
	nn.closedStream <- v
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UursFr
code,"// Copyright (c) 2013-2015 The btcsuite developers
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

package wire_test

import (
	""bytes""
	""io""
)

// fixedWriter implements the io.Writer interface and intentially allows
// testing of error paths by forcing short writes.
type fixedWriter struct {
	b   []byte
	pos int
}

// Write writes the contents of p to w.  When the contents of p would cause
// the writer to exceed the maximum allowed size of the fixed writer,
// io.ErrShortWrite is returned and the writer is left unchanged.
//
// This satisfies the io.Writer interface.
func (w *fixedWriter) Write(p []byte) (n int, err error) {
	lenp := len(p)
	if w.pos+lenp > cap(w.b) {
		return 0, io.ErrShortWrite
	}
	n = lenp
	w.pos += copy(w.b[w.pos:], p)
	return
}

// Bytes returns the bytes already written to the fixed writer.
func (w *fixedWriter) Bytes() []byte {
	return w.b
}

// newFixedWriter returns a new io.Writer that will error once more bytes than
// the specified max have been written.
func newFixedWriter(max int) io.Writer {
	b := make([]byte, max, max)
	fw := fixedWriter{b, 0}
	return &fw
}

// fixedReader implements the io.Reader interface and intentially allows
// testing of error paths by forcing short reads.
type fixedReader struct {
	buf   []byte
	pos   int
	iobuf *bytes.Buffer
}

// Read reads the next len(p) bytes from the fixed reader.  When the number of
// bytes read would exceed the maximum number of allowed bytes to be read from
// the fixed writer, an error is returned.
//
// This satisfies the io.Reader interface.
func (fr *fixedReader) Read(p []byte) (n int, err error) {
	n, err = fr.iobuf.Read(p)
	fr.pos += n
	return
}

// newFixedReader returns a new io.Reader that will error once more bytes than
// the specified max have been read.
func newFixedReader(max int, buf []byte) io.Reader {
	b := make([]byte, max, max)
	if buf != nil {
		copy(b[:], buf)
	}

	iobuf := bytes.NewBuffer(b)
	fr := fixedReader{b, 0, iobuf}
	return &fr
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t6__FT
code,"package utils

import (
	""io/ioutil""
	""net/http""

	""encoding/json""
	""fmt""

	""github.com/juju/errors""
)

// GetRequestBody reads request and returns bytes
func GetRequestBody(r *http.Request) ([]byte, error) {
	body, err := ioutil.ReadAll(r.Body)
	if err != nil {
		return nil, errors.Trace(err)
	}
	return body, nil
}

// Respond sends HTTP response
func Respond(w http.ResponseWriter, data interface{}, code int) error {
	w.WriteHeader(code)

	var resp []byte
	var err error

	resp, err = json.Marshal(data) // No need HAL, if input is not valid JSON

	if err != nil {
		return errors.Trace(err)
	}

	fmt.Fprintln(w, string(resp))

	return nil
}

// UnmarshalRequest unmarshal HTTP request to given struct
func UnmarshalRequest(r *http.Request, v interface{}) error {
	body, err := GetRequestBody(r)
	if err != nil {
		return errors.Trace(err)
	}

	if err := json.Unmarshal(body, v); err != nil {
		return errors.Trace(err)
	}

	return nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6dQ5Ps
code,"package builds

import (
	""fmt""
	""path/filepath""
	""strings""
	""time""

	g ""github.com/onsi/ginkgo""
	o ""github.com/onsi/gomega""
	""k8s.io/kubernetes/test/e2e""

	exutil ""github.com/openshift/origin/test/extended/util""
)

var _ = g.Describe(""default: S2I incremental build with push and pull to authenticated registry"", func() {
	defer g.GinkgoRecover()
	var (
		templateFixture = exutil.FixturePath(""fixtures"", ""incremental-auth-build.json"")
		oc              = exutil.NewCLI(""build-sti-env"", exutil.KubeConfigPath())
	)

	g.JustBeforeEach(func() {
		g.By(""waiting for builder service account"")
		err := exutil.WaitForBuilderAccount(oc.KubeREST().ServiceAccounts(oc.Namespace()))
		o.Expect(err).NotTo(o.HaveOccurred())
	})

	g.Describe(""Building from a template"", func() {
		g.It(fmt.Sprintf(""should create a build from %q template and run it"", templateFixture), func() {
			oc.SetOutputDir(exutil.TestContext.OutputDir)

			g.By(fmt.Sprintf(""calling oc new-app -f %q"", templateFixture))
			err := oc.Run(""new-app"").Args(""-f"", templateFixture).Execute()
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""starting a test build"")
			buildName, err := oc.Run(""start-build"").Args(""initial-build"").Output()
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""expecting the build is in Complete phase"")
			err = exutil.WaitForABuild(oc.REST().Builds(oc.Namespace()), buildName, exutil.CheckBuildSuccessFunc, exutil.CheckBuildFailedFunc)
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""starting a test build using the image produced by the last build"")
			buildName, err = oc.Run(""start-build"").Args(""internal-build"").Output()
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""expecting the build is in Complete phase"")
			err = exutil.WaitForABuild(oc.REST().Builds(oc.Namespace()), buildName, exutil.CheckBuildSuccessFunc, exutil.CheckBuildFailedFunc)
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""getting the Docker image reference from ImageStream"")
			imageName, err := exutil.GetDockerImageReference(oc.REST().ImageStreams(oc.Namespace()), ""internal-image"", ""latest"")
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""writing the pod definition to a file"")
			outputPath := filepath.Join(exutil.TestContext.OutputDir, oc.Namespace()+""-sample-pod.json"")
			pod := exutil.CreatePodForImage(imageName)
			err = exutil.WriteObjectToFile(pod, outputPath)
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(fmt.Sprintf(""calling oc create -f %q"", outputPath))
			err = oc.Run(""create"").Args(""-f"", outputPath).Execute()
			o.Expect(err).NotTo(o.HaveOccurred())

			g.By(""expecting the pod to be running"")
			err = oc.KubeFramework().WaitForPodRunning(pod.Name)
			o.Expect(err).NotTo(o.HaveOccurred())

			// even though the pod is running, the app isn't always started
			// so wait until webrick output is complete before curling.
			logs := """"
			count := 0
			for strings.Contains(logs, ""8080"") && count < 10 {
				logs, _ = oc.Run(""logs"").Args(pod.Name).Output()
				time.Sleep(time.Second)
				count++
			}

			g.By(""expecting the pod container has saved artifacts"")
			out, err := oc.Run(""exec"").Args(""-p"", pod.Name, ""--"", ""curl"", ""http://0.0.0.0:8080"").Output()
			o.Expect(err).NotTo(o.HaveOccurred())

			if !strings.Contains(out, ""artifacts exist"") {
				logs, _ = oc.Run(""logs"").Args(pod.Name).Output()
				e2e.Failf(""Pod %q does not contain expected artifacts: %q\n%q"", pod.Name, out, logs)
			}
		})
	})
})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SDqSfm
code,"/*
Copyright 2016 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package fake

import (
	api ""k8s.io/client-go/pkg/api""
	unversioned ""k8s.io/client-go/pkg/api/unversioned""
	v1 ""k8s.io/client-go/pkg/api/v1""
	labels ""k8s.io/client-go/pkg/labels""
	watch ""k8s.io/client-go/pkg/watch""
	testing ""k8s.io/client-go/testing""
)

// FakeResourceQuotas implements ResourceQuotaInterface
type FakeResourceQuotas struct {
	Fake *FakeCore
	ns   string
}

var resourcequotasResource = unversioned.GroupVersionResource{Group: """", Version: ""v1"", Resource: ""resourcequotas""}

func (c *FakeResourceQuotas) Create(resourceQuota *v1.ResourceQuota) (result *v1.ResourceQuota, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewCreateAction(resourcequotasResource, c.ns, resourceQuota), &v1.ResourceQuota{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ResourceQuota), err
}

func (c *FakeResourceQuotas) Update(resourceQuota *v1.ResourceQuota) (result *v1.ResourceQuota, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewUpdateAction(resourcequotasResource, c.ns, resourceQuota), &v1.ResourceQuota{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ResourceQuota), err
}

func (c *FakeResourceQuotas) UpdateStatus(resourceQuota *v1.ResourceQuota) (*v1.ResourceQuota, error) {
	obj, err := c.Fake.
		Invokes(testing.NewUpdateSubresourceAction(resourcequotasResource, ""status"", c.ns, resourceQuota), &v1.ResourceQuota{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ResourceQuota), err
}

func (c *FakeResourceQuotas) Delete(name string, options *v1.DeleteOptions) error {
	_, err := c.Fake.
		Invokes(testing.NewDeleteAction(resourcequotasResource, c.ns, name), &v1.ResourceQuota{})

	return err
}

func (c *FakeResourceQuotas) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	action := testing.NewDeleteCollectionAction(resourcequotasResource, c.ns, listOptions)

	_, err := c.Fake.Invokes(action, &v1.ResourceQuotaList{})
	return err
}

func (c *FakeResourceQuotas) Get(name string) (result *v1.ResourceQuota, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewGetAction(resourcequotasResource, c.ns, name), &v1.ResourceQuota{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ResourceQuota), err
}

func (c *FakeResourceQuotas) List(opts v1.ListOptions) (result *v1.ResourceQuotaList, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewListAction(resourcequotasResource, c.ns, opts), &v1.ResourceQuotaList{})

	if obj == nil {
		return nil, err
	}

	label, _, _ := testing.ExtractFromListOptions(opts)
	if label == nil {
		label = labels.Everything()
	}
	list := &v1.ResourceQuotaList{}
	for _, item := range obj.(*v1.ResourceQuotaList).Items {
		if label.Matches(labels.Set(item.Labels)) {
			list.Items = append(list.Items, item)
		}
	}
	return list, err
}

// Watch returns a watch.Interface that watches the requested resourceQuotas.
func (c *FakeResourceQuotas) Watch(opts v1.ListOptions) (watch.Interface, error) {
	return c.Fake.
		InvokesWatch(testing.NewWatchAction(resourcequotasResource, c.ns, opts))

}

// Patch applies the patch and returns the patched resourceQuota.
func (c *FakeResourceQuotas) Patch(name string, pt api.PatchType, data []byte, subresources ...string) (result *v1.ResourceQuota, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewPatchSubresourceAction(resourcequotasResource, c.ns, name, data, subresources...), &v1.ResourceQuota{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1.ResourceQuota), err
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nLsdS_
code,"// Copyright 2015 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package asm

import (
	""bufio""
	""bytes""
	""fmt""
	""io/ioutil""
	""os""
	""path/filepath""
	""regexp""
	""sort""
	""strconv""
	""strings""
	""testing""

	""cmd/asm/internal/lex""
	""cmd/internal/obj""
	""cmd/internal/objabi""
)

// An end-to-end test for the assembler: Do we print what we parse?
// Output is generated by, in effect, turning on -S and comparing the
// result against a golden file.

func testEndToEnd(t *testing.T, goarch, file string) {
	input := filepath.Join(""testdata"", file+"".s"")
	architecture, ctxt := setArch(goarch)
	architecture.Init(ctxt)
	lexer := lex.NewLexer(input)
	parser := NewParser(ctxt, architecture, lexer)
	pList := new(obj.Plist)
	var ok bool
	testOut = new(bytes.Buffer) // The assembler writes test output to this buffer.
	ctxt.Bso = bufio.NewWriter(os.Stdout)
	defer ctxt.Bso.Flush()
	failed := false
	ctxt.DiagFunc = func(format string, args ...interface{}) {
		failed = true
		t.Errorf(format, args...)
	}
	pList.Firstpc, ok = parser.Parse()
	if !ok || failed {
		t.Errorf(""asm: %s assembly failed"", goarch)
		return
	}
	output := strings.Split(testOut.String(), ""\n"")

	// Reconstruct expected output by independently ""parsing"" the input.
	data, err := ioutil.ReadFile(input)
	if err != nil {
		t.Error(err)
		return
	}
	lineno := 0
	seq := 0
	hexByLine := map[string]string{}
	lines := strings.SplitAfter(string(data), ""\n"")
Diff:
	for _, line := range lines {
		lineno++

		// Ignore include of textflag.h.
		if strings.HasPrefix(line, ""#include "") {
			continue
		}

		// The general form of a test input line is:
		//	// comment
		//	INST args [// printed form] [// hex encoding]
		parts := strings.Split(line, ""//"")
		printed := strings.TrimSpace(parts[0])
		if printed == """" || strings.HasSuffix(printed, "":"") { // empty or label
			continue
		}
		seq++

		var hexes string
		switch len(parts) {
		default:
			t.Errorf(""%s:%d: unable to understand comments: %s"", input, lineno, line)
		case 1:
			// no comment
		case 2:
			// might be printed form or hex
			note := strings.TrimSpace(parts[1])
			if isHexes(note) {
				hexes = note
			} else {
				printed = note
			}
		case 3:
			// printed form, then hex
			printed = strings.TrimSpace(parts[1])
			hexes = strings.TrimSpace(parts[2])
			if !isHexes(hexes) {
				t.Errorf(""%s:%d: malformed hex instruction encoding: %s"", input, lineno, line)
			}
		}

		if hexes != """" {
			hexByLine[fmt.Sprintf(""%s:%d"", input, lineno)] = hexes
		}

		// Canonicalize spacing in printed form.
		// First field is opcode, then tab, then arguments separated by spaces.
		// Canonicalize spaces after commas first.
		// Comma to separate argument gets a space; comma within does not.
		var buf []byte
		nest := 0
		for i := 0; i < len(printed); i++ {
			c := printed[i]
			switch c {
			case '{', '[':
				nest++
			case '}', ']':
				nest--
			case ',':
				buf = append(buf, ',')
				if nest == 0 {
					buf = append(buf, ' ')
				}
				for i+1 < len(printed) && (printed[i+1] == ' ' || printed[i+1] == '\t') {
					i++
				}
				continue
			}
			buf = append(buf, c)
		}

		f := strings.Fields(string(buf))

		// Turn relative (PC) into absolute (PC) automatically,
		// so that most branch instructions don't need comments
		// giving the absolute form.
		if len(f) > 0 && strings.HasSuffix(printed, ""(PC)"") {
			last := f[len(f)-1]
			n, err := strconv.Atoi(last[:len(last)-len(""(PC)"")])
			if err == nil {
				f[len(f)-1] = fmt.Sprintf(""%d(PC)"", seq+n)
			}
		}

		if len(f) == 1 {
			printed = f[0]
		} else {
			printed = f[0] + ""\t"" + strings.Join(f[1:], "" "")
		}

		want := fmt.Sprintf(""%05d (%s:%d)\t%s"", seq, input, lineno, printed)
		for len(output) > 0 && (output[0] < want || output[0] != want && len(output[0]) >= 5 && output[0][:5] == want[:5]) {
			if len(output[0]) >= 5 && output[0][:5] == want[:5] {
				t.Errorf(""mismatched output:\nhave %s\nwant %s"", output[0], want)
				output = output[1:]
				continue Diff
			}
			t.Errorf(""unexpected output: %q"", output[0])
			output = output[1:]
		}
		if len(output) > 0 && output[0] == want {
			output = output[1:]
		} else {
			t.Errorf(""missing output: %q"", want)
		}
	}
	for len(output) > 0 {
		if output[0] == """" {
			// spurious blank caused by Split on ""\n""
			output = output[1:]
			continue
		}
		t.Errorf(""unexpected output: %q"", output[0])
		output = output[1:]
	}

	// Checked printing.
	// Now check machine code layout.

	top := pList.Firstpc
	var text *obj.LSym
	ok = true
	ctxt.DiagFunc = func(format string, args ...interface{}) {
		t.Errorf(format, args...)
		ok = false
	}
	obj.Flushplist(ctxt, pList, nil, """")

	for p := top; p != nil; p = p.Link {
		if p.As == obj.ATEXT {
			text = p.From.Sym
		}
		hexes := hexByLine[p.Line()]
		if hexes == """" {
			continue
		}
		delete(hexByLine, p.Line())
		if text == nil {
			t.Errorf(""%s: instruction outside TEXT"", p)
		}
		size := int64(len(text.P)) - p.Pc
		if p.Link != nil {
			size = p.Link.Pc - p.Pc
		} else if p.Isize != 0 {
			size = int64(p.Isize)
		}
		var co",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",M6jnF0
code,"// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hapi/chart/metadata.proto

package chart

import proto ""github.com/golang/protobuf/proto""
import fmt ""fmt""
import math ""math""

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Metadata_Engine int32

const (
	Metadata_UNKNOWN Metadata_Engine = 0
	Metadata_GOTPL   Metadata_Engine = 1
)

var Metadata_Engine_name = map[int32]string{
	0: ""UNKNOWN"",
	1: ""GOTPL"",
}
var Metadata_Engine_value = map[string]int32{
	""UNKNOWN"": 0,
	""GOTPL"":   1,
}

func (x Metadata_Engine) String() string {
	return proto.EnumName(Metadata_Engine_name, int32(x))
}
func (Metadata_Engine) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_d6c714c73a051dcb, []int{1, 0}
}

// Maintainer describes a Chart maintainer.
type Maintainer struct {
	// Name is a user name or organization name
	Name string `protobuf:""bytes,1,opt,name=name,proto3"" json:""name,omitempty""`
	// Email is an optional email address to contact the named maintainer
	Email string `protobuf:""bytes,2,opt,name=email,proto3"" json:""email,omitempty""`
	// Url is an optional URL to an address for the named maintainer
	Url                  string   `protobuf:""bytes,3,opt,name=url,proto3"" json:""url,omitempty""`
	XXX_NoUnkeyedLiteral struct{} `json:""-""`
	XXX_unrecognized     []byte   `json:""-""`
	XXX_sizecache        int32    `json:""-""`
}

func (m *Maintainer) Reset()         { *m = Maintainer{} }
func (m *Maintainer) String() string { return proto.CompactTextString(m) }
func (*Maintainer) ProtoMessage()    {}
func (*Maintainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_d6c714c73a051dcb, []int{0}
}
func (m *Maintainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Maintainer.Unmarshal(m, b)
}
func (m *Maintainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Maintainer.Marshal(b, m, deterministic)
}
func (dst *Maintainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Maintainer.Merge(dst, src)
}
func (m *Maintainer) XXX_Size() int {
	return xxx_messageInfo_Maintainer.Size(m)
}
func (m *Maintainer) XXX_DiscardUnknown() {
	xxx_messageInfo_Maintainer.DiscardUnknown(m)
}

var xxx_messageInfo_Maintainer proto.InternalMessageInfo

func (m *Maintainer) GetName() string {
	if m != nil {
		return m.Name
	}
	return """"
}

func (m *Maintainer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return """"
}

func (m *Maintainer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return """"
}

// 	Metadata for a Chart file. This models the structure of a Chart.yaml file.
//
// 	Spec: https://k8s.io/helm/blob/master/docs/design/chart_format.md#the-chart-file
type Metadata struct {
	// The name of the chart
	Name string `protobuf:""bytes,1,opt,name=name,proto3"" json:""name,omitempty""`
	// The URL to a relevant project page, git repo, or contact person
	Home string `protobuf:""bytes,2,opt,name=home,proto3"" json:""home,omitempty""`
	// Source is the URL to the source code of this chart
	Sources []string `protobuf:""bytes,3,rep,name=sources,proto3"" json:""sources,omitempty""`
	// A SemVer 2 conformant version string of the chart
	Version string `protobuf:""bytes,4,opt,name=version,proto3"" json:""version,omitempty""`
	// A one-sentence description of the chart
	Description string `protobuf:""bytes,5,opt,name=description,proto3"" json:""description,omitempty""`
	// A list of string keywords
	Keywords []string `protobuf:""bytes,6,rep,name=keywords,proto3"" json:""keywords,omitempty""`
	// A list of name and URL/email address combinations for the maintainer(s)
	Maintainers []*Maintainer `protobuf:""bytes,7,rep,name=maintainers,proto3"" json:""maintainers,omitempty""`
	// The name of the template engine to use. Defaults to 'gotpl'.
	Engine string `protobuf:""bytes,8,opt,name=engine,proto3"" json:""engine,omitempty""`
	// The URL to an icon file.
	Icon string `protobuf:""bytes,9,opt,name=icon,proto3"" json:""icon,omitempty""`
	// The API Version of this chart.
	ApiVersion string `protobuf:""bytes,10,opt,name=apiVersion,proto3"" json:""apiVersion,omitempty""`
	// The condition to check to enable chart
	Condition string `protobuf:""bytes,11,opt,name=condition,proto3"" json:""condition,omitempty""`
	// The tags to check to enable chart
	Tags string `protobuf:""bytes,12,opt,name=tags,proto3"" json:""tags,omitempty""`
	// The version of the application enclosed inside of this chart.
	AppVersion string `protobuf:""bytes,13,opt,name=appVersion,proto3"" json:""appVersion,omitempty""`
	// Whether or not this chart is deprecated
	Deprecated bool `protobuf:""varint,14,opt,name=deprecated,proto3"" json:""deprecated,omitempty""`
	// TillerVersion is a SemVer constraints on what version of Tiller is required.
	// See SemVer ranges here: https://git",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Jw7tR2
code,"package testdata

import (
	. ""goa.design/goa/v3/dsl""
)

var ConflictWithAPINameAndServiceNameDSL = func() {
	var _ = API(""aloha"", func() {
		Title(""conflict with API name and service names"")
	})
	var _ = Service(""aloha"", func() {})     // same as API name
	var _ = Service(""alohaapi"", func() {})  // API name + 'api' suffix
	var _ = Service(""alohaapi1"", func() {}) // API name + 'api' suffix + sequential no.
}

var ConflictWithGoifiedAPINameAndServiceNamesDSL = func() {
	var _ = API(""good-by"", func() {
		Title(""conflict with goified API name and goified service names"")
	})
	var _ = Service(""good-by-"", func() {})      // Goify name is same as API name
	var _ = Service(""good-by-api"", func() {})   // API name + 'api' suffix
	var _ = Service(""good-by-api-1"", func() {}) // API name + 'api' suffix + sequential no.
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",geXzPT
code,"// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// godoc: Go Documentation Server

// Web server tree:
//
//	http://godoc/		main landing page
//	http://godoc/doc/	serve from $GOROOT/doc - spec, mem, etc.
//	http://godoc/src/	serve files from $GOROOT/src; .go gets pretty-printed
//	http://godoc/cmd/	serve documentation about commands
//	http://godoc/pkg/	serve documentation about packages
//				(idea is if you say import ""compress/zlib"", you go to
//				http://godoc/pkg/compress/zlib)
//
// Command-line interface:
//
//	godoc packagepath [name ...]
//
//	godoc compress/zlib
//		- prints doc for package compress/zlib
//	godoc crypto/block Cipher NewCMAC
//		- prints doc for Cipher and NewCMAC in package crypto/block

// +build !appengine

package main

import (
	""archive/zip""
	_ ""expvar"" // to serve /debug/vars
	""flag""
	""fmt""
	""go/build""
	""log""
	""net/http""
	""net/http/httptest""
	_ ""net/http/pprof"" // to serve /debug/pprof/*
	""net/url""
	""os""
	""path/filepath""
	""regexp""
	""runtime""
	""strings""

	""golang.org/x/tools/godoc""
	""golang.org/x/tools/godoc/analysis""
	""golang.org/x/tools/godoc/static""
	""golang.org/x/tools/godoc/vfs""
	""golang.org/x/tools/godoc/vfs/gatefs""
	""golang.org/x/tools/godoc/vfs/mapfs""
	""golang.org/x/tools/godoc/vfs/zipfs""
)

const defaultAddr = "":6060"" // default webserver address

var (
	// file system to serve
	// (with e.g.: zip -r go.zip $GOROOT -i \*.go -i \*.html -i \*.css -i \*.js -i \*.txt -i \*.c -i \*.h -i \*.s -i \*.png -i \*.jpg -i \*.sh -i favicon.ico)
	zipfile = flag.String(""zip"", """", ""zip file providing the file system to serve; disabled if empty"")

	// file-based index
	writeIndex = flag.Bool(""write_index"", false, ""write index to a file; the file name must be specified with -index_files"")

	analysisFlag = flag.String(""analysis"", """", `comma-separated list of analyses to perform (supported: type, pointer). See http://golang.org/lib/godoc/analysis/help.html`)

	// network
	httpAddr   = flag.String(""http"", """", ""HTTP service address (e.g., '""+defaultAddr+""')"")
	serverAddr = flag.String(""server"", """", ""webserver address for command line searches"")

	// layout control
	html    = flag.Bool(""html"", false, ""print HTML in command-line mode"")
	srcMode = flag.Bool(""src"", false, ""print (exported) source in command-line mode"")
	allMode = flag.Bool(""all"", false, ""include unexported identifiers in command-line mode"")
	urlFlag = flag.String(""url"", """", ""print HTML for named URL"")

	// command-line searches
	query = flag.Bool(""q"", false, ""arguments are considered search queries"")

	verbose = flag.Bool(""v"", false, ""verbose mode"")

	// file system roots
	// TODO(gri) consider the invariant that goroot always end in '/'
	goroot = flag.String(""goroot"", runtime.GOROOT(), ""Go root directory"")

	// layout control
	tabWidth       = flag.Int(""tabwidth"", 4, ""tab width"")
	showTimestamps = flag.Bool(""timestamps"", false, ""show timestamps with directory listings"")
	templateDir    = flag.String(""templates"", """", ""load templates/JS/CSS from disk in this directory"")
	showPlayground = flag.Bool(""play"", false, ""enable playground in web interface"")
	showExamples   = flag.Bool(""ex"", false, ""show examples in command line mode"")
	declLinks      = flag.Bool(""links"", true, ""link identifiers to their declarations"")

	// search index
	indexEnabled  = flag.Bool(""index"", false, ""enable search index"")
	indexFiles    = flag.String(""index_files"", """", ""glob pattern specifying index files; if not empty, the index is read from these files in sorted order"")
	indexInterval = flag.Duration(""index_interval"", 0, ""interval of indexing; 0 for default (5m), negative to only index once at startup"")
	maxResults    = flag.Int(""maxresults"", 10000, ""maximum number of full text search results shown"")
	indexThrottle = flag.Float64(""index_throttle"", 0.75, ""index throttle value; 0.0 = no time allocated, 1.0 = full throttle"")

	// source code notes
	notesRx = flag.String(""notes"", ""BUG"", ""regular expression matching note markers to show"")
)

func usage() {
	fmt.Fprintf(os.Stderr,
		""usage: godoc package [name ...]\n""+
			""	godoc -http=""+defaultAddr+""\n"")
	flag.PrintDefaults()
	os.Exit(2)
}

func loggingHandler(h http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, req *http.Request) {
		log.Printf(""%s\t%s"", req.RemoteAddr, req.URL)
		h.ServeHTTP(w, req)
	})
}

func handleURLFlag() {
	// Try up to 10 fetches, following redirects.
	urlstr := *urlFlag
	for i := 0; i < 10; i++ {
		// Prepare request.
		u, err := url.Parse(urlstr)
		if err != nil {
			log.Fatal(err)
		}
		req := &http.Request{
			URL: u,
		}

		// Invoke default HTTP handler to serve request
		// to our buffering httpWriter.
		w := httptest.NewRecorder()
		http.DefaultServeMux.ServeHTTP(w, req)

		// Return data, error, or follow redirect.
		switch w.Code {
		case 200: // ok
			os.Stdout.Write(w.Body.Bytes())
			return
		case 301, 302, 303, 307: // redirect
			redirect := w.HeaderMap.Get(""Location"")
			if redirect == """" {
				log.Fatalf(""HTTP %d without Location header"", w.Cod",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0Au3s0
code,"// Copyright 2019 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package restore

import (
	""context""
	""database/sql""
	""fmt""
	""io""
	""math""
	""os""
	""strings""
	""sync""
	""time""

	""github.com/coreos/go-semver/semver""
	""github.com/docker/go-units""
	""github.com/google/uuid""
	""github.com/pingcap/errors""
	""github.com/pingcap/failpoint""
	sstpb ""github.com/pingcap/kvproto/pkg/import_sstpb""
	berrors ""github.com/pingcap/tidb/br/pkg/errors""
	""github.com/pingcap/tidb/br/pkg/lightning/backend""
	""github.com/pingcap/tidb/br/pkg/lightning/backend/importer""
	""github.com/pingcap/tidb/br/pkg/lightning/backend/kv""
	""github.com/pingcap/tidb/br/pkg/lightning/backend/local""
	""github.com/pingcap/tidb/br/pkg/lightning/backend/tidb""
	""github.com/pingcap/tidb/br/pkg/lightning/checkpoints""
	""github.com/pingcap/tidb/br/pkg/lightning/common""
	""github.com/pingcap/tidb/br/pkg/lightning/config""
	""github.com/pingcap/tidb/br/pkg/lightning/errormanager""
	""github.com/pingcap/tidb/br/pkg/lightning/glue""
	""github.com/pingcap/tidb/br/pkg/lightning/log""
	""github.com/pingcap/tidb/br/pkg/lightning/metric""
	""github.com/pingcap/tidb/br/pkg/lightning/mydump""
	""github.com/pingcap/tidb/br/pkg/lightning/tikv""
	verify ""github.com/pingcap/tidb/br/pkg/lightning/verification""
	""github.com/pingcap/tidb/br/pkg/lightning/web""
	""github.com/pingcap/tidb/br/pkg/lightning/worker""
	""github.com/pingcap/tidb/br/pkg/pdutil""
	""github.com/pingcap/tidb/br/pkg/storage""
	""github.com/pingcap/tidb/br/pkg/utils""
	""github.com/pingcap/tidb/br/pkg/version""
	""github.com/pingcap/tidb/br/pkg/version/build""
	""github.com/pingcap/tidb/meta/autoid""
	""github.com/pingcap/tidb/parser/model""
	""github.com/pingcap/tidb/util/collate""
	pd ""github.com/tikv/pd/client""
	""go.uber.org/atomic""
	""go.uber.org/multierr""
	""go.uber.org/zap""
	""modernc.org/mathutil""
)

const (
	FullLevelCompact = -1
	Level1Compact    = 1
)

const (
	defaultGCLifeTime = 100 * time.Hour
)

const (
	indexEngineID = -1
)

const (
	compactStateIdle int32 = iota
	compactStateDoing
)

const (
	TaskMetaTableName  = ""task_meta""
	TableMetaTableName = ""table_meta""
	// CreateTableMetadataTable stores the per-table sub jobs information used by TiDB Lightning
	CreateTableMetadataTable = `CREATE TABLE IF NOT EXISTS %s (
		task_id 			BIGINT(20) UNSIGNED,
		table_id 			BIGINT(64) NOT NULL,
		table_name 			VARCHAR(64) NOT NULL,
		row_id_base 		BIGINT(20) NOT NULL DEFAULT 0,
		row_id_max 			BIGINT(20) NOT NULL DEFAULT 0,
		total_kvs_base 		BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		total_bytes_base 	BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		checksum_base 		BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		total_kvs 			BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		total_bytes 		BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		checksum 			BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		status 				VARCHAR(32) NOT NULL,
		has_duplicates		BOOL NOT NULL DEFAULT 0,
		PRIMARY KEY (table_id, task_id)
	);`
	// CreateTaskMetaTable stores the pre-lightning metadata used by TiDB Lightning
	CreateTaskMetaTable = `CREATE TABLE IF NOT EXISTS %s (
		task_id BIGINT(20) UNSIGNED NOT NULL,
		pd_cfgs VARCHAR(2048) NOT NULL DEFAULT '',
		status  VARCHAR(32) NOT NULL,
		state   TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0: normal, 1: exited before finish',
		source_bytes BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		cluster_avail BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
		PRIMARY KEY (task_id)
	);`

	compactionLowerThreshold = 512 * units.MiB
	compactionUpperThreshold = 32 * units.GiB
)

var (
	minTiKVVersionForDuplicateResolution = *semver.New(""5.2.0"")
	maxTiKVVersionForDuplicateResolution = version.NextMajorVersion()
)

// DeliverPauser is a shared pauser to pause progress to (*chunkRestore).encodeLoop
var DeliverPauser = common.NewPauser()

// nolint:gochecknoinits // TODO: refactor
func init() {
	failpoint.Inject(""SetMinDeliverBytes"", func(v failpoint.Value) {
		minDeliverBytes = uint64(v.(int))
	})
}

type saveCp struct {
	tableName string
	merger    checkpoints.TableCheckpointMerger
	waitCh    chan<- error
}

type errorSummary struct {
	status checkpoints.CheckpointStatus
	err    error
}

type errorSummaries struct {
	sync.Mutex
	logger  log.Logger
	summary map[string]errorSummary
}

// makeErrorSummaries returns an initialized errorSummaries instance
func makeErrorSummaries(logger log.Logger) errorSummaries {
	return errorSummaries{
		logger:  logger,
		summary: make(map[string]errorSummary),
	}
}

func (es *errorSummaries) emitLog() {
	es.Lock()
	defer es.Unlock()

	if errorCount := len(es.summary); errorCount > 0 {
		logger := es.logger
		logger.Error(""tables failed to be imported"", zap.Int(""count",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xO-dCq
code,"package internalversion

import (
	""github.com/openshift/origin/pkg/template/api""
	""k8s.io/apimachinery/pkg/api/errors""
)

// TemplateListerExpansion allows custom methods to be added to
// TemplateLister.
type TemplateListerExpansion interface {
	GetByUID(uid string) (*api.Template, error)
}

// TemplateNamespaceListerExpansion allows custom methods to be added to
// TemplateNamespaceLister.
type TemplateNamespaceListerExpansion interface{}

func (s templateLister) GetByUID(uid string) (*api.Template, error) {
	templates, err := s.indexer.ByIndex(api.TemplateUIDIndex, uid)
	if err != nil {
		return nil, err
	}
	if len(templates) == 0 {
		return nil, errors.NewNotFound(api.Resource(""template""), uid)
	}
	return templates[0].(*api.Template), nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SmlFSJ
code,"// +build dfssh

package dockerfile2llb

import (
	""github.com/moby/buildkit/client/llb""
	""github.com/moby/buildkit/frontend/dockerfile/instructions""
	""github.com/pkg/errors""
)

func dispatchSSH(m *instructions.Mount) (llb.RunOption, error) {
	if m.Source != """" {
		return nil, errors.Errorf(""ssh does not support source"")
	}
	opts := []llb.SSHOption{llb.SSHID(m.CacheID)}

	if m.Target != """" {
		// TODO(AkihiroSuda): support specifying permission bits
		opts = append(opts, llb.SSHSocketTarget(m.Target))
	}

	if !m.Required {
		opts = append(opts, llb.SSHOptional)
	}

	return llb.AddSSHSocket(opts...), nil
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yPsScg
code,"// Copyright 2015 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package log

import (
	""fmt""
	""strings""
	""testing""
	""time""

	""github.com/stretchr/testify/assert""

	""github.com/adfin/statster/metrics/core""
)

func TestSimpleWrite(t *testing.T) {
	now := time.Now()
	batch := core.DataBatch{
		Timestamp:  now,
		MetricSets: make(map[string]*core.MetricSet),
	}
	batch.MetricSets[""pod1""] = &core.MetricSet{
		Labels: map[string]string{""bzium"": ""hocuspocus""},
		MetricValues: map[string]core.MetricValue{
			""m1"": {
				ValueType:  core.ValueInt64,
				MetricType: core.MetricGauge,
				IntValue:   31415,
			},
		},
		LabeledMetrics: []core.LabeledMetric{
			{
				Name: ""lm"",
				MetricValue: core.MetricValue{
					MetricType: core.MetricGauge,
					ValueType:  core.ValueInt64,
					IntValue:   279,
				},
				Labels: map[string]string{
					""disk"": ""hard"",
				},
			},
		},
	}
	log := batchToString(&batch)

	assert.True(t, strings.Contains(log, ""31415""))
	assert.True(t, strings.Contains(log, ""m1""))
	assert.True(t, strings.Contains(log, ""bzium""))
	assert.True(t, strings.Contains(log, ""hocuspocus""))
	assert.True(t, strings.Contains(log, ""pod1""))
	assert.True(t, strings.Contains(log, ""279""))
	assert.True(t, strings.Contains(log, ""disk""))
	assert.True(t, strings.Contains(log, ""hard""))
	assert.True(t, strings.Contains(log, fmt.Sprintf(""%s"", now)))
}

func TestSortedOutput(t *testing.T) {
	const (
		label1  = ""abcLabel""
		label2  = ""xyzLabel""
		pod1    = ""pod1""
		pod2    = ""pod2""
		metric1 = ""metricA""
		metric2 = ""metricB""
	)
	metricVal := core.MetricValue{
		ValueType:  core.ValueInt64,
		MetricType: core.MetricGauge,
		IntValue:   31415,
	}
	metricSet := func(pod string) *core.MetricSet {
		return &core.MetricSet{
			Labels: map[string]string{label2 + pod: pod, label1 + pod: pod},
			MetricValues: map[string]core.MetricValue{
				metric2 + pod: metricVal,
				metric1 + pod: metricVal,
			},
			LabeledMetrics: []core.LabeledMetric{},
		}
	}
	now := time.Now()
	batch := core.DataBatch{
		Timestamp: now,
		MetricSets: map[string]*core.MetricSet{
			pod2: metricSet(pod2),
			pod1: metricSet(pod1),
		},
	}
	log := batchToString(&batch)
	sorted := []string{
		pod1,
		label1 + pod1,
		label2 + pod1,
		metric1 + pod1,
		metric2 + pod1,
		pod2,
		label1 + pod2,
		label2 + pod2,
		metric1 + pod2,
		metric2 + pod2,
	}
	var (
		previous      string
		previousIndex int
	)
	for _, metric := range sorted {
		metricIndex := strings.Index(log, metric)
		assert.NotEqual(t, -1, metricIndex, ""%q not found"", metric)
		if previous != """" {
			assert.True(t, previousIndex < metricIndex, ""%q should be before %q"", previous, metric)
		}
		previous = metric
		previousIndex = metricIndex
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nFDVmI
code,"package operation

import (
	""fmt""
	""os""

	""github.com/runabove/sail/internal""
	""github.com/spf13/cobra""
)

var cmdOperationAttach = &cobra.Command{
	Use:   ""attach"",
	Short: ""Attach to an ongoing operation output: sail operation attach [applicationName] <operationId>"",
	Long: `Attach to an ongoing operation output: sail operation attach [applicationName] <operationId>

Example: sail operation attach devel/redis fa853ede-6c05-4823-8b20-46a5389fe0de

If the applicationName is not passed, the default application name will be used (the user's username).
`,
	Run: func(cmd *cobra.Command, args []string) {
		switch len(args) {
		case 1:
			// applicationName was not passed. Using default one.
			applicationName := internal.GetUserName()
			operationAttach(applicationName, args[0])
		case 2:
			operationAttach(args[0], args[1])
		default:
			fmt.Fprintln(os.Stderr, ""Invalid usage. sail operation attach [applicationName] <operationId>. Please see sail operation attach --help"")
		}
	},
}

func operationAttach(app, operationID string) {
	// Split namespace and service
	internal.StreamPrint(""GET"", fmt.Sprintf(""/applications/%s/operation/%s/attach"", app, operationID), nil)
	internal.ExitAfterCtrlC()
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Imwwzb
code,"// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package get

import (
	""errors""
	""internal/testenv""
	""io/ioutil""
	""os""
	""path""
	""path/filepath""
	""testing""

	""cmd/go/internal/web""
)

// Test that RepoRootForImportPath creates the correct RepoRoot for a given importPath.
// TODO(cmang): Add tests for SVN and BZR.
func TestRepoRootForImportPath(t *testing.T) {
	testenv.MustHaveExternalNetwork(t)

	tests := []struct {
		path string
		want *repoRoot
	}{
		{
			""github.com/golang/groupcache"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://github.com/golang/groupcache"",
			},
		},
		// Unicode letters in directories (issue 18660).
		{
			""github.com/user/unicode/испытание"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://github.com/user/unicode"",
			},
		},
		// IBM DevOps Services tests
		{
			""hub.jazz.net/git/user1/pkgname"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://hub.jazz.net/git/user1/pkgname"",
			},
		},
		{
			""hub.jazz.net/git/user1/pkgname/submodule/submodule/submodule"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://hub.jazz.net/git/user1/pkgname"",
			},
		},
		{
			""hub.jazz.net"",
			nil,
		},
		{
			""hub2.jazz.net"",
			nil,
		},
		{
			""hub.jazz.net/someotherprefix"",
			nil,
		},
		{
			""hub.jazz.net/someotherprefix/user1/pkgname"",
			nil,
		},
		// Spaces are not valid in user names or package names
		{
			""hub.jazz.net/git/User 1/pkgname"",
			nil,
		},
		{
			""hub.jazz.net/git/user1/pkg name"",
			nil,
		},
		// Dots are not valid in user names
		{
			""hub.jazz.net/git/user.1/pkgname"",
			nil,
		},
		{
			""hub.jazz.net/git/user/pkg.name"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://hub.jazz.net/git/user/pkg.name"",
			},
		},
		// User names cannot have uppercase letters
		{
			""hub.jazz.net/git/USER/pkgname"",
			nil,
		},
		// OpenStack tests
		{
			""git.openstack.org/openstack/swift"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://git.openstack.org/openstack/swift"",
			},
		},
		// Trailing .git is less preferred but included for
		// compatibility purposes while the same source needs to
		// be compilable on both old and new go
		{
			""git.openstack.org/openstack/swift.git"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://git.openstack.org/openstack/swift.git"",
			},
		},
		{
			""git.openstack.org/openstack/swift/go/hummingbird"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://git.openstack.org/openstack/swift"",
			},
		},
		{
			""git.openstack.org"",
			nil,
		},
		{
			""git.openstack.org/openstack"",
			nil,
		},
		// Spaces are not valid in package name
		{
			""git.apache.org/package name/path/to/lib"",
			nil,
		},
		// Should have "".git"" suffix
		{
			""git.apache.org/package-name/path/to/lib"",
			nil,
		},
		{
			""git.apache.org/package-name.git"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://git.apache.org/package-name.git"",
			},
		},
		{
			""git.apache.org/package-name_2.x.git/path/to/lib"",
			&repoRoot{
				vcs:  vcsGit,
				repo: ""https://git.apache.org/package-name_2.x.git"",
			},
		},
		{
			""chiselapp.com/user/kyle/repository/fossilgg"",
			&repoRoot{
				vcs:  vcsFossil,
				repo: ""https://chiselapp.com/user/kyle/repository/fossilgg"",
			},
		},
		{
			// must have a user/$name/repository/$repo path
			""chiselapp.com/kyle/repository/fossilgg"",
			nil,
		},
		{
			""chiselapp.com/user/kyle/fossilgg"",
			nil,
		},
	}

	for _, test := range tests {
		got, err := repoRootForImportPath(test.path, web.Secure)
		want := test.want

		if want == nil {
			if err == nil {
				t.Errorf(""repoRootForImportPath(%q): Error expected but not received"", test.path)
			}
			continue
		}
		if err != nil {
			t.Errorf(""repoRootForImportPath(%q): %v"", test.path, err)
			continue
		}
		if got.vcs.name != want.vcs.name || got.repo != want.repo {
			t.Errorf(""repoRootForImportPath(%q) = VCS(%s) Repo(%s), want VCS(%s) Repo(%s)"", test.path, got.vcs, got.repo, want.vcs, want.repo)
		}
	}
}

// Test that vcsFromDir correctly inspects a given directory and returns the right VCS and root.
func TestFromDir(t *testing.T) {
	tempDir, err := ioutil.TempDir("""", ""vcstest"")
	if err != nil {
		t.Fatal(err)
	}
	defer os.RemoveAll(tempDir)

	for j, vcs := range vcsList {
		dir := filepath.Join(tempDir, ""example.com"", vcs.name, "".""+vcs.cmd)
		if j&1 == 0 {
			err := os.MkdirAll(dir, 0755)
			if err != nil {
				t.Fatal(err)
			}
		} else {
			err := os.MkdirAll(filepath.Dir(dir), 0755)
			if err != nil {
				t.Fatal(err)
			}
			f, err := os.Create(dir)
			if err != nil {
				t.Fatal(err)
			}
			f.Close()
		}

		want := repoRoot{
			vcs:  vcs,
			root: path.Join(""example.com"", vcs.name),
		}
		var got repoRoot
		got.vcs, got.root, err = vcsFromDir(dir, tempDir)
		if err != nil {
			t.Errorf(""FromDir(%q, %q): %v"", dir, tempDir, err)
			continue
		}
		if got.vcs.name != want.vcs.name || got.root != want.root {
			t.Errorf(""FromDir(%q, %q) = VCS(%s) Root(%s), want VCS(%s) Root(%s)"", dir, tempDir, got.vcs, got.root, want.vcs, want.root)
		}
	}
}

func TestIsSecure(t *testing.T) {
	tests := []struct {
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zAr4oT
code,"package api_test

import (
	""testing""

	""github.com/remind101/empire/pkg/heroku""
)

func TestFormationBatchUpdate(t *testing.T) {
	c, s := NewTestClient(t)
	defer s.Close()

	mustDeploy(t, c, DefaultImage)

	q := 2
	f := mustFormationBatchUpdate(t, c, ""acme-inc"", []heroku.FormationBatchUpdateOpts{
		{
			Process:  ""web"",
			Quantity: &q,
		},
	})

	if got, want := f[0].Quantity, 2; got != want {
		t.Fatalf(""Quantity => %d; want %d"", got, want)
	}
}

func mustFormationBatchUpdate(t testing.TB, c *heroku.Client, appName string, updates []heroku.FormationBatchUpdateOpts) []heroku.Formation {
	f, err := c.FormationBatchUpdate(appName, updates, """")
	if err != nil {
		t.Fatal(err)
	}

	return f
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nV9L0s
code,"// Copyright 2016 CoreOS, Inc.
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package types

import (
	""github.com/coreos/ignition/config/shared/errors""
	""github.com/coreos/ignition/config/validate/report""
)

type Filesystem struct {
	Name  string           `json:""name,omitempty""`
	Mount *FilesystemMount `json:""mount,omitempty""`
	Path  *Path            `json:""path,omitempty""`
}

type FilesystemMount struct {
	Device Path              `json:""device,omitempty""`
	Format FilesystemFormat  `json:""format,omitempty""`
	Create *FilesystemCreate `json:""create,omitempty""`
}

type FilesystemCreate struct {
	Force   bool        `json:""force,omitempty""`
	Options MkfsOptions `json:""options,omitempty""`
}

func (f Filesystem) Validate() report.Report {
	if f.Mount == nil && f.Path == nil {
		return report.ReportFromError(errors.ErrFilesystemNoMountPath, report.EntryError)
	}
	if f.Mount != nil && f.Path != nil {
		return report.ReportFromError(errors.ErrFilesystemMountAndPath, report.EntryError)
	}
	return report.Report{}
}

type FilesystemFormat string

func (f FilesystemFormat) Validate() report.Report {
	switch f {
	case ""ext4"", ""btrfs"", ""xfs"":
		return report.Report{}
	default:
		return report.ReportFromError(errors.ErrFilesystemInvalidFormat, report.EntryError)
	}
}

type MkfsOptions []string
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",81Uqfl
code,"package matchers

import (
	""fmt""
	""github.com/onsi/gomega/format""
	""math""
)

type BeNumericallyMatcher struct {
	Comparator string
	CompareTo  []interface{}
}

func (matcher *BeNumericallyMatcher) Match(actual interface{}) (success bool, message string, err error) {
	if len(matcher.CompareTo) == 0 || len(matcher.CompareTo) > 2 {
		return false, """", fmt.Errorf(""BeNumerically requires 1 or 2 CompareTo arguments.  Got:\n%s"", format.Object(matcher.CompareTo, 1))
	}
	if !isNumber(actual) {
		return false, """", fmt.Errorf(""Expected a number.  Got:\n%s"", format.Object(actual, 1))
	}
	if !isNumber(matcher.CompareTo[0]) {
		return false, """", fmt.Errorf(""Expected a number.  Got:\n%s"", format.Object(matcher.CompareTo[0], 1))
	}
	if len(matcher.CompareTo) == 2 && !isNumber(matcher.CompareTo[1]) {
		return false, """", fmt.Errorf(""Expected a number.  Got:\n%s"", format.Object(matcher.CompareTo[0], 1))
	}
	switch matcher.Comparator {
	case ""=="", ""~"", "">"", "">="", ""<"", ""<="":
	default:
		return false, """", fmt.Errorf(""Unknown comparator: %s"", matcher.Comparator)
	}

	if isFloat(actual) || isFloat(matcher.CompareTo[0]) {
		var secondOperand float64 = 1e-8
		if len(matcher.CompareTo) == 2 {
			secondOperand = toFloat(matcher.CompareTo[1])
		}
		success = matcher.matchFloats(toFloat(actual), toFloat(matcher.CompareTo[0]), secondOperand)
	} else if isInteger(actual) {
		var secondOperand int64 = 0
		if len(matcher.CompareTo) == 2 {
			secondOperand = toInteger(matcher.CompareTo[1])
		}
		success = matcher.matchIntegers(toInteger(actual), toInteger(matcher.CompareTo[0]), secondOperand)
	} else if isUnsignedInteger(actual) {
		var secondOperand uint64 = 0
		if len(matcher.CompareTo) == 2 {
			secondOperand = toUnsignedInteger(matcher.CompareTo[1])
		}
		success = matcher.matchUnsignedIntegers(toUnsignedInteger(actual), toUnsignedInteger(matcher.CompareTo[0]), secondOperand)
	} else {
		return false, """", fmt.Errorf(""Failed to compare:\n%s\n%s:\n%s"", format.Object(actual, 1), matcher.Comparator, format.Object(matcher.CompareTo[0], 1))
	}

	if success {
		return true, format.Message(actual, fmt.Sprintf(""not to be %s"", matcher.Comparator), matcher.CompareTo[0]), nil
	} else {
		return false, format.Message(actual, fmt.Sprintf(""to be %s"", matcher.Comparator), matcher.CompareTo[0]), nil
	}
}

func (matcher *BeNumericallyMatcher) matchIntegers(actual, compareTo, threshold int64) (success bool) {
	switch matcher.Comparator {
	case ""=="", ""~"":
		diff := actual - compareTo
		return -threshold <= diff && diff <= threshold
	case "">"":
		return (actual > compareTo)
	case "">="":
		return (actual >= compareTo)
	case ""<"":
		return (actual < compareTo)
	case ""<="":
		return (actual <= compareTo)
	}
	return false
}

func (matcher *BeNumericallyMatcher) matchUnsignedIntegers(actual, compareTo, threshold uint64) (success bool) {
	switch matcher.Comparator {
	case ""=="", ""~"":
		if actual < compareTo {
			actual, compareTo = compareTo, actual
		}
		return actual-compareTo <= threshold
	case "">"":
		return (actual > compareTo)
	case "">="":
		return (actual >= compareTo)
	case ""<"":
		return (actual < compareTo)
	case ""<="":
		return (actual <= compareTo)
	}
	return false
}

func (matcher *BeNumericallyMatcher) matchFloats(actual, compareTo, threshold float64) (success bool) {
	switch matcher.Comparator {
	case ""~"":
		return math.Abs(actual-compareTo) <= threshold
	case ""=="":
		return (actual == compareTo)
	case "">"":
		return (actual > compareTo)
	case "">="":
		return (actual >= compareTo)
	case ""<"":
		return (actual < compareTo)
	case ""<="":
		return (actual <= compareTo)
	}
	return false
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JTOw_2
code,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>qarith: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.5.0 / qarith - 8.9.0</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              qarith
              <small>
                8.9.0
                <span class=""label label-info"">Not compatible 👼</span>
              </small>
            </h1>
            <p>📅 <em><script>document.write(moment(""2022-01-13 20:16:59 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2022-01-13 20:16:59 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-num            base        Num library distributed with the OCaml compiler
base-threads        base
base-unix           base
camlp5              7.14        Preprocessor-pretty-printer of OCaml
conf-findutils      1           Virtual package relying on findutils
conf-perl           1           Virtual package relying on perl
coq                 8.5.0       Formal proof management system
num                 0           The Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.03.0      The OCaml compiler (virtual package)
ocaml-base-compiler 4.03.0      Official 4.03.0 release
ocaml-config        1           OCaml Switch Configuration
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;Hugo.Herbelin@inria.fr&quot;
homepage: &quot;https://github.com/coq-contribs/qarith&quot;
license: &quot;LGPL 2.1&quot;
build: [make &quot;-j%{jobs}%&quot;]
install: [make &quot;install&quot;]
remove: [&quot;rm&quot; &quot;-R&quot; &quot;%{lib}%/coq/user-contrib/QArith&quot;]
depends: [
  &quot;ocaml&quot;
  &quot;coq&quot; {&gt;= &quot;8.9&quot; &amp; &lt; &quot;8.10~&quot;}
]
tags: [
  &quot;keyword: Q&quot;
  &quot;keyword: arithmetic&quot;
  &quot;keyword: rational numbers&quot;
  &quot;keyword: setoid&quot;
  &quot;keyword: ring&quot;
  &quot;category: Mathematics/Arithmetic and Number Theory/Rational numbers&quot;
  &quot;category: Miscellaneous/Extracted Programs/Arithmetic&quot;
]
authors: [
  &quot;Pierre Letouzey&quot;
]
bug-reports: &quot;https://github.com/coq-contribs/qarith/issues&quot;
dev-repo: &quot;git+https://github.com/coq-contribs/qarith.git&quot;
synopsis: &quot;A Library for Rational Numbers (QArith)&quot;
description: &quot;&quot;&quot;
This contribution is a proposition of a library formalizing
rational number in Coq.&quot;&quot;&quot;
flags: light-uninstall
url {
  src: &quot;https://github.com/coq-contribs/qarith/archive/v8.9.0.tar.gz&quot;
  checksum: &quot;md5=dbb5eb51a29032589cd351ea9eaf49a0&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install 🏜️</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-qarith.8.9.0 coq.8.5.0</code></dd>
              <dt>Return code</dt>
              <dd>5120</dd>
              <dt>Output</dt>
              <dd><pre>[NOTE] Package coq is already installed (current version is 8.5.0).
The following dependencies couldn&#39;t be met:
  - coq-qarith -&gt; coq &gt;= 8.9 -&gt; ocaml &gt;= 4.05.0
      base of this switch (use `--unlock-base&#39; to force)
Your request can&#39;t be satisfied:
  - No available version of coq satisfies the constraints
No solution fo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YIWfI8
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta name=""generator"" content=""rustdoc"">
    <meta name=""description"" content=""API documentation for the Rust `benchmark` fn in crate `test`."">
    <meta name=""keywords"" content=""rust, rustlang, rust-lang, benchmark"">

    <title>test::bench::benchmark - Rust</title>

    <link rel=""stylesheet"" type=""text/css"" href=""../../main.css"">

    <link rel=""shortcut icon"" href=""http://www.rust-lang.org/favicon.ico"">
    
</head>
<body class=""rustdoc"">
    <!--[if lte IE 8]>
    <div class=""warning"">
        This old browser is unsupported and will most likely display funky
        things.
    </div>
    <![endif]-->

    

    <section class=""sidebar"">
        <a href='../../test/index.html'><img src='http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png' alt='' width='100'></a>
        <p class='location'><a href='../index.html'>test</a>::<wbr><a href='index.html'>bench</a></p><script>window.sidebarCurrent = {name: 'benchmark', ty: 'fn', relpath: ''};</script><script defer src=""sidebar-items.js""></script>
    </section>

    <nav class=""sub"">
        <form class=""search-form js-only"">
            <div class=""search-container"">
                <input class=""search-input"" name=""search""
                       autocomplete=""off""
                       placeholder=""Click or press 'S' to search, '?' for more options...""
                       type=""search"">
            </div>
        </form>
    </nav>

    <section id='main' class=""content fn"">
<h1 class='fqn'><span class='in-band'>Function <a href='../index.html'>test</a>::<wbr><a href='index.html'>bench</a>::<wbr><a class='fn' href=''>benchmark</a><wbr><a class='stability Unstable' title=''>Unstable</a></span><span class='out-of-band'><span id='render-detail'>
            <a id=""collapse-all"" href=""#"">[-]</a>&nbsp;<a id=""expand-all"" href=""#"">[+]</a>
        </span><a id='src-8073' href='../../src/test/lib.rs.html#1129-1146'>[src]</a></span></h1>
<pre class='rust fn'>pub fn benchmark&lt;F&gt;(f: F) -&gt; <a class='struct' href='../../test/struct.BenchSamples.html' title='test::BenchSamples'>BenchSamples</a> <span class='where'>where F: <a class='trait' href='../../core/ops/trait.FnMut.html' title='core::ops::FnMut'>FnMut</a>(&amp;mut <a class='struct' href='../../test/struct.Bencher.html' title='test::Bencher'>Bencher</a>)</span></pre></section>
    <section id='search' class=""content hidden""></section>

    <section class=""footer""></section>

    <div id=""help"" class=""hidden"">
        <div class=""shortcuts"">
            <h1>Keyboard shortcuts</h1>
            <dl>
                <dt>?</dt>
                <dd>Show this help dialog</dd>
                <dt>S</dt>
                <dd>Focus the search field</dd>
                <dt>&larrb;</dt>
                <dd>Move up in search results</dd>
                <dt>&rarrb;</dt>
                <dd>Move down in search results</dd>
                <dt>&#9166;</dt>
                <dd>Go to active search result</dd>
            </dl>
        </div>
        <div class=""infos"">
            <h1>Search tricks</h1>
            <p>
                Prefix searches with a type followed by a colon (e.g.
                <code>fn:</code>) to restrict the search to a given type.
            </p>
            <p>
                Accepted types are: <code>fn</code>, <code>mod</code>,
                <code>struct</code>, <code>enum</code>,
                <code>trait</code>, <code>typedef</code> (or
                <code>tdef</code>).
            </p>
        </div>
    </div>

    

    <script>
        window.rootPath = ""../../"";
        window.currentCrate = ""test"";
        window.playgroundUrl = """";
    </script>
    <script src=""../../jquery.js""></script>
    <script src=""../../main.js""></script>
    
    <script async src=""../../search-index.js""></script>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",stq3no
code,"<!DOCTYPE html>
<html lang=""en"">



    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <meta name=""description"" content="""">
    <meta name=""author"" content="""">

    <title>lora imoti</title>

    <!-- Bootstrap Core CSS -->
    <link href=""css/bootstrap.min.css"" rel=""stylesheet"">

    <!-- Custom CSS -->
    <link href=""css/modern-business.css"" rel=""stylesheet"">

    <!-- Custom Fonts -->
    <link href=""font-awesome/css/font-awesome.min.css"" rel=""stylesheet"" type=""text/css"">
    <link href=""css/pgwslideshow.css"" rel=""stylesheet"">
    <link href=""css/pgwslideshow.min.css"" rel=""stylesheet"">
    <link href=""css/pgwslideshow_light.css"" rel=""stylesheet"">
    <link href=""css/pgwslideshow_light.min.css"" rel=""stylesheet"">    




    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src=""https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js""></script>
        <script src=""https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js""></script>
    <![endif]-->



    <body>

        <!-- Navigation -->
        <nav class=""navbar navbar-inverse navbar-fixed-top"" role=""navigation"">
            <div class=""container"">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class=""navbar-header"">
                    <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target=""#bs-example-navbar-collapse-1"">
                        <span class=""sr-only"">Toggle navigation</span>
                        <span class=""icon-bar""></span>
                        <span class=""icon-bar""></span>
                        <span class=""icon-bar""></span>
                    </button>
                    <a class=""navbar-brand"" href=""index.html"">Lora imoti</a>
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class=""collapse navbar-collapse"" id=""bs-example-navbar-collapse-1"">
                    <ul class=""nav navbar-nav navbar-right"">
                        <li>
                            <a href=""about.html"">About</a>
                        </li>
                        <li>
                            <a href=""team.html"">Team</a>
                        </li>
                        <li>
                            <a href=""services.html"">Services</a>
                        </li>

                        <li class=""dropdown"">
                            <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Portfolio <b class=""caret""></b></a>
                            <ul class=""dropdown-menu"">
                                <li>
                                    <a href=""portfolio-1-col.html"">1 Column Portfolio</a>
                                </li>
                                <li>
                                    <a href=""portfolio-2-col.html"">2 Column Portfolio</a>
                                </li>
                                <li>
                                    <a href=""portfolio-3-col.html"">3 Column Portfolio</a>
                                </li>
                                <li>
                                    <a href=""portfolio-4-col.html"">4 Column Portfolio</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a href=""search.php"">Search</a>
                        </li>
                       <li class=""dropdown"">
                            <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Top <b class=""caret""></b></a>
                            <ul class=""dropdown-menu"">
                                <li>
                                    <a href=""naem.html"">Naem</a>
                                </li>
                                <li>
                                    <a href=""prodava.html"">Prodava</a>
                                </li>
                            </ul>
                    </li>

                        <li class=""dropdown"">
                            <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Naem <b class=""caret""></b></a>
                            <ul class=""dropdown-menu"">
                                <li>
                                    <a href=""ednostaen.html"">Ednostaen</a>
                                </li>
                                <li>
                                    <a href=""dvustaen.html"">Dvustaen</a>
                                </li>
                                <li>
                                    <a href=""tristaen.html"">Tristaen</a>
                                </li>
                                <li>
                                    <a href=""mnogostaen.html"">Mnogostaen</a>
                                </li>
                                <li>
                              ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LBvuZL
code,"<!DOCTYPE html>
<html lang=""en-us"">

  {% include head.html %}

  <body class=""theme-base-08 layout-reverse sidebar-overlay"">

    <!-- Enable Google Analytics -->
    {% include googleanalytics.html %}

    {% include sidebar.html %}

    <!-- Wrap is the content to shift when toggling the sidebar. We wrap the
         content to avoid any CSS collisions with our real content. -->
    <div class=""wrap"">
      <div class=""masthead"">
        <div class=""container"">
          <h3 class=""masthead-title"">
            <a href=""{{ site.baseurl }}/"" title=""Home"">{{ site.title }}</a>
            <small>{{ site.tagline }}</small>
          </h3>
        </div>
      </div>

      <div class=""container content"">
        {{ content }}
      </div>
    </div>

    <label for=""sidebar-checkbox"" class=""sidebar-toggle""></label>

    <script>
      (function(document) {
        var toggle = document.querySelector('.sidebar-toggle');
        var sidebar = document.querySelector('#sidebar');
        var checkbox = document.querySelector('#sidebar-checkbox');

        document.addEventListener('click', function(e) {
          var target = e.target;

          if(!checkbox.checked ||
             sidebar.contains(target) ||
             (target === checkbox || target === toggle)) return;

          checkbox.checked = false;
        }, false);
      })(document);
    </script>
  </body>
</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yjUPDn
code,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>higman-s: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.7.1+2 / higman-s - 8.6.0</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              higman-s
              <small>
                8.6.0
                <span class=""label label-info"">Not compatible 👼</span>
              </small>
            </h1>
            <p>📅 <em><script>document.write(moment(""2021-11-21 02:02:39 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2021-11-21 02:02:39 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-threads        base
base-unix           base
camlp5              7.14        Preprocessor-pretty-printer of OCaml
conf-findutils      1           Virtual package relying on findutils
conf-perl           1           Virtual package relying on perl
coq                 8.7.1+2     Formal proof management system
num                 1.4         The legacy Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.06.1      The OCaml compiler (virtual package)
ocaml-base-compiler 4.06.1      Official 4.06.1 release
ocaml-config        1           OCaml Switch Configuration
ocamlfind           1.9.1       A library manager for OCaml
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;Hugo.Herbelin@inria.fr&quot;
homepage: &quot;https://github.com/coq-contribs/higman-s&quot;
license: &quot;LGPL&quot;
build: [make &quot;-j%{jobs}%&quot;]
install: [make &quot;install&quot;]
remove: [&quot;rm&quot; &quot;-R&quot; &quot;%{lib}%/coq/user-contrib/HigmanS&quot;]
depends: [
  &quot;ocaml&quot;
  &quot;coq&quot; {&gt;= &quot;8.6&quot; &amp; &lt; &quot;8.7~&quot;}
]
tags: [ &quot;keyword: Higman&#39;s lemma&quot; &quot;keyword: well quasi-ordering&quot; &quot;category: Mathematics/Combinatorics and Graph Theory&quot; &quot;date: 2007-09-14&quot; ]
authors: [ &quot;William Delobel &lt;william.delobel@lif.univ-mrs.fr&gt;&quot; ]
bug-reports: &quot;https://github.com/coq-contribs/higman-s/issues&quot;
dev-repo: &quot;git+https://github.com/coq-contribs/higman-s.git&quot;
synopsis: &quot;Higman&#39;s lemma on an unrestricted alphabet&quot;
description:
  &quot;This proof is more or less the proof given by Monika Seisenberger in \&quot;An Inductive Version of Nash-Williams&#39; Minimal-Bad-Sequence Argument for Higman&#39;s Lemma\&quot;.&quot;
flags: light-uninstall
url {
  src: &quot;https://github.com/coq-contribs/higman-s/archive/v8.6.0.tar.gz&quot;
  checksum: &quot;md5=16dee76d75e5bb21e16f246c52272afc&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install 🏜️</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-higman-s.8.6.0 coq.8.7.1+2</code></dd>
              <dt>Return code</dt>
              <dd>5120</dd>
              <dt>Output</dt>
              <dd><pre>[NOTE] Package coq is already installed (current version is 8.7.1+2).
The following dependencies couldn&#39;t be met:
  - coq-higman-s -&gt; coq &lt; 8.7~ -&gt; ocaml &lt; 4.06.0
      base of this switch (use `--unlock-base&#39; to force)
No solution found, exiting
</pre></dd>
            </dl>
            <p>Dry install without Coq/switch base, to test ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MLyCz7
code,"<!--conf
<sample>
              <product version=""2.6"" edition=""std""/>
                     <modifications>
                            <modified date=""100609""/>
                     </modifications>
               </sample>
 -->
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html>
    <head>
        <title>Series</title>
        	<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
	<link rel=""stylesheet"" type=""text/css"" href=""../../../codebase/dhtmlx.css""/>
	<script src=""../../../codebase/dhtmlx.js""></script>
        
        <script src=""../common/testdata.js""></script>
    </head>
    <body>
	<div id=""chart1"" style=""width:900px;height:250px;border:1px solid #A4BED4;""></div>
	
	
	<script>

		var barChart1 =  new dhtmlXChart({
			view:""bar"",
			container:""chart1"",
		    value:""#sales#"",
            color: ""#58dccd"",
            gradient:""rising"",
            tooltip:{
                template:""#sales#""
            },
			width:60,
			tooltip:{
				template:""#sales#""
			},
			xAxis:{
				template:""'#year#""
			},
			yAxis:{
				start:0,
			    step:10,
			    end:100
			},
			legend:{
				values:[{text:""Type A"",color:""#58dccd""},{text:""Type B"",color:""#a7ee70""},{text:""Type C"",color:""#36abee""}],
				valign:""middle"",
				align:""right"",
				width:90,
				layout:""y""
			}
		});

		barChart1.addSeries({
		    value:""#sales2#"",
			color:""#a7ee70"",
			tooltip:{
				template:""#sales2#""
			}
		});
		barChart1.addSeries({
		    value:""#sales3#"",
            color:""#36abee"",
            tooltip:{
                template:""#sales3#""
            }
		});
		barChart1.parse(multiple_dataset,""json"");

</script>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UXehtJ
code,"<!-- Begin Footer -->
<footer id=""footer"" class=""footer"">
	<div class=""row"">
		<div class=""pull-left col-md-6 col-xs-6"">
			<div class=""g-plusone"" data-size=""medium"" data-annotation=""inline"" data-width=""300"" data-href=""{{ site.url }}""></div>
		</div>
		<div class=""logo logo-footer logo-gray pull-right""></div>
	</div>
	<div class=""row"">
		{% for block in site.footerBlocks %}
        {% assign colWidth = 12 | divided_by: forloop.length %}
		<div class=""col-md-{{ colWidth }} col-xs-6"">
			<h5>{{ block.title }}</h5>
			<ul>
				{% for linkElement in block.links %}
				<li><a href=""{% if linkElement.permalink != null %} {{ linkElement.permalink | prepend: site.baseurl }} {% else %} {{ linkElement.link }} {% endif %}"" {% if linkElement.link != null %}target=""_blank""{% endif %}>{{ linkElement.text }}</a></li>
				{% endfor %}
			</ul>
		</div>
		{% endfor %}
	</div>
	<div class=""row"">
		<div class=""col-md-6 col-xs-12"">
			<ul class=""social-links"">
				{% for social in site.socialLinks %}
				<li>
					<a href=""{% if social.permalink != null %} {{ social.permalink | prepend: site.baseurl }} {% else %} {{ social.link }} {% endif %}"" target=""_blank"">
						<svg class=""icon icon-{{ social.icon }}"" viewBox=""0 0 30 32"">
							<use xlink:href=""{{ site.baseurl }}/img/sprites/sprites.svg#icon-{{ social.icon }}""></use>
						</svg>
					</a>
				</li>
				{% endfor %}
			</ul>
		</div>
	</div>
	<div class=""row"">
		<!-- Please don't delete this line-->
		<div class=""col-md-6"">
			<p class=""copyright"">
				&copy; 2014 Based on <a href=""https://github.com/gdg-x/zeppelin"" target=""_blank"">Project Zeppelin</a>. Designed and created by <a href=""https://github.com/ozasadnyy"" target=""_blank"">Oleh Zasadnyy</a> &middot; <a href=""https://gdg.org.ua"" target=""_blank"">GDG Lviv</a>
			</p>
		</div>
	</div>
</footer>
<!-- End Footer -->
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bQauJx
code,"<!DOCTYPE html>
<!--[if lt IE 7 ]><html class=""ie ie6"" lang=""en""> <![endif]-->
<!--[if IE 7 ]><html class=""ie ie7"" lang=""en""> <![endif]-->
<!--[if IE 8 ]><html class=""ie ie8"" lang=""en""> <![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
<html lang=""en"" xmlns=""http://www.w3.org/1999/html""> <!--<![endif]-->
<head>
  <!-- Basic Page Needs
 ================================================== -->
  <meta charset=""utf-8"" />
  <title>icon-laptop: Font Awesome Icons</title>
  <meta name=""description"" content=""Font Awesome, the iconic font designed for Bootstrap"">
  <meta name=""author"" content=""Dave Gandy"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"">
  <!--<meta name=""viewport"" content=""initial-scale=1; maximum-scale=1"">-->

  <!--[if lt IE 9]>
  <script src=""http://html5shim.googlecode.com/svn/trunk/html5.js""></script>
  <![endif]-->

  <!-- CSS
 ================================================== -->

  <link rel=""stylesheet"" href=""../../assets/css/site.css"">
  <link rel=""stylesheet"" href=""../../assets/css/pygments.css"">
  <link rel=""stylesheet"" href=""../../assets/font-awesome/css/font-awesome.css"">
  <!--[if IE 7]>
  <link rel=""stylesheet"" href=""../../assets/font-awesome/css/font-awesome-ie7.css"">
  <![endif]-->
  <!-- Le fav and touch icons -->
  <link rel=""shortcut icon"" href=""../../assets/ico/favicon.ico"">

  <script type=""text/javascript"" src=""//use.typekit.net/wnc7ioh.js""></script>
  <script type=""text/javascript"">try{Typekit.load();}catch(e){}</script>

  <script type=""text/javascript"">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-30136587-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</head>
<body data-spy=""scroll"" data-target="".navbar"">
<div class=""wrapper""> <!-- necessary for sticky footer. wrap all content except footer -->
  <div class=""navbar navbar-inverse navbar-static-top hidden-print"">
  <div class=""navbar-inner"">
    <div class=""container"">
      <a class=""btn btn-navbar"" data-toggle=""collapse"" data-target="".nav-collapse"">
        <span class=""icon-bar""></span>
        <span class=""icon-bar""></span>
        <span class=""icon-bar""></span>
      </a>

      <a class=""brand"" href=""../../""><i class=""icon-flag""></i> Font Awesome</a>
      <div class=""nav-collapse collapse"">
        <ul class=""nav"">
          <li class=""hidden-tablet ""><a href=""../../"">Home</a></li>
          <li><a href=""../../get-started/"">Get Started</a></li>
          <li class=""dropdown-split-left""><a href=""../../icons/"">Icons</a></li>
          <li class=""dropdown dropdown-split-right hidden-phone"">
            <a href=""javascript:"" class=""dropdown-toggle"" data-toggle=""dropdown"">
              <i class=""icon-caret-down""></i>
            </a>
            <ul class=""dropdown-menu pull-right"">
              <li><a href=""../../icons/""><i class=""icon-flag icon-fixed-width""></i>&nbsp; Icons</a></li>
              <li class=""divider""></li>
              <li><a href=""../../icons/#new""><i class=""icon-shield icon-fixed-width""></i>&nbsp; New Icons in 3.2.1</a></li>
              <li><a href=""../../icons/#web-application""><i class=""icon-camera-retro icon-fixed-width""></i>&nbsp; Web Application Icons</a></li>
              <li><a href=""../../icons/#currency""><i class=""icon-won icon-fixed-width""></i>&nbsp; Currency Icons</a></li>
              <li><a href=""../../icons/#text-editor""><i class=""icon-file-text-alt icon-fixed-width""></i>&nbsp; Text Editor Icons</a></li>
              <li><a href=""../../icons/#directional""><i class=""icon-hand-right icon-fixed-width""></i>&nbsp; Directional Icons</a></li>
              <li><a href=""../../icons/#video-player""><i class=""icon-play-sign icon-fixed-width""></i>&nbsp; Video Player Icons</a></li>
              <li><a href=""../../icons/#brand""><i class=""icon-github icon-fixed-width""></i>&nbsp; Brand Icons</a></li>
              <li><a href=""../../icons/#medical""><i class=""icon-medkit icon-fixed-width""></i>&nbsp; Medical Icons</a></li>
            </ul>
          </li>
          <li class=""dropdown-split-left""><a href=""../../examples/"">Examples</a></li>
          <li class=""dropdown dropdown-split-right hidden-phone"">
            <a href=""javascript:"" class=""dropdown-toggle"" data-toggle=""dropdown"">
              <i class=""icon-caret-down""></i>
            </a>
            <ul class=""dropdown-menu pull-right"">
              <li><a href=""../../examples/"">Examples</a></li>
              <li class=""divider""></li>
              <li><a href=""../../examples/#new-styles"">New Styles</a></li>
              <li><a href=""../../examples/#inline-icons"">Inline Icons</a></li>
              <li><a href=""../../examples/#larger-icons"">Larger Icons</a></li>
              <li><a href=""../../examples/#bordered-pulled"">Bordered & Pulled</a></li>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jq6D7E
code,"<!DOCTYPE html>
<!--[if lt IE 7]>      <html class=""no-js lt-ie9 lt-ie8 lt-ie7""> <![endif]-->
<!--[if IE 7]>         <html class=""no-js lt-ie9 lt-ie8""> <![endif]-->
<!--[if IE 8]>         <html class=""no-js lt-ie9""> <![endif]-->
<!--[if gt IE 8]><!--> <html class=""no-js""> <!--<![endif]-->
<head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>Blue Project</title>
    <meta name=""description"" content=""Complete Site"">
    <meta name=""author"" content=""Vassilis Sponis"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">

    <!-- Place favicon.ico and apple-touch-icon.png in the root directory -->

    <link rel=""stylesheet"" href=""css/normalize.css"">
    <link rel=""stylesheet"" href=""css/main.css"">
    <link rel=""stylesheet"" href=""css/lightbox.css"">
    <script src=""js/vendor/modernizr-2.6.2.min.js""></script>
    <link href='http://fonts.googleapis.com/css?family=Trykker|Share+Tech' rel='stylesheet' type='text/css'>
</head>
<body>
    <!--<div id=""wrapper"">-->
    <header>
        <div id=""tophead"">
            <div class=""wrapper"">
                <span id=""sub"">Subscribe to:</span>
                <ul id=""sub_list"">
                    <li><a title=""Posts"" href=""#"">Posts</a></li>
                    <li><a title=""Comments"" href=""#"">Comments</a></li>
                    <li><a class=""noborder"" title=""Email"" href=""#"">Email</a></li>
                </ul>
                <div id=""searchform"">
                    <form name=""search"" action ="""" method="""">
                        <input type=""text"" name=""searchvalue"" placeholder=""  Search Keywords"">
                        <input class=""magnglass"" type=""Submit"" value="""">
                    </form>
                </div>
                <div id=""social"">
                    <ul class=""social_icons"">
                        <li><a class=""rss"" title=""RSS"" href=""#""></a></li>
                        <li><a class=""fb"" title=""Facebook"" href=""#""></a></li>
                        <li><a class=""tw"" title=""Twitter"" href=""#""></a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div id=""bothead"">
            <div class=""wrapper"">
                <h1 id=""logo"">
                    <span class=""main"">Blue Masters</span>
                    <span class=""sub"">COMPLETELY UNIQUE WORDPRESS THEME</span>
                </h1>
                <nav>
                    <ul>
                        <li class=""nav01""><a class=""navi active"" title=""Home"" href=""/index.html"">Home</a></li>
                        <li class=""nav02""><a class=""navi"" title=""About"" href=""#"">About</a></li>
                        <li class=""nav03""><a class=""navi"" title=""Portfolio"" href=""#"">Portfolio</a></li>
                        <li class=""nav04""><a class=""navi"" title=""Blog"" href=""OurBlogs.html"">Blog</a></li>
                        <li class=""nav05""><a class=""navi"" title=""Contact"" href=""/contactpage.php"">Contact</a></li>
                    </ul>
                </nav>
            </div>  
        </div>  
    </header>
    <!--- END OF HEADER-->
    <div id=""content""> 
        <div class=""wrapper"">
            <div id=""slideshow"">
                <img src=""img/main.jpg"" alt=""mainpic"">
                <img src=""img/main2.jpg"" alt=""alt1pic"">
                <img src=""img/main3.jpg"" alt=""alt2pic"">
                <img src=""img/main4.jpg"" alt=""alt3pic"">
            </div>
            <div id=""slidenav"">
                <a href=""#""><span id=""previousbutton""></span></a>
                <ul id=""pagenavi""></ul>
                <a href=""#""><span id=""nextbutton""></span></a>
            </div>

            <div id=""box"">
                <div id=""boxA"" class=""mainbox"">
                    <div class=""boxhead"">       
                        <h3 class=""boxhd boxAico"">About iPadMasters</h3>
                    </div>
                    <div class=""innerbox"">
                        <img class=""boxpic"" src=""img/boxApic.jpg"" alt=""picA"">
                        <h4 class=""subhead"">All About iPadMasters</h4>    <p id=""boxAtext"" class=""textbox"">Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, accumsan porttitor, facilisis luctus, metus</p>
                        <a id=""buttonA"" class=""buttontext"" title=""Learn More"" href=""#"">Learn More</a>
                    </div>
                </div>
                <div id=""boxB"" class=""mainbox"">
                    <div class",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xYKmID
code,"<h1>
  FOOTBALL
</h1>


</body>

Since the beginning of school we have been analyzing our opponents data for our football team. Since I do not obtain any mathematical 
skills, it was a challenge. All I could and did offer to the table was what appeared the most important out of the data. Such as,
certain number of times a certain play/form was used and the probability of the plays they would execute. My process is shown below.


<img src=""power cat - Google Docs.mhtml""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_reGwt
code,"<template name=""odd-one-out"">

    <!--  Template for odd-one-out exercise      -->
    <section class=""mainSection"">
        <form>
            <input name=exercisesID type=""hidden"" value={{_id}}>
            <input name=type type=""hidden"" value={{type}}>

            {{#each options}}

            <div class=""checkbox"">
                <label>
                    <input name=""option"" type=""radio"" value={{this}}>
                    {{this}}
                </label>
            </div>

            {{/each}}
            <br>
            <button type=""submit"" class=""btn btn-default btn-primary js-verify"">Submit your Answer</button>

        </form>
    </section>
</template>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DKKm3U
code,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>zorns-lemma: Not compatible 👼</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.13.2 / zorns-lemma - 8.7.0</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              zorns-lemma
              <small>
                8.7.0
                <span class=""label label-info"">Not compatible 👼</span>
              </small>
            </h1>
            <p>📅 <em><script>document.write(moment(""2022-01-12 12:49:54 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2022-01-12 12:49:54 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-threads        base
base-unix           base
conf-findutils      1           Virtual package relying on findutils
conf-gmp            3           Virtual package relying on a GMP lib system installation
coq                 8.13.2      Formal proof management system
num                 1.4         The legacy Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.11.2      The OCaml compiler (virtual package)
ocaml-base-compiler 4.11.2      Official release 4.11.2
ocaml-config        1           OCaml Switch Configuration
ocamlfind           1.9.1       A library manager for OCaml
zarith              1.12        Implements arithmetic and logical operations over arbitrary-precision integers
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;Hugo.Herbelin@inria.fr&quot;
homepage: &quot;https://github.com/coq-contribs/zorns-lemma&quot;
license: &quot;LGPL&quot;
build: [make &quot;-j%{jobs}%&quot;]
install: [make &quot;install&quot;]
remove: [&quot;rm&quot; &quot;-R&quot; &quot;%{lib}%/coq/user-contrib/ZornsLemma&quot;]
depends: [
  &quot;ocaml&quot;
  &quot;coq&quot; {&gt;= &quot;8.7&quot; &amp; &lt; &quot;8.8~&quot;}
]
tags: [
  &quot;keyword: set theory&quot;
  &quot;keyword: cardinal numbers&quot;
  &quot;keyword: ordinal numbers&quot;
  &quot;keyword: countable&quot;
  &quot;keyword: quotients&quot;
  &quot;keyword: well-orders&quot;
  &quot;keyword: Zorn&#39;s lemma&quot;
  &quot;category: Mathematics/Logic/Set theory&quot;
]
authors: [ &quot;Daniel Schepler &lt;dschepler@gmail.com&gt;&quot; ]
bug-reports: &quot;https://github.com/coq-contribs/zorns-lemma/issues&quot;
dev-repo: &quot;git+https://github.com/coq-contribs/zorns-lemma.git&quot;
synopsis: &quot;Zorn&#39;s Lemma&quot;
description:
  &quot;This library develops some basic set theory. The main purpose I had in writing it was as support for the Topology library.&quot;
flags: light-uninstall
url {
  src: &quot;https://github.com/coq-contribs/zorns-lemma/archive/v8.7.0.tar.gz&quot;
  checksum: &quot;md5=2b3b2abaea2336deb3615847a87ba07a&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install 🏜️</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-zorns-lemma.8.7.0 coq.8.13.2</code></dd>
              <dt>Return code</dt>
              <dd>5120</dd>
              <dt>Output</dt>
              <dd><pre>[NOTE] Package coq is already installed (current version is 8.13.2).
The following dependencies couldn&#39;t be met:
  - coq-zorns-lemma -&gt; coq &lt; 8.8~ -&gt; ocaml &lt; 4.10
      base of this switch (use `--unlock-base&#39; to",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",40mHry
code,"<h1>Most Viewed</h1>
                <table class=""table table-hover"">
                <thead>
                  <tr>
                    <th>Tool ID</th>
                    <th>Tool Name</th>
                    <th>Tool Description</th>
                    <th>Extent</th>
                    <th>Rating</th>
                    <th>Views</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>#1</td>
                    <td>Test Pro</td>
                    <td>This tool creates auto testing scripts</td>
                    <td>Enterprise</td>
                    <td>3/5</td>
                    <td>4589</td>
                  </tr>
                  <tr>
                    <td>#2</td>
                    <td>Script Builder</td>
                    <td>This tool auto builds the scripts</td>
                    <td>Application</td>
                    <td>4/5</td>
                    <td>9768</td>
                  </tr>
                  <tr>
                    <td>#3</td>
                    <td>Bootstrap Builder</td>
                    <td>Auto build responsive websites</td>
                    <td>Technology</td>
                    <td>5/5</td>
                    <td>759</td>
                  </tr>
                </tbody>
              </table>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",b4Itw9
code,"<!doctype html>
<html>
<head>
    <title>Code coverage report for wizard/test/wizardSpecs.js</title>
    <meta http-equiv=""content-type"" content=""text/html; charset=UTF-8"">
    <meta http-equiv=""content-language"" content=""en-gb"">
    
        <link rel='stylesheet' href='../../prettify.css'>
    
    <style type='text/css'>
        body, html {
            margin:0; padding: 0;
        }
        body {
            font-family: ""Helvetic Neue"", Helvetica,Arial;
            font-size: 10pt;
        }
        div.header, div.footer {
            background: #eee;
            padding: 1em;
        }
        div.header {
            z-index: 100;
            position: fixed;
            top: 0;
            border-bottom: 1px solid #666;
            width: 100%;
        }
        div.footer {
            border-top: 1px solid #666;
        }
        div.body {
            margin-top: 10em;
        }
        div.meta {
            font-size: 90%;
            text-align: center;
        }
        h1, h2, h3 {
            font-weight: normal;
        }
        h1 {
            font-size: 12pt;
        }
        h2 {
            font-size: 10pt;
        }
        pre {
            font-family: consolas, menlo, monaco, monospace;
            margin: 0;
            padding: 0;
            line-height: 14px;
            font-size: 14px;
        }

        div.path { font-size: 110%; }
        div.path a:link, div.path a:visited { color: #000; }
        table.coverage { border-collapse: collapse; margin:0; padding: 0 }

        table.coverage td {
            margin: 0;
            padding: 0;
            color: #111;
            vertical-align: top;
        }
        table.coverage td.line-count {
            width: 50px;
            text-align: right;
            padding-right: 5px;
        }
        table.coverage td.line-coverage {
            color: #777 !important;
            text-align: right;
            border-left: 1px solid #666;
            border-right: 1px solid #666;
        }

        table.coverage td.text {
        }

        table.coverage td span.cline-any {
            display: inline-block;
            padding: 0 5px;
            width: 40px;
        }
        table.coverage td span.cline-neutral {
            background: #eee;
        }
        table.coverage td span.cline-yes {
            background: #b5d592;
            color: #999;
        }
        table.coverage td span.cline-no {
            background: #fc8c84;
        }

        .cstat-yes { color: #111; }
        .cstat-no { background: #fc8c84; color: #111; }
        .fstat-no { background: #ffc520; color: #111 !important; }
        .cbranch-no { background:  yellow !important; color: #111; }
        .missing-if-branch {
            display: inline-block;
            margin-right: 10px;
            position: relative;
            padding: 0 4px;
            background: black;
            color: yellow;
            xtext-decoration: line-through;
        }
        .missing-if-branch .typ {
            color: inherit !important;
        }

        .entity, .metric { font-weight: bold; }
        .metric { display: inline-block; border: 1px solid #333; padding: 0.3em; background: white; }
        .metric small { font-size: 80%; font-weight: normal; color: #666; }

        div.coverage-summary table { border-collapse: collapse; margin: 3em; font-size: 110%; }
        div.coverage-summary td, div.coverage-summary table  th { margin: 0; padding: 0.25em 1em; border-top: 1px solid #666; border-bottom: 1px solid #666; }
        div.coverage-summary th { text-align: left; border: 1px solid #666; background: #eee; font-weight: normal; }
        div.coverage-summary th.file { border-right: none !important; }
        div.coverage-summary th.pic { border-left: none !important; text-align: right; }
        div.coverage-summary th.pct { border-right: none !important; }
        div.coverage-summary th.abs { border-left: none !important; text-align: right; }
        div.coverage-summary td.pct { text-align: right; border-left: 1px solid #666; }
        div.coverage-summary td.abs { text-align: right; font-size: 90%; color: #444; border-right: 1px solid #666; }
        div.coverage-summary td.file { text-align: right; border-left: 1px solid #666; white-space: nowrap;  }
        div.coverage-summary td.pic { min-width: 120px !important;  }
        div.coverage-summary a:link { text-decoration: none; color: #000; }
        div.coverage-summary a:visited { text-decoration: none; color: #333; }
        div.coverage-summary a:hover { text-decoration: underline; }
        div.coverage-summary tfoot td { border-top: 1px solid #666; }

        div.coverage-summary .yui3-datatable-sort-indicator, div.coverage-summary .dummy-sort-indicator {
            height: 10px;
            width: 7px;
            display: inline-block;
            margin-left: 0.5em;
        }
        div.coverage-summary .yui3-datatable-sort-indicator {
            background: url(""http://yui.yahooapis.com/3.6.0/build/datatable-sort/assets/skins/sam/sort-arrow-sprite.png"") no-repeat scroll 0 0 transparent;
   ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Mj5Jut
code,"{% extends ""admin/base.html"" %}
{% load i18n %}

{% block title %}{{ title }} | {% trans 'lab purchase management' %}{% endblock %}

{% block branding %}
<h1 id=""site-name"">{% trans 'LabHamster' %}</h1>
{% endblock %}

{% block nav-global %}{% endblock %}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YNjC6Y
code,"<!DOCTYPE html>
<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
<title>retro-205 Cardatron Control Unit</title>
<!--
/***********************************************************************
* retro-205/webUI D205CardatronControl.html
************************************************************************
* Copyright (c) 2015, Paul Kimpel.
* Licensed under the MIT License, see
*       http://www.opensource.org/licenses/mit-license.php
************************************************************************
* ElectroData/Burroughs Datatron 205 Cardatron Control page.
************************************************************************
* 2015-02-01  P.Kimpel
*   Original version, from D205ControlConsole.html.
***********************************************************************/
-->
<meta name=""Author"" content=""Paul Kimpel"">
<meta http-equiv=""Content-Script-Type"" content=""text/javascript"">
<meta http-equiv=""Content-Style-Type"" content=""text/css"">
<link id=defaultStyleSheet rel=stylesheet type=""text/css"" href=""D205Common.css"">
<link id=consoleStyleSheet rel=stylesheet type=""text/css"" href=""D205CardatronControl.css"">
</head>

<body id=cardatronControlBody class=deviceBody>
<div id=PanelSurface>
    <div id=InputSetupBtn class=blackButton1>&nbsp;</div>
    <div id=InputSetupBtnCaption class=caption>INPUT<br>SETUP</div>
    <div id=ClearBtn class=redButton1>&nbsp;</div>
    <div id=ClearBtnCaption class=caption>GENERAL<br>CLEAR</div>
</div>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",A6G1Pn
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta http-equiv=""refresh"" content=""0;URL=../../openssl_sys/fn.SSL_CTX_set_read_ahead.html"">
</head>
<body>
    <p>Redirecting to <a href=""../../openssl_sys/fn.SSL_CTX_set_read_ahead.html"">../../openssl_sys/fn.SSL_CTX_set_read_ahead.html</a>...</p>
    <script>location.replace(""../../openssl_sys/fn.SSL_CTX_set_read_ahead.html"" + location.search + location.hash);</script>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",srDfYw
code,"<H1>CARDS LIST</h1>
<div ng-repeat=""card in CardCtrl.cardlist"" ng-bind=""card.title""></div>


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ksRXvj
code,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc (10.0.2) on Fri Sep 21 22:00:31 PDT 2018 -->
<title>U-Index</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
<meta name=""date"" content=""2018-09-21"">
<link rel=""stylesheet"" type=""text/css"" href=""../stylesheet.css"" title=""Style"">
<link rel=""stylesheet"" type=""text/css"" href=""../jquery/jquery-ui.css"" title=""Style"">
<script type=""text/javascript"" src=""../script.js""></script>
<script type=""text/javascript"" src=""../jquery/jszip/dist/jszip.min.js""></script>
<script type=""text/javascript"" src=""../jquery/jszip-utils/dist/jszip-utils.min.js""></script>
<!--[if IE]>
<script type=""text/javascript"" src=""../jquery/jszip-utils/dist/jszip-utils-ie.min.js""></script>
<![endif]-->
<script type=""text/javascript"" src=""../jquery/jquery-1.10.2.js""></script>
<script type=""text/javascript"" src=""../jquery/jquery-ui.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""U-Index"";
        }
    }
    catch(err) {
    }
//-->
var pathtoroot = ""../"";loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class=""fixedNav"">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar.top"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.top"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.top.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../main/package-summary.html"">Package</a></li>
<li>Class</li>
<li>Use</li>
<li><a href=""../main/package-tree.html"">Tree</a></li>
<li><a href=""../deprecated-list.html"">Deprecated</a></li>
<li class=""navBarCell1Rev"">Index</li>
<li><a href=""../help-doc.html"">Help</a></li>
</ul>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li><a href=""index-1.html"">Prev Letter</a></li>
<li>Next Letter</li>
</ul>
<ul class=""navList"">
<li><a href=""../index.html?index-files/index-2.html"" target=""_top"">Frames</a></li>
<li><a href=""index-2.html"" target=""_top"">No&nbsp;Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_top"">
<li><a href=""../allclasses-noframe.html"">All&nbsp;Classes</a></li>
</ul>
<ul class=""navListSearch"">
<li><label for=""search"">SEARCH:</label>
<input type=""text"" id=""search"" value=""search"" disabled=""disabled"">
<input type=""reset"" id=""reset"" value=""reset"" disabled=""disabled"">
</li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_top"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<a name=""skip.navbar.top"">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class=""navPadding"">&nbsp;</div>
<script type=""text/javascript""><!--
$('.navPadding').css('padding-top', $('.fixedNav').css(""height""));
//-->
</script>
<div class=""contentContainer""><a href=""index-1.html"">M</a>&nbsp;<a href=""index-2.html"">U</a>&nbsp;<a name=""I:U"">
<!--   -->
</a>
<h2 class=""title"">U</h2>
<dl>
<dt><a href=""../main/UsingTheGridLayout.html"" title=""class in main""><span class=""typeNameLink"">UsingTheGridLayout</span></a> - Class in <a href=""../main/package-summary.html"">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class=""memberNameLink""><a href=""../main/UsingTheGridLayout.html#UsingTheGridLayout--"">UsingTheGridLayout()</a></span> - Constructor for class main.<a href=""../main/UsingTheGridLayout.html"" title=""class in main"">UsingTheGridLayout</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href=""index-1.html"">M</a>&nbsp;<a href=""index-2.html"">U</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class=""bottomNav""><a name=""navbar.bottom"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.bottom"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.bottom.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../main/package-summary.html"">Package</a></li>
<li>Class</li>
<li>Use</li>
<li><a href=""../main/package-tree.html"">Tree</a></li>
<li><a href=""../deprecated-list.html"">Deprecated</a></li>
<li class=""navBarCell1Rev"">Index</li>
<li><a href=""../help-doc.html"">Help</a></li>
</ul>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li><a href=""index-1.html"">Prev Letter</a></li>
<li>Next Letter</li>
</ul>
<ul class=""navList"">
<li><a href=""../index.html?index-files/index-2.html"" target=""_top"">Frames</a></li>
<li><a href=""index-2.html"" target=""_top"">No&nbsp;Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_bottom"">
<li><a href=""../allclasses-noframe.html"">All&nbsp;Classes</a></li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_bottom"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UI4bAR
code,"<p>
	Disponemos de una amplia gama de piensos fisiológicos y de prescripción veterinaria; nuestras auxiliares nutricionistas le asesorarán sobre cualquier aspecto relacionado con la alimentación de su mascota.
</p>
<p>
	Contamos con sección especializada en alimentación de animales exóticos.
</p>
<p>
	Asimismo, podrá encontrar gran variedad de juguetes y complementos seleccionados pensando en la comodidad, seguridad y diversión de nuestras mascotas.
</p>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DmOT1G
code,"<!doctype html>
<html>

<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes"">
  <title>grapp-core-ajax tests</title>
  <script src=""../lib/web-component-tester/browser.js""></script>
</head>

<body>

  <script>
    WCT.loadSuites([
      'basic.html',
    ]);
  </script>

  <script src=""//localhost:35729/livereload.js""></script>

</body>

</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k-Kp_S
code,"<section ng-controller=""DashboardController"" ng-init=""createdCourseList()"">
    <div class=""row mt"">
        <div class=""col-lg-12"">
            <div class=""form-panel"">
                <div class=""chat-room-head"">
                    <h3> Professor Dashboard</h3>
                </div>
               <!--  <div class=""page-header centered"">
                    <h1> Professor Dashboard</h1>
                </div> -->
               <!--  <div class=""room-desk"">
                    <p class=""pull-left lead"">My Course (active course)</p>
                    <a class=""pull-right btn btn-lg btn-theme02"" href=""../courses/create"">+ create course</a>
                </div> -->
                <div class=""row"">
                    <div class=""col-lg-6"" >
                        <p class=""lead text-center"">
                            My Course (active course)
                        </p>
                        <div class=""row list-group"">
                            <div class=""col-lg-12 col-md-12 col-sm-12 mb"" ng-repeat=""course in courses | filter:{active: true}"">
                                <div class=""pn"" >
                                    <a ng-controller=""CoursesController""  ng-init=""findNumStudentEnrolled(); getNumQuiz();"" ui-sref=""courses.view({courseId: course._id})"" class=""list-group-item"">

                                             {{course.semester}} {{course.year}}
                                            <h4> {{course.number}} {{course.name}} </h4>
                                              <button id = ""edit"" class=""btn btn-default btn-sm pull-right""  type=""submit"" ng-controller=""CoursesListController"" data-ng-click=""$event.preventDefault(); $event.stopPropagation(); modalUpdate('lg', course)"" > Edit </button>

                                            Number of students: {{course.enrolledStudents.length}}
                                        </br>
                                            Number of quizzes: {{numQuizzesInCourse[course._id]}}


                                    </a>

                                </div>
<!--                                
      <div>
      Popover (working) -> 
              <div ng-model=""name"" mydirective=""""></div>
      </div>
      <div>
      Popover uib (notworking- uib-popover-html)  ->
              <div ng-model=""name"" mydirectiveuib=""""></div>
      </div> -->
                            </div>
                           <!--   <button uib-popover=""I appeared on mouse enter!"" popover-trigger=""mouseenter""  popover-placement=""right"" type=""button"" class=""btn btn-default"">Mouseenter</button> -->

                        </div>
                    </div>

                    <div class=""col-lg-6 text-center"" >
                         <a class=""btn btn-lg btn-theme02 "" id=""submit"" href=""../courses/create"">+ create course</a>
                    </div>
                </div>
                <div class=""row"" style=""margin-bottom: 30px;"">
                    <div class=""col-md-12"">
                        <button type=""button"" class=""btn btn-default"" ng-click=""isCollapsed = !isCollapsed"">List all deactive courses</button>
                        <hr>
                        <div collapse=""isCollapsed"">
                            <!-- uib-collapse only works with bootstrap version 0.14.X -->
                            <div class=""list-group"">
                                <div class=""col-lg-12 col-md-12 col-sm-12 mb"" ng-repeat=""course in courses | filter:{active: false}"">
                                    <div class=""pn"" >
                                        <a id=""course"" ng-controller=""CoursesController"" ng-init=""findNumStudentEnrolled(course._id); getNumQuiz(course._id);"" ui-sref=""courses.view({courseId: course._id})"" class=""list-group-item"">
                                             {{course.semester}} {{course.year}}
                                            <h4> {{course.number}} {{course.name}} </h4>
                                              <button id = ""edit"" class=""btn btn-default btn-sm pull-right""  type=""submit"" ng-controller=""CoursesListController"" data-ng-click=""$event.preventDefault(); $event.stopPropagation(); modalUpdate('lg', course)"" > Edit </button>

                                            Number of students: {{numStudentInCourse[course._id]}}
                                            </br>
                                            Number of quizzes: {{numQuizzesInCourse[course._id]}}
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- col-lg-12-->
    </div><!-- /row -->
</section>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",R7diLB
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <title>Rice Diseases</title>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <link rel=""stylesheet"" href=""static/bootstrap.min.css"">
  <script src=""static/jquery.min.js""></script>
  <script src=""static/bootstrap.min.js""></script>
</head>
<body>
<nav class=""navbar navbar-default"">
  <div class=""container-fluid"">
    <div class=""navbar-header"">
      <a class=""navbar-brand"" href=""/"">Forecast</a>
    </div>
    <ul class=""nav navbar-nav"">
      <li class=""active""><a href=""/"">Home</a></li>
      <li class=""dropdown"">
        <a class=""dropdown-toggle"" data-toggle=""dropdown"" href=""#"">Rice Diseases
        <span class=""caret""></span></a>
        <ul class=""dropdown-menu"">
          <li><a href=""/1"">Brown Spot Disease</a></li>
          <li><a href=""/2"">Blast Disease</a></li>
          <li><a href=""/3"">Bacterial Leaf Streak Disease</a></li>
          <li><a href=""/4"">Dirty Panicle Disease</a></li>
          <li><a href=""/5"">Bacterial Leaf Blight Disease</a></li> 
        </ul>
      </li>
      <li><a href=""/graph"">Graph</a></li> 
      <li><a href=""/read"">Data</a></li> 
      <li><a href=""/contact"">Contact</a></li> 
    </ul>
  </div>
</nav>

<div class=""container"">
  <div class=""jumbotron"">
    <h1>Bacterial Leaf Streak Disease</h1>
      
      <h2>Symptoms</h2>
      <p>
Symptoms are narrow, dark-greenish, water-soaked, interveinal streaks of various lengths, initially restricted to the leaf blades. The lesions enlarge, turn yellowish-orange to brown (depending on cultivar), and eventually coalesce. Tiny amber droplets of bacterial exudate are often present on the lesions.</p>


      <p>Causal agent : <i>Xanthomonas oryzae pv. oryzicola</i>
        <br>
Percentage of damage: Seedling 70%, Grains production period 30%

      </p>


      <div class=""container"">
      <div style=""float:left;""><img class=""img-responsive"" src=""static/31.png"" alt=""Bacterial leaf streak disease"" width=""200""></div>
      <div style=""float:left;""><img class=""img-responsive"" src=""static/32.png"" alt=""Bacterial leaf streak disease"" width=""200""></div>
      <div style=""float:left;""><img class=""img-responsive"" src=""static/33.png"" alt=""Bacterial leaf streak disease"" width=""200""></div>
      </div>
      

      <h2>Managements</h2>
      <p>
1. Phytosanitary measures to prevent the distribution of seed infected.
<br>
2. Healthy seed is used.
<br>
3. Suitable using  nitrogenous fertilizer because the use of excess nitrogenous fertilizer has shown an increase in incidence.
<br>
4. Biological control such as Trichoderma spp., Bacillus subtilis, Pseudomonas fluorescens.
<br>
5. Other control measures are not likely to be necessary. 

<p>


    </div>
      

  </div>
</div>

</body>
</html>

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pyBx7j
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <title>Marionette Components</title>
</head>
<body>
  Marionette View Test
  <script src='../build/view.js'></script>
</body>
</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BWpWrn
code,"
<!DOCTYPE html>
<html>
	<head>
		<meta charset=""UTF-8""/><!-- using block title in layout.dt--><!-- using block ddox.defs in ddox.layout.dt--><!-- using block ddox.title in ddox.layout.dt-->
		<title>Function awe_webview_set_callback_change_target_url</title>
		<link rel=""stylesheet"" type=""text/css"" href=""../../styles/ddox.css""/>
		<link rel=""stylesheet"" href=""../../prettify/prettify.css"" type=""text/css""/>
		<script type=""text/javascript"" src=""../../scripts/jquery.js"">/**/</script>
		<script type=""text/javascript"" src=""../../prettify/prettify.js"">/**/</script>
		<script type=""text/javascript"" src=""../../scripts/ddox.js"">/**/</script>
	</head>
	<body onload=""prettyPrint(); setupDdox();"">
		<nav id=""main-nav""><!-- using block navigation in layout.dt-->
						<ul class=""tree-view"">
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">components</a>
						<ul class=""tree-view"">
							<li>
								<a href=""../../components/animation.html"" class="" module"">animation</a>
							</li>
							<li>
								<a href=""../../components/assets.html"" class="" module"">assets</a>
							</li>
							<li>
								<a href=""../../components/camera.html"" class="" module"">camera</a>
							</li>
							<li>
								<a href=""../../components/component.html"" class="" module"">component</a>
							</li>
							<li>
								<a href=""../../components/lights.html"" class="" module"">lights</a>
							</li>
							<li>
								<a href=""../../components/material.html"" class="" module"">material</a>
							</li>
							<li>
								<a href=""../../components/mesh.html"" class="" module"">mesh</a>
							</li>
							<li>
								<a href=""../../components/userinterface.html"" class="" module"">userinterface</a>
							</li>
						</ul>
							</li>
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">core</a>
						<ul class=""tree-view"">
							<li>
								<a href=""../../core/dgame.html"" class="" module"">dgame</a>
							</li>
							<li>
								<a href=""../../core/gameobject.html"" class="" module"">gameobject</a>
							</li>
							<li>
								<a href=""../../core/prefabs.html"" class="" module"">prefabs</a>
							</li>
							<li>
								<a href=""../../core/properties.html"" class="" module"">properties</a>
							</li>
							<li>
								<a href=""../../core/reflection.html"" class="" module"">reflection</a>
							</li>
							<li>
								<a href=""../../core/scene.html"" class="" module"">scene</a>
							</li>
						</ul>
							</li>
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">graphics</a>
						<ul class=""tree-view"">
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">adapters</a>
						<ul class=""tree-view"">
							<li>
								<a href=""../../graphics/adapters/adapter.html"" class="" module"">adapter</a>
							</li>
							<li>
								<a href=""../../graphics/adapters/linux.html"" class="" module"">linux</a>
							</li>
							<li>
								<a href=""../../graphics/adapters/mac.html"" class="" module"">mac</a>
							</li>
							<li>
								<a href=""../../graphics/adapters/win32.html"" class="" module"">win32</a>
							</li>
						</ul>
							</li>
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">shaders</a>
						<ul class=""tree-view"">
							<li class=""collapsed tree-view"">
								<a href=""#"" class=""package"">glsl</a>
						<ul class=""tree-view"">
							<li>
								<a href=""../../graphics/shaders/glsl/ambientlight.html"" class="" module"">ambientlight</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/animatedgeometry.html"" class="" module"">animatedgeometry</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/directionallight.html"" class="" module"">directionallight</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/geometry.html"" class="" module"">geometry</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/pointlight.html"" class="" module"">pointlight</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/shadowmap.html"" class="" module"">shadowmap</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl/userinterface.html"" class="" module"">userinterface</a>
							</li>
						</ul>
							</li>
							<li>
								<a href=""../../graphics/shaders/glsl.html"" class="" module"">glsl</a>
							</li>
							<li>
								<a href=""../../graphics/shaders/shaders.html"" class="" module"">shaders</a>
							</li>
						</ul>
							</li>
							<li>
								<a href=""../../graphics/adapters.html"" class="" module"">adapters</a>
							</li>
							<li>
								<a href=""../../graphics/graphics.html"" class="" module"">graphics</a>
							</li>
							<li>
								<a href=""../../graphics/shaders.html"" class="" module"">shaders</a>
							</li>
						</ul>
							</li>
							<li class="" tree-view"">
								<a href=""#"" class=""package"">utility</a>
						<ul class=""tree-view"">
							<li>
								<a href=""../../utility/awesomium.html"" class=""selected module"">awesomium</a>
							</li>
							<li>
								<a href=""../../utility/concurrency.html"" class="" module"">concurr",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",M4f724
code,"<!DOCTYPE html>
<html lang=""en"">
    <head>
        <meta charset=""utf-8"">
        <title>Login Page - Photon Admin Panel Theme</title>
                <meta name=""viewport"" content=""width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0"">
        <link rel=""shortcut icon"" href=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/favicon.ico"" />
        <link rel=""apple-touch-icon"" href=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/iosicon.png"" />
<!--    DEVELOPMENT LESS -->
<!--          <link rel=""stylesheet/less"" href=""css/photon.less"" media=""all"" />
        <link rel=""stylesheet/less"" href=""css/photon-responsive.less"" media=""all"" />
 -->        <!--    PRODUCTION CSS -->
        <link rel=""stylesheet"" href=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/css/css_compiled/photon-min.css?v1.1"" media=""all"" />
        <link rel=""stylesheet"" href=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/css/css_compiled/photon-min-part2.css?v1.1"" media=""all"" />
        <link rel=""stylesheet"" href=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/css/css_compiled/photon-responsive-min.css?v1.1"" media=""all"" />

<!--[if IE]>
        <link rel=""stylesheet"" type=""text/css"" href=""css/css_compiled/ie-only-min.css?v1.1"" />
        

<![endif]-->

<!--[if lt IE 9]>
        <link rel=""stylesheet"" type=""text/css"" href=""css/css_compiled/ie8-only-min.css?v1.1"" />
        <script type=""text/javascript"" src=""js/plugins/excanvas.js""></script>
        <script type=""text/javascript"" src=""js/plugins/html5shiv.js""></script>
        <script type=""text/javascript"" src=""js/plugins/respond.min.js""></script>
        <script type=""text/javascript"" src=""js/plugins/fixFontIcons.js""></script>
<![endif]-->

        
<script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js""></script>
<script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.0/jquery-ui.min.js""></script>

<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/bootstrap/bootstrap.min.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/modernizr.custom.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/jquery.pnotify.min.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/less-1.3.1.min.js""></script>        
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/xbreadcrumbs.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/jquery.maskedinput-1.3.min.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/jquery.autotab-1.1b.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/charCount.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/jquery.textareaCounter.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/elrte.min.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/elrte.en.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugins/elrte/css/css_compiled/js/js/plugins/prettify/js/plugins/js/plugins/select2.js""></script>
<script type=""text/javascript"" src=""http://photonui.orangehilldev.com/css/css_compiled/@%7BphotonImagePath%7Dplugin",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Vu9COi
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <title>Retina</title>
    <link rel=""stylesheet"" href=""http://pic.lvmama.com/min/index.php?f=/styles/v6/header_new.css"">
    <link rel=""stylesheet"" href=""css/monokai-sublime.css"">
    <link rel=""stylesheet"" href=""css/docs.css"">
    <link rel=""stylesheet"" href=""css/retina.css"">
</head>
<body>

<header id=""header"">
    <div id=""logo"">
        NOVA
    </div>
</header>

<menu id=""nav"">
    <li><a href=""./"">首页</a></li>
</menu>

<div id=""everything"">

    <h1>Retina</h1>

    <h2>建议</h2>
    <blockquote>
        Ctrl + = 放大屏幕显示比例到200%或使用高分屏显示器以查看效果
    </blockquote>
    <h3>普通图片</h3>
    <section>
        <div class=""lvmama-logo""></div>
    </section>
    <h3>高分屏适配图片</h3>
    <section>
        <div class=""lvmama-logo lvmama-logo-retina""></div>
    </section>
    <pre>
        <code>
.lvmama-logo {
    background-image: url(../img/logo-61.png);
    width: 330px;
    height: 70px;
}

@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
only screen and (min--moz-device-pixel-ratio: 1.5),
only screen and (min-device-pixel-ratio: 1.5) {
    /* 当设备像素比不小于1.5的时候... */
    .lvmama-logo-retina {
        background-image: url(../img/logo-61@2x.png);
        background-size: 100%;
    }

}
        </code>
    </pre>

    <h2>评论</h2>
    <!-- 多说评论框 start -->
    <div class=""ds-thread"" data-thread-key=""retina"" data-title=""NOVA""
         data-url=""http://www.em2046.com/nova/docs/retina.html""></div>
    <!-- 多说评论框 end -->

</div>
<script src=""js/jquery-1.12.1.js""></script>
<script src=""js/highlight.pack.js""></script>
<script src=""js/navigation.js""></script>

</body>
</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kGTAGT
code,"


















	






  
  
  
  































	
	
	



<!DOCTYPE html>
<!--[if lt IE 9]><html class=""no-js lt-ie9"" lang=""en"" dir=""ltr""><![endif]-->
<!--[if gt IE 8]><!-->
<html class=""no-js"" lang=""en"" dir=""ltr"">
<!--<![endif]-->


<!-- Usage: /eic/site/ccc-rec.nsf/tpl-eng/template-1col.html?Open&id=3 (optional: ?Open&page=filename.html&id=x) -->

<!-- Created: ;  Product Code: 536;  Server: stratnotes2.ic.gc.ca -->

<head>
	<!-- Title begins / Début du titre -->
	<title>
    
            
        
          
            Canada Custom Shutters Ltd. -
          
        
      
    
    Complete profile - Canadian Company Capabilities - Industries and Business - Industry Canada
  </title>
	<!-- Title ends / Fin du titre -->
 
	<!-- Meta-data begins / Début des métadonnées -->
<meta charset=""utf-8"" />
<meta name=""dcterms.language"" title=""ISO639-2"" content=""eng"" />
<meta name=""dcterms.title"" content="""" />
<meta name=""description"" content="""" />
<meta name=""dcterms.description"" content="""" />
<meta name=""dcterms.type"" content=""report, data set"" />
<meta name=""dcterms.subject"" content=""businesses, industry"" />
<meta name=""dcterms.subject"" content=""businesses, industry"" />
<meta name=""dcterms.issued"" title=""W3CDTF"" content="""" />
<meta name=""dcterms.modified"" title=""W3CDTF"" content="""" />
<meta name=""keywords"" content="""" />

<meta name=""dcterms.creator"" content="""" />
<meta name=""author"" content="""" />
<meta name=""dcterms.created"" title=""W3CDTF"" content="""" />
<meta name=""dcterms.publisher"" content="""" />
<meta name=""dcterms.audience"" title=""icaudience"" content="""" />
<meta name=""dcterms.spatial"" title=""ISO3166-1"" content="""" />
<meta name=""dcterms.spatial"" title=""gcgeonames"" content="""" />
<meta name=""dcterms.format"" content=""HTML"" />
<meta name=""dcterms.identifier"" title=""ICsiteProduct"" content=""536"" />

<!-- EPI-11240 -->
<meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">

<!-- MCG-202 -->
<meta content=""width=device-width,initial-scale=1"" name=""viewport"">

<!-- EPI-11567 -->
<meta name = ""format-detection"" content = ""telephone=no"">

<!-- EPI-12603 -->
<meta name=""robots"" content=""noarchive"">

<!-- EPI-11190 - Webtrends -->
<script>
var startTime = new Date();
startTime = startTime.getTime();
</script>


<!--[if gte IE 9 | !IE ]><!-->
<link href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/assets/favicon.ico"" rel=""icon"" type=""image/x-icon"">
<link rel=""stylesheet"" href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/css/wet-boew.min.css"">
<!--<![endif]-->
<link rel=""stylesheet"" href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/css/theme.min.css"">
<!--[if lt IE 9]>
<link href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/assets/favicon.ico"" rel=""shortcut icon"" />

<link rel=""stylesheet"" href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/css/ie8-wet-boew.min.css"" />
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>
<script src=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/js/ie8-wet-boew.min.js""></script>
<![endif]-->
<!--[if lte IE 9]>


<![endif]-->
<noscript><link rel=""stylesheet"" href=""/utils/scripts/_WET_4-0/apps/themes-dist/gcweb/css/noscript.min.css"" /></noscript>
<!-- Google Tag Manager DO NOT REMOVE OR MODIFY - NE PAS SUPPRIMER OU MODIFIER -->
<script>dataLayer1 = [];</script>
<!-- End Google Tag Manager -->



<!-- EPI-11235 -->
<link rel=""stylesheet"" href=""/eic/home.nsf/css/add_WET_4-0_Canada_Apps.css"">


  	<link href=""//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css"" rel=""stylesheet"">
  	<link href=""/app/ccc/srch/css/print.css"" media=""print"" rel=""stylesheet"" type=""text/css"" />
   




</head>
 

<body  class=""home"" vocab=""http://schema.org/"" typeof=""WebPage"">
 
<!-- EPIC HEADER BEGIN -->
<!-- Google Tag Manager DO NOT REMOVE OR MODIFY - NE PAS SUPPRIMER OU MODIFIER -->
<noscript><iframe title=""Google Tag Manager"" src=""//www.googletagmanager.com/ns.html?id=GTM-TLGQ9K"" height=""0"" width=""0"" style=""display:none;visibility:hidden""></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer1'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer1','GTM-TLGQ9K');</script>
<!-- End Google Tag Manager -->

<!-- EPI-12801 -->
<span typeof=""Organization""><meta property=""legalName"" content=""Department_of_Industry""></span>

<ul id=""wb-tphp"">
<li class=""wb-slc"">
<a class=""wb-sl"" href=""#wb-cont"">Skip to main content</a>
</li>
<li class=""wb-slc visible-sm visible-md visible-lg"">
<a class=""wb-sl"" href=""#wb-info"">Skip to ""About this site""</a>
</li>
</ul>
<header role=""banner"">
<div id=""wb-bnr"" class=""container"">
<section id=""wb-lng"" class=""visible-md visible-lg text-right"">
<h2 class=""wb-inv"">Language selection</h2>
<div class=""row"">
<div class=""col-md-12"">
<ul class=""list-inline mrgn-bttm-0"">
<li><a href=""nvgt.do?V_TOKEN=1492272358519&V_SEARCH.docsCount=3&V_DOCUMENT.docRank=7972&V_SEARCH.docsStart=7971&V_SEARCH.command=naviga",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Jou4a7
code,"<html>
<head>
    <meta http-equiv=""refresh"" content=""0; url=https://minecrafthopper.net/"">
    <link rel=""canonical"" href=""https://minecrafthopper.net/""/>
</head>
</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1SKfX3
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""utf-8"">
  <title>Plato - lib/cmds/nt.js</title>

  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <meta name=""description"" content="""">
  <meta name=""author"" content="""">

  <!--[if lt IE 9]>
  <script src=""http://html5shim.googlecode.com/svn/trunk/html5.js""></script>
  <![endif]-->

  <link href=""../../assets/css/vendor/morris.css"" rel=""stylesheet"">
  <link href=""../../assets/css/vendor/bootstrap.css"" rel=""stylesheet"">
  <link href=""../../assets/css/vendor/font-awesome.css"" rel=""stylesheet"">
  <link href=""../../assets/css/vendor/codemirror.css"" rel=""stylesheet"">
  <link href=""../../assets/css/plato.css"" rel=""stylesheet"">
  <link href=""../../assets/css/plato-file.css"" rel=""stylesheet"">

</head>

<body>

<div class=""navbar navbar-fixed-top"">
  <div class=""container"">
    <a class=""navbar-brand"" href=""http://github.com/es-analysis/plato"">Plato on Github</a>
    <ul class=""nav navbar-nav"">
      <li>
        <a href=""../../index.html"">Report Home</a>
      </li>
    </ul>
  </div>
</div>

<div class=""jumbotron"">
  <div class=""container"">
    <h1>lib/cmds/nt.js</h1>
  </div>
</div>

<div class=""container aggregate-stats"">
  <div class=""row"">
    <div class=""col-md-6"">
      <h2 class=""header"">Maintainability <a href=""http://blogs.msdn.com/b/codeanalysis/archive/2007/11/20/maintainability-index-range-and-meaning.aspx""><i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""A value between 0 and 100 that represents the relative ease of maintaining the code. A high value means better maintainability."" data-original-title=""Maintainability Index""  data-container=""body""></i></a></h2>
      <p class=""stat"">64.69</p>
    </div>
    <div class=""col-md-6"">
      <h2 class=""header"">Lines of code <i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""Source Lines of Code / Logical Lines of Code"" data-original-title=""SLOC/LSLOC"" data-container=""body""></i></h2>
      <p class=""stat"">179</p>
    </div>
  </div>
  <div class=""row historical"">
    <div class=""col-md-6"">
      <p id=""chart_historical_maint"" class=""chart""></p>
    </div>
    <div class=""col-md-6"">
      <p id=""chart_historical_sloc"" class=""chart""></p>
    </div>
  </div>
  <div class=""row"">
    <div class=""col-md-6"">
      <h2 class=""header"">Difficulty  <a href=""http://en.wikipedia.org/wiki/Halstead_complexity_measures""><i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""The difficulty measure is related to the difficulty of the program to write or understand."" data-original-title=""Difficulty"" data-container=""body""></i></a></h2>
      <p class=""stat"">21.07</p>
    </div>
    <div class=""col-md-6"">
      <h2 class=""header"">Estimated Errors  <a href=""http://en.wikipedia.org/wiki/Halstead_complexity_measures""><i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""Halstead's delivered bugs is an estimate for the number of errors in the implementation."" data-original-title=""Delivered Bugs"" data-container=""body""></i></a></h2>
      <p class=""stat"">1.21</p>
    </div>
  </div>
</div>

<div class=""container charts"">
  <div class=""row"">
    <h2 class=""header"">Function weight</h2>
  </div>
  <div class=""row"">
    <div class=""col-md-6"">
      <h3 class=""chart-header"">By Complexity <a href=""http://en.wikipedia.org/wiki/Cyclomatic_complexity""><i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""This metric counts the number of distinct paths through a block of code. Lower values are better."" data-original-title=""Cyclomatic Complexity"" data-container=""body""></i></a></h3>
      <div id=""fn-by-complexity"" class=""stat""></div>
    </div>
    <div class=""col-md-6"">
      <h3 class=""chart-header"">By SLOC  <i class=""icon icon-info-sign"" rel=""popover"" data-placement=""top"" data-trigger=""hover"" data-content=""Source Lines of Code / Logical Lines of Code"" data-original-title=""SLOC/LSLOC"" data-container=""body""></i></h3>
      <div id=""fn-by-sloc"" class=""stat""></div>
    </div>
  </div>
</div>

<div class=""container"">
  <div class=""row"">
    <textarea id=""file-source"" class=""col-md-12"">/*
 * Copyright 2013 Zeno Rocha, All Rights Reserved.
 *
 * Code licensed under the BSD License:
 * https://github.com/eduardolundgren/blob/master/LICENSE.md
 *
 * @author Zeno Rocha &lt;zno.rocha@gmail.com&gt;
 */

// -- Requires -----------------------------------------------------------------
var async = require(&#039;async&#039;),
    base = require(&#039;../base&#039;),
    clc = require(&#039;cli-color&#039;),
    logger = require(&#039;../logger&#039;),
    printed = {};

// -- Constructor --------------------------------------------------------------
function Notifications(options) {
    this.options = options;

    if (!options.repo) {
        logger.error(&#039;You must specify a Git repository to run this command&#039;);
    }
}

// -- Constants --------------------------------------------------------------",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BYBRHM
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <title>使用 button 定义按钮</title>
</head>
<body>
    <form action=""http://www.baidu.com"" method=""get"">
        <button type=""button""><b>提交</b></button><br/>
        <button type=""submit""><img sec=""./img/3.jpg"" alt=""图片""></button><br/>
    </form>
</body>
</html>


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",svacu-
code,"<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/xhtml;charset=UTF-8""/>
<meta http-equiv=""X-UA-Compatible"" content=""IE=9""/>
<meta name=""generator"" content=""Doxygen 1.8.9.1""/>
<title>V8 API Reference Guide for node.js v0.11.8: v8::ExternalAsciiStringResourceImpl Class Reference</title>
<link href=""tabs.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""jquery.js""></script>
<script type=""text/javascript"" src=""dynsections.js""></script>
<link href=""search/search.css"" rel=""stylesheet"" type=""text/css""/>
<script type=""text/javascript"" src=""search/searchdata.js""></script>
<script type=""text/javascript"" src=""search/search.js""></script>
<script type=""text/javascript"">
  $(document).ready(function() { init_search(); });
</script>
<link href=""doxygen.css"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
<div id=""top""><!-- do not remove this div, it is closed by doxygen! -->
<div id=""titlearea"">
<table cellspacing=""0"" cellpadding=""0"">
 <tbody>
 <tr style=""height: 56px;"">
  <td style=""padding-left: 0.5em;"">
   <div id=""projectname"">V8 API Reference Guide for node.js v0.11.8
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
<script type=""text/javascript"">
var searchBox = new SearchBox(""searchBox"", ""search"",false,'Search');
</script>
  <div id=""navrow1"" class=""tabs"">
    <ul class=""tablist"">
      <li><a href=""index.html""><span>Main&#160;Page</span></a></li>
      <li><a href=""namespaces.html""><span>Namespaces</span></a></li>
      <li class=""current""><a href=""annotated.html""><span>Classes</span></a></li>
      <li><a href=""files.html""><span>Files</span></a></li>
      <li><a href=""examples.html""><span>Examples</span></a></li>
      <li>
        <div id=""MSearchBox"" class=""MSearchBoxInactive"">
        <span class=""left"">
          <img id=""MSearchSelect"" src=""search/mag_sel.png""
               onmouseover=""return searchBox.OnSearchSelectShow()""
               onmouseout=""return searchBox.OnSearchSelectHide()""
               alt=""""/>
          <input type=""text"" id=""MSearchField"" value=""Search"" accesskey=""S""
               onfocus=""searchBox.OnSearchFieldFocus(true)"" 
               onblur=""searchBox.OnSearchFieldFocus(false)"" 
               onkeyup=""searchBox.OnSearchFieldChange(event)""/>
          </span><span class=""right"">
            <a id=""MSearchClose"" href=""javascript:searchBox.CloseResultsWindow()""><img id=""MSearchCloseImg"" border=""0"" src=""search/close.png"" alt=""""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id=""navrow2"" class=""tabs2"">
    <ul class=""tablist"">
      <li><a href=""annotated.html""><span>Class&#160;List</span></a></li>
      <li><a href=""classes.html""><span>Class&#160;Index</span></a></li>
      <li><a href=""hierarchy.html""><span>Class&#160;Hierarchy</span></a></li>
      <li><a href=""functions.html""><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id=""MSearchSelectWindow""
     onmouseover=""return searchBox.OnSearchSelectShow()""
     onmouseout=""return searchBox.OnSearchSelectHide()""
     onkeydown=""return searchBox.OnSearchSelectKey(event)"">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id=""MSearchResultsWindow"">
<iframe src=""javascript:void(0)"" frameborder=""0"" 
        name=""MSearchResults"" id=""MSearchResults"">
</iframe>
</div>

<div id=""nav-path"" class=""navpath"">
  <ul>
<li class=""navelem""><a class=""el"" href=""namespacev8.html"">v8</a></li><li class=""navelem""><a class=""el"" href=""classv8_1_1_external_ascii_string_resource_impl.html"">ExternalAsciiStringResourceImpl</a></li>  </ul>
</div>
</div><!-- top -->
<div class=""header"">
  <div class=""summary"">
<a href=""#pub-methods"">Public Member Functions</a> &#124;
<a href=""classv8_1_1_external_ascii_string_resource_impl-members.html"">List of all members</a>  </div>
  <div class=""headertitle"">
<div class=""title"">v8::ExternalAsciiStringResourceImpl Class Reference</div>  </div>
</div><!--header-->
<div class=""contents"">
<div class=""dynheader"">
Inheritance diagram for v8::ExternalAsciiStringResourceImpl:</div>
<div class=""dyncontent"">
 <div class=""center"">
  <img src=""classv8_1_1_external_ascii_string_resource_impl.png"" usemap=""#v8::ExternalAsciiStringResourceImpl_map"" alt=""""/>
  <map id=""v8::ExternalAsciiStringResourceImpl_map"" name=""v8::ExternalAsciiStringResourceImpl_map"">
<area href=""classv8_1_1_string_1_1_external_ascii_string_resource.html"" alt=""v8::String::ExternalAsciiStringResource"" shape=""rect"" coords=""0,56,232,80""/>
<area href=""classv8_1_1_string_1_1_external_string_resource_base.html"" alt=""v8::String::ExternalStringResourceBase"" shape=""rect"" coords=""0,0,232,24""/>
</map>
 </div></div>
<table class=""memberdecls"">
<tr class=""heading""><td colspan=""2""><h2 class=""groupheader""><a name=""pub-methods""></a>
Public Member Functions</h2></td></tr>
<tr class=""memitem:ad43442534df30aebaf0125ba12aef925""><td c",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",C_0D60
code,"<!DOCTYPE html>
<html>
   <head>
      <meta charset=""UTF-8"">
      <meta name=""viewport"" content=""width=device-width, initial-scale=1.0""/>
      <meta name=""author"" content=""Aurelio De Rosa"">
      <title>Geolocation API Demo by Aurelio De Rosa</title>
      <style>
         *
         {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
         }

         body
         {
            max-width: 500px;
            margin: 2em auto;
            padding: 0 0.5em;
            font-size: 20px;
         }

         h1
         {
            text-align: center;
         }

         .api-support
         {
            display: block;
         }

         .hidden
         {
            display: none;
         }

         .buttons-wrapper
         {
            text-align: center;
         }

         .button-demo
         {
            padding: 0.5em;
            margin: 1em auto;
         }

         .g-info
         {
            font-weight: bold;
         }

         #log
         {
            height: 200px;
            width: 100%;
            overflow-y: scroll;
            border: 1px solid #333333;
            line-height: 1.3em;
         }

         .author
         {
            display: block;
            margin-top: 1em;
         }
      </style>
   </head>
   <body>
      <a href=""http://code.tutsplus.com/tutorials/an-introduction-to-the-geolocation-api--cms-20071"">Go back to the article</a>

      <span id=""g-unsupported"" class=""api-support hidden"">API not supported</span>

      <h1>Geolocation API</h1>
      <div class=""buttons-wrapper"">
         <button id=""button-get-position"" class=""button-demo"">Get current position</button>
         <button id=""button-watch-position"" class=""button-demo"">Watch position</button>
         <button id=""button-stop-watching"" class=""button-demo"">Stop watching position</button>
      </div>

      <h2>Information</h2>
      <div id=""g-information"">
         <ul>
            <li>
               Your position is <span id=""latitude"" class=""g-info"">unavailable</span>° latitude,
               <span id=""longitude"" class=""g-info"">unavailable</span>° longitude (with an accuracy of
               <span id=""position-accuracy"" class=""g-info"">unavailable</span> meters)
            </li>
            <li>
               Your altitude is <span id=""altitude"" class=""g-info"">unavailable</span> meters
               (with an accuracy of <span id=""altitude-accuracy"" class=""g-info"">unavailable</span> meters)
            </li>
            <li>You're <span id=""heading"" class=""g-info"">unavailable</span>° from the True north</li>
            <li>You're moving at a speed of <span id=""speed"" class=""g-info"">unavailable</span>° meters/second</li>
            <li>Data updated at <span id=""timestamp"" class=""g-info"">unavailable</span></li>
         </ul>
      </div>

      <h3>Log</h3>
      <div id=""log""></div>
      <button id=""clear-log"" class=""button-demo"">Clear log</button>

      <small class=""author"">
         Demo created by <a href=""http://www.audero.it"">Aurelio De Rosa</a>
         (<a href=""https://twitter.com/AurelioDeRosa"">@AurelioDeRosa</a>).<br />
         This demo is part of the <a href=""https://github.com/AurelioDeRosa/HTML5-API-demos"">HTML5 API demos repository</a>.
      </small>

      <script>
         if (!(window.navigator && window.navigator.geolocation)) {
            document.getElementById('g-unsupported').classList.remove('hidden');
            ['button-get-position', 'button-watch-position', 'button-stop-watching'].forEach(function(elementId) {
               document.getElementById(elementId).setAttribute('disabled', 'disabled');
            });
         } else {
            var log = document.getElementById('log');
            var watchId = null;
            var positionOptions = {
               enableHighAccuracy: true,
               timeout: 10 * 1000, // 10 seconds
               maximumAge: 30 * 1000 // 30 seconds
            };

            function success(position) {
               document.getElementById('latitude').innerHTML = position.coords.latitude;
               document.getElementById('longitude').innerHTML = position.coords.longitude;
               document.getElementById('position-accuracy').innerHTML = position.coords.accuracy;

               document.getElementById('altitude').innerHTML = position.coords.altitude ?  position.coords.altitude :
                       'unavailable';
               document.getElementById('altitude-accuracy').innerHTML = position.coords.altitudeAccuracy ?
                       position.coords.altitudeAccuracy :
                       'unavailable';
               document.getElementById('heading').innerHTML = position.coords.heading ? position.coords.heading :
                       'unavailable';
               document.getElementById('speed').innerHTML = position.coords.speed ? position.coords.speed :
                       'unavailable';

               document.getElementById('timestamp').innerHTML = (new Date(position.timestamp)).toString();

             ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q1E_BB
code,"<!DOCTYPE html>
<html>
<head>
<title>Piframe</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/>
<meta name=""robots"" content=""noindex""/>
<meta name=""viewport"" content=""width=device-width""/>
<script type=""text/javascript"" src=""lib/jquery/jquery-1.12.0.min.js""></script>
<link rel=""stylesheet"" href=""lib/owl-carousel/owl.carousel.css""/>
<link rel=""stylesheet"" href=""lib/owl-carousel/owl.theme.css""/>
<link rel=""stylesheet"" href=""lib/owl-carousel/owl.transitions.css"">
<script src=""lib/owl-carousel/owl.carousel.min.js""></script>
<script src=""lib/date/date.js""></script>
<script src=""lib/date/date-fr-FR.js""></script>
<link rel=""stylesheet"" href=""lib/piframe/piframe.css""/>
<script src=""lib/piframe/piframe.js""></script>
</head>
<body>
<div class=""loadingContainer""></div>
<div class=""owl-carousel mediaContainer""></div>
<div class=""mediaTooltip""></div>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q6wf6Y
code,"
<html>
    <head>
        <meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
        <title>W28677_text</title>
        <link rel=""stylesheet"" type=""text/css"" href=""style.css"" />
    </head>
    <body>
        <div style=""margin-left: auto; margin-right: auto; width: 800px; overflow: hidden;"">
            <div style=""float: left;"">
                <a href=""page9.html"">&laquo;</a>
            </div>
            <div style=""float: right;"">
                
            </div>
        </div>
        <hr/>
        
<div style=""position: absolute; margin-left: 219px; margin-top: 1017px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 302px; margin-top: 1815px;"">
    <p class=""styleSans1.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 220px; margin-top: 2090px;"">
    <p class=""styleSans8.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>"">Choke manifold minimum 3” 5k </p>
</div>

<div style=""position: absolute; margin-left: 577px; margin-top: 54px;"">
    <p class=""styleSans58.0000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>"">11” SK psi BOP stack <br/>High Pressure <br/>. . rotating Fill-up line head <br/>- Drillingcmka _ — — <br/>Annular <br/>  <br/>Preventer <br/>  <br/>I Variable rams - Blind rams - <br/> m Kill line minimum 2"" <br/>Drilling Spool <br/>' Spacer spool <br/>4‘ 5000 psi casing head </p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 55px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 165px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 330px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 495px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 660px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 825px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 1155px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 1320px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 1760px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 1925px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 990px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

<div style=""position: absolute; margin-left: 2502px; margin-top: 1485px;"">
    <p class=""styleSans12000<enum PANGO_WEIGHT_NORMAL of type PangoWeight><enum PANGO_STYLE_NORMAL of type PangoStyle>""></p>
</div>

    </body>
</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VtovEG
code,"<div class=""card"">
  <div class=""card-header"">
    <span class=""h3"">
       Chat Page!!
      </span>
  </div>
  <div class=""card-block"">
    <div class=""panel-body"">
      <ngb-alert [dismissible]=""false"">
        <strong>Warning!</strong> You need to login to see contextual data in chat!!
      </ngb-alert>
        <ul class=""chat"">
          <li *ngFor=""let message of messages"" class=""right clearfix""><span class=""chat-img"" [class.pull-right]=""message.isSelf"" >
              <img src=""http://placehold.it/50/FA6F57/fff&amp;text={{message.user}}"" alt=""User Avatar"" class=""img-circle""/>
          </span>
              <div class=""chat-body clearfix"">
                  <div class=""header"">
                      <small class="" text-muted""><span class=""glyphicon glyphicon-time""></span>{{message.timestamp}}</small>
                      <strong [class.pull-right]=""message.isSelf"" class=""primary-font"">{{message.user}}</strong>
                  </div>
                  <p>
                      {{message.content}}
                      <a *ngIf=""message.isNavigation"" [routerLink]=""['/indoor-map', {fromLocationId: message.meta.fromLocationId, toLocationId: message.meta.toLocationId }]"" >Here</a>
                  </p>
              </div>
          </li>
        </ul>
    </div>
    <div class=""panel-footer"">
        <div class=""input-group"">
            <input  [(ngModel)]=""newMessage.content"" id=""btn-input"" type=""text"" class=""form-control input-sm"" placeholder=""Type your message here..."">
            <span class=""input-group-btn"">
                <button class=""btn btn-warning btn-sm"" id=""btn-chat"" (click)=""send(newMessage)"">
                    Send</button>
            </span>
        </div>
    </div>
  </div>
</div>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XZO6T7
code,"{% extends 'base.html' %}
{% load staticfiles %}
{% block content %}

  <div class=""container"">
    <div class=""row"">
      <div class=""col-lg-9"">
        <div class=""post-header"">
          <h2>{{page.page_title}}</h2>
        </div>
        {% if page.image %}
          <div class=""video-wrapper"">
            <img class=""img-responsive"" src=""/static/media/{{page.image}}"" alt=""{{page.title}}"">
          </div>
        {% endif %}
        <div class=""page-body"">
          {{page.body|safe}}
        </div>
        <div class=""page-share"">
          <a href=""https://www.facebook.com/profile.php?id=100012050839136"" target=""_blank""><span class=""share-box""><i class=""fa fa-facebook""></i></span></a>
          <a href=""https://www.instagram.com/theamateuravantgarde/"" target=""_blank""><span class=""share-box""><i class=""fa fa-instagram""></i></span></a>
          <a href=""https://twitter.com/Eleni_Zouliami"" target=""_blank""><span class=""share-box""><i class=""fa fa-twitter""></i></span></a>
        </div>
      </div>


      <div class=""col-lg-3 custom-sidebar"">
        {% if page.image %}
        <div class=""col-md-6"">
          <div class=""video-wrapper"">
            <img src=""/media/{{page.image}}"" alt=""{{page.title}}"">
          </div>
        </div>
        {% endif %}

        {% include ""sidebar.html"" %}

      </div>
    </div>
  </div>

{% endblock content %}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nEbb7c
code,"<!doctype html>
<html lang=""en"">

  <head>
    <meta charset=""utf-8"">

    <title>Dev to DevOps</title>

    <meta name=""description"" content=""A framework for easily creating beautiful presentations using HTML"">
    <meta name=""author"" content=""Hakim El Hattab"">

    <meta name=""apple-mobile-web-app-capable"" content=""yes"" />
    <meta name=""apple-mobile-web-app-status-bar-style"" content=""black-translucent"" />

    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"">

    <link rel=""stylesheet"" href=""css/reveal.min.css"">
    <link rel=""stylesheet"" href=""css/theme/sky.css"" id=""theme"">
    <link rel=""stylesheet"" href=""css/dev2devops.css"">

    <!-- For syntax highlighting -->
    <link rel=""stylesheet"" href=""lib/css/zenburn.css"">

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script>
      document.write( '<link rel=""stylesheet"" href=""css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css"" type=""text/css"" media=""print"">' );
    </script>

    <!--[if lt IE 9]>
    <script src=""lib/js/html5shiv.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class='screen-logo'>
      <div style='position: absolute; left: 20px; bottom: 20px; opacity: 0.5;'>
        <img src='img/constant-contact-logo.png' width='250'>
      </div>
    </div>
    <div class=""reveal"">
      <!-- Any section element inside of this container is displayed as a slide -->
      <div class=""slides"">
        <section>
          <h3>Intro to DevOps</h3>
          <p>Hi, my name is Dinshaw.</p>
        </section>

        <section>
          <h2>Computers</h2>
          <p>The cause of &ndash; and the solution to &ndash; all of life's problems.</p>
        </section>


        <section>
          <h2>A Brief History of Computing</h2>
        </section>

        <section>
          <img src=""img/colosus.jpg"">
          <h3>Mainframe</h3>
        </section>

        <section>
          <img src=""img/punch-cards.jpg"">
          <h3>Punch Cards</h3>
        </section>

        <section>
          <img src=""img/computer.jpg"">
          <h3>Personal Computers</h3>
        </section>

        <section class='the-wall-goes-up'>
          <h3><span>Users . . .</span> The Wall <span>. . . Operations</span></h3>
        </section>

        <section>
          <img src=""img/patrick.jpg"">
          <h3>Patrick Dubois</h3>
          <p>The 'Godfather' of DevOps</p>
        </section>

        <section>
          <h3>10+ Deploys Per Day:</h3>
          <h3>Dev and Ops Cooperation at Flickr</h3>
          <p>John Allspaw and Paul Hammond</p>
          <p>@ Velocity Conference 2009, San Jose</p>
        </section>

        <section>
          <img src=""img/spock-scotty.jpg"">
        </section>

        <section>
          <h1>#devops</h1>
        </section>

        <section>
          <img src='img/culture.jpg'>
          <h3>Culture</h3>
        </section>

        <section>
          <img src='img/computer.jpg'>
          <h3>Tools</h3>
        </section>

        <section>
          <h3>... habits [tools &amp; culture] that allow us to survive in <em><strong>The Danger Zone</strong></em>.</h3>
        </section>

        <section>
          <h3>TurboTax</h3>
          <p>165 new-feature experiments in the 3 month tax season</p>
          <p><a href=""http://network.intuit.com/2011/04/20/leadership-in-the-agile-age/"">Economist conference 2011</a></p>
        </section>

        <section>
          <h3>Puppet: State of DevOps Report</h3>
          <p>'DevOps' up 50% on Linkedin keyword searches</p>
        </section>

        <section>
          <h3>Puppet: What is a DevOps Engineer?</h3>
          <ul>
            <li class='fragment'>Coding/Scripting</li>
            <li class='fragment'>Strong grasp of automation tools</li>
            <li class='fragment'>Process re-engineering</li>
            <li class='fragment'>A focus on business outcomes</li>
            <li class='fragment'>Communication &amp; Collaboration</li>
          </ul>
        </section>

        <section>
          <h2>Questions?</h2>
        </section>

        <section>
          <h2>Puppet &amp; Chef</h2>
          <ul>
            <li>Configuration Management</li>
            <li>Portable</li>
            <li>Repeatable</li>
          </ul>
        </section>

        <section>
          <h2>Puppet</h2>
          <ul>
            <li>http://puppetlabs.com/</li>
            <li>Ruby-like</li>
            <li>Modules @ Puppet Forge</li>
          </ul>
          <pre>
            <code>
              package { ""gtypist"":
                ensure   => installed,
                provider => homebrew,
              }
              package { ""redis"":
                ensure   => installed,
                provider => homebrew,
              }
            </code>
          </pre>
        </section>

        <section>
          <h2>Chef</h2>
          <ul>
            <li>http://www.getchef.com/</li>
            <li>Opscode</li>
            <li>Ruby</li>
            <li>Cookbooks @ Opscode Commu",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xuZe5u
code,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN""
	""http://www.w3.org/TR/html4/strict.dtd"">
<html>
	<head>
		
		:head
		:fbthumb
	</head>
	<body>
	  <div id=""wrapper"">
		<header>
			<div class=""container"">
				<h1 class=""col four"">
					<a href=""@root_path/"" class=""logo"">@name</a>
				</h1>
			
				<div class=""col six nav"">
					<div class=navItems>
						:pages
					</div>
				</div>
				
			</div>
		</header>
	
		<div id=""content"" class=""container"" role=""main"">
			
			<div class=""description col four"">
				<h1>@title</h1>
				<p>@description</p>
			</div>
				
			<div class=""col seven"">
				:media
					
				@content
			</div>
		
		<hr class=""push"">		
		</div>
		
		
			
		:footer
		
	  </div>
	  
	  :analytics
	  
	</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yLnoYD
code,"<!--
    Copyright 2005-2008 Adobe Systems Incorporated
    Distributed under the MIT License (see accompanying file LICENSE_1_0_0.txt
    or a copy at http://stlab.adobe.com/licenses.html)

    Some files are held under additional license.
    Please see ""http://stlab.adobe.com/licenses.html"" for more information.
-->
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" lang=""en"" xml:lang=""en"">
<head>
    <TITLE>Adobe Software Technology Lab: auto_ptr&lt; X, Traits &gt; Class Template Reference</TITLE>
    <META HTTP-EQUIV=""content-type"" CONTENT=""text/html;charset=ISO-8859-1""/>
    <LINK TYPE=""text/css"" REL=""stylesheet"" HREF=""adobe_source.css""/>
    <LINK REL=""alternate"" TITLE=""stlab.adobe.com RSS"" HREF=""http://sourceforge.net/export/rss2_projnews.php?group_id=132417&amp;rss_fulltext=1"" TYPE=""application/rss+xml""/>
    <script src=""http://www.google-analytics.com/urchin.js"" type=""text/javascript""></script>
</head>
<body>
<div id='content'>
<table><tr>
<td colspan='5'>
    <div id='opensource_banner'>
    <table style='width: 100%; padding: 5px;'><tr>
    <td align='left'>
        <a href='index.html' style='border: none'><img src='stlab2007.jpg' alt=""stlab.adobe.com""/></a>
    </td>
    <td align='right'>
        <a href='http://www.adobe.com' style='border: none'><img src='adobe_hlogo.gif' alt=""Adobe Systems Incorporated""/></a>
    </td>
    </tr></table>
    </div>
</td></tr><tr>
<td valign=""top"">
    <div id='navtable' height='100%'>
    <div style='margin: 5px'>
        <h4>Documentation</h4>

        <a href=""group__asl__overview.html"">Overview</a><br/>
        <a href=""asl_readme.html"">Building ASL</a><br/>
        <a href=""asl_toc.html"">Documentation</a><br/>
        <a href=""http://stlab.adobe.com/wiki/index.php/Supplementary_ASL_Documentation"">Library Wiki Docs</a><br/>
        <a href=""asl_indices.html"">Indices</a><br/>
        <a href=""http://stlab.adobe.com/perforce/"">Browse Perforce</a><br/>

        <h4>More Info</h4>

        <a href=""asl_release_notes.html"">Release Notes</a><br/>
        <a href=""http://stlab.adobe.com/wiki/"">Wiki</a><br/>
        <a href=""asl_search.html"">Site Search</a><br/>
        <a href=""licenses.html"">License</a><br/>
        <a href=""success_stories.html"">Success Stories</a><br/>
        <a href=""asl_contributors.html"">Contributors</a><br/>

        <h4>Media</h4>

        <a href=""http://sourceforge.net/project/showfiles.php?group_id=132417&amp;package_id=145420"">Download</a><br/>
        <a href=""asl_download_perforce.html"">Perforce Depots</a><br/>

        <h4>Support</h4>

        <a href=""http://sourceforge.net/projects/adobe-source/"">ASL SourceForge Home</a><br/>
        <a href=""http://sourceforge.net/mail/?group_id=132417"">Mailing Lists</a><br/>
        <a href=""http://sourceforge.net/forum/?group_id=132417"">Discussion Forums</a><br/>
        <a href=""http://sourceforge.net/tracker/?atid=724218&amp;group_id=132417&amp;func=browse"">Report Bugs</a><br/>
        <a href=""http://sourceforge.net/tracker/?atid=724221&amp;group_id=132417&amp;func=browse"">Suggest Features</a><br/>
        <a href=""asl_contributing.html"">Contribute to ASL</a><br/>

        <h4>RSS</h4>

        <a href=""http://sourceforge.net/export/rss2_projnews.php?group_id=132417"">Short-text news</a><br/>
        <a href=""http://sourceforge.net/export/rss2_projnews.php?group_id=132417&amp;rss_fulltext=1"">Full-text news</a><br/>
        <a href=""http://sourceforge.net/export/rss2_projfiles.php?group_id=132417"">File releases</a><br/>

        <h4>Other Adobe Projects</h4>

        <a href=""http://sourceforge.net/adobe/"">Open @ Adobe</a><br/>
        <a href=""http://opensource.adobe.com/"">Adobe Open Source</a><br/>
        <a href=""http://labs.adobe.com/"">Adobe Labs</a><br/>
        <a href=""http://stlab.adobe.com/amg/"">Adobe Media Gallery</a><br/>
        <a href=""http://stlab.adobe.com/performance/"">C++ Benchmarks</a><br/>

        <h4>Other Resources</h4>

        <a href=""http://boost.org"">Boost</a><br/>
        <a href=""http://www.riaforge.com/"">RIAForge</a><br/>
        <a href=""http://www.sgi.com/tech/stl"">SGI STL</a><br/>
    </div>
    </div>
</td>
<td id='maintable' width=""100%"" valign=""top"">

<!-- End Header -->
<!-- Generated by Doxygen 1.7.2 -->
  <div class=""navpath"">
    <ul>
      <li><a class=""el"" href=""namespaceadobe.html"">adobe</a>      </li>
      <li><a class=""el"" href=""classadobe_1_1auto__ptr.html"">auto_ptr</a>      </li>
    </ul>
  </div>
<div class=""header"">
  <div class=""summary"">
<a href=""#nested-classes"">Classes</a> &#124;
<a href=""#pub-types"">Public Types</a> &#124;
<a href=""#pub-methods"">Public Member Functions</a>  </div>
  <div class=""headertitle"">
<h1>auto_ptr&lt; X, Traits &gt; Class Template Reference<br/>
<small>
[<a class=""el"" href=""group__memory.html"">Memory</a>]</small>
</h1>  </div>
</div>
<div class=""contents"">
<!-- doxytag: class=""adobe::auto_ptr"" --><!-- doxytag: inherits=""auto_resource&lt; X *, Traits &gt;"" -->
<p>The <code><a class=""el"" href=""classadobe_1_1auto__p",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YazjmO
code,"<?xml version=""1.0"" encoding=""utf-8""?>
<!-- This comment will force IE7 to go into quirks mode. -->
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Strict//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""></meta>
<link rel=""stylesheet"" type=""text/css"" href=""../../CSS/Contents.css""></link>
<script type=""text/javascript"" src=""../../JS/Common.js""></script>
<title>Zips.Zip&lt;T, U, V&gt; Method</title>
</head>
<body>
<div id=""Header"">
<div id=""ProjectTitle"">Documentation Project</div>
<div id=""PageTitle"">Zips.Zip&lt;T, U, V&gt; Method</div>
<div id=""HeaderShortcuts"">
<a href=""#SectionHeader0"" onclick=""javascript: SetSectionVisibility(0, true); SetExpandCollapseAllToCollapseAll();"">Overload List</a>&nbsp;
</div>
<div class=""DarkLine""></div>
<div class=""LightLine""></div>
<div id=""HeaderToolbar"">
<img id=""ExpandCollapseAllImg"" src=""../../GFX/SmallSquareExpanded.gif"" alt="""" style=""vertical-align: top;"" onclick=""javascript: ToggleAllSectionsVisibility();"" />
<span id=""ExpandCollapseAllSpan"" onclick=""javascript: ToggleAllSectionsVisibility();"">Collapse All</span>
</div>
</div>
<div id=""Contents"">
<a id=""ContentsAnchor"">&nbsp;</a>
Zip a paired stream with a third stream.
<div id=""ItemLocation"">
<b>Declaring type:</b> <a href=""../../Contents/2/287.html"">Zips</a><br />
<b>Namespace:</b> <a href=""../../Contents/1/212.html"">Sasa.Linq</a><br />
<b>Assembly:</b> <a href=""../../Contents/1/1.html"">Sasa</a>
</div>
<div id=""SectionHeader0"" class=""SectionHeader"">
<img id=""SectionExpanderImg0"" src=""../../GFX/BigSquareExpanded.gif"" alt=""Collapse/Expand"" onclick=""javascript: ToggleSectionVisibility(0);"" />
<span class=""SectionHeader"">
<span class=""ArrowCursor"" onclick=""javascript: ToggleSectionVisibility(0);"">
Overload List
</span>
</span>
</div>

<div id=""SectionContainerDiv0"" class=""SectionContainer"">
<table class=""MembersTable"">
<col width=""7%"" />
<col width=""38%"" />
<col width=""55%"" />
<tr>
<th>&nbsp;</th>
<th>Name</th>
<th>Description</th>
</tr>
<tr>
<td class=""IconColumn"">
<img src=""../../GFX/PublicMethod.gif"" alt=""Public Method"" />&nbsp;<img src=""../../GFX/Static.gif"" alt=""Static"" /></td>
<td><a href=""../../Contents/2/316.html"">Zips.Zip&lt;T, U, V&gt; (IEnumerable&lt;T&gt;, IEnumerable&lt;U&gt;, IEnumerable&lt;V&gt;)</a></td>
<td>Zip the elements of three streams.</td>
</tr>
<tr>
<td class=""IconColumn"">
<img src=""../../GFX/PublicMethod.gif"" alt=""Public Method"" />&nbsp;<img src=""../../GFX/Static.gif"" alt=""Static"" /></td>
<td><a href=""../../Contents/2/317.html"">Zips.Zip&lt;T, U, V&gt; (IEnumerable&lt;Pair&lt;T, U&gt;&gt;, IEnumerable&lt;V&gt;)</a></td>
<td>Zip a paired stream with a third stream.</td>
</tr>
</table>
<div class=""TopLink""><a href=""#ContentsAnchor"">Top</a></div></div>
</div>
<div id=""Footer"">
<span class=""Footer"">Generated by <a href=""http://immdocnet.codeplex.com/"" target=""_blank"">ImmDoc .NET</a></span>.
</div>

</body>

</html>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",01BNen
code,"<html>
  <head>
    <title>
      ABC 트레킹 3 : 시누와 :: 이한결 블로그
    </title>
    <style>
      /* https://github.com/markdowncss/modest/blob/master/css/modest.css */
      @media print {
        *,
        *:before,
        *:after {
          background: transparent !important;
          color: #000 !important;
          box-shadow: none !important;
          text-shadow: none !important;
        }

        a,
        a:visited {
          text-decoration: underline;
        }

        a[href]:after {
          content: ' (' attr(href) ')';
        }

        abbr[title]:after {
          content: ' (' attr(title) ')';
        }

        a[href^='#']:after,
        a[href^='javascript:']:after {
          content: '';
        }

        pre,
        blockquote {
          border: 1px solid #999;
          page-break-inside: avoid;
        }

        thead {
          display: table-header-group;
        }

        tr,
        img {
          page-break-inside: avoid;
        }

        img {
          max-width: 100% !important;
        }

        p,
        h2,
        h3 {
          orphans: 3;
          widows: 3;
        }

        h2,
        h3 {
          page-break-after: avoid;
        }
      }

      pre,
      code {
        font-family: Menlo, Monaco, 'Courier New', monospace;
      }

      pre {
        padding: 0.5rem;
        line-height: 1.25;
        overflow-x: scroll;
      }

      a,
      a:visited {
        color: #3498db;
      }

      a:hover,
      a:focus,
      a:active {
        color: #2980b9;
      }

      .modest-no-decoration {
        text-decoration: none;
      }

      html {
        font-size: 12px;
      }

      @media screen and (min-width: 32rem) and (max-width: 48rem) {
        html {
          font-size: 15px;
        }
      }

      @media screen and (min-width: 48rem) {
        html {
          font-size: 16px;
        }
      }

      body {
        line-height: 1.85;
      }

      p,
      .modest-p {
        font-size: 1rem;
        margin-bottom: 1.3rem;
      }

      h1,
      .modest-h1,
      h2,
      .modest-h2,
      h3,
      .modest-h3,
      h4,
      .modest-h4 {
        margin: 1.414rem 0 0.5rem;
        font-weight: inherit;
        line-height: 1.42;
      }

      h1,
      .modest-h1 {
        margin-top: 0;
        font-size: 3.998rem;
      }

      h2,
      .modest-h2 {
        font-size: 2.827rem;
      }

      h3,
      .modest-h3 {
        font-size: 1.999rem;
      }

      h4,
      .modest-h4 {
        font-size: 1.414rem;
      }

      h5,
      .modest-h5 {
        font-size: 1.121rem;
      }

      h6,
      .modest-h6 {
        font-size: 0.88rem;
      }

      small,
      .modest-small {
        font-size: 0.707em;
      }

      /* https://github.com/mrmrs/fluidity */

      img,
      canvas,
      iframe,
      video,
      svg,
      select,
      textarea {
        max-width: 100%;
      }

      @import url(
        http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,
        300italic,
        700
      );

      @import url(http://fonts.googleapis.com/css?family=Arimo:700, 700italic);

      html {
        font-size: 18px;
        max-width: 100%;
      }

      body {
        color: #444;
        font-family: 'Open Sans Condensed', sans-serif;
        font-weight: 300;
        margin: 0 auto;
        max-width: 48rem;
        line-height: 1.45;
        padding: 0.25rem;
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-family: Arimo, Helvetica, sans-serif;
      }

      h1,
      h2,
      h3 {
        border-bottom: 2px solid #fafafa;
        margin-bottom: 1.15rem;
        padding-bottom: 0.5rem;
        text-align: center;
      }

      blockquote {
        border-left: 8px solid #fafafa;
        padding: 1rem;
      }

      pre,
      code {
        background-color: #fafafa;
      }
    </style>
  </head>
  <body>
    <header>
      <h2>
        이한결 블로그
        <a href=""http://leehankyeol.me"">✍️</a>
        <a href=""https://github.com/leehankyeol"">💻</a>
        <a href=""https://www.instagram.com/leehankyeol.me"">📷</a>
        <a href=""https://www.facebook.com/lee.hankyeol"">🍻</a>
      </h2>
    </header>
    <article>
      <h1>ABC 트레킹 3 : 시누와</h1>
<ol>
<li>
<p>산행은 고되다. 그래도 할 만한 수준이다. 가장 무거운 짐을 든 비커스가 항상 앞장을 서고 그보다는 조금 더 가벼운 짐을 든 내가 중간에, 제일 가벼운 배낭을 멨지만 그만큼 제일 귀여운 K가 후방에 선다. 가장 힘들어 하는 K를 챙기는 것은 아무래도 나의 몫이다. 이제는 입모양만 봐도 얼마나 힘든지 알아차릴 수 있다. 앙 다물었지만 입꼬리가 수평을 유지한다면 힘이 날 만한 말을 던질 타이밍이다. 아직까진 정말 잘 가고 있다. 기특하다.</p>
</li>
<li>
<p>거머리에 물렸다. 복장이나 동선을 고려했을 때 노출된 순간은 찰나인데 그 틈을 놓치지 않은 셈이다. 침대에 엎드려 글을 쓰던 나를 보고 먼저 소스라치게 놀란 건 K, 피범벅(은 과장이 아니고 진짜였다.)이 된 발을 돌아보고 뒤늦게 놀란 것은 나였다. 아마도 내 오른발등을 뜯은 것으로 추정되는 거머리는 숙소 천장에서 대롱대롱거리고 있었다. 침착하게 발을 닦고 반창고를 붙인 뒤 천장의 녀석을 사로잡았다. 거머리에 물린 소감을 요약하면, 정말 쥐도새도 모르게 물리고 생각보다 피가 많이 난다는 것.</p>
</li>
<li>
<p>ABC까지 가는 트레킹 코스는, 비커스에 의하면, 하도 한국 사람들이 많이 와서 현지인들 사이에선 코리안 코스라고 불리기도 한단다. 큰 거점에는 “1. 한국라면 2. 김치찌개 3. 백숙 4. 김치”라고 쓰여진 간판을 여럿 볼 수 있으며 롯지가 아닌 쉼터 대부분에서도 한국인 등산객들이 혹할 만한 메뉴를 볼 수 있다. 하지만 코스에 존재하는 모든 롯지와 쉼터는 비단 관광객들만을 위한 것이 아니다. 그곳에서 살아가는 현지인들의 삶을 위해서도 필수적으로 있어야 하는 공간이다. 시내를 한 번",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BjU24r
code,"<html><body>
<h4>Windows 10 x64 (18362.449)</h4><br>
<h2>FEATURE_CHANGE_TIME</h2>
<font face=""arial"">   FEATURE_CHANGE_TIME_READ = 0n0<br>
   FEATURE_CHANGE_TIME_MODULE_RELOAD = 0n1<br>
   FEATURE_CHANGE_TIME_SESSION = 0n2<br>
   FEATURE_CHANGE_TIME_REBOOT = 0n3<br>
   FEATURE_CHANGE_TIME_USER_FLAG = 0n128<br>
</font></body></html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MyM8-t
code,"<div class=""four wide column center aligned votes"">
	<div class=""ui statistic"">
		<div class=""value"">
			{{ article.votes }}
		</div>
		<div class=""label"">
			Points
		</div>
	</div>
</div>	
<div class=""twelve wide column"">
	<a class=""ui large header"" href=""{{ article.link }}"">
		{{ article.title }}
	</a>
	<div class=""meta"">({{ article.domain() }})</div>
	<ul class=""ui big horizontal list votes"">
		<li class=""item"">
			<a href="""" (click)=""voteUp()"">
				<i class=""arrow up icon""></i>
				upvote
			</a>
		<li class=""item"">
			<a href="""" (click)=""voteDown()"">
				<i class=""arrow up icon""></i>
				downvote
			</a>
		</li>
	</ul>
</div>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MzOaZA
code,"<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>persistent-union-find: Not compatible</title>
    <link rel=""shortcut icon"" type=""image/png"" href=""../../../../../favicon.png"" />
    <link href=""../../../../../bootstrap.min.css"" rel=""stylesheet"">
    <link href=""../../../../../bootstrap-custom.css"" rel=""stylesheet"">
    <link href=""//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"" rel=""stylesheet"">
    <script src=""../../../../../moment.min.js""></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src=""https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js""></script>
      <script src=""https://oss.maxcdn.com/respond/1.4.2/respond.min.js""></script>
    <![endif]-->
  </head>
  <body>
    <div class=""container"">
      <div class=""navbar navbar-default"" role=""navigation"">
        <div class=""container-fluid"">
          <div class=""navbar-header"">
            <a class=""navbar-brand"" href=""../../../../..""><i class=""fa fa-lg fa-flag-checkered""></i> Coq bench</a>
          </div>
          <div id=""navbar"" class=""collapse navbar-collapse"">
            <ul class=""nav navbar-nav"">
              <li><a href=""../.."">clean / released</a></li>
              <li class=""active""><a href="""">8.11.1 / persistent-union-find - 8.10.0</a></li>
            </ul>
          </div>
        </div>
      </div>
      <div class=""article"">
        <div class=""row"">
          <div class=""col-md-12"">
            <a href=""../.."">« Up</a>
            <h1>
              persistent-union-find
              <small>
                8.10.0
                <span class=""label label-info"">Not compatible</span>
              </small>
            </h1>
            <p><em><script>document.write(moment(""2021-04-06 21:49:33 +0000"", ""YYYY-MM-DD HH:mm:ss Z"").fromNow());</script> (2021-04-06 21:49:33 UTC)</em><p>
            <h2>Context</h2>
            <pre># Packages matching: installed
# Name              # Installed # Synopsis
base-bigarray       base
base-threads        base
base-unix           base
conf-findutils      1           Virtual package relying on findutils
coq                 8.11.1      Formal proof management system
num                 1.4         The legacy Num library for arbitrary-precision integer and rational arithmetic
ocaml               4.11.1      The OCaml compiler (virtual package)
ocaml-base-compiler 4.11.1      Official release 4.11.1
ocaml-config        1           OCaml Switch Configuration
ocamlfind           1.9.1       A library manager for OCaml
# opam file:
opam-version: &quot;2.0&quot;
maintainer: &quot;Hugo.Herbelin@inria.fr&quot;
homepage: &quot;http://www.lri.fr/~filliatr/puf/&quot;
license: &quot;Unknown&quot;
build: [make &quot;-j%{jobs}%&quot;]
install: [make &quot;install&quot;]
remove: [&quot;rm&quot; &quot;-R&quot; &quot;%{lib}%/coq/user-contrib/PersistentUnionFind&quot;]
depends: [
  &quot;ocaml&quot;
  &quot;coq&quot; {&gt;= &quot;8.10&quot; &amp; &lt; &quot;8.11~&quot;}
]
tags: [
  &quot;keyword: program verification&quot;
  &quot;keyword: union-find&quot;
  &quot;keyword: data structures&quot;
  &quot;keyword: Tarjan&quot;
  &quot;category: Computer Science/Decision Procedures and Certified Algorithms/Correctness proofs of algorithms&quot;
]
authors: [
  &quot;Jean-Christophe Filliâtre&quot;
]
bug-reports: &quot;https://github.com/coq-contribs/persistent-union-find/issues&quot;
dev-repo: &quot;git+https://github.com/coq-contribs/persistent-union-find.git&quot;
synopsis: &quot;Persistent Union Find&quot;
description: &quot;&quot;&quot;
Correctness proof of the Ocaml implementation of a persistent union-find
data structure. See http://www.lri.fr/~filliatr/puf/ for more details.&quot;&quot;&quot;
flags: light-uninstall
url {
  src: &quot;https://github.com/coq-contribs/persistent-union-find/archive/v8.10.0.tar.gz&quot;
  checksum: &quot;md5=9d860c3649cb724e3f5e513d1b1ff60b&quot;
}
</pre>
            <h2>Lint</h2>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>true</code></dd>
              <dt>Return code</dt>
              <dd>0</dd>
            </dl>
            <h2>Dry install</h2>
            <p>Dry install with the current Coq version:</p>
            <dl class=""dl-horizontal"">
              <dt>Command</dt>
              <dd><code>opam install -y --show-action coq-persistent-union-find.8.10.0 coq.8.11.1</code></dd>
              <dt>Return code</dt>
              <dd>5120</dd>
              <dt>Output</dt>
              <dd><pre>[NOTE] Package coq is already installed (current version is 8.11.1).
The following dependencies couldn&#39;t be met:
  - coq-persistent-union-find -&gt; coq &lt; 8.11~ -&gt; ocaml &lt; 4.10
      base of this switch (use `--unlock-base&#39; to force)
No solution found, exiting
</pre></dd>
            </dl>
            <p>Dry install without Coq/switch base, to test if t",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P8HE1L
code,"<div class=""panel panel-primary"">
	<div ng-show=""error"" class=""alert alert-danger"">{{ error }}</div>
	<div class=""panel-heading"">
		<p class=""panel-title"">Neuer Gig</p>
	</div>
	<div class=""panel-body"">
		<form name=""addGig"" class=""form-horizontal"" ng-submit=""insertGig(gig)"">
			<fieldset>
				<div class=""form-group"">
					<label for=""date"" class=""control-label col-lg-2"">Datum:</label>
					<div class=""col-lg-4"">
						<input type=""date"" class=""form-control"" name=""date"" ng-model=""gig.date"" placeholder=""yyyy-MM-dd"" min=""2008-01-01"" max=""2100-12-31"" required />
					</div>
				</div>
				<div class=""form-group"">
					<label for=""title"" class=""control-label col-lg-2"">Titel:</label>
					<div class=""col-lg-4"">
						<input type=""text"" class=""form-control"" name=""title"" ng-model=""gig.title"" required />
					</div>
				</div>
				<div class=""form-group"">
					<label for=""loc"" class=""control-label col-lg-2"">Location:</label>
					<div class=""col-lg-4"">
						<input type=""text"" class=""form-control"" name=""loc"" ng-model=""gig.loc"" />
					</div>
				</div>
				<div class=""form-group"">
					<label for=""status"" class=""control-label col-lg-2"">Status:</label>
					<div class=""col-lg-4"">
						<select class=""form-control"" id=""status"" ng-model=""status"">
							<option>Angefragt</option>
							<option>Gebucht</option>
						</select>
					</div>
				</div>
				<div class=""form-group"">
					<label for=""contact"" class=""control-label col-lg-2"">Kontakt:</label>
					<div class=""col-lg-4"">
						<input type=""text"" class=""form-control"" name=""contact"" ng-model=""gig.contact"" />
					</div>
				</div>
				<div class=""form-group"">
					<label for=""notes"" class=""control-label col-lg-2"">Info:</label>
					<div class=""col-lg-4"">
						<input type=""text"" class=""form-control"" name=""notes"" ng-model=""gig.notes"" />
					</div>
				</div>
				<div class=""form-group"">
					<div class=""col-lg-10 col-lg-offset-2"">
						<button class=""btn btn-default"" ng-click=""back()"">Abbrechen</button>
						<button type=""submit"" class=""btn btn-primary"">Speichern</button>
					</div>
				</div>
			</fieldset>
		</form>
	</div>
</div>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8TB0_u
code,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Mon Nov 01 20:33:53 CET 2010 -->
<TITLE>
Uses of Class play.libs.WS (Play! API)
</TITLE>

<META NAME=""date"" CONTENT=""2010-11-01"">

<LINK REL =""stylesheet"" TYPE=""text/css"" HREF=""../../../stylesheet.css"" TITLE=""Style"">

<SCRIPT type=""text/javascript"">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title=""Uses of Class play.libs.WS (Play! API)"";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR=""white"" onload=""windowTitle();"">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME=""navbar_top""><!-- --></A>
<A HREF=""#skip-navbar_top"" title=""Skip navigation links""></A>
<TABLE BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"" SUMMARY="""">
<TR>
<TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
<A NAME=""navbar_top_firstrow""><!-- --></A>
<TABLE BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"" SUMMARY="""">
  <TR ALIGN=""center"" VALIGN=""top"">
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../overview-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../package-summary.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../play/libs/WS.html"" title=""class in play.libs""><FONT CLASS=""NavBarFont1""><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../package-tree.html""><FONT CLASS=""NavBarFont1""><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../deprecated-list.html""><FONT CLASS=""NavBarFont1""><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../index-all.html""><FONT CLASS=""NavBarFont1""><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../help-doc.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
  <A HREF=""../../../index.html?play/libs//class-useWS.html"" target=""_top""><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF=""WS.html"" target=""_top""><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type=""text/javascript"">
  <!--
  if(window==top) {
    document.writeln('<A HREF=""../../../allclasses-noframe.html""><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF=""../../../allclasses-noframe.html""><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME=""skip-navbar_top""></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<CENTER>
<H2>
<B>Uses of Class<br>play.libs.WS</B></H2>
</CENTER>
No usage of play.libs.WS
<P>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME=""navbar_bottom""><!-- --></A>
<A HREF=""#skip-navbar_bottom"" title=""Skip navigation links""></A>
<TABLE BORDER=""0"" WIDTH=""100%"" CELLPADDING=""1"" CELLSPACING=""0"" SUMMARY="""">
<TR>
<TD COLSPAN=2 BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">
<A NAME=""navbar_bottom_firstrow""><!-- --></A>
<TABLE BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""3"" SUMMARY="""">
  <TR ALIGN=""center"" VALIGN=""top"">
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../overview-summary.html""><FONT CLASS=""NavBarFont1""><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../package-summary.html""><FONT CLASS=""NavBarFont1""><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../play/libs/WS.html"" title=""class in play.libs""><FONT CLASS=""NavBarFont1""><B>Class</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#FFFFFF"" CLASS=""NavBarCell1Rev""> &nbsp;<FONT CLASS=""NavBarFont1Rev""><B>Use</B></FONT>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../package-tree.html""><FONT CLASS=""NavBarFont1""><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../deprecated-list.html""><FONT CLASS=""NavBarFont1""><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../index-all.html""><FONT CLASS=""NavBarFont1""><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR=""#EEEEFF"" CLASS=""NavBarCell1"">    <A HREF=""../../../help-doc.html""><FONT CLASS=""NavBarFont1""><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN=""right"" VALIGN=""top"" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR=""white"" CLASS=""NavBarCell2""><FONT SIZE=""-2"">
  <A HREF=""../../../index.html?play/libs//class-useWS.html"" target=""_top""><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF=""WS.html"" ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nmjgIW
code,"

<scri
<!DOCTYPE html>
<html lang=""fr"" itemscope="""" itemtype=""http://schema.org/Blog"">
    <head>  <script>
    if (window.parent !== window) {
      if (typeof btoa !== ""function"") {
        window.btoa = function (input) {
          var str = String(input);
          for (var block, charCode, idx = 0, map = chars, output = ''; str.charAt(idx | 0) || (map = '=', idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
            charCode = str.charCodeAt(idx += 3/4)
            block = block << 8 | charCode
          }
          return output
        }
      }
      var re = /^(?:https?:)?(?:\/\/)?([^\/\?]+)/i
      var res = re.exec(document.referrer)
      var domain = res[1]
      var forbidden = [""aGVsbG8ubGFuZA=="",""Y3Vpc2luZS5sYW5k"",""cmVjZXR0ZS5sYW5k"",""cmVjZXR0ZXMubGFuZA=="",]
      if (forbidden.indexOf(btoa(domain)) > -1) {
        document.location = document.location.origin + ""/system/noframed""
      }
    }
  </script>
<link rel=""stylesheet"" href=""//assets.over-blog-kiwi.com/b/blog/bundles/overblogblogblog/css/ob-style.css?v2.39.3.0"" />
<link rel=""stylesheet"" href=""//assets.over-blog-kiwi.com/b/blog/build/soundplayer.2940b52.css"" />
        <!-- Forked theme from id 60 - last modified : 2017-02-23T08:01:21+01:00 -->
        <!-- shortcut:[Meta] -->
        <!-- title -->
                

                    

        <!-- Title -->
        <title>333 - Le Site dont vous êtes le Héros</title>
        <!-- metas description, keyword, robots -->
        <!-- Metas -->
        <meta http-equiv=""content-type"" content=""text/html; charset=utf-8"" />
        <meta charset=""UTF-8"">
        <meta name=""viewport"" content=""width=device-width"">
        <meta name=""author"" content="""" />
        <meta property=""og:site_name"" content=""Le&#x20;Site&#x20;dont&#x20;vous&#x20;&#x00EA;tes&#x20;le&#x20;H&#x00E9;ros"" />
        <meta property=""og:title"" content=""333&#x20;-&#x20;Le&#x20;Site&#x20;dont&#x20;vous&#x20;&#x00EA;tes&#x20;le&#x20;H&#x00E9;ros"" />
        <meta name=""twitter:title"" content=""333&#x20;-&#x20;Le&#x20;Site&#x20;dont&#x20;vous&#x20;&#x00EA;tes&#x20;le&#x20;H&#x00E9;ros"" />
        <meta name=""description"" content=""Une&#x20;fois&#x20;la&#x20;flamme&#x20;de&#x20;la&#x20;bougie&#x20;souffl&#x00E9;e,&#x20;vous&#x20;essayez&#x20;de&#x20;vous&#x20;glisser&#x20;avec&#x20;d&#x00E9;lectation&#x20;dans&#x20;les&#x20;bras&#x20;de&#x20;Morph&#x00E9;e.&#x20;Mais&#x20;vous&#x20;n&#x27;&#x00EA;tes&#x20;pas&#x20;couch&#x00E9;&#x20;depuis&#x20;cinq&#x20;minutes&#x20;qu&#x27;un&#x20;grattement&#x20;furtif&#x20;vous&#x20;parvient&#x20;du&#x20;palier.&#x20;A&#x20;demi&#x20;plong&#x00E9;&#x20;dans&#x20;le&#x20;sommeil,&#x20;vous&#x20;ne&#x20;savez..."" />
        <meta property=""og:description"" content=""Une&#x20;fois&#x20;la&#x20;flamme&#x20;de&#x20;la&#x20;bougie&#x20;souffl&#x00E9;e,&#x20;vous&#x20;essayez&#x20;de&#x20;vous&#x20;glisser&#x20;avec&#x20;d&#x00E9;lectation&#x20;dans&#x20;les&#x20;bras&#x20;de&#x20;Morph&#x00E9;e.&#x20;Mais&#x20;vous&#x20;n&#x27;&#x00EA;tes&#x20;pas&#x20;couch&#x00E9;&#x20;depuis&#x20;cinq&#x20;minutes&#x20;qu&#x27;un&#x20;grattement&#x20;furtif&#x20;vous&#x20;parvient&#x20;du&#x20;palier.&#x20;A&#x20;demi&#x20;plong&#x00E9;&#x20;dans&#x20;le&#x20;sommeil,&#x20;vous&#x20;ne&#x20;savez..."" />
        <meta name=""twitter:description"" content=""Une&#x20;fois&#x20;la&#x20;flamme&#x20;de&#x20;la&#x20;bougie&#x20;souffl&#x00E9;e,&#x20;vous&#x20;essayez&#x20;de&#x20;vous&#x20;glisser&#x20;avec&#x20;d&#x00E9;lectation&#x20;dans&#x20;les&#x20;bras&#x20;de&#x20;Morph&#x00E9;e.&#x20;Mais&#x20;vous&#x20;n&#x27;&#x00EA;tes&#x20;pas&#x20;couch&#x00E9;&#x20;depuis&#x20;cinq&#x20;minutes&#x20;qu&#x27;un&#x20;grattement&#x20;furtif&#x20;vous&#x20;parvient&#x20;du..."" />
        <meta property=""og:locale"" content=""fr_FR"" />

        <meta property=""og:url""  content=""http://lesitedontvousetesleheros.overblog.com/333-70"" />
        <meta name=""twitter:url"" content=""http://lesitedontvousetesleheros.overblog.com/333-70"" />
        <meta property=""og:type"" content=""article"" />
        <meta name=""twitter:card"" content=""summary"" />
        <meta name=""twitter:site"" content=""@overblog"" />
        <meta name=""twitter:creator"" content=""@"" />
        <meta property=""fb:app_id"" content=""284865384904712"" />

    
                                    

        <!-- Robots -->
        <meta name=""robots"" content=""index,follow"" />

        <!-- RSS -->
        <link rel=""alternate"" type=""application/rss+xml"" title=""RSS"" href=""/rss"" />

                
<!-- Analytics -->

        <!-- shortcut:[Options] -->
        
        
        
        

        
        
        
        
        
        
        
        
        
        

        
        

        
		
		
		
		
		
		
		
		
		
        
		
        
		
        
		
        
		
        
		

        
        

        
        
        </script>ll"" group=""shares"" />

        

        <!-- shortcut:[Includes] -->
        <!-- favicon -->
        <!-- Metas -->
        <link rel=""shortcut icon"" type=""image/x-icon"" href=""http://fdata.over-blog.net/99/00/00/01/img/favicon.ico"" />",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",08NG6R
code,"<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">
<!-- NewPage -->
<html lang=""en"">
<head>
<!-- Generated by javadoc -->
<title>org.robolectric.util.reflector Class Hierarchy</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../stylesheet.css"" title=""Style"">
<link rel=""stylesheet"" type=""text/css"" href=""../../../../jquery/jquery-ui.css"" title=""Style"">
<script type=""text/javascript"" src=""../../../../script.js""></script>
<script type=""text/javascript"" src=""../../../../jquery/jszip/dist/jszip.min.js""></script>
<script type=""text/javascript"" src=""../../../../jquery/jszip-utils/dist/jszip-utils.min.js""></script>
<!--[if IE]>
<script type=""text/javascript"" src=""../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js""></script>
<![endif]-->
<script type=""text/javascript"" src=""../../../../jquery/jquery-1.10.2.js""></script>
<script type=""text/javascript"" src=""../../../../jquery/jquery-ui.js""></script>
</head>
<body>
<script type=""text/javascript""><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title=""org.robolectric.util.reflector Class Hierarchy"";
        }
    }
    catch(err) {
    }
//-->
var pathtoroot = ""../../../../"";loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class=""fixedNav"">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class=""topNav""><a name=""navbar.top"">
<!--   -->
</a>
<div class=""skipNav""><a href=""#skip.navbar.top"" title=""Skip navigation links"">Skip navigation links</a></div>
<a name=""navbar.top.firstrow"">
<!--   -->
</a>
<ul class=""navList"" title=""Navigation"">
<li><a href=""../../../../overview-summary.html"">Overview</a></li>
<li><a href=""package-summary.html"">Package</a></li>
<li>Class</li>
<li class=""navBarCell1Rev"">Tree</li>
<li><a href=""../../../../deprecated-list.html"">Deprecated</a></li>
<li><a href=""../../../../index-all.html"">Index</a></li>
<li><a href=""../../../../help-doc.html"">Help</a></li>
</ul>
<div class=""aboutLanguage""><ul class=""navList"" style=""font-size: 1.5em;""><li>Robolectric 4.4 | <a href=""/"" target=""_top""><img src=""http://robolectric.org/images/logo-with-bubbles-down.png"" style=""max-height: 18pt; vertical-align: sub;""/></a></li></ul></div>
</div>
<div class=""subNav"">
<ul class=""navList"">
<li><a href=""../../../../org/robolectric/util/inject/package-tree.html"">Prev</a></li>
<li>Next</li>
</ul>
<ul class=""navList"">
<li><a href=""../../../../index.html?org/robolectric/util/reflector/package-tree.html"" target=""_top"">Frames</a></li>
<li><a href=""package-tree.html"" target=""_top"">No&nbsp;Frames</a></li>
</ul>
<ul class=""navList"" id=""allclasses_navbar_top"">
<li><a href=""../../../../allclasses-noframe.html"">All&nbsp;Classes</a></li>
</ul>
<ul class=""navListSearch"">
<li><span>SEARCH:&nbsp;</span>
<input type=""text"" id=""search"" value="" "" disabled=""disabled"">
<input type=""reset"" id=""reset"" value="" "" disabled=""disabled"">
</li>
</ul>
<div>
<script type=""text/javascript""><!--
  allClassesLink = document.getElementById(""allclasses_navbar_top"");
  if(window==top) {
    allClassesLink.style.display = ""block"";
  }
  else {
    allClassesLink.style.display = ""none"";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<a name=""skip.navbar.top"">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class=""navPadding"">&nbsp;</div>
<script type=""text/javascript""><!--
$('.navPadding').css('padding-top', $('.fixedNav').css(""height""));
//-->
</script>
<div class=""header"">
<h1 class=""title"">Hierarchy For Package org.robolectric.util.reflector</h1>
<span class=""packageHierarchyLabel"">Package Hierarchies:</span>
<ul class=""horizontal"">
<li><a href=""../../../../overview-tree.html"">All Packages</a></li>
</ul>
</div>
<div class=""contentContainer"">
<h2 title=""Class Hierarchy"">Class Hierarchy</h2>
<ul>
<li class=""circle"">java.lang.<a href=""https://developer.android.com/reference/java/lang/Object.html?is-external=true"" title=""class or interface in java.lang""><span class=""typeNameLink"">Object</span></a>
<ul>
<li class=""circle"">org.robolectric.util.reflector.<a href=""../../../../org/robolectric/util/reflector/Reflector.html"" title=""class in org.robolectric.util.reflector""><span class=""typeNameLink"">Reflector</span></a></li>
<li class=""circle"">org.robolectric.util.reflector.<a href=""../../../../org/robolectric/util/reflector/UnsafeAccess.html"" title=""class in org.robolectric.util.reflector""><span class=""typeNameLink"">UnsafeAccess</span></a></li>
</ul>
</li>
</ul>
<h2 title=""Annotation Type Hierarchy"">Annotation Type Hierarchy</h2>
<ul>
<li class=""circle"">org.robolectric.util.reflector.<a href=""../../../../org/robolectric/util/reflector/Accessor.html"" title=""annotation in org.robolectric.util.reflector""><span class=""typeNameLink"">Accessor</span></a> (implements java.lang.annotation.<a href=""https://developer.android.com/reference/java/lang/annotation/Annotation.html?is-external=true"" title=""cla",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QLl3_n
code,"<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <meta content=""text/html; charset=UTF-8"" http-equiv=""Content-Type"">
    <meta http-equiv=X-UA-Compatible content=""IE=edge,chrome=1"">
    <meta name=viewport content=""width=device-width, initial-scale=1"">
    <title>Hisabo &#8211; Borker dot co</title>
    <meta name=""description"" content=""A note about my involvement with Hisabo"">
    <meta name=""keywords"" content=""Hisabo"">
    <link rel=""canonical"" href=""http://borker.co/project-hisabo/"">
        <!-- Twitter Cards -->
    <meta name=""twitter:title"" content=""Hisabo"">
    <meta name=""twitter:description"" content=""A note about my involvement with Hisabo"">
    <meta name=""twitter:site"" content=""@borker"">
    <meta name=""twitter:creator"" content=""@borker"">
    <meta name=""twitter:card"" content=""summary"">
    <meta name=""twitter:image"" content=""http://borker.co/assets/img/logo-new.png"">
    <!-- Open Graph -->
    <meta property=""og:locale"" content=""en_US"">
    <meta property=""og:type"" content=""article"">
    <meta property=""og:title"" content=""Hisabo"">
    <meta property=""og:description"" content=""A note about my involvement with Hisabo"">
    <meta property=""og:url"" content=""http://borker.co/project-hisabo/"">
    <meta property=""og:site_name"" content=""Borker dot co"">
    <meta property=""og:image"" content=""http://borker.co/assets/img/logo-new.png"">

    
    
    <!-- Handheld -->
    <meta name=""HandheldFriendly"" content=""True"">
    <meta name=""MobileOptimized"" content=""320"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <!-- Favicons -->
    <link rel=""apple-touch-icon-precomposed"" sizes=""57x57"" href=""http://borker.co/assets/img/favicon/apple-touch-icon-57x57.png"">
    <link rel=""apple-touch-icon-precomposed"" sizes=""114x114"" href=""http://borker.co/assets/img/favicon/apple-touch-icon-114x114.png"">
    <link rel=""apple-touch-icon-precomposed"" sizes=""72x72"" href=""http://borker.co/assets/img/favicon/apple-touch-icon-72x72.png"">
    <link rel=""apple-touch-icon-precomposed"" sizes=""144x144"" href=""http://borker.co/assets/img/favicon/apple-touch-icon-144x144.png"">
    <link rel=""icon"" type=""image/png"" href=""http://borker.co/assets/img/favicon/favicon.png"">
    <link rel=""shortcut icon"" href=""http://borker.co/assets/img/favicon/favicon.ico"">
    <!-- Feed -->
    <link rel=""alternate"" type=""application/rss+xml"" title=""Borker dot co"" href=""http://borker.co/feed.xml"" />
    <!-- CSS -->
    <link rel=""stylesheet"" type=""text/css"" href=""http://borker.co/assets/css/main.css"">
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-86377416-1', 'auto');
  ga('send', 'pageview');

</script>
</head>


<body>
        <nav class=""nav"">
        <ul class=""list"">
            
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/"" >Home</a></li>
				
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/projects"" >Projects</a></li>
				
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/about"" >About</a></li>
				
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/writing"" >Writing</a></li>
				
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/thoughts"" >Thoughts</a></li>
				
				    
				    <li class=""item""><a class=""link"" href=""http://borker.co/design"" >Design</a></li>
				
        </ul>
    </nav>

    <div class=""wrapper"">
        <div class=""title"">
            <h1>Hisabo</h1>
            <h4>23 Jul 2015</h4>
        </div>
        <div class=""article"">
            <h2 id=""hisabo"">Hisabo</h2>

<p>I founded and ran <a href=""http://www.hisabo.com"">Hisabo Tea Company</a> for a few months as a side project.</p>

<p>Through Hisabo, we sold hard to find or unique teas to a list of email subscribers (similar to Garagiste for wines).</p>

<p>We sourced each tea through a network of connections in Japan, Taiwan, China and Nepal.</p>

<p>I stopped working on Hisabo to focus exclusively on Shortlist.</p>

        </div>
    </div>
        <div class=""footer"">
        Borker dot co © 2019 <a href=""http://borker.co/feed.xml"" target=""_blank""><i class=""fa fa-fw fa-feed""></i></a>
    </div>

    <script src=""http://borker.co/assets/js/jquery-1.12.2.min.js""></script>
<script src=""http://borker.co/assets/js/jquery.goup.min.js""></script>
<script type=""text/javascript"">
$(document).ready(function(){
    $.goup({
        trigger: 500,
        bottomOffset: 10,
        locationOffset: 20,
        containerRadius: 0,
        containerColor: '#fff',
        arrowColor: '#000',
        goupSpeed: 'normal'
    });
});
</script>

<!-- Asynchronous Google Analytics snippet -->
<script>
  var _gaq = _gaq || [];
  var pluginUrl =
 '//www.google-analytics.com/plugins/ga/inpage_linkid.js';
  _gaq.push(['_require', 'inpage_linkid', p",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ACmfEf
code,"{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE TypeFamilies #-}
module Data.Modable.Tests where
import Data.Maybe (isNothing)
import Data.Modable
import Test.Framework
import Test.Framework.Providers.QuickCheck2
import Test.QuickCheck

testModable :: forall a b.
    ( Eq a, Show a, Arbitrary a
    , Eq (Relative a), Show (Relative a), Arbitrary (Relative a)
    , Relative a ~ Maybe b
    , Modable a
    ) => a -> Test
testModable _ = testGroup ""maybe math""
    [ testProperty ""plus→minus"" (\(a::a) (b::Relative a) ->
        minus (plus a b) b == a)
    , testProperty ""minus→plus"" (\(a::a) (b::Relative a) ->
        plus (minus a b) b == a)
    , testProperty ""clobber"" (\(a::a) (b::Relative a) ->
        if isNothing b
            then clobber a b == a
            else clobber a b `like` b)
    , testProperty ""absify relify"" (\(a::a) -> absify (relify a) == Just a)
    , testProperty ""like"" (\(a::a) -> a `like` relify a)
    ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qm2kOy
code,"module View.Project
    ( editProjectForm
    , projectContactForm
    , inviteForm
    , projectBlogForm
    , projectConfirmSharesForm
    , renderBlogPost
    , renderProject
    , viewForm
    ) where


import Import

import           Data.Filter
import           Data.Order
import           Model.Currency
import           Model.Markdown
import           Model.Project
import           Model.Shares
import           Model.Role
import           Widgets.Markdown

import qualified Data.Text       as T
import           Data.Time.Clock
import           Yesod.Markdown

renderProject :: Maybe ProjectId -> Project -> [Int64] -> Maybe (Entity Pledge) -> WidgetT App IO ()
renderProject maybe_project_id project pledges pledge = do
    let share_value = projectShareValue project
        users = fromIntegral $ length pledges
        shares = sum pledges
        project_value = share_value $* fromIntegral shares
        description = markdownWidgetWith (fixLinks $ projectHandle project) $ projectDescription project

        maybe_shares = pledgeShares . entityVal <$> pledge

    now <- liftIO getCurrentTime

    amounts <- case projectLastPayday project of
        Nothing -> return Nothing
        Just last_payday -> handlerToWidget $ runDB $ do
            -- This assumes there were transactions associated with the last payday
            [Value (Just last) :: Value (Maybe Rational)] <-
                select $
                from $ \ transaction -> do
                where_ $
                    transaction ^. TransactionPayday ==. val (Just last_payday) &&.
                    transaction ^. TransactionCredit ==. val (Just $ projectAccount project)
                return $ sum_ $ transaction ^. TransactionAmount

            [Value (Just year) :: Value (Maybe Rational)] <-
                select $
                from $ \ (transaction `InnerJoin` payday) -> do
                where_ $
                    payday ^. PaydayDate >. val (addUTCTime (-365 * 24 * 60 * 60) now) &&.
                    transaction ^. TransactionCredit ==. val (Just $ projectAccount project)
                on_ $ transaction ^. TransactionPayday ==. just (payday ^. PaydayId)
                return $ sum_ $ transaction ^. TransactionAmount

            [Value (Just total) :: Value (Maybe Rational)] <-
                select $
                from $ \ transaction -> do
                where_ $ transaction ^. TransactionCredit ==. val (Just $ projectAccount project)
                return $ sum_ $ transaction ^. TransactionAmount

            return $ Just (Milray $ round last, Milray $ round year, Milray $ round total)


    ((_, update_shares), _) <- handlerToWidget $ generateFormGet $ maybe previewPledgeForm pledgeForm maybe_project_id

    $(widgetFile ""project"")

renderBlogPost :: Text -> ProjectBlog -> WidgetT App IO ()
renderBlogPost project_handle blog_post = do
    let (Markdown top_content) = projectBlogTopContent blog_post
        (Markdown bottom_content) = maybe (Markdown """") (""***\n"" <>) $ projectBlogBottomContent blog_post
        title = projectBlogTitle blog_post
        content = markdownWidgetWith (fixLinks project_handle) $ Markdown $ T.snoc top_content '\n' <> bottom_content

    $(widgetFile ""blog_post"")

editProjectForm :: Maybe (Project, [Text]) -> Form UpdateProject
editProjectForm project =
    renderBootstrap3 $ UpdateProject
        <$> areq' textField ""Project Name"" (projectName . fst <$> project)
        <*> areq' snowdriftMarkdownField ""Description"" (projectDescription . fst <$> project)
        <*> (maybe [] (map T.strip . T.splitOn "","") <$> aopt' textField ""Tags"" (Just . T.intercalate "", "" . snd <$> project))
        <*> aopt' textField ""Github Repository"" (projectGithubRepo . fst <$> project)

projectBlogForm :: Maybe (Text, Text, Markdown) -> Form (UTCTime -> UserId -> ProjectId -> DiscussionId -> ProjectBlog)
projectBlogForm defaults = renderBootstrap3 $
    let getTitle (title, _, _) = title
        getHandle (_, handle, _) = handle
        getContent (_, _, content) = content
     in mkBlog
        <$> areq' textField ""Post Title"" (getTitle <$> defaults)
        <*> areq' textField ""Post Handle"" (getHandle <$> defaults)
        <*> areq' snowdriftMarkdownField ""Content"" (getContent <$> defaults)
  where
    mkBlog :: Text -> Text -> Markdown -> (UTCTime -> UserId -> ProjectId -> DiscussionId -> ProjectBlog)
    mkBlog title handle (Markdown content) now user_id project_id discussion_id =
        let (top_content, bottom_content) = break (== ""***"") $ T.lines content
         in ProjectBlog now title handle user_id project_id
                discussion_id (Markdown $ T.unlines top_content)
                (if null bottom_content then Nothing else Just $ Markdown $ T.unlines bottom_content)

projectContactForm :: Form Markdown
projectContactForm = renderBootstrap3 $ areq' snowdriftMarkdownField """" Nothing

inviteForm :: Form (Text, Role)
inviteForm = renderBootstrap3 $ (,)
    <$> areq' textField ""About this invitation:"" Nothing
    <*> areq roleField ""Type of Invite:"" (Just TeamMember)

viewForm :: Form (Filterable -> Bool, Ord",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",g2mmDv
code,"-- |
-- Module      :  Setup
-- Copyright   :  (C) 2007-2008  Bryan O'Sullivan
--                (C) 2012-2014  Jens Petersen
--
-- Maintainer  :  Jens Petersen <petersen@fedoraproject.org>
-- Stability   :  alpha
-- Portability :  portable
--
-- Explanation: Command line option processing for building RPM
-- packages.

-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.

module Setup (
      RpmFlags(..)
    , parseArgs
    , quiet
    ) where

import Control.Monad (unless, when)
import Data.Char     (toLower)
import Data.Maybe    (listToMaybe, fromMaybe)
import Data.Version  (showVersion)

import Distribution.Compiler           (CompilerId)
import Distribution.Text               (simpleParse)
import Distribution.PackageDescription (FlagName (..))
import Distribution.ReadE              (readEOrFail)
import Distribution.Verbosity          (Verbosity, flagToVerbosity, normal,
                                        silent)

import System.Console.GetOpt (ArgDescr (..), ArgOrder (..), OptDescr (..),
                              getOpt', usageInfo)
import System.Environment    (getProgName)
import System.Exit           (ExitCode (..), exitSuccess, exitWith)
import System.IO             (Handle, hPutStrLn, stderr, stdout)

import Distro                (Distro(..), readDistroName)
import Paths_cabal_rpm       (version)
import SysCmd                ((+-+))

data RpmFlags = RpmFlags
    { rpmConfigurationsFlags :: [(FlagName, Bool)]
    , rpmForce               :: Bool
    , rpmHelp                :: Bool
    , rpmBinary              :: Bool
    , rpmStrict              :: Bool
    , rpmRelease             :: Maybe String
    , rpmCompilerId          :: Maybe CompilerId
    , rpmDistribution        :: Maybe Distro
    , rpmVerbosity           :: Verbosity
    , rpmVersion             :: Bool
    }
    deriving (Eq, Show)

emptyRpmFlags :: RpmFlags
emptyRpmFlags = RpmFlags
    { rpmConfigurationsFlags = []
    , rpmForce = False
    , rpmHelp = False
    , rpmBinary = False
    , rpmStrict = False
    , rpmRelease = Nothing
    , rpmCompilerId = Nothing
    , rpmDistribution = Nothing
    , rpmVerbosity = normal
    , rpmVersion = False
    }

quiet :: RpmFlags
quiet = emptyRpmFlags {rpmVerbosity = silent}

options :: [OptDescr (RpmFlags -> RpmFlags)]
options =
    [
      Option ""h?"" [""help""] (NoArg (\x -> x { rpmHelp = True }))
             ""Show this help text"",
      Option ""b"" [""binary""] (NoArg (\x -> x { rpmBinary = True }))
             ""Force Haskell package name to be base package name"",
      Option ""f"" [""flags""] (ReqArg (\flags x -> x { rpmConfigurationsFlags = rpmConfigurationsFlags x ++ flagList flags }) ""FLAGS"")
             ""Set given flags in Cabal conditionals"",
      Option """" [""force""] (NoArg (\x -> x { rpmForce = True }))
             ""Overwrite existing spec file."",
      Option """" [""strict""] (NoArg (\x -> x { rpmStrict = True }))
             ""Fail rather than produce an incomplete spec file."",
      Option """" [""release""] (ReqArg (\rel x -> x { rpmRelease = Just rel }) ""RELEASE"")
             ""Override the default package release"",
      Option """" [""compiler""] (ReqArg (\cid x -> x { rpmCompilerId = Just (parseCompilerId cid) }) ""COMPILER-ID"")
             ""Finalize Cabal files targetting the given compiler version"",
      Option """" [""distro""] (ReqArg (\did x -> x { rpmDistribution = Just (readDistroName did) }) ""DISTRO"")
             ""Choose the distribution generated spec files will target"",
      Option ""v"" [""verbose""] (ReqArg (\verb x -> x { rpmVerbosity = readEOrFail flagToVerbosity verb }) ""n"")
             ""Change build verbosity"",
      Option ""V"" [""version""] (NoArg (\x -> x { rpmVersion = True }))
             ""Show version number""
    ]

-- Lifted from Distribution.Simple.Setup, since it's not exported.
flagList :: String -> [(FlagName, Bool)]
flagList = map tagWithValue . words
  where tagWithValue ('-':name) = (FlagName (map toLower name), False)
        tagWithValue name       = (FlagName (map toLower name), True)

printHelp :: Handle -> IO ()
printHelp h = do
  progName <- getProgName
  let info = ""Usage: "" ++ progName ++ "" [OPTION]... COMMAND [PATH|PKG|PKG-VERSION]\n""
             ++ ""\n""
             ++ ""PATH can be a .spec file, .cabal file, or pkg dir.\n""
             ++ ""\n""
             ++ ""Commands:\n""
             ++ ""  spec\t\t- generate a spec file\n""
             ++ ""  srpm\t\t- generate a src rpm file\n""
             ++ ""  prep\t\t- unpack source\n""
             ++ ""  local\t\t- build rpm package locally\n""
             ++ ""  builddep\t- install dependencies\n""
             ++ ""  install\t- install packages recursively\n""
             ++ ""  depends\t- list Cabal depends\n""
             ++ ""  requires\t- list package buildrequires\n""
             ++ ""  missingdeps\t- list missing buildrequires\n""
             ++ ""  diff\t\t- diff current spec file\n""
             ++ ""  update\t- update spec ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ARcwbR
code,"{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}

module SchoolOfHaskell.Scheduler.API where

import           Control.Applicative ((<$>), (<*>))
import           Control.Lens (makeLenses)
import           Data.Aeson (ToJSON(..), FromJSON(..))
import           Data.Aeson.TH (deriveJSON, defaultOptions, fieldLabelModifier)
import           Data.Data (Data)
import           Data.Text (Text)
import           Data.Typeable (Typeable)
import           Data.UUID.Types (UUID)
import qualified Data.UUID.Types as UUID

newtype ContainerSpec =
  ContainerSpec {_csImageName :: Text}
  deriving (Eq, Show, Data, Typeable)

newtype ContainerReceipt =
  ContainerReceipt {_crID :: UUID}
  deriving (Eq, Data, Typeable)

instance Show ContainerReceipt where
  show = show . _crID

newtype ContainerId =
  ContainerId {_ciID :: Text}
  deriving (Eq, Show, Ord, Data, Typeable)

data ContainerDetail =
  ContainerDetail {_cdID :: Text
                  ,_cdAddress :: Maybe (Text, PortMappings)
                  ,_cdStatus :: Maybe Text}
  deriving (Eq, Show, Data, Typeable)

instance ToJSON UUID where
  toJSON = toJSON . UUID.toString

instance FromJSON UUID where
  parseJSON val = do
    str <- parseJSON val
    case UUID.fromString str of
      Nothing -> fail ""Failed to parse UUID from JSON""
      Just x -> return x

newtype PortMappings = PortMappings [(Int,Int)]
  deriving (Eq, Show, Data, Typeable, ToJSON, FromJSON)

------------------------------------------------------------------------------
-- Constants

-- | Receipt used for local development.
devReceipt :: ContainerReceipt
devReceipt = ContainerReceipt (UUID.fromWords 0 0 0 0)

------------------------------------------------------------------------------
-- Lenses and aeson instances

$(let opts n = defaultOptions { fieldLabelModifier = drop n } in
  concat <$> mapM (\(n, x) -> (++) <$> makeLenses x <*> deriveJSON (opts n) x)
  [ (3, ''ContainerSpec)
  , (3, ''ContainerReceipt)
  , (3, ''ContainerId)
  , (3, ''ContainerDetail)
  ])
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",U0hXyK
code,"module Main where

import MenuIO

main :: IO ()
main = menu []
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dL3jjl
code,"-- | Multicore imperative code.
module Futhark.CodeGen.ImpCode.Multicore
  ( Program,
    Function,
    FunctionT (Function),
    Code,
    Multicore (..),
    Scheduling (..),
    SchedulerInfo (..),
    AtomicOp (..),
    ParallelTask (..),
    module Futhark.CodeGen.ImpCode,
  )
where

import Futhark.CodeGen.ImpCode hiding (Code, Function)
import qualified Futhark.CodeGen.ImpCode as Imp
import Futhark.Util.Pretty

-- | An imperative program.
type Program = Imp.Functions Multicore

-- | An imperative function.
type Function = Imp.Function Multicore

-- | A piece of imperative code, with multicore operations inside.
type Code = Imp.Code Multicore

-- | A multicore operation.
data Multicore
  = Segop String [Param] ParallelTask (Maybe ParallelTask) [Param] SchedulerInfo
  | ParLoop String VName Code Code Code [Param] VName
  | Atomic AtomicOp

-- | Atomic operations return the value stored before the update.
-- This old value is stored in the first 'VName'.  The second 'VName'
-- is the memory block to update.  The 'Exp' is the new value.
data AtomicOp
  = AtomicAdd IntType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicSub IntType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicAnd IntType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicOr IntType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicXor IntType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicXchg PrimType VName VName (Count Elements (Imp.TExp Int32)) Exp
  | AtomicCmpXchg PrimType VName VName (Count Elements (Imp.TExp Int32)) VName Exp
  deriving (Show)

instance FreeIn AtomicOp where
  freeIn' (AtomicAdd _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x
  freeIn' (AtomicSub _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x
  freeIn' (AtomicAnd _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x
  freeIn' (AtomicOr _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x
  freeIn' (AtomicXor _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x
  freeIn' (AtomicCmpXchg _ _ arr i retval x) = freeIn' arr <> freeIn' i <> freeIn' x <> freeIn' retval
  freeIn' (AtomicXchg _ _ arr i x) = freeIn' arr <> freeIn' i <> freeIn' x

data SchedulerInfo = SchedulerInfo
  { nsubtasks :: VName, -- The variable that describes how many subtasks the scheduler created
    iterations :: Imp.Exp, -- The number of total iterations for a task
    scheduling :: Scheduling -- The type scheduling for the task
  }

data ParallelTask = ParallelTask
  { task_code :: Code,
    flatTid :: VName -- The variable for the thread id execution the code
  }

-- | Whether the Scheduler should schedule the tasks as Dynamic
-- or it is restainted to Static
data Scheduling
  = Dynamic
  | Static

instance Pretty Scheduling where
  ppr Dynamic = text ""Dynamic""
  ppr Static = text ""Static""

-- TODO fix all of this!
instance Pretty SchedulerInfo where
  ppr (SchedulerInfo nsubtask i sched) =
    text ""SchedulingInfo""
      <+> text ""number of subtasks""
      <+> ppr nsubtask
      <+> text ""scheduling""
      <+> ppr sched
      <+> text ""iter""
      <+> ppr i

instance Pretty ParallelTask where
  ppr (ParallelTask code _) =
    ppr code

instance Pretty Multicore where
  ppr (Segop s free _par_code seq_code retval scheduler) =
    text ""parfor""
      <+> ppr scheduler
      <+> ppr free
      <+> text s
      <+> text ""seq_code""
      <+> nestedBlock ""{"" ""}"" (ppr seq_code)
      <+> text ""retvals""
      <+> ppr retval
  ppr (ParLoop s i prebody body postbody params info) =
    text ""parloop"" <+> ppr s <+> ppr i
      <+> ppr prebody
      <+> ppr params
      <+> ppr info
      <+> langle
      <+> nestedBlock ""{"" ""}"" (ppr body)
      <+> ppr postbody
  ppr (Atomic _) = text ""AtomicOp""

instance FreeIn SchedulerInfo where
  freeIn' (SchedulerInfo nsubtask iter _) =
    freeIn' iter <> freeIn' nsubtask

instance FreeIn ParallelTask where
  freeIn' (ParallelTask code _) =
    freeIn' code

instance FreeIn Multicore where
  freeIn' (Segop _ _ par_code seq_code _ info) =
    freeIn' par_code <> freeIn' seq_code <> freeIn' info
  freeIn' (ParLoop _ _ prebody body postbody _ _) =
    freeIn' prebody <> fvBind (Imp.declaredIn prebody) (freeIn' $ body <> postbody)
  freeIn' (Atomic aop) = freeIn' aop
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8mra1Q
code,"{-# LANGUAGE DeriveDataTypeable #-}
module WFF where
import qualified Data.Map as M
import Test.QuickCheck hiding ((.||.), (==>), (.&&.))
import qualified Data.Set as S
import Data.Data
import Data.Generics.Uniplate.Data
import Data.List hiding (lookup, union)
import Prelude hiding (lookup)
import Control.Applicative hiding (empty)

data WFF = Var String
         | And WFF WFF
         | Or WFF WFF
         | Not WFF
         | Impl WFF WFF
         | Eqv WFF WFF deriving (Data)

instance Show WFF where
    show (Var s) = s
    show (And x y) = ""(""++(show x) ++ "" && ""++(show y)++"")""
    show (Or x y)  =""(""++(show x) ++ "" || ""++(show y)++"")""
    show (Not x) = ""~""++(show x)
    show (Impl x y) = ""(""++(show x) ++ ""=>"" ++ (show y)++"")""
    show (Eqv x y)  = ""(""++(show x) ++ ""="" ++ (show y) ++ "")""

instance Arbitrary WFF where
    arbitrary = sized myArbitrary
        where
            myArbitrary 0 = do
                                s <- oneof (map (return . show) [1..30])
                                return (Var s)
            myArbitrary n = oneof [ binary n And,
                                    binary n Or,
                                    binary n Impl,
                                    binary n Eqv,
                                    fmap Not (myArbitrary (n-1)),
                                    var
                                    ]
                                    where
                                        var = do
                                                s <- oneof (map (return . show) [1..30])
                                                return (Var s)
                                        binary n f = do
                                                    s <- myArbitrary (div n 2)
                                                    t <- myArbitrary (div n 2)
                                                    return (f s t)

t `xor` t' = (t .|| t') .&& (n (t .&& t'))
t .&& t' = And t t'
t .|| t' = Or t t'
t ==> t' = Impl t t'
t <=> t' = Eqv t t'
n t = Not t
v s = Var s

variables wff = [v | Var v <- universe wff]

fromJust (Just x) = x
fromJust _        = undefined

eval :: M.Map String Bool -> WFF -> Bool
eval m (Var s)   = fromJust $ M.lookup s m
eval m (And x y) = (&&) (eval m x) (eval m y)
eval m (Or x y)  = (||) (eval m x) (eval m y)
eval m (Not y)   = not  (eval m y)
eval m (Impl x y) = (not (eval m x)) || (eval m y)
eval m (Eqv x y) = (==) (eval m x) (eval m y)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u8PhOe
code,"{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE PolyKinds #-}
{-# LANGUAGE ScopedTypeVariables #-}

-- | Auxilary definitions for 'Semigroup'
--
-- This module provides some @newtype@ wrappers and helpers which are
-- reexported from the ""Data.Semigroup"" module or imported directly
-- by some other modules.
--
-- This module also provides internal definitions related to the
-- 'Semigroup' class some.
--
-- This module exists mostly to simplify or workaround import-graph
-- issues; there is also a .hs-boot file to allow ""GHC.Base"" and other
-- modules to import method default implementations for 'stimes'
--
-- @since 4.11.0.0
module Data.Semigroup.Internal where

import GHC.Base hiding (Any)
import GHC.Enum
import GHC.Num
import GHC.Read
import GHC.Show
import GHC.Generics
import GHC.Real

-- | This is a valid definition of 'stimes' for an idempotent 'Semigroup'.
--
-- When @x <> x = x@, this definition should be preferred, because it
-- works in /O(1)/ rather than /O(log n)/.
stimesIdempotent :: Integral b => b -> a -> a
stimesIdempotent n x
  | n <= 0 = errorWithoutStackTrace ""stimesIdempotent: positive multiplier expected""
  | otherwise = x

-- | This is a valid definition of 'stimes' for an idempotent 'Monoid'.
--
-- When @mappend x x = x@, this definition should be preferred, because it
-- works in /O(1)/ rather than /O(log n)/
stimesIdempotentMonoid :: (Integral b, Monoid a) => b -> a -> a
stimesIdempotentMonoid n x = case compare n 0 of
  LT -> errorWithoutStackTrace ""stimesIdempotentMonoid: negative multiplier""
  EQ -> mempty
  GT -> x

-- | This is a valid definition of 'stimes' for a 'Monoid'.
--
-- Unlike the default definition of 'stimes', it is defined for 0
-- and so it should be preferred where possible.
stimesMonoid :: (Integral b, Monoid a) => b -> a -> a
stimesMonoid n x0 = case compare n 0 of
  LT -> errorWithoutStackTrace ""stimesMonoid: negative multiplier""
  EQ -> mempty
  GT -> f x0 n
    where
      f x y
        | even y = f (x `mappend` x) (y `quot` 2)
        | y == 1 = x
        | otherwise = g (x `mappend` x) (y `quot` 2) x               -- See Note [Half of y - 1]
      g x y z
        | even y = g (x `mappend` x) (y `quot` 2) z
        | y == 1 = x `mappend` z
        | otherwise = g (x `mappend` x) (y `quot` 2) (x `mappend` z) -- See Note [Half of y - 1]

-- this is used by the class definitionin GHC.Base;
-- it lives here to avoid cycles
stimesDefault :: (Integral b, Semigroup a) => b -> a -> a
stimesDefault y0 x0
  | y0 <= 0   = errorWithoutStackTrace ""stimes: positive multiplier expected""
  | otherwise = f x0 y0
  where
    f x y
      | even y = f (x <> x) (y `quot` 2)
      | y == 1 = x
      | otherwise = g (x <> x) (y `quot` 2) x        -- See Note [Half of y - 1]
    g x y z
      | even y = g (x <> x) (y `quot` 2) z
      | y == 1 = x <> z
      | otherwise = g (x <> x) (y `quot` 2) (x <> z) -- See Note [Half of y - 1]

{- Note [Half of y - 1]
   ~~~~~~~~~~~~~~~~~~~~~
   Since y is guaranteed to be odd and positive here,
   half of y - 1 can be computed as y `quot` 2, optimising subtraction away.
-}

stimesMaybe :: (Integral b, Semigroup a) => b -> Maybe a -> Maybe a
stimesMaybe _ Nothing = Nothing
stimesMaybe n (Just a) = case compare n 0 of
    LT -> errorWithoutStackTrace ""stimes: Maybe, negative multiplier""
    EQ -> Nothing
    GT -> Just (stimes n a)

stimesList  :: Integral b => b -> [a] -> [a]
stimesList n x
  | n < 0 = errorWithoutStackTrace ""stimes: [], negative multiplier""
  | otherwise = rep n
  where
    rep 0 = []
    rep i = x ++ rep (i - 1)

-- | The dual of a 'Monoid', obtained by swapping the arguments of 'mappend'.
--
-- >>> getDual (mappend (Dual ""Hello"") (Dual ""World""))
-- ""WorldHello""
newtype Dual a = Dual { getDual :: a }
        deriving (Eq, Ord, Read, Show, Bounded, Generic, Generic1)

-- | @since 4.9.0.0
instance Semigroup a => Semigroup (Dual a) where
        Dual a <> Dual b = Dual (b <> a)
        stimes n (Dual a) = Dual (stimes n a)

-- | @since 2.01
instance Monoid a => Monoid (Dual a) where
        mempty = Dual mempty

-- | @since 4.8.0.0
instance Functor Dual where
    fmap     = coerce

-- | @since 4.8.0.0
instance Applicative Dual where
    pure     = Dual
    (<*>)    = coerce

-- | @since 4.8.0.0
instance Monad Dual where
    m >>= k  = k (getDual m)

-- | The monoid of endomorphisms under composition.
--
-- >>> let computation = Endo (""Hello, "" ++) <> Endo (++ ""!"")
-- >>> appEndo computation ""Haskell""
-- ""Hello, Haskell!""
newtype Endo a = Endo { appEndo :: a -> a }
               deriving (Generic)

-- | @since 4.9.0.0
instance Semigroup (Endo a) where
        (<>) = coerce ((.) :: (a -> a) -> (a -> a) -> (a -> a))
        stimes = stimesMonoid

-- | @since 2.01
instance Monoid (Endo a) where
        mempty = Endo id

-- | Boolean monoid under conjunction ('&&').
--
-- >>> getAll (All True <> mempty <> All False)
-- False
--
-- >>> getAll (mconcat (map (\x -> All (even x)) [2,4,6,7,8]))
-- False
newtype All = All { getAll :: Bool }
        deriving (Eq, Ord, Read, Show, Bo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CpGirh
code,"module Ch2 where

import Test.QuickCheck
import Test.Hspec

ch2 :: IO ()
ch2 = hspec $ do
  describe ""_______________________Chapter 2 tests_______________________"" $ do
    it ""should have tests"" $ do
      True

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BfdDjd
code,"-- Test we don't get a cycle for ""phantom"" superclasses
{-# LANGUAGE ConstraintKinds, MultiParamTypeClasses, FlexibleContexts #-}
module TcOK where

class A cls c where
    meth :: cls c => c -> c

class A B c => B c where
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m9k6SN
code,"<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE helpset PUBLIC ""-//Sun Microsystems Inc.//DTD JavaHelp HelpSet Version 2.0//EN"" ""http://java.sun.com/products/javahelp/helpset_2_0.dtd"">
<helpset version=""2.0"" xml:lang=""hi-IN"">
  <title>Getting started Guide</title>

  <maps>
     <homeID>top</homeID>
     <mapref location=""map.jhm""/>
  </maps>

  <view>
    <name>TOC</name>
    <label>Contents</label>
    <type>org.zaproxy.zap.extension.help.ZapTocView</type>
    <data>toc.xml</data>
  </view>

  <view>
    <name>Index</name>
    <label>Index</label>
    <type>javax.help.IndexView</type>
    <data>index.xml</data>
  </view>

  <view>
    <name>Search</name>
    <label>Search</label>
    <type>javax.help.SearchView</type>
    <data engine=""com.sun.java.help.search.DefaultSearchEngine"">
      JavaHelpSearch
    </data>
  </view>

  <view>
    <name>Favorites</name>
    <label>Favorites</label>
    <type>javax.help.FavoritesView</type>
  </view>
</helpset>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",H8ebU_
code,"
module Main where

import GHC
import MonadUtils

import System.Environment

main :: IO ()
main = do [libdir] <- getArgs
          runGhc (Just libdir) doit

doit :: Ghc ()
doit = do
  getSessionDynFlags >>= setSessionDynFlags
  dyn <- dynCompileExpr ""()""
  liftIO $ print dyn

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gK_EFr
code,"import Control.Arrow ((***))
import Control.Monad (join)
{-- snippet adler32 --}
import Data.Char (ord)
import Data.Bits (shiftL, (.&.), (.|.))

base = 65521

adler32 xs = helper 1 0 xs
    where helper a b (x:xs) = let a' = (a + (ord x .&. 0xff)) `mod` base
                                  b' = (a' + b) `mod` base
                              in helper a' b' xs
          helper a b _     = (b `shiftL` 16) .|. a
{-- /snippet adler32 --}

{-- snippet adler32_try2 --}
adler32_try2 xs = helper (1,0) xs
    where helper (a,b) (x:xs) =
              let a' = (a + (ord x .&. 0xff)) `mod` base
                  b' = (a' + b) `mod` base
              in helper (a',b') xs
          helper (a,b) _     = (b `shiftL` 16) .|. a
{-- /snippet adler32_try2 --}

{-- snippet adler32_foldl --}
adler32_foldl xs = let (a, b) = foldl step (1, 0) xs
                   in (b `shiftL` 16) .|. a
    where step (a, b) x = let a' = a + (ord x .&. 0xff)
                          in (a' `mod` base, (a' + b) `mod` base)
{-- /snippet adler32_foldl --}

adler32_golf = uncurry (flip ((.|.) . (`shiftL` 16))) . foldl f (1,0)
  where f (a,b) x = join (***) ((`mod` base) . (a + (ord x .&. 0xff) +)) (0,b)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G-gYpp
code,"

module Instances where

import Language.Haskell.Syntax
import qualified Language.Haskell.Pretty as P
import Niz
import Data.List 
-------------------------------------------------------------------------------
---------------- INSTANCE DECLARATIONS ----------------------------------------
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
----------------------  LENGTH OF HSEXP  --------------------------------------
-------------------------------------------------------------------------------

--class Size a where
--    size :: a -> Int
instance Size HsName where
    size _ = 1
instance Size HsQName where
    -- size (Special HsCons) = 0
    size _ = 1
instance Size HsLiteral where
    size (HsInt i) = length $ show i
    size _ = 1
instance Size HsQualType where
    size _ = 1
instance Size HsQOp where
    size (HsQVarOp x) = size x
    size (HsQConOp x) = size x
instance Size HsExp where
  size e = case e of
    HsVar n -> size n
    HsCon n -> size n
    HsLit x -> size x
    HsInfixApp e1 op e2 -> size e1 + size e2 + size op
    HsApp (HsVar _) e2 -> size e2 + 1
    HsApp (HsCon _) e2 -> size e2 + 1
    HsApp e1 e2 -> size e1 + size e2
    HsNegApp e -> 1 + size e
    HsLambda _ pats e -> size e + size pats
    HsLet decs e -> size e + size decs
    HsIf e1 e2 e3 -> 1 + size e1 + size e2 + size e3
    HsCase e alts -> size e + size alts
    HsDo stmts -> size stmts
    HsTuple es -> sum $ map size es
    HsList [] -> 1
    HsList es -> sum $ map size es -- size es
    HsParen e -> size e
    HsLeftSection e op -> size e + size op
    HsRightSection op e -> size e + size op
    HsRecConstr n fields -> size n + size fields
    HsRecUpdate e fields -> size e + size fields
    HsEnumFrom e -> 1 + size e
    HsEnumFromTo e1 e2 -> 1 + size e1 + size e2
    HsEnumFromThen e1 e2 -> 1 + size e1 + size e2
    HsEnumFromThenTo e1 e2 e3 -> 1 + size e1 + size e2 + size e3
    HsListComp e stmts -> size e + size stmts
    HsExpTypeSig _ e t -> size e + size t
    HsAsPat n e -> size n + size e
    HsWildCard -> 0
    HsIrrPat e -> size e
instance Size HsStmt where
    size s = case s of
        HsGenerator _ p e -> size p + size e
        HsQualifier e -> size e
        HsLetStmt decs -> size decs
instance Size HsPat where
  size p = case p of
    HsPVar n -> size n
    HsPLit l -> size l
    HsPNeg p -> 1 + size p
    HsPInfixApp p1 n p2 -> size p1 + size n + size p2
    HsPApp n pats -> 1 + (sum $ map size pats)
    HsPTuple pats -> sum $ map size pats
    HsPList [] -> 1
    HsPList pats -> sum $ map size pats
    HsPParen p -> size p
    HsPRec n fields -> size n + size fields
    HsPAsPat n p -> size n + size p
    HsPWildCard	-> 0
    HsPIrrPat p -> size p
instance Size HsPatField where
    size (HsPFieldPat n p) = size n + size p
instance Size HsDecl where
    size d = case d of
        HsTypeDecl _ name names htype -> size name + size names + size htype
        HsDataDecl _ ss name names cons qnames
                -> size name + size names + size cons + size qnames + size ss
        HsInfixDecl _ assoc _ ops -> 2 + size ops 
        HsNewTypeDecl _ c name names con qname -> size c + size name + size names + size con + size qname	 
        HsClassDecl _ c name names decs -> size c + size name + size names + size decs
        HsInstDecl _ c qname types decs -> size c + size qname + size types + size decs
        HsDefaultDecl _ types -> size types
        HsTypeSig _ names qtype -> size qtype + size names
        HsFunBind ms -> sum $ map size ms
        HsPatBind _ pat rhs decs -> size pat + size rhs + size decs
        HsForeignImport _ s1 safety s2 hname htype -> 3 + size hname + size htype
        HsForeignExport _ s1 s2 name htype -> 2 + size name + size htype
instance Size HsType where
    size t = case t of
        HsTyFun t1 t2 -> size t1 + size t2
        HsTyTuple types -> size types
        HsTyApp t1 t2 -> size t1 + size t2
        HsTyVar n -> size n
        HsTyCon n -> size n
instance (Size a, Size b) => Size (a,b) where
        size (a,b) = size a + size b
-- instance Size a => Size [a] where
--         size xs = sum (map size xs)
instance Size HsMatch where
    size (HsMatch _ name pats rhs decs) = 1 + sum (map size pats) + size rhs
instance Size HsRhs where
    size (HsUnGuardedRhs e) = size e
    size (HsGuardedRhss x) = size x
instance Size HsGuardedRhs where
    size (HsGuardedRhs _ e1 e2) = size e1 + size e2
instance Size HsConDecl where
    size (HsConDecl _ name list) = size name + size list
    size (HsRecDecl _ name list) = size name + size list
instance Size HsBangType where
    size (HsBangedTy   x) = size x
    size (HsUnBangedTy x) = size x
instance Size HsOp where
    size (HsVarOp  x) = size x
    size (HsConOp  x) = size x
instance Size HsAlt where
    size (HsAlt _ pat alts decs) = size pat + size alts + size decs
instance Size HsGuardedAlts where
    size (HsUnGuardedAlt exp) = size exp
    size (HsGuardedAlts xs) = size xs
instance Size HsGuardedAlt where
    size (HsGuardedAlt _",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rIKAJE
code,"module Graphics.UI.Gtk.Layout.EitherWidget where

import Control.Monad
import Data.IORef
import Graphics.UI.Gtk
import System.Glib.Types

data EitherWidget a b   = EitherWidget Notebook (IORef EitherWidgetParams)
type EitherWidgetParams = Bool

instance WidgetClass (EitherWidget a b)
instance ObjectClass (EitherWidget a b)
instance GObjectClass (EitherWidget a b) where
  toGObject (EitherWidget nb _) = toGObject nb
  unsafeCastGObject o = EitherWidget (unsafeCastGObject o) undefined
 
eitherWidgetNew :: (WidgetClass a, WidgetClass b) => a -> b -> IO (EitherWidget a b)
eitherWidgetNew wL wR = do
  nb <- notebookNew
  _  <- notebookAppendPage nb wL """"
  _  <- notebookAppendPage nb wR """"
  notebookSetShowTabs nb False
  params <- newIORef True
  return $ EitherWidget nb params

eitherWidgetLeftActivated :: Attr (EitherWidget a b) Bool
eitherWidgetLeftActivated = newAttr getter setter
  where getter (EitherWidget _ paramsR)    = readIORef paramsR
        setter (EitherWidget nb paramsR) v = do
                  params <- readIORef paramsR
                  when (v /= params) $ do let upd = if v then 0 else 1
                                          notebookSetCurrentPage nb upd
                                          writeIORef paramsR v

eitherWidgetRightActivated :: Attr (EitherWidget a b) Bool
eitherWidgetRightActivated = newAttr getter setter
  where getter w   = fmap not $ get w eitherWidgetLeftActivated
        setter w v = set w [ eitherWidgetLeftActivated := not v ]

eitherWidgetToggle :: EitherWidget a b -> IO()
eitherWidgetToggle w = set w [ eitherWidgetLeftActivated :~ not ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7V26u8
code,"{-# LANGUAGE LambdaCase #-}

module Main (main) where

import System.Environment (getArgs)

eyes = cycle [""⦿⦿"", ""⦾⦾"", ""⟐⟐"", ""⪽⪾"", ""⨷⨷"", ""⨸⨸"", ""☯☯"", ""⊙⊙"", ""⊚⊚"", ""⊛⊛"", ""⨕⨕"", ""⊗⊗"", ""⊘⊘"", ""⊖⊖"", ""⁌⁍"", ""✩✩"", ""❈❈""]
shells = cycle [""()"", ""{}"", ""[]"", ""⨭⨮"", ""⨴⨵"", ""⊆⊇"", ""∣∣""]
bodies = cycle [""███"", ""XXX"", ""⧱⧰⧱"", ""⧯⧮⧯"", ""⧲⧳⧲"",""🁢🁢🁢"", ""✚✚✚"", ""⧓⧒⧑"", ""⦁⦁⦁"", ""☗☗☗"", ""❝❝❝""]


arthropod k = (face k):(repeat $ body k)

face k = let (l:r:[]) = eyes !! k
         in ""╚"" ++ l:"" "" ++ r:""╝""
body k = let (l:r:[]) = shells !! k
             c = bodies !! k
         in ""╚═"" ++ l:c ++ r:""═╝""

wiggle = map (flip replicate ' ') (4 : cycle [2,1,0,1,2,3,4,3])
millipede = zipWith (++) wiggle . arthropod

main :: IO ()
main = getArgs >>= \case
        []     -> beautiful $ millipede 0
        (x:[]) -> beautiful $ millipede (read x)
        where beautiful = putStrLn . unlines . take 20
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Lrqkxz
code,"{-# LANGUAGE PackageImports #-}

import Control.Applicative hiding (many) 


import qualified Data.Attoparsec  as P
import Data.Attoparsec.Char8 -- as P8 
import qualified Data.ByteString.Char8 as B hiding (map) 

import HEP.Parser.LHEParser

import Debug.Trace


import qualified Data.Iteratee as Iter
import qualified Data.ListLike as LL 

iter_parseoneevent :: Iter.Iteratee B.ByteString IO (Maybe LHEvent)
iter_parseoneevent = Iter.Iteratee step 
  where step = undefined 




-------------------------------

hline = putStrLn ""---------------------------------""
main = do 
  hline
  putStrLn ""This is a test of attoparsec parser.""
  hline
  
  putStrLn "" I am reading test.lhe "" 
  
  bytestr <- B.readFile ""test.lhe""

  let r = parse lheheader bytestr
      s = case r of 
            Partial _  -> onlyremain (feed r B.empty)
            Done _  _  -> onlyremain r
            Fail _ _ _ -> trace ""Test failed"" $ onlyremain r 
  
  putStrLn $ show $ B.take 100 s

  let r' = parse eachevent s
      s' = case r' of 
            Partial _  -> onlyresult (feed r' B.empty)
            Done _  _  -> onlyresult r'
            Fail _ _ _ -> trace ""Test failed"" $ onlyresult r'
            
  putStrLn $ show s'
  

        
onlyresult (Done _ r) = r
onlyremain (Done s _) = s
  

somestring (Fail a _ message ) = (Prelude.take 100 $ show $ B.take 100 a ) ++ "" : "" ++ message
somestring (Done a b ) = (Prelude.take 100 $ show $ B.take 100 a ) ++ "" : "" ++ (Prelude.take 100  (show b))
  

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PUJZPn
code,"{-
--Task 4
--power x*y =
--if x*y==0
--then 0
--else if (x*y) != 0
--then x+(x*(y-1))

--These are home tasks
--bb bmi
--| bmi <= 10 =""a""
--| bmi <= 5 = ""b""
--| otherwise = bmi

slope (x1,y1) (x2,y2) = dy / dx
 where dy = y2-y1
       dx = x2 - x1

--Task 2
reci x =  1/x;

--Task 3
--abst x


--Task 4
sign x
 | x<0 = -1
 | x>0 = 1
 | x==0 = 0
 |otherwise = 0


signNum x =
 if x>0
  then 1
 else if x<0
  then -1
 else 0

--Task 5
threeDifferent x y z
 | x==y && y==z && x==z = True
 | otherwise = False

--Task 6
maxofThree x y z
 | x>y && x>z = x
 | y>x && y>z = y
 | otherwise = z

--Task 7
numString x
 | x==1 =""One""
 | x==2 =""Two""
 | x==3 =""Three""
 | x==4 =""Four""
 | x==5 =""Five""
 | otherwise = ""Your input in not less than 6 ""

(!)  _ True = True
(!)  True _ = True

--This is fibnanci funciton
fib:: Int  -> Int
fib 0 = 1
fib 1 = 1
fib x = fib(x-1) + fib(x-2)

charName ::Char -> String
charName 'a' = ""Albert""
charName 'b' = ""Broseph""
cahrName 'c' = ""Cecil""
-}


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xLmclC
code,"-- ""Treealize"" expression terms

module OperationExtension2 where

import Data.Tree
import DataBase
import DataExtension


class ToTree x
 where
  toTree :: x -> Tree String

instance ToTree Lit
 where
  toTree (Lit i) = Node ""Lit"" []

instance (Exp x, Exp y, ToTree x, ToTree y) => ToTree (Add x y)
 where
  toTree (Add x y) = Node ""Add"" [toTree x, toTree y]

instance (Exp x, ToTree x) => ToTree (Neg x)
 where
  toTree (Neg x) = Node ""Neg"" [toTree x]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cIGZ7f
code,"{-# LANGUAGE RecordWildCards       #-}
{-# LANGUAGE BangPatterns          #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings  #-}

import Db
import Parser
import Trains
import Result

import Data.List
import System.IO
import System.Directory
import Control.Arrow
import Control.Applicative
import Control.Monad
import Control.Monad.Writer
import Data.Monoid
import Data.Maybe

import Debug.Trace

todo = error ""TODO""

{- a action parsed from user input,
 - takes a Db, produces a new Db and some output to print 
 - and a flag telling us if we are done
-}
type Command = (Db -> (Db, String))

commands = Commands {
	show_all_trains  = todo,
	show_all_routes  = todo,

	show_train       = \id -> executeQuery (find_train_by_id id)    (tell . show),
	show_traincar    = \id -> executeQuery (find_traincar_by_id id) (tell . show),
	show_route       = \id -> executeQuery (find_route_by_id id)    (tell . show),
	show_city        = todo,
	show_reservation = \id -> executeQuery (find_reservation_by_id id) (tell . show),

	cmd_query2 = \start stop     -> executeQuery (query2_query start stop)     query2_printer,
	cmd_query3 = \train car seat -> executeQuery (query3_query train car seat) query3_printer,
	cmd_query4 = \trains         -> executeQuery (query4_query trains)         query4_printer,

	unknown_command = \cmd db -> (db, ""Unknown command: '"" ++ cmd ++ ""'"")
}

-- | Get train car from train by index.
-- | Start counting at 1.
-- | So a train has cars [1 .. num-cars]
get_nth_car_of_train :: Train -> Int -> Maybe TrainCar
get_nth_car_of_train train n = do
	guard (n >= 1)
	guard (length (train_cars train) >= n)

	return (train_cars train !! (n - 1))

-- | Compute all trains that pass a given station
transfers :: City -> Db -> [Train]
transfers city =   db_trains                                         -- get all trains
               >>> filter (elem city . route_cities . train_route)   -- filter out trains for city

executeQuery :: (Db -> Result a) -> (a -> Writer String b) -> Db -> (Db, String)
executeQuery query printer db = case query db of
	(Ok  a)   -> (db, snd (runWriter (printer a)))
	(Err msg) -> (db, ""Error: "" ++ msg)

train_printer train = tell (show train)

-- Mindestanzahl der freien und maximale Anzahl der durch Reservierung belegten Plätze pro Zug
-- und Waggon zwischen je zwei Stationen (wobei sich Minimum und Maximum darauf beziehen, 
-- dass Reservierungen möglicherweise nur auf Teilen der abgefragten Strecke existieren); 

-- Input:  Eine List von Stationen
-- Output: Für jeden Wagon jeden Zuges, Anzahl der freien und reservierten Plätze zwischen den Stationen.

query2_query :: City -> City -> Db -> Result [(TrainId, [(TrainCarId, Int, Int)])]
query2_query start stop db = do
	route <- route_from_endpoints start stop db

	-- actual query runs in list monad
	return $ do
		train <- db_trains db

		let cars = do 
			traincar <- train_cars train
	
			-- filter out reservations for this train, car and route
			let rs = do
				r <- db_reservations db

				guard (reservation_train    r == train_id train)         -- filter for this train
				guard (reservation_traincar r == traincar_id traincar)  -- filter for this traincar
				guard (routes_overlap route (reservation_route r))       -- filter for this route

				return r

			let free     = num_free_seats_for_car     traincar (map reservation_slot rs)
			let reserved = num_reserved_seats_for_car traincar (map reservation_slot rs)

			return (traincar_id traincar, free, reserved)

		return (train_id train, cars)

query2_printer :: [(TrainId, [(TrainCarId, Int, Int)])] -> Writer String ()
query2_printer trains = do
	tell (""QUERY 2 FOUND "" ++ show (length trains) ++ "" RECORD(S)"")

	forM trains $ \(train, cars) -> do
		tell (""TRAIN: ""        ++ tId train ++ ""\n"")

		forM cars $ \(traincar, free_seats, reserved_seats) -> do
			tell (""\tTRAIN CAR: ""        ++ tcId traincar               ++ ""\n"")
			tell (""\t\tFREE SEATS:     "" ++ show free_seats             ++ ""\n"")
			tell (""\t\tRESERVED SEATS: "" ++ show reserved_seats         ++ ""\n"")

	return ()


-- Reservierungen für einen bestimmten Platz in einem Zug, wobei das Ergebnis die Stationen angibt,
-- zwischen denen Reservierungen bestehen; 

-- Input:  Ein Zug, ein Wagon, eine Sitznummer
-- Output: Alle Routen für die diser Sitz reserviert wurde.

--query3_query :: Train -> TrainCar -> Int -> Db -> Result [[City]]
query3_query train_id traincar_id seat db = do
	train    <- find_train_by_id    train_id    db -- validate train
	traincar <- find_traincar_by_id traincar_id db -- validate traincar

	return $   db_reservations                                          -- get reservations from db
           >>> filter ((train_id    ==) . reservation_train)            -- filter for this train
           >>> filter ((traincar_id ==) . reservation_traincar)         -- filter for this train
           >>> filter ((slot_contains_seat seat)  . reservation_slot)   -- filter for `seat'
           >>> map reservation_route                                    -- get cities of reservation
           $   db

query3_printer routes = do
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RqcQ-x
code,"module Yesod.Helpers.Auth where

import Prelude
import Yesod
import Yesod.Auth
import Control.Monad.Catch                  (MonadThrow)
import Control.Monad

import qualified Data.Text                  as T


yesodAuthIdDo :: (YesodAuth master, MonadIO m, MonadThrow m, MonadBaseControl IO m) =>
                (AuthId master -> HandlerT master m a)
                -> HandlerT master m a
yesodAuthIdDo f = do
    liftHandlerT maybeAuthId
        >>= maybe (permissionDeniedI $ (T.pack ""Login Required"")) return
        >>= f


yesodAuthIdDoSub :: (YesodAuth master, MonadIO m, MonadThrow m, MonadBaseControl IO m) =>
                    (AuthId master -> HandlerT site (HandlerT master m) a)
                    -> HandlerT site (HandlerT master m) a
yesodAuthIdDoSub f = do
    (lift $ liftHandlerT maybeAuthId)
        >>= maybe (permissionDeniedI $ (T.pack ""Login Required"")) return
        >>= f


yesodAuthEntityDo :: (YesodAuthPersist master, MonadIO m, MonadThrow m, MonadBaseControl IO m) =>
                    ((AuthId master, AuthEntity master) -> HandlerT master m a)
                    -> HandlerT master m a
yesodAuthEntityDo f = do
    user_id <- liftHandlerT maybeAuthId
                >>= maybe (permissionDeniedI $ (T.pack ""Login Required"")) return
    let get_user =
#if MIN_VERSION_yesod_core(1, 4, 0)
                getAuthEntity
#else
                runDB . get
#endif
    user <- liftHandlerT (get_user user_id)
                >>= maybe (permissionDeniedI $ (T.pack ""AuthEntity not found"")) return
    f (user_id, user)


yesodAuthEntityDoSub :: (YesodAuthPersist master, MonadIO m, MonadThrow m, MonadBaseControl IO m) =>
                    ((AuthId master, AuthEntity master) -> HandlerT site (HandlerT master m) a)
                    -> HandlerT site (HandlerT master m) a
yesodAuthEntityDoSub f = do
    let get_user =
#if MIN_VERSION_yesod_core(1, 4, 0)
                getAuthEntity
#else
                runDB . get
#endif
    user_id <- lift (liftHandlerT maybeAuthId)
                >>= maybe (permissionDeniedI $ (T.pack ""Login Required"")) return
    user <- lift (liftHandlerT $ get_user user_id)
                >>= maybe (permissionDeniedI $ (T.pack ""AuthEntity not found"")) return
    f (user_id, user)


-- | 用于实现一种简单的身份认证手段：使用 google email 作为用户标识
newtype GoogleEmail = GoogleEmail { unGoogleEmail :: T.Text }
                    deriving (Show, Eq, PathPiece)

-- | used to implement 'authenticate' method of 'YesodAuth' class
authenticateGeImpl :: (MonadHandler m, AuthId master ~ GoogleEmail)
                    => Creds master
                    -> m (AuthenticationResult master)
authenticateGeImpl creds = do
    setSession ""authed_gmail"" raw_email
    return $ Authenticated $ GoogleEmail raw_email
    where
        raw_email = credsIdent creds

-- | used to implement 'manybeAuthId' method of 'YesodAuth' class
maybeAuthIdGeImpl :: MonadHandler m => m (Maybe GoogleEmail)
maybeAuthIdGeImpl = do
    liftM (fmap GoogleEmail) $ lookupSession ""authed_gmail""


eitherGetLoggedInUserId :: YesodAuth master
                        => HandlerT master IO (Either AuthResult (AuthId master))
eitherGetLoggedInUserId = do
    m_uid <- maybeAuthId
    case m_uid of
        Nothing -> return $ Left AuthenticationRequired
        Just uid -> return $ Right uid
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Z4ZjdO
code,"{-# LANGUAGE TypeFamilies #-}

module T1897b where

import Control.Monad
import Data.Maybe

class Bug s where
  type Depend s 
 
  next  :: s -> Depend s -> Maybe s
  start :: s
  
-- isValid :: (Bug s) => [Depend s] -> Bool
-- Inferred type should be rejected as ambiguous
isValid ds = isJust $ foldM next start ds
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ikLbc7
code,"{-# LANGUAGE MultiParamTypeClasses #-}
-- |
-- Module:       $HEADER$
-- Description:  Command line tool that generates random passwords.
-- Copyright:    (c) 2013 Peter Trsko
-- License:      BSD3
--
-- Maintainer:   peter.trsko@gmail.com
-- Stability:    experimental
-- Portability:  non-portable (FlexibleContexts, depends on non-portable
--               module)
--
-- Command line tool that generates random passwords.
module Main.Application (runApp, processOptions)
    where

import Control.Applicative ((<$>))
import Control.Monad (replicateM)
import Data.Char (isDigit)
import Data.Maybe (fromMaybe)
import Data.Version (Version)
import Data.Word (Word32)
import System.Console.GetOpt
    ( OptDescr(Option)
    , ArgDescr(NoArg)
    , ArgOrder(Permute)
    , getOpt
    )
import System.Exit (exitFailure)
import System.IO (Handle, stderr, stdout)

import Data.ByteString (ByteString)
import qualified Data.ByteString.Char8 as BS (hPutStrLn, unwords)
import Data.Default.Class (Default(def))
import Data.Monoid.Endo hiding ((<>))
import Data.Semigroup (Semigroup((<>)))
import System.Console.Terminal.Size as Terminal (Window(..), size)
import System.Console.GetOpt.UsageInfo
    ( UsageInfoConfig(outputHandle)
    , renderUsageInfo
    )

import Main.ApplicationMode
    ( ApplicationMode(..)
    , SimpleMode(..)
    , changeAction
    , updateConfiguration
    )
import Main.ApplicationMode.SimpleAction (SimpleAction(..))
import qualified Main.ApplicationMode.SimpleAction as SimpleAction (optErrors)
import Main.Common (Parameters(..), printHelp, printVersion, printOptErrors)
import Main.MiniLens (E, L, get, mkL, set)
import Main.Random (withGenRand)
import qualified Text.Pwgen.Pronounceable as Pronounceable (genPwConfigBS)
import Text.Pwgen (genPassword)

import Paths_hpwgen (version)


-- | Default length of password.
defaultPwlen :: Word32
defaultPwlen = 8

-- | Default number of lines, this is used when printing passwords in columns,
-- but number of passwords wasn't specified.
defaultNumberOfLines :: Int
defaultNumberOfLines = 20

-- | Line length used when printing in columns, but to a handle that isn't a
-- terminal.
defaultLineLength :: Int
defaultLineLength = 80

type HpwgenMode = SimpleMode SimpleAction Config

instance ApplicationMode SimpleMode SimpleAction Config where
    optErrors msgs = case SimpleAction.optErrors msgs of
        Nothing -> mempty
        Just a -> changeAction a
            `mappend` updateConfiguration (set outHandleL stderr)

data Config = Config
    { cfgProgName :: String
    , cfgVersion :: Version
    , cfgPasswordLength :: Word32
    , cfgNumberOfPasswords :: Maybe Int
    , cfgPrintInColumns :: Maybe Bool
    -- ^ If 'Nothing' then it's determined depending on the fact if output is
    -- a terminal. When 'True' and output is not a terminal 80 character width
    -- is assumed. And when 'False' then only one password is printed per line.
    , cfgGeneratePronounceable :: Bool
    , cfgIncludeNumbers :: Bool
    , cfgIncludeSymbols :: Bool
    , cfgIncludeUppers :: Bool
    , cfgOutHandle :: Handle
    }

instance Default Config where
    def = Config
        { cfgProgName = """"
        , cfgVersion = version
        , cfgPasswordLength = defaultPwlen
        , cfgNumberOfPasswords = Nothing
        , cfgPrintInColumns = Nothing
        , cfgGeneratePronounceable = True
        , cfgIncludeNumbers = True
        , cfgIncludeSymbols = True
        , cfgIncludeUppers = True
        , cfgOutHandle = stdout
        }

outHandleL :: L Config Handle
outHandleL = mkL cfgOutHandle $ \ h c -> c{cfgOutHandle = h}

progNameL :: L Config String
progNameL = mkL cfgProgName $ \ pn c -> c{cfgProgName = pn}

generatePronounceableL :: L Config Bool
generatePronounceableL =
    mkL cfgGeneratePronounceable $ \ b c -> c{cfgGeneratePronounceable = b}

passwordLengthL :: L Config Word32
passwordLengthL = mkL cfgPasswordLength $ \ n c -> c{cfgPasswordLength = n}

numberOfPasswordsL :: L Config (Maybe Int)
numberOfPasswordsL =
    mkL cfgNumberOfPasswords $ \ n c -> c{cfgNumberOfPasswords = n}

includeNumbersL :: L Config Bool
includeNumbersL = mkL cfgIncludeNumbers $ \ b c -> c{cfgIncludeNumbers = b}

includeSymbolsL :: L Config Bool
includeSymbolsL = mkL cfgIncludeSymbols $ \ b c -> c{cfgIncludeSymbols = b}

includeUppersL :: L Config Bool
includeUppersL = mkL cfgIncludeUppers $ \ b c -> c{cfgIncludeUppers = b}

printInColumnsL :: L Config (Maybe Bool)
printInColumnsL = mkL cfgPrintInColumns $ \ b c -> c{cfgPrintInColumns = b}

params :: Parameters Config
params = def
    { paramOutputHandle = get outHandleL
    , paramProgName = get progNameL
    , paramCommand = get progNameL
    , paramVersion = cfgVersion
    , paramUsage = const
        [ ""[OPTIONS] [PASSWORD_LENGTH [NUMBER_OF_PASSWORDS]]""
        , ""{-h|--help|-V|--version|--numeric-version}""
        ]
    }

options :: [OptDescr (Endo HpwgenMode)]
options =
{- TODO
    [ Option ""s"" [""secure""]
        (NoArg . updateConfiguration $ set generatePronounceableL False)
        ""Generate completely random passwords.""
-}
    [ Option ""cu"" [""capitalize"", ""upper""]
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t5n9LE
code,"{-# LANGUAGE MultiParamTypeClasses, TypeSynonymInstances, FlexibleInstances #-}
{- |
Module      :  $Header$
Description :  embedding from CASL to VSE, plus wrapping procedures
               with default implementations
Copyright   :  (c) M.Codescu, DFKI Bremen 2008
License     :  GPLv2 or higher, see LICENSE.txt

Maintainer  :  Mihai.Codescu@dfki.de
Stability   :  provisional
Portability :  non-portable (imports Logic.Logic)

The embedding comorphism from CASL to VSE.
-}

module Comorphisms.CASL2VSEImport (CASL2VSEImport(..)) where

import Logic.Logic
import Logic.Comorphism

import CASL.Logic_CASL
import CASL.Sublogic as SL
import CASL.Sign
import CASL.AS_Basic_CASL
import CASL.Morphism

import VSE.Logic_VSE
import VSE.As
import VSE.Ana

import Common.AS_Annotation
import Common.Id
import Common.ProofTree
import Common.Result
import qualified Common.Lib.MapSet as MapSet

import qualified Data.Set as Set
import qualified Data.Map as Map

-- | The identity of the comorphism
data CASL2VSEImport = CASL2VSEImport deriving (Show)

instance Language CASL2VSEImport -- default definition is okay

instance Comorphism CASL2VSEImport
               CASL CASL_Sublogics
               CASLBasicSpec CASLFORMULA SYMB_ITEMS SYMB_MAP_ITEMS
               CASLSign
               CASLMor
               Symbol RawSymbol ProofTree
               VSE ()
               VSEBasicSpec Sentence SYMB_ITEMS SYMB_MAP_ITEMS
               VSESign
               VSEMor
               Symbol RawSymbol () where
    sourceLogic CASL2VSEImport = CASL
    sourceSublogic CASL2VSEImport = SL.cFol
    targetLogic CASL2VSEImport = VSE
    mapSublogic CASL2VSEImport _ = Just ()
    map_theory CASL2VSEImport = mapCASLTheory
    map_morphism CASL2VSEImport = return . mapMor
    map_sentence CASL2VSEImport _ = return . mapFORMULA
    map_symbol CASL2VSEImport = error ""nyi""
      -- check these 3, but should be fine
    has_model_expansion CASL2VSEImport = True
    is_weakly_amalgamable CASL2VSEImport = True
    isInclusionComorphism CASL2VSEImport = True


mapCASLTheory :: (CASLSign, [Named CASLFORMULA]) ->
                 Result (VSESign, [Named Sentence])
mapCASLTheory (sig, n_sens) = do
  let (tsig, genAx) = mapSig sig
      tsens = map (mapNamed mapFORMULA) n_sens
  case not $ null $ checkCases tsig (tsens ++ genAx) of
   True -> fail ""case error in signature""
   _ -> return (tsig, tsens ++ genAx)

mkIfProg :: FORMULA () -> Program
mkIfProg f =
  mkRanged $ If f (mkRanged $ Return aTrue) $ mkRanged $ Return aFalse

mapSig :: CASLSign -> (VSESign, [Named Sentence])
mapSig sign =
 let wrapSort (procsym, axs) s = let
        restrName = gnRestrName s
        eqName = gnEqName s
        sProcs = [(restrName, Profile [Procparam In s] Nothing),
                  (eqName,
                     Profile [Procparam In s, Procparam In s]
                             (Just uBoolean))]
        sSens = [makeNamed (""ga_restriction_"" ++ show s) $ ExtFORMULA $
                 mkRanged
                  (Defprocs
                   [Defproc Proc restrName [xVar]
                   (mkRanged (Block [] (mkRanged Skip)))
                           nullRange])
                ,makeNamed (""ga_equality_"" ++ show s) $ ExtFORMULA $
                 mkRanged
                  (Defprocs
                   [Defproc Func eqName (map mkSimpleId [""x"", ""y""])
                   (mkRanged (Block [] (mkIfProg (Strong_equation
                        (Qual_var (mkSimpleId ""x"") s nullRange)
                        (Qual_var (mkSimpleId ""y"") s nullRange)
                        nullRange))))
                           nullRange])
                ]
                                          in
        (sProcs ++ procsym,  sSens ++ axs)
     (sortProcs, sortSens) = foldl wrapSort ([],[]) $
                                        Set.toList $ sortSet sign
     wrapOp (procsym, axs) (i, opTypes) = let
       funName = mkGenName i
       fProcs = map (\profile ->
                       (funName,
                        Profile
                           (map (Procparam In) $ opArgs profile)
                           (Just $ opRes profile))) opTypes
       fSens = map (\ (OpType fKind w s) -> let vars = genVars w in
                   makeNamed """" $ ExtFORMULA $ Ranged
                     (Defprocs
                       [Defproc
                         Func funName (map fst vars)
                         ( Ranged (Block []
                         (Ranged
                            (Block
                              [Var_decl [yVar] s nullRange]
                              (Ranged
                                (Seq
                                 (Ranged
                                   (Assign
                                     yVar
                                     (Application
                                      (Qual_op_name i
                                        (Op_type fKind w s nullRange)
                                       nullRange )
                                      (map  (\(v, ss) ->
                                              Qual_var v ss nullRange) vars)
     ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YjCxvg
code,"module Propellor.Property.Tor where

import Propellor
import qualified Propellor.Property.File as File
import qualified Propellor.Property.Apt as Apt
import qualified Propellor.Property.Service as Service
import Utility.FileMode
import Utility.DataUnits

import System.Posix.Files
import Data.Char
import Data.List

type HiddenServiceName = String

type NodeName = String

-- | Sets up a tor bridge. (Not a relay or exit node.)
--
-- Uses port 443
isBridge :: Property NoInfo
isBridge = configured
	[ (""BridgeRelay"", ""1"")
	, (""Exitpolicy"", ""reject *:*"")
	, (""ORPort"", ""443"")
	]
	`describe` ""tor bridge""
	`requires` server

-- | Sets up a tor relay.
--
-- Uses port 443
isRelay :: Property NoInfo
isRelay = configured
	[ (""BridgeRelay"", ""0"")
	, (""Exitpolicy"", ""reject *:*"")
	, (""ORPort"", ""443"")
	]
	`describe` ""tor relay""
	`requires` server

-- | Makes the tor node be named, with a known private key.
--
-- This can be moved to a different IP without needing to wait to
-- accumulate trust.
named :: NodeName -> Property HasInfo
named n = configured [(""Nickname"", n')]
	`describe` (""tor node named "" ++ n')
	`requires` torPrivKey (Context (""tor "" ++ n))
  where
	n' = saneNickname n

torPrivKey :: Context -> Property HasInfo
torPrivKey context = f `File.hasPrivContent` context
	`onChange` File.ownerGroup f user (userGroup user)
	-- install tor first, so the directory exists with right perms
	`requires` Apt.installed [""tor""]
  where
	f = ""/var/lib/tor/keys/secret_id_key""

-- | A tor server (bridge, relay, or exit)
-- Don't use if you just want to run tor for personal use.
server :: Property NoInfo
server = configured [(""SocksPort"", ""0"")]
	`requires` Apt.installed [""tor"", ""ntp""]
	`describe` ""tor server""

-- | Specifies configuration settings. Any lines in the config file
-- that set other values for the specified settings will be removed,
-- while other settings are left as-is. Tor is restarted when
-- configuration is changed.
configured :: [(String, String)] -> Property NoInfo
configured settings = File.fileProperty ""tor configured"" go mainConfig
	`onChange` restarted
  where
	ks = map fst settings
	go ls = sort $ map toconfig $
		filter (\(k, _) -> k `notElem` ks) (map fromconfig ls)
		++ settings
	toconfig (k, v) = k ++ "" "" ++ v
	fromconfig = separate (== ' ')

data BwLimit
	= PerSecond String
	| PerDay String
	| PerMonth String

-- | Limit incoming and outgoing traffic to the specified
-- amount each.
--
-- For example, PerSecond ""30 kibibytes"" is the minimum limit
-- for a useful relay.
bandwidthRate :: BwLimit -> Property NoInfo
bandwidthRate (PerSecond s) = bandwidthRate' s 1
bandwidthRate (PerDay s) = bandwidthRate' s (24*60*60)
bandwidthRate (PerMonth s) = bandwidthRate' s (31*24*60*60)

bandwidthRate' :: String -> Integer -> Property NoInfo
bandwidthRate' s divby = case readSize dataUnits s of
	Just sz -> let v = show (sz `div` divby) ++ "" bytes""
		in configured [(""BandwidthRate"", v)]
			`describe` (""tor BandwidthRate "" ++ v)
	Nothing -> property (""unable to parse "" ++ s) noChange

hiddenServiceAvailable :: HiddenServiceName -> Int -> Property NoInfo
hiddenServiceAvailable hn port = hiddenServiceHostName prop
  where
	prop = configured
		[ (""HiddenServiceDir"", varLib </> hn)
		, (""HiddenServicePort"", unwords [show port, ""127.0.0.1:"" ++ show port])
		]
		`describe` ""hidden service available""
	hiddenServiceHostName p =  adjustPropertySatisfy p $ \satisfy -> do
		r <- satisfy
		h <- liftIO $ readFile (varLib </> hn </> ""hostname"")
		warningMessage $ unwords [""hidden service hostname:"", h]
		return r

hiddenService :: HiddenServiceName -> Int -> Property NoInfo
hiddenService hn port = configured
	[ (""HiddenServiceDir"", varLib </> hn)
	, (""HiddenServicePort"", unwords [show port, ""127.0.0.1:"" ++ show port])
	]
	`describe` unwords [""hidden service available:"", hn, show port]

hiddenServiceData :: IsContext c => HiddenServiceName -> c -> Property HasInfo
hiddenServiceData hn context = combineProperties desc
	[ installonion ""hostname""
	, installonion ""private_key""
	]
  where
	desc = unwords [""hidden service data available in"", varLib </> hn]
	installonion f = withPrivData (PrivFile $ varLib </> hn </> f) context $ \getcontent ->
		property desc $ getcontent $ install $ varLib </> hn </> f
	install f content = ifM (liftIO $ doesFileExist f)
		( noChange
		, ensureProperties
			[ property desc $ makeChange $ do
				createDirectoryIfMissing True (takeDirectory f)
				writeFileProtected f content
			, File.mode (takeDirectory f) $ combineModes
				[ownerReadMode, ownerWriteMode, ownerExecuteMode]
			, File.ownerGroup (takeDirectory f) user (userGroup user)
			, File.ownerGroup f user (userGroup user)
			]
		)

restarted :: Property NoInfo
restarted = Service.restarted ""tor""

mainConfig :: FilePath
mainConfig = ""/etc/tor/torrc""

varLib :: FilePath
varLib = ""/var/lib/tor""

varRun :: FilePath
varRun = ""/var/run/tor""

user :: User
user = User ""debian-tor""

type NickName = String

-- | Convert String to a valid tor NickName.
saneNickname :: String -> NickName
saneNickname s 
	| null n = ""unnamed""
	| otherwise = n
  where
	legal c = isNumber c || isAsci",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GqYjok
code,"import Controller (withOR)
import System.IO (hPutStrLn, stderr)
import Network.Wai.Middleware.Debug (debug)
import Network.Wai.Handler.Warp (run)

main :: IO ()
main = do
    let port = 3000
    hPutStrLn stderr $ ""Application launched, listening on port "" ++ show port
    withOR $ run port . debug
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cUBuRV
code,"{-# OPTIONS_GHC -Wno-overlapping-patterns -Wno-incomplete-patterns -Wno-incomplete-uni-patterns -Wno-incomplete-record-updates #-}

-- | Index simplification mechanics.
module Futhark.Optimise.Simplify.Rules.Index
  ( IndexResult (..),
    simplifyIndexing,
  )
where

import Data.Maybe
import Futhark.Analysis.PrimExp.Convert
import qualified Futhark.Analysis.SymbolTable as ST
import Futhark.Construct
import Futhark.IR
import Futhark.Optimise.Simplify.Rules.Simple
import Futhark.Util

isCt1 :: SubExp -> Bool
isCt1 (Constant v) = oneIsh v
isCt1 _ = False

isCt0 :: SubExp -> Bool
isCt0 (Constant v) = zeroIsh v
isCt0 _ = False

-- | Some index expressions can be simplified to t'SubExp's, while
-- others produce another index expression (which may be further
-- simplifiable).
data IndexResult
  = IndexResult Certs VName (Slice SubExp)
  | SubExpResult Certs SubExp

-- | Try to simplify an index operation.
simplifyIndexing ::
  MonadBuilder m =>
  ST.SymbolTable (Rep m) ->
  TypeLookup ->
  VName ->
  Slice SubExp ->
  Bool ->
  Maybe (m IndexResult)
simplifyIndexing vtable seType idd (Slice inds) consuming =
  case defOf idd of
    _
      | Just t <- seType (Var idd),
        Slice inds == fullSlice t [] ->
        Just $ pure $ SubExpResult mempty $ Var idd
      | Just inds' <- sliceIndices (Slice inds),
        Just (ST.Indexed cs e) <- ST.index idd inds' vtable,
        worthInlining e,
        all (`ST.elem` vtable) (unCerts cs) ->
        Just $ SubExpResult cs <$> toSubExp ""index_primexp"" e
      | Just inds' <- sliceIndices (Slice inds),
        Just (ST.IndexedArray cs arr inds'') <- ST.index idd inds' vtable,
        all (worthInlining . untyped) inds'',
        arr `ST.available` vtable,
        all (`ST.elem` vtable) (unCerts cs) ->
        Just $
          IndexResult cs arr . Slice . map DimFix
            <$> mapM (toSubExp ""index_primexp"") inds''
    Nothing -> Nothing
    Just (SubExp (Var v), cs) ->
      Just $ pure $ IndexResult cs v $ Slice inds
    Just (Iota _ x s to_it, cs)
      | [DimFix ii] <- inds,
        Just (Prim (IntType from_it)) <- seType ii ->
        Just $
          let mul = BinOpExp $ Mul to_it OverflowWrap
              add = BinOpExp $ Add to_it OverflowWrap
           in fmap (SubExpResult cs) $
                toSubExp ""index_iota"" $
                  ( sExt to_it (primExpFromSubExp (IntType from_it) ii)
                      `mul` primExpFromSubExp (IntType to_it) s
                  )
                    `add` primExpFromSubExp (IntType to_it) x
      | [DimSlice i_offset i_n i_stride] <- inds ->
        Just $ do
          i_offset' <- asIntS to_it i_offset
          i_stride' <- asIntS to_it i_stride
          let mul = BinOpExp $ Mul to_it OverflowWrap
              add = BinOpExp $ Add to_it OverflowWrap
          i_offset'' <-
            toSubExp ""iota_offset"" $
              ( primExpFromSubExp (IntType to_it) x
                  `mul` primExpFromSubExp (IntType to_it) s
              )
                `add` primExpFromSubExp (IntType to_it) i_offset'
          i_stride'' <-
            letSubExp ""iota_offset"" $
              BasicOp $ BinOp (Mul Int64 OverflowWrap) s i_stride'
          fmap (SubExpResult cs) $
            letSubExp ""slice_iota"" $
              BasicOp $ Iota i_n i_offset'' i_stride'' to_it

    -- A rotate cannot be simplified away if we are slicing a rotated dimension.
    Just (Rotate offsets a, cs)
      | not $ or $ zipWith rotateAndSlice offsets inds -> Just $ do
        dims <- arrayDims <$> lookupType a
        let adjustI i o d = do
              i_p_o <- letSubExp ""i_p_o"" $ BasicOp $ BinOp (Add Int64 OverflowWrap) i o
              letSubExp ""rot_i"" (BasicOp $ BinOp (SMod Int64 Unsafe) i_p_o d)
            adjust (DimFix i, o, d) =
              DimFix <$> adjustI i o d
            adjust (DimSlice i n s, o, d) =
              DimSlice <$> adjustI i o d <*> pure n <*> pure s
        IndexResult cs a . Slice <$> mapM adjust (zip3 inds offsets dims)
      where
        rotateAndSlice r DimSlice {} = not $ isCt0 r
        rotateAndSlice _ _ = False
    Just (Index aa ais, cs) ->
      Just $
        IndexResult cs aa
          <$> subExpSlice (sliceSlice (primExpSlice ais) (primExpSlice (Slice inds)))
    Just (Replicate (Shape [_]) (Var vv), cs)
      | [DimFix {}] <- inds,
        not consuming,
        ST.available vv vtable ->
        Just $ pure $ SubExpResult cs $ Var vv
      | DimFix {} : is' <- inds,
        not consuming,
        ST.available vv vtable ->
        Just $ pure $ IndexResult cs vv $ Slice is'
    Just (Replicate (Shape [_]) val@(Constant _), cs)
      | [DimFix {}] <- inds, not consuming -> Just $ pure $ SubExpResult cs val
    Just (Replicate (Shape ds) v, cs)
      | (ds_inds, rest_inds) <- splitAt (length ds) inds,
        (ds', ds_inds') <- unzip $ mapMaybe index ds_inds,
        ds' /= ds ->
        Just $ do
          arr <- letExp ""smaller_replicate"" $ BasicOp $ Replicate (Shape ds') v
          return $ IndexResult cs arr $ Slice $ ds_inds' ++ rest_inds
      where
        index DimFix {} = Nothing
        index (DimSlic",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tK4zUU
code,"
squareM = #x -> `(,x * ,x)   -- `#` indicates macro-lambda

unittest ""squareM"" [
    (squareM 3,               9),
    (let a = 3 in squareM a,  9),
    ]

a = ""a""
unittest ""macro_expand"" [
    (macro_expand {squareM 3},       (*) 3 3),
    (macro_expand {(squareM 3) + 1}, (+) ((*) 3 3) 1),  

    (macro_expand {squareM a},                   (*) a a),
    (macro_expand {let a = 1 in squareM a},      (\a.(*) a a) 1), 
    (macro_expand {let a = 1 in squareM (a+1)},  (\a.(*) ((+) a 1) ((+) a 1)) 1), 
    ]

evalN 0 ((squareM 3) + 1)
evalN 1 ((squareM 3) + 1)
evalN 2 ((squareM 3) + 1)
evalN 3 ((squareM 3) + 1)
evalN 4 ((squareM 3) + 1)
-- (+) ((*) 3 3) 1
-- (+) ((3 *) 3) 1
-- (+) 9 1
-- (9 +) 1
-- 10

lazyevalN 0 ((squareM 3) + 1)
lazyevalN 1 ((squareM 3) + 1)
lazyevalN 2 ((squareM 3) + 1)
lazyevalN 3 ((squareM 3) + 1)
lazyevalN 4 ((squareM 3) + 1)
-- (+) ((*) 3 3) 1
-- (+) ((*) 3 3) 1
-- (+) 9 1
-- (9 +) 1
-- 10

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Sp9j7w
code,"module OutputDirectory
  (outdir) where

outdir = ""_data""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9gpquZ
code,"module Types where

  -- Name representa el nombre de una lista de peliculas.
  type Name = String
  
  -------------------------
  -- AST
  data Comm = Seq Comm Comm    -- secuencia de comandos
            | Def Name FList   -- define una lista
            | Add Name FList   -- operador << 
            | Rem Name FList   -- operador >>
            deriving Show

  -- Formato de la lista antes de ser evaluada.
  data FList = New Params      
             | And FList FList
             | Var Name 
             deriving Show

  -- Parametros a partir de los cuales pueden formarse las listas.
  -- Los parametros no especificados tomaran el valor por defecto de
  -- la API.
  data Params = P {  rate   :: Maybe Integer,
                     limit  :: Maybe Integer,
                     genre  :: Maybe String,
                     query  :: Maybe String,
                     sorted :: Maybe String,
                     order  :: Maybe String
                   } deriving Show


  -- El objetivo de AuxParams es simplemente hacer el parseo más fácil.
  -- La representación de los parámetros a partir de la cual se hará el
  -- request es el record de arriba de tipo Params
  -- Ver en Parser.hs 
  data AuxParams = Rating Integer
                 | Limit Integer
                 | Genre String
                 | Query String
                 | Sort String
                 | Order String
                 deriving Show
  -------------------------

  
  -- Lista de listas de peliculas
  type Env = [(Name, [Film])]

  -- Posibles errores durante la evaluación
  data Error = BadParams    -- ninguna película satisface los parámetros
             | Undef Name   -- lista no definida
             | IQuit        -- salir del interprete

  -- Estado que llevara el interprete. 
  data State = State { d_dir      :: String,             -- directorio donde guardar las descargas
                       lfile      :: String,             -- ultimo archivo cargado
                       list       :: Env,                -- lista con todas las listas de peliculas
                       dlist      :: [String]            -- pids de los procesos que están descargando
                     }                                      -- los represento como String para no tener que importar el modulo System.Process
                                                            -- también me sirve para facilitar la función stopDownload (ver en Download.hs)
                                                         


  -- Representacion de una pelicula luego de ser evaluada. 
  data Film = Film { film_id            :: Int,
                     imdb_code          :: String,
                     title              :: String,
                     year               :: Int,
                     rating             :: Float,
                     runtime            :: Int,
                     genres             :: [String],
                     synopsis           :: String,
                     language           :: String,
                     background_image   :: String,
                     cover_image        :: String,
                     torrents           :: [Torrent]
                   } deriving (Show, Eq, Ord)

  -- Representacion de un archivo torrent luego de que la película correspondiente sea evaluada.
  data Torrent = Torrent { hash         :: String,
                           url          :: String,
                           quality      :: String,
                           seeds        :: Int,
                           peers        :: Int,
                           size         :: String
                         } deriving (Show, Eq, Ord)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2lARCj
code,"module Main where

data MyBool = MyTrue | MyFalse

foo a MyFalse b = 0
foo c MyTrue d = 1

bar a = 2

main_ = foo 1 MyFalse 2
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",acGewQ
code,"{-# LANGUAGE ConstraintKinds #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TemplateHaskell #-}

-- | This module builds Docker (OpenContainer) images.
module Stack.Image
       (stageContainerImageArtifacts, createContainerImageFromStage,
        imgCmdName, imgDockerCmdName, imgOptsFromMonoid,
        imgDockerOptsFromMonoid, imgOptsParser, imgDockerOptsParser)
       where

import           Control.Applicative
import           Control.Exception.Lifted hiding (finally)
import           Control.Monad
import           Control.Monad.Catch hiding (bracket)
import           Control.Monad.IO.Class
import           Control.Monad.Logger
import           Control.Monad.Reader
import           Control.Monad.Trans.Control
import           Data.Char (toLower)
import qualified Data.Map.Strict as Map
import           Data.Maybe
import           Data.Monoid
import qualified Data.Text as T
import           Data.Typeable
import           Options.Applicative
import           Path
import           Path.Extra
import           Path.IO
import           Stack.Constants
import           Stack.Types
import           Stack.Types.Internal
import           System.Process.Run

type Build e m = (HasBuildConfig e, HasConfig e, HasEnvConfig e, HasTerminal e, MonadBaseControl IO m, MonadCatch m, MonadIO m, MonadLogger m, MonadReader e m)

type Assemble e m = (HasConfig e, HasTerminal e, MonadBaseControl IO m, MonadCatch m, MonadIO m, MonadLogger m, MonadMask m, MonadReader e m)

-- | Stages the executables & additional content in a staging
-- directory under '.stack-work'
stageContainerImageArtifacts :: Build e m
                             => m ()
stageContainerImageArtifacts = do
    imageDir <- imageStagingDir <$> getWorkingDir
    removeTreeIfExists imageDir
    createTree imageDir
    stageExesInDir imageDir
    syncAddContentToDir imageDir

-- | Builds a Docker (OpenContainer) image extending the `base` image
-- specified in the project's stack.yaml.  Then new image will be
-- extended with an ENTRYPOINT specified for each `entrypoint` listed
-- in the config file.
createContainerImageFromStage :: Assemble e m
                              => m ()
createContainerImageFromStage = do
    imageDir <- imageStagingDir <$> getWorkingDir
    createDockerImage imageDir
    extendDockerImageWithEntrypoint imageDir

-- | Stage all the Package executables in the usr/local/bin
-- subdirectory of a temp directory.
stageExesInDir :: Build e m => Path Abs Dir -> m ()
stageExesInDir dir = do
    srcBinPath <-
        (</> $(mkRelDir ""bin"")) <$>
        installationRootLocal
    let destBinPath = dir </>
            $(mkRelDir ""usr/local/bin"")
    createTree destBinPath
    copyDirectoryRecursive srcBinPath destBinPath

-- | Add any additional files into the temp directory, respecting the
-- (Source, Destination) mapping.
syncAddContentToDir :: Build e m => Path Abs Dir -> m ()
syncAddContentToDir dir = do
    config <- asks getConfig
    bconfig <- asks getBuildConfig
    let imgAdd = maybe Map.empty imgDockerAdd (imgDocker (configImage config))
    forM_
        (Map.toList imgAdd)
        (\(source,dest) ->
              do sourcePath <- parseRelDir source
                 destPath <- parseAbsDir dest
                 let destFullPath = dir </> dropRoot destPath
                 createTree destFullPath
                 copyDirectoryRecursive
                     (bcRoot bconfig </> sourcePath)
                     destFullPath)

-- | Derive an image name from the project directory.
imageName :: Path Abs Dir -> String
imageName = map toLower . toFilePathNoTrailingSep . dirname

-- | Create a general purpose docker image from the temporary
-- directory of executables & static content.
createDockerImage :: Assemble e m => Path Abs Dir -> m ()
createDockerImage dir = do
    menv <- getMinimalEnvOverride
    config <- asks getConfig
    let dockerConfig = imgDocker (configImage config)
    case imgDockerBase =<< dockerConfig of
        Nothing -> throwM StackImageDockerBaseUnspecifiedException
        Just base -> do
            liftIO
                (writeFile
                     (toFilePath
                          (dir </>
                           $(mkRelFile ""Dockerfile"")))
                     (unlines [""FROM "" ++ base, ""ADD ./ /""]))
            callProcess
                Nothing
                menv
                ""docker""
                [ ""build""
                , ""-t""
                , fromMaybe
                      (imageName (parent (parent dir)))
                      (imgDockerImageName =<< dockerConfig)
                , toFilePathNoTrailingSep dir]

-- | Extend the general purpose docker image with entrypoints (if
-- specified).
extendDockerImageWithEntrypoint :: Assemble e m => Path Abs Dir -> m ()
extendDockerImageWithEntrypoint dir = do
    menv <- getMinimalEnvOverride
    config <- asks getConfig
    let dockerConfig = imgDocker (configImage config)
    let dockerImageName = ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Rvd70O
code,"{-# LANGUAGE OverloadedStrings,NoImplicitPrelude #-}
module TypePlay.Infer.HM where

import Prelude hiding (map,concat)

import Data.List (map,concat,nub,union,intersect)
import Data.Text (Text)
import qualified Data.Text as T

import Data.Monoid ((<>),mconcat)

type Id = Text

enumId :: Int -> Id
enumId = (""v"" <>) . T.pack . show

data Kind
  = Star
  | Kfun Kind Kind
  deriving (Eq,Show)

data Type
  = TVar Tyvar
  | TCon Tycon
  | TAp Type Type
  | TGen Int
  deriving (Eq,Show)

data Tyvar = Tyvar Id Kind
  deriving (Eq,Show)

data Tycon = Tycon Id Kind
  deriving (Eq,Show)

type Subst = [(Tyvar, Type)]

data InferenceErr
  = SubstMerge
  | Unification Type Type
  | DoesNotOccur Tyvar [Tyvar]
  | KindsDontMatch Kind Kind
  | TypesDontMatch Type Type
  | ClassMisMatch Id Id
  | NoSuperClassFound Id
  | NoInstancesOfClass Id

type Infer a = Either InferenceErr a

instance Show InferenceErr where
  show SubstMerge = ""Substitution Merge Failed""
  show (Unification t1 t2)
    = ""Unable to unify"" <> show t1 <> "" with "" <> show t2
  show (DoesNotOccur tv t)
    = show t <> "" not found in "" <> show tv
  show (KindsDontMatch k1 k2)
    = mconcat
      [ ""Incorrect Kind.\n Found (""
      , show k1
      , "").\nExpected (""
      , show k2
      ]
  show (TypesDontMatch t t')
    = mconcat
      [ ""Could not match types:\n""
      , show t
      , "" with ""
      , show t'
      ]
  show (ClassMisMatch i i')
    = mconcat
      [ ""Type Classes differ.\n Found(""
      , show i
      , ""). Expected (""
      , show i'
      , "").""
      ]
  show (NoSuperClassFound i)
    = mconcat
      [ ""No type class matching: ""
      , show i
      , "" found.""
      ]
  show (NoInstancesOfClass i)
    = mconcat
      [ ""No instances of ""
      , show i
      , "" found in current environment.""
      ]

typeConst :: Text -> Kind -> Type
typeConst i = TCon . Tycon i

tUnit    = typeConst ""()"" Star
tChar    = typeConst ""Char"" Star
tInt     = typeConst ""Int"" Star
tInteger = typeConst ""Integer"" Star
tFloat   = typeConst ""Float"" Star
tDouble  = typeConst ""Double"" Star

tList   = typeConst ""[]"" $ Kfun Star Star
tArrow  = typeConst ""(->)"" $ Kfun Star $ Kfun Star Star
tTuple2 = typeConst ""(,)"" $ Kfun Star $ Kfun Star Star

tString :: Type
tString = list tChar

infixr 4 `fn`
fn :: Type -> Type -> Type
a `fn` b = TAp (TAp tArrow a) b

list :: Type -> Type
list = TAp tList

pair :: Type -> Type -> Type
pair a b = TAp (TAp tTuple2 a) b

class HasKind t where
  kind :: t -> Kind

instance HasKind Tyvar where
  kind (Tyvar v k) = k
  
instance HasKind Tycon where
  kind (Tycon v k) = k

instance HasKind Type where
  kind (TCon tc) = kind tc
  kind (TVar u) = kind u
  kind (TAp t _) = case kind t of
                     (Kfun _ k) -> k

nullSubst :: Subst
nullSubst = []

(+->) :: Tyvar -> Type -> Subst
u +-> t = [(u,t)]

class Types t where
  apply :: Subst -> t -> t
  tv    :: t -> [Tyvar]

instance Types Type where
  apply s (TVar u) = case lookup u s of
                       Just t -> t
                       Nothing -> TVar u
  apply s (TAp l r) = TAp (apply s l) (apply s r)
  apply s t         = t
  
  tv (TVar u)  = [u]
  tv (TAp l r) = tv l `union` tv r
  tv t         = []

instance Types a => Types [a] where
  apply s = fmap (apply s)
  tv      = nub . concat . fmap tv

infixr 4 @@
(@@) :: Subst -> Subst -> Subst
s1 @@ s2 = [ (u, apply s1 t) | (u,t) <- s2] <> s1

merge :: Subst -> Subst -> Infer Subst
merge s1 s2 = if agree
  then Right $ s1 <> s2
  else Left SubstMerge
  where
    agree = all (\v -> apply s1 (TVar v) == apply s2 (TVar v))
                (gFst s1 `intersect` gFst s2)
    gFst = fmap fst

mgu :: Type -> Type -> Infer Subst
mgu (TAp l r) (TAp l' r') = do
  s1 <- mgu l l'
  s2 <- mgu (apply s1 r) (apply s1 r')
  return $ s2 @@ s1
mgu (TVar u) t            = varBind u t
mgu t (TVar u)            = varBind u t
mgu (TCon tc1) (TCon tc2)
  | tc1 == tc2 = return nullSubst
mgu t1 t2                 = Left $ Unification t1 t2

varBind :: Tyvar -> Type -> Infer Subst
varBind u t
  | t == TVar u      = return nullSubst
  | u `elem` tv t    = Left $ DoesNotOccur u $ tv t
  | kind u /= kind t = Left $ KindsDontMatch (kind u) (kind t)
  | otherwise        = return $ u +-> t

match :: Type -> Type -> Infer Subst
match (TAp l r) (TAp l' r') = do
  sl <- match l l'
  sr <- match r r'
  merge sl sr
match (TVar u) t
  | kind u == kind t = return $ u +-> t
match (TCon tcl) (TCon tcr)
  | tcl == tcr = return nullSubst
match t1 t2 = Left $ TypesDontMatch t1 t2

-- Type Classes
data Qual t = [Pred] :=> t
  deriving (Show,Eq)

data Pred = IsIn Id Type
  deriving (Show,Eq)

-- Example 'Num a => a -> Int'
-- [IsIn ""Num"" (TVar (Tyvar ""a"" Star))]
--   :=> (TVar (Tyvar ""a"" Star) 'fn' tInt)

instance Types t => Types (Qual t) where
  apply s (ps :=> t) = apply s ps :=> apply s t
  tv (ps :=> t)      = tv ps `union` tv t

instance Types Pred where
  apply s (IsIn i t) = IsIn i (apply s t)
  tv (IsIn i t)      = tv t

mguPred :: Pred -> Pred -> Infer Subst
mguPred = lift mgu

matchPred :: Pred -> Pred -> Infer Subst
matchPred = lift match

lift 
  :: (Type -> Type -> Infer ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LAPi4O
code,"module FreePalace.Handlers.Incoming where

import           Control.Concurrent
import           Control.Exception
import qualified System.Log.Logger                                 as Log

import qualified FreePalace.Domain.Chat                            as Chat
import qualified FreePalace.Domain.GUI                             as GUI
import qualified FreePalace.Domain.State                           as State
import qualified FreePalace.Domain.User                            as User
import qualified FreePalace.Media.Loader                           as MediaLoader
import qualified FreePalace.Messages.Inbound                       as InboundMessages
import qualified FreePalace.Messages.PalaceProtocol.InboundReader  as PalaceInbound
import qualified FreePalace.Net.PalaceProtocol.Connect             as Connect


-- TODO Time out if this takes too long, don't keep listening, tell the main thread.
-- TODO Make sure exceptions are caught so as not to block the main thread waiting on the MVar
initializeMessageDispatcher :: MVar State.Connected -> State.Connected -> IO ()
initializeMessageDispatcher conveyorOfStateBackToMainThread clientState =
  do
    Log.debugM ""Incoming.Message.Await"" $ ""Awaiting initial handshake with state: "" ++ (show clientState)
    header <- readHeader clientState
    Log.debugM ""Incoming.Message.Header"" (show header)
    message <- readMessage clientState header
    newState <- case message of
       InboundMessages.HandshakeMessage _ -> handleInboundEvent clientState message
       _ -> throwIO $ userError ""Connection failed. No handshake.""
    Log.debugM ""Incoming.Message.Processed"" $ ""Message processed. New state: "" ++ (show newState)
    putMVar conveyorOfStateBackToMainThread newState
    
    dispatchIncomingMessages newState
  
-- TODO Handle connection loss
dispatchIncomingMessages :: State.Connected -> IO ()
dispatchIncomingMessages clientState =
  do
    Log.debugM ""Incoming.Message.Await"" $ ""Awaiting messages with state: "" ++ (show clientState)
    header <- readHeader clientState
    Log.debugM ""Incoming.Message.Header"" (show header)
    message <- readMessage clientState header
    newState <- handleInboundEvent clientState message
    Log.debugM ""Incoming.Message.Processed"" $ ""Message processed. New state: "" ++ (show newState)
    dispatchIncomingMessages newState

readHeader :: State.Connected -> IO InboundMessages.Header
readHeader clientState =
  case State.protocolState clientState of
      State.PalaceProtocolState connection messageConverters -> PalaceInbound.readHeader connection messageConverters

readMessage :: State.Connected -> InboundMessages.Header -> IO InboundMessages.InboundMessage
readMessage clientState header =
  case State.protocolState clientState of
      State.PalaceProtocolState connection messageConverters -> PalaceInbound.readMessage connection messageConverters header

-- TODO Right now these need to be in IO because of logging and GUI changes. Separate those out.
handleInboundEvent :: State.Connected -> InboundMessages.InboundMessage -> IO State.Connected
handleInboundEvent clientState (InboundMessages.HandshakeMessage handshakeData) = handleHandshake clientState handshakeData
handleInboundEvent clientState (InboundMessages.LogonReplyMessage logonReply) = handleLogonReply clientState logonReply
handleInboundEvent clientState (InboundMessages.ServerVersionMessage serverVersion) = handleServerVersion clientState serverVersion
handleInboundEvent clientState (InboundMessages.ServerInfoMessage serverInfo) = handleServerInfo clientState serverInfo
handleInboundEvent clientState (InboundMessages.UserStatusMessage userStatus) = handleUserStatus clientState userStatus
handleInboundEvent clientState (InboundMessages.UserLogonMessage userLogonNotification) = handleUserLogonNotification clientState userLogonNotification
handleInboundEvent clientState (InboundMessages.MediaServerMessage mediaServerInfo) = handleMediaServerInfo clientState mediaServerInfo
handleInboundEvent clientState (InboundMessages.RoomDescriptionMessage roomDescription) = handleRoomDescription clientState roomDescription
handleInboundEvent clientState (InboundMessages.UserListMessage userListing) = handleUserList clientState userListing
handleInboundEvent clientState (InboundMessages.UserEnteredRoomMessage userEnteredRoom) = handleUserEnteredRoom clientState userEnteredRoom
handleInboundEvent clientState (InboundMessages.UserExitedRoomMessage userExitedRoom) = handleUserExitedRoom clientState userExitedRoom
handleInboundEvent clientState (InboundMessages.UserDisconnectedMessage userDisconnected) = handleUserDisconnected clientState userDisconnected
handleInboundEvent clientState (InboundMessages.ChatMessage chat) = handleChat clientState chat
handleInboundEvent clientState (InboundMessages.MovementMessage movementNotification) = handleMovement clientState movementNotification
handleInboundEvent clientState (InboundMessages.NoOpMessage noOp) = handleNoOp clientState noOp

handleHandshake :: State.Connected -> InboundMessages.Handshake -> IO State.Connected
handleHandshake clientState handshake = 
  do
    Lo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nK5JZ9
code,data Cont r a = Cont ((a -> r) -> r),codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6jizYP
code,"{-# LANGUAGE DataKinds                   #-}
{-# LANGUAGE DeriveGeneric               #-}
{-# LANGUAGE FlexibleInstances           #-}
{-# LANGUAGE GeneralizedNewtypeDeriving  #-}
{-# LANGUAGE LambdaCase                  #-}
{-# LANGUAGE NoImplicitPrelude           #-}
{-# LANGUAGE OverloadedStrings           #-}
{-# LANGUAGE RecordWildCards             #-}
{-# LANGUAGE TypeFamilies                #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

-- Module      : Network.AWS.ECS.DeregisterTaskDefinition
-- Copyright   : (c) 2013-2014 Brendan Hay <brendan.g.hay@gmail.com>
-- License     : This Source Code Form is subject to the terms of
--               the Mozilla Public License, v. 2.0.
--               A copy of the MPL can be found in the LICENSE file or
--               you can obtain it at http://mozilla.org/MPL/2.0/.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : experimental
-- Portability : non-portable (GHC extensions)
--
-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- | NOT YET IMPLEMENTED.
--
-- Deregisters the specified task definition. You will no longer be able to run
-- tasks from this definition after deregistration.
--
-- <http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeregisterTaskDefinition.html>
module Network.AWS.ECS.DeregisterTaskDefinition
    (
    -- * Request
      DeregisterTaskDefinition
    -- ** Request constructor
    , deregisterTaskDefinition
    -- ** Request lenses
    , dtd1TaskDefinition

    -- * Response
    , DeregisterTaskDefinitionResponse
    -- ** Response constructor
    , deregisterTaskDefinitionResponse
    -- ** Response lenses
    , dtdrTaskDefinition
    ) where

import Network.AWS.Data (Object)
import Network.AWS.Prelude
import Network.AWS.Request.JSON
import Network.AWS.ECS.Types
import qualified GHC.Exts

newtype DeregisterTaskDefinition = DeregisterTaskDefinition
    { _dtd1TaskDefinition :: Text
    } deriving (Eq, Ord, Read, Show, Monoid, IsString)

-- | 'DeregisterTaskDefinition' constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'dtd1TaskDefinition' @::@ 'Text'
--
deregisterTaskDefinition :: Text -- ^ 'dtd1TaskDefinition'
                         -> DeregisterTaskDefinition
deregisterTaskDefinition p1 = DeregisterTaskDefinition
    { _dtd1TaskDefinition = p1
    }

-- | The 'family' and 'revision' ('family:revision') or full Amazon Resource Name (ARN)
-- of the task definition that you want to deregister.
dtd1TaskDefinition :: Lens' DeregisterTaskDefinition Text
dtd1TaskDefinition =
    lens _dtd1TaskDefinition (\s a -> s { _dtd1TaskDefinition = a })

newtype DeregisterTaskDefinitionResponse = DeregisterTaskDefinitionResponse
    { _dtdrTaskDefinition :: Maybe TaskDefinition
    } deriving (Eq, Read, Show)

-- | 'DeregisterTaskDefinitionResponse' constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'dtdrTaskDefinition' @::@ 'Maybe' 'TaskDefinition'
--
deregisterTaskDefinitionResponse :: DeregisterTaskDefinitionResponse
deregisterTaskDefinitionResponse = DeregisterTaskDefinitionResponse
    { _dtdrTaskDefinition = Nothing
    }

-- | The full description of the deregistered task.
dtdrTaskDefinition :: Lens' DeregisterTaskDefinitionResponse (Maybe TaskDefinition)
dtdrTaskDefinition =
    lens _dtdrTaskDefinition (\s a -> s { _dtdrTaskDefinition = a })

instance ToPath DeregisterTaskDefinition where
    toPath = const ""/""

instance ToQuery DeregisterTaskDefinition where
    toQuery = const mempty

instance ToHeaders DeregisterTaskDefinition

instance ToJSON DeregisterTaskDefinition where
    toJSON DeregisterTaskDefinition{..} = object
        [ ""taskDefinition"" .= _dtd1TaskDefinition
        ]

instance AWSRequest DeregisterTaskDefinition where
    type Sv DeregisterTaskDefinition = ECS
    type Rs DeregisterTaskDefinition = DeregisterTaskDefinitionResponse

    request  = post ""DeregisterTaskDefinition""
    response = jsonResponse

instance FromJSON DeregisterTaskDefinitionResponse where
    parseJSON = withObject ""DeregisterTaskDefinitionResponse"" $ \o -> DeregisterTaskDefinitionResponse
        <$> o .:? ""taskDefinition""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2ypmKe
code,"-- | Specification for the exercises of Chapter 6.

module Chapter06Spec where

import qualified Chapter06       as C6

import           Data.List       (sort)
import           Data.Proxy
import           Test.Hspec      (Spec, describe, it, shouldBe)
import           Test.QuickCheck (Arbitrary (..), Property, property, (.&.),
                                  (===), (==>))

checkEquivalence :: (Arbitrary a, Show a, Show b, Eq b)
                 => Proxy a -> (a -> b) -> (a -> b) -> Property
checkEquivalence _ f g = property $ \x -> f x === g x

newtype IncreasingList a = IL { incList :: [a] } deriving (Eq, Show)

newtype NonEmptyList a = NEL { list :: [a] } deriving (Eq, Show)

instance (Ord a, Arbitrary a) => Arbitrary (IncreasingList a) where
  arbitrary = IL . sort <$> arbitrary

instance (Arbitrary a) => Arbitrary (NonEmptyList a) where
  arbitrary = do
    x <- arbitrary
    xs <- arbitrary
    return $ NEL (x:xs)

checkIndex :: Int -> Property
checkIndex i = checkEquivalence (Proxy :: Proxy (NonEmptyList Double))
               (apply (!!) i) (apply (C6.!!) i)
  where apply f j (NEL xs) = f xs j'
          where j' = (abs j) `min` (length xs - 1)

type TwoIncreasingLists = (IncreasingList Double, IncreasingList Double)

spec :: Spec
spec = do
  describe ""Exercise 1: define a function that"" $ do

    describe ""returns true iff all logical values in a list are true"" $ do

        it ""returns True for the empty list"" $ do
          C6.and ([]:: [Bool]) `shouldBe` True

        it ""returns True if only True is in the list"" $ do
          C6.and [True] `shouldBe` True

        it ""returns False if only False is in the list"" $ do
          C6.and [False] `shouldBe` False

        it ""returns False if any value is False"" $ do
          C6.and [True, False, False] `shouldBe` False
          C6.and [False, True, True] `shouldBe` False

        it ""returns True if all values are True"" $ do
          C6.and [True, True, True ] `shouldBe` True

        it ""behaves equivalent to and"" $
          checkEquivalence (Proxy :: Proxy [Bool]) and C6.and

    describe ""concatenates a list of lists"" $ do

        it ""returns empty list for the empty list"" $ do
          C6.concat ([] :: [[Int]]) `shouldBe` []

        it ""returns the list for a list of only one list"" $ do
          C6.concat ([[1,2,3]] :: [[Int]]) `shouldBe` [1,2,3]

        it ""returns the concatenation of the list in the list"" $ do
          C6.concat ([[1,2,3], [4,5,6], [7,8,9]] :: [[Int]]) `shouldBe` [1,2,3,4,5,6,7,8,9]

        it ""behaves equivalent to concat"" $
          checkEquivalence (Proxy :: Proxy [String]) concat C6.concat

    describe ""produces a list with n identical elements"" $ do

        it ""returns empty list for n < 0"" $ do
          C6.replicate 0 True `shouldBe` []
          C6.replicate 0 'a' `shouldBe` []
          C6.replicate (-10::Int) True `shouldBe` []

        it ""returns a list with 1 element for n = 1"" $ do
          C6.replicate 1 13 `shouldBe` [13]

        it ""returns a list with n times the same element"" $ do
          C6.replicate 3 'a' `shouldBe` ""aaa""
          C6.replicate 2 (13::Int) `shouldBe` [13,13]

        it ""behaves equivalent to replicate"" $ property $ \i ->
          checkEquivalence (Proxy :: Proxy Char) (replicate i) (C6.replicate i)

    describe ""selects the nth element of a list"" $ do

        it ""returns the element if n=0 and there is only one element"" $ do
           ['a'] C6.!! 0 `shouldBe` 'a'

        it ""returns the element if nth element"" $ do
          ""abcd"" C6.!! 2 `shouldBe` 'c'

        it ""behaves equivalent to !!"" $ property $ checkIndex

    describe ""decides if an element is in a list"" $ do

        it ""returns False if the list is empty"" $ do
          C6.elem 'a' [] `shouldBe` False

        it ""returns True if the element is in the list"" $ do
          C6.elem 'a' ""dcba"" `shouldBe` True

        it ""returns False if the element is not in the list"" $ do
          C6.elem 'e' ""dcba"" `shouldBe` False

        it ""behaves equivalent to elem"" $ property $ \str ->
          checkEquivalence (Proxy :: Proxy [String]) (str `elem`) (str `C6.elem`)

  describe ""Exercise 2: define a recursive function that"" $ do

    describe ""merges two sorted lists of values to give a single sorted list"" $ do

        it ""returns the empty list if both lists are empty"" $ do
          C6.merge ([]::[Int]) ([]::[Int]) `shouldBe` []

        it ""returns the other list if one of both lists is empty"" $ do
          C6.merge ""foo"" """" `shouldBe` ""foo""
          C6.merge """" ""foo"" `shouldBe` ""foo""

        it ""merges the two lists"" $ do
          C6.merge ""foo"" ""abr"" `shouldBe` ""abfoor""

        it ""behaves equivalent to sort"" $
          checkEquivalence (Proxy :: Proxy TwoIncreasingLists)
            (\(xs, ys) ->  C6.merge (incList xs) (incList ys))
            (\(xs, ys) -> sort (incList xs ++ incList ys))

  describe ""Exercise 3"" $ do

    it ""returns the empty list if the list is empty"" $ do
      C6.msort ([]::[Int]) `shouldBe` []

    it ""returns the list if the has length 1"" $ do
      C6.msort ""a"" `shouldBe` ""a""

    it ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GxKNlK
code,"module Utils where

import           Import       hiding (group)
import           Data.Char           (isSpace)
import           Data.Conduit.Binary (sinkLbs)
import qualified Data.ByteString.Lazy.Char8 as LB8
import qualified Data.HashMap.Strict        as M
import qualified Data.List                  as L
-- import           Data.Hashable

stringFields :: Int -> String -> Either String [String]
stringFields n s
  | length xs == n = Right xs
  | otherwise      = Left err
  where
    xs             = stringFields' s
    err            = s ++ "" does not have "" ++ show n ++ "" fields!""

stringFields' :: String -> [String]
stringFields' s = snipSpaces <$> (splitOn ',' s)

splitOn :: (Eq a) => a -> [a] -> [[a]]
splitOn _ []     = [[]]
splitOn x (y:ys)
  | x == y       = [] : splitOn x ys
  | otherwise    = (y:zs) : zss where zs:zss = splitOn x ys

snipSpaces :: String -> String
snipSpaces = reverse . dropWhile isSpace . reverse . dropWhile isSpace

fileLines :: FileInfo -> IO [String]
fileLines file = do
  bytes <- runResourceT $ fileSource file $$ sinkLbs
  return (lines . LB8.unpack $ bytes)

textString :: (IsString a) => Text -> a
textString = fromString . unpack

group :: (Eq k, Hashable k) => [(k, v)] -> M.HashMap k [v]
group = groupBase M.empty

groupBase :: (Eq k, Hashable k) => M.HashMap k [v] -> [(k, v)] -> M.HashMap k [v]
groupBase = L.foldl' (\m (k, v) -> inserts k v m)

groupList :: (Eq k, Hashable k) => [(k, v)] -> [(k, [v])]
groupList = M.toList . group

groupBy   :: (Eq k, Hashable k) => (a -> k) -> [a] -> M.HashMap k [a]
groupBy f = L.foldl' (\m x -> inserts (f x) x m) M.empty

inserts ::  (Eq k, Hashable k) => k -> v -> M.HashMap k [v] -> M.HashMap k [v]
inserts k v m = M.insert k (v : M.lookupDefault [] k m) m
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UdA4wf
code,"{-# LANGUAGE CPP, ScopedTypeVariables #-}
--
-- (c) The University of Glasgow 2002
--
-- Binary I/O library, with special tweaks for GHC
--
-- Based on the nhc98 Binary library, which is copyright
-- (c) Malcolm Wallace and Colin Runciman, University of York, 1998.
-- Under the terms of the license for that software, we must tell you
-- where you can obtain the original version of the Binary library, namely
--     http://www.cs.york.ac.uk/fp/nhc98/

module Binary
  ( {-type-}  Bin,
    {-class-} Binary(..),
    {-type-}  BinHandle,

   openBinIO, openBinIO_,
   openBinMem,
--   closeBin,

   seekBin,
   tellBin,
   castBin,

   writeBinMem,
   readBinMem,

   isEOFBin,

   -- for writing instances:
   putByte,
   getByte,
   putSharedString,
   getSharedString,

   -- lazy Bin I/O
   lazyGet,
   lazyPut,

#if __GLASGOW_HASKELL__<610
   -- GHC only:
   ByteArray(..),
   getByteArray,
   putByteArray,
#endif

   getBinFileWithDict,  -- :: Binary a => FilePath -> IO a
   putBinFileWithDict,  -- :: Binary a => FilePath -> ModuleName -> a -> IO ()

  ) where

#if __GLASGOW_HASKELL__>=604
#include ""ghcconfig.h""
#else
#include ""config.h""
#endif

import FastMutInt

import Map (Map)
import qualified Map as Map
#if __GLASGOW_HASKELL__>=602
# if __GLASGOW_HASKELL__>=707
import Data.HashTable.Class as HashTable
              (HashTable)
import Data.HashTable.IO as HashTable
              (BasicHashTable, toList, new, insert, lookup)
# else
import Data.HashTable as HashTable
# endif
#endif
import Data.Array.IO
import Data.Array
import Data.Bits
import Data.Int
import Data.Word
import Data.IORef
import Data.Char                ( ord, chr )
import Data.Array.Base          ( unsafeRead, unsafeWrite )
import Control.Monad            ( when, liftM )
import System.IO as IO
import System.IO.Unsafe         ( unsafeInterleaveIO )
import System.IO.Error          ( mkIOError, eofErrorType )
import GHC.Real                 ( Ratio(..) )
import GHC.Exts
# if __GLASGOW_HASKELL__>=612
import GHC.IO     (IO(IO))
#else
import GHC.IOBase (IO(IO))
#endif
import GHC.Word                 ( Word8(..) )
# if __GLASGOW_HASKELL__<602
import GHC.Handle               ( hSetBinaryMode )
# endif
-- for debug
import System.CPUTime           (getCPUTime)
import Numeric                  (showFFloat)

#define SIZEOF_HSINT SIZEOF_VOID_P

type BinArray = IOUArray Int Word8

---------------------------------------------------------------
--              BinHandle
---------------------------------------------------------------

data BinHandle
  = BinMem {            -- binary data stored in an unboxed array
     bh_usr :: UserData,        -- sigh, need parameterized modules :-)
     off_r :: !FastMutInt,              -- the current offset
     sz_r  :: !FastMutInt,              -- size of the array (cached)
     arr_r :: !(IORef BinArray)         -- the array (bounds: (0,size-1))
    }
        -- XXX: should really store a ""high water mark"" for dumping out
        -- the binary data to a file.

  | BinIO {             -- binary data stored in a file
     bh_usr :: UserData,
     off_r :: !FastMutInt,              -- the current offset (cached)
     hdl   :: !IO.Handle                -- the file handle (must be seekable)
   }
        -- cache the file ptr in BinIO; using hTell is too expensive
        -- to call repeatedly.  If anyone else is modifying this Handle
        -- at the same time, we'll be screwed.

getUserData :: BinHandle -> UserData
getUserData bh = bh_usr bh

setUserData :: BinHandle -> UserData -> BinHandle
setUserData bh us = bh { bh_usr = us }


---------------------------------------------------------------
--              Bin
---------------------------------------------------------------

newtype Bin a = BinPtr Int
  deriving (Eq, Ord, Show, Bounded)

castBin :: Bin a -> Bin b
castBin (BinPtr i) = BinPtr i

---------------------------------------------------------------
--              class Binary
---------------------------------------------------------------

class Binary a where
    put_   :: BinHandle -> a -> IO ()
    put    :: BinHandle -> a -> IO (Bin a)
    get    :: BinHandle -> IO a

    -- define one of put_, put.  Use of put_ is recommended because it
    -- is more likely that tail-calls can kick in, and we rarely need the
    -- position return value.
    put_ bh a = do put bh a; return ()
    put bh a  = do p <- tellBin bh; put_ bh a; return p

putAt  :: Binary a => BinHandle -> Bin a -> a -> IO ()
putAt bh p x = do seekBin bh p; put bh x; return ()

getAt  :: Binary a => BinHandle -> Bin a -> IO a
getAt bh p = do seekBin bh p; get bh

openBinIO_ :: IO.Handle -> IO BinHandle
openBinIO_ h = openBinIO h

openBinIO :: IO.Handle -> IO BinHandle
openBinIO h = do
  r <- newFastMutInt
  writeFastMutInt r 0
  return (BinIO noUserData r h)

openBinMem :: Int -> IO BinHandle
openBinMem size
 | size <= 0 = error ""Data.Binary.openBinMem: size must be >= 0""
 | otherwise = do
   arr <- newArray_ (0,size-1)
   arr_r <- newIORef arr
   ix_r <- newFastMutInt
   writeFastMutInt ix_r 0
   sz_r <- newFastMutInt
   writeFastMutInt sz_r size
   return (BinMem",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RitmqL
code,"-- | Utility functions for dealing with the conversion of Output to Xml

module Util.Xml.Output (
    outputToXmlString,
    stringToXmlString,
    xmlStringToOutput,
    outputToXOutput
) where

import qualified Util.Xml.OutputDTD as X
import qualified Autolib.Output as O

import Util.Xml.Representation

-- import Text.PrettyPrint.HughesPJ hiding (style)
import qualified Autolib.Multilingual as M
import qualified Autolib.Multilingual.Html as H
-- import qualified Text.Blaze.Html.Renderer.String
-- import qualified Text.Blaze.Html.Renderer.Utf8

import qualified Autolib.Multilingual.Doc as D
import Data.String ( fromString )

-- import qualified Codec.Binary.Base64 as C
import qualified Data.ByteString.Base64 as BB
import qualified Data.ByteString as B
import qualified Data.ByteString.Char8 as BC
import System.FilePath
import Control.Applicative
import Data.Maybe
import Data.Text (unpack)

import Util.Png

outputToXOutput :: M.Language -> O.Output -> IO X.Output
outputToXOutput lang o = case o of
    O.Empty ->
        return $ X.OBeside $ X.Beside []
    O.Doc doc ->
        outputToXOutput lang $ O.Pre doc
    O.Pre doc ->
        return $ X.OPre $ X.Pre $ D.render_for lang doc
    O.String txt ->
        return $ X.OText $ X.Text txt
    O.Text txt ->
        return $ X.OText $ X.Text $ Data.Text.unpack txt
    O.Image file (O.Hidden contents) -> do
        let ext = drop 1 $ snd $ splitExtension file
        contents' <- contents
        let (w, h) = case ext of
                ""png"" -> (pngSize contents')
                _     -> (0, 0)
            img = BC.unpack $ BB.encode contents'
        return $ X.OImage $
            X.Image (X.Image_Attrs { X.imageType = ext,
                                     X.imageAlt = ""<image>"",
                                     X.imageUnit = ""px"",
                                     X.imageWidth = show w,
                                     X.imageHeight = show h })
                    img
    O.Link uri ->
        outputToXOutput lang (O.Named_Link uri uri)
    O.Named_Link txt uri ->
        return $ X.OLink $ X.Link (X.Link_Attrs { X.linkHref = uri }) txt
        
    O.HRef uri o1 -> do
        -- FIXME
        -- outputToXOutput $ O.Above ( O.Link uri ) o1
        outputToXOutput lang o1
        
    O.Above o1 o2 ->
        X.OAbove . X.Above <$> mapM (outputToXOutput lang) (aboves o1 ++ aboves o2)
    O.Beside o1 o2 ->
        X.OBeside . X.Beside <$> mapM (outputToXOutput lang) (besides o1 ++ besides o2)
    O.Itemize os ->
        X.OItemize . X.Itemize <$> mapM (outputToXOutput lang) os
    O.Nest o' ->
        X.OBeside . X.Beside <$> sequence [return nestSpacing, outputToXOutput lang o']
    O.Figure a b ->
        X.OFigure <$> (X.Figure <$> outputToXOutput lang a <*> outputToXOutput lang b)


xoutputToOutput :: X.Output -> O.Output
xoutputToOutput o = case o of
   X.OPre  (X.Pre  txt) -> O.Pre (D.text txt)
   X.OText (X.Text txt) -> O.String txt
   X.OImage (X.Image _ img) ->
       O.Image (mkData img) (O.Hidden $ return $ BB.decodeLenient $ fromString img)
   X.OLink (X.Link (X.Link_Attrs { X.linkHref = uri }) txt) ->
       O.Named_Link txt uri
   X.OAbove (X.Above []) -> O.Empty
   X.OAbove (X.Above xs) -> foldl1 O.Above $ map xoutputToOutput xs
   X.OBeside (X.Beside []) -> O.Empty

   -- handle special shape that is produce by  outputToXOutput (Nest this)
   X.OBeside (X.Beside [ X.OSpace{}, this ]) -> O.Nest $ xoutputToOutput this

   X.OBeside (X.Beside xs) -> foldl1 O.Beside $ map xoutputToOutput xs
   X.OItemize (X.Itemize xs) -> O.Itemize $ map xoutputToOutput xs
   X.OSpace _ -> O.Empty -- FIXME
   X.OFigure (X.Figure a b) -> O.Figure (xoutputToOutput a) (xoutputToOutput b)


mkData = (""data:image/png;base64,"" ++)

wrapXOutput :: X.Output -> Document ()
wrapXOutput o = let [CElem e _] = toContents o in
    Document (Prolog (Just (XMLDecl ""1.0"" Nothing Nothing)) [] Nothing [])
             emptyST e []

-- FIXME: this should go to Bytestring or Text instead
xmlToString :: Document () -> String
xmlToString = renderDocument_via_Doc 

outputToXmlString ::  M.Language -> O.Output -> IO String
outputToXmlString lang = fmap (xmlToString . wrapXOutput) . outputToXOutput lang

xmlStringToOutput :: String -> O.Output
xmlStringToOutput = xoutputToOutput . either error id . readXml

stringToXmlString :: String -> String
stringToXmlString = xmlToString . wrapXOutput . X.OText . X.Text

-- helpers for outputToXOutput
nestSpacing :: X.Output
nestSpacing = X.OSpace $ X.Space {
    X.spaceWidth = ""4"",
    X.spaceHeight = ""0"",
    X.spaceUnit = ""em"" }

besides :: O.Output -> [O.Output]
besides (O.Beside a b) = besides a ++ besides b
besides a = [a]

aboves :: O.Output -> [O.Output]
aboves (O.Above a b) = aboves a ++ aboves b
aboves a = [a]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FKXc4T
code,"szachy is xD

mialo byc warcaby xD

w erlangu zrobic strange sort itp.. wszysstko to co w haskelu",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EkLxmJ
code,"{-# LANGUAGE TemplateHaskell #-}
{-# OPTIONS_GHC -Wall #-}
module Bug where

import Language.Haskell.TH

-- Warnings should be preserved through recover
main :: IO ()
main = putStrLn $(recover (stringE ""splice failed"")
                          [| let x = ""a"" in let x = ""b"" in x |])
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",T4hQtw
code,"module Physics.ImplicitEMC () where

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oB3PpI
code,"predecessor = predecessor
successor :: Bool
successor = successor
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cvcd1S
code,"{-# LANGUAGE Rank2Types #-}
-----------------------------------------------------------------------------
-- |
-- Module     : Data.Choose.ST
-- Copyright  : Copyright (c) , Patrick Perry <patperry@stanford.edu>
-- License    : BSD3
-- Maintainer : Patrick Perry <patperry@stanford.edu>
-- Stability  : experimental
--
-- Mutable combinations in the 'ST' monad.

module Data.Choose.ST (
    -- * Combinations
    STChoose,
    runSTChoose,
    
    -- * Overloaded mutable combination interface
    module Data.Choose.MChoose
    ) where

import Control.Monad.ST

import Data.Choose.Base( Choose, STChoose, unsafeFreezeSTChoose )
import Data.Choose.MChoose

-- | A safe way to create and work with a mutable combination before returning 
-- an immutable one for later perusal. This function avoids copying the 
-- combination before returning it - it uses unsafeFreeze internally, but this 
-- wrapper is a safe interface to that function. 
runSTChoose :: (forall s. ST s (STChoose s)) -> Choose
runSTChoose c = runST (c >>= unsafeFreezeSTChoose)
{-# INLINE runSTChoose #-}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0Ew4XW
code,"module Yesod.Helpers.Yaml (
    module Yesod.Helpers.Yaml
    , DefaultEnv(..)
    ) where

import Prelude
import Data.Yaml
import Yesod
import Data.Text                            (Text)
import Data.Aeson                           (withObject)
import qualified Data.Text                  as T
import Data.Maybe                           (isJust)
import Data.List                            (find)
import Yesod.Default.Config                 (DefaultEnv(..))

import Yesod.Helpers.Aeson


-- | check whether a string is in the list identified by a key string
-- some special strings:
-- __any__ will match any string
--
-- example yaml like this
-- Develpment:
--   dangerous-op: foo bar
--   simple-op:
--     - foo
--     - bar
--   safe-op: __any__
checkInListYaml ::
    (Show config, MonadIO m, MonadLogger m) =>
    FilePath
    -> config       -- ^ config section: Develpment/Production/...
    -> Text         -- ^ the key
    -> Text         -- ^ the name looking for
    -> m Bool
checkInListYaml fp c key name = do
    checkInListYaml' fp c key (== name)


checkInListYaml' ::
    (Show config, MonadIO m, MonadLogger m) =>
    FilePath
    -> config       -- ^ config section: Develpment/Production/...
    -> Text         -- ^ the key
    -> (Text -> Bool)   -- ^ the name looking for
    -> m Bool
checkInListYaml' fp c key chk_name = do
    result <- liftIO $ decodeFileEither fp
    case result of
        Left ex -> do
                    $(logError) $ T.pack $
                        ""failed to parse YAML file "" ++ show fp ++ "": "" ++ show ex
                    return False
        Right v -> do
                    case parseEither look_for_names v of
                        Left err -> do
                                $(logError) $ T.pack $
                                    ""YAML "" ++ show fp
                                            ++ "" contains invalid content: ""
                                            ++ show err
                                return False
                        Right names -> return $ isJust $ find match names
    where
        look_for_names = withObject ""section-mapping"" $ \obj -> do
            obj .:? (T.pack $ show c)
                >>= maybe (return [])
                    (\section -> do
                        section .:? key >>=
                                    maybe (return []) (parseWordList' ""words"")
                    )

        match x = if x == ""__any__""
                    then True
                    else chk_name x
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2JDHBR
code,"-- The task is to refactor given functions into more Haskell idiomatic style

------------------------ (1) ----------------------------
-- Before:
fun1 :: [Integer] -> Integer
fun1 [] = 1
fun1 (x:xs)
   | even x = (x - 2) * fun1 xs
   | otherwise = fun1 xs

-- After:
fun1' :: [Integer] -> Integer
fun1' = product . map (subtract 2) . (filter even)

------------------------ (2) ----------------------------
-- Before:
fun2 :: Integer -> Integer
fun2 1 = 0
fun2 n | even n = n + fun2 (n `div` 2) 
       | otherwise = fun2 (3 * n + 1)

-- After
fun2' :: Integer -> Integer
fun2' = sum
         .filter even
         .takeWhile (>1)
         .iterate (\x -> if (even x) then (x `div` 2) else (3*x + 1))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6KhjZr
code,"{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards   #-}
{-# LANGUAGE DeriveGeneric #-}
module Codec.Xlsx.Types.Internal.CommentTable where

import Data.ByteString.Lazy (ByteString)
import qualified Data.ByteString.Lazy as LB
import qualified Data.ByteString.Lazy.Char8 as LBC8
import Data.List.Extra (nubOrd)
import Data.Map (Map)
import qualified Data.Map as M
import Data.Text (Text)
import Data.Text.Lazy (toStrict)
import qualified Data.Text.Lazy.Builder as B
import qualified Data.Text.Lazy.Builder.Int as B
import GHC.Generics (Generic)
import Safe
import Text.XML
import Text.XML.Cursor

import Codec.Xlsx.Parser.Internal
import Codec.Xlsx.Types.Comment
import Codec.Xlsx.Types.Common
import Codec.Xlsx.Writer.Internal

newtype CommentTable = CommentTable
    { _commentsTable :: Map CellRef Comment }
    deriving (Eq, Show, Generic)

fromList :: [(CellRef, Comment)] -> CommentTable
fromList = CommentTable . M.fromList

toList :: CommentTable -> [(CellRef, Comment)]
toList = M.toList . _commentsTable

lookupComment :: CellRef -> CommentTable -> Maybe Comment
lookupComment ref = M.lookup ref . _commentsTable

instance ToDocument CommentTable where
  toDocument = documentFromElement ""Sheet comments generated by xlsx""
             . toElement ""comments""

instance ToElement CommentTable where
  toElement nm (CommentTable m) = Element
      { elementName       = nm
      , elementAttributes = M.empty
      , elementNodes      = [ NodeElement $ elementListSimple ""authors"" authorNodes
                            , NodeElement . elementListSimple ""commentList"" $ map commentToEl (M.toList m) ]
      }
    where
      commentToEl (ref, Comment{..}) = Element
          { elementName = ""comment""
          , elementAttributes = M.fromList [ (""ref"" .= ref)
                                           , (""authorId"" .= lookupAuthor _commentAuthor)]
          , elementNodes      = [NodeElement $ toElement ""text"" _commentText]
          }
      lookupAuthor a = fromJustNote ""author lookup"" $ M.lookup a authorIds
      authorNames = nubOrd . map _commentAuthor $ M.elems m
      decimalToText :: Integer -> Text
      decimalToText = toStrict . B.toLazyText . B.decimal
      authorIds = M.fromList $ zip authorNames (map decimalToText [0..])
      authorNodes = map (elementContent ""author"") authorNames

instance FromCursor CommentTable where
  fromCursor cur = do
    let authorNames = cur $/ element (n_ ""authors"") &/ element (n_ ""author"") >=> contentOrEmpty
        authors = M.fromList $ zip [0..] authorNames
        items = cur $/ element (n_ ""commentList"") &/ element (n_ ""comment"") >=> parseComment authors
    return . CommentTable $ M.fromList items

parseComment :: Map Int Text -> Cursor -> [(CellRef, Comment)]
parseComment authors cur = do
    ref <- fromAttribute ""ref"" cur
    txt <- cur $/ element (n_ ""text"") >=> fromCursor
    authorId <- cur $| attribute ""authorId"" >=> decimal
    let author = fromJustNote ""authorId"" $ M.lookup authorId authors
    return (ref, Comment txt author True)

-- | helper to render comment baloons vml file,
-- currently uses fixed shape
renderShapes :: CommentTable -> ByteString
renderShapes (CommentTable m) = LB.concat
    [ ""<xml xmlns:v=\""urn:schemas-microsoft-com:vml\"" ""
    , ""xmlns:o=\""urn:schemas-microsoft-com:office:office\"" ""
    , ""xmlns:x=\""urn:schemas-microsoft-com:office:excel\"">""
    , commentShapeType
    , LB.concat commentShapes
    , ""</xml>""
    ]
  where
    commentShapeType = LB.concat
        [ ""<v:shapetype id=\""baloon\"" coordsize=\""21600,21600\"" o:spt=\""202\"" ""
        , ""path=\""m,l,21600r21600,l21600,xe\"">""
        , ""<v:stroke joinstyle=\""miter\""></v:stroke>""
        , ""<v:path gradientshapeok=\""t\"" o:connecttype=\""rect\""></v:path>""
        , ""</v:shapetype>""
        ]
    fromRef = fromJustNote ""Invalid comment ref"" . fromSingleCellRef
    commentShapes = [ commentShape (fromRef ref) (_commentVisible cmnt)
                    | (ref, cmnt) <- M.toList m ]
    commentShape (r, c) v = LB.concat
        [ ""<v:shape type=\""#baloon\"" ""
        , ""style=\""position:absolute;width:auto"" -- ;width:108pt;height:59.25pt""
        , if v then """" else "";visibility:hidden""
        , ""\"" fillcolor=\""#ffffe1\"" o:insetmode=\""auto\"">""
        , ""<v:fill color2=\""#ffffe1\""></v:fill><v:shadow color=\""black\"" obscured=\""t\""></v:shadow>""
        , ""<v:path o:connecttype=\""none\""></v:path><v:textbox style=\""mso-direction-alt:auto\"">""
        , ""<div style=\""text-align:left\""></div></v:textbox>""
        , ""<x:ClientData ObjectType=\""Note\"">""
        , ""<x:MoveWithCells></x:MoveWithCells><x:SizeWithCells></x:SizeWithCells>""
        , ""<x:Anchor>4, 15, 0, 7, 6, 31, 5, 1</x:Anchor><x:AutoFill>False</x:AutoFill>""
        , ""<x:Row>""
        , LBC8.pack $ show (r - 1)
        , ""</x:Row>""
        , ""<x:Column>""
        , LBC8.pack $ show (c - 1)
        , ""</x:Column>""
        , ""</x:ClientData>""
        , ""</v:shape>""
        ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZmPKnm
code,"-- | To represent a ""package-name.cabal"" file.
--   We only care about the dependencies, but we also need to preserve
--   everything else (including the whitespace!) because we will write the file
--   back to disk and we don't want to obliterate the user's indentation style.
module CabalFile.Types where

import Data.Either
import Distribution.Package
import Distribution.Version


-- The Cabal library already has the type Distribution.PackageDescription, and
-- it already has a parser and a pretty-printer. However, we cannot use that
-- representation because we need to keep the whitespace information intact.
type Cabal = [Either String Dependency]

dependencies :: Cabal -> [Dependency]
dependencies = rights

packages :: Cabal -> [PackageName]
packages = map package . dependencies
  where
    package :: Dependency -> PackageName
    package (Dependency p _) = p

-- Replace the given dependencies
(//) :: Cabal -> [(PackageName, VersionRange)] -> Cabal
[] // _ = []
(Left s:xs) // ds = Left s : (xs // ds)
(Right (Dependency p v):xs) // ds = case lookup p ds of
    Nothing -> Right (Dependency p v)  : (xs // ds)
    Just v' -> Right (Dependency p v') : (xs // ds)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ClzVS0
code,"import Test.Hspec
import Control.Comonad.Cofree.Cofreer.Spec
import Control.Monad.Free.Freer.Spec
import GL.Shader.Spec
import UI.Layout.Spec

main :: IO ()
main = hspec . parallel $ do
  describe ""Control.Comonad.Cofree.Cofreer.Spec"" Control.Comonad.Cofree.Cofreer.Spec.spec
  describe ""Control.Monad.Free.Freer.Spec"" Control.Monad.Free.Freer.Spec.spec
  describe ""GL.Shader.Spec"" GL.Shader.Spec.spec
  describe ""UI.Layout.Spec"" UI.Layout.Spec.spec
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tMY2V8
code,"package stream.flarebot.flarebot.mod.modlog;

public enum ModAction {

    BAN(true, ModlogEvent.USER_BANNED),
    SOFTBAN(true, ModlogEvent.USER_SOFTBANNED),
    FORCE_BAN(true, ModlogEvent.USER_BANNED),
    TEMP_BAN(true, ModlogEvent.USER_TEMP_BANNED),
    UNBAN(false, ModlogEvent.USER_UNBANNED),

    KICK(true, ModlogEvent.USER_KICKED),

    TEMP_MUTE(true, ModlogEvent.USER_TEMP_MUTED),
    MUTE(true, ModlogEvent.USER_MUTED),
    UNMUTE(false, ModlogEvent.USER_UNMUTED),

    WARN(true, ModlogEvent.USER_WARNED);

    private boolean infraction;
    private ModlogEvent event;

    ModAction(boolean infraction, ModlogEvent modlogEvent) {
        this.infraction = infraction;
        this.event = modlogEvent;
    }

    public boolean isInfraction() {
        return infraction;
    }

    @Override
    public String toString() {
        return name().charAt(0) + name().substring(1).toLowerCase().replaceAll(""_"", "" "");
    }

    public String getLowercaseName() {
        return toString().toLowerCase();
    }

    public ModlogEvent getEvent() {
        return event;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",maYA6b
code,"package org.nem.core.model;

import org.nem.core.utils.ArrayUtils;

import java.util.Comparator;

/**
 * A custom comparator for comparing MultisigSignatureTransaction objects.
 * <br>
 * This comparator only looks at the transaction signer and other hash.
 */
public class MultisigSignatureTransactionComparator implements Comparator<MultisigSignatureTransaction> {

	@Override
	public int compare(final MultisigSignatureTransaction lhs, final MultisigSignatureTransaction rhs) {
		final Address lhsAddress = lhs.getSigner().getAddress();
		final Address rhsAddress = rhs.getSigner().getAddress();
		final int addressCompareResult = lhsAddress.compareTo(rhsAddress);
		if (addressCompareResult != 0) {
			return addressCompareResult;
		}

		return ArrayUtils.compare(lhs.getOtherTransactionHash().getRaw(), rhs.getOtherTransactionHash().getRaw());
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rkLUA4
code,"package io.blitz.curl.exception;

/**
 * Exceptions thrown when a validation error occur during a test execution
 * @author ghermeto
 */
public class ValidationException extends BlitzException {

    /**
     * Constructs an instance of <code>ValidationException</code> with the 
     * specified error and reason message.
     * @param reason the detailed error message.
     */
    public ValidationException(String reason) {
        super(""validation"", reason);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZUP-9K
code,"/**
 * CircularLinkedList implementation
 * @author Tyler Smith
 * @version 1.0
 */
public class CircularLinkedList<T> implements LinkedListInterface<T> {

    private Node<T> head = null, tail = head;

    private int size = 0;

    @Override
    public void addAtIndex(int index, T data) {
        if (index < 0 || index > this.size()) {
            throw new IndexOutOfBoundsException();
        }
        if (index == 0) {
            this.addToFront(data);
        } else if (index == this.size()) {
            this.addToBack(data);
        } else {
            Node<T> current = head;
            if (index == 1) {
                current.setNext(new Node<T>(data, current.getNext()));
            } else {
                for (int i = 0; i < index - 1; i++) {
                    current = current.getNext();
                }
                Node<T> temp = current;
                current = new Node<T>(data, temp);
            }
            size++;
        }
    }

    @Override
    public T get(int index) {
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException();
        }
        Node<T> current = head;
        for (int i = 0; i < index; i++) {
            current = current.getNext();
        }
        return current.getData();
    }

    @Override
    public T removeAtIndex(int index) {
        if (index < 0 || index >= this.size()) {
            throw new IndexOutOfBoundsException();
        }
        if (index == 0) {
            T data = head.getData();
            head = head.getNext();
            tail.setNext(head);
            size--;
            return data;
        } else {
            Node<T> before = tail;
            Node<T> current = head;
            for (int i = 0; i < index; i++) {
                before = current;
                current = current.getNext();
            }
            T data = current.getData();
            before.setNext(current.getNext());
            size--;
            return data;
        }
    }

    @Override
    public void addToFront(T t) {
        if (this.isEmpty()) {
            head = new Node<T>(t, tail);
            tail = head;
            tail.setNext(head);
            size++;
            return;
        }
        Node<T> node = new Node<T>(t, head);
        head = node;
        tail.setNext(head);
        size++;
    }

    @Override
    public void addToBack(T t) {
        if (this.isEmpty()) {
            tail = new Node<T>(t);
            head = tail;
            tail.setNext(head);
            head.setNext(tail);
            size++;
        } else {
            Node<T> temp = tail;
            tail = new Node<T>(t, head);
            temp.setNext(tail);
            size++;
        }
    }

    @Override
    public T removeFromFront() {
        if (this.isEmpty()) {
            return null;
        }
        Node<T> ret = head;
        head = head.getNext();
        tail.setNext(head);
        size--;
        return ret.getData();
    }

    @Override
    public T removeFromBack() {
        if (this.isEmpty()) {
            return null;
        }
        Node<T> iterate = head;
        while (iterate.getNext() != tail) {
            iterate = iterate.getNext();
        }
        iterate.setNext(head);
        Node<T> ret = tail;
        tail = iterate;
        size--;
        return ret.getData();
    }

    @SuppressWarnings(""unchecked"")
    @Override
    public T[] toList() {
        Object[] list = new Object[this.size()];
        int i = 0;
        Node<T> current = head;
        while (i < this.size()) {
            list[i] = current.getData();
            current = current.getNext();
            i++;
        }
        return ((T[]) list);
    }

    @Override
    public boolean isEmpty() {
        return (this.size() == 0);
    }

    @Override
    public int size() {
        return size;
    }

    @Override
    public void clear() {
        head = null;
        tail = null;
        size = 0;
    }

    /**
     * Reference to the head node of the linked list.
     * Normally, you would not do this, but we need it
     * for grading your work.
     *
     * @return Node representing the head of the linked list
     */
    public Node<T> getHead() {
        return head;
    }

    /**
     * Reference to the tail node of the linked list.
     * Normally, you would not do this, but we need it
     * for grading your work.
     *
     * @return Node representing the tail of the linked list
     */
    public Node<T> getTail() {
        return tail;
    }

    /**
     * This method is for your testing purposes.
     * You may choose to implement it if you wish.
     */
    @Override
    public String toString() {
        return """";
    }
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FSLSDB
code,"
package ru.lanbilling.webservice.wsdl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=""{http://www.w3.org/2001/XMLSchema}anyType""&gt;
 *       &lt;sequence&gt;
 *         &lt;element name=""ret"" type=""{urn:api3}soapDocument"" maxOccurs=""unbounded""/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = """", propOrder = {
    ""ret""
})
@XmlRootElement(name = ""getClientDocumentsResponse"")
@Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
public class GetClientDocumentsResponse {

    @XmlElement(required = true)
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    protected List<SoapDocument> ret;

    /**
     * Gets the value of the ret property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ret property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRet().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SoapDocument }
     * 
     * 
     */
    @Generated(value = ""com.sun.tools.xjc.Driver"", date = ""2015-10-25T05:29:34+06:00"", comments = ""JAXB RI v2.2.11"")
    public List<SoapDocument> getRet() {
        if (ret == null) {
            ret = new ArrayList<SoapDocument>();
        }
        return this.ret;
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aD523f
code,"/**
 * BSD-style license; for more info see http://pmd.sourceforge.net/license.html
 */
package net.sourceforge.pmd.lang.dfa.report;


public class ClassNode extends AbstractReportNode {

    private String className;

    public ClassNode(String className) {
        this.className = className;
    }

    public String getClassName() {
        return className;
    }

    public boolean equalsNode(AbstractReportNode arg0) {
        if (!(arg0 instanceof ClassNode)) {
            return false;
        }
        return ((ClassNode) arg0).getClassName().equals(className);
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bOJ2LZ
code,"package com.bugsnag;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Conditional;
import org.springframework.context.annotation.Configuration;

import javax.annotation.PostConstruct;

/**
 * If spring-webmvc is loaded, add configuration for reporting unhandled exceptions.
 */
@Configuration
@Conditional(SpringWebMvcLoadedCondition.class)
class MvcConfiguration {

    @Autowired
    private Bugsnag bugsnag;

    /**
     * Register an exception resolver to send unhandled reports to Bugsnag
     * for uncaught exceptions thrown from request handlers.
     */
    @Bean
    BugsnagMvcExceptionHandler bugsnagHandlerExceptionResolver() {
        return new BugsnagMvcExceptionHandler(bugsnag);
    }

    /**
     * Add a callback to assign specified severities for some Spring exceptions.
     */
    @PostConstruct
    void addExceptionClassCallback() {
        bugsnag.addCallback(new ExceptionClassCallback());
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WE0Sqq
code,"// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.vmwarecloudsimple.models;

import com.azure.resourcemanager.vmwarecloudsimple.fluent.models.CustomizationPolicyInner;

/** An immutable client-side representation of CustomizationPolicy. */
public interface CustomizationPolicy {
    /**
     * Gets the id property: Customization policy azure id.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the location property: Azure region.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the name property: Customization policy name.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type property.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the description property: Policy description.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the privateCloudId property: The Private cloud id.
     *
     * @return the privateCloudId value.
     */
    String privateCloudId();

    /**
     * Gets the specification property: Detailed customization policy specification.
     *
     * @return the specification value.
     */
    CustomizationSpecification specification();

    /**
     * Gets the typePropertiesType property: The type of customization (Linux or Windows).
     *
     * @return the typePropertiesType value.
     */
    CustomizationPolicyPropertiesType typePropertiesType();

    /**
     * Gets the version property: Policy version.
     *
     * @return the version value.
     */
    String version();

    /**
     * Gets the inner com.azure.resourcemanager.vmwarecloudsimple.fluent.models.CustomizationPolicyInner object.
     *
     * @return the inner object.
     */
    CustomizationPolicyInner innerModel();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qa00u5
code,"// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
package com.azure.data.cosmos.internal.query;

import com.azure.data.cosmos.BadRequestException;
import com.azure.data.cosmos.BridgeInternal;
import com.azure.data.cosmos.CommonsBridgeInternal;
import com.azure.data.cosmos.internal.DocumentCollection;
import com.azure.data.cosmos.FeedOptions;
import com.azure.data.cosmos.Resource;
import com.azure.data.cosmos.SqlQuerySpec;
import com.azure.data.cosmos.internal.HttpConstants;
import com.azure.data.cosmos.internal.OperationType;
import com.azure.data.cosmos.internal.PartitionKeyRange;
import com.azure.data.cosmos.internal.ResourceType;
import com.azure.data.cosmos.internal.RxDocumentServiceRequest;
import com.azure.data.cosmos.internal.Strings;
import com.azure.data.cosmos.internal.Utils;
import com.azure.data.cosmos.internal.caches.RxCollectionCache;
import com.azure.data.cosmos.internal.routing.PartitionKeyInternal;
import com.azure.data.cosmos.internal.routing.Range;
import org.apache.commons.lang3.StringUtils;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.util.Collections;
import java.util.List;
import java.util.UUID;

/**
 * While this class is public, but it is not part of our published public APIs.
 * This is meant to be internally used only by our sdk.
 */
public class DocumentQueryExecutionContextFactory {

    private final static int PageSizeFactorForTop = 5;

    private static Mono<Utils.ValueHolder<DocumentCollection>> resolveCollection(IDocumentQueryClient client, SqlQuerySpec query,
            ResourceType resourceTypeEnum, String resourceLink) {

        RxCollectionCache collectionCache = client.getCollectionCache();

        RxDocumentServiceRequest request = RxDocumentServiceRequest.create(
                OperationType.Query,
                resourceTypeEnum,
                resourceLink, null
                // TODO      AuthorizationTokenType.INVALID)
                ); //this request doesnt actually go to server
        return collectionCache.resolveCollectionAsync(request);
    }

    public static <T extends Resource> Flux<? extends IDocumentQueryExecutionContext<T>> createDocumentQueryExecutionContextAsync(
            IDocumentQueryClient client,
            ResourceType resourceTypeEnum,
            Class<T> resourceType,
            SqlQuerySpec query,
            FeedOptions feedOptions,
            String resourceLink,
            boolean isContinuationExpected,
            UUID correlatedActivityId) {

        // return proxy
        Flux<Utils.ValueHolder<DocumentCollection>> collectionObs = Flux.just(new Utils.ValueHolder<>(null));

        if (resourceTypeEnum.isCollectionChild()) {
            collectionObs = resolveCollection(client, query, resourceTypeEnum, resourceLink).flux();
        }

        DefaultDocumentQueryExecutionContext<T> queryExecutionContext = new DefaultDocumentQueryExecutionContext<T>(
            client,
            resourceTypeEnum,
            resourceType,
            query,
            feedOptions,
            resourceLink,
            correlatedActivityId,
            isContinuationExpected);

        if (ResourceType.Document != resourceTypeEnum) {
            return Flux.just(queryExecutionContext);
        }

        Mono<PartitionedQueryExecutionInfo> queryExecutionInfoMono =
            com.azure.data.cosmos.internal.query.QueryPlanRetriever.getQueryPlanThroughGatewayAsync(client, query, resourceLink);

        return collectionObs.single().flatMap(collectionValueHolder ->
                          queryExecutionInfoMono.flatMap(partitionedQueryExecutionInfo -> {
                              QueryInfo queryInfo =
                                  partitionedQueryExecutionInfo.getQueryInfo();
                              // Non value aggregates must go through
                              // DefaultDocumentQueryExecutionContext
                              // Single partition query can serve queries like SELECT AVG(c
                              // .age) FROM c
                              // SELECT MIN(c.age) + 5 FROM c
                              // SELECT MIN(c.age), MAX(c.age) FROM c
                              // while pipelined queries can only serve
                              // SELECT VALUE <AGGREGATE>. So we send the query down the old
                              // pipeline to avoid a breaking change.
                              // Should be fixed by adding support for nonvalueaggregates
                              if (queryInfo.hasAggregates() && !queryInfo.hasSelectValue()) {
                                  if (feedOptions != null && feedOptions.enableCrossPartitionQuery()) {
                                      return Mono.error(BridgeInternal.createCosmosClientException(HttpConstants.StatusCodes.BADREQUEST,
                                          ""Cross partition query only supports 'VALUE "" +
                                              ""<AggreateFunc>' for aggregates""));
                                  }
                              ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",y1DK-c
code,"/**
 * generated by Xtext
 */
package dk.itu.smdp.group2.ui.outline;

import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings(""all"")
public class QuestionaireOutlineTreeProvider extends DefaultOutlineTreeProvider {
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zj7j7s
code,"package fyskam.fyskamssngbok;


import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.content.SharedPreferences;
import android.content.res.Configuration;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

/**
 * Fragment used for managing interactions for and presentation of a navigation drawer.
 * See the <a href=""https://developer.android.com/design/patterns/navigation-drawer.html#Interaction"">
 * design guidelines</a> for a complete explanation of the behaviors implemented here.
 */
public class NavigationDrawerFragment extends Fragment {

    /**
     * Remember the position of the selected item.
     */
    private static final String STATE_SELECTED_POSITION = ""selected_navigation_drawer_position"";

    /**
     * Per the design guidelines, you should show the drawer on launch until the user manually
     * expands it. This shared preference tracks this.
     */
    private static final String PREF_USER_LEARNED_DRAWER = ""navigation_drawer_learned"";

    /**
     * A pointer to the current callbacks instance (the Activity).
     */
    private NavigationDrawerCallbacks mCallbacks;

    /**
     * Helper component that ties the action bar to the navigation drawer.
     */
    private ActionBarDrawerToggle mDrawerToggle;

    private DrawerLayout mDrawerLayout;
    private ListView mDrawerListView;
    private View mFragmentContainerView;

    private int mCurrentSelectedPosition = 0;
    private boolean mFromSavedInstanceState;
    private boolean mUserLearnedDrawer;

    public NavigationDrawerFragment() {
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Read in the flag indicating whether or not the user has demonstrated awareness of the
        // drawer. See PREF_USER_LEARNED_DRAWER for details.
        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
        mUserLearnedDrawer = sp.getBoolean(PREF_USER_LEARNED_DRAWER, false);

        if (savedInstanceState != null) {
            mCurrentSelectedPosition = savedInstanceState.getInt(STATE_SELECTED_POSITION);
            mFromSavedInstanceState = true;
        }

        // Select either the default item (0) or the last selected item.
        selectItem(mCurrentSelectedPosition);
    }

    @Override
    public void onActivityCreated (Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        // Indicate that this fragment would like to influence the set of actions in the action bar.
        setHasOptionsMenu(true);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
        mDrawerListView = (ListView) inflater.inflate(
                R.layout.fragment_navigation_drawer, container, false);
        mDrawerListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                selectItem(position);
            }
        });
        mDrawerListView.setAdapter(new ArrayAdapter<String>(
                getActionBar().getThemedContext(),
                android.R.layout.simple_list_item_activated_1,
                android.R.id.text1,
                new String[]{
                        getString(R.string.title_section1),
                        getString(R.string.title_section2),
                        getString(R.string.title_section3),
                }));
        mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);
        return mDrawerListView;
    }

    public boolean isDrawerOpen() {
        return mDrawerLayout != null && mDrawerLayout.isDrawerOpen(mFragmentContainerView);
    }

    /**
     * Users of this fragment must call this method to set up the navigation drawer interactions.
     *
     * @param fragmentId   The android:id of this fragment in its activity's layout.
     * @param drawerLayout The DrawerLayout containing this fragment's UI.
     */
    public void setUp(int fragmentId, DrawerLayout drawerLayout) {
        mFragmentContainerView = getActivity().findViewById(fragmentId);
        mDrawerLayout = drawerLayout;

        // set a custom shadow that overlays the main content when the drawer opens
        mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);
        // set up the drawer's list view with items and click listener

        ActionBar actionBar = getActionBar();
        actionBar.setDisplayHomeAsUpEnabled(true);
     ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eqwlUJ
code,"package com.mybatistemplate.adapter;

import com.mybatistemplate.core.GeneratorIdSqlCallback;
import com.mybatistemplate.core.IdGeneratorType;
import org.apache.ibatis.mapping.MappedStatement;
import org.apache.ibatis.mapping.ResultMap;

/**
 * Created by leicheng on 2016/7/12.
 */
public abstract class TemplateExAdapter {
    public void insertBatch(MappedStatement ms, ResultMap resultMap, String table, Class entity, IdGeneratorType idGeneratorType, GeneratorIdSqlCallback generatorIdSqlCallback) throws Exception{

    }

    public void updateBatch(MappedStatement ms, ResultMap resultMap, String table, Class entity) throws Exception{

    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",b1XKot
code,"package tranquvis.simplesmsremote.CommandManagement.Modules;

/**
 * Created by Andreas Kaltenleitner on 31.10.2016.
 */
public class ModuleAudioTest extends ModuleTest {
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CpjxdO
code,"/*
 * ***** BEGIN LICENSE BLOCK *****
 * Zimbra Collaboration Suite Web Client
 * Copyright (C) 2006, 2007, 2009, 2010 Zimbra, Inc.
 * 
 * The contents of this file are subject to the Zimbra Public License
 * Version 1.3 (""License""); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the License at
 * http://www.zimbra.com/license.
 * 
 * Software distributed under the License is distributed on an ""AS IS""
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
 * ***** END LICENSE BLOCK *****
 */

package com.zimbra.webClient.build;

import java.io.*;
import java.util.*;
import java.util.regex.*;

import org.apache.tools.ant.*;
import org.apache.tools.ant.types.*;

public class PackageJammerTask
extends Task {

    //
    // Constants
    //

    private static final Pattern RE_DEFINE = Pattern.compile(""^AjxPackage\\.define\\(['\""]([^'\""]+)['\""]\\);?"");
    private static final Pattern RE_UNDEFINE = Pattern.compile(""^AjxPackage\\.undefine\\(['\""]([^'\""]+)['\""]\\);?"");
    private static final Pattern RE_REQUIRE = Pattern.compile(""^AjxPackage\\.require\\(['\""]([^'\""]+)['\""](.*?)\\);?"");
    private static final Pattern RE_REQUIRE_OBJ = Pattern.compile(""^AjxPackage\\.require\\((\\s*\\{\\s*name\\s*:\"")?([^'\""]+)['\""](.*?)\\);?"");

    private static final String OUTPUT_JS = ""js"";
    private static final String OUTPUT_HTML = ""html"";
	private static final String OUTPUT_ALL = ""all"";

    //
    // Data
    //

    // attributes
    private File destFile;
	private File jsFile;
	private File htmlFile;
	private List<Source> sources = new LinkedList<Source>();
	private File dependsFile;
	private String output = OUTPUT_JS;
    private String basepath = """";
    private String extension = "".js"";
    private boolean verbose = false;

    // children
    private Text prefix;
    private Text suffix;
    private List<JammerFiles> files = new LinkedList<JammerFiles>();

    // internal state
    private String depth;
    private Map<String,Boolean> defines;

	private boolean isJs = true;
	private boolean isHtml = false;
	private boolean isAll = false;

	//
    // Public methods
    //

    // attributes

    public void setDestFile(File file) {
        this.destFile = file;
    }

	public void setJsDestFile(File file) {
		this.jsFile = file;
	}

	public void setHtmlDestFile(File file) {
		this.htmlFile = file;
	}

	public void setJsDir(File dir) {
		Source source = new Source();
		source.setDir(dir);

		this.sources.clear();
		this.sources.add(source);
	}

	public void setDependsFile(File file) {
		this.dependsFile = file;
	}

	public void setOutput(String output) {
		this.output = output;
		this.isAll = OUTPUT_ALL.equals(output);
		this.isHtml = this.isAll || OUTPUT_HTML.equals(output);
		this.isJs = this.isAll || OUTPUT_JS.equals(output) || !this.isHtml;
	}

    public void setBasePath(String basepath) {
        this.basepath = basepath;
    }
    public void setExtension(String extension) {
        this.extension = extension;
    }

    public void setVerbose(boolean verbose) {
        this.verbose = verbose;
    }

    // children

    public Text createPrefix() {
        return this.prefix = new Text();
    }
    public Text createSuffix() {
        return this.suffix = new Text();
    }

    public FileList createFileList() {
        JammerFileList fileList = new JammerFileList();
        this.files.add(fileList);
        return fileList;
    }
    public FileSet createFileSet() {
        JammerFileSet fileSet = new JammerFileSet();
        this.files.add(fileSet);
        return fileSet;
    }

	public Source createSrc() {
		Source source = new Source();
		this.sources.add(source);
		return source;
	}

    //
    // Task methods
    //

    public void execute() throws BuildException {
        this.depth = """";
        this.defines = new HashMap<String,Boolean>();

		PrintWriter jsOut = null;
		PrintWriter htmlOut = null;
		PrintWriter dependsOut = null;
		try {
			if (this.isJs) {
				File file = this.jsFile != null ? this.jsFile : this.destFile;
				log(""Jamming to "",file.toString());
				jsOut = new PrintWriter(new FileWriter(file));
			}
			if (this.isHtml) {
				File file = this.htmlFile != null ? this.htmlFile : this.destFile;
				log(""Jamming to "",file.toString());
				htmlOut = new PrintWriter(new FileWriter(file));
			}

			if (this.dependsFile != null) {
				log(""Dependencies saved to ""+this.dependsFile);
				dependsOut = new PrintWriter(new FileWriter(this.dependsFile));
			}

            if (this.prefix != null) {
				PrintWriter out = OUTPUT_JS.equals(this.prefix.output) ? jsOut : htmlOut;
				if (out != null) {
					out.println(this.prefix.toString());
				}
            }

            List<String> packages = new LinkedList<String>();
            for (JammerFiles files : this.files) {
                boolean wrap = files.isWrapped();
				boolean isManifest = files.isManifest();
				File dir = files.getDir(this.getProject());
                for (String filename : files.getFiles(this.getProject())) {
                    File file = new File(dir, filename);
             ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uTCNmH
code,"package de.codecentric.awesome.recommendation.core;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by afitz on 15.03.16.
 */
public class RecommendationLookup {
    private static RecommendationLookup ourInstance = new RecommendationLookup();

    private String standardProductRecommendation = ""P999"";
    // Map<User, Product>
    private final Map<String, String> recommendationMap = new HashMap<String, String>();


    public static RecommendationLookup getInstance() {
        return ourInstance;
    }

    private RecommendationLookup() {
        recommendationMap.put(""P00T"", ""P001"");
        recommendationMap.put(""P001"", ""P002"");
        recommendationMap.put(""P002"", ""P003"");
        recommendationMap.put(""P003"", ""P003"");

    }

    public Product getRecommendation (Product product) {
        return new Product((recommendationMap.containsKey(product.getId()) ? recommendationMap.get(product.getId()) : standardProductRecommendation));
    }


}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",L2kTZ7
code,"/*
 * Copyright (C) 2013-2015 Uncharted Software Inc.
 *
 * Property of Uncharted(TM), formerly Oculus Info Inc.
 * http://uncharted.software/
 *
 * Released under the MIT License.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the ""Software""), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package influent.server.sql;

/**
 * Represents a SQL FROM clause. This can be used to create complicated
 * sub-selects that can still be chained together.
 * 
 * @author cregnier
 *
 */
public interface SQLFrom {

	/**
	 * Sets the name of table to select results from.<br>
	 * This cannot be set if {@link #fromQuery(SQLSelect)} has also been set.
	 * @param name
	 *   The name of an existing table in the database
	 * @return
	 */
	SQLFrom table(String name);
	
	/**
	 * Adds an alias for the table.
	 * @param alias
	 *   The name of the alias that will be used in the SQL statement.
	 * @return
	 */
	SQLFrom as(String alias);
	
	/**
	 * Sets a subquery that should be used to select results from.<br>
	 * This cannot be set if {@link #table(String)} has also been set.
	 * @param fromQuery
	 *   A subquery to select results from.
	 * @return
	 */
	SQLFrom fromQuery(SQLSelect fromQuery);

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4gGKT3
code,"package com.example.dao;

import com.example.model.Publisher;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;

import java.util.List;

@Mapper
 public interface PublisherMapper {
  @Select(""SELECT *, PHONE as phoneNumber from PUBLISHERS"") //SQL
  List<Publisher> findAll();

//  === DB ===
//  CREATE TABLE IF NOT EXISTS PUBLISHERS  (
//     ID     INT          NOT NULL AUTO_INCREMENT  PRIMARY KEY
//    ,NAME   VARCHAR(255) NOT NULL CONSTRAINT PUBLISHERS_NAME_UC UNIQUE
//    ,PHONE  VARCHAR(30));

//  === Model ===
//  public class Publisher {
//    private Integer id ;
//    private String  name;
//    private String  phoneNumber;
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3pN3Vk
code,"package fPPPrograms;

import java.util.Scanner;

public class LeapYear {

	public static void main(String[] args) {
		
		System.out.println(""Enter a year to determine whether it is a leap year or not?"");
		
		Scanner yourInput = new Scanner(System.in);
		
		int year = yourInput.nextInt();
		
		//String y = year%400 == 0? (year%4 == 0 ) && (year%100 !=0) ? ""Yes"" : ""Not"" : ""Not"" ;
		String y = ((year%4 == 0) && (year%100 != 0) || (year%400 == 0)) ? ""Yes"" : ""Not"";
		
		System.out.println(""The Year You Entered is "" + y + "" a Leap Year"");
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-E9NUQ
code,"/*
 * Copyright (c) 2011-2016, Peter Abeles. All Rights Reserved.
 *
 * This file is part of BoofCV (http://boofcv.org).
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package boofcv.alg.filter.binary;

import boofcv.struct.ConnectRule;
import boofcv.struct.image.GrayS32;
import boofcv.struct.image.GrayU8;
import georegression.struct.point.Point2D_I32;
import sapphire.app.SapphireObject;

import org.ddogleg.struct.FastQueue;

import java.util.List;

/**
 * Used to trace the external and internal contours around objects for {@link LinearContourLabelChang2004}.  As it
 * is tracing an object it will modify the binary image by labeling.  The input binary image is assumed to have
 * a 1-pixel border that needs to be compensated for.
 *
 * @author Peter Abeles
 */
public class ContourTracer implements SapphireObject {

	// which connectivity rule is being used. 4 and 8 supported
	private ConnectRule rule;
	private int ruleN;

	// storage for contour points.
	private FastQueue<Point2D_I32> storagePoints;

	// binary image being traced
	private GrayU8 binary;
	// label image being marked
	private GrayS32 labeled;

	// storage for contour
	private List<Point2D_I32> contour;

	// coordinate of pixel being examined (x,y)
	private int x,y;
	// label of the object being traced
	private int label;
	// direction it moved in
	private int dir;
	// index of the pixel in the image's internal array
	private int indexBinary;
	private int indexLabel;

	// the pixel index offset to each neighbor
	private int offsetsBinary[];
	private int offsetsLabeled[];
	// lookup table for which direction it should search next given the direction it traveled into the current pixel
	private int nextDirection[];

	/**
	 * Specifies connectivity rule
	 *
	 * @param rule Specifies 4 or 8 as connectivity rule
	 */
	public ContourTracer( ConnectRule rule ) {
		this.rule = rule;

		if( ConnectRule.EIGHT == rule ) {
			// start the next search +2 away from the square it came from
			// the square it came from is the opposite from the previous 'dir'
			nextDirection = new int[8];
			for( int i = 0; i < 8; i++ )
				nextDirection[i] = ((i+4)%8 + 2)%8;
			ruleN = 8;
		} else if( ConnectRule.FOUR == rule ) {
			nextDirection = new int[4];
			for( int i = 0; i < 4; i++ )
				nextDirection[i] = ((i+2)%4 + 1)%4;
			ruleN = 4;
		} else {
			throw new IllegalArgumentException(""Connectivity rule must be 4 or 8 not ""+rule);
		}

		offsetsBinary = new int[ruleN];
		offsetsLabeled = new int[ruleN];
	}

	/**
	 *
	 * @param binary Binary image with a border of zeros added to the outside.
	 * @param labeled Labeled image.  Size is the same as the original binary image without border.
	 * @param storagePoints
	 */
	public void setInputs(GrayU8 binary , GrayS32 labeled , FastQueue<Point2D_I32> storagePoints ) {
		this.binary = binary;
		this.labeled = labeled;
		this.storagePoints = storagePoints;

		if( rule == ConnectRule.EIGHT ) {
			setOffsets8(offsetsBinary,binary.stride);
			setOffsets8(offsetsLabeled,labeled.stride);
		} else {
			setOffsets4(offsetsBinary,binary.stride);
			setOffsets4(offsetsLabeled,labeled.stride);
		}
	}

	private void setOffsets8( int offsets[] , int stride ) {
		int s = stride;
		offsets[0] =  1;   // x =  1 y =  0
		offsets[1] =  1+s; // x =  1 y =  1
		offsets[2] =    s; // x =  0 y =  1
		offsets[3] = -1+s; // x = -1 y =  1
		offsets[4] = -1  ; // x = -1 y =  0
		offsets[5] = -1-s; // x = -1 y = -1
		offsets[6] =   -s; // x =  0 y = -1
		offsets[7] =  1-s; // x =  1 y = -1
	}

	private void setOffsets4( int offsets[] , int stride ) {
		int s = stride;
		offsets[0] =  1;   // x =  1 y =  0
		offsets[1] =    s; // x =  0 y =  1
		offsets[2] = -1;   // x = -1 y =  0
		offsets[3] =   -s; // x =  0 y = -1
	}

	/**
	 *
	 * @param label
	 * @param initialX
	 * @param initialY
	 * @param external True for tracing an external contour or false for internal..
	 * @param contour
	 */
	public void trace( int label , int initialX , int initialY , boolean external , List<Point2D_I32> contour )
	{
		int initialDir;
		if( rule == ConnectRule.EIGHT )
			initialDir = external ? 7 : 3;
		else
			initialDir = external ? 0 : 2;

		this.label = label;
		this.contour = contour;
		this.dir = initialDir;
		x = initialX;
		y = initialY;

		// index of pixels in the image array
		// binary has a 1 pixel border which labeled lacks, hence the -1,-1 for labeled
		indexBinary = binary.getIndex(x,y);
		indexLabel = labeled.getIndex(x-1,y-1);
		add(x,y);

		// find the next black pixel.  handle case where its an isolated point
		if( !searchBlack() ) {
			return;
		} else {
			initia",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wWooGr
code,"package com.management.dao.impl.calcs;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.management.bean.calculate.ProjectCalc;
import com.management.bean.calculate.ProjectCalcs;
import com.management.dao.calcs.ProjectCalcDao;
import com.management.util.DBUtil;

public class ProjectCalcDaoImpl implements ProjectCalcDao {

	@Override
	public List<ProjectCalc> find() {
		try {
			Connection conn = DBUtil.getConnection();
			String sql = ""select * from project_calc"";
			QueryRunner qr = new QueryRunner();
			return qr.query(conn, sql, new BeanListHandler<>(ProjectCalc.class));
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	
	@Override
	public void add(ProjectCalc c) {
		try {
			Connection conn = DBUtil.getConnection();
			String sql = ""insert into project_calc(rank,category,weight,high,low) values(?,?,?,?,?)"";
			QueryRunner qr = new QueryRunner();
			Object[] params = {c.getRank(),c.getCategory(),c.getWeight(),c.getHigh(),c.getLow()};
			qr.update(conn, sql, params);
			ProjectCalcs.update();
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	
	@Override
	public void update(ProjectCalc c) {
		try {
			Connection conn = DBUtil.getConnection();
			String sql = ""update project_calc set rank=?,category=?,weight=?,high=?,low=? where id=?"";
			QueryRunner qr = new QueryRunner();
			Object[] params = {c.getRank(),c.getCategory(),c.getWeight(),c.getHigh(),c.getLow(),c.getId()};
			qr.update(conn, sql, params);
			ProjectCalcs.update();
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	
	@Override
	public void delete(int id) {
		try {
			Connection conn = DBUtil.getConnection();
			String sql = ""delete from project_calc where id=?"";
			QueryRunner qr = new QueryRunner();
			qr.update(conn, sql,id);
			ProjectCalcs.update();
		} catch (SQLException e) {
			throw new RuntimeException(e);
		}
	}
	
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UOVIog
code,"package com.contexthub.storageapp;

import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.view.MenuItemCompat;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.widget.SearchView;
import android.view.Menu;
import android.view.MenuItem;

import com.chaione.contexthub.sdk.model.VaultDocument;
import com.contexthub.storageapp.fragments.AboutFragment;
import com.contexthub.storageapp.fragments.EditVaultItemFragment;
import com.contexthub.storageapp.fragments.VaultItemListFragment;
import com.contexthub.storageapp.models.Person;


public class MainActivity extends ActionBarActivity implements VaultItemListFragment.Listener, FragmentManager.OnBackStackChangedListener {

    private MenuItem menuSearch;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        if(savedInstanceState == null) {
            getSupportFragmentManager().beginTransaction()
                    .replace(android.R.id.content, new VaultItemListFragment())
                    .commit();
            getSupportFragmentManager().addOnBackStackChangedListener(this);
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        setupSearchView(menu.findItem(R.id.action_search));
        return true;
    }

    private void setupSearchView(final MenuItem menuSearch) {
        this.menuSearch = menuSearch;

        SearchView searchView = (SearchView) MenuItemCompat.getActionView(menuSearch);
        SearchView.SearchAutoComplete searchAutoComplete = (SearchView.SearchAutoComplete) searchView.findViewById(R.id.search_src_text);
        searchAutoComplete.setHint(R.string.search_hint);
        searchView.setOnQueryTextListener(new android.support.v7.widget.SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                menuSearch.collapseActionView();
                getSupportFragmentManager().beginTransaction()
                        .addToBackStack(null)
                        .replace(android.R.id.content, VaultItemListFragment.newInstance(query))
                        .commit();
                return true;
            }

            @Override
            public boolean onQueryTextChange(String query) {
                return false;
            }
        });
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        boolean isMainFragment = getSupportFragmentManager().getBackStackEntryCount() <= 0;
        menu.findItem(R.id.action_search).setVisible(isMainFragment);
        menu.findItem(R.id.action_add).setVisible(isMainFragment);
        menu.findItem(R.id.action_about).setVisible(isMainFragment);
        return super.onPrepareOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        menuSearch.collapseActionView();

        switch(item.getItemId()) {
            case R.id.action_add:
                launchEditVaultItemFragment(null);
                return true;
            case R.id.action_about:
                getSupportFragmentManager().beginTransaction()
                        .addToBackStack(null)
                        .replace(android.R.id.content, new AboutFragment())
                        .commit();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    private void launchEditVaultItemFragment(VaultDocument<Person> document) {
        EditVaultItemFragment fragment = document == null ? new EditVaultItemFragment() :
                EditVaultItemFragment.newInstance(document);
        getSupportFragmentManager().beginTransaction()
                .addToBackStack(null)
                .replace(android.R.id.content, fragment)
                .commit();
    }

    @Override
    public void onItemClick(VaultDocument<Person> document) {
        menuSearch.collapseActionView();
        launchEditVaultItemFragment(document);
    }

    @Override
    public void onBackStackChanged() {
        supportInvalidateOptionsMenu();
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TMIQQT
code,"package org.superboot.service;

import com.querydsl.core.types.Predicate;
import org.springframework.data.domain.Pageable;
import org.superboot.base.BaseException;
import org.superboot.base.BaseResponse;

/**
 * <b> 错误日志服务接口 </b>
 * <p>
 * 功能描述:
 * </p>
 */
public interface ErrorLogService {

    /**
     * 按照微服务模块进行分组统计
     *
     * @return
     * @throws BaseException
     */
    BaseResponse getErrorLogGroupByAppName() throws BaseException;


    /**
     * 获取错误日志列表信息
     *
     * @param pageable  分页信息
     * @param predicate 查询参数
     * @return
     * @throws BaseException
     */
    BaseResponse getErrorLogList(Pageable pageable, Predicate predicate) throws BaseException;

    /**
     * 获取错误日志记录数
     *
     * @return
     * @throws BaseException
     */
    BaseResponse getErrorLogCount(Predicate predicate) throws BaseException;


    /**
     * 查询错误日志详细信息
     *
     * @param id
     * @return
     * @throws BaseException
     */
    BaseResponse getErrorLogItem(String id) throws BaseException;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JhXZL8
code,"package org.softlang.service.company;

import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;

/**
 * A department has a name, a manager, employees, and subdepartments.
 */
public class Department implements Serializable {

	private static final long serialVersionUID = -2008895922177165250L;
	
	private String name;
	private Employee manager;
	private List<Department> subdepts = new LinkedList<Department>();
	private List<Employee> employees = new LinkedList<Employee>();

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Employee getManager() {
		return manager;
	}

	public void setManager(Employee manager) {
		this.manager = manager;
	}

	public List<Department> getSubdepts() {
		return subdepts;
	}

	public List<Employee> getEmployees() {
		return employees;
	}
	
	public double total() {
		double total = 0;
		total += getManager().getSalary();
		for (Department s : getSubdepts())
			total += s.total();
		for (Employee e : getEmployees())
			total += e.getSalary();
		return total;		
	}	
	
	public void cut() {
		getManager().cut();
		for (Department s : getSubdepts())
			s.cut();
		for (Employee e : getEmployees())
			e.cut();
	}	
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DPiYkB
code,"package cwr;

import java.util.ArrayList;

public class RobotBite 
{
	//0 = time				[state]
	//1 = x					[state]
	//2 = y					[state]
	//3 = energy			[state]
	//4 = bearing radians 	[relative position]
	//5 = distance			[relative position]
	//6 = heading radians	[travel]
	//7 = velocity			[travel]
	String name;
	long cTime;
	double cx;
	double cy;
	cwruBase origin;
	double cEnergy;
	double cBearing_radians;
	double cDistance;
	double cHeading_radians;
	double cVelocity;
	ArrayList<Projection> projec; //forward projections for x
	
	public RobotBite(String name, long time, cwruBase self, 
			double energy, double bearing_radians, double distance,
			double heading_radians, double velocity)
	{
		this.name = name;
		cTime = time;
		origin = self;
		cEnergy = energy;
		cBearing_radians = bearing_radians;
		double myBearing = self.getHeadingRadians();
		//System.out.println(""I'm going ""+self.getHeadingRadians());
		double adjust_bearing = (bearing_radians+myBearing)%(2*Math.PI);
		//System.out.println(""input bearing  ""+(bearing_radians));
		//System.out.println(""adjust bearing ""+(adjust_bearing));
		//System.out.println(""math bearing""+(-adjust_bearing+Math.PI/2));
		cDistance = distance;
		cHeading_radians = heading_radians;
		//System.out.println(""location heading ""+heading_radians);
		cVelocity = velocity;
		
		double myX = self.getX();
		double myY = self.getY();
		double math_bearing = (-adjust_bearing+Math.PI/2)%(2*Math.PI);
		//double math_heading = (-heading_radians+Math.PI/2)%(2*Math.PI);
		/*
		 *            0
		 *           90
		 *  -90 180       0 90
		 *           -90
		 *           180
		 */
		double dX = distance*Math.cos(math_bearing);
		//System.out.println(""location dx:"" + dX);
		double dY = distance*Math.sin(math_bearing);
		//System.out.println(""location dy:"" + dY);
		cx = myX+dX;
		cy = myY+dY;
	}
	public void attachProjection(ArrayList<Projection> projList)
	{
		projec = projList;
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",in60w0
code,"package ca.codybanman.AstroidEscape;

import org.robovm.apple.foundation.NSAutoreleasePool;
import org.robovm.apple.uikit.UIApplication;

import com.badlogic.gdx.backends.iosrobovm.IOSApplication;
import com.badlogic.gdx.backends.iosrobovm.IOSApplicationConfiguration;
import ca.codybanman.AstroidEscape.AEGame;

public class IOSLauncher extends IOSApplication.Delegate {
    @Override
    protected IOSApplication createApplication() {
        IOSApplicationConfiguration config = new IOSApplicationConfiguration();
        return new IOSApplication(new AEGame(), config);
    }

    public static void main(String[] argv) {
        NSAutoreleasePool pool = new NSAutoreleasePool();
        UIApplication.main(argv, null, IOSLauncher.class);
        pool.close();
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ktcSgG
code,"/*
 * This file is part of FlexibleLogin
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2018 contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.github.games647.flexiblelogin.listener.prevent;

import com.flowpowered.math.vector.Vector3i;
import com.github.games647.flexiblelogin.FlexibleLogin;
import com.github.games647.flexiblelogin.PomData;
import com.github.games647.flexiblelogin.config.Settings;
import com.google.inject.Inject;

import java.util.List;
import java.util.Optional;

import org.spongepowered.api.command.CommandManager;
import org.spongepowered.api.command.CommandMapping;
import org.spongepowered.api.command.CommandResult;
import org.spongepowered.api.entity.living.player.Player;
import org.spongepowered.api.event.Listener;
import org.spongepowered.api.event.Order;
import org.spongepowered.api.event.block.InteractBlockEvent;
import org.spongepowered.api.event.command.SendCommandEvent;
import org.spongepowered.api.event.entity.DamageEntityEvent;
import org.spongepowered.api.event.entity.InteractEntityEvent;
import org.spongepowered.api.event.entity.MoveEntityEvent;
import org.spongepowered.api.event.filter.Getter;
import org.spongepowered.api.event.filter.cause.First;
import org.spongepowered.api.event.filter.cause.Root;
import org.spongepowered.api.event.filter.type.Exclude;
import org.spongepowered.api.event.item.inventory.ChangeInventoryEvent;
import org.spongepowered.api.event.item.inventory.ClickInventoryEvent;
import org.spongepowered.api.event.item.inventory.ClickInventoryEvent.NumberPress;
import org.spongepowered.api.event.item.inventory.DropItemEvent;
import org.spongepowered.api.event.item.inventory.InteractInventoryEvent;
import org.spongepowered.api.event.item.inventory.InteractItemEvent;
import org.spongepowered.api.event.item.inventory.UseItemStackEvent;
import org.spongepowered.api.event.message.MessageChannelEvent;

public class PreventListener extends AbstractPreventListener {

    private final CommandManager commandManager;

    @Inject PreventListener(FlexibleLogin plugin, Settings settings, CommandManager commandManager) {
        super(plugin, settings);

        this.commandManager = commandManager;
    }

    @Listener(order = Order.FIRST, beforeModifications = true)
    public void onPlayerMove(MoveEntityEvent playerMoveEvent, @First Player player) {
        if (playerMoveEvent instanceof MoveEntityEvent.Teleport) {
            return;
        }

        Vector3i oldLocation = playerMoveEvent.getFromTransform().getPosition().toInt();
        Vector3i newLocation = playerMoveEvent.getToTransform().getPosition().toInt();
        if (oldLocation.getX() != newLocation.getX() || oldLocation.getZ() != newLocation.getZ()) {
            checkLoginStatus(playerMoveEvent, player);
        }
    }

    @Listener(order = Order.FIRST, beforeModifications = true)
    public void onChat(MessageChannelEvent.Chat chatEvent, @First Player player) {
        checkLoginStatus(chatEvent, player);
    }

    @Listener(order = Order.FIRST, beforeModifications = true)
    public void onCommand(SendCommandEvent commandEvent, @First Player player) {
        String command = commandEvent.getCommand();

        Optional<? extends CommandMapping> commandOpt = commandManager.get(command);
        if (commandOpt.isPresent()) {
            CommandMapping mapping = commandOpt.get();
            command = mapping.getPrimaryAlias();

            //do not blacklist our own commands
            if (commandManager.getOwner(mapping)
                .map(pc -> pc.getId().equals(PomData.ARTIFACT_ID))
                .orElse(false)) {
                return;
            }
        }

        commandEvent.setResult(CommandResult.empty());
        if (settings.getGeneral().isCommandOnlyProtection()) {
            List<String> protectedCommands = settings.getGeneral().getProtectedCommands();
            if (protectedCommands.contains(command) && !plugin.getDatabase().isLoggedIn(player)) {
                player.sendMessage(settings.getText().getProtectedCommand());
                commandEvent.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6k2IuB
code,"/*
 * The MIT License
 *
 * Copyright 2014 Jon Arney, Ensor Robotics.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.ensor.robots.roboclawdriver;

/**
 *
 * @author jona
 */
class CommandReadMainBatteryVoltage extends CommandReadBatteryVoltage {

    protected CommandReadMainBatteryVoltage(RoboClaw aRoboClaw) {
        super(aRoboClaw);
    }

   @Override
    protected byte getCommandByte() {
        return (byte)24;
    }

    @Override
    protected void onResponse(double voltage) {
            mRoboClaw.setMainBatteryVoltage(voltage);
    }
    
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wQK2aF
code,"package miwax.java_conf.gr.jp.frugalitycalc.view;

import android.app.AlertDialog;
import android.databinding.DataBindingUtil;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;

import miwax.java_conf.gr.jp.frugalitycalc.R;
import miwax.java_conf.gr.jp.frugalitycalc.databinding.ActivityMainBinding;
import miwax.java_conf.gr.jp.frugalitycalc.util.messenger.ShowAlertDialogMessage;
import miwax.java_conf.gr.jp.frugalitycalc.viewmodel.MainViewModel;
import rx.android.schedulers.AndroidSchedulers;
import rx.functions.Action1;
import rx.subscriptions.CompositeSubscription;

public class MainActivity extends AppCompatActivity {
    private final String VIEW_MODEL = ""VIEW_MODEL"";

    private ActivityMainBinding binding;
    private MainViewModel mainViewModel;
    private CompositeSubscription subscriptions = new CompositeSubscription();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = DataBindingUtil.setContentView(this, R.layout.activity_main);


        if (savedInstanceState != null) {
            mainViewModel = savedInstanceState.getParcelable(VIEW_MODEL);
        } else {
            mainViewModel = new MainViewModel();
        }
        binding.setViewModel(mainViewModel);

        // ダイアログ表示のメッセージ受信
        subscriptions.add(
                mainViewModel.getMessenger().register(ShowAlertDialogMessage.class)
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1<ShowAlertDialogMessage>() {
                    @Override
                    public void call(ShowAlertDialogMessage message) {
                        showAlertDialog(message.getTitleId(), message.getTextId());
                    }
                })
        );
   }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putParcelable(VIEW_MODEL, mainViewModel);
    }

    @Override
    protected void onDestroy() {
        mainViewModel.unsubscribe();
        super.onDestroy();
    }

    private void showAlertDialog(int titleId, int textId) {
        new AlertDialog.Builder(this)
                .setTitle(this.getString(titleId))
                .setMessage(this.getString(textId))
                .setPositiveButton(""OK"", null)
                .show();
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LDmM9n
code,"package com.falcon.cms.web.rest;

import com.falcon.cms.web.rest.vm.LoggerVM;

import ch.qos.logback.classic.Level;
import ch.qos.logback.classic.LoggerContext;
import com.codahale.metrics.annotation.Timed;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.stream.Collectors;

/**
 * Controller for view and managing Log Level at runtime.
 */
@RestController
@RequestMapping(""/management"")
public class LogsResource {

    @GetMapping(""/logs"")
    @Timed
    public List<LoggerVM> getList() {
        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
        return context.getLoggerList()
            .stream()
            .map(LoggerVM::new)
            .collect(Collectors.toList());
    }

    @PutMapping(""/logs"")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    @Timed
    public void changeLevel(@RequestBody LoggerVM jsonLogger) {
        LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();
        context.getLogger(jsonLogger.getName()).setLevel(Level.valueOf(jsonLogger.getLevel()));
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",y-0QAX
code,"package com.board.gd.domain.stock;

import lombok.Data;

import java.util.List;
import java.util.stream.Collectors;

/**
 * Created by gd.godong9 on 2017. 5. 19.
 */

@Data
public class StockResult {
    private Long id;
    private String name;
    private String code;

    public static StockResult getStockResult(Stock stock) {
        StockResult stockResult = new StockResult();
        stockResult.setId(stock.getId());
        stockResult.setName(stock.getName());
        stockResult.setCode(stock.getCode());

        return stockResult;
    }

    public static List<StockResult> getStockResultList(List<Stock> stockList) {
        return stockList.stream()
                .map(stock -> getStockResult(stock))
                .collect(Collectors.toList());
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HetKXw
code,"/**
 * Contains methods for extracting/selecting final multiword candidates.
 * @author Valeria Quochi @author Francesca Frontini @author Francesco Rubino
 * Istituto di linguistica Computazionale ""A. Zampolli"" - CNR Pisa - Italy
 * 
 */
package multiword;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ib88dH
code,"/**
 * Created by Administrator on 2017/3/11.
 */
public class ReverseWordsInSequence {
    public void reverseSequence(String str) {
        if (str == null) return;
        String[] strArray = str.split("" "");
        StringBuilder sb = new StringBuilder();
        for (int i = strArray.length-1; i >= 0; --i)
            sb.append(strArray[i] + "" "");
        System.out.println(sb);
    }

    public static void main(String[] args) {
        ReverseWordsInSequence r = new ReverseWordsInSequence();
        String str = ""I am a Students."";
        r.reverseSequence(str);
    }
}


/**
 * Created by Administrator on 2017/3/11.
 */
public class ReverseWordsInSequence {

    public String reverseSequence(String str) {
        if (str == null || str.length() <= 1)
            return str;
        StringBuilder sb = new StringBuilder(str);
        reverse(sb, 0, str.length() - 1);
        int begin = 0, end = 0;

        while (end < str.length()) {
            while (end < str.length() && sb.charAt(end) != ' ')
                end++;
            reverse(sb, begin, end - 1);
            begin = end + 1;
            end = begin;
        }
        return sb.toString();
    }

    public void reverse(StringBuilder sb, int start, int end) {
        if (sb == null || end <= start)
            return;

        while (start < end) {
            char temp = sb.charAt(start);
            sb.setCharAt(start, sb.charAt(end));
            sb.setCharAt(end, temp);
            start++;
            end--;
        }
    }

    public static void main(String[] args) {
        ReverseWordsInSequence r = new ReverseWordsInSequence();
        String str = ""i am a students."";
        System.out.print(r.reverseSequence(str));
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3C8RWu
code,"/**
 * Copyright (c) André Bargull
 * Alle Rechte vorbehalten / All Rights Reserved.  Use is subject to license terms.
 *
 * <https://github.com/anba/es6draft>
 */
package com.github.anba.es6draft.runtime.types.builtins;

import java.lang.invoke.MethodHandle;
import java.lang.reflect.Method;

import com.github.anba.es6draft.runtime.ExecutionContext;
import com.github.anba.es6draft.runtime.Realm;
import com.github.anba.es6draft.runtime.types.Constructor;

/**
 * <h1>9 Ordinary and Exotic Objects Behaviours</h1>
 * <ul>
 * <li>9.3 Built-in Function Objects
 * </ul>
 */
public abstract class BuiltinConstructor extends BuiltinFunction implements Constructor {
    private MethodHandle constructMethod;

    /**
     * Constructs a new built-in constructor function.
     * 
     * @param realm
     *            the realm object
     * @param name
     *            the function name
     * @param arity
     *            the function arity
     */
    protected BuiltinConstructor(Realm realm, String name, int arity) {
        super(realm, name, arity);
    }

    /**
     * Returns `(? extends BuiltinConstructor, ExecutionContext, Constructor, Object[]) {@literal ->} ScriptObject`
     * method-handle.
     * 
     * @return the call method handle
     */
    public MethodHandle getConstructMethod() {
        if (constructMethod == null) {
            try {
                Method method = getClass().getDeclaredMethod(""construct"", ExecutionContext.class, Constructor.class,
                        Object[].class);
                constructMethod = lookup().unreflect(method);
            } catch (ReflectiveOperationException e) {
                throw new RuntimeException(e);
            }
        }
        return constructMethod;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CGAXO3
code,"package states;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import database.DeleteGame;
import database.LoadGame;
import game.Game;
import graphics.ButtonAction;
import graphics.Text;
import graphics.UIButton;
import graphics.UIList;
import graphics.UIScrollScreen;
import loader.ImageLoader;

public class MenuState extends State {
	/*  Menu screen state it is the initial screen of the game it control the new button and the load button*/
	//Main Menu
	private UIList menuButtons;
	private BufferedImage menuBackground;
	
	//Load Buttons Menu (second Screen)
	private UIScrollScreen loadScreen;
	private BufferedImage subMenuBackground;
	private boolean loadScreenMenu;
	
	//Selected Game Menu (Third Screen)
	private UIList loadSubMenu;
	private BufferedImage gameSelectedBackground;
	private boolean gameSelected;
	
	public MenuState(Game game) {
		super(game);
		State.loadMenuState = true;
	}

	@Override
	public UIList getUIButtons() {
		/*Control of active buttons*/
		if (!gameSelected) { 
			return menuButtons;
		} else {
			return loadSubMenu;
		}
	}

	@Override
	public UIScrollScreen getScreen() {
		/*control if scroll buttons are active*/
		if (loadScreenMenu)
			return loadScreen;
		else
			return null;
	}

	@Override
	public void tick() {
		// If ESC is clicked on the menu screen then the game closes
		
		if(State.loadMenuState) { //loadMenuState is true then init menu screen
			initMenuScreen();
			State.loadMenuState = false;
		}
		
		if (game.getKeyboard().mESC == true) { //If esc was pressed
			
			if (loadScreenMenu) { //Release loadScreen memory
				loadScreenMenu = false;
				loadScreen.getButtons().clear();
				loadScreen = null;
				subMenuBackground = null;
			} else if(gameSelected) { //Release memory of the screen after choose a saved game
				gameSelected = false;
				loadSubMenu.getButtons().clear();
				loadSubMenu = null;
				gameSelectedBackground = null;
			} else { // If esc was clicked on menu then close game
				game.stop();
			}
			game.getKeyboard().mESC = false;
		}
		
		if(State.loadGame || State.newGame) // If load or new game true then it will change to gameState so release menu memory and changes state
		{
			menuButtons.getButtons().clear();
			menuButtons = null;
			menuBackground = null;
			State.setCurrentState(game.getGameState());
		}	
		
	}

	@Override
	public void render(Graphics graph) {
		if(State.loadMenuState) // Make sure that only render after menu was loaded
			return;
		// Draw the menu background image and render the UI buttons
		graph.drawImage(menuBackground, 0, 0, game.getWidth(), game.getHeight(), null);
		menuButtons.render(graph);

		if (loadScreenMenu) { 
			//Draw subMenu background and render buttons
			graph.drawImage(subMenuBackground, 0, 0, game.getWidth(), game.getHeight(), null);
			loadScreen.render(graph);
		} else if (gameSelected) {
			//Draw gameSelected background and render buttons
			graph.drawImage(gameSelectedBackground, 0, 0, game.getWidth(), game.getHeight(), null);
			loadSubMenu.render(graph);
		}
	}

	private void initMenuScreen()
	{
		/*Initialize the screen and buttons of the first menu screen*/
		menuBackground = ImageLoader.loadImage(""/background/menu_backgroud.png"");
		try {
			initMenuButtons();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private void initLoadScreen()
	{
		/*Initialize the screen and buttons of the second menu screen (list of saved games)*/
		subMenuBackground = ImageLoader.loadImage(""/background/submenu_background.png"");
		initLoadScreenButtons();
	}
	
	private void initGameSelectedScreen()
	{
		/*Initialize the screen and  of the third menu screen (game selected)*/
		gameSelectedBackground = ImageLoader.loadImage(""/background/load_submenu_background.png"");
		initGameSelectedButtons();
	}
	
	private void initGameSelectedButtons()
	{
		/*Init buttons of the selected game load, delete and cancel*/
		BufferedImage loadSaveButton[] = new BufferedImage[2];
		BufferedImage deleteSaveButton[] = new BufferedImage[2];
		BufferedImage cancelButton[] = new BufferedImage[2];
		loadSubMenu = new UIList();
		
		loadSaveButton[0] = ImageLoader.loadImage(""/button/load_submenu_d.png"");
		loadSaveButton[1] = ImageLoader.loadImage(""/button/load_submenu_s.png"");
		
		int buttonWidth = (int) (loadSaveButton[0].getWidth() * game.getScale());
		int buttonHeight = (int) (loadSaveButton[0].getHeight() * game.getScale());

		//Load a saved game
		loadSubMenu.getButtons().add(new UIButton((int) (50 * game.getScale()), (int)(300 * game.getScale()), buttonWidth, buttonHeight, loadSaveButton, -1,
				new ButtonAction() {
					@Override
					public void action() {
						State.loadGame = true; // Tells gameState to load a game
						game.getKeyboard().mESC = true; // Set esc true to release memory from this screen (GameSelected screen)
					}
				}));

		deleteSaveButton[0] = ImageLoader.loadImage(""/button/delete_submenu_d.png"");
		deleteSaveButton[1] = ImageLoader.loadImage(""/button/delete_submenu_s.png"");
		
		//Delete a saved game
		loadSubMenu.getB",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XtpoHh
code,"package com.semmle.jcorn;

import com.semmle.js.ast.Position;

public class SyntaxError extends RuntimeException {
  private static final long serialVersionUID = -4883173648492364902L;

  private final Position position;

  public SyntaxError(String msg, Position loc, int raisedAt) {
    super(msg);
    this.position = loc;
  }

  public Position getPosition() {
    return position;
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZUJe7-
code,"package jnt.scimark2;

public class kernel
{
	// each measurement returns approx Mflops


	public static double measureFFT(int N, double mintime, Random R)
	{
		// initialize FFT data as complex (N real/img pairs)

		double x[] = RandomVector(2*N, R);
		double oldx[] = NewVectorCopy(x);
		long cycles = 1;
		Stopwatch Q = new Stopwatch();

		while(true)
		{
			Q.start();
			for (int i=0; i<cycles; i++)
			{
				FFT.transform(x);	// forward transform
				FFT.inverse(x);		// backward transform
			}
			Q.stop();
			if (Q.read() >= mintime)
				break;

			cycles *= 2;
		}
		// approx Mflops

		final double EPS = 1.0e-10;
		if ( FFT.test(x) / N > EPS )
			return 0.0;
		
		return FFT.num_flops(N)*cycles/ Q.read() * 1.0e-6;
	}


//	public static double measureSOR(int N, double min_time, Random R)
//	{
//		double G[][] = RandomMatrix(N, N, R);
//
//		//Stopwatch Q = new Stopwatch();
//		int cycles=1;
//		//while(true)
//		while(cycles <= 32768)
//		{
//			//Q.start();
//			SOR.execute(1.25, G, cycles);
//			//Q.stop();
//			//if (Q.read() >= min_time) break;
//
//			cycles *= 2;
//		}
//		// approx Mflops
//		//return SOR.num_flops(N, N, cycles) / Q.read() * 1.0e-6;
//		return SOR.num_flops(N, N, cycles);
//	}
	
	 public static double measureSOR(int N, double min_time, Random R)
	  {
	    double G[][] = RandomMatrix(N, N, R);
	    
	    int rep = 10; // 11s @ 594MHz
	    
	    //rep = 75; // 42.5s @ 1026MHz
	    //rep = 150; // 68s @ 1026MHz, this just fully melts PCM, at end of benchmark
      //rep = 250; // 113s @ 1026MHz
      //rep = 300; // 126s @ 1026MHz, using this setting in my house, PCM melts fully
	    rep = 75;
	    
	    // 75  short duration
	    // 300 medium duration
	    // 400 long duration

	    int cycles = 2048;
	    for (int i = 0; i < rep; i++)
	    {
	      SOR.execute(1.25, G, cycles);
	    }
	    return SOR.num_flops(N, N, cycles);
	  }

	public static double measureMonteCarlo(double min_time, Random R)
	{
		Stopwatch Q = new Stopwatch();

		int cycles=1;
		while(true)
		{
			Q.start();
			MonteCarlo.integrate(cycles);
			Q.stop();
			if (Q.read() >= min_time) break;

			cycles *= 2;
		}
		// approx Mflops
		return MonteCarlo.num_flops(cycles) / Q.read() * 1.0e-6;
	}


	public static double measureSparseMatmult(int N, int nz, 
			double min_time, Random R)
	{
		// initialize vector multipliers and storage for result
		// y = A*y;

		double x[] = RandomVector(N, R);
		double y[] = new double[N];

		// initialize square sparse matrix
		//
		// for this test, we create a sparse matrix wit M/nz nonzeros
		// per row, with spaced-out evenly between the begining of the
		// row to the main diagonal.  Thus, the resulting pattern looks
		// like
		//             +-----------------+
		//             +*                +
		//             +***              +
		//             +* * *            +
		//             +** *  *          +
		//             +**  *   *        +
		//             +* *   *   *      +
		//             +*  *   *    *    +
		//             +*   *    *    *  + 
		//             +-----------------+
		//
		// (as best reproducible with integer artihmetic)
		// Note that the first nr rows will have elements past
		// the diagonal.

		int nr = nz/N; 		// average number of nonzeros per row
		int anz = nr *N;   // _actual_ number of nonzeros

			
		double val[] = RandomVector(anz, R);
		int col[] = new int[anz];
		int row[] = new int[N+1];

		row[0] = 0;	
		for (int r=0; r<N; r++)
		{
			// initialize elements for row r

			int rowr = row[r];
			row[r+1] = rowr + nr;
			int step = r/ nr;
			if (step < 1) step = 1;   // take at least unit steps


			for (int i=0; i<nr; i++)
				col[rowr+i] = i*step;
				
		}

		//Stopwatch Q = new Stopwatch();

		int cycles = 2048;
		//while(true)
		//while(cycles <= 65536) // about 20 seconds
		//while(cycles <= 1048576) // about 200 seconds
		
		int rep = 30; // 14 sec @ 594
		
		for (int i = 0; i < rep; i++)
		{
			//Q.start();
			SparseCompRow.matmult(y, val, row, col, x, cycles);
			//Q.stop();
			//if (Q.read() >= min_time) break;

			//cycles *= 2;
		}
		// approx Mflops
		//return SparseCompRow.num_flops(N, nz, cycles) / Q.read() * 1.0e-6;
		return SparseCompRow.num_flops(N, nz, cycles);
	}


	public static double measureLU(int N, double min_time, Random R)
	{
		// compute approx Mlfops, or O if LU yields large errors

		double A[][] = RandomMatrix(N, N,  R);
		double lu[][] = new double[N][N];
		int pivot[] = new int[N];

		//Stopwatch Q = new Stopwatch();
    
    //while(true)
    //while (cycles <= 8192)
    //while (cycles <= 2048) // approx 20 sec
    //while (cycles <= 6144) // approx 30 sec @ 1242MHz
    //while (cycles <= 12288) // approx 60 sec @ 1242MHz
    //while (cycles <= 14336) // approx 70 sec @ 1242MHz
    //while (cycles <= 16384) // approx 80 sec @ 1242MHz

		int cycles = 2048; // 14 sec @ 594Hz
		
		for (int j = 0; j < cycles; j++)
		{
			//Q.start",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7r0z1w
code,"package com.aws.global.dao;

import java.util.ArrayList;

import com.aws.global.classes.Pizza;
import com.aws.global.common.base.BaseDAO;
import com.aws.global.mapper.PizzaRowMapper;

public class PizzaDAO extends BaseDAO{
	
	//SQL Statement when user adds a pizza to his inventory
	public void addPizza(String pizzaName, int pizzaPrice)
	{
		String sql = ""INSERT INTO PIZZA (pizza_id, pizza_name, pizza_price) VALUES (NULL, ?, ?);"";
		getJdbcTemplate().update(sql, new Object[] { pizzaName, pizzaPrice});
	}
	
	//SQL Statement when user wants to get a list of pizzas
	public ArrayList<Pizza> getAllPizza()
	{
		String sql = ""SELECT * FROM Pizza"";
		ArrayList<Pizza> pizzas = (ArrayList<Pizza>) getJdbcTemplate().query(sql, new PizzaRowMapper());
		return pizzas;
	}
	
	//SQL Statement when user wants to get a pizza record using a pizza id
	public Pizza getPizzaById(int id)
	{
		String sql = ""SELECT * FROM PIZZA WHERE pizza_id = ?"";
		Pizza pizza = (Pizza)getJdbcTemplate().queryForObject(
				sql, new Object[] { id },
				new PizzaRowMapper());
		return pizza;
	}
	
	//SQL Statement when user wants to update a certain pizza's information
	public void editPizza(String pizza_name, int pizza_price, int id)
	{
		String sql = ""UPDATE PIZZA SET pizza_name = ?, pizza_price = ? WHERE pizza_id = ?;"";
		getJdbcTemplate().update(sql, new Object[] { pizza_name, pizza_price, id });
	}
	
	//SQL Statement when user wants to delete a pizza information
	public void deletePizza(int id)
	{
		String sql = ""DELETE FROM PIZZA WHERE pizza_id = ?"";
		getJdbcTemplate().update(sql, new Object[] { id });
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q0qwQ1
code,"package me.moodcat.api;

import java.util.Arrays;
import java.util.List;
import java.util.Locale;
import java.util.stream.Collectors;

import lombok.Getter;
import me.moodcat.database.embeddables.VAVector;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * A mood represents a vector in the valence-arousal plane which will be attached to song.
 */
@JsonFormat(shape = JsonFormat.Shape.OBJECT)
public enum Mood {

    // CHECKSTYLE:OFF
    ANGRY(new VAVector(-0.6, 0.6), ""Angry""),
    CALM(new VAVector(0.3, -0.9), ""Calm""),
    EXCITING(new VAVector(0.4, 0.8), ""Exciting""),
    HAPPY(new VAVector(0.7, 0.6), ""Happy""),
    NERVOUS(new VAVector(-0.7, 0.4), ""Nervous""),
    PLEASING(new VAVector(0.6, 0.3), ""Pleasing""),
    PEACEFUL(new VAVector(0.5, -0.7), ""Peaceful""),
    RELAXED(new VAVector(0.6, -0.3), ""Relaxed""),
    SAD(new VAVector(-0.7, -0.2), ""Sad""),
    SLEEPY(new VAVector(-0.2, -0.9), ""Sleepy"");

    // CHECKSTYLE:ON

    /**
     * List of all names that represent moods. Used in {@link #nameRepresentsMood(String)}.
     * By storing this once, we save a lot of unnecessary list creations.
     */
    private static final List<String> MOOD_NAMES = Arrays.asList(Mood.values()).stream()
            .map(moodValue -> moodValue.getName())
            .collect(Collectors.toList());

    /**
     * The vector that represents this mood.
     *
     * @return The vector of this mood.
     */
    @Getter
    @JsonIgnore
    private final VAVector vector;

    /**
     * Readable name for the frontend.
     *
     * @return The readable name of this mood.
     */
    @Getter
    private final String name;

    private Mood(final VAVector vector, final String name) {
        this.vector = vector;
        this.name = name;
    }

    /**
     * Get the mood that is closest to the given vector.
     *
     * @param vector
     *            The vector to determine the mood for.
     * @return The Mood that is closest to the vector.
     */
    public static Mood closestTo(final VAVector vector) {
        double distance = Double.MAX_VALUE;
        Mood mood = null;

        for (final Mood m : Mood.values()) {
            final double moodDistance = m.vector.distance(vector);

            if (moodDistance < distance) {
                distance = moodDistance;
                mood = m;
            }
        }

        return mood;
    }

    /**
     * Get the vector that represents the average of the provided list of moods.
     *
     * @param moods
     *            The textual list of moods.
     * @return The average vector, or the zero-vector if no moods were found.
     */
    public static VAVector createTargetVector(final List<String> moods) {
        final List<VAVector> actualMoods = moods.stream()
                .filter(Mood::nameRepresentsMood)
                .map(mood -> Mood.valueOf(mood.toUpperCase(Locale.ROOT)))
                .map(mood -> mood.getVector())
                .collect(Collectors.toList());

        return VAVector.average(actualMoods);
    }

    private static boolean nameRepresentsMood(final String mood) {
        return MOOD_NAMES.contains(mood);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fQsTuL
code,"/*
 * The MIT License
 *
 * Copyright 2017 Arnaud Hamon
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.github.ptitnoony.components.fxtreemap;

import java.beans.PropertyChangeListener;
import java.util.List;

/**
 *
 * @author ahamon
 */
public interface MapData {

    /**
     * Data type that represents whether a data is represents a single object
     * (ie LEAF) or an aggregation of objects (ie NODE)
     */
    enum DataType {
        LEAF, NODE
    };

    DataType getType();

    /**
     * Get the data value.
     *
     * @return the data value
     */
    double getValue();

    /**
     * Set the data value. If the data has children data, their value will be
     * set with the same percentage of the value they use to have before the
     * setValue is applied. The value must be equal or greater to 0.
     *
     * @param newValue the new data value
     */
    void setValue(double newValue);

    /**
     * Get the data name.
     *
     * @return the data name
     */
    String getName();

    /**
     * Set the data name.
     *
     * @param newName the new data name
     */
    void setName(String newName);

    /**
     * If the data is an aggregation of children data.
     *
     * @return if the data is an aggregation of children data
     */
    boolean hasChildrenData();

    /**
     * Get the children aggregated data if any.
     *
     * @return the list of aggregated data
     */
    List<MapData> getChildrenData();

    /**
     * Add a child data. If the data had no child before, adding a child data
     * will override the previously set data value.
     *
     * @param data the data to be added as a child data to aggregate
     */
    void addChildrenData(MapData data);

    /**
     * Remove a child data.
     *
     * @param data the data to be removed
     */
    void removeChildrenData(MapData data);

    /**
     * Add a property change listener.
     *
     * @param listener the listener to be added
     */
    void addPropertyChangeListener(PropertyChangeListener listener);

    /**
     * Remove a property change listener.
     *
     * @param listener the listener to be removed
     */
    void removePropertyChangeListener(PropertyChangeListener listener);

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ciZQkM
code,"/**
 * This program and the accompanying materials
 * are made available under the terms of the License
 * which accompanies this distribution in the file LICENSE.txt
 */
package com.archimatetool.editor.actions;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;

import org.eclipse.jface.action.Action;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.ui.PartInitException;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.browser.IWebBrowser;
import org.eclipse.ui.browser.IWorkbenchBrowserSupport;

import com.archimatetool.editor.ArchiPlugin;
import com.archimatetool.editor.preferences.IPreferenceConstants;
import com.archimatetool.editor.utils.StringUtils;



/**
 * Check for New Action
 * 
 * @author Phillip Beauvoir
 */
public class CheckForNewVersionAction extends Action {
    
    public CheckForNewVersionAction() {
        super(Messages.CheckForNewVersionAction_0);
    }
    
    String getOnlineVersion(URL url) throws IOException {
        URLConnection connection = url.openConnection();
        connection.connect();
        
        InputStream is = connection.getInputStream();
        char[] buf = new char[32];
        Reader r = new InputStreamReader(is, ""UTF-8""); //$NON-NLS-1$
        StringBuilder s = new StringBuilder();
        while(true) {
            int n = r.read(buf);
            if(n < 0) {
                break;
            }
            s.append(buf, 0, n);
        }
        
        is.close();
        r.close();
        
        return s.toString();
    }

    @Override
    public void run() {
        try {
            String versionFile = ArchiPlugin.PREFERENCES.getString(IPreferenceConstants.UPDATE_URL);
            
            if(!StringUtils.isSet(versionFile)) {
                return;
            }
            
            URL url = new URL(versionFile);
            String newVersion = getOnlineVersion(url);
            
            // Get this app's main version number
            String thisVersion = ArchiPlugin.INSTANCE.getVersion();
            
            if(StringUtils.compareVersionNumbers(newVersion, thisVersion) > 0) {
                String downloadURL = ArchiPlugin.PREFERENCES.getString(IPreferenceConstants.DOWNLOAD_URL);
                
                // No download URL
                if(!StringUtils.isSet(downloadURL)) {
                    MessageDialog.openInformation(null, Messages.CheckForNewVersionAction_1,
                            Messages.CheckForNewVersionAction_2 + "" ("" + newVersion + ""). ""); //$NON-NLS-1$ //$NON-NLS-2$
                    return;
                }

                // Does have download URL
                boolean reply = MessageDialog.openQuestion(null, Messages.CheckForNewVersionAction_1,
                        Messages.CheckForNewVersionAction_2 + "" ("" + newVersion + ""). "" + //$NON-NLS-1$ //$NON-NLS-2$
                                Messages.CheckForNewVersionAction_3);

                if(reply) {
                    IWorkbenchBrowserSupport support = PlatformUI.getWorkbench().getBrowserSupport();
                    IWebBrowser browser = support.getExternalBrowser();
                    if(browser != null) {
                        URL url2 = new URL(downloadURL);
                        browser.openURL(url2);
                    }
                }
            }
            else {
                MessageDialog.openInformation(null, Messages.CheckForNewVersionAction_1, Messages.CheckForNewVersionAction_4);
            }
        }
        catch(MalformedURLException ex) {
            ex.printStackTrace();
        }
        catch(IOException ex) {
            ex.printStackTrace();
            showErrorMessage(Messages.CheckForNewVersionAction_5 + "" "" + ex.getMessage()); //$NON-NLS-1$
            return;
        }
        catch(PartInitException ex) {
            ex.printStackTrace();
        }

    };
    
    @Override
    public boolean isEnabled() {
        String versionFile = ArchiPlugin.PREFERENCES.getString(IPreferenceConstants.UPDATE_URL);
        return StringUtils.isSet(versionFile);
    }
    
    private void showErrorMessage(String message) {
        MessageDialog.openError(null, Messages.CheckForNewVersionAction_6, message);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PN234x
code,"/*
The MIT License (MIT)

Copyright (c) 2014 Manni Wood

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 */
package com.manniwood.cl4pg.v1.exceptions;

public class Cl4pgConfFileException extends Cl4pgException {

    private static final long serialVersionUID = 1L;

    public Cl4pgConfFileException() {
        super();
    }

    public Cl4pgConfFileException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
        super(message, cause, enableSuppression, writableStackTrace);
    }

    public Cl4pgConfFileException(String message, Throwable cause) {
        super(message, cause);
    }

    public Cl4pgConfFileException(String message) {
        super(message);
    }

    public Cl4pgConfFileException(Throwable cause) {
        super(cause);
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LmiQmY
code,"package com.sms4blood.emergencyhealthservices.util;

import android.content.Intent;
import android.location.Location;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.widget.Toast;

import com.sms4blood.emergencyhealthservices.Sms;
import com.sms4blood.emergencyhealthservices.app.EhsApplication;

import java.text.DecimalFormat;

/**
 * Created by Vishnu on 8/1/2015.
 */
public class AppUtil extends Util {


    public static boolean callNumber(String phoneNumber) {
        boolean isValidPhoneNumber = checkPhoneNumber(phoneNumber);
        if (isValidPhoneNumber) {
            String callUri = ""tel:"" + phoneNumber;
            Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(callUri));
            callIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(callIntent);
        } else {
            Toast.makeText(EhsApplication.getContext(), ""Invalid phone number."", Toast.LENGTH_SHORT).show();
        }
        return isValidPhoneNumber;
    }

    public static boolean sendSms(String phoneNumber, String message) {
        boolean isValidPhoneNumber = checkPhoneNumber(phoneNumber);
        if (isValidPhoneNumber) {
//            /*It is better to let the android manage the sms sending task using native messaging app*/
//            Intent smsIntent = new Intent(Intent.ACTION_VIEW);
//            // Invokes only SMS/MMS clients
//            smsIntent.setType(""vnd.android-dir/mms-sms"");
//            // Specify the Phone Number
//            smsIntent.putExtra(""address"", phoneNumber);
//            // Specify the Message
//            smsIntent.putExtra(""sms_body"", message);
//            smsIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//            try {
//                startActivity(smsIntent);
//            } catch (Exception e) {
//                e.printStackTrace();
//                Toast.makeText(EhsApplication.getContext(), ""Unable to send sms to this number."", Toast.LENGTH_SHORT)
//                        .show();
//            }
            Intent i=new Intent(EhsApplication.getContext(), Sms.class);
            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            Bundle bundle = new Bundle();
            bundle.putString(""mobileno"",phoneNumber);
            i.putExtras(bundle);
            startActivity(i);
        } else {
            Toast.makeText(EhsApplication.getContext(), ""Invalid phone number."", Toast.LENGTH_SHORT).show();
        }
        return isValidPhoneNumber;
    }

    public static boolean showMap(String latitude, String longitude) {
        try {
            if (!TextUtils.isEmpty(latitude) && (!TextUtils.isEmpty(longitude))) {
                Uri gmmIntentUri = Uri.parse(""google.navigation:q="" + latitude + "","" + longitude);
                Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);
                mapIntent.setPackage(""com.google.android.apps.maps"");
                mapIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(mapIntent);
                return true;
            } else {
                Toast.makeText(EhsApplication.getContext(), ""Address not available."", Toast.LENGTH_SHORT).show();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    public static boolean showMap(String address) {
        try {
            if (!TextUtils.isEmpty(address)) {
                String encodedAddress = address.replaceAll(""\n"", "" "");
                Uri gmmIntentUri = Uri.parse(""google.navigation:q="" + encodedAddress);
                Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);
                mapIntent.setPackage(""com.google.android.apps.maps"");
                mapIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(mapIntent);
                return true;
            } else {
                Toast.makeText(EhsApplication.getContext(), ""Address not available."", Toast.LENGTH_SHORT).show();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    /**
     * @param fromLatitude
     * @param fromLongitude
     * @param toLatitude
     * @param toLongitude
     * @return distance between the two latitudes and longitudes in kms.
     */
    public static double calculateDistance(double fromLatitude,double fromLongitude,double toLatitude,double toLongitude) {
        float results[] = new float[1];

        try {
            Location.distanceBetween(fromLatitude, fromLongitude, toLatitude, toLongitude, results);
        } catch (Exception e) {
            if (e != null)
                e.printStackTrace();
        }
        int dist = (int) results[0];
        if(dist<=0) {
            return 0D;
        }

        DecimalFormat decimalFormat = new DecimalFormat(""#.##"");
        results[0]/=1000D;
        String distance = decimalFormat.format(results[0]);
        double d = Double.parseDouble(distance);
        return d;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LfGsI3
code,"package se.leiflandia.lroi.utils;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.content.Context;
import android.content.SharedPreferences;
import android.text.TextUtils;

import se.leiflandia.lroi.auth.model.AccessToken;
import se.leiflandia.lroi.auth.model.UserCredentials;

public class AuthUtils {

    private static final String PREF_ACTIVE_ACCOUNT = ""active_account"";
    private static final String PREFS_NAME = ""se.leiflandia.lroi.prefs"";

    public static void removeActiveAccount(Context context, String accountType) {
        Account account = getActiveAccount(context, accountType);
        if (account != null) {
            AccountManager.get(context).removeAccount(account, null, null);
        }
        setActiveAccountName(context, null);
    }

    public static Account getActiveAccount(final Context context, final String accountType) {
        Account[] accounts = AccountManager.get(context).getAccountsByType(accountType);
        return getActiveAccount(accounts, getActiveAccountName(context));
    }

    public static boolean hasActiveAccount(final Context context, final String accountType) {
        return getActiveAccount(context, accountType) != null;
    }

    private static String getActiveAccountName(final Context context) {
        return getSharedPreferences(context)
                .getString(PREF_ACTIVE_ACCOUNT, null);
    }

    public static void setActiveAccountName(final Context context, final String name) {
        getSharedPreferences(context).edit()
                .putString(PREF_ACTIVE_ACCOUNT, name)
                .commit();
    }

    private static Account getActiveAccount(final Account[] accounts, final String activeAccountName) {
        for (Account account : accounts) {
            if (TextUtils.equals(account.name, activeAccountName)) {
                return account;
            }
        }
        return null;
    }

    private static SharedPreferences getSharedPreferences(final Context context) {
        return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
    }

    /**
     * Saves an authorized account in account manager and set as active account.
     */
    public static void setAuthorizedAccount(Context context, UserCredentials credentials, AccessToken token, String authtokenType, String accountType) {
        final AccountManager accountManager = AccountManager.get(context);
        Account account = findOrCreateAccount(accountManager, credentials.getUsername(), token.getRefreshToken(), accountType);
        accountManager.setAuthToken(account, authtokenType, token.getAccessToken());
        setActiveAccountName(context, account.name);
    }

    /**
     * Sets password of account, creates a new account if necessary.
     */
    private static Account findOrCreateAccount(AccountManager accountManager, String username, String refreshToken, String accountType) {

        for (Account account : accountManager.getAccountsByType(accountType)) {
            if (account.name.equals(username)) {
                accountManager.setPassword(account, refreshToken);
                return account;
            }
        }

        Account account = new Account(username, accountType);
        accountManager.addAccountExplicitly(account, refreshToken, null);
        return account;
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PZfaVK
code,"package dev.jee6demo.jspes;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(""/EventSourceServlet"")
public class EventSourceServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType(""text/event-stream"");  
		response.setCharacterEncoding(""UTF-8"");
		PrintWriter pw = response.getWriter();
		for (int i = 0; i < 5; i++) { 
			pw.write(""event:new_time\n"");
			pw.write(""data: "" + now() + ""\n\n"");
			pw.flush();
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		pw.write(""event:new_time\n"");
		pw.write(""data: STOP\n\n"");
		pw.flush();
		pw.close();
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request,response);
	}
	public static String now(){
		DateFormat dateFormat = new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss.SSS"");
		return dateFormat.format(new Date());
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JVEl6l
code,"package com.nicolas.coding.common.photopick;

import android.content.Context;
import android.database.Cursor;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.CursorAdapter;
import android.widget.ImageView;

import com.nostra13.universalimageloader.core.ImageLoader;

import com.nicolas.coding.MyApp;
import com.nicolas.coding.R;
import com.nicolas.coding.common.photopick.PhotoPickActivity.GridViewCheckTag;

/**
 * Created by chenchao on 15/5/6.
 */
class GridPhotoAdapter extends CursorAdapter {

    final int itemWidth;
    LayoutInflater mInflater;
    PhotoPickActivity mActivity;
    //
//    enum Mode { All, Folder }
//    private Mode mMode = Mode.All;
//
//    void setmMode(Mode mMode) {
//        this.mMode = mMode;
//    }
    View.OnClickListener mClickItem = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            mActivity.clickPhotoItem(v);
        }
    };

    GridPhotoAdapter(Context context, Cursor c, boolean autoRequery, PhotoPickActivity activity) {
        super(context, c, autoRequery);
        mInflater = LayoutInflater.from(context);
        mActivity = activity;
        int spacePix = context.getResources().getDimensionPixelSize(R.dimen.pickimage_gridlist_item_space);
        itemWidth = (MyApp.sWidthPix - spacePix * 4) / 3;
    }

    @Override
    public View newView(Context context, Cursor cursor, ViewGroup parent) {
        View convertView = mInflater.inflate(R.layout.photopick_gridlist_item, parent, false);
        ViewGroup.LayoutParams layoutParams = convertView.getLayoutParams();
        layoutParams.height = itemWidth;
        layoutParams.width = itemWidth;
        convertView.setLayoutParams(layoutParams);


        GridViewHolder holder = new GridViewHolder();
        holder.icon = (ImageView) convertView.findViewById(R.id.icon);
        holder.iconFore = (ImageView) convertView.findViewById(R.id.iconFore);
        holder.check = (CheckBox) convertView.findViewById(R.id.check);
        GridViewCheckTag checkTag = new GridViewCheckTag(holder.iconFore);
        holder.check.setTag(checkTag);
        holder.check.setOnClickListener(mClickItem);
        convertView.setTag(holder);

        ViewGroup.LayoutParams iconParam = holder.icon.getLayoutParams();
        iconParam.width = itemWidth;
        iconParam.height = itemWidth;
        holder.icon.setLayoutParams(iconParam);

        return convertView;
    }

    @Override
    public void bindView(View view, Context context, Cursor cursor) {
        GridViewHolder holder;
        holder = (GridViewHolder) view.getTag();

        ImageLoader imageLoader = ImageLoader.getInstance();

        String path = ImageInfo.pathAddPreFix(cursor.getString(1));
        imageLoader.displayImage(path, holder.icon, PhotoPickActivity.optionsImage);

        ((GridViewCheckTag) holder.check.getTag()).path = path;

        boolean picked = mActivity.isPicked(path);
        holder.check.setChecked(picked);
        holder.iconFore.setVisibility(picked ? View.VISIBLE : View.INVISIBLE);
    }

    static class GridViewHolder {
        ImageView icon;
        ImageView iconFore;
        CheckBox check;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TOzyll
code,"package com.github.pineasaurusrex.inference_engine;

import java.util.HashMap;

/**
 * Partially or fully assigned model
 * A model represents a possible representation of the propositional symbol states in the KB
 */
public class Model {
    private HashMap<PropositionalSymbol, Boolean> symbolValues = new HashMap<>();

    public boolean holdsTrue(Sentence sentence) {
        if (sentence.isPropositionSymbol()) {
            return symbolValues.get(sentence);
        } else {
            switch(sentence.getConnective()) {
                case NOT:
                    return !holdsTrue(sentence.getOperand(0));
                case AND:
                    return holdsTrue(sentence.getOperand(0)) && holdsTrue(sentence.getOperand(1));
                case OR:
                    return holdsTrue(sentence.getOperand(0)) || holdsTrue(sentence.getOperand(1));
                case IMPLICATION:
                    return !holdsTrue(sentence.getOperand(0)) || holdsTrue(sentence.getOperand(1));
                case BICONDITIONAL:
                    return holdsTrue(sentence.getOperand(0)) == holdsTrue(sentence.getOperand(1));
            }
        }
        return false;
    }

    public boolean holdsTrue(KnowledgeBase kb) {
        return kb.getSentences().parallelStream()
                .map(this::holdsTrue)
                .allMatch(Boolean::booleanValue);
    }


    /**
     * Returns a new model, with the union of the results of the old model and the result passed in
     * @param symbol the symbol to merge in
     * @param b the value to set
     * @return a new Model object
     */
    public Model union(PropositionalSymbol symbol, boolean b) {
        Model m = new Model();
        m.symbolValues.putAll(this.symbolValues);
        m.symbolValues.put(symbol, b);
        return m;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",evyXVs
code,"package com.swfarm.biz.product.dao.impl;

import com.swfarm.biz.product.bo.SkuSaleMapping;
import com.swfarm.biz.product.dao.SkuSaleMappingDao;
import com.swfarm.pub.framework.dao.GenericDaoHibernateImpl;

public class SkuSaleMappingDaoImpl extends GenericDaoHibernateImpl<SkuSaleMapping, Long> implements SkuSaleMappingDao {

	public SkuSaleMappingDaoImpl(Class<SkuSaleMapping> type) {
		super(type);
	}

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OUPpDC
code,"/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.synapse.v2019_06_01_preview;

import java.util.Collection;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.microsoft.rest.ExpandableStringEnum;

/**
 * Defines values for IntegrationRuntimeState.
 */
public final class IntegrationRuntimeState extends ExpandableStringEnum<IntegrationRuntimeState> {
    /** Static value Initial for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState INITIAL = fromString(""Initial"");

    /** Static value Stopped for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState STOPPED = fromString(""Stopped"");

    /** Static value Started for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState STARTED = fromString(""Started"");

    /** Static value Starting for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState STARTING = fromString(""Starting"");

    /** Static value Stopping for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState STOPPING = fromString(""Stopping"");

    /** Static value NeedRegistration for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState NEED_REGISTRATION = fromString(""NeedRegistration"");

    /** Static value Online for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState ONLINE = fromString(""Online"");

    /** Static value Limited for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState LIMITED = fromString(""Limited"");

    /** Static value Offline for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState OFFLINE = fromString(""Offline"");

    /** Static value AccessDenied for IntegrationRuntimeState. */
    public static final IntegrationRuntimeState ACCESS_DENIED = fromString(""AccessDenied"");

    /**
     * Creates or finds a IntegrationRuntimeState from its string representation.
     * @param name a name to look for
     * @return the corresponding IntegrationRuntimeState
     */
    @JsonCreator
    public static IntegrationRuntimeState fromString(String name) {
        return fromString(name, IntegrationRuntimeState.class);
    }

    /**
     * @return known IntegrationRuntimeState values
     */
    public static Collection<IntegrationRuntimeState> values() {
        return values(IntegrationRuntimeState.class);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pLR6xl
code,"package org.reasm.m68k.assembly.internal;

import javax.annotation.Nonnull;
import javax.annotation.concurrent.Immutable;

import org.reasm.Value;
import org.reasm.ValueToBooleanVisitor;

/**
 * The <code>WHILE</code> directive.
 *
 * @author Francis Gagné
 */
@Immutable
class WhileDirective extends Mnemonic {

    @Nonnull
    static final WhileDirective WHILE = new WhileDirective();

    private WhileDirective() {
    }

    @Override
    void assemble(M68KAssemblyContext context) {
        context.sizeNotAllowed();

        final Object blockState = context.getParentBlock();
        if (!(blockState instanceof WhileBlockState)) {
            throw new AssertionError();
        }

        final WhileBlockState whileBlockState = (WhileBlockState) blockState;

        // The WHILE directive is assembled on every iteration.
        // Parse the condition operand on the first iteration only.
        if (!whileBlockState.parsedCondition) {
            if (context.requireNumberOfOperands(1)) {
                whileBlockState.conditionExpression = parseExpressionOperand(context, 0);
            }

            whileBlockState.parsedCondition = true;
        }

        final Value condition;
        if (whileBlockState.conditionExpression != null) {
            condition = whileBlockState.conditionExpression.evaluate(context.getEvaluationContext());
        } else {
            condition = null;
        }

        final Boolean result = Value.accept(condition, ValueToBooleanVisitor.INSTANCE);
        if (!(result != null && result.booleanValue())) {
            // Skip the block body and stop the iteration.
            whileBlockState.iterator.next();
            whileBlockState.hasNextIteration = false;
        }
    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LsGys3
code,"/*-
 * See the file LICENSE for redistribution information.
 *
 * Copyright (c) 2002,2008 Oracle.  All rights reserved.
 *
 * $Id: EntityConverter.java,v 1.11 2008/01/07 14:28:58 cwl Exp $
 */

package com.sleepycat.persist.evolve;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * A subclass of Converter that allows specifying keys to be deleted.
 *
 * <p>When a Converter is used with an entity class, secondary keys cannot be
 * automatically deleted based on field deletion, because field Deleter objects
 * are not used in conjunction with a Converter mutation.  The EntityConverter
 * can be used instead of a plain Converter to specify the key names to be
 * deleted.</p>
 *
 * <p>It is not currently possible to rename or insert secondary keys when
 * using a Converter mutation with an entity class.</p>
 *
 * @see Converter
 * @see com.sleepycat.persist.evolve Class Evolution
 * @author Mark Hayes
 */
public class EntityConverter extends Converter {

    private static final long serialVersionUID = -988428985370593743L;

    private Set<String> deletedKeys;

    /**
     * Creates a mutation for converting all instances of the given entity
     * class version to the current version of the class.
     */
    public EntityConverter(String entityClassName,
                           int classVersion,
                           Conversion conversion,
                           Set<String> deletedKeys) {
        super(entityClassName, classVersion, null, conversion);

        /* Eclipse objects to assigning with a ternary operator. */
        if (deletedKeys != null) {
            this.deletedKeys = new HashSet(deletedKeys);
        } else {
            this.deletedKeys = Collections.emptySet();
        }
    }

    /**
     * Returns the set of key names that are to be deleted.
     */
    public Set<String> getDeletedKeys() {
        return Collections.unmodifiableSet(deletedKeys);
    }

    /**
     * Returns true if the deleted and renamed keys are equal in this object
     * and given object, and if the {@link Converter#equals} superclass method
     * returns true.
     */
    @Override
    public boolean equals(Object other) {
        if (other instanceof EntityConverter) {
            EntityConverter o = (EntityConverter) other;
            return deletedKeys.equals(o.deletedKeys) &&
                   super.equals(other);
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return deletedKeys.hashCode() + super.hashCode();
    }

    @Override
    public String toString() {
        return ""[EntityConverter "" + super.toString() +
               "" DeletedKeys: "" + deletedKeys + ']';
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UcYypx
code,"angular.module('tips.tips').controller('TipsController', ['$scope', '$routeParams', '$location', 'Global', 'Tips', function ($scope, $routeParams, $location, Global, Tips) {
    $scope.global = Global;

    $scope.createTip = function () {
        var tips = new Tips({
            text: this.text,
            likes: this.likes,
            category: this.category
        });
        tips.$save(function (response) {
            $location.path(""/"");
        });

        this.title = """";
    };

    $scope.showTip = function () {
        Tips.query(function (tips) {
            $scope.tips = tips;

            tips.linkEdit = 'tips/edit/';

            // show tips size
            function Settings (minLikes, maxLikes) {
                var that = this;
                that.size = {
                    min: 26,
                    max: 300
                };
                that.maxLikes = maxLikes;
                that.minLikes = tips[0].likes;
                that.valueOfdivision = (function(){
                    return (that.size.max - that.size.min)/that.maxLikes
                })()
            }

            function startIsotope(){
                var el = $('#isotope-container');
                el.isotope({
                    itemSelector: '.isotope-element',
                    layoutMode: 'fitRows',
                    sortBy: 'number',
                    sortAscending: true,
                });
                return el;
            }

            var maxLikes = 0;
            var minLikes = 0;
            for (var i = 0; i < tips.length; i++) {
                if(maxLikes <= tips[i].likes)maxLikes = tips[i].likes;
                if(minLikes >= tips[i].likes)minLikes = tips[i].likes;
            };
            tips.settingsView = new Settings(minLikes, maxLikes);

            $scope.$watch('tips', function () {
                $scope.$evalAsync(function () {
                    var isotope = startIsotope();
                });
            })

        });
    };

    $scope.updateTip = function (tip) {
        var tip = new Tips(tip);
        tip.$update(tip, function(){
            console.log(""update updateTip: "", tip._id);
        }, function(){
            console.warn(""error updateTip:"", tip._id);
        });
    };

    $scope.getTip = function () {
        Tips.query(function (tip) {
            $scope.tip = tip;
            console.log(tip);
        });
    };

    $scope.editTip = function(tip){
        console.log(""edit tip"");
    };

}])",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Iwh5_Y
code,"// Modified from https://github.com/dburrows/draft-js-basic-html-editor/blob/master/src/utils/draftRawToHtml.js

'use strict';
import { List } from 'immutable';
import * as InlineStylesProcessor from './inline-styles-processor';
import ApiDataInstance from './api-data-instance';
import AtomicBlockProcessor from './atomic-block-processor';
import ENTITY from './entities';
import merge from 'lodash/merge';

const _ = {
  merge,
}

const annotationIndicatorPrefix = '__ANNOTATION__=';

let defaultBlockTagMap = {
	'atomic': `<div>%content%</div>`,
	'blockquote': `<blockquote>%content%</blockquote>`,
	'code-block': `<code>%content%</code>`,
	'default': `<p>%content%</p>`,
	'header-one': `<h1>%content%</h1>`,
	'header-two': `<h2>%content%</h2>`,
	'header-three': `<h3>%content%</h3>`,
	'header-four': `<h4>%content%</h4>`,
	'header-five': `<h5>%content%</h5>`,
	'header-six': `<h6>%content%</h6>`,
	'ordered-list-item': `<li>%content%</li>`,
	'paragraph': `<p>%content%</p>`,
	'unordered-list-item': `<li>%content%</li>`,
	'unstyled': `<p>%content%</p>`,
};

let inlineTagMap = {
	BOLD: ['<strong>', '</strong>'],
	CODE: ['<code>', '</code>'],
	default: ['<span>', '</span>'],
	ITALIC: ['<em>', '</em>'],
	UNDERLINE: ['<u>', '</u>'],
};

let defaultEntityTagMap = {
	[ENTITY.ANNOTATION.type]: ['<abbr title=""<%= data.pureAnnotationText %>""><%= data.text %>', '</abbr>'],
	[ENTITY.AUDIO.type]: ['<div class=""audio-container""><div class=""audio-title""><%= data.title %></div><div class=""audio-desc""><%= data.description %></div><audio src=""<%= data.url %>"" />', '</div>'],
	[ENTITY.BLOCKQUOTE.type]: ['<blockquote><div><%= data.quote %></div><div><%= data.quoteBy %></div>', '<blockquote>'],
	[ENTITY.EMBEDDEDCODE.type]: ['<div><%= data.embeddedCode%>', '</div>'],
	[ENTITY.INFOBOX.type]: ['<div class=""info-box-container""><div class=""info-box-title""><%= data.title %></div><div class=""info-box-body""><%= data.body %></div>', '</div>'],
	[ENTITY.LINK.type]: ['<a target=""_blank"" href=""<%= data.url %>"">', '</a>'],
	[ENTITY.IMAGE.type]: ['<img alt=""<%= data.description %>"" src=""<%= data.url %>"">', '</img>'],
	[ENTITY.IMAGELINK.type]: ['<img alt=""<%= data.description %>"" src=""<%= data.url %>"">', '</img>'],
  [ENTITY.SLIDESHOW.type]: ['<!-- slideshow component start --> <ol class=""slideshow-container""> <% if(!data) { data = []; } data.forEach(function(image) { %><li class=""slideshow-slide""><img src=""<%- image.url %>"" /></li><% }); %>', '</ol><!-- slideshow component end -->'],
	[ENTITY.IMAGEDIFF.type]: ['<!-- imageDiff component start --> <ol class=""image-diff-container""> <% if(!data) { data = []; } data.forEach(function(image, index) { if (index > 1) { return; } %><li class=""image-diff-item""><img src=""<%- image.url %>"" /></li><% }); %>', '</ol><!-- imageDiff component end-->'],
	[ENTITY.YOUTUBE.type]: ['<iframe width=""560"" height=""315"" src=""https://www.youtube.com/embed/<%= data.youtubeId %>"" frameborder=""0"" allowfullscreen>', '</iframe>'],
};

let nestedTagMap = {
	'ordered-list-item': ['<ol>', '</ol>'],
	'unordered-list-item': ['<ul>', '</ul>'],
};

function _convertInlineStyle (block, entityMap, blockTagMap, entityTagMap) {
	return blockTagMap[block.type] ? blockTagMap[block.type].replace(
		'%content%',
		InlineStylesProcessor.convertToHtml(inlineTagMap, entityTagMap, entityMap, block)
	) : blockTagMap.default.replace(
		'%content%',
		InlineStylesProcessor.convertToHtml(inlineTagMap, block)
	);
}

function _convertBlocksToHtml (blocks, entityMap, blockTagMap, entityTagMap) {
	let html = '';
	let nestLevel = []; // store the list type of the previous item: null/ol/ul
	blocks.forEach((block) => {
		// create tag for <ol> or <ul>: deal with ordered/unordered list item
		// if the block is a list-item && the previous block is not a list-item
		if (nestedTagMap[block.type] && nestLevel[0] !== block.type) {
			html += nestedTagMap[block.type][0]; // start with <ol> or <ul>
			nestLevel.unshift(block.type);
		}

		// end tag with </ol> or </ul>: deal with ordered/unordered list item
		if (nestLevel.length > 0 && nestLevel[0] !== block.type) {
			html += nestedTagMap[nestLevel.shift()][1]; // close with </ol> or </ul>
		}

		html += _convertInlineStyle(block, entityMap, blockTagMap, entityTagMap);
	});

	// end tag with </ol> or </ul>: or if it is the last block
	if (blocks.length > 0 && nestedTagMap[blocks[blocks.length - 1].type]) {
		html += nestedTagMap[nestLevel.shift()][1]; // close with </ol> or </ul>
	}

	return html;
}

function convertBlocksToApiData (blocks, entityMap, entityTagMap) {
	let apiDataArr = List();
	let content = [];
	let nestLevel = [];
	blocks.forEach((block) => {
		// block is not a list-item
		if (!nestedTagMap[block.type]) {
			// if previous block is a list-item
			if (content.length > 0 && nestLevel.length > 0) {
				apiDataArr = apiDataArr.push(new ApiDataInstance({ type: nestLevel[0], content: content }));
				content = [];
				nestLevel.shift();
			}

			if (block.type.startsWith('atomic') || block.type.startsWith('media')) {
				apiDataArr = apiDataArr.push(AtomicBlockProcessor.convertBlock(entityMap, block));
			} else {
				let c",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PZvTNG
code,"(function () {
	""use strict"";

	require('futures/forEachAsync');

	var fs = require('fs'),
		crypto = require('crypto'),
		path = require('path'),
		exec = require('child_process').exec,
		mime = require('mime'),
		FileStat = require('filestat'),
		dbaccess = require('../dbaccess'),
		utils = require('../utils'),
		hashAlgo = ""md5"";

	function readFile(filePath, callback) {
		var readStream, hash = crypto.createHash(hashAlgo);

		readStream = fs.createReadStream(filePath);

		readStream.on('data', function (data) {
			hash.update(data);
		});

		readStream.on('error', function (err) {
			console.log(""Read Error: "" + err.toString());
			readStream.destroy();
			fs.unlink(filePath);
			callback(err);
		});

		readStream.on('end', function () {
			callback(null, hash.digest(""hex""));
		});
	}

	function saveToFs(md5, filePath, callback) {
		var newPath = utils.hashToPath(md5);

		path.exists(newPath, function (exists) {
			if (exists) {
				fs.move(filePath, newPath, function (err) {
					callback(err, newPath);
				});
				return;
			}

			exec('mkdir -p ' + newPath, function (err, stdout, stderr) {
				var tError;
				if (err || stderr) {
					console.log(""Err: "" + (err ? err : ""none""));
					console.log(""stderr: "" + (stderr ? stderr : ""none""));
					tError = {error: err, stderr: stderr, stdout: stdout};
					return callback(tError, newPath);
				}

				console.log(""stdout: "" + (stdout ? stdout : ""none""));
				fs.move(filePath, newPath, function (moveErr) {
					callback(moveErr, newPath);
				});
			});
		});
	}

	function addKeysToFileStats(fieldNames, stats) {
		var fileStats = [];

		stats.forEach(function (item) {
			var fileStat = new FileStat();

			item.forEach(function (fieldValue, i) {
				fileStat[fieldNames[i]] = fieldValue;
			});

			if (fileStat.path) {
				fileStat.type = mime.lookup(fileStat.path);
			}

			fileStats.push(fileStat);
		});


		return fileStats;
	}

	function importFile(fileStat, tmpFile, username, callback) {
		var oldPath;

		oldPath = tmpFile.path;
		readFile(oldPath, function (err, md5) {
			if (err) {
				fileStat.err = err;
				callback(err, fileStat);
				return;
			}

			// if we have an md5sum and they don't match, abandon ship
			if (fileStat.md5 && fileStat.md5 !== md5) {
				callback(""MD5 sums don't match"");
				return;
			}

			fileStat.md5 = md5;

			fileStat.genTmd5(function (error, tmd5) {
				if (!error) {
					fileStat.tmd5 = tmd5;
			
					saveToFs(fileStat.md5, oldPath, function (fserr) {
						if (fserr) {
							// ignoring possible unlink error
							fs.unlink(oldPath);
							fileStat.err = ""File did not save"";
						} else {
							dbaccess.put(fileStat, username);
						}
						callback(fserr, fileStat);
					});
				}
			});
		});
	}

	function handleUpload(req, res, next) {
		if (!req.form) {
			return next();
		}

		req.form.complete(function (err, fields, files) {
			var fileStats, bFirst;

			fields.statsHeader = JSON.parse(fields.statsHeader);
			fields.stats = JSON.parse(fields.stats);

			fileStats = addKeysToFileStats(fields.statsHeader, fields.stats);
			dbaccess.createViews(req.remoteUser, fileStats);

			res.writeHead(200, {'Content-Type': 'application/json'});
			
			// response as array
			res.write(""["");

			bFirst = true;
			function handleFileStat(next, fileStat) {
				// this callback is synchronous
				fileStat.checkMd5(function (qmd5Error, qmd5) {
					function finishReq(err) {
						console.log(fileStat);
						fileStat.err = err;

						// we only want to add a comma after the first one
						if (!bFirst) {
							res.write("","");
						}
						bFirst = false;

						res.write(JSON.stringify(fileStat));
						return next();
					}

					if (qmd5Error) {
						return finishReq(qmd5Error);
					}
					importFile(fileStat, files[qmd5], req.remoteUser, finishReq);
				});
			}

			fileStats.forEachAsync(handleFileStat).then(function () {
				// end response array
				res.end(""]"");
			});
		});
	}

	module.exports = handleUpload;
}());
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xCe1N2
code,"{
  test.ok(
    thrown instanceof axios.Cancel,
    ""Promise must be rejected with a Cancel obejct""
  );
  test.equal(thrown.message, ""Operation has been canceled."");
  test.done();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wUPUVb
code,"""use strict"";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (""value"" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { ""default"": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(""Cannot call a class as a function""); } }

function _inherits(subClass, superClass) { if (typeof superClass !== ""function"" && superClass !== null) { throw new TypeError(""Super expression must either be null or a function, not "" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _ = require(""../../../"");

var _2 = _interopRequireDefault(_);

describe("".toString()"", function () {
  var User = (function (_Model) {
    _inherits(User, _Model);

    function User() {
      _classCallCheck(this, User);

      _get(Object.getPrototypeOf(User.prototype), ""constructor"", this).apply(this, arguments);
    }

    return User;
  })(_2[""default""]);

  describe(""User.find.one.where(\""id\"", 1)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.one.where(""id"", 1).toString().should.eql(""User.find.one.where(\""id\"", 1)"");
    });
    it(""should not matter which order the chain is called in"", function () {
      User.find.where(""id"", 1).one.toString().should.eql(""User.find.one.where(\""id\"", 1)"");
    });
  });

  describe(""User.find.all.where(\""id\"", 1)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.all.where(""id"", 1).toString().should.eql(""User.find.all.where(\""id\"", 1)"");
    });
  });

  describe(""User.find.where(\""id\"", \""<\"", 10).andWhere(\""id\"", \"">\"", 1)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", ""<"", 10).andWhere(""id"", "">"", 1).toString().should.eql(""User.find.where(\""id\"", \""<\"", 10).andWhere(\""id\"", \"">\"", 1)"");
    });
  });

  describe(""User.find.where(\""id\"", \""<\"", 10).andWhere(\""id\"", \"">\"", 1).andWhere(\""id\"", \""!=\"", 3)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", ""<"", 10).andWhere(""id"", "">"", 1).andWhere(""id"", ""!="", 3).toString().should.eql(""User.find.where(\""id\"", \""<\"", 10).andWhere(\""id\"", \"">\"", 1).andWhere(\""id\"", \""!=\"", 3)"");
    });
  });

  describe(""User.find.where(\""id\"", \""<\"", 10).orWhere(\""id\"", \"">\"", 1)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", ""<"", 10).orWhere(""id"", "">"", 1).toString().should.eql(""User.find.where(\""id\"", \""<\"", 10).orWhere(\""id\"", \"">\"", 1)"");
    });
  });

  describe(""User.find.where(\""id\"", \""<\"", 10).groupBy(\""categoryId\"")"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", ""<"", 10).groupBy(""categoryId"").toString().should.eql(""User.find.where(\""id\"", \""<\"", 10).groupBy(\""categoryId\"")"");
    });
  });

  describe(""User.find.where(\""id\"", \""<\"", 10).orderBy(\""categoryId\"")"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", ""<"", 10).orderBy(""categoryId"", ""desc"").toString().should.eql(""User.find.where(\""id\"", \""<\"", 10).orderBy(\""categoryId\"", \""desc\"")"");
    });
  });

  describe(""User.find.where(\""id\"", \"">\"", 2).limit(4)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.find.where(""id"", "">"", 2).limit(4).toString().should.eql(""User.find.where(\""id\"", \"">\"", 2).limit(4)"");
    });
  });

  describe(""User.count.where(\""id\"", 1)"", function () {
    it(""should return a string representation of the chain"", function () {
      User.count.where(""id"", 1).toString().should.eql(""User.count.where(\""id\"", 1)"");
    });
  });
});",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FQ4oA9
code,"import Objective from '../objective';

export default class KillShipsObjective extends Objective {
    constructor (game, ships) {
        super(game);

        if (!Array.isArray(ships)) {
            ships = [ships];
        }

        this.bots = _.filter(ships, ship => { return ship.alive; });

        this.ships = ships;
    }

    isComplete () {
        var all_dead = true;

        for (var i = 0; i < this.ships.length; i++) {
            if (this.ships[i].alive) {
                all_dead = false;
                break;
            }
        }

        return all_dead;
    }
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ok7feC
code,"#!/usr/bin/env node
process.env.FORCE_COLOR = true;

const program = require('commander');
const package = require('../package.json');

/**
 * CLI Commands
 *
 */
program
    .version((package.name) + '@' + (package.version));

/**
 * Command for creating and seeding
 */
program
    .command('create [dataObject]', 'Generate seed data').alias('c')
    .command('teardown', 'Tear down seed data').alias('t')
    .parse(process.argv);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",w1kGnK
code,"import {
  LOAD_SEARCH_RESULT_SUCCESS,
  CLEAR_SEARCH_RESULTS,
} from 'actions/search';
import { createActionHandlers } from 'utils/reducer/actions-handlers';

const actionHandlers = {};

export function loadSearchResultSuccess(state, searchResultsList) {
  return searchResultsList.reduce((acc, result) => {
    return {
      ...acc,
      [result.id]: result,
    };
  }, {});
}

export function clearSearchResult() {
  return {};
}

actionHandlers[LOAD_SEARCH_RESULT_SUCCESS] = loadSearchResultSuccess;
actionHandlers[CLEAR_SEARCH_RESULTS] = clearSearchResult;

export default createActionHandlers(actionHandlers);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",o2gmSo
code,"var namespace_kluster_kite_1_1_large_objects_1_1_tests =
[
    [ ""ParcelsTest"", ""class_kluster_kite_1_1_large_objects_1_1_tests_1_1_parcels_test.html"", ""class_kluster_kite_1_1_large_objects_1_1_tests_1_1_parcels_test"" ]
];",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t0qI5O
code,"""use strict"";
/*
 * Copyright (c) 2013-2019 Bert Freudenberg
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

Object.extend(Squeak.Primitives.prototype,
'ScratchPluginAdditions', {
    // methods not handled by generated ScratchPlugin
    scratch_primitiveOpenURL: function(argCount) {
        var url = this.stackNonInteger(0).bytesAsString();
        if (url == """") return false;
        if (/^\/SqueakJS\//.test(url)) {
            url = url.slice(10);     // remove file root
            var path = Squeak.splitFilePath(url),
                template = Squeak.Settings[""squeak-template:"" + path.dirname];
            if (template) url = JSON.parse(template).url + ""/"" + path.basename;
        }
        window.open(url, ""_blank""); // likely blocked as pop-up, but what can we do?
        return this.popNIfOK(argCount);
    },
    scratch_primitiveGetFolderPath: function(argCount) {
        var index = this.stackInteger(0);
        if (!this.success) return false;
        var path;
        switch (index) {
            case 1: path = '/'; break;              // home dir
            // case 2: path = '/desktop'; break;    // desktop
            // case 3: path = '/documents'; break;  // documents
            // case 4: path = '/pictures'; break;   // my pictures
            // case 5: path = '/music'; break;      // my music
        }
        if (!path) return false;
        this.vm.popNandPush(argCount + 1, this.makeStString(this.filenameToSqueak(path)));
        return true;
    },
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",D59I8e
code,"// フォーマット
var koyomi = require('../..').create();
var format = koyomi.format.bind(koyomi);
var eq = require('assert').equal;

koyomi.startMonth = 1;

// 序数  (CC:経過日数)
eq(format(20150101, 'CC'),     '1');
eq(format(20150101, 'CC>0'),   '1st');
eq(format(20150102, 'CC>0'),   '2nd');
eq(format(20150103, 'CC>0'),   '3rd');
eq(format(20150104, 'CC>0'),   '4th');
eq(format(20150105, 'CC>0'),   '5th');
eq(format(20150106, 'CC>0'),   '6th');
eq(format(20150107, 'CC>0'),   '7th');
eq(format(20150108, 'CC>0'),   '8th');
eq(format(20150109, 'CC>0'),   '9th');
eq(format(20150110, 'CC>0'),  '10th');
eq(format(20150111, 'CC>0'),  '11th');
eq(format(20150112, 'CC>0'),  '12th');
eq(format(20150113, 'CC>0'),  '13th');
eq(format(20150114, 'CC>0'),  '14th');
eq(format(20150115, 'CC>0'),  '15th');
eq(format(20150116, 'CC>0'),  '16th');
eq(format(20150117, 'CC>0'),  '17th');
eq(format(20150118, 'CC>0'),  '18th');
eq(format(20150119, 'CC>0'),  '19th');
eq(format(20150120, 'CC>0'),  '20th');
eq(format(20150121, 'CC>0'),  '21st');
eq(format(20150122, 'CC>0'),  '22nd');
eq(format(20150123, 'CC>0'),  '23rd');
eq(format(20150124, 'CC>0'),  '24th');
eq(format(20150125, 'CC>0'),  '25th');
eq(format(20150126, 'CC>0'),  '26th');
eq(format(20150127, 'CC>0'),  '27th');
eq(format(20150128, 'CC>0'),  '28th');
eq(format(20150129, 'CC>0'),  '29th');
eq(format(20150130, 'CC>0'),  '30th');
eq(format(20150131, 'CC>0'),  '31st');

eq(format(20150201, 'CC>0'),  '32nd');
eq(format(20150202, 'CC>0'),  '33rd');
eq(format(20150203, 'CC>0'),  '34th');
eq(format(20150204, 'CC>0'),  '35th');
eq(format(20150205, 'CC>0'),  '36th');
eq(format(20150206, 'CC>0'),  '37th');
eq(format(20150207, 'CC>0'),  '38th');
eq(format(20150208, 'CC>0'),  '39th');
eq(format(20150209, 'CC>0'),  '40th');
eq(format(20150210, 'CC>0'),  '41st');
eq(format(20150211, 'CC>0'),  '42nd');
eq(format(20150212, 'CC>0'),  '43rd');
eq(format(20150213, 'CC>0'),  '44th');
eq(format(20150214, 'CC>0'),  '45th');
eq(format(20150215, 'CC>0'),  '46th');
eq(format(20150216, 'CC>0'),  '47th');
eq(format(20150217, 'CC>0'),  '48th');
eq(format(20150218, 'CC>0'),  '49th');
eq(format(20150219, 'CC>0'),  '50th');
eq(format(20150220, 'CC>0'),  '51st');
eq(format(20150221, 'CC>0'),  '52nd');
eq(format(20150222, 'CC>0'),  '53rd');
eq(format(20150223, 'CC>0'),  '54th');
eq(format(20150224, 'CC>0'),  '55th');
eq(format(20150225, 'CC>0'),  '56th');
eq(format(20150226, 'CC>0'),  '57th');
eq(format(20150227, 'CC>0'),  '58th');
eq(format(20150228, 'CC>0'),  '59th');

eq(format(20150301, 'CC>0'),  '60th');
eq(format(20150302, 'CC>0'),  '61st');
eq(format(20150303, 'CC>0'),  '62nd');
eq(format(20150304, 'CC>0'),  '63rd');
eq(format(20150305, 'CC>0'),  '64th');
eq(format(20150306, 'CC>0'),  '65th');
eq(format(20150307, 'CC>0'),  '66th');
eq(format(20150308, 'CC>0'),  '67th');
eq(format(20150309, 'CC>0'),  '68th');
eq(format(20150310, 'CC>0'),  '69th');
eq(format(20150311, 'CC>0'),  '70th');
eq(format(20150312, 'CC>0'),  '71st');
eq(format(20150313, 'CC>0'),  '72nd');
eq(format(20150314, 'CC>0'),  '73rd');
eq(format(20150315, 'CC>0'),  '74th');
eq(format(20150316, 'CC>0'),  '75th');
eq(format(20150317, 'CC>0'),  '76th');
eq(format(20150318, 'CC>0'),  '77th');
eq(format(20150319, 'CC>0'),  '78th');
eq(format(20150320, 'CC>0'),  '79th');
eq(format(20150321, 'CC>0'),  '80th');
eq(format(20150322, 'CC>0'),  '81st');
eq(format(20150323, 'CC>0'),  '82nd');
eq(format(20150324, 'CC>0'),  '83rd');
eq(format(20150325, 'CC>0'),  '84th');
eq(format(20150326, 'CC>0'),  '85th');
eq(format(20150327, 'CC>0'),  '86th');
eq(format(20150328, 'CC>0'),  '87th');
eq(format(20150329, 'CC>0'),  '88th');
eq(format(20150330, 'CC>0'),  '89th');
eq(format(20150331, 'CC>0'),  '90th');

eq(format(20150401, 'CC>0'),  '91st');
eq(format(20150402, 'CC>0'),  '92nd');
eq(format(20150403, 'CC>0'),  '93rd');
eq(format(20150404, 'CC>0'),  '94th');
eq(format(20150405, 'CC>0'),  '95th');
eq(format(20150406, 'CC>0'),  '96th');
eq(format(20150407, 'CC>0'),  '97th');
eq(format(20150408, 'CC>0'),  '98th');
eq(format(20150409, 'CC>0'),  '99th');
eq(format(20150410, 'CC>0'), '100th');
eq(format(20150411, 'CC>0'), '101st');
eq(format(20150412, 'CC>0'), '102nd');
eq(format(20150413, 'CC>0'), '103rd');
eq(format(20150414, 'CC>0'), '104th');
eq(format(20150415, 'CC>0'), '105th');
eq(format(20150416, 'CC>0'), '106th');
eq(format(20150417, 'CC>0'), '107th');
eq(format(20150418, 'CC>0'), '108th');
eq(format(20150419, 'CC>0'), '109th');
eq(format(20150420, 'CC>0'), '110th');
eq(format(20150421, 'CC>0'), '111th');
eq(format(20150422, 'CC>0'), '112th');
eq(format(20150423, 'CC>0'), '113th');
eq(format(20150424, 'CC>0'), '114th');
eq(format(20150425, 'CC>0'), '115th');
eq(format(20150426, 'CC>0'), '116th');
eq(format(20150427, 'CC>0'), '117th');
eq(format(20150428, 'CC>0'), '118th');
eq(format(20150429, 'CC>0'), '119th');
eq(format(20150430, 'CC>0'), '120th');

eq(format(20150501, 'CC>0'), '121st');
eq(format(20150502, 'CC>0'), '122nd');
eq(format(20150503, 'CC>0'), '123rd');
eq(format(20150504, 'CC>0'), '124th');
eq(format(20150505, 'CC>0'), '125th');
eq(format(20150506, 'CC>0'), '126th')",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E6NPwI
code,"const ResponseMessage = require('../../messages').Response;
const through2 = require('through2');
const xtend = require('xtend');

var defaults = {
    ignore_invalid: false
};

function encoder(Message, options) {
    options = xtend(defaults, options || {});
    return through2.obj(function(message, enc, callback) {
        if (Message.verify(message)) {
            if (options.ignore_invalid) {
                return this.queue(message);
            }
            throw new Error('unhandled request');
        }
        return callback(null, Message.encodeDelimited(message).finish());
    });
}

module.exports = function () {
  return encoder(ResponseMessage);
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JGHdub
code,"export default {
  modules: require('glob!./glob.txt'),
  options: {
    name: 'Comment',
  },
  info: true,
  utils: {},
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dHTTyd
code,"const electron = window.require('electron');
const events = window.require('events');

const {
  ipcRenderer
} = electron;

const {
  EventEmitter
} = events;

class Emitter extends EventEmitter {}
window.Events = new Emitter();

module.exports = () => {
  let settings = window.localStorage.getItem('settings');
  if (settings === null) {
    const defaultSettings = {
      general: {
        launch: true,
        clipboard: true
      },
      images: {
        copy: false,
        delete: true
      },
      notifications: {
        enabled: true
      }
    };
    window.localStorage.setItem('settings', JSON.stringify(defaultSettings));
    settings = defaultSettings;
  }
  ipcRenderer.send('settings', JSON.parse(settings));
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GyxqPt
code,"/** @jsx m */

import m from 'mithril';
import { linkTo, hrefTo } from '@storybook/addon-links';

const Main = {
  view: vnode => (
    <article
      style={{
        padding: 15,
        lineHeight: 1.4,
        fontFamily: '""Helvetica Neue"", Helvetica, ""Segoe UI"", Arial, freesans, sans-serif',
        backgroundColor: '#ffffff',
      }}
    >
      {vnode.children}
    </article>
  ),
};

const Title = {
  view: vnode => <h1>{vnode.children}</h1>,
};

const Note = {
  view: vnode => (
    <p
      style={{
        opacity: 0.5,
      }}
    >
      {vnode.children}
    </p>
  ),
};

const InlineCode = {
  view: vnode => (
    <code
      style={{
        fontSize: 15,
        fontWeight: 600,
        padding: '2px 5px',
        border: '1px solid #eae9e9',
        borderRadius: 4,
        backgroundColor: '#f3f2f2',
        color: '#3a3a3a',
      }}
    >
      {vnode.children}
    </code>
  ),
};

const Link = {
  view: vnode => (
    <a
      style={{
        color: '#1474f3',
        textDecoration: 'none',
        borderBottom: '1px solid #1474f3',
        paddingBottom: 2,
      }}
      {...vnode.attrs}
    >
      {vnode.children}
    </a>
  ),
};

const NavButton = {
  view: vnode => (
    <button
      type=""button""
      style={{
        borderTop: 'none',
        borderRight: 'none',
        borderLeft: 'none',
        backgroundColor: 'transparent',
        padding: 0,
        cursor: 'pointer',
        font: 'inherit',
      }}
      {...vnode.attrs}
    >
      {vnode.children}
    </button>
  ),
};

const StoryLink = {
  oninit: vnode => {
    // eslint-disable-next-line no-param-reassign
    vnode.state.href = '/';
    // eslint-disable-next-line no-param-reassign
    vnode.state.onclick = () => {
      linkTo(vnode.attrs.kind, vnode.attrs.story)();
      return false;
    };
    StoryLink.updateHref(vnode);
  },
  updateHref: async vnode => {
    const href = await hrefTo(vnode.attrs.kind, vnode.attrs.story);
    // eslint-disable-next-line no-param-reassign
    vnode.state.href = href;
    m.redraw();
  },
  view: vnode => (
    <a
      href={vnode.state.href}
      style={{
        color: '#1474f3',
        textDecoration: 'none',
        borderBottom: '1px solid #1474f3',
        paddingBottom: 2,
      }}
      onClick={vnode.state.onclick}
    >
      {vnode.children}
    </a>
  ),
};

const Welcome = {
  view: vnode => (
    <Main>
      <Title>Welcome to storybook</Title>
      <p>This is a UI component dev environment for your app.</p>
      <p>
        We've added some basic stories inside the <InlineCode>src/stories</InlineCode> directory.
        <br />A story is a single state of one or more UI components. You can have as many stories
        as you want.
        <br />
        (Basically a story is like a visual test case.)
      </p>
      <p>
        See these sample&nbsp;
        {vnode.attrs.showApp ? (
          <NavButton onclick={vnode.attrs.showApp}>stories</NavButton>
        ) : (
          <StoryLink kind={vnode.attrs.showKind} story={vnode.attrs.showStory}>
            stories
          </StoryLink>
        )}
        &nbsp;for a component called <InlineCode>Button</InlineCode>.
      </p>
      <p>
        Just like that, you can add your own components as stories.
        <br />
        You can also edit those components and see changes right away.
        <br />
        (Try editing the <InlineCode>Button</InlineCode> stories located at&nbsp;
        <InlineCode>src/stories/1-Button.stories.js</InlineCode>
        .)
      </p>
      <p>
        Usually we create stories with smaller UI components in the app.
        <br />
        Have a look at the&nbsp;
        <Link
          href=""https://storybook.js.org/basics/writing-stories""
          target=""_blank""
          rel=""noopener noreferrer""
        >
          Writing Stories
        </Link>
        &nbsp;section in our documentation.
      </p>
      <Note>
        <b>NOTE:</b>
        <br />
        Have a look at the <InlineCode>.storybook/webpack.config.js</InlineCode> to add webpack
        loaders and plugins you are using in this project.
      </Note>
    </Main>
  ),
};

export default Welcome;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yUOBDv
code,"import { apiGet, apiPut, apiDelete } from 'utils/api'
import { flashError, flashSuccess } from 'utils/flash'
import { takeLatest, takeEvery, call, put, select } from 'redux-saga/effects'
import { filter, find, without, omit } from 'lodash'

import { filesUrlSelector } from 'ducks/app'
import { makeUploadsSelector } from 'ducks/uploads'
import { makeFiltersQuerySelector } from 'ducks/filters'
import { makeSelectedFileIdsSelector } from 'ducks/filePlacements'

// Constants

const GET_FILES = 'files/GET_FILES'
const GET_FILES_SUCCESS = 'files/GET_FILES_SUCCESS'
const UPLOADED_FILE = 'files/UPLOADED_FILE'
const THUMBNAIL_GENERATED = 'files/THUMBNAIL_GENERATED'
const DELETE_FILE = 'files/DELETE_FILE'
const DELETE_FILE_FAILURE = 'files/DELETE_FILE_FAILURE'
const UPDATE_FILE = 'files/UPDATE_FILE'
export const UPDATE_FILE_SUCCESS = 'files/UPDATE_FILE_SUCCESS'
export const UPDATE_FILE_FAILURE = 'files/UPDATE_FILE_FAILURE'
const UPDATED_FILES = 'files/UPDATED_FILES'
const REMOVED_FILES = 'files/REMOVED_FILES'
const CHANGE_FILES_PAGE = 'files/CHANGE_FILES_PAGE'
const MASS_SELECT = 'files/MASS_SELECT'
const MASS_DELETE = 'files/MASS_DELETE'
const MASS_CANCEL = 'files/MASS_CANCEL'

// Actions

export function getFiles (fileType, filesUrl, query = '') {
  return { type: GET_FILES, fileType, filesUrl, query }
}

export function getFilesSuccess (fileType, records, meta) {
  return { type: GET_FILES_SUCCESS, fileType, records, meta }
}

export function uploadedFile (fileType, file) {
  return { type: UPLOADED_FILE, fileType, file }
}

export function thumbnailGenerated (fileType, temporaryUrl, url) {
  return { type: THUMBNAIL_GENERATED, fileType, temporaryUrl, url }
}

export function updatedFiles (fileType, files) {
  return { type: UPDATED_FILES, fileType, files }
}

export function updateFile (fileType, filesUrl, file, attributes) {
  return { type: UPDATE_FILE, fileType, filesUrl, file, attributes }
}

export function deleteFile (fileType, filesUrl, file) {
  return { type: DELETE_FILE, fileType, filesUrl, file }
}

export function deleteFileFailure (fileType, file) {
  return { type: DELETE_FILE_FAILURE, fileType, file }
}

export function removedFiles (fileType, ids) {
  return { type: REMOVED_FILES, fileType, ids }
}

export function updateFileSuccess (fileType, file, response) {
  return { type: UPDATE_FILE_SUCCESS, fileType, file, response }
}

export function updateFileFailure (fileType, file) {
  return { type: UPDATE_FILE_FAILURE, fileType, file }
}

export function changeFilesPage (fileType, filesUrl, page) {
  return { type: CHANGE_FILES_PAGE, fileType, filesUrl, page }
}

export function massSelect (fileType, file, select) {
  return { type: MASS_SELECT, fileType, file, select }
}

export function massDelete (fileType) {
  return { type: MASS_DELETE, fileType }
}

export function massCancel (fileType) {
  return { type: MASS_CANCEL, fileType }
}

// Sagas

function * getFilesPerform (action) {
  try {
    const filesUrl = `${action.filesUrl}?${action.query}`
    const response = yield call(apiGet, filesUrl)
    yield put(getFilesSuccess(action.fileType, response.data, response.meta))
  } catch (e) {
    flashError(e.message)
  }
}

function * getFilesSaga () {
  // takeLatest automatically cancels any saga task started previously if it's still running
  yield takeLatest(GET_FILES, getFilesPerform)
}

function * updateFilePerform (action) {
  try {
    const { file, filesUrl, attributes } = action
    const fullUrl = `${filesUrl}/${file.id}`
    const data = {
      file: {
        id: file.id,
        attributes
      }
    }
    const response = yield call(apiPut, fullUrl, data)
    yield put(updateFileSuccess(action.fileType, action.file, response.data))
  } catch (e) {
    flashError(e.message)
    yield put(updateFileFailure(action.fileType, action.file))
  }
}

function * updateFileSaga () {
  yield takeEvery(UPDATE_FILE, updateFilePerform)
}

function * changeFilesPagePerform (action) {
  try {
    const filtersQuery = yield select(makeFiltersQuerySelector(action.fileType))
    let query = `page=${action.page}`
    if (filtersQuery) {
      query = `${query}&${filtersQuery}`
    }
    yield put(getFiles(action.fileType, action.filesUrl, query))
  } catch (e) {
    flashError(e.message)
  }
}

function * changeFilesPageSaga () {
  yield takeLatest(CHANGE_FILES_PAGE, changeFilesPagePerform)
}

function * massDeletePerform (action) {
  try {
    const { massSelectedIds } = yield select(makeMassSelectedIdsSelector(action.fileType))
    const filesUrl = yield select(filesUrlSelector)
    const fullUrl = `${filesUrl}/mass_destroy?ids=${massSelectedIds.join(',')}`
    const res = yield call(apiDelete, fullUrl)
    if (res.error) {
      flashError(res.error)
    } else {
      flashSuccess(res.data.message)
      yield put(removedFiles(action.fileType, massSelectedIds))
      yield put(massCancel(action.fileType))
    }
  } catch (e) {
    flashError(e.message)
  }
}

function * massDeleteSaga () {
  yield takeLatest(MASS_DELETE, massDeletePerform)
}

function * deleteFilePerform (action) {
  try {
    const res = yield call(a",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gfepib
code,"/*
 * aem-sling-contrib
 * https://github.com/dherges/aem-sling-contrib
 *
 * Copyright (c) 2016 David Herges
 * Licensed under the MIT license.
 */

define([
	""./core"",
	""./var/slice"",
	""./callbacks""
], function( jQuery, slice ) {

jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ ""resolve"", ""done"", jQuery.Callbacks(""once memory""), ""resolved"" ],
				[ ""reject"", ""fail"", jQuery.Callbacks(""once memory""), ""rejected"" ],
				[ ""notify"", ""progress"", jQuery.Callbacks(""memory"") ]
			],
			state = ""pending"",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + ""With"" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + ""With"" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + ""With"" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});

return jQuery;
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",B00CZ8
code,"import React from 'react';
import HomeLayout from '../layouts/HomeLayout';
import BookEditor from '../components/BookEditor';
import { get } from '../utils/request';

class BookEdit extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            book: null
        };
    }

    componentWillMount() {
        const bookId = this.context.router.params.id;
        get('http://localhost:3000/book/' + bookId)
            .then(res => {
                this.setState({
                    book: res
                });
            });
    }

    render() {
        const { book } = this.state;
        return book ? <BookEditor editTarget={book} /> : <span>加载中...</span>;
    }
}

BookEdit.contextTypes = {
    router: React.PropTypes.object.isRequired
};

export default BookEdit;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9Bo5LZ
code,"/**
 * Copyright © 2009-2012 A. Matías Quezada
 */

use('sassmine').on(function(sas) {

	var Block = Class.extend({

		constructor: function(message, code) {
			this.base();
			this.message = message;
			this.code = code;

			this.before = [];
			this.after = [];
		},

		execute: function() {
			this.code.call(null, sas);
		},

		addBeforeEach: function(action) {
			this.before.push(action);
		},

		addAfterEach: function(action) {
			this.after.push(action);
		},

		beforeEach: function() {
			for (var i = 0; i < this.before.length; i++)
				this.before[i].call(null, sas);
		},

		afterEach: function() {
			for (var i = 0; i < this.after.length; i++)
				this.after[i].call(null, sas);
		}

	});

	sas.Spec = sas.Suite = Block.extend();

});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RiB3FC
code,"import React, { PropTypes } from 'react';
import Page from './Page';
import ProjectListItem from './ProjectListItem';
import AspectContainer from './AspectContainer';
import BannerImage from './BannerImage';
import styles from './Projects.css';

const Projects = ({ projects }) => (
  <Page
    Hero={() =>
      <AspectContainer>
        <BannerImage url=""https://placebear.com/900/1200"" />
      </AspectContainer>
    }
    title=""Projects""
  >
    <div className={styles.projects}>
      {projects.map(project => <ProjectListItem key={project.id} {...project} />)}
    </div>
  </Page>
  );

Projects.propTypes = {
  projects: PropTypes.arrayOf(PropTypes.object),
};

export default Projects;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wr_3Br
code,"﻿Enum = {
    BarDrawDirect: {
        Horizontal: ""Horizontal"",
        Vertical: ""Vertical""
    },
    PowerType: {
        MP: 0,
        Angery: 1
    },
    EffectType: {
        StateChange: ""StateChange"",
        HpChange: ""HpChange"",
        Timing: ""Timing"",
        Control: ""Control""
    },
    EffectControlType: {
        Stun: ""Stun"",
        Silence: ""Silence"",
        Sleep: ""Sleep""
    },
    EffectCharacterType: {
        Passive: ""Passive"",
        Self: ""Self"",
        Column: ""Column"",
        Single: ""Single"",
        Row: ""Row"",
        All: ""All""
    },
    EffectRange: {
        Melee: ""Melee"",
        Range: ""Range""
    },
    StateChangeClass: {
        Plus: ""Plus"",
        Minus: ""Minus""
    },
    StateChangeType: {
        HitRate: ""HitRate"",
        DodgeRate: ""DodgeRate""
    },
    HpChangeClass: {
        Damage: ""Damage"",
        Heal: ""Heal""
    },
    HpChangeType: {
        Normal: ""Normal"",
        Critial: ""Critial""
    },
    BattleActionType: {
        Physical: ""Physical"",
        Magical: ""Magical""
    },
    EffectStyle: {
        Temp: ""Temp"",
        Static: ""Static"",
        UniqueTemp: ""UniqueTemp""
    },
    Align: {
        Left: ""Left"",
        Right: ""Right"",
        Center: ""Center""
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",D5h5JR
code,"var request = require('request');
var url = require('url');
var authenticate = require('./oauthentication');

var Request = function(obj){
  this.obj = obj;
};

Request.prototype.mailboxes = function(method, specific_url, params, callback){
 /*
   * @params:
   * @ param : if user wants to call specific mailbox e.g. : /
   * @ callback: function to pass the following parameters to:
   *    @error
   *    @response
   *    @body
   */
  makeRequest(this, method, 'https://api.slice.com/api/v1/mailboxes', specific_url, params, callback); 
};

Request.prototype.users = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/users', specific_url, params, callback);
};

Request.prototype.orders = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/orders', specific_url, params, callback);
};

Request.prototype.items = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/items', specific_url, params, callback);
};

Request.prototype.shipments = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/shipments', specific_url, params, callback);
};

Request.prototype.recalls = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/recalls', specific_url, params, callback);
};

Request.prototype.emails = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/emails', specific_url, params, callback);
};

Request.prototype.merchants = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/merchants', specific_url, params, callback);
};

Request.prototype.actions = function(method, specific_url, params, callback){
  makeRequest(this, method, 'https://api.slice.com/api/v1/actions/update', specific_url, params, callback);
};

Request.prototype.setAccessToken = function(access_token){
  this.access_token = access_token;
}
var makeRequest = function(obj, method, url, specific_url, params, callback){
  this.params = params || '';
  this.param_url = compileRequest(this.params);
  this.method = method || 'GET'; // defaults to 'GET'
  this.specific_url = specific_url || '';
  request({
    uri : url+this.specific_url+this.params,
    headers : {
      'Authorization' : 'Bearer ' + obj.access_token
    },
    method : this.method,
    timeout : 1000,
    followRedirect : true,
    maxRedirects : 4,
  }, function(error, response, body){
      if(error){
        throw error;
      }
    callback(error, response, body);
  });
};

var compileRequest = function(params){
  var param_url = '?';
  for(var key in params){
    param_url += key + '=' + params[key] + '&';
  }
  return param_url.substring(0, param_url.length-1);
};

module.exports = Request;
module.exports.users = Request.users;
module.exports.mailboxes = Request.mailboxes;
module.exports.orders = Request.orders;
module.exports.items = Request.items;
module.exports.shipments = Request.shipments;
module.exports.recalls = Request.recalls;
module.exports.emails = Request.emails;
module.exports.merchants = Request.merchants;
module.exports.actions = Request.actions;

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QeK5K0
code,"
console.log(""VS: loading content_script.js..."" + new Date());

// Check if the communication between page and background.js has broken.
var last_message_time = new Date().getTime();
new Promise((resolve) => setTimeout(resolve, 1000000)).then(() => {
    var now = new Date().getTime();
    if (now - last_message_time > 500000) {
        sendAlert('Not having message from background for at least 500s, force reloading');
        reloadPage();
    }
});

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    // Update timestamp first.
    last_message_time = new Date().getTime();

    console.log(""VS: received data from content_script.js"" + new Date());
    console.log(request);
    var action = request[""action""];
    takeAction(action, request);
});

var already_logging_in = false;

function takeAction(action, request) {
    var url = window.location.href;
    console.log(""VS: Taking action: "" + action + "" in "" + url);
    if (action === ACTION_FOR_HOMEPAGE) {
        homePage(request);
    } else if (action === ACTION_FOR_LOGIN_PAGE) {
        loginPage(request);
    } else if (action === ACTION_FOR_ASYNC_LOGIN) {
        loginPage(request);
    } else if (action === ACTION_FOR_DASHBOARD_PAGE) {
        dashboardPage(request);
    } else {
        // Other cases.
        console.log(""VS: unknown action:"" + new Date());
        console.log(action);
        return;
    }
}

function dashboardPage(request) {
    console.log(""VS: In dashboard page"" + new Date());
    //var val = $('[data-reactid="".0.0.3.0.0.0.0.0.1.0.0.1.0""]');
    //if (val) {
    //    var ts = new Date().getTime();
    //    var amount = val.text();
    //    if (!amount) {
    //        console.log(""Failed to parse data from html page. "" + new Date());
    //    } else {
    //        saveGenerationData({'amount': amount, 'time': ts});
    //    }
    //} else {
    //    sendAlert('Failed to read data from Dashboard page' + window.location.href);
    //}
    //console.log(""VS: setting to reload page in 60s: "" + new Date());
    //window.setInterval(function() {
        console.log(""VS: polling account data"" + new Date());
        $.ajax({url: ""/api/fusion/accounts""}).done(function(msg) {
            console.log(""VS: got account data"" + new Date());
            var j = msg;
            if (typeof(j) === ""object"" && 'accounts' in j) {
                console.log(j['accounts']);
                var acct = j['accounts'][0]['account_no'];
                var newUrl = '/api/fusion/accounts/' + acct;
                console.log(""VS: polling account detail data"" + new Date());
                $.ajax({url: newUrl}).done(function(msg) {
                    console.log(""VS: got account detail data"" + new Date());
                    var j = msg;
                    if (typeof(j) === ""object"" && 'energyToday' in j) {
                        var ts = new Date().getTime();
                        var amount = j['energyToday'] / 1000.0;
                        console.log(""VS: saveing energy data"" + new Date());
                        saveGenerationData({'time': ts, 'amount': amount});
                        return;
                    }
                    sendAlert(""Failed parse detailed account info from AJAX for: "" + textStatus);
                    reloadPage();
                }).fail(function(jqXHR, textStatus) {
                    sendAlert(""Request failed for loading detailed account info from AJAX for: "" + textStatus);
                    reloadPage();
                });
                return;
            }
            sendAlert('Failed to parse account data');
            reloadPage();
        }).fail(function(jqXHR, textStatus) {
            sendAlert(""Request failed for loading accounts AJAX for: "" + textStatus);
            reloadPage();
        });
    //}, 60000);
}
function loginPage(request) {
    if (request) {
        asyncLogin(request);
    } else {
        chrome.runtime.sendMessage({""action"": ACTION_FOR_ASYNC_LOGIN});
    }
}
function homePage(request) {
    var links = $('A');
    for (var i in links) {
        var link = links[i];
        if (link.href == LOGIN_PAGE) {
            link.click();
        }
    }
}

function asyncLogin(request) {
    if (already_logging_in) {
        console.log(""VS: already logging in. This is possible, ignoring.."" + new Date());
        return;
    }
    already_logging_in = true;

    console.log(""VS: gettting new data to login"" + new Date());
    console.log(request);
    context = request['data'];
    if ($(""INPUT[data-reactid='.0.0.0.0.0.1.1']"").val(context.username).length > 0
            && $(""INPUT[data-reactid='.0.0.0.0.0.2.0']"").val(context.passwd).length > 0) {
        $(""BUTTON[data-reactid='.0.0.0.0.0.4.0']"").click();
        new Promise((resolve) => setTimeout(resolve, 100000)).then(() => {
            sendAlert('Login failed for username' + context.username + ' and passwd: ' + context.passwd);
        });
    }
    $('.email-input.js-initial-focus').val(context.username);
    $('.js-password-field').val(context.passwd);
    new Promise((resolve) => setTimeout(resolve, ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8WiaMP
code,"const React = require('react');
const { ViewPropTypes } = ReactNative = require('react-native');
const {
  View,
  Animated,
  StyleSheet,
  ScrollView,
  Text,
  Platform,
  Dimensions,
  I18nManager
} = ReactNative;
const Button = require('./Button');

//import { PropTypes } from 'react'

const WINDOW_WIDTH = Dimensions.get('window').width;

const ScrollableTabBar = React.createClass({
  propTypes: {
    goToPage: React.PropTypes.func,
    activeTab: React.PropTypes.number,
    tabs: React.PropTypes.array,
    backgroundColor: React.PropTypes.string,
    activeTextColor: React.PropTypes.string,
    inactiveTextColor: React.PropTypes.string,
    scrollOffset: React.PropTypes.number,
    //style: ViewPropTypes.style,
    //tabStyle: ViewPropTypes.style,
    //tabsContainerStyle: ViewPropTypes.style,
    //tabStyle: ViewPropTypes.style,
    textStyle: Text.propTypes.style,
    renderTab: React.PropTypes.func,
    //underlineStyle: ViewPropTypes.style,
    onScroll:React.PropTypes.func,
  },

  getDefaultProps() {
    return {
      scrollOffset: 52,
      activeTextColor: 'navy',
      inactiveTextColor: 'black',
      backgroundColor: null,
      style: {},
      tabStyle: {},
      tabsContainerStyle: {},
      tabStyle: {},
      underlineStyle: {},
    };
  },

  getInitialState() {
    this._tabsMeasurements = [];
    return {
      _leftTabUnderline: new Animated.Value(0),
      _widthTabUnderline: new Animated.Value(0),
      _containerWidth: null,
    };
  },

  componentDidMount() {
    this.props.scrollValue.addListener(this.updateView);
  },

  updateView(offset) {
    //console.log(""updateView=""+JSON.stringify(offset));
    //console.log(""updateView=""+JSON.stringify(this.props));
    const position = Math.floor(offset.value);
    const pageOffset = offset.value % 1;
    const tabCount = this.props.tabs.length;
    const lastTabPosition = tabCount - 1;

    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {
      return;
    }

    if (this.necessarilyMeasurementsCompleted(position, position === lastTabPosition)) {
      this.updateTabPanel(position, pageOffset);
      this.updateTabUnderline(position, pageOffset, tabCount);
    }
  },

  necessarilyMeasurementsCompleted(position, isLastTab) {
    return this._tabsMeasurements[position] &&
      (isLastTab || this._tabsMeasurements[position + 1]) &&
      this._tabContainerMeasurements &&
      this._containerMeasurements;
  },

  updateTabPanel(position, pageOffset) {
    const containerWidth = this._containerMeasurements.width;
    const tabWidth = this._tabsMeasurements[position].width;
    //console.log(""containerWidth=""+containerWidth+"" tabWidth=""+tabWidth);

    const nextTabMeasurements = this._tabsMeasurements[position + 1];
    const nextTabWidth = nextTabMeasurements && nextTabMeasurements.width || 0;
    const tabOffset = this._tabsMeasurements[position].left;
    const absolutePageOffset = pageOffset * tabWidth;
    let newScrollX = tabOffset + absolutePageOffset;

    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)
    newScrollX -= (containerWidth - (1 - pageOffset) * tabWidth - pageOffset * nextTabWidth) / 2;
    newScrollX = newScrollX >= 0 ? newScrollX : 0;

    if (Platform.OS === 'android') {
      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });
    } else {
      const rightBoundScroll = this._tabContainerMeasurements.width - (this._containerMeasurements.width);
      newScrollX = newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;
      this._scrollView.scrollTo({x: newScrollX, y: 0, animated: false, });
    }

  },

  updateTabUnderline(position, pageOffset, tabCount) {
    const tabPad = this.props.underlineAlignText?this.props.tabPadding:0;
    const lineLeft = this._tabsMeasurements[position].left;
    const lineRight = this._tabsMeasurements[position].right;

    if (position < tabCount - 1) {
      const nextTabLeft = this._tabsMeasurements[position + 1].left;
      const nextTabRight = this._tabsMeasurements[position + 1].right;

      const newLineLeft = (pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft);
      const newLineRight = (pageOffset * nextTabRight + (1 - pageOffset) * lineRight);

      this.state._leftTabUnderline.setValue(newLineLeft+tabPad);
      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft -tabPad*2);
    } else {
      this.state._leftTabUnderline.setValue(lineLeft+tabPad);
      this.state._widthTabUnderline.setValue(lineRight - lineLeft-tabPad*2);
    }
  },

  renderTab(name, page, isTabActive, onPressHandler, onLayoutHandler) {
    const { activeTextColor, inactiveTextColor, textStyle, } = this.props;
    const textColor = isTabActive ? activeTextColor : inactiveTextColor;
    const fontWeight = isTabActive ? 'bold' : 'normal';

    return <Button
      key={`${name}_${page}`}
      accessible={true}
      accessibilityLabel={name}
      accessibilityTraits='button'
      onPress={() => onPressHandler(page)}
      onLayout={onLayoutHandler}
    >
      <View style={[this.props.tabStyle||styles.t",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",N-9vwP
code,"""use strict"";
Object.defineProperty(exports, ""__esModule"", { value: true });
let _ = require('lodash');
let async = require('async');
const pip_services3_commons_node_1 = require(""pip-services3-commons-node"");
const pip_services3_facade_node_1 = require(""pip-services3-facade-node"");
class RolesOperationsV1 extends pip_services3_facade_node_1.FacadeOperations {
    constructor() {
        super();
        this._dependencyResolver.put('roles', new pip_services3_commons_node_1.Descriptor('pip-services-roles', 'client', '*', '*', '1.0'));
    }
    setReferences(references) {
        super.setReferences(references);
        this._rolesClient = this._dependencyResolver.getOneRequired('roles');
    }
    getUserRolesOperation() {
        return (req, res) => {
            this.getUserRoles(req, res);
        };
    }
    grantUserRolesOperation() {
        return (req, res) => {
            this.grantUserRoles(req, res);
        };
    }
    revokeUserRolesOperation() {
        return (req, res) => {
            this.revokeUserRoles(req, res);
        };
    }
    getUserRoles(req, res) {
        let userId = req.route.params.user_id;
        this._rolesClient.getRolesById(null, userId, this.sendResult(req, res));
    }
    grantUserRoles(req, res) {
        let userId = req.route.params.user_id;
        let roles = req.body;
        this._rolesClient.grantRoles(null, userId, roles, this.sendResult(req, res));
    }
    revokeUserRoles(req, res) {
        let userId = req.route.params.user_id;
        let roles = req.body;
        this._rolesClient.revokeRoles(null, userId, roles, this.sendResult(req, res));
    }
}
exports.RolesOperationsV1 = RolesOperationsV1;
//# sourceMappingURL=RolesOperationsV1.js.map",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_BIHrP
code,"version https://git-lfs.github.com/spec/v1
oid sha256:27606576bf3cd46c15755bdec387cc97145a4a0c0a5b3933c11d30ab8c6c5ec7
size 1825
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",19GpbX
code,"/* eslint-env node*/
var gutil = require('gulp-util')


var paths = {
  layouts: {
    componentsDir: './app/components/**/*.jade',
    src: './app/views/**/*.jade',
    dest: './app/public/assets/html/'
  },

  styles: {
    componentsDir: './app/lib/stylesheets/**/*.styl',
    src: './app/lib/stylesheets/styles.styl',
    dest: './app/public/assets/css/'
  },

  scripts: {
    entry: './app/lib/scripts/entry.jsx',
    src: ['./app/lib/scripts/**/*.jsx', './app/lib/scripts/**/*.js'],
    dest: './app/public/assets/js/'
  }
}

var onError = function (error) {
  gutil.log(gutil.colors.red(error))
  this.emit('end')
}


module.exports = {
  paths: paths,
  onError: onError
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZYzNTe
code,"/**
 * Dont edit this file!
 * This module generates itself from lang.js files!
 * Instead edit the language files in /lang/
 **/

/*global define*/
define(function () {
""use strict"";
var i18n = {};

i18n.de = {
    ""Visit %s overview"" : ""Zur %s Übersicht"",
    ""An error occured, please reload."" : ""Es gab einen unerwarteten Fehler. Bitte laden Sie die Seite neu."",
    ""Order successfully saved"" : ""Reihenfolge erfolgreich gespeichert"",
    ""Your browser doesnt support the following technologies: %s <br>Please update your browser!"" : ""Ihr Browser unterstützt die folgenden Technologien nicht: %s <br>Bitte installieren Sie eine neuere Version Ihres Browsers!"",
    ""Close"" : ""Schließen"",
    ""When asynchronously trying to load a ressource, I came across an error: %s"" : ""Beim Laden einer Ressource gab es leider folgenden Fehler: %s"",
    ""You are using an outdated web browser. Please consider an update!"" : ""Sie benutzen eine veraltete Browser Version. Bitte installieren Sie einen aktuelleren Browser."",
    ""No results found."" : ""Keine Ergebnisse gefunden."",
    ""No results found for \""%s\""."" : ""Keine Ergebnisse für \""%s\"" gefunden."",
    ""Illegal injection found"" : """",
    ""Could not load injection"" : """",
    ""You\'re almost done!"" : ""Du hast es fast geschafft!"",
    ""Show overview"" : ""Übersicht anzeigen"",
    ""Show %d contents for \""%s\"""" : """",
    ""Abort"": ""Abbrechen""
};

i18n.en = {
    ""An error occured, please reload."" : """",
    ""Close"" : """",
    ""Visit %s overview"" : """",
    ""Order successfully saved"" : """",
    ""Your browser doesnt support the following technologies: %s <br>Please update your browser!"" : """",
    ""When asynchronously trying to load a ressource, I came across an error: %s"" : """",
    ""You are using an outdated web browser. Please consider an update!"" : """",
    ""No results found."" : """",
    ""No results found for \""%s\""."" : """",
    ""Illegal injection found"" : """",
    ""Could not load injection"" : """",
    ""You\'re almost done!"" : """",
    ""Show overview"" : """",
    ""Show %d contents for \""%s\"""" : """",
    ""Abort"": """"
};

return i18n;
});",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oe070I
code,"var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
// Database
var mongo = require('mongodb');
var monk = require('monk');
var db = monk('localhost:27017/mydb');

var index = require('./routes/index');
var buyer = require('./routes/buyer');
var seller = require('./routes/seller');
var products = require('./routes/products');

var app = express();

const ObjectID = mongo.ObjectID;

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');
app.engine('html', require('ejs').renderFile);

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));


// Make our db accessible to our router
app.use(function(req,res,next){
    req.db = db;
    req.ObjectID = ObjectID;
    next();
});

app.use('/', index);
app.use('/buyer', buyer);
app.use('/seller', seller);
app.use('/products', products);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error.html', err);
});

module.exports = app;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PuYiKr
code,"import React from ""react"";
import { Link } from ""@curi/react-dom"";

import {
  TitledPlainSection,
  HashSection,
  Paragraph,
  CodeBlock,
  Note,
  IJS
} from ""../../components/guide/common"";

let meta = {
  title: ""Apollo Integration""
};

let setupMeta = {
  title: ""Setup"",
  hash: ""setup""
};
let looseMeta = {
  title: ""Loose Pairing"",
  hash: ""loose-pairing""
};
let prefetchMeta = {
  title: ""Prefetching"",
  hash: ""prefetch""
};
let tightMeta = {
  title: ""Tight Pairing"",
  hash: ""tight-pairing"",
  children: [prefetchMeta]
};

let contents = [setupMeta, looseMeta, tightMeta];

function ApolloGuide() {
  return (
    <React.Fragment>
      <TitledPlainSection title={meta.title}>
        <Paragraph>
          <a href=""https://apollographql.com"">Apollo</a> is a great solution for
          managing an application's data using{"" ""}
          <a href=""http://graphql.org"">GraphQL</a>.
        </Paragraph>

        <Paragraph>
          There are a few different implementation strategies for integrating
          Apollo and Curi based on how tightly you want them to be paired.
        </Paragraph>

        <Note>
          <Paragraph>
            This guide only covers integration between Curi and Apollo. If you
            are not already familiar with how to use Apollo, you will want to
            learn that first.
          </Paragraph>

          <Paragraph>
            Also, this guide will only be referencing Apollo's React
            implementation, but the principles are the same no matter how you
            render your application.
          </Paragraph>
        </Note>
      </TitledPlainSection>

      <HashSection meta={setupMeta} tag=""h2"">
        <Paragraph>
          Apollo's React package provides an <IJS>ApolloProvider</IJS> component
          for accessing your Apollo client throughout the application. The{"" ""}
          <IJS>Router</IJS> (or whatever you name the root Curi component)
          should be a descendant of the <IJS>ApolloProvider</IJS> because we
          don't need to re-render the <IJS>ApolloProvider</IJS> for every new
          response.
        </Paragraph>

        <CodeBlock lang=""jsx"">
          {`import { ApolloProvider } from ""react-apollo"";
import { createRouterComponent } from ""@curi/react-dom"";

let Router = createRouterComponent(router);

ReactDOM.render((
  <ApolloProvider client={client}>
    <Router>
      <App />
    </Router>
  </ApolloProvider>
), holder);`}
        </CodeBlock>
      </HashSection>

      <HashSection meta={looseMeta} tag=""h2"">
        <Paragraph>
          Apollo and Curi don't actually have to know about each other. Curi can
          create a response without doing any data fetching and let Apollo
          handle that with its <IJS>Query</IJS> component.
        </Paragraph>

        <CodeBlock>
          {`// routes.js
import Noun from ""./pages/Noun"";

// nothing Apollo related in here
let routes = prepareRoutes([
  {
    name: 'Noun',
    path: 'noun/:word',
    respond: () => {
      return {
        body: Noun
      };
    }
  }
]);`}
        </CodeBlock>

        <Paragraph>
          Any location data that a query needs can be taken from the response
          object. The best way to access this is to read the current{"" ""}
          <IJS>response</IJS> from the context. This can either be done in the
          component or the response can be passed down from the root app.
        </Paragraph>

        <CodeBlock lang=""jsx"">
          {`import { useResponse } from ""@curi/react-dom"";

function App() {
  let { response } = useResponse();
  let { body:Body } = response;
  return <Body response={response} />;
}`}
        </CodeBlock>

        <Paragraph>
          Because we pass the <IJS>response</IJS> to the route's <IJS>body</IJS>{"" ""}
          component, we can pass a <IJS>Query</IJS> the response's location
          params using <IJS>props.response.params</IJS>.
        </Paragraph>

        <CodeBlock lang=""jsx"">
          {`// pages/Nouns.js
import { Query } from ""react-apollo"";

let GET_NOUN = gql\`
  query noun(\$word: String!) {
    noun(word: $word) {
      word,
      type,
      definition
    }
  }
\`;

// use the ""word"" param from the response props
// to query the correct data
let Noun = ({ response }) => (
  <Query
    query={GET_NOUN}
    variables={{ word: response.params.word }}
  >
    {({ loading, error, data }) => {
      if (loading) {
        return <Loading />;
      }
      // ...

      return (
        <article>
          <h1>{data.noun.word}</h1>
          <Paragraph>{data.noun.definition}</Paragraph>
        </article>
      )
    }}
  </Query>
);`}
        </CodeBlock>
      </HashSection>

      <HashSection meta={tightMeta} tag=""h2"">
        <Paragraph>
          You can use your Apollo client instance to call queries in a route's{"" ""}
          <IJS>resolve</IJS> function. <IJS>resolve</IJS> is expected to return
          a Promise, which is exactly what <IJS>client.query</IJS> returns.
          Tightly pairing Curi and Apollo is mostly center around using{"" ""}
          <IJS>resolve</IJS> to return a <IJS>clien",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xOZvc2
code,"//this controller simply tells the dialogs service to open a mediaPicker window
//with a specified callback, this callback will receive an object with a selection on it
angular.module('umbraco')
    .controller(""Umbraco.PropertyEditors.ImageCropperController"",
    function ($rootScope, $routeParams, $scope, $log, mediaHelper, cropperHelper, $timeout, editorState, umbRequestHelper, fileManager) {

        var config = angular.copy($scope.model.config);

        //move previously saved value to the editor
        if ($scope.model.value) {
            //backwards compat with the old file upload (incase some-one swaps them..)
            if (angular.isString($scope.model.value)) {
                config.src = $scope.model.value;
                $scope.model.value = config;
            } else if ($scope.model.value.crops) {
                //sync any config changes with the editor and drop outdated crops
                _.each($scope.model.value.crops, function (saved) {
                    var configured = _.find(config.crops, function (item) { return item.alias === saved.alias });

                    if (configured && configured.height === saved.height && configured.width === saved.width) {
                        configured.coordinates = saved.coordinates;
                    }
                });
                $scope.model.value.crops = config.crops;

                //restore focalpoint if missing
                if (!$scope.model.value.focalPoint) {
                    $scope.model.value.focalPoint = { left: 0.5, top: 0.5 };
                }
            }

            $scope.imageSrc = $scope.model.value.src;
        }


        //crop a specific crop
        $scope.crop = function (crop) {
            $scope.currentCrop = crop;
            $scope.currentPoint = undefined;
        };

        //done cropping
        $scope.done = function () {
            $scope.currentCrop = undefined;
            $scope.currentPoint = undefined;
        };

        //crop a specific crop
        $scope.clear = function (crop) {
            //clear current uploaded files
            fileManager.setFiles($scope.model.alias, []);

            //clear the ui
            $scope.imageSrc = undefined;
            if ($scope.model.value) {
                delete $scope.model.value;
            }
        };

        //show previews
        $scope.togglePreviews = function () {
            if ($scope.showPreviews) {
                $scope.showPreviews = false;
                $scope.tempShowPreviews = false;
            } else {
                $scope.showPreviews = true;
            }
        };

        //on image selected, update the cropper
        $scope.$on(""filesSelected"", function (ev, args) {
            $scope.model.value = config;

            if (args.files && args.files[0]) {

                fileManager.setFiles($scope.model.alias, args.files);

                var reader = new FileReader();
                reader.onload = function (e) {

                    $scope.$apply(function () {
                        $scope.imageSrc = e.target.result;
                    });

                };

                reader.readAsDataURL(args.files[0]);
            }
        });
    })
    .run(function (mediaHelper, umbRequestHelper) {
        if (mediaHelper && mediaHelper.registerFileResolver) {
            mediaHelper.registerFileResolver(""Umbraco.ImageCropper"", function (property, entity, thumbnail) {
                if (property.value.src) {

                    if (thumbnail === true) {
                        return property.value.src + ""?width=600&mode=max"";
                    }
                    else {
                        return property.value.src;
                    }

                    //this is a fallback in case the cropper has been asssigned a upload field
                }
                else if (angular.isString(property.value)) {
                    if (thumbnail) {

                        if (mediaHelper.detectIfImageByExtension(property.value)) {
                            var thumbnailUrl = umbRequestHelper.getApiUrl(
                                ""imagesApiBaseUrl"",
                                ""GetBigThumbnail"",
                                [{ originalImagePath: property.value }]);

                            return thumbnailUrl;
                        }
                        else {
                            return null;
                        }

                    }
                    else {
                        return property.value;
                    }
                }

                return null;
            });
        }
    });",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",B-DguC
code,"const Koa = require('koa')
const screenshot = require('./screenshot')
const app = new Koa()

app.use(async ctx => {
  var url = ctx.query.url
  console.log('goto:', url)
  if (!/^https?:\/\/.+/.test(url)) {
    ctx.body = 'url 不合法'
  } else {
    if (!isNaN(ctx.query.wait)) {
      ctx.query.wait = ~~ctx.query.wait
    }
    let data = await screenshot(url, ctx.query.wait, ~~ctx.query.width)
    if (ctx.query.base64) {
      ctx.body = 'data:image/jpeg;base64,' + data
    } else {
      ctx.body = `<img src=""data:image/jpeg;base64,${data}"" />`
    }
  }
})

app.listen(8000)
console.log('server start success at 8000')
// process.on('unCaughtException', function (err) {
//  console.log(err)
// })
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WBRwFs
code,"/* some devices call home before accepting a wifi access point.  Spoof those responses. */

var path = require('path');

exports.load = function(server, boatData, settings) {
    
    var endpointMap = [
    	{'route': '/kindle-wifi/wifiredirect.html', 'responseFile': 'kindle.html'} ,
        {'route': '/kindle-wifi/wifistub.html', 'responseFile': 'kindle.html'} //http://spectrum.s3.amazonaws.com
    ];

    _.each(endpointMap, function(endpoint) {
        server.get(endpoint.route, function(req, res) {
            res.sendFile(path.join(__dirname + endpoint.responseFile));
        });
    });
};",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JGVbNk
code,"﻿//# sourceMappingURL=WeatherData.js.map
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uvfJ1h
code,"#!/usr/bin/env node
(function () {

    var DirectoryLayout = require('../lib/index.js'),
        program = require('commander'),
        options;

    program
        .version('1.0.2')
        .usage('[options] <path, ...>')
        .option('-g, --generate <path> <output-directory-layout-file-path>', 'Generate directory layout')
        .option('-v, --verify <input-directory-layout-file-path> <path>', 'Verify directory layout')
        .parse(process.argv);

    if(program.generate) {
        options = {
            output: program.args[0] || 'layout.md',
            ignore: []
        };

        console.log('Generating layout for ' + program.generate + '... \n')

        DirectoryLayout
            .generate(program.generate, options)
            .then(function() {
                console.log('Layout generated at: ' + options.output);
            });
    }
    else if(program.verify) {
        options = {
            root: program.args[0]
        };

        console.log('Verifying layout for ' + options.root + ' ...\n');

        DirectoryLayout
            .verify(program.verify, options)
            .then(function() {
                console.log('Successfully verified layout available in ' + program.verify + '.');
            });
    }

}());",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6hQwjc
code,"/**
 *
 * app.js
 *
 * This is the entry file for the application
 *
*/
import FilmLocationSearchComponent from '../MovieSearchApp/Containers/FilmSearchContainer/FilmSearchComponent';
import AppComponent from '../CommonComponent/app.js';
import React from 'react';
import { Router, Route, IndexRoute, browserHistory } from 'react-router';



console.log(""current href"",window.location.href);

const getAppRouter = () => {
		return (
			<Route component={AppComponent}>
				<Route component={FilmLocationSearchComponent} path='/searchmovies' />
			</Route>
		);
	
}


export {
	getAppRouter
}





",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G_XJ6U
code,"define(['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, ""__esModule"", {
    value: true
  });
  var globalExtraOptions = exports.globalExtraOptions = {
    mappingDataStructure: {
      class: 'class',
      content: 'content',
      disabled: 'disabled',
      divider: 'divider',
      groupLabel: 'group',
      groupDisabled: 'disabled',
      icon: 'icon',
      maxOptions: 'maxOptions',
      option: 'option',
      subtext: 'subtext',
      style: 'style',
      title: 'title',
      tokens: 'tokens'
    }
  };

  var globalPickerOptions = exports.globalPickerOptions = {
    dropupAuto: true,
    showTick: true,
    width: 'auto'
  };
});",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8sZt2K
code,"var self = module.exports;

self = (function(){
    self.debug = true;
    self.prefix = '/kaskade';
    self.ssl = false;
        /*{
            key: {PEM},
            cert: {PEM}
        }*/
    self.port = 80;
    self.host = '0.0.0.0';
    self.onConnectionClose = new Function();
    
    self.redis = false;
        /*{
            host: {String},
            port: {Number},
            options: {Object}
         }*/
    
    self.init = function(cfg){
        for(var c in cfg){
            if(c in this)
                this[c] = cfg[c];
        }
    };
    
})();",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EfyxT8
code,"/*
 * App Actions
 *
 * Actions change things in your application
 * Since this boilerplate uses a uni-directional data flow, specifically redux,
 * we have these actions which are the only way your application interacts with
 * your application state. This guarantees that your state is up to date and nobody
 * messes it up weirdly somewhere.
 *
 * To add a new Action:
 * 1) Import your constant
 * 2) Add a function like this:
 *    export function yourAction(var) {
 *        return { type: YOUR_ACTION_CONSTANT, var: var }
 *    }
 */

import {
  LOAD_SONGS,
  LOAD_SONGS_SUCCESS,
  LOAD_SONGS_ERROR,
} from './constants';

// /**
//  * Load the repositories, this action starts the request saga
//  *
//  * @return {object} An action object with a type of LOAD_REPOS
//  */
export function loadSongs() {
  return {
    type: LOAD_SONGS,
  };
}

// /**
//  * Dispatched when the repositories are loaded by the request saga
//  *
//  * @param  {array} repos The repository data
//  * @param  {string} username The current username
//  *
//  * @return {object}      An action object with a type of LOAD_REPOS_SUCCESS passing the repos
//  */
export function songsLoaded(repos, username) {
  return {
    type: LOAD_SONGS_SUCCESS,
    repos,
    username,
  };
}

// /**
//  * Dispatched when loading the repositories fails
//  *
//  * @param  {object} error The error
//  *
//  * @return {object}       An action object with a type of LOAD_REPOS_ERROR passing the error
//  */
export function songsLoadingError(error) {
  return {
    type: LOAD_SONGS_ERROR,
    error,
  };
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",U8xGyK
code,"import {Utils} from ""../service/Utils"";

Template.registerHelper(
  ""displayHours"", function (date) {
    return new moment(date).format(""H[h]"");
  }
);
Template.registerHelper(
  ""displayHoursMinute"", function (date) {
    return new moment(date).format(""H[h]mm"");
  }
);
Template.registerHelper(
  ""displayHoursMinuteSeconde"", function (date) {
    return new moment(date).format(""H[h]mm ss[sec]"");
  }
);
Template.registerHelper(
  ""displayDateTime"", function (date) {
    return new moment(date).format(""ddd DD MMM HH[h]mm"");
  }
);
Template.registerHelper(
  ""displayDay"", function (date) {
    return new moment(date).format(""DD MMM"");
  }
);
Template.registerHelper(
  ""skillLabel"", function () {
    return Skills.findOne({_id: this.toString()}).label;
  }
);

Template.registerHelper(
  ""onUpdateError"", function (error) {
    return function (error) {
      Utils.onUpdateError(error.reason)
    }
  });

Template.registerHelper(
  ""onUpdateSuccess"", function (message) {
    return function (message) {
      Utils.onUpdateSuccess(message);
    }
  });

Template.registerHelper(
  ""onDeleteError"", function (error) {
    return function (error) {
      Utils.onUpdateError(error.reason)
    }
  });

Template.registerHelper(
  ""onDeleteSuccess"", function (message) {
    return function (message) {
      Utils.onUpdateSuccess(message);
    }
  });


Template.registerHelper(
  ""allTeams"", function () {
    return Teams.find();
  }
);

Template.registerHelper('equals', function (a, b) {
  return a === b;
});
Template.registerHelper('adds', function (a, b) {
  return a + b;
});


Template.registerHelper(
  ""allOptionsTeams"", function () {
    return Teams.find({
      name: {
        $ne: ASSIGNMENTREADYTEAM
      }
    });
  }
);

Template.registerHelper(
  ""allSkills"", function (userId) {
    var userTeams = Meteor.users.findOne({_id: userId}).teams;
    return Skills.find({
      teams: {
        $in: userTeams
      }
    });
  }
);


Template.registerHelper('ifNotEmpty', function (item, options) {
  if (item) {
    if (item instanceof Array) {
      if (item.length > 0) {
        return options.fn(this);
      } else {
        return options.inverse(this);
      }
    } else {
      if (item.fetch().length > 0) {
        return options.fn(this);
      } else {
        return options.inverse(this);
      }
    }
  } else {
    return options.inverse(this);
  }
});

Template.registerHelper(""equals"", function (a, b) {
    return a === b;
  }
);
Template.registerHelper(""isMore"", function (a, b) {
    return a > b;
  }
);

Template.registerHelper(""displayValidationState"", function (state) {
  return DisplayedValidationState[state];
});

Template.registerHelper(""RolesEnum"", function () {
  return RolesEnum;
});


Template.registerHelper(
  ""currentUserId"", function () {
    return Meteor.users.findOne({_id: Meteor.userId()})._id;
  }
);

Template.registerHelper(
  ""isCurrentUserTheOneLogged"", function (currentUserId) {
    return currentUserId === Meteor.users.findOne({_id: Meteor.userId()})._id;
  }
)

Template.registerHelper(
  ""currentUserIdObject"", function () {
    return {
      _id: Meteor.users.findOne({_id: Meteor.userId()})._id
    }
  }
);


Template.registerHelper(""cursorLength"", function (array) {
    return array.fetch().length;
  }
);",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Fx0oxw
code,"var GridLayout = require(""ui/layouts/grid-layout"").GridLayout; 
var ListView = require(""ui/list-view"").ListView;
var StackLayout = require(""ui/layouts/stack-layout"").StackLayout;
var Image = require(""ui/image"").Image;
var Label = require(""ui/label"").Label;
 
var ScrapbookList = (function (_super) {      
    global.__extends(ScrapbookList, _super);  

    Object.defineProperty(ScrapbookList.prototype, ""items"", { 
        get: function() {        
            return this._items;   
        },                      
        set: function(value) {   
            this._items = value;  
            this.bindData();      
        }                       
    });

  function ScrapbookList() { 
    _super.call(this);     

    this._items; 

    this.rows = ""*"";       
    this.columns = ""*"";    

    var listView = new ListView();                       
    listView.className = ""list-group"";

    listView.itemTemplate = function() {                 
      var stackLayout = new StackLayout();
      stackLayout.orientation = ""horizontal"";
      stackLayout.bind({                                 
        targetProperty: ""className"",                     
        sourceProperty: ""$value"",                        
        expression: ""isActive ? 'list-group-item active' : 'list-group-item'""  
      });

      var image = new Image();
      image.className = ""thumb img-circle"";
      image.bind({                                       
        targetProperty: ""src"",                           
        sourceProperty: ""image""                          
      });                                                
      stackLayout.addChild(image);

      var label = new Label();
      label.className = ""list-group-item-text"";
      label.style.width = ""100%"";
      label.textWrap = true;

      label.bind({                                            
        targetProperty: ""text"",                               
        sourceProperty: ""title"",                               
        expression: ""(title === null || title === undefined ? 'New' : title + '\\\'s') + ' Scrapbook Page'""       
      });                                                     
      stackLayout.addChild(label);

      return stackLayout;
    };

    listView.on(ListView.itemTapEvent, function(args) { 
        onItemTap(this, args.index);                      
    }.bind(listView));                                  

    this.addChild(listView); 

    this.bindData = function () {
        listView.bind({             
            sourceProperty: ""$value"",
            targetProperty: ""items"",
            twoWay: ""true""
        }, this._items);
    };

    var onItemTap = function(args, index) { 
        this.notify({
            eventName: ""itemTap"",
            object: this,
            index: index
        });                                        
    }.bind(this);                        
  }                          
  return ScrapbookList;      

})(GridLayout);
ScrapbookList.itemTapEvent = ""itemTap""; 

exports.ScrapbookList = ScrapbookList;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jix2zH
code,"import Vue from 'vue';
import merge from 'element-ui/src/utils/merge';
import PopupManager from 'element-ui/src/utils/popup/popup-manager';
import getScrollBarWidth from '../scrollbar-width';

let idSeed = 1;
const transitions = [];

const hookTransition = (transition) => {
  if (transitions.indexOf(transition) !== -1) return;

  const getVueInstance = (element) => {
    let instance = element.__vue__;
    if (!instance) {
      const textNode = element.previousSibling;
      if (textNode.__vue__) {
        instance = textNode.__vue__;
      }
    }
    return instance;
  };

  Vue.transition(transition, {
    afterEnter(el) {
      const instance = getVueInstance(el);

      if (instance) {
        instance.doAfterOpen && instance.doAfterOpen();
      }
    },
    afterLeave(el) {
      const instance = getVueInstance(el);

      if (instance) {
        instance.doAfterClose && instance.doAfterClose();
      }
    }
  });
};

let scrollBarWidth;

const getDOM = function(dom) {
  if (dom.nodeType === 3) {
    dom = dom.nextElementSibling || dom.nextSibling;
    getDOM(dom);
  }
  return dom;
};

export default {
  model: {
    prop: 'visible',
    event: 'visible-change'
  },
  props: {
    visible: {
      type: Boolean,
      default: false
    },
    transition: {
      type: String,
      default: ''
    },
    openDelay: {},
    closeDelay: {},
    zIndex: {},
    modal: {
      type: Boolean,
      default: false
    },
    modalFade: {
      type: Boolean,
      default: true
    },
    modalClass: {},
    modalAppendToBody: {
      type: Boolean,
      default: false
    },
    lockScroll: {
      type: Boolean,
      default: true
    },
    closeOnPressEscape: {
      type: Boolean,
      default: false
    },
    closeOnClickModal: {
      type: Boolean,
      default: false
    }
  },

  created() {
    if (this.transition) {
      hookTransition(this.transition);
    }
  },

  beforeMount() {
    this._popupId = 'popup-' + idSeed++;
    PopupManager.register(this._popupId, this);
  },

  beforeDestroy() {
    PopupManager.deregister(this._popupId);
    PopupManager.closeModal(this._popupId);
    if (this.modal && this.bodyOverflow !== null && this.bodyOverflow !== 'hidden') {
      document.body.style.overflow = this.bodyOverflow;
      document.body.style.paddingRight = this.bodyPaddingRight;
    }
    this.bodyOverflow = null;
    this.bodyPaddingRight = null;
  },

  data() {
    return {
      opened: false,
      bodyOverflow: null,
      bodyPaddingRight: null,
      rendered: false
    };
  },

  watch: {
    visible(val) {
      if (val) {
        if (this._opening) return;
        if (!this.rendered) {
          this.rendered = true;
          Vue.nextTick(() => {
            this.open();
          });
        } else {
          this.open();
        }
      } else {
        this.close();
      }
    }
  },

  methods: {
    open(options) {
      if (!this.rendered) {
        this.rendered = true;
        this.$emit('visible-change', true);
      }

      const props = merge({}, this.$props || this, options);

      if (this._closeTimer) {
        clearTimeout(this._closeTimer);
        this._closeTimer = null;
      }
      clearTimeout(this._openTimer);

      const openDelay = Number(props.openDelay);
      if (openDelay > 0) {
        this._openTimer = setTimeout(() => {
          this._openTimer = null;
          this.doOpen(props);
        }, openDelay);
      } else {
        this.doOpen(props);
      }
    },

    doOpen(props) {
      if (this.$isServer) return;
      if (this.willOpen && !this.willOpen()) return;
      if (this.opened) return;

      this._opening = true;

      this.$emit('visible-change', true);

      const dom = getDOM(this.$el);
      const modal = props.modal;

      const zIndex = props.zIndex;
      if (zIndex) {
        PopupManager.zIndex = zIndex;
      }

      if (modal) {
        if (this._closing) {
          PopupManager.closeModal(this._popupId);
          this._closing = false;
        }
        PopupManager.openModal(this._popupId, PopupManager.nextZIndex(), this.modalAppendToBody ? undefined : dom, props.modalClass, props.modalFade);
        if (props.lockScroll) {
          if (!this.bodyOverflow) {
            this.bodyPaddingRight = document.body.style.paddingRight;
            this.bodyOverflow = document.body.style.overflow;
          }
          scrollBarWidth = getScrollBarWidth();
          let bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;
          if (scrollBarWidth > 0 && bodyHasOverflow) {
            document.body.style.paddingRight = scrollBarWidth + 'px';
          }
          document.body.style.overflow = 'hidden';
        }
      }

      if (getComputedStyle(dom).position === 'static') {
        dom.style.position = 'absolute';
      }

      dom.style.zIndex = PopupManager.nextZIndex();
      this.opened = true;

      this.onOpen && this.onOpen();

      if (!this.transition) {
        this.doAfterOpen();
      }
    },

    doAfterOpen() {
      this._opening = false;
    },

    close() {
      i",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AZuk80
code,"'use strict';


angular.module('core').controller('HomeController', ['$scope', 'Authentication', '$http', '$modal','$rootScope',
	function($scope, Authentication, $http, $modal, $rootScope) {
		// This provides Authentication context.
		$scope.authentication = Authentication;



        $scope.card = {};

        $scope.columnWidth = function() {
            return Math.floor((100 / $scope.columns.length) * 100) / 100;
        };

        $scope.updateCard = function(column, card) {

            var modalInstance = $modal.open({
                templateUrl: '/modules/core/views/card-details.client.view.html',
                controller: modalController,
                size: 'lg',
                resolve: {
                    items: function() {
                        return angular.copy({
                            title: card.title,
                            Details: card.details,
                            release: card.release,
                            cardColor: card.ragStatus,
                            column: column,
                            architect: card.architect,
                            analyst: card.Analyst,
                            designer: card.designer,
                            buildCell: card.buildCell
                        });
                    }
                }
            });

            modalInstance.result.then(function(result) {
                console.log(result.title);

                angular.forEach($scope.columns, function(col) {
                   if(col.name === column.name) {
                       angular.forEach(col.cards, function(cd) {
                          if (cd.title === card.title) {
                              if (col.name === 'Backlog') {
                                  cd.details = result.Details;
                              } else {
                                  cd.details = result.Details;
                                  if (result.cardColor) {
                                      cd.ragStatus = '#' + result.cardColor;
                                  } else {
                                      cd.ragStatus = '#5CB85C';
                                  }
                                  cd.release = result.release;
                                  cd.architect = result.architect;
                                  cd.designer = result.designer;
                                  cd.Analyst = result.analyst;
                                  cd.buildCell = result.buildCell
                              }

                          }
                       });
                   }
                });


                console.log('modal closed');
            }, function() {
                console.log('modal dismissed');
            });

            //setTimeout(function() {
            //    $scope.$apply(function(){
            //        console.log('broadcasting event');
            //        $rootScope.$broadcast('OpenCardDetails', column, card);
            //    });
            //}, 500);
        };

        var modalController = function($scope, $modalInstance, items) {

            $scope.colorOptions = ['5CB85C','FFEB13','FF0000'];

            console.log(items.column.name);

            $scope.card = items;

            $scope.ok = function () {
                //events();
                $modalInstance.close($scope.card);
            };

            $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
            };
        };

        $scope.$on('OpenCardDetails', function(e, column,card) {
            console.log('in broadcast event');
            console.log(column.name);
            $scope.card = card;
        });


        $scope.columns = [
            {'name': 'Backlog',cards: [{'id': '1', 'title': 'item1', 'drag':true, 'release':"""",'ragStatus':'#5cb85c', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""},
                {'id': '2','title': 'item2', 'drag':true, 'release':"""",'ragStatus':'#5cb85c', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""},
                {'id': '3','title': 'item3', 'drag':true, 'release':"""",'ragStatus':'#ffeb13', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""},
                {'id': '4','title': 'item4', 'drag':true, 'release':"""",'ragStatus':'#5cb85c', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""},
                {'id': '5','title': 'item5', 'drag':true, 'release':"""",'ragStatus':'#ff0000', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""},
                {'id': '6','title': 'item6', 'drag':true, 'release':"""",'ragStatus':'#5cb85c', 'details':"""",'architect':"""", 'Analyst':"""",'designer':"""",'buildCell':""""}], 'hideCol':false},
            {'name': 'Discovery',cards: [], 'hideCol':false},
            {'name': 'Design',cards: [], 'hideCol':false},
            {'name': 'Build',cards: [], 'hideCol':false},
            {'name': 'Pilot',cards: [], 'hideCol':false}
        ];


        $scope.hiddenCol = function(column) {
            angular.forEach($sco",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bTvZ7-
code,"var eejs = require('ep_etherpad-lite/node/eejs')

/*
* Handle incoming delete requests from clients
*/
exports.handleMessage = function(hook_name, context, callback){
  var Pad = require('ep_etherpad-lite/node/db/Pad.js').Pad

  // Firstly ignore any request that aren't about chat
  var isDeleteRequest = false;
  if(context) {
    if(context.message && context.message){
      if(context.message.type === 'COLLABROOM'){
        if(context.message.data){
          if(context.message.data.type){
            if(context.message.data.type === 'ep_push2delete'){
              isDeleteRequest = true;
            }
          }
        }
      }
    }
  }
  if(!isDeleteRequest){
    callback(false);
    return false;
  }
  
  console.log('DELETION REQUEST!')

  var packet = context.message.data;
  /***
    What's available in a packet?
    * action -- The action IE chatPosition
    * padId -- The padId of the pad both authors are on
    ***/
  if(packet.action === 'deletePad'){
    var pad = new Pad(packet.padId)
    pad.remove(function(er) {
      if(er) console.warn('ep_push2delete', er)
      callback([null]);
    })
  }
}

exports.eejsBlock_editbarMenuRight = function(hook_name, args, cb) {
  if(!args.renderContext.req.url.match(/^\/(p\/r\..{16})/)) {
    args.content = eejs.require('ep_push2delete/templates/delete_button.ejs') + args.content;
  }
  cb();
};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BgzhFe
code,"// @flow

(require('../../lib/git'): any).rebaseRepoMaster = jest.fn();

import {
  _clearCustomCacheDir as clearCustomCacheDir,
  _setCustomCacheDir as setCustomCacheDir,
} from '../../lib/cacheRepoUtils';

import {copyDir, mkdirp} from '../../lib/fileUtils';

import {parseDirString as parseFlowDirString} from '../../lib/flowVersion';

import {
  add as gitAdd,
  commit as gitCommit,
  init as gitInit,
  setLocalConfig as gitConfig,
} from '../../lib/git';

import {fs, path, child_process} from '../../lib/node';

import {getNpmLibDefs} from '../../lib/npm/npmLibDefs';

import {testProject} from '../../lib/TEST_UTILS';

import {
  _determineFlowVersion as determineFlowVersion,
  _installNpmLibDefs as installNpmLibDefs,
  _installNpmLibDef as installNpmLibDef,
  run,
} from '../install';

const BASE_FIXTURE_ROOT = path.join(__dirname, '__install-fixtures__');

function _mock(mockFn) {
  return ((mockFn: any): JestMockFn<*, *>);
}

async function touchFile(filePath) {
  await fs.close(await fs.open(filePath, 'w'));
}

async function writePkgJson(filePath, pkgJson) {
  await fs.writeJson(filePath, pkgJson);
}

describe('install (command)', () => {
  describe('determineFlowVersion', () => {
    it('infers version from path if arg not passed', () => {
      return testProject(async ROOT_DIR => {
        const ARBITRARY_PATH = path.join(ROOT_DIR, 'some', 'arbitrary', 'path');
        await Promise.all([
          mkdirp(ARBITRARY_PATH),
          touchFile(path.join(ROOT_DIR, '.flowconfig')),
          writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.40.0',
            },
          }),
        ]);

        const flowVer = await determineFlowVersion(ARBITRARY_PATH);
        expect(flowVer).toEqual({
          kind: 'specific',
          ver: {
            major: 0,
            minor: 40,
            patch: 0,
            prerel: null,
          },
        });
      });
    });

    it('uses explicitly specified version', async () => {
      const explicitVer = await determineFlowVersion('/', '0.7.0');
      expect(explicitVer).toEqual({
        kind: 'specific',
        ver: {
          major: 0,
          minor: 7,
          patch: 0,
          prerel: null,
        },
      });
    });

    it(""uses 'v'-prefixed explicitly specified version"", async () => {
      const explicitVer = await determineFlowVersion('/', 'v0.7.0');
      expect(explicitVer).toEqual({
        kind: 'specific',
        ver: {
          major: 0,
          minor: 7,
          patch: 0,
          prerel: null,
        },
      });
    });
  });

  describe('installNpmLibDefs', () => {
    const origConsoleError = console.error;

    beforeEach(() => {
      (console: any).error = jest.fn();
    });

    afterEach(() => {
      (console: any).error = origConsoleError;
    });

    it('errors if unable to find a project root (.flowconfig)', () => {
      return testProject(async ROOT_DIR => {
        const result = await installNpmLibDefs({
          cwd: ROOT_DIR,
          flowVersion: parseFlowDirString('flow_v0.40.0'),
          explicitLibDefs: [],
          libdefDir: 'flow-typed',
          verbose: false,
          overwrite: false,
          skip: false,
          ignoreDeps: [],
          useCacheUntil: 1000 * 60,
        });
        expect(result).toBe(1);
        expect(_mock(console.error).mock.calls).toEqual([
          [
            'Error: Unable to find a flow project in the current dir or any of ' +
              ""it's parent dirs!\n"" +
              'Please run this command from within a Flow project.',
          ],
        ]);
      });
    });

    it(
      ""errors if an explicitly specified libdef arg doesn't match npm "" +
        'pkgver format',
      () => {
        return testProject(async ROOT_DIR => {
          await touchFile(path.join(ROOT_DIR, '.flowconfig'));
          await writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
            devDependencies: {
              'flow-bin': '^0.40.0',
            },
          });
          const result = await installNpmLibDefs({
            cwd: ROOT_DIR,
            flowVersion: parseFlowDirString('flow_v0.40.0'),
            explicitLibDefs: ['INVALID'],
            libdefDir: 'flow-typed',
            verbose: false,
            overwrite: false,
            skip: false,
            ignoreDeps: [],
            useCacheUntil: 1000 * 60,
          });
          expect(result).toBe(1);
          expect(_mock(console.error).mock.calls).toEqual([
            [
              'ERROR: Package not found from package.json.\n' +
                'Please specify version for the package in the format of `foo@1.2.3`',
            ],
          ]);
        });
      },
    );

    it('warns if 0 dependencies are found in package.json', () => {
      return testProject(async ROOT_DIR => {
        await Promise.all([
          touchFile(path.join(ROOT_DIR, '.flowconfig')),
          writePkgJson(path.join(ROOT_DIR, 'package.json'), {
            name: 'test',
          }),
        ]);
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NtHh0L
code,"
export default {
	A: [[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[4,3],[0,4],[4,4]],
	B: [[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4]],
	C: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[0,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	D: [[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4]],
	E: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[0,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	F: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[3,2],[0,3],[0,4]],
	G: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[2,2],[3,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	H: [[0,0],[4,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[4,3],[0,4],[4,4]],
	I: [[0,0],[1,0],[2,0],[3,0],[4,0],[2,1],[2,2],[2,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	J: [[4,0],[4,1],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	K: [[0,0],[4,0],[0,1],[3,1],[0,2],[1,2],[2,2],[0,3],[3,3],[0,4],[4,4]],
	L: [[0,0],[0,1],[0,2],[0,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	M: [[0,0],[4,0],[0,1],[1,1],[3,1],[4,1],[0,2],[2,2],[4,2],[0,3],[4,3],[0,4],[4,4]],
	N: [[0,0],[4,0],[0,1],[1,1],[4,1],[0,2],[2,2],[4,2],[0,3],[3,3],[4,3],[0,4],[4,4]],
	O: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	P: [[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[0,4]],
	Q: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[3,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	R: [[0,0],[1,0],[2,0],[3,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[3,3],[0,4],[4,4]],
	S: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[3,2],[4,2],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	T: [[0,0],[1,0],[2,0],[3,0],[4,0],[2,1],[2,2],[2,3],[2,4]],
	U: [[0,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	V: [[0,0],[4,0],[0,1],[4,1],[0,2],[4,2],[1,3],[3,3],[2,4]],
	W: [[0,0],[4,0],[0,1],[4,1],[0,2],[2,2],[4,2],[0,3],[1,3],[3,3],[4,3],[0,4],[4,4]],
	X: [[0,0],[4,0],[1,1],[3,1],[2,2],[1,3],[3,3],[0,4],[4,4]],
	Y: [[0,0],[4,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[2,3],[2,4]],
	Z: [[0,0],[1,0],[2,0],[3,0],[4,0],[3,1],[2,2],[1,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	Å: [[2,0],[0,1],[1,1],[2,1],[3,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[4,3],[0,4],[4,4]],
	Ä: [[1,0],[3,0],[0,1],[1,1],[2,1],[3,1],[4,1],[0,2],[4,2],[0,3],[1,3],[2,3],[3,3],[4,3],[0,4],[4,4]],
	Ö: [[1,0],[3,0],[0,1],[1,1],[2,1],[3,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	0: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	1: [[1,0],[2,0],[3,0],[3,1],[3,2],[3,3],[3,4]],
	2: [[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	3: [[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[2,2],[3,2],[4,2],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	4: [[0,0],[4,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[4,3],[4,4]],
	5: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[3,2],[4,2],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	6: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	7: [[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[4,2],[4,3],[4,4]],
	8: [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[0,3],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	9:  [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[1,2],[2,2],[3,2],[4,2],[4,3],[0,4],[1,4],[2,4],[3,4],[4,4]],
	'\@': [[0,0],[1,0],[2,0],[3,0],[4,0],[0,1],[4,1],[0,2],[2,2],[3,2],[4,2],[0,3],[2,3],[4,3],[0,4],[2,4],[3,4],[4,4]],
	'\#': [[1,0],[3,0],[0,1],[1,1],[2,1],[3,1],[4,1],[1,2],[3,2],[0,3],[1,3],[2,3],[3,3],[4,3],[1,4],[3,4]],
	'\?': [[0,0],[1,0],[2,0],[3,0],[4,0],[4,1],[2,2],[3,2],[4,2],[2,4]],
	'\%': [[0,0],[1,0],[4,0],[0,1],[1,1],[3,1],[2,2],[1,3],[3,3],[4,3],[0,4],[3,4],[4,4]],
	'\/': [[4,0],[3,1],[2,2],[1,3],[0,4]],
	'\+': [[2,0],[2,1],[0,2],[1,2],[2,2],[3,2],[4,2],[2,3],[2,4]],
	'\-': [[1,2],[2,2],[3,2]],
	'\_': [[0,4],[1,4],[2,4],[3,4],[4,4]],
	'\=': [[0,1],[1,1],[2,1],[3,1],[4,1],[0,3],[1,3],[2,3],[3,3],[4,3]],
	'\*': [[0,1],[2,1],[4,1],[1,2],[2,2],[3,2],[0,3],[2,3],[4,3]],
	'\'': [[2,0],[2,1]],
	'\""': [[1,0],[3,0],[1,1],[3,1]],
	'\(': [[2,0],[1,1],[1,2],[1,3],[2,4]],
	'\)': [[2,0],[3,1],[3,2],[3,3],[2,4]],
	'\.': [[2,4]],
	'\,': [[3,3],[2,3]],
	'\;': [[2,1],[2,3],[2,4]],
	'\:': [[2,1],[2,4]],
	'\!': [[2,0],[2,1],[2,2],[2,4]],
	'\{': [[2,0],[3,0],[2,1],[1,2],[2,2],[2,3],[2,4],[3,4]],
	'\}': [[1,0],[2,0],[2,1],[2,2],[3,2],[2,3],[1,4],[2,4]],
	'\]': [[1,0],[2,0],[2,1],[2,2],[2,3],[1,4],[2,4]],
	'\[': [[2,0],[3,0],[2,1],[2,2],[2,3],[2,4],[3,4]],
	'\^': [[2,0],[1,1],[3,1]],
	'\<': [[3,0],[2,1],[1,2],[2,3],[3,4]],
	'\>': [[1,0],[2,1],[3,2],[2,3],[1,4]]
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SvfVJc
code,"// Test get machiens
var fs = require('fs');

try {
    fs.accessSync('testdb.json', fs.F_OK);
    fs.unlinkSync('testdb.json');
    // Do something
} catch (e) {
    // It isn't accessible
    console.log(e);
}
var server = require('../server.js').createServer(8000, 'testdb.json');

var addTestMachine = function(name) {
  var newMachine = {};
  newMachine.name = name;
  newMachine.type = 'washer';
  newMachine.queue = [];
  newMachine.operational = true;
  newMachine.problemMessage = """";
  newMachine.activeJob = {};  
  server.db('machines').push(newMachine);
}

describe('ALL THE TESTS LOL', function() {

  it('should add a machine', function(done) {
    var options = {
      method: 'POST',
      url: '/machines',
      payload: {
        name: 'test1',
        type: 'washer'
      }
    }

    server.inject(options, function(response) {
      expect(response.statusCode).toBe(200);
      var p = JSON.parse(response.payload);
      expect(p.name).toBe(options.payload.name);
      expect(p.type).toBe(options.payload.type);
      done();
    })
  });



  it('should get all machines', function(done) {
    var name = 'testMachine';
    var name2 = 'anotherMachine';
    addTestMachine(name);
    addTestMachine(name2);

    var options = {
      method: 'GET',
      url: '/machines',
    }

    server.inject(options, function(res) {
      expect(res.statusCode).toBe(200);
      var p = JSON.parse(res.payload);
      // check p has test and anotherMachine
      done();
    });
  });


  it('should get one machine', function(done) {
    var name = 'sweetTestMachine';
    addTestMachine(name);

    var options = {
      method: 'GET',
      url: '/machines/'+name
    };

    server.inject(options, function(res) {
      expect(res.statusCode).toBe(200);
      var p = JSON.parse(res.payload);
      expect(p.name).toBe(name);
      done();
    });

  });

  it('should add a job the queue then th queue should have the person', function(done) {
    addTestMachine('queueTest');
    var addOptions = {
      method: 'POST',
      url: '/machines/queueTest/queue',
      payload: {
        user: 'test@mail.com',
        pin: 1234,
        minutes: 50
      }
    };

    server.inject(addOptions, function(res) {
      expect(res.statusCode).toBe(200);
      var p = JSON.parse(res.payload);
      expect(p.name).toBe('queueTest');
      var getQueue = {
        method: 'GET',
        url: '/machines/queueTest/queue'
      };
      server.inject(getQueue, function(newRes) {
        expect(newRes.statusCode).toBe(200);
        var q = JSON.parse(newRes.payload);
        console.log(q);
        expect(q.queue[0].user).toBe('test@mail.com');
        expect(q.queue[0].pin).toBe(1234);
        done();
      })
    })
  });

  it('should delete a job from the queue', function(done) {
    addTestMachine('anotherQueue');
    var addOptions = {
      method: 'POST',
      url: '/machines/anotherQueue/queue',
      payload: {
        user: 'test@mail.com',
        pin: 1235,
        minutes: 50
      }
    };
    server.inject(addOptions, function(res) {
      var deleteOptions = addOptions;
      deleteOptions.url = '/machines/anotherQueue/queue/delete';
      deleteOptions.payload = {
        user: addOptions.payload.user,
        pin: addOptions.payload.pin
      }
      server.inject(deleteOptions, function(r) {
        expect(r.statusCode).toBe(200);
        console.log(JSON.parse(r.payload));
        done();
      })
    })

  })

  it('should add a job to the active queue', function(done) {
    addTestMachine('activeQueue');
    var addOptions = {
      method: 'POST',
      url: '/machines/activeQueue/queue',
      payload: {
        user: 'test@mail.com',
        pin: 1235,
        minutes: 50
      }
    };
    server.inject(addOptions, function(r) {
      var runJobOptions = {
        method: 'POST',
        url: '/machines/activeQueue/queue/start',
        payload: {
          command: 'next',
          pin: 1235,
          minutes: 0
        }
      };
      server.inject(runJobOptions, function(res) {
        expect(res.statusCode).toBe(200);
        done();
      })
    })

  });

});",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mYpCI7
code,"var config = require('../lib/config')();
var Changeset = require('./Changeset');
var queries = require('./queries');
var helpers = require('../helpers');
require('../validators');
var validate = require('validate.js');
var errors = require('../errors');
var pgPromise = helpers.pgPromise;
var promisifyQuery = helpers.promisifyQuery;

var changesets = {};

module.exports = changesets;

var pgURL = config.PostgresURL;

changesets.search = function(params) {
    var parseError = validateParams(params);
    if (parseError) {
        return Promise.reject(new errors.ParseError(parseError));
    }
    var searchQuery = queries.getSearchQuery(params);
    var countQuery = queries.getCountQuery(params);
    console.log('searchQ', searchQuery);
    console.log('countQ', countQuery);

    return pgPromise(pgURL)
        .then(function (pg) {
            var query = promisifyQuery(pg.client);
            var searchProm = query(searchQuery.text, searchQuery.values);
            var countProm = query(countQuery.text, countQuery.values);

            return Promise.all([searchProm, countProm])
                .then(function (r) {
                    pg.done();
                    return r;
                })
                .catch(function (e) {
                    pg.done();
                    return Promise.reject(e);
                });
        })
        .then(processSearchResults);
};

changesets.get = function(id) {
    if (!validate.isNumber(parseInt(id, 10))) {
        return Promise.reject(new errors.ParseError('Changeset id must be a number'));
    }
    var changesetQuery = queries.getChangesetQuery(id);
    var changesetCommentsQuery = queries.getChangesetCommentsQuery(id);

    return pgPromise(pgURL)
        .then(function (pg) {
            var query = promisifyQuery(pg.client);
            var changesetProm = query(changesetQuery.text, changesetQuery.values);
            var changesetCommentsProm = query(changesetCommentsQuery.text, changesetCommentsQuery.values);

            return Promise.all([changesetProm, changesetCommentsProm])
                .then(function (results) {
                    pg.done();
                    return results;
                })
                .catch(function (e) {
                    pg.done();
                    return Promise.reject(e);
                });
        })
        .then(function (results) {
            var changesetResult = results[0];
            if (changesetResult.rows.length === 0) {
                return Promise.reject(new errors.NotFoundError('Changeset not found'));
            }
            var changeset = new Changeset(results[0].rows[0], results[1].rows);
            return changeset.getGeoJSON();
        });
};

function processSearchResults(results) {
    var searchResult = results[0];
    var countResult = results[1];

    var changesetsArray = searchResult.rows.map(function (row) {
        var changeset = new Changeset(row);
        return changeset.getGeoJSON();
    });
    var count;
    if (countResult.rows.length > 0) {
        count = countResult.rows[0].count;
    } else {
        count = 0;
    }
    var featureCollection = {
        'type': 'FeatureCollection',
        'features': changesetsArray,
        'total': count
    };
    return featureCollection;
}

function validateParams(params) {
    var constraints = {
        'from': {
            'presence': false,
            'datetime': true
        },
        'to': {
            'presence': false,
            'datetime': true
        },
        'bbox': {
            'presence': false,
            'bbox': true
        }
    };
    var errs = validate(params, constraints);
    if (errs) {
        var errMsg = Object.keys(errs).map(function(key) {
            return errs[key][0];
        }).join(', ');
        return errMsg;
    }
    return null;
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Tnt5Dm
code,"/*jshint node:true*/
/*global test, suite, setup, teardown*/

'use strict';

var assert = require('assert');
var tika = require('../');

suite('document tests', function() {
	test('detect txt content-type', function(done) {
		tika.type('test/data/file.txt', function(err, contentType) {
			assert.ifError(err);
			assert.equal(typeof contentType, 'string');
			assert.equal(contentType, 'text/plain');
			done();
		});
	});

	test('detect txt content-type and charset', function(done) {
		tika.typeAndCharset('test/data/file.txt', function(err, contentType) {
			assert.ifError(err);
			assert.equal(typeof contentType, 'string');
			assert.equal(contentType, 'text/plain; charset=ISO-8859-1');
			done();
		});
	});

	test('extract from txt', function(done) {
		tika.text('test/data/file.txt', function(err, text) {
			assert.ifError(err);
			assert.equal(typeof text, 'string');
			assert.equal(text, 'Just some text.\n\n');
			done();
		});
	});

	test('extract meta from txt', function(done) {
		tika.meta('test/data/file.txt', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.equal(typeof meta.resourceName[0], 'string');
			assert.deepEqual(meta.resourceName, ['file.txt']);
			assert.deepEqual(meta['Content-Type'], ['text/plain; charset=ISO-8859-1']);
			assert.deepEqual(meta['Content-Encoding'], ['ISO-8859-1']);
			done();
		});
	});

	test('extract meta and text from txt', function(done) {
		tika.extract('test/data/file.txt', function(err, text, meta) {
			assert.ifError(err);
			assert.equal(typeof text, 'string');
			assert.equal(text, 'Just some text.\n\n');
			assert.ok(meta);
			assert.equal(typeof meta.resourceName[0], 'string');
			assert.deepEqual(meta.resourceName, ['file.txt']);
			assert.deepEqual(meta['Content-Type'], ['text/plain; charset=ISO-8859-1']);
			assert.deepEqual(meta['Content-Encoding'], ['ISO-8859-1']);
			done();
		});
	});

	test('extract from extensionless txt', function(done) {
		tika.text('test/data/extensionless/txt', function(err, text) {
			assert.ifError(err);
			assert.equal(text, 'Just some text.\n\n');
			done();
		});
	});

	test('extract from doc', function(done) {
		tika.text('test/data/file.doc', function(err, text) {
			assert.ifError(err);
			assert.equal(text, 'Just some text.\n');
			done();
		});
	});

	test('extract meta from doc', function(done) {
		tika.meta('test/data/file.doc', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.deepEqual(meta.resourceName, ['file.doc']);
			assert.deepEqual(meta['Content-Type'], ['application/msword']);
			assert.deepEqual(meta['dcterms:created'], ['2013-12-06T21:15:26Z']);
			done();
		});
	});

	test('extract from extensionless doc', function(done) {
		tika.text('test/data/extensionless/doc', function(err, text) {
			assert.ifError(err);
			assert.equal(text, 'Just some text.\n');
			done();
		});
	});

	test('extract from docx', function(done) {
		tika.text('test/data/file.docx', function(err, text) {
			assert.ifError(err);
			assert.equal(text, 'Just some text.\n');
			done();
		});
	});

	test('extract meta from docx', function(done) {
		tika.meta('test/data/file.docx', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.deepEqual(meta.resourceName, ['file.docx']);
			assert.deepEqual(meta['Content-Type'], ['application/vnd.openxmlformats-officedocument.wordprocessingml.document']);
			assert.deepEqual(meta['Application-Name'], ['LibreOffice/4.1.3.2$MacOSX_x86 LibreOffice_project/70feb7d99726f064edab4605a8ab840c50ec57a']);
			done();
		});
	});

	test('extract from extensionless docx', function(done) {
		tika.text('test/data/extensionless/docx', function(err, text) {
			assert.ifError(err);
			assert.equal(text, 'Just some text.\n');
			done();
		});
	});

	test('extract meta from extensionless docx', function(done) {
		tika.meta('test/data/extensionless/docx', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.deepEqual(meta.resourceName, ['docx']);
			assert.deepEqual(meta['Content-Type'], ['application/vnd.openxmlformats-officedocument.wordprocessingml.document']);
			assert.deepEqual(meta['Application-Name'], ['LibreOffice/4.1.3.2$MacOSX_x86 LibreOffice_project/70feb7d99726f064edab4605a8ab840c50ec57a']);
			done();
		});
	});

	test('extract from pdf', function(done) {
		tika.text('test/data/file.pdf', function(err, text) {
			assert.ifError(err);
			assert.equal(text.trim(), 'Just some text.');
			done();
		});
	});

	test('detect content-type of pdf', function(done) {
		tika.type('test/data/file.pdf', function(err, contentType) {
			assert.ifError(err);
			assert.equal(contentType, 'application/pdf');
			done();
		});
	});

	test('extract meta from pdf', function(done) {
		tika.meta('test/data/file.pdf', function(err, meta) {
			assert.ifError(err);
			assert.ok(meta);
			assert.deepEqual(meta.resourceName, ['file.pdf']);
			assert.deepEqual(meta['Content-Type'], ['application/pdf']);
			assert.deepEqual(meta.producer, ['LibreOffice 4.1']);
			done();
		});
	});

	test('extract from extensionless pdf', function(done) {
		tika.text('test/dat",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KQDc5C
code,"#!/usr/bin/env node

var pluginlist = [
];

var exec = require('child_process').exec;

function puts(error, stdout, stderr) {
    console.log(stdout);
}

pluginlist.forEach(function(plug) {
    exec(""cordova plugin add "" + plug, puts);
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",l1GdSA
code,"###########
# Ket/Bra #
###########
typealias StateDict{N,T} Dict{StateLabel{N},T}

type Ket{P,N,T} <: DiracState{P,N}
    ptype::P
    dict::StateDict{N,T}
    Ket(ptype, dict) = new(ptype, dict)
    Ket(ptype, dict::StateDict{0}) = error(""Cannot construct a 0-factor state."")
end

Ket{P,N,T}(ptype::P, dict::StateDict{N,T}) = Ket{P,N,T}(ptype, dict)

ket(ptype::AbstractInner, label::StateLabel) = Ket(ptype, @compat(Dict(label => 1)))
ket(ptype::AbstractInner, items...) = ket(ptype, StateLabel(items))

type Bra{P,N,T} <: DiracState{P,N}
    kt::Ket{P,N,T}
end

Bra{P,N,T}(kt::Ket{P,N,T}) = Bra{P,N,T}(kt)
Bra(items...) = Bra(Ket(items...))
bra(items...) = Bra(ket(items...))

######################
# Accessor functions #
######################
dict(k::Ket) = k.dict
dict(b::Bra) = dict(b.kt)

ptype(k::Ket) = k.ptype
ptype(b::Bra) = ptype(b.kt)

#######################
# Dict-Like Functions #
#######################
Base.eltype{P,N,T}(::Ket{P,N,T}) = T
Base.eltype{P,N,T}(::Bra{P,N,T}) = T

Base.copy(kt::Ket) = Ket(ptype(kt), copy(dict(kt)))
Base.copy(br::Bra) = Bra(copy(br.kt))

Base.similar(kt::Ket, d=similar(dict(kt)); P=ptype(kt)) = Ket(P, d)
Base.similar(br::Bra, d=similar(dict(br)); P=ptype(br)) = Bra(P, d)

Base.(:(==)){P,N}(a::Ket{P,N}, b::Ket{P,N}) = ptype(a) == ptype(b) && dict(filternz(a)) == dict(filternz(b))
Base.(:(==)){P,N}(a::Bra{P,N}, b::Bra{P,N}) = a.kt == b.kt
Base.hash(s::DiracState) = hash(dict(filternz(s)), hash(ptype(s)))
Base.hash(s::DiracState, h::Uint64) = hash(hash(s), h)

Base.length(s::DiracState) = length(dict(s))

Base.getindex(k::Ket, label::StateLabel) = getindex(dict(k), label)
Base.getindex(b::Bra, label::StateLabel) = b.kt[label]'
Base.getindex(s::DiracState, tup::Tuple) = s[StateLabel(tup)]
Base.getindex(s::DiracState, i...) = s[StateLabel(i)]

Base.setindex!(k::Ket, c, label::StateLabel) = setindex!(dict(k), c, label)
Base.setindex!(b::Bra, c, label::StateLabel) = setindex!(dict(b), c', label)
Base.setindex!(s::DiracState, c, tup::Tuple) = setindex!(s, c, StateLabel(tup))
Base.setindex!(s::DiracState, c, i...) = setindex!(s, c, StateLabel(i))

Base.haskey(s::DiracState, label::StateLabel) = haskey(dict(s), label)
Base.haskey(s::DiracState, label) = haskey(s, StateLabel(label))

Base.get(k::Ket, label::StateLabel, default=predict_zero(eltype(k))) = get(dict(k), label, default)
Base.get(b::Bra, label::StateLabel, default=predict_zero(eltype(b))) = get(dict(b), label, default')'
Base.get(s::DiracState, label, default=predict_zero(eltype(s))) = get(s, StateLabel(label), default)

Base.delete!(s::DiracState, label::StateLabel) = (delete!(dict(s), label); return s)
Base.delete!(s::DiracState, label) = delete!(s, StateLabel(label))

Base.collect(kt::Ket) = collect(dict(kt))
Base.collect{P,N,T}(br::Bra{P,N,T}) = collect_pairs!(Array((StateLabel{N}, T), length(br)), br)

function collect_pairs!(result, br::Bra)
    i = 1
    for (k,v) in dict(br)
        result[i] = (k, v')
        i += 1
    end
    return result
end

Base.start(state::DiracState) = start(dict(state))
Base.next(kt::Ket, i) = next(dict(kt), i)

function Base.next(br::Bra, i)
    (k,v), n = next(dict(br), i)
    return ((k,v'), n)
end

Base.done(state::DiracState, i) = done(dict(state), i)
Base.first(state::DiracState) = next(state, start(state))

##############
# ctranspose #
##############
Base.ctranspose(k::Ket) = Bra(k)
Base.ctranspose(b::Bra) = b.kt

#########
# inner #
#########
inner_coefftype{P}(a::AbstractDirac{P}, b::AbstractDirac{P}) = promote_type(eltype(a), eltype(b), inner_rettype(ptype(a)))
predict_zero{T}(::Type{T}) = zero(T)
predict_zero(::Type{Any}) = 0

inner(br::Bra, kt::Ket) = error(""inner(b::Bra,k::Ket) is only defined when nfactors(b) == nfactors(k)"")

function inner{P,N,T1,T2}(br::Bra{P,N,T1}, kt::Ket{P,N,T2})
    result = predict_zero(inner_coefftype(br, kt))
    prodtype = ptype(kt)
    for (b,c) in dict(br), (k,v) in dict(kt)
        result += inner_mul(c',v,prodtype,b,k)
    end
    return result  
end

function ortho_inner(a::DiracState{KroneckerDelta}, b::DiracState{KroneckerDelta})
    result = predict_zero(inner_coefftype(a, b))
    for label in keys(dict(b))
        if haskey(a, label)
            result += a[label]*b[label]
        end
    end
    return result
end

function inner{N}(br::Bra{KroneckerDelta,N}, kt::Ket{KroneckerDelta,N})
    if length(br) < length(kt)
        return ortho_inner(kt, br)
    else
        return ortho_inner(br, kt)
    end
end

Base.(:*)(br::Bra, kt::Ket) = inner(br,kt)

inner_eval(f, s::DiracState) = mapcoeffs(x->inner_eval(f,x),s)

##########
# act_on #
##########
act_on(kt::Ket, br::Bra, i) = act_on(kt', br', i)'

act_on{P}(br::Bra{P,1}, kt::Ket{P,1}, i) = i==1 ? inner(br, kt) : throw(BoundsError())

function act_on{P,N,A,B}(br::Bra{P,1,A}, kt::Ket{P,N,B}, i)
    prodtype = ptype(br)
    result = StateDict{N-1, inner_coefftype(br,kt)}()
    return Ket(prodtype, act_on_dict!(result, br, kt, i, prodtype))
end

function act_on_dict!(result, br::Bra, kt::Ket, i, prodtype)
    for (b,c) in dict(br), (k,v) in dict(kt)
        add_to_dict!(result, except(k,i), inner_mul(c', v, p",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G4DaAx
code,"using ParallelAccelerator

immutable newType
    w::Vector{Float64}
    b::Float64
end
@acc function evaluate(f::newType, X::AbstractMatrix)
    if f.b != 0
	X = X + f.b
    end
    return X
end

function main(m::Int, n::Int)
    X = Array(Float64, m, n)
    W = Array(Float64, m)
    fill!(X, 5)
    fill!(W, 3)
    b = 1.0
    f = newType(W,b)
    evaluate(f, X)
    println(""done"")

end

main(100, 200)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xVy4nh
code,"using Mimi

@defcomp grosseconomy begin
    regions = Index()                           #Note that a regional index is defined here

    YGROSS  = Variable(index=[time, regions])   #Gross output
    K       = Variable(index=[time, regions])   #Capital
    l       = Parameter(index=[time, regions])  #Labor
    tfp     = Parameter(index=[time, regions])  #Total factor productivity
    s       = Parameter(index=[time, regions])  #Savings rate
    depk    = Parameter(index=[regions])        #Depreciation rate on capital - Note that it only has a region index
    k0      = Parameter(index=[regions])        #Initial level of capital
    share   = Parameter()                       #Capital share
end


function timestep(state::grosseconomy, t::Int)
    v = state.Variables
    p = state.Parameters
    d = state.Dimensions                        #Note that the regional dimension is defined here and parameters and variables are indexed by 'r'

    #Define an equation for K
    for r in d.regions
        if t == 1
            v.K[t,r] = p.k0[r]
        else
            v.K[t,r] = (1 - p.depk[r])^5 * v.K[t-1,r] + v.YGROSS[t-1,r] * p.s[t-1,r] * 5
        end
    end

    #Define an equation for YGROSS
    for r in d.regions
        v.YGROSS[t,r] = p.tfp[t,r] * v.K[t,r]^p.share * p.l[t,r]^(1-p.share)
    end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0mQQEY
code,"using Contour
using Base.Test

include(""verify_vertices.jl"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uvUijt
code,"export
    SynthRule,
    Synthesizer,
    SynthesizerOptions,
    DecodeRule,
    define!,
    dnaSize!,
    resultSize!,
    decodeAsContextArray,
    decode,
    decodeAt

abstract SynthRule

typealias StateDict Dict{Symbol, Any}

immutable DecodePars{C, A, S}
    ctx::C
    dnaFragment::A
    result::A
    resultSeq::S
    state
end

DecodePars{C, A, S}(ctx::C, dnaFragment::A, result::A, resultSeq::S, state) =
    DecodePars{C, A, S}(ctx, dnaFragment, result, resultSeq, state)

immutable DecodeRule{R}
    rule::R
    asContextArray::Bool
end

DecodeRule{R}(rule::R) = DecodeRule{R}(rule, false)

DecodeRule{R}(rule::R, asContextArray::Bool) = DecodeRule{R}(rule, asContextArray)

type Synthesizer{C}
    ctx::C
    rules::Vector{SynthRule}
    _states::Vector{StateDict}
    _dnaSize::Nullable{Int}
    _resultSize::Nullable{Int}
end

function Synthesizer{C}(ctx::C)
    Synthesizer{C}(
        ctx,
        Vector{SynthRule}(),
        Vector{StateDict}(),
        Nullable{Int}(),
        Nullable{Int}())
end

function define!(syn::Synthesizer, rule::SynthRule)
    push!(syn.rules, rule)
    state = StateDict()
    push!(syn._states, state)
    initialize!(rule, syn.ctx, state)
    syn._dnaSize = Nullable{Int}()
    syn._resultSize = Nullable{Int}()
end

function dnaSize!(syn::Synthesizer)
    isnull(syn._dnaSize) && (syn._dnaSize = sum(map(rule -> dnaSize(rule), syn.rules)))
    get(syn._dnaSize)
end

function resultSize!(syn::Synthesizer)
    isnull(syn._resultSize) && (syn._resultSize = sum(map(rule -> resultSize(rule), syn.rules)))
    get(syn._resultSize)
end

function decodeAsContextArray{C}(syn::Synthesizer{C}, dna::DNA{C})
    result = constant(syn.ctx, 0f0, resultSize!(syn))

    dnaBeginIndex = 0
    resultBeginIndex = 0

    ruleIndex = 1
    for rule in syn.rules
        scope!(syn.ctx) do this
            const ruleDnaSize = dnaSize(rule)
            const ruleResultSize = resultSize(rule)
            const dnaEndIndex = dnaBeginIndex + ruleDnaSize - 1
            const resultEndIndex = resultBeginIndex + ruleResultSize - 1

            pars = DecodePars(
                syn.ctx,
                dna.array[seq(syn.ctx, dnaBeginIndex, dnaEndIndex)],
                result,
                seq(syn.ctx, resultBeginIndex, resultEndIndex),
                syn._states[ruleIndex]
            )

            decode(rule, pars)

            dnaBeginIndex += ruleDnaSize
            resultBeginIndex += ruleResultSize
            ruleIndex += 1
        end
    end

    eval!(result)
    result
end

function decode{C}(syn::Synthesizer{C}, dna::DNA{C})
    scope!(syn.ctx) do this
        array = Array(decodeAsContextArray(syn, dna))

        result = Vector()
        outputIndex = 1
        for rule in syn.rules
            for value in asValues(rule, array, outputIndex)
                push!(result, value)
            end
            outputIndex += resultSize(rule)
        end
        result
    end
end

function decodeAt(syn::Synthesizer, array, items)
    all = Vector()
    for item in items
        local rule
        if isa(item.rule, Int)
            rule = syn.rules[item.rule]
        elseif isa(item.rule, SynthRule)
            rule = item.rule
        else
            error(""Unknown rule: $(item.rule)"")
        end

        outputIndex = 0
        found = false
        for curr in syn.rules
            if curr == rule
                scope!(syn.ctx) do this
                    sub = array[seq(syn.ctx, outputIndex, outputIndex + resultSize(rule) - 1)]
                    if item.asContextArray
                        this.result(sub)
                        push!(all, sub)
                    else
                        subValues = Array(sub)
                        result = Vector()
                        for value in asValues(rule, subValues, 1)
                            push!(result, value)
                        end
                        push!(all, result)
                    end
                end
                found = true
                break
            end
            outputIndex += resultSize(curr)
        end
        found || error(""Rule hasn't found: $(item.rule)"")
    end
    all
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LCja0o
code,"
typealias Float Float64

const gPDEDiffEst = 1e-6
const gPDEBdyReflect = true
const gJDiffEst = 1e-5
const gOptTol = 1e-5
const gOptNMax = 15
const gOptNSubMax = 100
const gOptAbsErrTest = false
const gOptShowTrace = true
const gOptStoreTrace = true

const gSetVerbose = true

macro lintpragma( s )
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ISZXYg
code,"
facts(""Frame type"") do
    frame = Frame()
    @fact size(frame) --> 0

    frame = Frame(4)
    @fact size(frame) --> 4

    pos = Array(Float32, 3, 4)
    for i=1:3, j=1:4
        pos[i, j] = i*j
    end
    set_positions!(frame, pos)
    @fact positions(frame) --> pos

    @fact has_velocities(frame) --> false

    set_velocities!(frame, pos)
    @fact velocities(frame) --> pos

    @fact has_velocities(frame) --> true

    set_cell!(frame, UnitCell(3, 4, 5))
    cell = UnitCell(frame)
    @fact lengths(cell) --> (3.0, 4.0, 5.0)

    top = Topology()
    push!(top, Atom(""Zn""))
    push!(top, Atom(""Ar""))
    set_topology!(frame, top)
    new_top = Topology(frame)

    @fact name(Atom(new_top, 0)) --> ""Zn""
    @fact name(Atom(new_top, 1)) --> ""Ar""

    @fact step(frame) --> 0
    set_step!(frame, 42)
    @fact step(frame) --> 42
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SO5U3-
code,"# OpenFisca -- A versatile microsimulation software
# By: OpenFisca Team <contact@openfisca.fr>
#
# Copyright (C) 2011, 2012, 2013, 2014, 2015 OpenFisca Team
# https://github.com/openfisca
#
# This file is part of OpenFisca.
#
# OpenFisca is free software; you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# OpenFisca is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


@define_formula(abat_sal_pen, individu_definition, Float32, requested_period_default_value,
  label = ""Abattement de 20% sur les salaires"",
  start_date = Date(2002, 1, 1),
  stop_date = Date(2005, 12, 31),
) do simulation, variable, period
  period = YearPeriod(firstdayofmonth(period.start))
  @calculate(salcho_imp, period)
  @calculate(pen_net, period)
  abatsalpen = legislation_at(simulation, period.start)[""ir""][""tspr""][""abatsalpen""]
  return period, min(abatsalpen[""taux""] .* max(salcho_imp .+ pen_net, 0), abatsalpen[""max""])
end


@define_formula(abat_spe, foyer_fiscal_definition, Float32, requested_period_default_value,
  label = ""Abattements spéciaux"",
  url = ""http://bofip.impots.gouv.fr/bofip/2036-PGP"",
) do simulation, variable, period
  """"""Abattements spéciaux

  - pour personnes âges ou invalides : âgé(e) de plus de 65 ans
    ou invalide (titulaire d’une pension d’invalidité militaire ou d’accident
    du travail d’au moins 40 % ou titulaire de la carte d’invalidité),
    abattement de 2 172 € si rng du foyer fiscal inférieur à 13 370 €
                  1 086 € si rng  compris entre 13 370 € et 21 570 €.
    Abattement doublé si conjoint remplit également ces conditions
    d’âge ou d’invalidité.
  - pour enfants à charge ayant fondé un foyer distinct : Si  rattachement
    enfants mariés ou pacsés ou enfants  célibataires, veufs, divorcés, séparés, chargés de famille,
    abattement 5 495 € par personne ainsi rattachée.
    Si l’enfant de la personne rattachée est réputé à charge de
    l’un et l’autre de ses parents (garde alternée), cet abattement est divisé
    par deux soit 2 748€. Exemple : 10 990 € pour un jeune ménage et 8 243 €
    pour un célibataire avec un jeune enfant en résidence alternée.
  """"""
  period = YearPeriod(firstdayofmonth(period.start))
  age_holder = calculate(simulation, ""age"", period)
  @calculate(caseP, period)
  @calculate(caseF, period)
  @calculate(rng, period)
  @calculate(nbN, period)
  abattements_speciaux = legislation_at(simulation, period.start)[""ir""][""abattements_speciaux""]
  age = split_person_by_role(age_holder, get_entity(variable), period, [VOUS, CONJ])
  ageV, ageC = age[VOUS], age[CONJ]
  invV, invC = caseP, caseF
  nb_elig_as = (1 .* (((ageV .>= 65) | invV) & (ageV .> 0)) .+ 1 .* (((ageC .>= 65) | invC) & (ageC .> 0)))
  as_inv = (nb_elig_as .* abattements_speciaux[""inv_montant""] .* ((rng .<= abattements_speciaux[""inv_max1""]) .+ ((rng .> abattements_speciaux[""inv_max1""]) & (rng .<= abattements_speciaux[""inv_max2""])) .* 0.5))
  as_enf = nbN .* abattements_speciaux[""enf_montant""]
  return period, min(rng, as_inv .+ as_enf)
end


@define_formula(age, individu_definition, Int32, requested_period_last_value,
  cell_default = -9999,
  cell_format = ""age"",
  label = ""Âge (en années)"",
  value_at_period_to_cell = variable_definition::VariableDefinition -> pipe(
    value_at_period_to_integer(variable_definition),
    first_match(
      test_greater_or_equal(0),
      test_equal(-9999),
    ),
  ),
) do simulation, variable, period
  @variable_at(birth, period, nothing)
  if birth === nothing
    @variable_at(agem, period, nothing)
    if agem !== nothing
      return period, div(agem, 12)
    end
    @calculate(birth, period)
  end
  return period, floor(int((period.start .- birth)) / 365.25)
end


@define_formula(agem, individu_definition, Int32, requested_period_last_value,
  cell_default = -9999,
  cell_format = ""months"",
  label = ""Âge (en mois)"",
  value_at_period_to_cell = variable_definition::VariableDefinition -> pipe(
    value_at_period_to_integer(variable_definition),
    first_match(
      test_greater_or_equal(0),
      test_equal(-9999),
    ),
  ),
) do simulation, variable, period
  @variable_at(birth, period, nothing)
  if birth === nothing
    @variable_at(age, period, nothing)
    if age !== nothing
      return period, age .* 12
    end
    @calculate(birth, period)
  end
  return period, floor(int((period.start .- birth)) * 12 / 365.25)
end


@define_formula(alv, foyer_fiscal_definition, Float32, requested_period_default_value,
  label = ""Pensions alimentaires versées"",
  url = ""http://vosdroits.service-public.fr/particuliers/F2.xhtml"",
) do simulation, variable, period
  period = YearPeriod(fi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",02P12C
code,"function initializeBAMReader( filename::String )
    stream = GZip.open(filename)
    seek(stream, 0)
    if !checkBAMMagicString( stream )
        error(""BAM magic string was not found!"")
    end
    headerText = readBAMHeaderText( stream )
    references = readBAMHeaderReferences( stream )
    return( BAMReader( filename, stream, headerText, references ) )
end

function resetBAMReader( br::BAMReader )
    seek(br.stream, 0)
    if !checkBAMMagicString( br.stream )
        error(""BAM magic string was not found!"")
    end
    headerText = readBAMHeaderText( br.stream )
    references = readBAMHeaderReferences( br.stream )
    assert(headerText == br.headerText)
    assert(references == br.references)
end

function Base.string(x::Alignment)
    return ""Alignment("" * string(x.readName) * "")""
end
Base.print(io::IO, x::Alignment) = print(io, string(x))
Base.show(io::IO, x::Alignment) = print(io, string(x))

function Base.string(x::BAMReader)
    return ""BAMReader("" * string(x.stream) * "")""
end
Base.print(io::IO, x::BAMReader) = print(io, string(x))
Base.show(io::IO, x::BAMReader) = print(io, string(x))

function Base.string(x::CigarOperation)
    return ""CigarOperation("" * string(x.opcode) * string(x.size) * "" at "" * string(x.interval) * "")""
end
Base.print(io::IO, x::CigarOperation) = print(io, string(x))
Base.show(io::IO, x::CigarOperation) = print(io, string(x))

function checkBAMMagicString( br )
    ret = Array(Uint8, 4)
    read(br, ret)
    return( char(ret) == ['B','A','M','\x01'] )
end

function readBAMHeaderText( br )
    headerLength = Array(Int32,1)
    read( br, headerLength )
    headerText = Array(Uint8, headerLength[1])
    read( br, headerText )
    return( UTF8String(headerText) )
end

function readBAMHeaderReferences( br )
    n_ref = read(br, Int32)
    ret = Array( BAMReference, n_ref )
    for i in 1:n_ref
        l_name = read(br, Int32)
        name = Array(Uint8,l_name)
        read(br, name)
        l_ref = read(br, Int32)
        ret[i] = BAMReference(UTF8String(name[1:(l_name-1)]), l_ref)
    end
    return(ret)
end

function getBAMheader( br )
    seek( br, 0 )
    if checkBAMMagicString( br )
        headerText = readBAMHeaderText( br )
        readBAMHeaderReferences( br )
    end
end

function processCigar( cigar, refID, pos )
    ret = Array(CigarOperation, length(cigar))
    for i in 1:length(cigar)
        size = (cigar[i] >>> 4)
        opcode = ""MIDNSHP=X""[convert(Uint8, cigar[i]) & 15 + 1]
        if opcode in ""MDN=X""
            ret[i] = CigarOperation( opcode, size, GenomicInterval( refID, pos, pos + size ) )
            pos += size
        else
            ret[i] = CigarOperation( opcode, size, GenomicInterval( refID, pos, pos ) )
        end
    end
    ret
end

function convertValueType( vt::Uint8, br::GZip.GZipStream )
    valueType = nothing
    if vt == 65 #Plain Char - 'A'
        return(Uint8, read(br, Uint8), sizeof(Uint8))
    elseif vt == 99 #int8 - 'c'
        return(Int8, read(br, Int8), sizeof(Int8))
    elseif vt == 67 #uint8 - 'C'
        return(Uint8, read(br, Uint8), sizeof(Uint8))
    elseif vt == 115 #int16 - 's'
        return(Int16, read(br, Int16), sizeof(Int16))
    elseif vt == 83 # uint16 - 'S'
        return(Uint16, read(br, Uint16), sizeof(Uint16))
    elseif vt == 105 # int32 - 'i'
        return(Int32, read(br, Int32), sizeof(Int32))
    elseif vt == 73 #uint32 - 'I'
        return(Uint32, read(br, Uint23), sizeof(Uint32))
    elseif vt == 102 #single precision float - 'f'
        return(Float32, read(br, Float32), sizeof(Float32))
    elseif vt == 90 #Printable String - 'Z'
        data = []
        byte = read(br, Uint8)
        while byte != 0
            data = vcat( data, byte )
            byte = read(br, Uint8)
        end
        return( Uint8, CharString(data), sizeof(Uint8)*length(data))
    elseif vt == 72 #Byte Array in Hex format - 'H'
        print(""H"")
    elseif vt == 66 #Integer or numeric array - 'B'
        print(""B"")
    else
        error(""Typecode not found: "" * string(vt))
    end
end

function readBlock( br::BAMReader )
    blockSize = read(br.stream, Int32)
    refID = read(br.stream, Int32)
    pos = read(br.stream, Int32)
    bin_mq_nl = read(br.stream, Uint32)
    bin = convert(Uint16,bin_mq_nl >>> 16)
    mapq = convert(Uint8,bin_mq_nl >>> 8)
    l_read_name = convert(Uint8,bin_mq_nl)
    flag_nc = read(br.stream, Uint32)
    flag = flag_nc >>> 16
    nCigar = convert(Uint16,flag_nc)
    l_seq = read(br.stream, Int32)
    next_refID = read(br.stream, Int32)
    next_pos = read(br.stream, Int32)
    tlen = read(br.stream, Int32)
    readName = Array(Uint8,l_read_name)
    read(br.stream, readName)
    cigar = Array(Uint32,nCigar)
    read(br.stream, cigar)
    cigar = processCigar( cigar, br.references[refID+1].name, pos )
    seq = Array( Uint8, convert( Uint32, ceil((l_seq+1) / 2) ) )
    read(br.stream, seq)
    seqmap = ""=ACMGRSVTWYHKDBN""
    readseq = CharString([mapreduce( byte->[ seqmap[byte >>> 4 + 1], seqmap[byte & 15 + 1]], vcat, seq )])[1:l_seq]
    qual = Array(Uint8,l_seq)
    read(br.stream,qual)
    bytesLeft = blockSi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fSwLAN
code,"# PLX.jl
# Copyright (C) 2012   Simon Kornblith

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

using PLX, MAT, BinDeps, Base.Test

# Unfortunately, these test files come from the SDK provided by Plexon Inc. and
# are assumed not to be redistributable
testdir = joinpath(dirname(@__FILE__), ""Matlab Offline Files SDK"", ""mexPlex"", ""tests"")
if !isdir(testdir)
	parentdir = dirname(@__FILE__)
	bundlezip = joinpath(parentdir, ""Plexon Offline SDKs.zip"")
	run(download_cmd(""http://www.plexon.com/sites/default/files/downloads/OmniPlex%20and%20MAP%20Offline%20SDK%20Bundle_0.zip"",
		             bundlezip))
	cd(parentdir) do
		run(`unzip $bundlezip`)
	end
	cd(parentdir) do
		run(`unzip $(joinpath(parentdir, ""Plexon Offline SDKs"", ""Matlab Offline Files SDK.zip""))`)
	end
end

to_vec(x::Vector) = x
to_vec(x::Array) = vec(x)
to_vec(x) = [x]

m = matread(joinpath(testdir, ""mexPlexData1.dat""))
for plx in m[""data""][""plxs""]
	p = PLXFile(joinpath(testdir, plx[""FileName""]), waveforms=true)
	@test p.header.Version == plx[""Version""]
	@test p.header.ADFrequency == plx[""Freq""]
	@test p.header.Comment == plx[""Comment""]
	@test p.header.Trodalness == plx[""Trodalness""]
	@test p.header.NumPointsWave == plx[""NPW""]
	@test p.header.NumPointsPreThr == plx[""PreThresh""]
	@test p.header.SpikeMaxMagnitudeMV == plx[""SpikePeakV""]
	@test p.header.BitsPerSpikeSample == plx[""SpikeADResBits""]
	@test p.header.SlowMaxMagnitudeMV == plx[""SlowPeakV""]
	@test p.header.BitsPerSlowSample == plx[""SlowADResBits""]
	@test p.header.LastTimestamp/p.header.ADFrequency == plx[""Duration""]

	# Spikes
	n = plx[""ts""][""n""]
	ts = plx[""ts""][""ts""]
	wf = plx[""wf""][""wf""]
	wf_v = plx[""wf_v""][""wf""]
	for iunit = 1:30, ich = -1:130
		myts = ts[iunit+2, ich+2]
		if myts == -1
			@test !haskey(p.spike_channels, ich) ||
			      iunit > length(p.spike_channels[ich].units) ||
			      isempty(p.spike_channels[ich].units[iunit].spike_times)
		else
			ch = p.spike_channels[ich]
			unit = ch.units[iunit]
			@test vec(myts) == unit.spike_times
			@test wf[iunit+2, ich+2]' == unit.spike_waveforms
			@test_approx_eq wf_v[iunit+2, ich+2]' unit.spike_waveforms/3276.8
		end
	end

	# Continuous channels
	freq = plx[""ad""][""freq""]
	ts = plx[""ad""][""ts""]
	val = plx[""ad""][""val""]
	val_v = plx[""ad_v""][""val""]
	for ich = -1:400
		myts = ts[ich+2]
		if myts == -1
			@test !haskey(p.continuous_channels, ich) ||
			      isempty(p.continuous_channels[ich].samples)
		else
			ch = p.continuous_channels[ich]
			@test to_vec(myts) == ch.times.timestamps[1:end-1]/ch.times.timestamp_frequency
			@test frequency(ch.times) == freq[ich+2]
			@test ch.samples == vec(val[ich+2])
			@test ch.samples*ch.voltage_multiplier == vec(val_v[ich+2])
		end
	end

	# Events
	tsevs = plx[""tsevs""]
	for ich = -1:310
		myts = tsevs[ich+2]
		if myts == -1
			@test !haskey(p.event_channels, ich) ||
			      isempty(p.event_channels[ich].times)
		else
			ch = p.event_channels[ich]
			@test_approx_eq ch.times to_vec(myts)
			if ich == 257
				v = to_vec(plx[""strobed""][""v""])
				@test v == ch.codes
			end
		end
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VkXJOC
code,"module HDFSBlobs

using Blobs
using Elly
import Base: open
import Blobs: @logmsg, open, load, save, locality

export open, locality, load, save, HDFSBlobIO

immutable HDFSBlobIO{T} <: BlobIO{T}
    uri::AbstractString    # the HDFS URI prefix with server credentials and location (e.g.: ""hdfs://userid@localhost:9000"")
end
HDFSBlobIO{T}(::Type{T}, uri::AbstractString) = HDFSBlobIO{T}(strip(uri))

function open(io::HDFSBlobIO, meta::FileMeta, mode::AbstractString=""r"")
    hfile = joinpath(HDFSFile(io.uri), meta.filename)
    if mode == ""w""
        dn = joinpath(HDFSFile(io.uri), dirname(meta.filename))
        (exists(dn) && isdir(dn)) || mkpath(dn)
        exists(hfile) || touch(hfile)
    end
    open(hfile, mode)
end

# file blob io
# hdfs files have weak locality to the machines that have the block(s)
function locality{T}(::Type{HDFSBlobIO{T}}, nodemap::NodeMap=DEF_NODE_MAP)
    nodes, ips, hns = localto(myid(), nodemap)
    WeakLocality(nodes..., ips..., hns...)
end

function load{T<:Real}(meta::FileMeta, reader::HDFSBlobIO{Vector{T}})
    @logmsg(""load using HDFSBlobIO{Vector{$T}}"")
    sz = floor(Int, meta.size / sizeof(T))
    open(reader, meta) do f
        (meta.offset > 0) && seek(f, meta.offset)
        databytes = Array(T, sz)
        read!(f, reinterpret(UInt8, databytes, (sizeof(databytes),)))
        return databytes
    end
end

function save{T<:Real}(databytes::Vector{T}, meta::FileMeta, writer::HDFSBlobIO{Vector{T}})
    @logmsg(""save Vector{$T} using HDFSBlobIO{Vector{$T}}"")
    open(writer, meta, ""w"") do f
        #@logmsg(""writing $(typeof(databytes)) array of length $(length(databytes)), size $(sizeof(databytes)). expected: $(meta.size)"")
        (sizeof(databytes) == meta.size) || throw(ArgumentError(""Blob data not of expected size. Got $(sizeof(databytes)), expected $(meta.size).""))
        write(f, reinterpret(UInt8, databytes, (sizeof(databytes),)))
    end
    nothing
end

function load{T<:Real}(meta::FileMeta, reader::HDFSBlobIO{Array{T}})
    @logmsg(""load using HDFSBlobIO{Array{$T}}"")
    open(reader, meta) do fhandle
        (meta.offset > 0) && seek(fhandle, meta.offset)
        hdrsz = read(fhandle, Int64)
        header = Array(Int64, hdrsz)
        read!(fhandle, reinterpret(UInt8, header, (sizeof(header),)))
        data = Array(T, header...)
        read!(fhandle, reinterpret(UInt8, data, (sizeof(data),)))
        return data
    end
end

function save{T<:Real}(M::Array{T}, meta::FileMeta, writer::HDFSBlobIO{Array{T}})
    @logmsg(""save Array{$T} using HDFSBlobIO{Array{$T}}"")
    header = Int64[size(M)...]
    hdrsz = Int64(length(header))

    open(writer, meta, ""w"") do fhandle
        write(fhandle, hdrsz)
        write(fhandle, reinterpret(UInt8, header, (sizeof(header),)))
        write(fhandle, reinterpret(UInt8, M, (sizeof(M),)))
    end
    nothing
end

function load(meta::FileMeta, reader::HDFSBlobIO{Any})
    @logmsg(""load using HDFSBlobIO{Any}"")
    open(reader, meta) do fhandle
        (meta.offset > 0) && seek(fhandle, meta.offset)
        return deserialize(SerializationState(fhandle))
    end
end

function save(data, meta::FileMeta, writer::HDFSBlobIO{Any})
    @logmsg(""save $(typeof(data)) using HDFSBlobIO{Any}"")
    open(writer, meta, ""w"") do fhandle
        serialize(SerializationState(fhandle), data)
    end
end

function save(coll::BlobCollection, hfile::HDFSFile, wrkrs::Vector{Int})
    dn = dirname(hfile)
    (exists(dn) && isdir(dn)) || mkpath(dn)
    open(hfile, ""w"") do f
        save(coll, f, wrkrs)
    end
end

function load(coll::BlobCollection, hfile::HDFSFile)
    open(hfile) do f
        load(coll, f)
    end
end

end # module
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EXXonq
code,"# Test of vbroadcast

using NumericExtensions
using Base.Test

#### 2D ####

x = randn(5, 6)
yr = rand(6) + 0.5
yrm = reshape(yr, 1, 6)
yc = rand(5) + 0.5

# badd

@test_approx_eq badd(x, yc, 1) x .+ yc
@test_approx_eq badd(x, yr, 2) x .+ yrm

r = copy(x); badd!(r, yc, 1)
@test_approx_eq r x .+ yc

r = copy(x); badd!(r, yr, 2)
@test_approx_eq r x .+ yrm

# bsubtract

@test_approx_eq bsubtract(x, yc, 1) x .- yc
@test_approx_eq bsubtract(x, yr, 2) x .- yrm

r = copy(x); bsubtract!(r, yc, 1)
@test_approx_eq r x .- yc

r = copy(x); bsubtract!(r, yr, 2)
@test_approx_eq r x .- yrm

# bmultiply

@test_approx_eq bmultiply(x, yc, 1) x .* yc
@test_approx_eq bmultiply(x, yr, 2) x .* yrm

r = copy(x); bmultiply!(r, yc, 1)
@test_approx_eq r x .* yc

r = copy(x); bmultiply!(r, yr, 2)
@test_approx_eq r x .* yrm

# bdivide

@test_approx_eq bdivide(x, yc, 1) x ./ yc
@test_approx_eq bdivide(x, yr, 2) x ./ yrm

r = copy(x); bdivide!(r, yc, 1)
@test_approx_eq r x ./ yc

r = copy(x); bdivide!(r, yr, 2)
@test_approx_eq r x ./ yrm


# #### 3D ####

x = randn(4, 5, 6)

y1 = rand(4) + 0.5; y1m = reshape(y1, 4, 1, 1)
y2 = rand(5) + 0.5; y2m = reshape(y2, 1, 5, 1)
y3 = rand(6) + 0.5; y3m = reshape(y3, 1, 1, 6)

# badd

@test_approx_eq badd(x, y1, 1) x .+ y1m
@test_approx_eq badd(x, y2, 2) x .+ y2m
@test_approx_eq badd(x, y3, 3) x .+ y3m

# bsubtract

@test_approx_eq bsubtract(x, y1, 1) x .- y1m
@test_approx_eq bsubtract(x, y2, 2) x .- y2m
@test_approx_eq bsubtract(x, y3, 3) x .- y3m

# bmultiply

@test_approx_eq bmultiply(x, y1, 1) x .* y1m
@test_approx_eq bmultiply(x, y2, 2) x .* y2m
@test_approx_eq bmultiply(x, y3, 3) x .* y3m

# bdivide

@test_approx_eq bdivide(x, y1, 1) x ./ y1m
@test_approx_eq bdivide(x, y2, 2) x ./ y2m
@test_approx_eq bdivide(x, y3, 3) x ./ y3m

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W18wVK
code,"using StructJuMP, JuMP
using StructJuMPSolverInterface

include(""select_solver.jl"")

#############
# A sample model
#############
scen = 1
m = StructuredModel(num_scenarios=scen)
@variable(m, -100<=x[1:4]<=100)
@NLobjective(m, Min,  0.1*x[1]^2 + 0.2*x[2]^2 + 0.3*x[3]^2 + 0.4*x[4]^2 +
    + 1.1*x[1]*x[2] + 2.1*x[1]*x[3] + 2.2*x[1]*x[4] + 
    + 2.1*x[2]*x[3] + 2.2*x[2]*x[4] 
    + 3.1*x[3]*x[4])

for i in 1:scen
    bl = StructuredModel(parent=m)
    @variable(bl, -200<=y1[1:3]<=200)
    
    @NLconstraint(bl, -100<= 0.1*x[1] + 0.2*x[2]                          <= 100)
    @NLconstraint(bl, -101<=               1.1*x[2] + 1.2*x[3]            <= 101)
    @NLconstraint(bl, -102<=                          2.1*x[3] + 2.2*x[4] <= 102)

    @NLconstraint(bl,  9.1*x[1]           + 9.2*x[3]            -109 == 0)
    # @NLconstraint(bl,            8.1*x[2] + 8.2*x[3]            -108 == 0)
    @NLconstraint(bl,                       7.1*x[3] + 7.2*x[4] -107 == 0)    


    @NLconstraint(bl, -201<= 10.1*x[1] + 10.2*x[2]                           - 10.3*y1[1] + 10.4*y1[2]               <= 201)
    @NLconstraint(bl, -202<=             11.1*x[2] + 11.2*x[3]               - 11.3*y1[1] + 11.4*y1[2] + 11.5*y1[3]  <= 202)
    @NLconstraint(bl, -203<=                           12.1*x[3] + 12.2*x[4]              + 12.4*y1[2] - 12.5*y1[3]  <= 203)


    @NLconstraint(bl,        19.1*x[1]             - 19.2*x[3]               - 19.3*y1[1] + 19.4*y1[2]                == 209)
    @NLconstraint(bl,                    18.1*x[2] + 18.2*x[3]                                         - 18.3*y1[3]   == 208)
    @NLconstraint(bl,                                17.1*x[3] + 17.2*x[4]                + 17.4*y1[2]                == 207)

    @NLobjective(bl, Min, 
        5.1*y1[1]*x[1] + 5.2*y1[1]*x[2] + 5.3*y1[1]*x[3] + 5.4*y1[1]*x[4]
    +                    6.2*y1[2]*x[2] +                  6.4*y1[2]*x[4]
    +   7.1*y1[3]*x[1] +                  7.3*y1[3]*x[3]
    +   8.1*y1[1]^2    + 8.2*y1[2]^2 + 8.3*y1[3]^2
    +   9.1*y1[1]*y1[2]+ 9.2*y1[1]*y1[3]
    +   10.1*y1[2]*y1[3])
end

structJuMPSolve(m)

getVarValue(m)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TPIUgS
code,"import MathOptInterface
const MOI = MathOptInterface
const MOIU = MOI.Utilities

import MathProgBase
const MPB = MathProgBase.SolverInterface

MOIU.@model(
    Model,
    (MOI.ZeroOne, MOI.Integer),
    (MOI.EqualTo, MOI.GreaterThan, MOI.LessThan, MOI.Interval),
    (),
    (),
    (),
    (MOI.ScalarAffineFunction, MOI.ScalarQuadraticFunction),
    (),
    (),
    true    # is_optimizer
)

const MOI_SCALAR_SETS = (
    MOI.EqualTo{Float64}, MOI.GreaterThan{Float64}, MOI.LessThan{Float64},
    MOI.Interval{Float64}
)

const MOI_SCALAR_FUNCTIONS = (
    MOI.ScalarAffineFunction{Float64}, MOI.ScalarQuadraticFunction{Float64}
)

""Struct to contain the MPB solution.""
struct MPBSolution
    status::Symbol
    raw_status_string::String
    objective_value::Float64
    primal_solution::Dict{MOI.VariableIndex, Float64}
end

""""""
    Optimizer(
        solver_command::String,
        options::Vector{String} = String[];
        filename::String = """"
    )

# Example

    Optimizer(Ipopt.amplexe, [""print_level=0""])
""""""
function Optimizer(
        solver_command::String,
        options::Vector{String} = String[];
        filename::String = """"
)
    model = Model{Float64}()
    model.ext[:MPBSolver] = AmplNLSolver(solver_command, options, filename = filename)
    model.ext[:VariablePrimalStart] = Dict{MOI.VariableIndex, Float64}()
    return model
end

function MOI.empty!(model::Model{Float64})
    model.name = """"
    model.senseset = false
    model.sense = MOI.FEASIBILITY_SENSE
    model.objectiveset = false
    model.objective = MOI.ScalarAffineFunction{Float64}(MOI.ScalarAffineTerm{Float64}[], 0.0)
    model.num_variables_created = 0
    model.variable_indices = nothing
    empty!(model.single_variable_mask)
    empty!(model.lower_bound)
    empty!(model.upper_bound)
    empty!(model.var_to_name)
    model.name_to_var = nothing
    model.nextconstraintid = 0
    empty!(model.con_to_name)
    model.name_to_con = nothing
    empty!(model.constrmap)
    MOI.empty!(model.moi_scalaraffinefunction)
    MOI.empty!(model.moi_scalarquadraticfunction)
    solver = model.ext[:MPBSolver]
    empty!(model.ext)
    model.ext[:MPBSolver] = solver
    model.ext[:VariablePrimalStart] = Dict{MOI.VariableIndex, Float64}()
    return
end

Base.show(io::IO, ::Model) = print(io, ""An AmplNLWriter model"")

MOI.get(::Model, ::MOI.SolverName) = ""AmplNLWriter""

set_to_bounds(set::MOI.LessThan) = (-Inf, set.upper)
set_to_bounds(set::MOI.GreaterThan) = (set.lower, Inf)
set_to_bounds(set::MOI.EqualTo) = (set.value, set.value)
set_to_bounds(set::MOI.Interval) = (set.lower, set.upper)
set_to_cat(set::MOI.ZeroOne) = :Bin
set_to_cat(set::MOI.Integer) = :Int

struct NLPEvaluator{T} <: MPB.AbstractNLPEvaluator
    inner::T
    variable_map::Dict{MOI.VariableIndex, Int}
    num_inner_con::Int
    has_nlobjective::Bool
    objective_expr::Union{Nothing, Expr}
    scalar_constraint_expr::Vector{Expr}
end

""""""
MathProgBase expects expressions with variables denoted by `x[i]` for contiguous
`i`. However, JuMP 0.19 creates expressions with `x[MOI.VariableIndex(i)]`. So
we have to recursively walk the expression replacing instances of
MOI.VariableIndex by a corresponding integer.
""""""
function replace_variableindex_by_int(variable_map, expr::Expr)
    for (i, arg) in enumerate(expr.args)
        expr.args[i] = replace_variableindex_by_int(variable_map, arg)
    end
    return expr
end
function replace_variableindex_by_int(variable_map, expr::MOI.VariableIndex)
    return variable_map[expr]
end
replace_variableindex_by_int(variable_map, expr) = expr

# In the next section we match up the MPB nonlinear functions to the MOI API.
# This is basically just a rename.
function MPB.initialize(d::NLPEvaluator, requested_features::Vector{Symbol})
    if d.inner !== nothing
        MOI.initialize(d.inner, requested_features)
    end
    return
end

function MPB.features_available(d::NLPEvaluator)
    if d.inner !== nothing
        return MOI.features_available(d.inner)
    else
        return [:ExprGraph]
    end
end

function MPB.obj_expr(d::NLPEvaluator)
    if d.has_nlobjective
        # If d.objective_expr === nothing, then the objective must be nonlinear.
        # Query it from the inner NLP evaluator.
        expr = MOI.objective_expr(d.inner)
        return replace_variableindex_by_int(d.variable_map, expr)
    elseif d.objective_expr !== nothing
        # d.objective_expr is a SingleVariable, ScalarAffineFunction, or a
        # ScalarQuadraticFunction from MOI. If it is unset, it will be `nothing`
        # (we enforce this when creating the NLPEvaluator in `optimize!`).
        return d.objective_expr
    else
        return :(0.0)
    end
end

function MPB.constr_expr(d::NLPEvaluator, i)
    # There are two types of constraints in the model:
    # i = 1, 2, ..., d.num_inner_con are the nonlinear constraints. We access
    # these from the inner NLP evaluator.
    # i = d.num_inner_con + 1, d.num_inner_con + 2, ..., N are the linear or
    # quadratic constraints added by MOI.
    if i <= d.num_inner_con
        expr = MOI.constraint_expr(d.inner, i)
        return replace_vari",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rQ0TnJ
code,"module Lasso
using Compat
module Util
    # Extract fields from object into function locals
    # See https://github.com/JuliaLang/julia/issues/9755
    macro extractfields(from, fields...)
        esc(Expr(:block, [:($(fields[i]) = $(from).$(fields[i])) for i = 1:length(fields)]...))
    end
    export @extractfields
end

import Base.LinAlg.BlasReal
include(""FusedLasso.jl"")
include(""TrendFiltering.jl"")

using Reexport, StatsBase, .Util
@reexport using GLM, Distributions, .FusedLassoMod, .TrendFiltering
using GLM.FPVector, GLM.wrkwt!
export LassoPath, fit, fit!, coef

## HELPERS FOR SPARSE COEFFICIENTS

immutable SparseCoefficients{T} <: AbstractVector{T}
    coef::Vector{T}              # Individual coefficient values
    coef2predictor::Vector{Int}  # Mapping from indices in coef to indices in original X
    predictor2coef::Vector{Int}  # Mapping from indices in original X to indices in coef

    SparseCoefficients(n::Int) = new(T[], Int[], zeros(Int, n))
end

function Base.A_mul_B!{T}(out::Vector, X::Matrix, coef::SparseCoefficients{T})
    fill!(out, zero(eltype(out)))
    @inbounds for icoef = 1:nnz(coef)
        ipred = coef.coef2predictor[icoef]
        c = coef.coef[icoef]
        @simd for i = 1:size(X, 1)
            out[i] += c*X[i, ipred]
        end
    end
    out
end

function Base.A_mul_B!{T}(out::Vector, X::SparseMatrixCSC, coef::SparseCoefficients{T})
    @extractfields X colptr rowval nzval
    fill!(out, zero(eltype(out)))
    @inbounds for icoef = 1:nnz(coef)
        ipred = coef.coef2predictor[icoef]
        c = coef.coef[icoef]
        @simd for i = colptr[ipred]:colptr[ipred+1]-1
            out[rowval[i]] += c*nzval[i]
        end
    end
    out
end

function Base.dot{T}(x::Vector{T}, coef::SparseCoefficients{T})
    v = 0.0
    @inbounds @simd for icoef = 1:nnz(coef)
        v += x[coef.coef2predictor[icoef]]*coef.coef[icoef]
    end
    v
end

Base.size(x::SparseCoefficients) = (length(x.predictor2coef),)
Base.nnz(x::SparseCoefficients) = length(x.coef)
Base.getindex{T}(x::SparseCoefficients{T}, ipred::Int) =
    x.predictor2coef[ipred] == 0 ? zero(T) : x.coef[x.predictor2coef[ipred]]

function Base.setindex!{T}(A::Matrix{T}, coef::SparseCoefficients, rg::UnitRange{Int}, i::Int)
    A[:, i] = zero(T)
    for icoef = 1:nnz(coef)
        A[rg[coef.coef2predictor[icoef]], i] = coef.coef[icoef]
    end
    A
end

function Base.copy!(x::SparseCoefficients, y::SparseCoefficients)
    length(x) == length(y) || throw(DimensionMismatch())
    n = length(y.coef)
    resize!(x.coef, n)
    resize!(x.coef2predictor, n)
    copy!(x.coef, y.coef)
    copy!(x.coef2predictor, y.coef2predictor)
    copy!(x.predictor2coef, y.predictor2coef)
    x
end

# Add a new coefficient to x, returning its index in x.coef
function addcoef!{T}(x::SparseCoefficients{T}, ipred::Int)
    push!(x.coef, zero(T))
    push!(x.coef2predictor, ipred)
    coefindex = nnz(x)
    x.predictor2coef[ipred] = coefindex
end

# Add newcoef to column i of coefs
function addcoefs!(coefs::SparseMatrixCSC, newcoef::SparseCoefficients, i::Int)
    n = nnz(coefs)
    nzval = coefs.nzval
    rowval = coefs.rowval
    resize!(nzval, n+nnz(newcoef))
    resize!(rowval, n+nnz(newcoef))
    @inbounds for ipred = 1:length(newcoef.predictor2coef)
        icoef = newcoef.predictor2coef[ipred]
        if icoef != 0
            cval = newcoef.coef[icoef]
            if cval != 0
                n += 1
                nzval[n] = cval
                rowval[n] = ipred
            end
        end
    end
    resize!(nzval, n)
    resize!(rowval, n)
    coefs.colptr[i+1:end] = n+1
end

## COEFFICIENT ITERATION IN SEQUENTIAL OR RANDOM ORDER

if VERSION >= v""0.4-dev+1915""
    # Julia 0.4 has a nice interface that lets us do random coefficient
    # iteration quickly.
    immutable RandomCoefficientIterator
        rng::MersenneTwister
        rg::Base.Random.RangeGeneratorInt{Int,@compat UInt}
        coeforder::Vector{Int}
    end
    const RANDOMIZE_DEFAULT = true

    RandomCoefficientIterator() =
        RandomCoefficientIterator(MersenneTwister(1337), Base.Random.RangeGenerator(1:2), Int[])
else
    immutable RandomCoefficientIterator
        RandomCoefficientIterator() = error(""randomization not supported on Julia 0.3"")
    end
    const RANDOMIZE_DEFAULT = false
end

typealias CoefficientIterator @compat Union{UnitRange{Int},RandomCoefficientIterator}

# Iterate over coefficients in random order
function Base.start(x::RandomCoefficientIterator)
    if !isempty(x.coeforder)
        @inbounds for i = length(x.coeforder):-1:2
            j = rand(x.rng, x.rg)
            x.coeforder[i], x.coeforder[j] = x.coeforder[j], x.coeforder[i]
        end
    end
    return 1
end
Base.next(x::RandomCoefficientIterator, i) = (x.coeforder[i], i += 1)
Base.done(x::RandomCoefficientIterator, i) = i > length(x.coeforder)

# Add an additional coefficient and return a new CoefficientIterator
function addcoef(x::RandomCoefficientIterator, icoef::Int)
    push!(x.coeforder, icoef)
    RandomCoefficientIterator(x.rng, Base.Random.RangeGenerator(1:length(x.coeforder)), x.coeforder)
e",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",g-oaWR
code,"#-------------------------------------------------------------------
#* EMSO Model Library (EML) Copyright (C) 2004 - 2007 ALSOC.
#*
#* This LIBRARY is free software; you can distribute it and/or modify
#* it under the therms of the ALSOC FREE LICENSE as available at
#* http://www.enq.ufrgs.br/alsoc.
#*
#* EMSO Copyright (C) 2004 - 2007 ALSOC, original code
#* from http://www.rps.eng.br Copyright (C) 2002-2004.
#* All rights reserved.
#*
#* EMSO is distributed under the therms of the ALSOC LICENSE as
#* available at http://www.enq.ufrgs.br/alsoc.
#*
#*--------------------------------------------------------------------
#* Model of basic streams
#*----------------------------------------------------------------------
#* Author: Paula B. Staudt and Rafael de P. Soares
#* $Id$
#*---------------------------------------------------------------------
type sink
	sink()=begin
		PP=outers.PP
		NComp=outers.NComp
		new(
			DanaPlugin(Dict{Symbol,Any}(
				:Brief=>""External Physical Properties"",
				:Type=>""PP""
			)),
			DanaInteger(Dict{Symbol,Any}(
				:Brief=>""Number of chemical components"",
				:Lower=>1
			)),
			fill(molweight(Dict{Symbol,Any}(
				:Brief=>""Component Mol Weight"",
				:Protected=>true
			)),(NComp)),
			stream(Dict{Symbol,Any}(
				:Brief=>""Inlet Stream"",
				:PosX=>0,
				:PosY=>0.5308,
				:Protected=>true,
				:Symbol=>""_{in}""
			)),
			fraction(Dict{Symbol,Any}(
				:Brief=>""Vapourization fraction"",
				:Hidden=>true
			)),
			fill(fraction(Dict{Symbol,Any}(
				:Brief=>""Liquid Molar Fraction"",
				:Hidden=>true
			)),(NComp)),
			fill(fraction(Dict{Symbol,Any}(
				:Brief=>""Vapour Molar Fraction"",
				:Hidden=>true
			)),(NComp)),
			fill(fraction(Dict{Symbol,Any}(
				:Brief=>""Mass Fraction""
			)),(NComp)),
			molweight(Dict{Symbol,Any}(
				:Brief=>""Average Mol Weight""
			)),
			volume_mol(Dict{Symbol,Any}(
				:Brief=>""Molar Volume""
			)),
			dens_mass(Dict{Symbol,Any}(
				:Brief=>""Stream Mass Density""
			)),
			dens_mol(Dict{Symbol,Any}(
				:Brief=>""Stream Molar Density""
			)),
			flow_mass(Dict{Symbol,Any}(
				:Brief=>""Stream Mass Flow""
			)),
			flow_vol(Dict{Symbol,Any}(
				:Brief=>""Volumetric Flow""
			)),
			DanaReal(Dict{Symbol,Any}(
				:Brief=>""Temperature in  C"",
				:Lower=>-250,
				:Upper=>5000
			)),
			[
				:([v, x, y] = PP.FlashPH(Inlet.P, Inlet.h, Inlet.z)),
				:(Mw = sum(M*Inlet.z)),
				:(rhom * vm = 1),
				:(rhom * Mw = rho),
				:(Fw = Mw*Inlet.F),
				:(vm = (1-v)*PP.LiquidVolume(Inlet.T, Inlet.P, x) + v*PP.VapourVolume(Inlet.T,Inlet.P,y)),
				:(Fvol = Inlet.F*vm),
				:(zmass = M*Inlet.z / Mw),
				:(T_Cdeg = Inlet.T/""K"" - 273.15),
			],
			[
				""Flash Calculation"",""Average Molecular Weight"",""Molar Density"",""Mass or Molar Density"",""Flow Mass"",""Molar Volume"",""Volumetric Flow"",""Mass Fraction"",""Temperature in  C"",
			],
			[:PP,:NComp,:M,],
			[:Inlet,:v,:x,:y,:zmass,:Mw,:vm,:rho,:rhom,:Fw,:Fvol,:T_Cdeg,]
		)
	end
	PP::DanaPlugin
	NComp::DanaInteger
	M::Array{molweight}
	Inlet::stream
	v::fraction
	x::Array{fraction}
	y::Array{fraction}
	zmass::Array{fraction}
	Mw::molweight
	vm::volume_mol
	rho::dens_mass
	rhom::dens_mol
	Fw::flow_mass
	Fvol::flow_vol
	T_Cdeg::DanaReal
	equations::Array{Expr,1}
	equationNames::Array{String,1}
	parameters::Array{Symbol,1}
	variables::Array{Symbol,1}
	attributes::Dict{Symbol,Any}
end
export sink
function set(in::sink)
	M = PP.MolecularWeight()
	 
end
function setEquationFlow(in::sink)
	addEquation(1)
	addEquation(2)
	addEquation(3)
	addEquation(4)
	addEquation(5)
	addEquation(6)
	addEquation(7)
	addEquation(8)
	addEquation(9)
end
function atributes(in::sink,_::Dict{Symbol,Any})
	fields::Dict{Symbol,Any}=Dict{Symbol,Any}()
	fields[:Pallete]=true
	fields[:Icon]=""icon/Sink""
	fields[:Brief]=""Material stream sink""
	fields[:Info]=""
	This model should be used for boundary streams when additional
	information about the stream is desired.

	Some of the additional informations calculated by this models are:
	 * Mass density
	 * Mass flow
	 * Mass compostions
	 * Specific volume
	 * Vapour fraction
	 * Volumetric flow
	 * Liquid and Vapour compositions
	""
	drive!(fields,_)
	return fields
end
sink(_::Dict{Symbol,Any})=begin
	newModel=sink()
	newModel.attributes=atributes(newModel,_)
	newModel
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qf7Qp4
code,"# 24x3 array
data = [ 0.837698   0.49452   2.54352 
        -0.294096  -0.39636   0.728619
        -1.62089   -0.44919   1.20592 
        -1.06458   -0.68214  -1.12841 
         2.14341    0.7309    0.644968
        -0.284139  -1.133     1.98615 
         1.19879    2.55633  -0.526461
        -0.032277   0.11701  -0.249265
        -1.02516   -0.44665   2.50556 
        -0.515272  -0.578     0.515139
         0.259474  -1.24193   0.105051
         0.178546  -0.80547  -0.016838
        -0.607696  -0.21319  -1.40657 
         0.372248   0.93341  -0.667086
        -0.099814   0.52698  -0.253867
         0.743166  -0.79375   2.11131 
         0.109262  -1.28021  -0.415184
         0.499346  -0.95897  -2.24336 
        -0.191825  -0.59756  -0.63292 
        -1.98255   -1.5936   -0.935766
        -0.317612   1.33143  -0.46866 
         0.666652  -0.81507   0.370959
        -0.761136   0.10966  -0.997161
        -1.09972    0.28247  -0.846566 ]

wt = [ 0.4 1.0 0.6 ]

uniform_weights = normalize(ones(size(data,1)))

rwt = [ 91
        65
        57
        34
        83
        70
        74
        26
        37
        21
        62
        22
        91
        83
        89
        39
        20
        83
        36
        75
        43
        78
        83
        17 ]
w = normalize(convert(Array{Float64}, rwt))

# 50x25 array
bigdata = [
    0.231  0.059  0.957  0.172  0.779  0.093  0.029  0.643  0.104  0.468  0.315  0.209  0.582  0.044  0.309  0.902  0.528  0.974  0.117  0.468  0.319  0.706  0.648  0.368  0.447
    0.828  0.791  0.316  0.88   0.293  0.359  0.984  0.109  0.439  0.495  0.088  0.13   0.563  0.448  0.728  0.683  0.655  0.26   0.915  0.43   0.756  0.157  0.616  0.758  0.613
    0.949  0.904  0.083  0.591  0.185  0.942  0.215  0.504  0.745  0.219  0.899  0.61   0.335  0.85   0.521  0.266  0.933  0.124  0.401  0.558  0.737  0.011  0.384  0.785  0.031
    0.203  0.038  0.285  0.13   0.174  0.344  0.646  0.065  0.384  0.84   0.844  0.235  0.959  0.648  0.537  0.514  0.423  0.19   0.855  0.72   0.195  0.009  0.775  0.565  0.177
    0.91   0.336  0.797  0.165  0.498  0.488  0.649  0.571  0.31   0.189  0.189  0.519  0.949  0.993  0.372  0.202  0.231  0.392  0.631  0.53   0.75   0.561  0.36   0.698  0.857
    0.525  0.846  0.231  0.301  0.38   0.469  0.934  0.422  0.732  0.166  0.528  0.176  0.402  0.654  0.513  0.164  0.27   0.123  0.187  0.937  0.188  0.93   0.828  0.521  0.86 
    0.552  0.597  0.343  0.952  0.993  0.749  0.086  0.549  0.295  0.344  0.723  0.431  0.33   0.14   0.091  0.336  0.419  0.262  0.071  0.368  0.172  0.305  0.989  0.425  0.649
    0.4    0.265  0.412  0.844  0.923  0.83   0.99   0.815  0.942  0.028  0.655  0.593  0.981  0.36   0.753  0.863  0.782  0.558  0.352  0.818  0.438  0.989  0.609  0.926  0.696
    0.961  0.658  0.202  0.362  0.153  0.443  0.48   0.297  0.075  0.381  0.923  0.496  0.068  0.752  0.12   0.802  0.279  0.979  0.61   0.408  0.076  0.709  0.816  0.97   0.872
    0.915  0.179  0.402  0.696  0.003  0.332  0.33   0.91   0.318  0.573  0.635  0.291  0.8    0.515  0.305  0.531  0.607  0.133  0.041  0.725  0.911  0.413  0.256  0.463  0.506
    0.643  0.276  0.788  0.951  0.208  0.804  0.263  0.426  0.575  0.851  0.347  0.902  0.969  0.775  0.628  0.054  0.382  0.478  0.25   0.532  0.432  0.578  0.11   0.203  0.479
    0.479  0.387  0.059  0.287  0.065  0.295  0.527  0.003  0.605  0.187  0.794  0.18   0.396  0.228  0.363  0.099  0.145  0.703  0.894  0.603  0.141  0.099  0.172  0.89   0.546
    0.18   0.921  0.625  0.656  0.865  0.296  0.124  0.349  0.551  0.193  0.494  0.325  0.013  0.14   0.514  0.251  0.115  0.09   0.307  0.015  0.315  0.373  0.71   0.193  0.85 
    0.39   0.978  0.906  0.319  0.873  0.368  0.919  0.004  0.045  0.74   0.806  0.453  0.76   0.219  0.869  0.164  0.809  0.472  0.975  0.201  0.454  0.954  0.429  0.569  0.913
    0.094  0.622  0.213  0.197  0.817  0.941  0.056  0.605  0.122  0.435  0.636  0.823  0.038  0.388  0.592  0.27   0.418  0.862  0.964  0.803  0.466  0.49   0.592  0.831  0.905
    0.886  0.169  0.444  0.011  0.663  0.293  0.613  0.511  0.694  0.286  0.401  0.584  0.194  0.882  0.541  0.228  0.053  0.724  0.039  0.82   0.537  0.955  0.467  0.31   0.867
    0.735  0.282  0.53   0.397  0.961  0.297  0.065  0.201  0.083  0.932  0.09   0.363  0.53   0.33   0.967  0.6    0.794  0.36   0.065  0.297  0.619  0.954  0.553  0.313  0.543
    0.695  0.247  0.7    0.268  0.211  0.198  0.155  0.567  0.876  0.997  0.103  0.228  0.304  0.698  0.898  0.771  0.83   0.663  0.541  0.94   0.252  0.88   0.049  0.247  0.3  
    0.917  0.214  0.162  0.285  0.929  0.178  0.501  0.321  0.606  0.621  0.238  0.745  0.494  0.774  0.928  0.66   0.193  0.917  0.213  0.497  0.061  0.204  0.326  0.371  0.751
    0.733  0.791  0.396  0.067  0.905  0.481  0.246  0.542  0.633  0.352  0.133  0.227  0.1    0.214  0.115  0.474  0.307  0.53   0.132  0.684  0.168  0.813  0.476  0.865  0.988
    0.771  0.507  0.799  0.744  0.971  0.706  0.95   0.714  0.663  0.708  0.025  0.568  0.683  0.689  0.755  0.746  0.759  0.404  0.564  0.201  0.59   0.59   0.289  0.593  0.2  
    0.796  0.09   0.12",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9HBt7h
code,"
include(""load_dataset.jl"")

function set_default(dictionary, key, default)
  dict = dictionary
  if !haskey(dict, key)
    dict[key] = default
  end
  return dict
end

function lt(first, second)
  return first[2] < second[2]
end

function compute_deviations(rating_dict)
  deviations = Dict()
  frequencies = Dict()

  for (user, ratings) in rating_dict
    for (item, rating) in ratings
      frequencies = set_default(frequencies, item, Dict())
      deviations = set_default(deviations, item, Dict())
      for (item2, rating2) in ratings
        if item != item2
          frequencies[item] = set_default(frequencies[item], item2, 0)
          deviations[item] = set_default(deviations[item], item2, 0.0)
          frequencies[item][item2] += 1
          deviations[item][item2] += float(rating) - float(rating2)
        end
      end
    end
  end

  for (item, ratings) in deviations
    for (item2, rating) in ratings
      ratings[item2] /= frequencies[item][item2]
    end
  end

  return frequencies, deviations
end

function slope_one_recommend(user_ratings, frequencies, deviations)
  recommendations = Dict()
  recs = (ASCIIString, Float64)[]
  freqs = Dict()

  for (user_item, user_rating) in user_ratings
    for (other_item, other_ratings) in deviations
      if !haskey(user_ratings, other_item) && haskey(deviations[other_item], user_item)
        freq = frequencies[other_item][user_item]
        set_default(recommendations, other_item, 0.0)
        set_default(freqs, other_item, 0)
        recommendations[other_item] += (other_ratings[user_item] + float(user_rating)) * freq
        freqs[other_item] += freq
      end
    end
  end

  for (key, value) in recommendations
    push!(recs, (key, value / freqs[key]))
  end

  return sort(recs, lt=lt, rev=true)
end

function transform_recommendations(recommendation_list, item_dict)
  return [(item_dict[item_id], rating) for (item_id, rating) in recommendation_list]
end

function exec(user)
  println(""Loading ratings..."")
  tic()
  ratings = load_ratings(""/Users/Duelist/Desktop/datasets/ml-100k/u.data"", 1, 2, 3, '\t')
  toc()
  println(""Loading users..."")
  tic()
  users = load_users(""/Users/Duelist/Desktop/datasets/ml-100k/u.user"", 1, 5, '|')
  toc()
  println(""Loading items..."")
  tic()
  items = load_items(""/Users/Duelist/Desktop/datasets/ml-100k/u.item"", 1, 2, '|')
  toc()

  println(""Computing deviations..."")
  tic()
  frequencies, deviations = compute_deviations(ratings)
  toc()

  @printf ""Gathering Slope One recommendations for %s...\n"" user
  tic()
  recommendations = transform_recommendations(slope_one_recommend(ratings[user], frequencies, deviations))
  toc()

  @printf ""\nRecommendations:\n%s\n"" recommendations
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yQDsVz
code,"module FileFind
	include(""find.jl"")
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZZRO6f
code,"using Conda
using Compat
using PyCall

backend = ""theano""

try
    keras = pyimport(""keras"")
    if VersionNumber(keras[:__version__]) >= v""2.0.2""
        Compat.@info(""Using Keras $(keras[:__version__]) -> $(keras[:__path__])"")
        global backend = keras[:backend][:backend]()
    else
        Compat.@error(""Invalid Keras version ($(keras[:__version__]))"")
    end
catch _
    Compat.@info(""No valid (>=2.0.2) install of keras found."")
    Compat.@info(""Installing Keras via Conda.jl..."")
    Conda.add_channel(""conda-forge"")
    Conda.add(""keras==2.0.2"")

    if Compat.Sys.iswindows()
        Compat.@warn(""Tensorflow only supports python 3.5 on windows. Using the included theano backend."")
    else
        Compat.@info(""Installing Tensorflow (1.0.0) via Conda.jl"")
        Conda.add(""tensorflow==1.0.0"")
        global backend = ""tensorflow""
    end
end

keras_path = joinpath(homedir(), "".keras"")
config_path = joinpath(keras_path, ""keras.json"")
default_settings = """"""
{
    ""image_dim_ordering"": ""tf"",
    ""epsilon"": 1e-07,
    ""floatx"": ""float32"",
    ""backend"": ""$backend""
}
""""""

if !ispath(config_path)
    if !ispath(keras_path)
        mkdir(keras_path)
    end

    Compat.@info(""Writing default config to $config_path"")

    open(config_path, ""w+"") do fstream
        write(fstream, default_settings)
    end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wMI-Gl
code,"using Gadfly, DataFrames

@doc """"""
  PLOTDATA Plots the data points X and y into a new figure
    PLOTDATA(x,y) returns the layer of Gadfly, which plots the data points with blue color
    for the positive examples and yellow for the negative examples. X is assumed to be a Mx2 matrix.
"""""" ->
function plotData(X, y)

  # ====================== YOUR CODE HERE ======================
  # Instructions: Plot the positive and negative examples on a
  #               2D plot, using the option 'k+' for the positive
  #               examples and 'ko' for the negative examples.
  #
  # =========================================================================
  ls = []
  l1 = layer(x=X[:, 1], y=X[:, 2], Geom.point)
  push!(ls, l1)
  return ls
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gtm7-t
code,"
function numericRoot(residFnc::Function, measurement, parameters, x0::Vector{Float64})
	return (nlsolve(   (res, X) -> residFnc(res, measurement, parameters, X), x0 )).zero
end


function shuffleXAltD(X::Vector{Float64}, Alt::Vector{Float64}, d::Int, p::Vector{Int})
		# n = length(X)
    Y = deepcopy(Alt)
    for i in 1:d
			Y[p[i]] = X[i]
		end
    return Y
end

# residual function must have the form residFnc!(res, x)
# function numericRootGenericRandomizedFncOld(
#       residFnc!::Function,
#       zDim::Int,
#       xDim::Int,
#       x0::Vector{Float64};
#       perturb::Float64=1e-5  )
#
# 	# xDim = length(x0)
# 	if zDim < xDim
# 		p = collect(1:xDim);
# 		shuffle!(p);
# 		# p1 = p.==1; p2 = p.==2; p3 = p.==3
#     # TODO -- refactor to use functors instead
# 		r = nlsolve(    (res, x) -> residFnc!(shuffleXAltD(x, x0, zDim, p), res ),
#                     x0[p[1:zDim]] + perturb*randn(zDim)
#                )
#
#     return shuffleXAltD(r.zero, x0, zDim, p );
# 	else
#     # return (nlsolve(  (res, x) -> residFnc!(res, x),
#     #                   x0      )).zero
#     # @show x0
#     return ( nlsolve(  residFnc!, x0 + perturb*randn(zDim) ) ).zero
# 	end
# end

#-------------------------------------------------------------------------------
# first in place attempt for generic wrap and root finding below

function (p::GenericWrapParam)(res, x)
  # approximates by not considering cross indices among parameters
  # @show length(p.params), p.varidx, p.particleidx, size(x), size(res), size(p.measurement)
  p.params[p.varidx][:, p.particleidx] = x
  p.usrfnc!(res, p.particleidx, p.measurement, p.params...)
end

# Shuffle incoming X into random permutation in fr.Y
# shuffled fr.Y will be placed back into fr.X[:,fr.gwp.particleidx] upon fr.gwp.usrfnc(x, res)
function shuffleXAltD!(fr::FastRootGenericWrapParam, X::Vector{Float64})
  fr.Y[1:fr.xDim] = fr.X[1:fr.xDim,fr.gwp.particleidx]
  # copy!(fr.Y, fr.X[:,fr.gwp.particleidx])
  for i in 1:fr.zDim
    fr.Y[fr.p[i]] = X[i]
  end
  nothing
end
function (fr::FastRootGenericWrapParam)( res::Vector{Float64}, x::Vector{Float64} )
  shuffleXAltD!(fr, x)
  fr.gwp( res, fr.Y ) #function (p::GenericWrapParam)(res, x)
end

## TODO desperately needs cleaning up and refactoring
# Solve free variable x by root finding residual function fgr.usrfnc(x, res)
# randomly shuffle x dimensions if underconstrained by measurement z dimensions
# small random perturbation used to prevent trivial solver cases, div by 0 etc.
# result stored in fgr.Y
# fr.X must be set to memory ref the param[varidx] being solved, at creation of fr
function numericRootGenericRandomizedFnc!(
      fr::FastRootGenericWrapParam{T};
      perturb::Float64=1e-10,
      testshuffle::Bool=false ) where {T}
  #
  # info(""numericRootGenericRandomizedFnc! FastRootGenericWrapParam{T}"")
  if fr.zDim < fr.xDim && !fr.gwp.partial || testshuffle
    shuffle!(fr.p)
    for i in 1:fr.xDim
      fr.perturb[1:fr.zDim] = perturb*randn(fr.zDim)
      fr.X[fr.p[1:fr.zDim], fr.gwp.particleidx] += fr.perturb
      r = nlsolve(  fr,
                    fr.X[fr.p[1:fr.zDim], fr.gwp.particleidx] # this is x0
                 )
      if r.f_converged
        shuffleXAltD!( fr, r.zero )
        break;
      else
        # TODO -- report on this bottleneck, useful for optimization of code
        # @show i, fr.p, fr.xDim, fr.zDim
        temp = fr.p[end]
        fr.p[2:end] = fr.p[1:(end-1)]
        fr.p[1] = temp
        if i == fr.xDim
          error(""numericRootGenericRandomizedFnc could not converge, i=$(i), fr.gwp.usrfnc!=$(typeof(fr.gwp.usrfnc!))"")
        end
      end
    end
    #shuffleXAltD!( fr, r.zero ) # moved up
  elseif fr.zDim >= fr.xDim && !fr.gwp.partial
    fr.perturb[1:fr.xDim] = perturb*randn(fr.xDim)
    fr.X[1:fr.xDim, fr.gwp.particleidx] += fr.perturb[1:fr.xDim] # moved up
    r = nlsolve( fr.gwp, fr.X[1:fr.xDim,fr.gwp.particleidx] )
    if sum(isnan.(( r ).zero)) == 0
      fr.Y[1:fr.xDim] = ( r ).zero
    else
      warn(""got NaN, fr.gwp.particleidx = $(fr.gwp.particleidx), r"")
      @show fr.gwp.usrfnc!
      for thatlen in 1:length(fr.gwp.params)
        @show thatlen, fr.gwp.params[thatlen][:, fr.gwp.particleidx]
      end
    end
  elseif fr.gwp.partial
    # improve memory management in this function
    fr.p[1:length(fr.gwp.usrfnc!.partial)] = Int[fr.gwp.usrfnc!.partial...] # TODO -- move this line up and out of inner loop
    r = nlsolve(  fr,
                  fr.X[fr.p[1:fr.zDim], fr.gwp.particleidx] # this is x0
               )
    shuffleXAltD!( fr, r.zero )
  else
    error(""Unresolved numeric solve case"")
	end
  fr.X[:,fr.gwp.particleidx] = fr.Y
  nothing
end


#-------------------------------------------------------------------------------


# this will likely expand with more internal bells and whistles
# to perform in place memory operations for array values in

# see FastRootGenericWrapParam{T}

# TODO -- part of speed and flexibility refactoring exercise
type FastGenericRoot{T} <: Function
  p::Vector{Int}
  perturb::Vector{Float64}
  X::Vector{Float64}
  Y::Vector{Float64}
  xDim::Int
  zDim::Int
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E5qF6U
code,"################################################################################
#
#  Lattice database
#
################################################################################

export number_of_lattices, lattice_name, lattice,
       lattice_automorphism_group_order, lattice_database

struct LatticeDB
  path::String
  max_rank::Int
  db::Vector{Vector{NamedTuple{(:name, :rank, :deg, :amb, :basis_mat, :min, :aut, :kissing),
                               Tuple{String, Int, Int, Vector{Rational{BigInt}}, Vector{Rational{BigInt}}, BigInt, BigInt, BigInt}}}}

  function LatticeDB(path::String)
    db = Meta.eval(Meta.parse(Base.read(path, String)))
    max_rank = length(db)
    return new(path, max_rank, db)
  end
end

# TODO: Write a parser for the data

function show(io::IO, L::LatticeDB)
  print(io, ""Nebe-Sloan database of lattices (rank limit = "", L.max_rank, "")"")
end

const default_lattice_db = Ref(joinpath(pkgdir, ""data/lattices""))

################################################################################
#
#  For creating a lattice database
#
################################################################################

function lattice_database()
  if !isfile(joinpath(pkgdir, ""data/lattices""))
    download_data(data = ""quadratic_lattices"")
  end
  return LatticeDB(default_lattice_db[])
end

function lattice_database(path::String)
  return LatticeDB(path)
end

################################################################################
#
#  Conversion from linear indicies
#
################################################################################

function from_linear_index(L::LatticeDB, i::Int)
  k = 1
  while i > length(L.db[k])
    i = i - length(L.db[k])
    k += 1
  end
  return (k, i)
end

################################################################################
#
#  Out of bounds error functions
#
################################################################################

@inline function _check_rank_range(L, r)
  r < 0 || r > L.max_rank &&
        throw(error(""Rank ($(r)) must be between 1 and $(L.max_rank)""))
end

@inline function _check_range(L, r, i)
  r < 0 || r > L.max_rank &&
          throw(error(""Rank ($(r)) must be between 1 and $(L.max_rank)""))
  j = number_of_lattices(L, r)
  i < 0 || i > j && throw(error(""Index ($(i)) must be between 1 and $(j)""))
end

@inline function _check_range(L, i)
  j = number_of_lattices(L)
  i < 0 || i > j && throw(error(""Index ($(i)) must be between 1 and $(j)""))
end

################################################################################
#
#  Access functions
#
################################################################################

function number_of_lattices(L::LatticeDB, r::Int)
  _check_rank_range(L, r)
  return length(L.db[r])
end

function number_of_lattices(L::LatticeDB)
  return sum(length.(L.db))
end

function lattice_name(L::LatticeDB, r::Int, i::Int)
  _check_range(L, r, i)
  return L.db[r][i].name
end

function lattice_name(L::LatticeDB, i::Int)
  _check_range(L, i)
  return lattice_name(L, from_linear_index(L, i)...)
end

function lattice_automorphism_group_order(L::LatticeDB, r::Int, i::Int)
  _check_range(L, r, i)
  return L.db[r][i].aut
end

function lattice_automorphism_group_order(L::LatticeDB, i::Int)
  _check_range(L, i)
  return lattice_automorphism_group_order(L, from_linear_index(L, i)...)
end

function lattice(L::LatticeDB, r::Int, i::Int)
  _check_range(L, r, i)
  d = L.db[r][i].deg
  A = matrix(FlintQQ, d, d, L.db[r][i].amb)
  B = matrix(FlintQQ, r, d, L.db[r][i].basis_mat)
  return Zlattice(B, gram = A)
end

function lattice(L::LatticeDB, i::Int)
  _check_range(L, i)
  return lattice(L, from_linear_index(L, i)...)
end

################################################################################
#
#  Quadratic lattices DB
#
################################################################################

const default_quad_lattice_db = Ref(joinpath(pkgdir, ""data/quadratic_lattices""))

struct QuadLatDB
  path::String
  #db::Vector{Tuple{Vector{BigInt}, Vector{Vector{Rational{BigInt}}}, Vector{Vector{Rational{BigInt}}}, Int}}
  metadata
  head::Int
  length::Int

  function QuadLatDB(path::String)
    metadata = Dict()
    f = open(path)
    head = 0
    while true
      line = readline(f)
      if line[1] == '#'
        head += 1
        if !(':' in line)
          continue
        end
        i = 2
        while line[i] != ':'
          i += 1
        end
        key = strip(line[2:i-1])
        val = strip(line[i+1:end])
        metadata[key] = val
      else
        break
      end
    end
    seekstart(f)
    length = countlines(f)
    close(f)
    return new(path, metadata, head, length - head)
  end
end

function quadratic_lattice_database()
  if !isfile(joinpath(pkgdir, ""data/quadratic_lattices""))
    download_data(data = ""quadratic_lattices"")
  end
  return QuadLatDB(default_quad_lattice_db[])
end

function quadratic_lattice_database(path::String)
  return QuadLatDB(path)
end

Base.length(D::QuadLatDB) = D.length

class_number(D::QuadLatDB, i::Int) = _lattice_data(D, i)[4]

fun",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xGCxh1
code,"using SparseArrays

function sparserecttest(lib::Polyhedra.Library)
    # Sparse H-representation, cartesian product
    # -1 ≤ x_1 ≤ 1
    # 2 ≤ x_2 ≤ 3
    h1 = HalfSpace(sparsevec([1], [ 1]),  1) ∩
         HalfSpace(sparsevec([1], [-1]),  1)
    h2 = HalfSpace(sparsevec([1], [ 1]),  3) ∩
         HalfSpace(sparsevec([1], [-1]), -2)
    h = h1 * h2
    v = convexhull([-1, 2],
                   [ 1, 2],
                   [-1, 3],
                   [ 1, 3])
    p = polyhedron(h, lib)
    @test !vrepiscomputed(p)
    inequality_fulltest(p, h)
    generator_fulltest(p, v)
    p1 = polyhedron(h1, lib)
    @test !vrepiscomputed(p1)
    p2 = polyhedron(h2, lib)
    @test !vrepiscomputed(p2)
    q = p1 * p2
    @test !vrepiscomputed(q)
    inequality_fulltest(q, h)
    generator_fulltest(q, v)
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LiTLlT
code,"using Gadfly

@doc """"""
  PLOTDATA(x,y) plots the data points and gives the figure axes labels of
    population and profit.
"""""" ->
function plotData(x, y)
  # ====================== YOUR CODE HERE ======================

  l1 = layer(x=x, y=y, Geom.point)
  # ============================================================
  return l1
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dU7w9y
code,"
""""""
A product map is diagonal and acts on each of the components of x separately:
`y = f(x)` becomes `y_i = f_i(x_i)`.
""""""
abstract type ProductMap{T} <: CompositeLazyMap{T} end

components(m::ProductMap) = m.maps

VcatMapElement = Union{Map{<:SVector},Map{<:Number}}

ProductMap(maps::Tuple) = ProductMap(maps...)
ProductMap(maps::SVector) = ProductMap(maps...)
ProductMap(maps...) = TupleProductMap(maps...)
ProductMap(maps::VcatMapElement...) = VcatMap(maps...)
ProductMap(maps::AbstractVector) = VectorProductMap(maps)

ProductMap{T}(maps...) where {T} = _TypedProductMap(T, maps...)
_TypedProductMap(::Type{T}, maps...) where {T<:Tuple} = TupleProductMap(maps...)
_TypedProductMap(::Type{SVector{N,T}}, maps...) where {N,T} = VcatMap{N,T}(maps...)
_TypedProductMap(::Type{T}, maps...) where {T<:AbstractVector} = VectorProductMap{T}(maps...)

compatibleproductdims(d1::ProductMap, d2::ProductMap) =
	mapsize(d1) == mapsize(d2) &&
		all(map(==, map(mapsize, components(d1)), map(mapsize, components(d2))))

isconstant(m::ProductMap) = mapreduce(isconstant, &, components(m))
islinear(m::ProductMap) = mapreduce(islinear, &, components(m))
isaffine(m::ProductMap) = mapreduce(isaffine, &, components(m))

matrix(m::ProductMap) = toexternalmatrix(m, map(matrix, components(m)))
vector(m::ProductMap) = toexternalpoint(m, map(vector, components(m)))
constant(m::ProductMap) = toexternalpoint(m, map(constant, components(m)))

jacobian(m::ProductMap, x) =
	toexternalmatrix(m, map(jacobian, components(m), tointernalpoint(m, x)))
function jacobian(m::ProductMap{T}) where {T}
	if isaffine(m)
		ConstantMap{T}(matrix(m))
	else
		ProductMap(map(jacobian, components(m)))
	end
end
# function jacdet(m::ProductMap, x)

similarmap(m::ProductMap, ::Type{T}) where {T} = ProductMap{T}(components(m))

tointernalpoint(m::ProductMap, x) = x
toexternalpoint(m::ProductMap, y) = y

applymap(m::ProductMap, x) =
	toexternalpoint(m, map(applymap, components(m), tointernalpoint(m, x)))

productmap(map1, map2) = productmap1(map1, map2)
productmap1(map1, map2) = productmap2(map1, map2)
productmap2(map1, map2) = ProductMap(map1, map2)
productmap(map1::ProductMap, map2::ProductMap) =
	ProductMap(components(map1)..., components(map2)...)
productmap1(map1::ProductMap, map2) = ProductMap(components(map1)..., map2)
productmap2(map1, map2::ProductMap) = ProductMap(map1, components(map2)...)

for op in (:inverse, :leftinverse, :rightinverse)
    @eval $op(m::ProductMap) = ProductMap(map($op, components(m)))
	@eval $op(m::ProductMap, x) = toexternalpoint(m, map($op, components(m), tointernalpoint(m, x)))
end

function composedmap(m1::ProductMap, m2::ProductMap)
	if compatibleproductdims(m1, m2)
		ProductMap(map(composedmap, components(m1), components(m2)))
	else
		ComposedMap(m1,m2)
	end
end

mapsize(m::ProductMap) = (sum(t->mapsize(t,1), components(m)), sum(t->mapsize(t,2), components(m)))

==(m1::ProductMap, m2::ProductMap) = all(map(isequal, components(m1), components(m2)))
hash(m::ProductMap, h::UInt) = hashrec(""ProductMap"", collect(components(m)), h)

Display.combinationsymbol(m::ProductMap) = Display.Symbol('⊗')
Display.displaystencil(m::ProductMap) = composite_displaystencil(m)
show(io::IO, mime::MIME""text/plain"", m::ProductMap) = composite_show(io, mime, m)
show(io::IO, m::ProductMap) = composite_show_compact(io, m)

""""""
A `VcatMap` is a product map with domain and codomain vectors
concatenated (`vcat`) into a single vector.
""""""
struct VcatMap{N,T,DIM,MAPS} <: ProductMap{SVector{N,T}}
    maps    ::  MAPS
end

VcatMap(maps::Union{Tuple,Vector}) = VcatMap(maps...)
function VcatMap(maps...)
	T = numtype(maps...)
	M = sum(t->mapsize(t,1), maps)
	N = sum(t->mapsize(t,2), maps)
	# M,N = reduce((x,y) -> (x[1]+y[1],x[2]+y[2]), map(mapsize,maps))
	@assert M==N
	VcatMap{N,T}(maps...)
end

mapdim(map) = mapsize(map,2)

VcatMap{N,T}(maps::Union{Tuple,Vector}) where {N,T} = VcatMap{N,T}(maps...)
function VcatMap{N,T}(maps...) where {N,T}
	DIM = map(mapdim,maps)
	VcatMap{N,T,DIM}(convert_numtype.(maps, Ref(T))...)
end

VcatMap{N,T,DIM}(maps...) where {N,T,DIM} = VcatMap{N,T,DIM,typeof(maps)}(maps)

mapsize(m::VcatMap{N}) where {N} = (N,N)

tointernalpoint(m::VcatMap{N,T,DIM}, x) where {N,T,DIM} =
	convert_fromcartesian(x, Val{DIM}())
toexternalpoint(m::VcatMap{N,T,DIM}, y) where {N,T,DIM} =
	convert_tocartesian(y, Val{DIM}())

size_as_matrix(A::AbstractArray) = size(A)
size_as_matrix(A::Number) = (1,1)

# The Jacobian is block-diagonal
function toexternalmatrix(m::VcatMap{N,T}, matrices) where {N,T}
	A = zeros(T, N, N)
	l = 0
	for el in matrices
		m,n = size_as_matrix(el)
		@assert m==n
		A[l+1:l+m,l+1:l+n] .= el
		l += n
	end
	SMatrix{N,N}(A)
end


""""""
A `VectorProductMap` is a product map where all components are univariate maps,
with inputs and outputs collected into a `Vector`.
""""""
struct VectorProductMap{T<:AbstractVector,M} <: ProductMap{T}
    maps    ::  Vector{M}
end

VectorProductMap(maps::AbstractMap...) = VectorProductMap(maps)
VectorProductMap(maps) = VectorProductMap(collect(maps))
function VectorProductMap(maps::Vector)
	T = mapreduce(numtype, promote_type, maps)
	VectorP",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8OMB-B
code,"export NewtonPolygon, Line, Polygon

###############################################################################
#
#  Types
#
###############################################################################

mutable struct Line
  points :: Tuple{Tuple{Int, Int}, Tuple{Int, Int}}
  slope :: fmpq

  function Line(points::Tuple{Tuple{Int, Int}, Tuple{Int, Int}})
    line = new()
    line.points = points
    line.slope = slope(points[1],points[2])
    return line
  end

  function Line(a::Tuple{Int, Int}, b::Tuple{Int, Int})
    return Line((a,b))
  end
end

mutable struct Polygon
  lines :: Vector{Line}

  function Polygon(lines::Vector{Line}; sorted = false)
    polygon = new()
    if sorted
      polygon.lines = lines
    else
      for j = 1:length(lines)-1
        iMin = j
        for i = j+1:length(lines)
          if (lines[i]).points[1][1] < lines[iMin].points[1][1]
            iMin = i
          end
        end
        if iMin != j
          lines[j],lines[iMin] = lines[iMin],lines[j]
        end
      end
      polygon.lines = lines
    end

    return polygon
  end
end


mutable struct NewtonPolygon{T}
  P::Polygon
  f::T
  phi::T
  p::fmpz
  development::Vector{T}
end

lines(N::NewtonPolygon) = N.P.lines

function isone_sided(N::NewtonPolygon)
  return isone(length(lines(N)))
end

###############################################################################
#
#  Invariants of lines an polygons
#
###############################################################################

function length(L::Line)
  return L.points[2][1]-L.points[1][1]
end

function heigth(L::Line)
  return L.points[2][1]-L.points[1][1]
end

function slope(L::Line)
  return slope(L.points[1], L.points[2])
end

function slope(a::Tuple{Int, Int}, b::Tuple{Int, Int})
  return fmpq(b[2]-a[2], b[1]-a[1])
end

function degree(L::Line)
  return divexact(L.points[2][1]-L.points[1][1], denominator(L.slope))
end

function Base.:(==)(L::Line, L2::Line)
  return L.points == L2.points
end

function Base.:(==)(P::Polygon, P2::Polygon)
  return P.lines == P2.lines
end

###############################################################################
#
#  Lower convex hull of a set of points
#
###############################################################################

function sortpoints(x::Vector{Tuple{Int, Int}})
  for j = 1:length(x)-1
    iMin = j
    for i = j+1:length(x)
      if x[i][1] < x[iMin][1]
        iMin = i
      end
    end
    if iMin != j
      x[j],x[iMin] = x[iMin],x[j]
    end
  end
  return x
end

function lower_convex_hull_old(points::Vector{Tuple{Int, Int}})

  points = sortpoints(points)

  # Take care of trivial case with 1 or 2 elements

  if length(points) == 1
    error(""Lower convex hull of 1 point is not defined"")
  elseif length(points) == 2
    return Polygon([Line((points[1], points[2]))])
  end

  i = 1
  while points[i][2] !=0
    i += 1
  end

  pointsconvexhull = Tuple{Int, Int}[points[i]]
  while pointsconvexhull[end][1] != 0
    best_slope = slope(pointsconvexhull[end], points[1])
    i = 2
    new_point = points[1]
    while points[i][1] < pointsconvexhull[end][1]
      candidate = slope(pointsconvexhull[end], points[i])
      if candidate > best_slope
        new_point = points[i]
        best_slope = candidate
      end
      i += 1
    end
    push!(pointsconvexhull, new_point)
  end

  n=length(pointsconvexhull)
  l = Vector{Line}(undef, n-1)
  for i=0:n-2
    l[i + 1] = Line(pointsconvexhull[n-i], pointsconvexhull[n-i-1])
  end
  return Polygon(l, sorted = true)
end


function lower_convex_hull(points::Vector{Tuple{Int, Int}})
  orig_points = copy(points)

  points = sortpoints(points)

  # Take care of trivial case with 1 or 2 elements
  if length(points) == 1
    error(""Lower convex hull of 1 point is not defined"")
  elseif length(points) == 2
    P = Polygon([Line((points[1], points[2]))])
  else
    pointsconvexhull = Tuple{Int, Int}[points[1]]
    i = 2
    while i<= length(points)
      sl = [slope(pointsconvexhull[end], x) for x = points[i:end]]
      p = findlast(x->x == minimum(sl), sl)
      push!(pointsconvexhull, points[p+i-1])
      i += p
    end
    pointsconvexhull = reverse(pointsconvexhull)

    n=length(pointsconvexhull)
    l = Vector{Line}(undef, n-1)
    for i=0:n-2
      l[i + 1] = Line(pointsconvexhull[n-i], pointsconvexhull[n-i-1])
    end
    P = Polygon(l, sorted = true)
  end
  return P
end

###############################################################################
#
#  Computation of the phi-development
#
###############################################################################

@doc Markdown.doc""""""
    phi_development(f::PolyElem, phi::PolyElem) -> Vector{PolyElem}

Computes an array of polynomials $[a_0, \ldots, a_s]$ such that $\sum a_i \phi^i = f$.
""""""
function phi_development(f::T, phi::T) where T <: PolyElem
  dev = Vector{T}()
  g = f
  while degree(g) >= degree(phi)
    g, r = divrem(g, phi)
    push!(dev, r)
  end
  push!(dev, g)
  return dev
end

###############################################################################
#
#  Construction of Newton polygon
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PHM67y
code,"#| rep.test.data -- checks for rep.data module

   $Id$

   Copyright (C) 2001 John Harper <jsh@users.sourceforge.net>

   This file is part of librep.

   librep is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   librep is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with librep; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
|#

(define-structure rep.data.self-tests ()

    (open rep
	  rep.data.records
	  rep.test.framework)

;;; equality function tests

  ;; adapted from guile's test.scm
  (define (equality-self-test)
    (define (gen-counter)
      (let ((n 0))
	(lambda () (setq n (1+ n)) n)))

    (test (eql 'a 'a))
    (test (not (eql 'a 'b)))
    (test (eql 2 2))
    (test (eql '() '()))
    (test (eql '10000 '10000))
    (test (not (eql (cons 1 2) (cons 1 2))))
    (test (not (eql (lambda () 1) (lambda () 2))))

    (let ((p (lambda (x) x)))
      (test (eql p p)))
    (let ((g (gen-counter)))
      (test (eql g g)))
    (test (not (eql (gen-counter) (gen-counter))))
    (letrec ((f (lambda () (if (eql f g) 'f 'both)))
	     (g (lambda () (if (eql f g) 'g 'both))))
      (test (not (eql f g))))

    (test (eq 'a 'a))
    (test (not (eq (list 'a) (list 'a))))
    (test (eq '() '()))
    (test (eq car car))
    (let ((x '(a)))
      (test (eq x x)))
    (let ((x '()))
      (test (eq x x)))
    (let ((x (lambda (x) x)))
      (test (eq x x)))

    (test (equal 'a 'a))
    (test (equal '(a) '(a)))
    (test (equal '(a (b) c) '(a (b) c)))
    (test (equal ""abc"" ""abc""))
    (test (equal 2 2))
    (test (equal (make-vector 5 'a) (make-vector 5 'a))))

;;; cons and list tests

  ;; adapted from guile's test.scm
  (define (cons-self-test)
    (test (consp '(a . b)))
    (test (consp '(a . 1)))
    (test (consp '(a b c)))
    (test (not (consp '())))
    (test (not (consp '#(a b))))

    (test (equal '(a) (cons 'a '())))
    (test (equal '((a) b c d) (cons '(a) '(b c d))))
    (test (equal '(""a"" b c) (cons ""a"" '(b c))))
    (test (equal '(a . 3) (cons 'a 3)))
    (test (equal '((a b) . c) (cons '(a b) 'c)))

    (test (equal 'a (car '(a b c))))
    (test (equal '(a) (car '((a) b c d))))
    (test (equal 1 (car '(1 . 2))))

    (test (equal '(b c d) (cdr '((a) b c d))))
    (test (equal 2 (cdr '(1 . 2))))

    (test (equal '(a 7 c) (list 'a (+ 3 4) 'c)))
    (test (equal '() (list)))

    (test (= 3 (length '(a b c))))
    (test (= 3 (length '(a (b) (c d e)))))
    (test (= 0 (length '())))

    (test (equal '(x y) (append '(x) '(y))))
    (test (equal '(a b c d) (append '(a) '(b c d))))
    (test (equal '(a (b) (c)) (append '(a (b)) '((c)))))
    (test (equal '() (append)))
    (test (equal '(a b c . d) (append '(a b) '(c . d))))
    (test (equal 'a (append '() 'a)))

    (test (equal '(c b a) (reverse '(a b c))))
    (test (equal '((e (f)) d (b c) a) (reverse '(a (b c) d (e (f))))))

    (test (equal 'c (nth 2 '(a b c d))))

    (test (equal '(a b c) (memq 'a '(a b c))))
    (test (equal '(b c) (memq 'b '(a b c))))
    (test (null (memq 'a '(b c d))))
    (test (null (memq (list 'a) '(b (a) c))))
    (test (equal '((a) c) (member (list 'a) '(b (a) c))))
    (test (equal '(101 102) (memql 101 '(100 101 102))))

    (let ((e '((a 1) (b 2) (c 3))))
      (test (equal '(a 1) (assq 'a e)))
      (test (equal '(b 2) (assq 'b e)))
      (test (null (assq 'd e))))
    (test (null (assq (list 'a) '(((a)) ((b)) ((c))))))
    (test (equal '((a)) (assoc (list 'a) '(((a)) ((b)) ((c))))))
    (test (equal '(5 7) (assq 5 '((2 3) (5 7) (11 13))))))

;;; tests for rep.data.records

  (define-record-type :pare
    (kons x y)
    pare?
    (x kar set-kar!)
    (y kdr))

  (define-record-discloser :pare
    (lambda (x) (format nil ""#<pare %s %s>"" (kar x) (kdr x))))

  (define (record-self-test)
    (define pare (kons 1 2))
    (test pare)
    (test (pare? pare))
    (test (eql (kar pare) 1))
    (test (eql (kdr pare) 2))

    (set-kar! pare 3)
    (test (eql (kar pare) 3)))

;;; string-util tests

  (define (string-util-self-test)
    (test (string-upper-case-p ""FOO""))
    (test (not (string-upper-case-p ""Foo"")))
    (test (not (string-upper-case-p ""foo"")))
    (test (not (string-upper-case-p ""123"")))

    (test (string-lower-case-p ""foo""))
    (test (not (string-lower-case-p ""Foo"")))
    (test (not (string-lower-case-p ""FOO"")))
    (test (not (string-lower-case-p ""123"")))

    (test (string-capitalized-p ""Foo""))
    (test (string-capitalized-p ""FOO""))
    (test (not (string-capitalized-p ""foo"")))

    (test (string= (string-upcase ""foo"") ""FOO""))
    (test (string= (string-upcase ""FOO"") ""FOO""))
    (test (string= (string-upcase ""Foo"") ""FOO""))
    (test",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IBlcX_
code,"#| utils.jl -- 

   $Id$

   Copyright (C) 2000 John Harper <john@dcs.warwick.ac.uk>

   This file is part of librep.

   librep is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   librep is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with librep; see the file COPYING.  If not, write to
   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
|#

(define-module rep.vm.compiler.utils

    (export current-stack max-stack
	    current-b-stack max-b-stack
	    const-env inline-env
	    defuns defvars defines
	    output-stream
	    silence-compiler
	    compiler-error
	    compiler-warning
	    remember-function
	    forget-function
	    remember-variable
	    remember-lexical-variable
	    check-variable-ref
	    check-variable-bind
	    check-function-call
	    increment-stack
	    decrement-stack
	    increment-b-stack
	    decrement-b-stack
	    get-lambda-vars
	    compiler-constant?
	    compiler-constant-value
	    constant-function?
	    constant-function-value
	    compile-declaration)

    (open rep
	  rep.io.files
	  rep.vm.compiler.modules
	  rep.vm.compiler.bindings
	  rep.vm.compiler.basic
	  rep.vm.bytecodes)

  (define current-stack (make-fluid 0))		;current stack requirement
  (define max-stack (make-fluid 0))		;highest possible stack
  (define current-b-stack (make-fluid 0))	;current binding stack req.
  (define max-b-stack (make-fluid 0))		;highest possible binding stack

  (define const-env (make-fluid '()))		;alist of (NAME . CONST-DEF)
  (define inline-env (make-fluid '()))		;alist of (NAME . FUN-VALUE)
  (define defuns (make-fluid '()))		;alist of (NAME REQ OPT RESTP)
					; for all functions/macros in the file
  (define defvars (make-fluid '()))		;all vars declared at top-level
  (define defines (make-fluid '()))		;all lex. vars. at top-level

  (define output-stream (make-fluid))	;stream for compiler output

  ;; also: shadowing
  (defvar *compiler-warnings* '(unused bindings parameters misc deprecated))
  (define silence-compiler (make-fluid nil))

  ;; Message output

  (define last-current-file t)
  (define last-current-fun t)

  (define (ensure-output-stream)
    (when (null? (fluid-ref output-stream))
      (if (or *batch-mode* (not (feature? 'jade)))
	  (fluid-set! output-stream (stdout-file))
	(declare (bound open-buffer))
	(fluid-set! output-stream (open-buffer ""*compilation-output*""))))
    (when (and (feature? 'jade)
	       (progn
		 (declare (bound bufferp goto-buffer goto
				 end-of-buffer current-buffer))
		 (and (bufferp (fluid-ref output-stream))
		      (not (eq? (current-buffer) (fluid-ref output-stream))))))
      (goto-buffer (fluid-ref output-stream))
      (goto (end-of-buffer))))

  (define (abbreviate-file file)
    (let ((c-dd (file-name-as-directory
		 (canonical-file-name *default-directory*)))
	  (c-file (canonical-file-name file)))
      (if (string-prefix? c-file c-dd)
	  (substring c-file (string-length c-dd))
	file)))

  (define (file-prefix #!optional form)
    (unless form
      (set! form (fluid-ref current-form)))
    (let ((origin (and form (lexical-origin form))))
      (cond (origin
	     (format nil ""%s:%d: ""
		     (abbreviate-file (car origin)) (cdr origin)))
	    ((fluid-ref current-file)
	     (format nil ""%s: "" (abbreviate-file (fluid-ref current-file))))
	    (t """"))))

  (defun compiler-message (fmt #!key form #!rest args)
    (unless (fluid-ref silence-compiler)
      (ensure-output-stream)
      (unless (and (eq? last-current-fun (fluid-ref current-fun))
		   (eq? last-current-file (fluid-ref current-file)))
	(if (fluid-ref current-fun)
	    (format (fluid-ref output-stream) ""%sIn function `%s':\n""
		    (file-prefix form) (fluid-ref current-fun))
	  (format (fluid-ref output-stream) ""%sAt top-level:\n""
		  (file-prefix form))))
      (apply format (fluid-ref output-stream)
	     (concat ""%s"" fmt #\newline) (file-prefix form) args)
      (set! last-current-fun (fluid-ref current-fun))
      (set! last-current-file (fluid-ref current-file))))

  (put 'compile-error 'error-message ""Compilation mishap"")

  (defun compiler-error (fmt #!key form #!rest data)
    (apply compiler-message fmt #:form form data)
    (signal 'compile-error (list (apply format nil fmt data))))

  (defun compiler-warning (type fmt #!key form #!rest args)
    (when (memq type *compiler-warnings*)
      (apply compiler-message (concat ""warning: "" fmt) #:form form args)))

  ;; Note that there's a function or macro NAME with lambda-list ARGS
  ;; in the current file

  (defun remember-function (name args #!optional body)
    (when body
      (let ((cell (assq name (fluid-ref inline-env))))
	;; a function previously declared inline
	(when (and ce",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UlDIHz
code,"# Ported to Julia by Andy Ferris, 2016, and re-released under an MIT license.
#/**
# * Copyright (c) Charles Karney (2008-2015) <charles@karney.com> and licensed
# * under the MIT/X11 License.  For more information, see
# * http://geographiclib.sourceforge.net/
# **********************************************************************/




""""""
eatanhe(x, e2) returns e*atanh(e*x) where e = sqrt(e2)
e2 is a scalar; x can be any shape.
""""""
function eatanhe(x, e2)
    e = sqrt(abs(e2))
    if (e2 >= 0)
        y = e * atanh(e * x)
    else
        y = -e * atan(e * x)
    end
end


""""""
%TAUF   tan(phi)
%
%   TAUF(taup, e2) returns tangent of phi in terms of taup the tangent of
%   chi.  e2, the square of the eccentricity, is a scalar; taup can be any
%   shape.
""""""
function tauf(taup, e2)
    numit = 5
    e2m = 1 - e2     # This possibly disagrees with the C++ code in the prolate case
    tau = taup / e2m
    stol = 0.1 * sqrt(eps(Float64)) * max(1.0, abs(taup))
    g = isfinite(tau)
    for i = 1 : numit
        if !g
            break
        end
        tau1 = hypot(1, tau)
        sig = sinh( eatanhe( tau / tau1, e2 ) )
        taupa = hypot(1, sig) * tau - sig * tau1
        dtau = (taup - taupa) * (1 + e2m * tau*tau) / (e2m * tau1 * hypot(1, taupa))
        tau = tau + dtau
        g = g & (abs(dtau) >= stol)
    end
    return tau
end


""""""
taupf(tau, e2) returns tangent of chi in terms of tau the tangent of
phi.  e2, the square of the eccentricity, is a scalar; tau can be any
shape.
""""""
function taupf(tau, e2)
  tau1 = hypot(1, tau)
  sig = sinh( eatanhe( tau / tau1, e2 ) )
  return hypot(1, sig) * tau - sig * tau1
end









# Code adapted from MATLAB port of geograhiclib, which was licensed under
# a permissive MIT-like license and the following copyright notice
#     Copyright (c) 2016, Charles Karney
#     All rights reserved.

""""""
Evaluate polynomial with coefficients p[i] at x
""""""
function polyval(p, x)
    y = 1
    out = p[end]
    for i = length(p)-1:-1:1
        y *= x
        out += p[i] * y
    end
    return out
end

""""""
LatFix(x) returns x is it is in the range [-90, 90]; otherwise it
returns NaN.
""""""
function LatFix(x::Number)
    y = x
    if abs(x) > 90
        y = NaN
    end
    return y
end


function AngDiff(x,y)
    AngNormalize(AngNormalize(y) - AngNormalize(x))
    #(d, t) = sumx(AngNormalize(x), AngNormalize(-y))
    #d = - AngNormalize(d)
    #if d == 180 && t < 0
    #    d = -180
    #end
    #return sumx(d, -t)[1]
end

""""""
%AngNormalize:  Reduce angle to range [-180, 180)
%
%   x = AngNormalize(x) reduces angles to the range [-180, 180).
""""""
function AngNormalize(x::Number)
    x = rem(x, 360)
    if x >= 180
        x = x - 360
    elseif x < -180
        x = x + 360
    end

    return x
end

function atan2d(y, x)
    # In order to minimize round-off errors, this function rearranges the
    # arguments so that result of atan2 is in the range [-pi/4, pi/4] before
    # converting it to degrees and mapping the result to the correct
    # quadrant.
    q = 0
    if (abs(y) > abs(x))
        tmp = x
        x = y
        y = tmp
        q = 2
    end
    if (x < 0)
        x = -x
        q = q + 1
    end
    # here x >= 0 and x >= abs(y), so angle is in [-pi/4, pi/4]
    ang = atan2(y, x) * 180 / pi
    # Note that atan2d(-0.0, 1.0) will return -0.  However, we expect that
    # atan2d will not be called with y = -0.  If need be, include
    #
    #   case 0: ang = 0 + ang; break;
    #
    # and handle mpfr as in AngRound.
    if q == 1
        ang = (y > 0 ? 180 : -180) - ang
    elseif q == 2
        ang =  90 - ang
    elseif q == 3
        ang = -90 + ang
    end
    return ang
end




""""""
    immutable TransverseMercator{MaxPow}
    TransverseMercator(datum)
    TransverseMercator(ellipsoid)
    TransverseMercator(a, f, [::Type{Val{MaxPow}} = Val{6}])

Cache of ellipsoidal calculations necessary for transverse-Mercator and
polar-stereographic transformations. Series expansion coefficients up to order
`MaxPow` (between 4 and 8, default 6) are calculated and stored for fast
transverse-Mercator and UTM calculations.
""""""
immutable TransverseMercator{MaxPow}
    a::Float64
    f::Float64
    e2::Float64
    es::Float64
    e2m::Float64
    c::Float64
    n::Float64
    a1::Float64
    b1::Float64
    alp::NTuple{MaxPow, Float64}
    bet::NTuple{MaxPow, Float64}
end

TransverseMercator(datum) = TransverseMercator(ellipsoid(datum))
TransverseMercator(el::Ellipsoid) = TransverseMercator(el.a, 1-el.b/el.a)
TransverseMercator(a,f) = TransverseMercator(a,f,Val{6}) # Default to sixth-order expansion
function TransverseMercator{MaxPow}(a::Float64, f::Float64, ::Type{Val{MaxPow}})
    e2 = f * (2 - f)
    es = (f < 0 ? -1 : 1) * sqrt(abs(e2))
    e2m = (1 - e2)
    # c = sqrt( pow(1 + e, 1 + e) * pow(1 - e, 1 - e) ) )
    # See, for example, Lee (1976), p 100.
    c = sqrt(e2m) * exp(eatanhe(1.0, e2)) # Maybe revert to C++ version with es
    n = f / (2 - f)

    (1 - f) * exp(eatanhe(1.0, es))

    if !(isa(MaxPow,Int)) || MaxPow < 4 || MaxPow > 8
        error(""MaxPow must be 4, 5, 6, 7 or 8"")
    ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",J5kTB0
code,"using ExtremeValueDistributions
using Base.Test

tests = [""generalizedextreme.jl"", ""generalizedpareto.jl""]

print_with_color(:blue, ""Running tests:\n"")

srand(345678)

for t in tests
    test_fn = ""$t.jl""
    print_with_color(:green, ""* $test_fn\n"")
    include(test_fn)
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P_wnzu
code,"#!/usr/bin/env julia

srand(197462)
include(""run_SNR-max_iters-base.jl"")
simulation_params[""simulation_name""] = ""SNR-max_iters-9""

network =
    setup_interfering_broadcast_channel(simulation_params[""I""],
        simulation_params[""Kc""], simulation_params[""N""], simulation_params[""M""],
        num_streams=simulation_params[""d""])
raw_results, _ = simulate(network, simulation_params)

println(""-- Saving $(simulation_params[""simulation_name""]) results"")
save(""$(simulation_params[""simulation_name""]).jld"",
     ""simulation_params"", clean_simulation_params_for_jld(simulation_params),
     ""raw_results"", raw_results)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AO5b6P
code,"function _accept(lp1::Float64,
                 lp2::Float64)
  return rand() <= exp(lp1 - lp2)
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Hu_YC8
code,"# This is a Cooley-Tukey FFT algorithm for any number type.
function fft_pow2{F}(x::Vector{F})
    n = length(x)
    T = mapreduce(eltype,promote_type,x)
    @assert ispow2(n)
    if n==1
        return x
    elseif n==2
        return F[x[1]+x[2];x[1]-x[2]]
    end
    even,odd = fft_pow2(x[1:2:end-1]),fft_pow2(x[2:2:end])
    twiddle = exp(-2im*convert(T,π)/n*collect(0:n-1))
    half1 = even + odd.*twiddle[1:div(n,2)]
    half2 = even + odd.*twiddle[div(n,2)+1:n]
    return vcat(half1,half2)
end
ifft_pow2(x::Vector) = conj(fft_pow2(conj(x)))/length(x)

# This is a Cooley-Tukey FFT algorithm inspired by many widely available algorithms including:
# c_radix2.c in the GNU Scientific Library and four1 in the Numerical Recipes in C.
# However, the trigonometric recurrence is improved for greater efficiency.
# The algorithm starts with bit-reversal, then divides and conquers in-place.
function fft_pow2!{T<:BigFloat}(x::Vector{T})
    n=length(x)
    nn,j=div(n,2),1
    for i=1:2:n-1
        if j>i
            x[j],x[i]=x[i],x[j]
            x[j+1],x[i+1]=x[i+1],x[j+1]
        end
        m=nn
        while m >= 2 && j > m
            j -= m
            m=div(m,2)
        end
        j += m
    end
    for logn = 2.^collect(1:round(Int,log2(n))-1)
        θ=2convert(T,π)/logn
        wpr,wpi=cos(θ),sin(θ)
        wr,wi=one(T),zero(T)
        for m=1:2:logn-1
            for i=m:2logn:n
                j=i+logn
                mixr,mixi=wr*x[j]-wi*x[j+1],wr*x[j+1]+wi*x[j]
                x[j],x[j+1]=x[i]-mixr,x[i+1]-mixi
                x[i],x[i+1]=x[i]+mixr,x[i+1]+mixi
            end
            wr,wi=wi*wpi+wr*wpr,wi*wpr-wr*wpi
        end
    end
    return x
end

function fft_pow2{T<:BigFloat}(x::Vector{Complex{T}})
    y = interlace(real(x),imag(x))
    fft_pow2!(y)
    return complex(y[1:2:end],y[2:2:end])
end
fft_pow2{T<:BigFloat}(x::Vector{T}) = fft_pow2(complex(x))

function ifft_pow2{T<:BigFloat}(x::Vector{Complex{T}})
    y = interlace(real(x),-imag(x))
    fft_pow2!(y)
    return complex(y[1:2:end],-y[2:2:end])/length(x)
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pOgfrd
code,"
include(""TriPMatrices.jl"")
n = 6
D = [linspace(1,n,n);] + 5.0
Dl = [linspace(1,n,n);] + 1.0
Du = [linspace(1,n,n);] + 2.0

M = TriPMatrices.TridiagonalP(Dl, D, Du)
Mf = full(M)


S = TriPMatrices.SymTridiagonalP(D, Du)
Sf = full(S)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CNYBUt
code,"
# And 2xN matrix of N landmark xy positions as variable nodes in factor graph
function addSimMapFG!(fg::FactorGraph, lms::Array{Float64,2})
    for i in 1:size(lms,2)
      newLandm!(fg,string('l',i), vectoarr2(lms[:,i]), 0.001*eye(2))
    end
    nothing
end

# assume all the landmarks are already loaded into the Ground Truth FG
function simOdo!(fgGT::FactorGraph, fg::FactorGraph, DX::Array{Float64,1};
    noiserate=2.0*[3e-2;3e-2;1.5e-3], driftrate=[0.0;0.0;0.0], detLM=Union{})
    prev, X, nextn = getLastPose2D(fg)
    addOdoFG!(fgGT, nextn, DX, 0.001*eye(3))

    r = norm(DX[1:2])
    xn = noiserate[1]*r
    yn = noiserate[2]*r
    thn = noiserate[3]*r
    cov = diagm([xn;yn;thn])
    DXn = DX + [xn*randn();yn*randn();thn*randn()] + r*driftrate
    addOdoFG!(fg, nextn, DXn, cov)

    return nextn
end


function truePredBR(fgGT::FactorGraph, fg::FactorGraph, ps::String, lm::String)
    trubr = predictBodyBR(fgGT, ps, lm)
    truA = [trubr[1]; trubr[2]]
    # Prediction of BR measurement
    prebr = predictBodyBR(fg, ps, lm)
    preA = [prebr[1];prebr[2]]
    return truA, preA
end

function showTruePredBR(fgGT::FactorGraph, fg::FactorGraph, ps::String, lm::String, cov::Array{Float64,2})
    truA, preA = truePredBR(fgGT, fg, ps, lm)
    measA = truA + [cov[1,1]*randn();cov[2,2]*randn()]
    mala = malahanobisBR(measA, preA, cov)
    println(ps,lm, "": true BR=$(round(truA,3)), pred BR=$(round(preA,3)), mala=$(round(mala,3))"")
end

function crossMalaBR(fgGT::FactorGraph, fg::FactorGraph,
                      ps::String, lmT::String, lmE, cov::Array{Float64,2})
    truT, preT = truePredBR(fgGT, fg, ps, lmT)
    measT = truT + [cov[1,1]*randn();cov[2,2]*randn()]

    truE, preE = truePredBR(fgGT, fg, ps, lmE)
    malaX = malahanobisBR(measT, preE, cov)
    return malaX
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",61rPjw
code,"#  Copyright 2015, Iain Dunning, Joey Huchette, Miles Lubin, and contributors
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at http://mozilla.org/MPL/2.0/.
#############################################################################
# JuMP
# An algebraic modeling language for Julia
# See http://github.com/JuliaOpt/JuMP.jl
#############################################################################
# src/quadexpr.jl
# Defines all types relating to expressions with a quadratic and affine part
# - GenericQuadExpr             ∑qᵢⱼ xᵢⱼ  +  ∑ aᵢ xᵢ  +  c
#   - QuadExpr                  Alias for (Float64, Variable)
# - GenericQuadConstraint       ∑qᵢⱼ xᵢⱼ  +  ∑ aᵢ xᵢ  +  c  [≤,≥]  0
#   - QuadConstraint            Alias for (Float64, Variable)
# Operator overloads in src/operators.jl
#############################################################################


#############################################################################
# GenericQuadExpr
# ∑qᵢⱼ xᵢⱼ  +  ∑ aᵢ xᵢ  +  c
type GenericQuadExpr{CoefType,VarType}
    qvars1::Vector{VarType}
    qvars2::Vector{VarType}
    qcoeffs::Vector{CoefType}
    aff::GenericAffExpr{CoefType,VarType}
end
coeftype{C,V}(::GenericQuadExpr{C,V}) = C

Base.isempty(q::GenericQuadExpr) = (length(q.qvars1) == 0 && isempty(q.aff))
Base.zero{C,V}(::Type{GenericQuadExpr{C,V}}) = GenericQuadExpr(V[], V[], C[], zero(GenericAffExpr{C,V}))
Base.one{C,V}(::Type{GenericQuadExpr{C,V}})  = GenericQuadExpr(V[], V[], C[],  one(GenericAffExpr{C,V}))
Base.zero(q::GenericQuadExpr) = zero(typeof(q))
Base.one(q::GenericQuadExpr)  =  one(typeof(q))
Base.copy(q::GenericQuadExpr) = GenericQuadExpr(copy(q.qvars1),copy(q.qvars2),copy(q.qcoeffs),copy(q.aff))

function Base.append!{T,S}(q::GenericQuadExpr{T,S}, other::GenericQuadExpr{T,S})
    append!(q.qvars1, other.qvars1)
    append!(q.qvars2, other.qvars2)
    append!(q.qcoeffs, other.qcoeffs)
    append!(q.aff, other.aff)
    q
end

function assert_isfinite(q::GenericQuadExpr)
    assert_isfinite(q.aff)
    for i in 1:length(q.qcoeffs)
        isfinite(q.qcoeffs[i]) || error(""Invalid coefficient $(q.qcoeffs[i]) on quadratic term $(q.qvars1[i])*$(q.qvars2[i])"")
    end
end

function Base.isequal{T,S}(q::GenericQuadExpr{T,S},other::GenericQuadExpr{T,S})
    isequal(q.aff,other.aff)   || return false
    length(q.qvars1) == length(other.qvars1) || return false
    for i in 1:length(q.qvars1)
        isequal(q.qvars1[i],  other.qvars1[i]) || return false
        isequal(q.qvars2[i],  other.qvars2[i]) || return false
        isequal(q.qcoeffs[i],other.qcoeffs[i]) || return false
    end
    return true
end

# Alias for (Float64, Variable)
typealias QuadExpr GenericQuadExpr{Float64,Variable}
Base.convert(::Type{QuadExpr}, v::Union{Real,Variable,AffExpr}) = QuadExpr(Variable[], Variable[], Float64[], AffExpr(v))
QuadExpr() = zero(QuadExpr)

function setObjective(m::Model, sense::Symbol, q::QuadExpr)
    m.obj = q
    if m.internalModelLoaded
        if method_exists(MathProgBase.setquadobjterms!, (typeof(m.internalModel), Vector{Cint}, Vector{Cint}, Vector{Float64}))
            verify_ownership(m, m.obj.qvars1)
            verify_ownership(m, m.obj.qvars2)
            MathProgBase.setquadobjterms!(m.internalModel, Cint[v.col for v in m.obj.qvars1], Cint[v.col for v in m.obj.qvars2], m.obj.qcoeffs)
        else
            # we don't (yet) support hot-starting QCQP solutions
            Base.warn_once(""JuMP does not yet support adding a quadratic objective to an existing model. Hot-start is disabled."")
            m.internalModelLoaded = false
        end
    end
    setObjectiveSense(m, sense)
end

# Copy a quadratic expression to a new model by converting all the
# variables to the new model's variables
function Base.copy(q::QuadExpr, new_model::Model)
    QuadExpr(copy(q.qvars1, new_model), copy(q.qvars2, new_model),
                copy(q.qcoeffs), copy(q.aff, new_model))
end

function getValue(a::QuadExpr)
    ret = getValue(a.aff)
    for it in 1:length(a.qvars1)
        ret += a.qcoeffs[it] * getValue(a.qvars1[it]) * getValue(a.qvars2[it])
    end
    return ret
end
getValue(arr::Array{QuadExpr}) = map(getValue, arr)



##########################################################################
# GenericQuadConstraint
# ∑qᵢⱼ xᵢⱼ  +  ∑ aᵢ xᵢ  +  c  [≤,≥]  0
# As RHS is implicitly taken to be zero, we store only LHS and sense
type GenericQuadConstraint{QuadType} <: JuMPConstraint
    terms::QuadType
    sense::Symbol
end
Base.copy{CON<:GenericQuadConstraint}(c::CON, new_model::Model) = CON(copy(c.terms, new_model), c.sense)


# Alias for (Float64, Variable)
typealias QuadConstraint GenericQuadConstraint{QuadExpr}

function Base.copy(c::QuadConstraint, new_model::Model)
    return QuadConstraint(copy(c.terms, new_model), c.sense)
end

function addConstraint(m::Model, c::QuadConstraint)
    push!(m.quadconstr,c)
    if m.internalModelLoaded
        if method_exists(MathProgBase.addquadconstr!, (typeof(m.internalModel),
                      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hgTwhX
code,"# Challenge Problem 4.
# The functions below read in a DataFrame object and modify
# the contents of one column based on whether or not a value
# appears in a column of a different DataFrame. The current
# performance can be improved considerably. Find a way to
# improve the performance using one (or several) of the
# techniques discussed to this point.

using Requests
using DataFrames
using StatsBase


diabetes = readtable(IOBuffer(get(""https://raw.githubusercontent.com/bcbi/julia_tutorials/master/statistics/data/diabetic_data.csv"").data))


display(diabetes)

dia_consent = readtable(IOBuffer(get(""https://raw.githubusercontent.com/bcbi/julia_tutorials/master/performance_optim/diabetes_consent.csv"").data))

# Pre-allocate column we will populate with true/false
# based on whether or not the patient has repeat visits
# and has consented to be in our study.

t1 = time()
n = nrow(diabetes)
n2 = nrow(dia_consent)
dia_consent[:include_patient] = falses(n2)

for i = 1:n
    println(""Checking id: $(diabetes[i, :patient_nbr])"")
    id = diabetes[i, :patient_nbr]
    row_indcs = find(diabetes[:, :patient_nbr] .== id)
    if length(row_indcs) > 1
        m = nrow(dia_consent)
        idx = 0
        for j = 1:m
            if dia_consent[j, :patient_nbr] == id
                idx = j
            end
        end
        if dia_consent[idx, :study_consent]
            dia_consent[idx, :include_patient] = true
        end
    end
end


println(""elapsed: $(time() - t1)"")

t2 = time()














# Challenge Problem 5.
# You are given a dataset with three columns. Column 1 has patient
# IDs. Both columns 2 and 3 have ICD-10 codes for that patient.
# Your task is to optimize the code below that generates how frequently
# each pair of ICD-10 codes co-occur.

using Combinatorics

icd = readcsv(IOBuffer(get(""https://raw.githubusercontent.com/bcbi/julia_tutorials/master/performance_optim/repeat_ed_visits.csv"").data))

icd_codes = vcat(icd[:, 2], icd[:, 3])
uniq_codes = unique(icd_codes)
n_codes = length(uniq_codes)

pairs = collect(combinations(uniq_codes, 2))
n_pairs = length(pairs)
pairs = hcat(zeros(Int, n_pairs))

n_patients = size(icd, 1)
cnts = zeros(Int, n_pairs)

for i = 1:n_pairs
    for j = 1:n_patients
        if pairs[i] == icd[j, 2:3]
            cnts[i] += 1
        end
    end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_lssrD
code,"## Penn Treebank

PTB_LOCATION = joinpath(homedir(), ""TREEBANK_3"")

function wsj_section_path(sec::Int)
    if sec < 0 || sec > 24
        error(""section num must be between 0 and 24"")
    end
    joinpath(PTB_LOCATION, ""parsed"", ""mrg"", ""wsj"", @sprintf(""%02d"", sec))
end

function wsj_trees(sec::Int, recursive=true)
    return get_trees_dir(wsj_section_path(sec), recursive)
end

function wsj_tagged_sentences(sec::Int, recursive=true)
    get_treebank_tagged_sentences(wsj_section_path(sec), recursive)
end

function wsj_tagged_sentences(secs::AbstractArray{Int}, recursive=true)
    sentences = Array{(String,String)}[]
    for sec in secs
        append!(sentences, wsj_tagged_sentences(sec, recursive))
    end
    return sentences
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xJpF7k
code,"fp = dirname(@__FILE__)
@testset ""Impulse responses of a VAR using a DSGE as a prior (wrapper function)"" begin
    jlddata = load(joinpath(fp, ""../../reference/test_dsgevar_lambda_irfs.jld2""))
    m = Model1002(""ss10"", custom_settings =
                  Dict{Symbol,Setting}(:add_laborshare_measurement =>
                                       Setting(:add_laborshare_measurement, true)))
    m <= Setting(:impulse_response_horizons, 10)
    dsgevar = DSGEVAR(m, collect(keys(m.exogenous_shocks)), ""ss11"")
    DSGE.update!(dsgevar, λ = 1.)
    DSGE.update!(dsgevar, jlddata[""modal_param""])

    Random.seed!(1793)
    out = impulse_responses(dsgevar, jlddata[""modal_param""],
                            jlddata[""data""],
                            :mode, :cholesky; parallel = false,
                            create_meansbands = false, flip_shocks = false,
                            n_obs_shock = 1)
    out_lr = impulse_responses(dsgevar, jlddata[""modal_param""], jlddata[""data""],
                               :mode, :choleskyLR; parallel = false,
                               create_meansbands = false, flip_shocks = false,
                               n_obs_shock = 1)
    out_maxbc = impulse_responses(dsgevar,  jlddata[""modal_param""], jlddata[""data""],
                                  :mode, :maxBC; parallel = false,
                                  create_meansbands = false, flip_shocks = false,
                                  n_obs_shock = 1)

    Random.seed!(1793)
    _ = impulse_responses(dsgevar, jlddata[""modal_param""],
                          jlddata[""data""],
                          :mode, :cholesky; parallel = false,
                          create_meansbands = false, flip_shocks = false,
                          n_obs_shock = 1)

    out_lr2 = impulse_responses(dsgevar, jlddata[""modal_param""], jlddata[""data""],
                                :mode, :cholesky_long_run; parallel = false,
                                create_meansbands = false, flip_shocks = false,
                                n_obs_shock = 1)
    out_maxbc2 = impulse_responses(dsgevar,  jlddata[""modal_param""], jlddata[""data""],
                                   :mode, :maximum_business_cycle_variance; parallel = false,
                                   create_meansbands = false, flip_shocks = false,
                                   n_obs_shock = 1)

    Random.seed!(1793)
    out_flip = impulse_responses(dsgevar, jlddata[""modal_param""], jlddata[""data""],
                                 :mode, :cholesky; parallel = false,
                                 create_meansbands = false, flip_shocks = true,
                                 n_obs_shock = 1)
    out_lr_flip = impulse_responses(dsgevar, jlddata[""modal_param""], jlddata[""data""],
                                    :mode, :choleskyLR; parallel = false,
                                    create_meansbands = false, flip_shocks = true,
                                    n_obs_shock = 1)
    out_maxbc_flip = impulse_responses(dsgevar, jlddata[""modal_param""], jlddata[""data""],
                                       :mode, :maxBC; parallel = false,
                                       create_meansbands = false, flip_shocks = true,
                                       n_obs_shock = 1)

    # Not testing but checking no errors are caused when creating a MeansBands
    mb = impulse_responses(dsgevar, reshape(jlddata[""modal_param""], 1,
                                            length(jlddata[""modal_param""])),
                            jlddata[""data""],
                            :mode, :cholesky; parallel = false,
                            create_meansbands = true, test_meansbands = true,
                            flip_shocks = false, n_obs_shock = 1)
    mb = impulse_responses(dsgevar, reshape(jlddata[""modal_param""], 1,
                                            length(jlddata[""modal_param""])),
                            jlddata[""data""],
                            :mode, :choleskyLR; parallel = false,
                            create_meansbands = true, test_meansbands = true,
                            flip_shocks = false, n_obs_shock = 1)
    mb = impulse_responses(dsgevar, reshape(jlddata[""modal_param""], 1,
                                            length(jlddata[""modal_param""])),
                            jlddata[""data""],
                            :mode, :maxBC; parallel = false,
                            create_meansbands = true, test_meansbands = true,
                            flip_shocks = false, n_obs_shock = 1)

    @test @test_matrix_approx_eq jlddata[""exp_modal_cholesky_irf""] dropdims(out, dims = 3)
    @test @test_matrix_approx_eq jlddata[""exp_modal_choleskyLR_irf""] dropdims(out_lr, dims = 3)
    @test @test_matrix_approx_eq jlddata[""exp_modal_maxBC_irf""] dropdims(out_maxbc, dims = 3)
    @test @test_matrix_approx_eq jlddata[""exp_modal_choleskyLR_irf""] dropdims(out_lr2, dims = 3)
    @test @test_matrix_approx_eq jlddata[""exp_modal_maxBC_irf""] dropdims(out_maxbc2, dims = 3)
    @test @test_matrix_approx_eq jlddata[""exp_modal_cholesky_irf""] -dropdims(out_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q_dfRT
code,"using Gurobi

function print_help()
    println(""""""
    Usage
        perf.jl [arg] [name]

    [arg]
        --new       Begin a new benchmark comparison
        --compare   Run another benchmark and compare to existing

    [name]          A name for the benchmark test

    Examples
        git checkout master
        julia perf.jl --new master
        git checkout approach_1
        julia perf.jl --new approach_1
        git checkout approach_2
        julia perf.jl --compare master
        julia perf.jl --compare approach_1
    """""")
end

if length(ARGS) != 2
    print_help()
else
    const Benchmarks = Gurobi.MOI.Benchmarks
    const GUROBI_ENV = Gurobi.Env()
    const suite = Benchmarks.suite() do
        Gurobi.Optimizer(GUROBI_ENV, OutputFlag = 0)
    end
    if ARGS[1] == ""--new""
        Benchmarks.create_baseline(
            suite, ARGS[2]; directory = @__DIR__, verbose = true
        )
    elseif ARGS[1] == ""--compare""
        Benchmarks.compare_against_baseline(
            suite, ARGS[2]; directory = @__DIR__, verbose = true
        )
    else
        print_help()
    end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QaCqJA
code,"using JuliaFEM, LinearAlgebra, Test

datadir = first(splitext(basename(@__FILE__)))

@testset ""Test that mesh coloring provides a good coloring""
    fn = joinpath(datadir, ""cube_tet4.inp"")
    mesh = JuliaFEM.Mesh(open(parse_abaqus, fn))

    coloring = JuliaFEM.create_coloring(mesh)
    for colors in coloring
        for ele_i in colors
            for ele_j in colors
                if ele_i == ele_j
                    continue
                end
                @test intersect(Set(mesh.elements[ele_i]), Set(mesh.elements[ele_j])) |> isempty
            end
        end
    end
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zKmkUV
code,"using Media
import REPL

using Logging: with_logger
using .Progress: JunoProgressLogger

ends_with_semicolon(x) = REPL.ends_with_semicolon(split(x,'\n',keepempty = false)[end])

withpath(f, path) =
  CodeTools.withpath(f, path == nothing || isuntitled(path) ? nothing : path)

const eval_channel_in = Channel(1)
const eval_channel_out = Channel(1)
const eval_backend_task = Ref{Any}(nothing)
const is_backend_working = Ref{Bool}(false)

function is_evaling()
  return is_backend_working[] || inREPL[]
end

function run_with_backend(f, args...)
  put!(eval_channel_in, (f, args))
  r = take!(eval_channel_out)
  if r isa EvalError || r isa ErrorException
    render′(Editor(), r)
  else
    update_project()
    # update_workspace()
    r
  end
end

function start_eval_backend()
  global eval_backend_task[] = @async begin
    Base.sigatomic_begin()
    while true
      try
        f, args = take!(eval_channel_in)
        Base.sigatomic_end()
        is_backend_working[] = true
        res = @errs Base.invokelatest(f, args...)
        is_backend_working[] = false
        Base.sigatomic_begin()
        put!(eval_channel_out, res)
      catch err
        put!(eval_channel_out, err)
      finally
        is_backend_working[] = false
      end
    end
    Base.sigatomic_end()
  end
end

handle(""evalshow"") do data
  @destruct [
    text,
    line,
    path,
    mod
  ] = data

  run_with_backend(evalshow, text, line, path, mod)
  nothing
end

function evalshow(text, line, path, mod)
  fixjunodisplays()
  @dynamic let Media.input = Editor()
    mod = getmodule(mod)

    result = hideprompt() do
      with_logger(JunoProgressLogger()) do
        withpath(path) do
          args = @static VERSION ≥ v""1.5"" ? (REPL.softscope, mod, text, path, line) : (mod, text, path, line)
          res = @errs include_string(args...)

          Base.invokelatest() do
            if res isa EvalError
              Base.showerror(IOContext(stderr, :limit => true), res)
            elseif res !== nothing && !ends_with_semicolon(text)
              display(res)
            end
          end

          res
        end
      end
    end

    Base.invokelatest() do
      display = Media.getdisplay(typeof(result), Media.pool(Editor()), default = Editor())
      !isa(result, EvalError) && ends_with_semicolon(text) && (result = nothing)
      if display ≠ Editor() && result !== nothing
        @ierrs render(display, result)
      end
    end
  end
end

handle(""eval"") do data
  @destruct [
    text,
    line,
    path,
    mod,
    errorinrepl = :errorInRepl || false
  ] = data
  run_with_backend(eval, text, line, path, mod, errorinrepl)
end

function eval(text, line, path, mod, errorinrepl = false)
  fixjunodisplays()
  @dynamic let Media.input = Editor()
    mod = getmodule(mod)

    result = hideprompt() do
      with_logger(JunoProgressLogger()) do
        withpath(path) do
          args = @static VERSION ≥ v""1.5"" ? (REPL.softscope, mod, text, path, line) : (mod, text, path, line)
          res = @errs include_string(args...)
          if errorinrepl && res isa EvalError
            Base.invokelatest() do
              try
                Base.showerror(IOContext(stderr, :limit => true), res)
              catch err
                show(stderr, err)
              end
            end
          end
          return res
        end
      end
    end

    Base.invokelatest() do
      !isa(result, EvalError) && ends_with_semicolon(text) && (result = nothing)
      @ierrs displayandrender(result)
    end
  end
end

# dummy handler for Revise compat
handle(""evalrepl"") do data
  @warn(""""""
    Juno's evalrepl handler is deprecated.
    """""", _id=""evalrepl"", maxlog=1)
end

handle(""evalall"") do data
  @destruct [
    code,
    mod = :module || nothing,
    path || ""untitled""
  ] = data
  run_with_backend(evalall, code, mod, path)
  nothing
end

function evalall(code, mod = nothing, path = ""untitled"")
  fixjunodisplays()
  @dynamic let Media.input = Editor()
    mod = if mod !== nothing
       getmodule(mod)
    elseif isabspath(path)
      getmodule(CodeTools.filemodule(path))
    else
      Main
    end

    hideprompt() do
      with_logger(JunoProgressLogger()) do
        withpath(path) do
          result = nothing
          try
            result = include_string(mod, code, path)
          catch err
            ee = EvalError(err, stacktrace(catch_backtrace()))

            # show error in REPL:
            Base.invokelatest() do
              Base.showerror(IOContext(stderr, :limit => true), ee)
              # show notification (if enabled in Atom):
              @msg error(d(:msg => ""Error evaluating $(basename(path))"",
                           :detail => string(ee),
                           :dismissable => true))
            end
          end

          Base.invokelatest() do
            @ierrs displayandrender(result)
          end
        end
      end
    end
  end
end

handle(""docs"") do data
  @destruct [
    word,
    mod || ""Main""
  ] = data
  docs(word, mod)
end

function docs(word, mod = ""Main"")
  word = replace(word, r""\!+([^=\(]+)"" => s""\1"") # strip preced",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mMK77l
code,"using DataFrames

client_df = readtable(""./data_client.csv"")
broker_df = readtable(""./data_broker.csv"")

client_agg = aggregate(client_df, [:client], [mean, std])
broker_agg = aggregate(broker_df, [:broker], [mean, std])

client_file = open(""./agg_client.txt"", ""w"")
write(client_file, repr(client_agg[1,:]))
close(client_file)

broker_file = open(""./agg_broker.txt"", ""w"")
write(broker_file, repr(broker_agg[1,:]))
close(broker_file)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hdWJN1
code,"bigfib(n) = ((BigInt[1 1; 1 0])^n)[2,1]
bigfib(20)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WdQO2X
code,"# write your own tests here
include(""singlethreaded.jl"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZxVkQ4
code,"is_url_char(c) =  ((@assert c < 0x80); 'A' <= c <= '~' || '$' <= c <= '>' || c == 12 || c == 9)
is_mark(c) = (c == '-') || (c == '_') || (c == '.') || (c == '!') || (c == '~') ||
             (c == '*') || (c == '\'') || (c == '(') || (c == ')')
is_userinfo_char(c) = isalnum(c) || is_mark(c) || (c == '%') || (c == ';') ||
             (c == ':') || (c == '&') || (c == '+') || (c == '$' || c == ',')
isnum(c) = ('0' <= c <= '9')
ishex(c) =  (isnum(c) || 'a' <= lowercase(c) <= 'f')
is_host_char(c) = isalnum(c) || (c == '.') || (c == '-') || (c == '_') || (c == ""~"")


immutable URI
    scheme::ASCIIString
    host::ASCIIString
    port::UInt16
    path::ASCIIString
    query::ASCIIString
    fragment::ASCIIString
    userinfo::ASCIIString
    specifies_authority::Bool
    URI(scheme,host,port,path,query="""",fragment="""",userinfo="""",specifies_authority=false) =
            new(scheme,host,@compat(UInt16(port)),path,query,fragment,userinfo,specifies_authority)
end

==(a::URI,b::URI) = isequal(a,b)
isequal(a::URI,b::URI) = (a.scheme == b.scheme) &&
                         (a.host == b.host) &&
                         (a.port == b.port) &&
                         (a.path == b.path) &&
                         (a.query == b.query) &&
                         (a.fragment == b.fragment) &&
                         (a.userinfo == b.userinfo)

URI(host,path) = URI(""http"",host,@compat(UInt16(80)),path,"""","""","""",true)
URI(uri::URI; scheme=nothing, host=nothing, port=nothing, path=nothing, query=nothing, fragment=nothing, userinfo=nothing, specifies_authority=nothing) =
URI(scheme === nothing ? uri.scheme : scheme,
    host === nothing ? uri.host : host,
    port === nothing ? uri.port : port,
    path === nothing ? uri.path : path,
    query === nothing ? uri.query : query,
    fragment === nothing ? uri.fragment : fragment,
    userinfo === nothing ? uri.userinfo : userinfo,
    specifies_authority === nothing ? uri.specifies_authority : specifies_authority)

# URL parser based on the http-parser package by Joyent
# Licensed under the BSD license

# Parse authority (user@host:port)
# return (host,port,user)
function parse_authority(authority,seen_at)
    host=""""
    port=""""
    user=""""
    last_state = state = seen_at ? :http_userinfo_start : :http_host_start
    i = start(authority)
    li = s = 0
    while true
        if done(authority,li)
            last_state = state
            state = :done
        end

        if s == 0
            s = li
        end

        if state != last_state
            r = s:prevind(authority,li)
            s = li
            if last_state == :http_userinfo
                user = authority[r]
            elseif last_state == :http_host || last_state == :http_host_v6
                host = authority[r]
            elseif last_state == :http_host_port
                port = authority[r]
            end
        end

        if state == :done
            break
        end

        if done(authority,i)
            li = i
            continue
        end

        li = i
        (ch,i) = next(authority,i)

        last_state = state
        if state == :http_userinfo || state == :http_userinfo_start
            if ch == '@'
                state = :http_host_start
            elseif is_userinfo_char(ch)
                state = :http_userinfo
            else
                error(""Unexpected character '$ch' in userinfo"")
            end
        elseif state == :http_host_start
            if ch == '['
                state = :http_host_v6_start
            elseif is_host_char(ch)
                state = :http_host
            else
                error(""Unexpected character '$ch' at the beginning of the host string"")
            end
        elseif state == :http_host
            if ch == ':'
                state = :http_host_port_start
            elseif !is_host_char(ch)
                error(""Unexpected character '$ch' in host"")
            end
        elseif state == :http_host_v6_end
            if ch != ':'
                error(""Only port allowed in authority after IPv6 address"")
            end
            state = :http_host_port_start
        elseif state == :http_host_v6 || state == :http_host_v6_start
            if ch == ']' && state == :http_host_v6
                state = :http_host_v6_end
            elseif ishex(ch) || ch == ':' || ch == '.'
                state = :http_host_v6
            else
                error(""Unrecognized character in IPv6 address"")
            end
        elseif state == :http_host_port || state == :http_host_port_start
            if !isnum(ch)
                error(""Port must be numeric (decimal)"")
            end
            state = :http_host_port
        else
            error(""Unexpected state $state"")
        end
    end
    (host, @compat(UInt16(port == """" ? 0 : parse(Int,port,10))), user)
end

function parse_url(url)
    scheme = """"
    host = """"
    server = """"
    port = 80
    query = """"
    fragment = """"
    username = """"
    pass = """"
    path = """"
    last_state = state = :req_spaces_before_url
    seen_at = false
    specifies_authority = false

    i =",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0Pchpm
code,"##############################################################################
##
## Reshaping
##
## Also, see issue # ??
##
##############################################################################

##############################################################################
##
## stack()
## melt()
##
##############################################################################

""""""
Stacks a DataFrame; convert from a wide to long format


```julia
stack(df::AbstractDataFrame, measure_vars, id_vars)
stack(df::AbstractDataFrame, measure_vars)
stack(df::AbstractDataFrame)
melt(df::AbstractDataFrame, id_vars, measure_vars)
melt(df::AbstractDataFrame, id_vars)
```

### Arguments

* `df` : the AbstractDataFrame to be stacked

* `measure_vars` : the columns to be stacked (the measurement
  variables), a normal column indexing type, like a Symbol,
  Vector{Symbol}, Int, etc.; for `melt`, defaults to all
  variables that are not `id_vars`

* `id_vars` : the identifier columns that are repeated during
  stacking, a normal column indexing type; for `stack` defaults to all
  variables that are not `measure_vars`

If neither `measure_vars` or `id_vars` are given, `measure_vars`
defaults to all floating point columns.

### Result

* `::DataFrame` : the long-format dataframe with column `:value`
  holding the values of the stacked columns (`measure_vars`), with
  column `:variable` a Vector of Symbols with the `measure_vars` name,
  and with columns for each of the `id_vars`.

See also `stackdf` and `meltdf` for stacking methods that return a
view into the original DataFrame. See `unstack` for converting from
long to wide format.


### Examples

```julia
d1 = DataFrame(a = repeat([1:3;], inner = [4]),
               b = repeat([1:4;], inner = [3]),
               c = randn(12),
               d = randn(12),
               e = map(string, 'a':'l'))

d1s = stack(d1, [:c, :d])
d1s2 = stack(d1, [:c, :d], [:a])
d1m = melt(d1, [:a, :b, :e])
```

""""""
function stack(df::AbstractDataFrame, measure_vars::Vector{Int}, id_vars::Vector{Int})
    N = length(measure_vars)
    cnames = names(df)[id_vars]
    insert!(cnames, 1, :value)
    insert!(cnames, 1, :variable)
    DataFrame(Any[Compat.repeat(_names(df)[measure_vars], inner=nrow(df)),   # variable
                  vcat([df[c] for c in measure_vars]...),                    # value
                  [Compat.repeat(df[c], outer=N) for c in id_vars]...],      # id_var columns
              cnames)
end
function stack(df::AbstractDataFrame, measure_vars::Int, id_vars::Int)
    stack(df, [measure_vars], [id_vars])
end
function stack(df::AbstractDataFrame, measure_vars::Vector{Int}, id_vars::Int)
    stack(df, measure_vars, [id_vars])
end
function stack(df::AbstractDataFrame, measure_vars::Int, id_vars::Vector{Int})
    stackdf(df, [measure_vars], id_vars)
end
stack(df::AbstractDataFrame, measure_vars, id_vars) =
    stack(df, index(df)[measure_vars], index(df)[id_vars])
function stack(df::AbstractDataFrame, measure_vars)
    mv_inds = index(df)[measure_vars]
    stack(df, mv_inds, _setdiff(1:ncol(df), mv_inds))
end
function stack(df::AbstractDataFrame)
    idx = [1:length(df);][[t <: AbstractFloat for t in eltypes(df)]]
    stack(df, idx)
end

""""""
Stacks a DataFrame; convert from a wide to long format; see
`stack`.
""""""
melt(df::AbstractDataFrame, id_vars::@compat(Union{Int,Symbol})) = melt(df, [id_vars])
function melt(df::AbstractDataFrame, id_vars)
    id_inds = index(df)[id_vars]
    stack(df, _setdiff(1:ncol(df), id_inds), id_inds)
end
melt(df::AbstractDataFrame, id_vars, measure_vars) = stack(df, measure_vars, id_vars)
melt(df::AbstractDataFrame) = stack(df)

##############################################################################
##
## unstack()
##
##############################################################################

""""""
Unstacks a DataFrame; convert from a long to wide format

```julia
unstack(df::AbstractDataFrame, rowkey, colkey, value)
unstack(df::AbstractDataFrame, colkey, value)
unstack(df::AbstractDataFrame)
```

### Arguments

* `df` : the AbstractDataFrame to be unstacked

* `rowkey` : the column with a unique key for each row, if not given,
  find a key by grouping on anything not a `colkey` or `value`

* `colkey` : the column holding the column names in wide format,
  defaults to `:variable`

* `value` : the value column, defaults to `:value`

### Result

* `::DataFrame` : the wide-format dataframe


### Examples

```julia
wide = DataFrame(id = 1:12,
                 a  = repeat([1:3;], inner = [4]),
                 b  = repeat([1:4;], inner = [3]),
                 c  = randn(12),
                 d  = randn(12))

long = stack(wide)
wide0 = unstack(long)
wide1 = unstack(long, :variable, :value)
wide2 = unstack(long, :id, :variable, :value)
```
Note that there are some differences between the widened results above.

""""""
function unstack(df::AbstractDataFrame, rowkey::Int, colkey::Int, value::Int)
    # `rowkey` integer indicating which column to place along rows
    # `colkey` integer indicating which column to place along column headers
    # `value` integer ind",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0FgbzT
code,"import JSON

# from https://github.com/JuliaLang/JSON.jl/issues/39
# but without `flatten` or `Nullable`
function deserialize(::Type{T}, json::AbstractString) where T
    deserialize(T, JSON.parse(json))
end

function deserialize(::Type{T}, json::Dict) where T
    T([deserialize(T, f, json) for f in fieldnames(T)]...)
end

function deserialize(::Type{Tf}, field::AbstractString, json::Dict) where Tf
    deserialize(Tf, json[field])
end

function deserialize(::Type{T}, field::Symbol, json::Dict) where T
    deserialize(fieldtype(T,field), string(field), json)
end

function deserialize(::Type{T}, i::Integer) where T<:Integer
    T(i)
end

function deserialize(::Type{T}, i::AbstractString) where T<:Integer
    parse(T, i)
end

function deserialize(::Type{T}, i::AbstractFloat) where T<:AbstractFloat
    T(i)
end

function deserialize(::Type{T}, i::AbstractString) where T<:AbstractFloat
    parse(T, i)
end

# my own extension to vectors
function deserialize(::Type{Vector{T}}, A::Vector{Any}) where T
    T[deserialize(T, a) for a in A]
end

function read_instance(prefix, key::String)
    open(joinpath(prefix, ""$(key).instance.json"")) do f
        PipeLayout.deserialize(Instance, readstring(f))
    end
end
read_instance(key::String) = read_instance(""."", key)

function read_topology(prefix, key::String)
    open(joinpath(prefix, ""$(key).topology.json"")) do f
        PipeLayout.deserialize(Topology, readstring(f))
    end
end
read_topology(key::String) = read_topology(""."", key)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tP6uTI
code,"using MATLAB
using Test

include(""engine.jl"")
include(""matfile.jl"")
include(""matstr.jl"")
include(""mxarray.jl"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zXX_Pd
code,"function onPre(v)
    vee.putreg(v, ESP, 32, 0x40404040)
end

function onPost(v)
    esp = vee.getreg(v, ESP, 32)

    if esp == nil then
        return false
    end

    if ((esp & 0xffff0000) == 0x40400000) and (esp > 0x40404040+16) then
        if vee.hascalls(v) == false and vee.getexit(v) == Return then
            return true
        end
        return false
    end

    return false
end

vee.register(onPre, onPost)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",s8OiNk
code,"require 'p4'

p4 = P4.P4()
pcall(function()
	p4:connect()
	p4.exception_level = 1 -- ignore ""File(s) up-to-date""
	files = p4:run_sync()
end)

for _, e in ipairs(p4.errors) do
	print(e)
end

p4:disconnect()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aGv6aI
code,"
local S = homedecor_i18n.gettext

local function N_(x) return x end

homedecor.register(""ceiling_paint"", {
	description = S(""Textured Ceiling Paint""),
	drawtype = 'signlike',
	tiles = { 'homedecor_ceiling_paint.png' },
	inventory_image = 'homedecor_ceiling_paint_roller.png',
	wield_image = 'homedecor_ceiling_paint_roller.png',
	walkable = false,
	groups = { snappy = 3 },
	sounds = default.node_sound_leaves_defaults(),
	selection_box = { type = ""wallmounted"" },
})

homedecor.register(""ceiling_tile"", {
	description = S(""Drop-Ceiling Tile""),
	drawtype = 'signlike',
	tiles = { 'homedecor_ceiling_tile.png' },
	wield_image = 'homedecor_ceiling_tile.png',
	inventory_image = 'homedecor_ceiling_tile.png',
	walkable = false,
	groups = { snappy = 3 },
	sounds = default.node_sound_leaves_defaults(),
	selection_box = { type = ""wallmounted"" },
})

local rug_types = {
	{ N_(""small""),   ""homedecor_small_rug.obj""    },
	{ N_(""large""),   homedecor.box.slab_y(0.0625) },
	{ N_(""persian""), homedecor.box.slab_y(0.0625) },
}

for _, rt in ipairs(rug_types) do
	local s, m = unpack(rt)

	local mesh = m
	local nodebox = nil
	local tiles = { ""homedecor_rug_""..s.."".png"", ""wool_grey.png"" }

	if type(m) == ""table"" then
		mesh = nil
		nodebox = {
			type = ""fixed"",
			fixed = m
		}
		tiles = {
			""homedecor_rug_""..s.."".png"",
			""wool_grey.png"",
			""homedecor_rug_""..s.."".png""
		}
	end

	homedecor.register(""rug_""..s, {
		description = S(""Rug (@1)"", S(s)),
		mesh = mesh,
		tiles = tiles,
		node_box = nodebox,
		paramtype2 = ""wallmounted"",
		walkable = false,
		groups = {snappy = 3},
		sounds = default.node_sound_leaves_defaults(),
		selection_box = { type = ""wallmounted"" },
	})
end

local pot_colors = { N_(""black""), N_(""green""), N_(""terracotta"") }

for _, p in ipairs(pot_colors) do
homedecor.register(""flower_pot_""..p, {
	description = S(""Flower Pot (@1)"", S(p)),
	mesh = ""homedecor_flowerpot.obj"",
	tiles = {
		""homedecor_flower_pot_""..p.."".png"",
		{ name = ""default_dirt.png"", color = 0xff505050 },
	},
	groups = { snappy = 3, potting_soil=1 },
	sounds = default.node_sound_stone_defaults(),
})
end

local flowers_list = {
	{ S(""Rose""),				""rose"",				""flowers:rose"" },
	{ S(""Tulip""),				""tulip"",			""flowers:tulip"" },
	{ S(""Yellow Dandelion""),	""dandelion_yellow"",	""flowers:dandelion_yellow"" },
	{ S(""White Dandelion""), 	""dandelion_white"",	""flowers:dandelion_white"" },
	{ S(""Blue Geranium""),		""geranium"",			""flowers:geranium"" },
	{ S(""Viola""),				""viola"",			""flowers:viola"" },
	{ S(""Cactus""),				""cactus"",			""default:cactus"" },
	{ S(""Bonsai""),				""bonsai"",			""default:sapling"" }
}

for _, f in ipairs(flowers_list) do
	local flowerdesc, flower, craftwith = unpack(f)

	homedecor.register(""potted_""..flower, {
		description = S(""Potted flower (@1)"", flowerdesc),
		mesh = ""homedecor_potted_plant.obj"",
		tiles = {
			""homedecor_flower_pot_terracotta.png"",
			{ name = ""default_dirt.png"", color = 0xff303030 },
			""flowers_""..flower.."".png""
		},
		walkable = false,
		groups = {snappy = 3},
		sounds = default.node_sound_glass_defaults(),
		selection_box = {
			type = ""fixed"",
			fixed = { -0.2, -0.5, -0.2, 0.2, 0.3, 0.2 }
		}
	})

	minetest.register_craft({
		type = ""shapeless"",
		output = ""homedecor:potted_""..flower,
		recipe = { craftwith, ""homedecor:flower_pot_small"" }
	})

	minetest.register_alias(""flowers:flower_""..flower..""_pot"", ""homedecor:potted_""..flower)
	minetest.register_alias(""flowers:potted_""..flower, ""homedecor:potted_""..flower)
	minetest.register_alias(""flowers:flower_pot"", ""homedecor:flower_pot_small"")
end

homedecor.register(""pole_brass"", {
    description = S(""Brass Pole""),
	mesh = ""homedecor_round_pole.obj"",
    tiles = {""homedecor_generic_metal_brass.png^homedecor_generic_metal_lines_overlay.png"",},
    inventory_image = ""homedecor_pole_brass_inv.png"",
    wield_image = ""homedecor_pole_brass_inv.png"",
    selection_box = {
            type = ""fixed"",
            fixed = { -0.125, -0.5, -0.125, 0.125, 0.5, 0.125 },
    },
    collision_box = {
            type = ""fixed"",
            fixed = { -0.125, -0.5, -0.125, 0.125, 0.5, 0.125 },
    },
    groups = {snappy=3},
    sounds = default.node_sound_wood_defaults(),
})

homedecor.register(""pole_wrought_iron"", {
    description = S(""Wrought Iron Pole""),
    tiles = { ""homedecor_generic_metal_wrought_iron.png^homedecor_generic_metal_lines_overlay.png"" },
    inventory_image = ""homedecor_pole_wrought_iron_inv.png"",
    wield_image = ""homedecor_pole_wrought_iron_inv.png"",
    selection_box = {
            type = ""fixed"",
            fixed = {-0.0625, -0.5, -0.0625, 0.0625, 0.5, 0.0625}
    },
	node_box = {
		type = ""fixed"",
                fixed = {-0.0625, -0.5, -0.0625, 0.0625, 0.5, 0.0625}
	},
    groups = {snappy=3},
    sounds = default.node_sound_wood_defaults(),
})

local ft_cbox = {
	type = ""fixed"",
	fixed = { -0.5, -0.5, -0.375, 0.5, 0.3125, 0.375 }
}

homedecor.register(""fishtank"", {
	description = S(""Fishtank""),
	mesh = ""homedecor_fishtank.obj"",
	tiles = {
		{ name = ""homedecor_generic_plastic.png"", color = homedecor.color_black },
		""homedecor_fishtank_filter.png"",
		""homedecor_fishtank_fishes.png"",
		""home",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rAhQoN
code,"local setmetatable = setmetatable
local type = type
local next = next
local ipairs = ipairs
local table_insert = table.insert
local string_lower = string.lower
local string_format = string.format

local utils = require(""lor.lib.utils.utils"")
local supported_http_methods = require(""lor.lib.methods"")
local ActionHolder = require(""lor.lib.holder"").ActionHolder
local handler_error_tip = ""handler must be `function` that matches `function(req, res, next) ... end`""
local middlware_error_tip = ""middlware must be `function` that matches `function(req, res, next) ... end`""
local error_middlware_error_tip = ""error middlware must be `function` that matches `function(err, req, res, next) ... end`""
local node_count = 0

local function gen_node_id()
    local prefix = ""node-""
    local worker_part = ""dw""
    if ngx and ngx.worker and ngx.worker.id() then
        worker_part = ngx.worker.id()
    end
    node_count = node_count + 1 -- simply count for lua vm level
    local unique_part = node_count
    local random_part = utils.random()
    local node_id = prefix .. worker_part  .. ""-"" .. unique_part .. ""-"" .. random_part
    return node_id
end

local function check_method(method)
    if not method then return false end

    method = string_lower(method)
    if not supported_http_methods[method] then
        return false
    end

    return true
end

local Node = {}

function Node:new(root)
    local is_root = false
    if root == true then
        is_root = true
    end

    local instance = {
        id = gen_node_id(),
        is_root = is_root,
        name = """",
        allow = """",
        pattern = """",
        endpoint = false,
        parent = nil,
        colon_parent = nil,
        children  = {},
        colon_child= nil,
        handlers = {},
        middlewares = {},
        error_middlewares = {},
        regex = nil
    }
    setmetatable(instance, {
        __index = self,
        __tostring = function(s)
            local ok, result = pcall(function()
                return string_format(""name: %s"", s.id)
            end)
            if ok then
                return result
            else
                return ""node.tostring() error""
            end
        end
    })
    return instance
end

function Node:find_child(key)
    --print(""find_child: "", self.id, self.name, self.children)
    for _, c in ipairs(self.children) do
        if key == c.key then
            return c.val
        end
    end
    return nil
end

function Node:find_handler(method)
    method = string_lower(method)
    if not self.handlers or not self.handlers[method] or #self.handlers[method] == 0 then
        return false
    end

    return true
end

function Node:use(...)
    local middlewares = {...}
    if not next(middlewares) then
        error(""middleware should not be nil or empty"")
    end

    local empty = true
    for _, h in ipairs(middlewares) do
        if type(h) == ""function"" then
            local action = ActionHolder:new(h, self, ""middleware"")
            table_insert(self.middlewares, action)
            empty = false
        elseif type(h) == ""table"" then
            for _, hh in ipairs(h) do
                if type(hh) == ""function"" then
                    local action = ActionHolder:new(hh, self, ""middleware"")
                    table_insert(self.middlewares, action)
                    empty = false
                else
                    error(middlware_error_tip)
                end
            end
        else
            error(middlware_error_tip)
        end
    end

    if empty then
        error(""middleware should not be empty"")
    end

    return self
end

function Node:error_use(...)
    local middlewares = {...}
    if not next(middlewares) then
        error(""error middleware should not be nil or empty"")
    end

    local empty = true
    for _, h in ipairs(middlewares) do
        if type(h) == ""function"" then
            local action = ActionHolder:new(h, self, ""error_middleware"")
            table_insert(self.error_middlewares, action)
            empty = false
        elseif type(h) == ""table"" then
            for _, hh in ipairs(h) do
                if type(hh) == ""function"" then
                    local action = ActionHolder:new(hh, self, ""error_middleware"")
                    table_insert(self.error_middlewares, action)
                    empty = false
                else
                    error(error_middlware_error_tip)
                end
            end
        else
            error(error_middlware_error_tip)
        end
    end

    if empty then
        error(""error middleware should not be empty"")
    end

    return self
end

function Node:handle(method, ...)
    method = string_lower(method)
    if not check_method(method) then
        error(""error method: "", method or ""nil"")
    end

    if self:find_handler(method) then
        error(""["" .. self.pattern .. ""] "" .. method .. "" handler exists yet!"")
    end

    if not self.handlers[method] then
        self.handlers[method] = {}
    end

    local empty = true
    local handlers = {...}
    if not next(handlers) then
        error(""han",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ej7eWj
code,"-- Copyright (C) 2018 Tomoyuki Fujimori <moyu@dromozoa.com>
--
-- This file is part of dromozoa-graph.
--
-- dromozoa-graph is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- dromozoa-graph is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with dromozoa-graph.  If not, see <http://www.gnu.org/licenses/>.

local graph = require ""dromozoa.graph""

local verbose = os.getenv ""VERBOSE"" == ""1""

-- A Fast Algorithm for Finding Dominators in a Flowgraph
local g = graph()

local R = g:add_vertex()
local A = g:add_vertex()
local B = g:add_vertex()
local C = g:add_vertex()
local D = g:add_vertex()
local E = g:add_vertex()
local F = g:add_vertex()
local G = g:add_vertex()
local H = g:add_vertex()
local I = g:add_vertex()
local J = g:add_vertex()
local K = g:add_vertex()
local L = g:add_vertex()

g:add_edge(R, A)
g:add_edge(R, B)
g:add_edge(R, C)
g:add_edge(A, D)
g:add_edge(B, A)
g:add_edge(B, D)
g:add_edge(B, E)
g:add_edge(C, F)
g:add_edge(C, G)
g:add_edge(D, L)
g:add_edge(E, H)
g:add_edge(F, I)
g:add_edge(G, I)
g:add_edge(G, J)
g:add_edge(H, E)
g:add_edge(H, K)
g:add_edge(I, K)
g:add_edge(J, I)
g:add_edge(L, H)
g:add_edge(K, R)
g:add_edge(K, I)

local idom = g:find_dominators(R)
if verbose then
  for uid = R, K do
    print(uid, idom[uid])
  end
end
assert(idom[R] == nil)
assert(idom[A] == R)
assert(idom[B] == R)
assert(idom[C] == R)
assert(idom[D] == R)
assert(idom[E] == R)
assert(idom[F] == C)
assert(idom[G] == C)
assert(idom[H] == R)
assert(idom[I] == R)
assert(idom[J] == G)
assert(idom[K] == R)
assert(idom[L] == D)

-- ssa-external-japanese.pdf
local g = graph()

local L1 = g:add_vertex()
local L2 = g:add_vertex()
local L3 = g:add_vertex()
local L4 = g:add_vertex()
local L5 = g:add_vertex()
local L6 = g:add_vertex()
local L7 = g:add_vertex()

g:add_edge(L1, L2)
g:add_edge(L1, L6)
g:add_edge(L2, L3)
g:add_edge(L2, L4)
g:add_edge(L3, L5)
g:add_edge(L4, L5)
g:add_edge(L5, L7)
g:add_edge(L6, L7)

local idom = g:find_dominators(L1)
if verbose then
  for uid = 1, 7 do
    print(uid, idom[uid])
  end
end
assert(idom[L1] == nil)
assert(idom[L2] == L1)
assert(idom[L3] == L2)
assert(idom[L4] == L2)
assert(idom[L5] == L2)
assert(idom[L6] == L1)
assert(idom[L7] == L1)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mYYRxk
code,"-----------------------------------
-- Area: Newton Movalpolos
-- NPC:   Moblin Showman
-----------------------------------

-----------------------------------
-- OnMobSpawn Action
-----------------------------------

function onMobSpawn(mob)
end; 

-----------------------------------
-- OnMobDeath Action
-----------------------------------

function onMobDeath(mob,killer)
	GetNPCByID(16826573):hideNPC(900); -- Moblin Showman in NPC_List
end;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eB61tN
code,"
---------------------------------------------------------------------------------------------
-- CRQ: APPLINK-25169: [GENIVI] Navigation interface: SDL behavior in case HMI does not respond to 
--                     IsReady_request or respond with ""available"" = false
--
-- Requirement(s): APPLINK-25185 [Navigation Interface] SDL behavior in case HMI does not respond to Navi.IsReady_request 
--                 		   APPLINK-25301:[HMI_API] Navi.IsReady
---------------------------------------------------------------------------------------------


TestedInterface = ""Navigation""
Tested_resultCode = ""SUCCESS"" 
Tested_wrongJSON = true


Test = require('user_modules/IsReady_Template/ATF_Interface_IsReady_missing_SingleRPC_Template')

return Test
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EzMaSB
code,"--[[ 
▀▄ ▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀▄▀▄▄▀▀▄▄▀▀▄▄▀▀▄▄▀▀          
▀▄ ▄▀                                      ▀▄ ▄▀ 
▀▄ ▄▀    BY SAJJAD HUSSIEN                 ▀▄ ▄▀ 
▀▄ ▄▀   BY SAJJADHUSSIEN   (@TH3_Evil)     ▀▄ ▄▀    
▀▄ ▄  JUST WRITED BY SAJJAD HUSSIEN        ▀▄ ▄▀   
▀▄ ▄▀      ban hammer  : الطرد والحظر      ▀▄ ▄▀ 
▀▄▀▀▄▄▀▀▄▄▀▄▄▀▀▄▄▀▀▄▄▀▄▄▀▀▄▄▀▀▄▄▀▄▄▀▀▄▄▀▀▄▄▀▄▄▀▀
--]]

local function pre_process(msg)
  local data = load_data(_config.moderation.data)
  -- SERVICE MESSAGE
  if msg.action and msg.action.type then
    local action = msg.action.type
    -- Check if banned user joins chat by link
    if action == 'chat_add_user_link' then
      local user_id = msg.from.id
      print('Checking invited user '..user_id)
      local banned = is_banned(user_id, msg.to.id)
      if banned or is_gbanned(user_id) then -- Check it with redis
      print('User is banned!')
      local print_name = user_print_name(msg.from):gsub(""‮"", """")
	  local name = print_name:gsub(""_"", """")
      savelog(msg.to.id, name.."" [""..msg.from.id..""] is banned and kicked ! "")-- Save to logs
      kick_user(user_id, msg.to.id)
      end
    end
    -- Check if banned user joins chat
    if action == 'chat_add_user' then
      local user_id = msg.action.user.id
      print('Checking invited user '..user_id)
      local banned = is_banned(user_id, msg.to.id)
      if banned and not is_momod2(msg.from.id, msg.to.id) or is_gbanned(user_id) and not is_admin2(msg.from.id) then -- Check it with redis
        print('User is banned!')
      local print_name = user_print_name(msg.from):gsub(""‮"", """")
	  local name = print_name:gsub(""_"", """")
        savelog(msg.to.id, name.."" [""..msg.from.id..""] added a banned user >""..msg.action.user.id)-- Save to logs
        kick_user(user_id, msg.to.id)
        local banhash = 'addedbanuser:'..msg.to.id..':'..msg.from.id
        redis:incr(banhash)
        local banhash = 'addedbanuser:'..msg.to.id..':'..msg.from.id
        local banaddredis = redis:get(banhash)
        if banaddredis then
          if tonumber(banaddredis) >= 4 and not is_owner(msg) then
            kick_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 3 times
          end
          if tonumber(banaddredis) >=  8 and not is_owner(msg) then
            ban_user(msg.from.id, msg.to.id)-- Kick user who adds ban ppl more than 7 times
            local banhash = 'addedbanuser:'..msg.to.id..':'..msg.from.id
            redis:set(banhash, 0)-- Reset the Counter
          end
        end
      end
     if data[tostring(msg.to.id)] then
       if data[tostring(msg.to.id)]['settings'] then
         if data[tostring(msg.to.id)]['settings']['lock_bots'] then
           bots_protection = data[tostring(msg.to.id)]['settings']['lock_bots']
          end
        end
      end
    if msg.action.user.username ~= nil then
      if string.sub(msg.action.user.username:lower(), -3) == 'bot' and not is_momod(msg) and bots_protection == ""yes"" then --- Will kick bots added by normal users
          local print_name = user_print_name(msg.from):gsub(""‮"", """")
		  local name = print_name:gsub(""_"", """")
          savelog(msg.to.id, name.."" [""..msg.from.id..""] added a bot > @"".. msg.action.user.username)-- Save to logs
          kick_user(msg.action.user.id, msg.to.id)
      end
    end
  end
    -- No further checks
  return msg
  end
  -- banned user is talking !
  if msg.to.type == 'chat' or msg.to.type == 'channel' then
    local group = msg.to.id
    local texttext = 'groups'
    --if not data[tostring(texttext)][tostring(msg.to.id)] and not is_realm(msg) then -- Check if this group is one of my groups or not
    --chat_del_user('chat#id'..msg.to.id,'user#id'..our_id,ok_cb,false)
    --return
    --end
    local user_id = msg.from.id
    local chat_id = msg.to.id
    local banned = is_banned(user_id, chat_id)
    if banned or is_gbanned(user_id) then -- Check it with redis
      print('Banned user talking!')
      local print_name = user_print_name(msg.from):gsub(""‮"", """")
	  local name = print_name:gsub(""_"", """")
      savelog(msg.to.id, name.."" [""..msg.from.id..""] banned user is talking !"")-- Save to logs
      kick_user(user_id, chat_id)
      msg.text = ''
    end
  end
  return msg
end

local function kick_ban_res(extra, success, result)
      local chat_id = extra.chat_id
	  local chat_type = extra.chat_type
	  if chat_type == ""chat"" then
		receiver = 'chat#id'..chat_id
	  else
		receiver = 'channel#id'..chat_id
	  end
	  if success == 0 then
		return send_large_msg(receiver, ""Cannot find user by that username!"")
	  end
      local member_id = result.peer_id
      local user_id = member_id
      local member = result.username
	  local from_id = extra.from_id
      local get_cmd = extra.get_cmd
       if get_cmd == ""دي"" then
         if member_id == from_id then
            send_large_msg(receiver, ""⚠️ لا تستطيع ✋ طرد نفسك 💢👍"")
			return
         end
         if is_momod2(member_id, chat_id) and not is_admin2(sender) then
            send_large_msg(receiver, ""⚠️ لا تستطيع ✋❗️ طرد الادمنيه ❗️ او المدراء 💢👍"")
			return
         end
		 kick_user(member_id, chat_id)
      e",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9KyBuH
code,"--[[
	Craftitems
--]]

minetest.register_craftitem(""outback:aluminium_lump"", {
	description = ""Aluminium Lump"",
	inventory_image = ""ob_aluminium_lump.png"",
})

minetest.register_craftitem(""outback:nickel_lump"", {
	description = ""Nickel Lump"",
	inventory_image = ""ob_nickel_lump.png"",
})

minetest.register_craftitem(""outback:silver_lump"", {
	description = ""Silver Lump"",
	inventory_image = ""ob_silver_lump.png"",
})

minetest.register_craftitem(""outback:aluminium_ingot"", {
	description = ""Aluminium Ingot"",
	inventory_image = ""ob_aluminium_ingot.png"",
})

minetest.register_craftitem(""outback:nickel_ingot"", {
	description = ""Nickel Ingot"",
	inventory_image = ""ob_nickel_ingot.png"",
})

minetest.register_craftitem(""outback:silver_ingot"", {
	description = ""Silver Ingot"",
	inventory_image = ""ob_silver_ingot.png"",
})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3DNmgy
code,"
local PANEL = {}

local strAllowedNumericCharacters = ""1234567890.-""

AccessorFunc( PANEL, ""m_bAllowEnter"", ""EnterAllowed"", FORCE_BOOL )
AccessorFunc( PANEL, ""m_bUpdateOnType"", ""UpdateOnType"", FORCE_BOOL ) -- Update the convar as we type
AccessorFunc( PANEL, ""m_bNumeric"", ""Numeric"", FORCE_BOOL )
AccessorFunc( PANEL, ""m_bHistory"", ""HistoryEnabled"", FORCE_BOOL )
AccessorFunc( PANEL, ""m_bDisableTabbing"", ""TabbingDisabled"", FORCE_BOOL )

AccessorFunc( PANEL, ""m_FontName"", ""Font"" )
AccessorFunc( PANEL, ""m_bBorder"", ""DrawBorder"" )
AccessorFunc( PANEL, ""m_bBackground"", ""PaintBackground"" )
AccessorFunc( PANEL, ""m_bBackground"", ""DrawBackground"" ) -- Deprecated

AccessorFunc( PANEL, ""m_colText"", ""TextColor"" )
AccessorFunc( PANEL, ""m_colHighlight"", ""HighlightColor"" )
AccessorFunc( PANEL, ""m_colCursor"", ""CursorColor"" )

Derma_Install_Convar_Functions( PANEL )

function PANEL:Init()

	self:SetHistoryEnabled( false )
	self.History = {}
	self.HistoryPos = 0

	--
	-- We're going to draw these ourselves in
	-- the skin system - so disable them here.
	-- This will leave it only drawing text.
	--
	self:SetPaintBorderEnabled( false )
	self:SetPaintBackgroundEnabled( false )

	--
	-- These are Lua side commands
	-- Defined above using AccessorFunc
	--
	self:SetDrawBorder( true )
	self:SetPaintBackground( true )
	self:SetEnterAllowed( true )
	self:SetUpdateOnType( false )
	self:SetNumeric( false )
	self:SetAllowNonAsciiCharacters( true )

	-- Nicer default height
	self:SetTall( 20 )

	-- Clear keyboard focus when we click away
	self.m_bLoseFocusOnClickAway = true

	-- Beam Me Up Scotty
	self:SetCursor( ""beam"" )

	self:SetFont( ""DermaDefault"" )

end

function PANEL:IsEditing()
	return self == vgui.GetKeyboardFocus()
end

function PANEL:OnKeyCodeTyped( code )

	self:OnKeyCode( code )

	if ( code == KEY_ENTER && !self:IsMultiline() && self:GetEnterAllowed() ) then

		if ( IsValid( self.Menu ) ) then
			self.Menu:Remove()
		end

		self:FocusNext()
		self:OnEnter()
		self.HistoryPos = 0

	end

	if ( self.m_bHistory || IsValid( self.Menu ) ) then

		if ( code == KEY_UP ) then
			self.HistoryPos = self.HistoryPos - 1
			self:UpdateFromHistory()
		end

		if ( code == KEY_DOWN || code == KEY_TAB ) then
			self.HistoryPos = self.HistoryPos + 1
			self:UpdateFromHistory()
		end

	end

end

function PANEL:OnKeyCode( code )
end

function PANEL:ApplySchemeSettings()

	self:SetFontInternal( self.m_FontName )

	derma.SkinHook( ""Scheme"", ""TextEntry"", self )

end

function PANEL:GetTextColor()

	return self.m_colText || self:GetSkin().colTextEntryText

end

function PANEL:GetHighlightColor()

	return self.m_colHighlight || self:GetSkin().colTextEntryTextHighlight

end

function PANEL:GetCursorColor()

	return self.m_colCursor || self:GetSkin().colTextEntryTextCursor

end

function PANEL:UpdateFromHistory()

	if ( IsValid( self.Menu ) ) then
		return self:UpdateFromMenu()
	end

	local pos = self.HistoryPos
	-- Is the Pos within bounds?
	if ( pos < 0 ) then pos = #self.History end
	if ( pos > #self.History ) then pos = 0 end

	local text = self.History[ pos ]
	if ( !text ) then text = """" end

	self:SetText( text )
	self:SetCaretPos( text:len() )

	self:OnTextChanged()

	self.HistoryPos = pos

end

function PANEL:UpdateFromMenu()

	local pos = self.HistoryPos
	local num = self.Menu:ChildCount()

	self.Menu:ClearHighlights()

	if ( pos < 0 ) then pos = num end
	if ( pos > num ) then pos = 0 end

	local item = self.Menu:GetChild( pos )
	if ( !item ) then
		self:SetText( """" )
		self.HistoryPos = pos
		return
	end

	self.Menu:HighlightItem( item )

	local txt = item:GetText()

	self:SetText( txt )
	self:SetCaretPos( txt:len() )

	self:OnTextChanged( true )

	self.HistoryPos = pos

end

function PANEL:OnTextChanged( noMenuRemoval )

	self.HistoryPos = 0

	if ( self:GetUpdateOnType() ) then
		self:UpdateConvarValue()
		self:OnValueChange( self:GetText() )
	end

	if ( IsValid( self.Menu ) && !noMenuRemoval ) then
		self.Menu:Remove()
	end

	local tab = self:GetAutoComplete( self:GetText() )
	if ( tab ) then
		self:OpenAutoComplete( tab )
	end

	self:OnChange()

end

function PANEL:OnChange()
end

function PANEL:OpenAutoComplete( tab )

	if ( !tab ) then return end
	if ( #tab == 0 ) then return end

	self.Menu = DermaMenu()

	for k, v in pairs( tab ) do

		self.Menu:AddOption( v, function() self:SetText( v ) self:SetCaretPos( v:len() ) self:RequestFocus() end )

	end

	local x, y = self:LocalToScreen( 0, self:GetTall() )
	self.Menu:SetMinimumWidth( self:GetWide() )
	self.Menu:Open( x, y, true, self )
	self.Menu:SetPos( x, y )
	self.Menu:SetMaxHeight( ( ScrH() - y ) - 10 )

end

function PANEL:Think()

	self:ConVarStringThink()

end

function PANEL:OnEnter()

	-- For override
	self:UpdateConvarValue()
	self:OnValueChange( self:GetText() )

end

function PANEL:UpdateConvarValue()

	-- This only kicks into action if this variable has
	-- a ConVar associated with it.
	self:ConVarChanged( self:GetValue() )

end

function PANEL:Paint( w, h )

	derma.SkinHook( ""Paint"", ""TextEntry"", self, w, h )
	return false

end

function PANEL:PerformLayout()

	derma.SkinHook( ""Layout"", ""TextEnt",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dtysx6
code,"-----------------------------------------------------------------------------------------
--
-- main.lua
--
-----------------------------------------------------------------------------------------

-- Your code here

Constituion=display.newImage(""Constituion.jpeg""100,100)
Constituion.x=0
Constituion.y=0",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lGqfVF
code,"local h = require 'controller_helpers'
local Brain = require 'brain'

return {
  search = function(params)
    local results = Brain.search_middleware(
        params.endpoint,
        params.query,
        params.per_page,
        params.page
    )
    h.send_json(results)
  end,

  show = function(params)
      local middleware = Brain.show_middleware(params.id)
      h.send_json(middleware)
  end
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JfCHRN
code,"local inspect ={
  _VERSION = 'inspect.lua 3.0.2',
  _URL     = 'http://github.com/kikito/inspect.lua',
  _DESCRIPTION = 'human-readable representations of tables',
  _LICENSE = [[
    MIT LICENSE

    Copyright (c) 2013 Enrique García Cota

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the
    ""Software""), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ]]
}

inspect.KEY       = setmetatable({}, {__tostring = function() return 'inspect.KEY' end})
inspect.METATABLE = setmetatable({}, {__tostring = function() return 'inspect.METATABLE' end})

-- returns the length of a table, ignoring __len (if it exists)
local rawlen = _G.rawlen or function(t) return #t end

-- Apostrophizes the string if it has quotes, but not aphostrophes
-- Otherwise, it returns a regular quoted string
local function smartQuote(str)
  if str:match('""') and not str:match(""'"") then
    return ""'"" .. str .. ""'""
  end
  return '""' .. str:gsub('""', '\\""') .. '""'
end

local controlCharsTranslation = {
  [""\a""] = ""\\a"",  [""\b""] = ""\\b"", [""\f""] = ""\\f"",  [""\n""] = ""\\n"",
  [""\r""] = ""\\r"",  [""\t""] = ""\\t"", [""\v""] = ""\\v""
}

local function escape(str)
  local result = str:gsub(""\\"", ""\\\\""):gsub(""(%c)"", controlCharsTranslation)
  return result
end

local function isIdentifier(str)
  return type(str) == 'string' and str:match( ""^[_%a][_%a%d]*$"" )
end

local function isSequenceKey(k, length)
  return type(k) == 'number'
     and 1 <= k
     and k <= length
     and math.floor(k) == k
end

local defaultTypeOrders = {
  ['number']   = 1, ['boolean']  = 2, ['string'] = 3, ['table'] = 4,
  ['function'] = 5, ['userdata'] = 6, ['thread'] = 7
}

local function sortKeys(a, b)
  local ta, tb = type(a), type(b)

  -- strings and numbers are sorted numerically/alphabetically
  if ta == tb and (ta == 'string' or ta == 'number') then return a < b end

  local dta, dtb = defaultTypeOrders[ta], defaultTypeOrders[tb]
  -- Two default types are compared according to the defaultTypeOrders table
  if dta and dtb then return defaultTypeOrders[ta] < defaultTypeOrders[tb]
  elseif dta     then return true  -- default types before custom ones
  elseif dtb     then return false -- custom types after default ones
  end

  -- custom types are sorted out alphabetically
  return ta < tb
end

local function getNonSequentialKeys(t)
  local keys, length = {}, rawlen(t)
  for k,_ in pairs(t) do
    if not isSequenceKey(k, length) then table.insert(keys, k) end
  end
  table.sort(keys, sortKeys)
  return keys
end

local function getToStringResultSafely(t, mt)
  local __tostring = type(mt) == 'table' and rawget(mt, '__tostring')
  local str, ok
  if type(__tostring) == 'function' then
    ok, str = pcall(__tostring, t)
    str = ok and str or 'error: ' .. tostring(str)
  end
  if type(str) == 'string' and #str > 0 then return str end
end

local maxIdsMetaTable = {
  __index = function(self, typeName)
    rawset(self, typeName, 0)
    return 0
  end
}

local idsMetaTable = {
  __index = function (self, typeName)
    local col = {}
    rawset(self, typeName, col)
    return col
  end
}

local function countTableAppearances(t, tableAppearances)
  tableAppearances = tableAppearances or {}

  if type(t) == 'table' then
    if not tableAppearances[t] then
      tableAppearances[t] = 1
      for k,v in pairs(t) do
        countTableAppearances(k, tableAppearances)
        countTableAppearances(v, tableAppearances)
      end
      countTableAppearances(getmetatable(t), tableAppearances)
    else
      tableAppearances[t] = tableAppearances[t] + 1
    end
  end

  return tableAppearances
end

local copySequence = function(s)
  local copy, len = {}, #s
  for i=1, len do copy[i] = s[i] end
  return copy, len
end

local function makePath(path, ...)
  local keys = {...}
  local newPath, len = copySequence(path)
  for i=1, #keys do
    newPath[len + i] = keys[i]
  end
  return newPath
end

local function processRecursive(process, item, path)
  if item == nil then return nil end

  local processed = process(item, path)
  if type(processed) == 'table' then
    local processedCopy = {}
    local processedKey

    for k,v in pairs(processed) do
      processedKey ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZpLjMd
code,"-----------------------------------
-- Area: Nashmau
-- NPC: Wafeeyah
-- Standard Info NPC
-----------------------------------
package.loaded[""scripts/zones/Nashmau/TextIDs""] = nil;
-----------------------------------

require(""scripts/zones/Nashmau/TextIDs"");

-----------------------------------
-- onTrade Action
-----------------------------------

function onTrade(player,npc,trade)
end; 

-----------------------------------
-- onTrigger Action
-----------------------------------

function onTrigger(player,npc)
player:startEvent(0x000B);
end; 

-----------------------------------
-- onEventUpdate
-----------------------------------

function onEventUpdate(player,csid,option)
--printf(""CSID: %u"",csid);
--printf(""RESULT: %u"",option);
end;

-----------------------------------
-- onEventFinish
-----------------------------------

function onEventFinish(player,csid,option)
--printf(""CSID: %u"",csid);
--printf(""RESULT: %u"",option);
end;



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jB6HCX
code,"--バブル・シャッフル
function c61968753.initial_effect(c)
	aux.AddSetNameMonsterList(c,0x3008)
	--pos
	local e1=Effect.CreateEffect(c)
	e1:SetCategory(CATEGORY_POSITION+CATEGORY_SPECIAL_SUMMON)
	e1:SetType(EFFECT_TYPE_ACTIVATE)
	e1:SetProperty(EFFECT_FLAG_CARD_TARGET)
	e1:SetCode(EVENT_FREE_CHAIN)
	e1:SetTarget(c61968753.postg)
	e1:SetOperation(c61968753.posop)
	c:RegisterEffect(e1)
end
function c61968753.filter1(c)
	return c:IsPosition(POS_FACEUP_ATTACK) and c:IsCanChangePosition() and c:IsCode(79979666) and c:IsReleasableByEffect()
end
function c61968753.filter2(c)
	return c:IsPosition(POS_FACEUP_ATTACK) and c:IsCanChangePosition()
end
function c61968753.spfilter(c,e,tp)
	return c:IsSetCard(0x3008) and c:IsCanBeSpecialSummoned(e,0,tp,false,false)
end
function c61968753.postg(e,tp,eg,ep,ev,re,r,rp,chk,chkc)
	if chkc then return false end
	if chk==0 then return Duel.IsExistingTarget(c61968753.filter1,tp,LOCATION_MZONE,0,1,nil)
		and Duel.IsExistingTarget(c61968753.filter2,tp,0,LOCATION_MZONE,1,nil)
		and Duel.GetLocationCount(tp,LOCATION_MZONE)>-1
		and Duel.IsExistingMatchingCard(c61968753.spfilter,tp,LOCATION_HAND,0,1,nil,e,tp) end
	Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_POSCHANGE)
	local g1=Duel.SelectTarget(tp,c61968753.filter1,tp,LOCATION_MZONE,0,1,1,nil)
	e:SetLabelObject(g1:GetFirst())
	Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_POSCHANGE)
	local g2=Duel.SelectTarget(tp,c61968753.filter2,tp,0,LOCATION_MZONE,1,1,nil)
	g1:Merge(g2)
	Duel.SetOperationInfo(0,CATEGORY_POSITION,g1,2,0,0)
	Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_HAND)
end
function c61968753.pfilter(c,e)
	return c:IsPosition(POS_FACEUP_ATTACK) and c:IsRelateToEffect(e)
end
function c61968753.posop(e,tp,eg,ep,ev,re,r,rp)
	local g=Duel.GetChainInfo(0,CHAININFO_TARGET_CARDS):Filter(c61968753.pfilter,nil,e)
	if g:GetCount()==2 and Duel.ChangePosition(g,POS_FACEUP_DEFENSE)~=0 then
		local tc=e:GetLabelObject()
		if not tc:IsImmuneToEffect(e) and tc:IsReleasableByEffect() then
			Duel.BreakEffect()
			if Duel.Release(tc,REASON_EFFECT)==0 or Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end
			Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)
			local sg=Duel.SelectMatchingCard(tp,c61968753.spfilter,tp,LOCATION_HAND,0,1,1,nil,e,tp)
			if sg:GetCount()>0 then
				Duel.BreakEffect()
				Duel.SpecialSummon(sg,0,tp,tp,false,false,POS_FACEUP)
			end
		end
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",245S8z
code,"core:import( ""CoreSequenceManager"" )

CoreUnitDamage = CoreUnitDamage or class()
UnitDamage = UnitDamage or class( CoreUnitDamage )

local ids_damage = Idstring(""damage"")

function CoreUnitDamage:init( unit, default_body_extension_class, body_extension_class_map, ignore_body_collisions, ignore_mover_collisions, mover_collision_ignore_duration )
	self._unit = unit
	self._unit_element = managers.sequence:get( unit:name(), false, true ) -- Create an empty UnitElement if none found.
	self._damage = 0
	-- self._variables = {}
	-- self._sound_sources = {}
	
	
	if self._unit_element._set_variables and next( self._unit_element._set_variables ) then
		self._variables = clone( self._unit_element._set_variables )
	end
	
	-- Used nil variables:
	--self._state = nil
	--self._runned_sequences = nil
	--self._direct_attack_unit = nil
	--self._skip_give_body_collision_damage = nil
	--self._skip_give_mover_collision_damage = nil
	--self._skip_receive_body_collision_damage = nil
	--self._skip_receive_mover_collision_damage = nil
	--self._skip_give_body_collision_velocity = nil
	--self._skip_give_mover_collision_velocity = nil
	--self._enemy_killed_reported = nil
	--self._inherit_destroy_unit_list = nil

-- Updates:
	--self._update_func_map = nil
	--self._update_func_count = nil
	--self._ids_damage = Idstring( ""damage"" )
	self._unit:set_extension_update_enabled( ids_damage, self._update_func_map ~= nil )


-- Proximity:
	-- Used nil variables:
	--self._proximity_env = nil
	--self._proximity_count = nil
	--self._proximity_enabled_count = nil
	--self._proximity_map = nil

	for name, element in pairs( self._unit_element:get_proximity_element_map() ) do
		local data = {}
		data.name = name
		data.enabled = element:get_enabled()
		data.ref_object = element:get_ref_object() and self._unit:get_object( Idstring( element:get_ref_object() ) )
		data.interval = element:get_interval()
		data.quick = element:is_quick()
		data.is_within = element:get_start_within()
		data.slotmask = element:get_slotmask()
		data.last_check_time = TimerManager:game():time() + math.rand( math.min( data.interval, 0 ) )

		self:populate_proximity_range_data( data, ""within_data"", element:get_within_element() )
		self:populate_proximity_range_data( data, ""outside_data"", element:get_outside_element() )

		self._proximity_map = self._proximity_map or {}
		self._proximity_map[ name ] = data

		self._proximity_count = ( self._proximity_count or 0 ) + 1

		if( data.enabled ) then
			if( not self._proximity_enabled_count ) then
				self._proximity_enabled_count = 0
				self:set_update_callback( ""update_proximity_list"", true )
			end

			self._proximity_enabled_count = self._proximity_enabled_count + 1
		end
	end


-- Triggers:
	--self._trigger_func_list = nil
	--self._last_trigger_id = nil
	--self._editor_trigger_data = nil

	for trigger_name in pairs( self._unit_element:get_trigger_name_map() ) do
		self._trigger_func_list = self._trigger_func_list or {}
		self._trigger_func_list[ trigger_name ] = {}
	end


-- Inflicts:
	--self._inflict_src_body = nil
	--self._inflict_dest_body = nil
	--self._inflict_done = nil


-- Body collisions:
	--self._last_body_collision_callback_id = nil
	--self._body_collision_callback_list = nil


-- Mover collisions:
	--self._last_mover_collision_callback_id = nil
	--self._mover_collision_callback_list = nil

	self._mover_collision_ignore_duration = mover_collision_ignore_duration

	--self._ignore_mover_collision_body_map = nil
	--self._ignore_mover_collision_unit_map = nil
	--self._ignore_body_collision_unit_map = nil

	--self._ignore_mover_on_mover_collisions = nil


-- Creates body damage extensions:
	--self._added_inflict_updator_damage_type_map = nil

	body_extension_class_map = body_extension_class_map or {}

	if( not default_body_extension_class ) then
		default_body_extension_class = CoreBodyDamage
	end

	local inflict_updator_damage_type_map = get_core_or_local( ""InflictUpdator"" ).INFLICT_UPDATOR_DAMAGE_TYPE_MAP
	local unit_key = self._unit:key()
	for _,body_element in pairs( self._unit_element._bodies ) do
		local body = self._unit:body( body_element._name )

		if( body ) then
			body:set_extension( body:extension() or {} )
			local body_ext = ( body_extension_class_map[ body_element._name ] or default_body_extension_class ):new( self._unit, self, body, body_element )
			body:extension().damage = body_ext

			local body_key
			for _,damage_type in pairs( body_ext:get_endurance_map() ) do
				if( inflict_updator_damage_type_map[ damage_type ] ) then
					body_key = body_key or body:key()
					self._added_inflict_updator_damage_type_map = self._added_inflict_updator_damage_type_map or {}
					self._added_inflict_updator_damage_type_map[ damage_type ] = {}
					self._added_inflict_updator_damage_type_map[ damage_type ][ body_key ] = body_ext
					managers.sequence:add_inflict_updator_body( damage_type, unit_key, body_key, body_ext )
				end
			end
		else
			Application:throw_exception( ""Unit \"""" .. self._unit:name():t() .. ""\"" doesn't have the body \"""" .. body_element._name .. ""\"" that was loaded into the SequenceManager."" )
		end
	end


-- Register c",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BIam_-
code,"-----------------------------------
-- Area: Upper Delkfutt's Tower
-- NPC:  HomePoint#1
-- @pos -365 -176.5 -36 158
-----------------------------------

package.loaded[""scripts/zones/Upper_Delkfutts_Tower/TextIDs""] = nil;

require(""scripts/globals/settings"");
require(""scripts/zones/Upper_Delkfutts_Tower/TextIDs"");
require(""scripts/globals/homepoint"");

-----------------------------------
-- onTrade Action
-----------------------------------

function onTrade(player,npc,trade)
end; 

-----------------------------------
-- onTrigger Action
-----------------------------------

function onTrigger(player,npc)

    homepointMenu( player, 0x21fc, 71);
end; 

-----------------------------------
-- onEventUpdate
-----------------------------------

function onEventUpdate(player,csid,option)
    --printf(""CSID: %u"",csid);
    --printf(""RESULT: %u"",option);
end;

-----------------------------------
-- onEventFinish
-----------------------------------

function onEventFinish(player,csid,option)
    --printf(""CSID: %u"",csid);
    --printf(""RESULT: %u"",option);

    if (csid == 0x21fc) then

        if (option == 1) then    
            player:setHomePoint();
            player:messageSpecial(HOMEPOINT_SET);
        else
            hpTeleport( player, option);
        end
    end
end;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TyK771
code,"-- vim:set sw=4 ts=4:
--
-- This Lua script reads texture data from a .bmp file.
-- NOTE: only partial .bmp support is provided (enough for loading
--       Forsaken texture data).
--
-- Copyright (C) 2009  Pim Goossens
--
-- This program is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License along
-- with this program; if not, see <http://www.gnu.org/licenses/>, or write
-- to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
-- Boston, MA 02110-1301 USA.

local f = binfile(io.open(..., 'rb'))
if not f:binread('h') == 0x4d42 then
	error('not a BMP file')
end
local size = f:binread('i')
if size <= 0 then
	error(('invalid size specification (%d)'):format(size))
end
-- Ignore reserved value
f:binread('i')
local offset = f:binread('i')
if offset < 0 then
	error(('invalid offset (%d)'):format(offset))
end
-- Now read the DIB header
local hdrsize, width, height, bpp, format, size2 = f:binread('iii??hii')
if bpp ~= 8 and bpp ~= 24 then
	error(('%d bpp not supported'):format(bpp))
end
if format ~= 0 then
	error(('format %d not supported - must be 0 (RGB)'):format(format))
end
if size2 ~= 0 and size ~= size2 + offset then
	error(('invalid image size %d (must be equal to file size %d '
	    .. '+ bitmap data offset %d)'):format(size, size2, offset))
end
-- Skip resolution data
f:read(8)
-- Palette info
local ncolors = f:binread('i????')
if hdrsize > 40 then
	-- Skip additional header info and warn...
	f:read(hdrsize-40)
	warn(('BMP reader: warning: unknown header type (size %d) but '
	   .. 'trying to continue'):format(hdrsize))
end
local colors = {}
if bpp == 8 then
	-- Read the color palette
	for i = 1, ncolors do
		local b, g, r = f:binread('BBB?')
		table.insert(colors, string.char(r, g, b))
	end
end
f:seek(""set"", offset)
-- Now read the pixel data
local data = ''
local rows = {}
for _ = 1, height do
	local row = {}
	for _ = 1, width do
		table.insert(row, colors[f:read(1):byte()+1])
	end
	table.insert(rows, row)
end
f:close()
for i = height, 1, -1 do
	data = data .. table.concat(rows[i])
end

return {
	width = width;
	height = height;
	flags = 0;
	data = data;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4jkGI2
code,"local utils = require ""kong.tools.utils""
local Object = require ""classic""

local Migrations = Object:extend()

-- Instanciate a migrations runner.
-- @param `core_migrations` (Optional) If specified, will use those migrations for core instead of the real ones (for testing).
-- @param `plugins_namespace` (Optional) If specified, will look for plugins there instead of `kong.plugins` (for testing).
function Migrations:new(dao, core_migrations, plugins_namespace)
  dao:load_daos(require(""kong.dao.""..dao.type.."".migrations""))

  if core_migrations then
    self.core_migrations = core_migrations
  else
    self.core_migrations = require(""kong.dao.""..dao.type.."".schema.migrations"")
  end

  self.dao = dao
  self.options = {keyspace = dao._properties.keyspace}
  self.plugins_namespace = plugins_namespace and plugins_namespace or ""kong.plugins""
end

function Migrations:get_migrations(identifier)
  return self.dao.migrations:get_migrations(identifier)
end

function Migrations:migrate(identifier, callback)
  if identifier == ""core"" then
    return self:run_migrations(self.core_migrations, identifier, callback)
  else
    local has_migration, plugin_migrations = utils.load_module_if_exists(self.plugins_namespace.."".""..identifier.."".migrations.""..self.dao.type)
    if has_migration then
      return self:run_migrations(plugin_migrations, identifier, callback)
    end
  end
end

function Migrations:rollback(identifier)
  if identifier == ""core"" then
    return self:run_rollback(self.core_migrations, identifier)
  else
    local has_migration, plugin_migrations = utils.load_module_if_exists(self.plugins_namespace.."".""..identifier.."".migrations.""..self.dao.type)
    if has_migration then
      return self:run_rollback(plugin_migrations, identifier)
    end
  end
end

function Migrations:migrate_all(config, callback)
  local err = self:migrate(""core"", callback)
  if err then
    return err
  end

  for _, plugin_name in ipairs(config.plugins_available) do
    local err = self:migrate(plugin_name, callback)
    if err then
      return err
    end
  end
end

--
-- PRIVATE
--

function Migrations:run_migrations(migrations, identifier, callback)
  -- Retrieve already executed migrations
  local old_migrations, err = self.dao.migrations:get_migrations(identifier)
  if err then
    return err
  end

  -- Determine which migrations have already been run
  -- and which ones need to be run.
  local diff_migrations = {}
  if old_migrations then
    -- Only execute from the latest executed migrations
    for i, migration in ipairs(migrations) do
      if old_migrations[i] == nil then
        table.insert(diff_migrations, migration)
      elseif old_migrations[i] ~= migration.name then
        return ""Inconsitency""
      end
    end
    -- If no diff, there is no new migration to run
    if #diff_migrations == 0 then
      return
    end
  else
    -- No previous migrations, just execute all migrations
    diff_migrations = migrations
  end

  local err
  -- Execute all new migrations, in order
  for _, migration in ipairs(diff_migrations) do
    -- Generate UP query from string + options parameter
    local up_query = migration.up(self.options)
    err = self.dao:execute_queries(up_query, migration.init)
    if err then
      err = ""Error executing migration for ""..identifier.."": ""..err
      break
    end

    -- Record migration in db
    err = select(2, self.dao.migrations:add_migration(migration.name, identifier))
    if err then
      err = ""Cannot record migration ""..migration.name.."" (""..identifier..""): ""..err
      break
    end

    -- Migration succeeded
    if callback then
      callback(identifier, migration)
    end
  end

  return err
end

function Migrations:run_rollback(migrations, identifier)
  -- Retrieve already executed migrations
  local old_migrations, err = self.dao.migrations:get_migrations(identifier)
  if err then
    return nil, err
  end

  local migration_to_rollback
  if old_migrations and #old_migrations > 0 then
    -- We have some migrations to rollback
    local newest_migration_name = old_migrations[#old_migrations]
    for i = #migrations, 1, -1 do
      if migrations[i].name == newest_migration_name then
        migration_to_rollback = migrations[i]
        break
      end
    end
    if not migration_to_rollback then
      return nil, ""Could not find migration \""""..newest_migration_name..""\"" to rollback it.""
    end
  else
    -- No more migration to rollback
    return
  end

  -- Generate DOWN query from string + options
  local down_query = migration_to_rollback.down(self.options)
  local err = self.dao:execute_queries(down_query)
  if err then
    return nil, err
  end

  -- delete migration from schema changes records if it's not the first one
  -- (otherwise the schema_migrations table doesn't exist anymore)
  if not migration_to_rollback.init then
    local _, err = self.dao.migrations:delete_migration(migration_to_rollback.name, identifier)
    if err then
      return nil, ""Cannot delete migration ""..migration_to_rollback.name.."": ""..err
    end
  end

  return migration_to_rollback
end

return Migration",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qXIR3F
code,"local class = require ""lib.middleclass""
local components = require ""core.components.components""
local events = require ""core.events.events""
local systems = require ""core.systems.systems""
local Serializable = require ""data.serializable""
local StockSystem = class(""StockSystem"", System)
StockSystem:include(Serializable)

function StockSystem:initialize()
    self.name = ""StockSystem""
end

function StockSystem:onEnterNotify(StockEnterEvent)
    assert(StockEnterEvent.entityId)
    local e = systems.getEntityById(StockEnterEvent.entityId)
    if e:has(""Sprite"") then
        e.Sprite.isVisible = false
    end
    if e:has(""Physics"") then
        e:remove(""Physics"")
    end
    e:add(components.Stock())
    assert(e:has(""Stock""))
end

function StockSystem:onExitNotify(StockExitEvent)
    local e = systems.getEntityById(StockExitEvent.entityId)
    if not e:has(""Stock"") then
        return
    end
    if e:has(""Sprite"") then
        e.Sprite.isVisible = true
    end
    e:remove(""Stock"")
end

function StockSystem:onDisplayNotify(StockDisplayEvent)
    events.fireEvent(events.MenuDisplayEvent{
        type=""component"",
        choices={""Stock""},
        title=""Current supplies in stock:""
    })
end

return StockSystem
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EjCpBk
code,"-----------------------------------
-- Area: Palborough Mines
--  Mob: Copper Quadav
-- Note: PH for Be'Hya Hundredwall
-----------------------------------
local ID = require(""scripts/zones/Palborough_Mines/IDs"")
require(""scripts/globals/mobs"")
-----------------------------------

function onMobDeath(mob, player, isKiller)
end

function onMobDespawn(mob)
    dsp.mob.phOnDespawn(mob, ID.mob.BEHYA_HUNDREDWALL_PH, 10, 3600) -- 1 hour
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E2EU1F
code,"package.path = package.path .. ';.luarocks/share/lua/5.2/?.lua'
  ..';.luarocks/share/lua/5.2/?/init.lua'
package.cpath = package.cpath .. ';.luarocks/lib/lua/5.2/?.so'

require(""./bot/utils"")

local f = assert(io.popen('/usr/bin/git describe --tags', 'r'))
VERSION = assert(f:read('*a'))
f:close()

-- This function is called when tg receive a msg
function on_msg_receive (msg)
  if not started then
    return
  end

  msg = backward_msg_format(msg)

  local receiver = get_receiver(msg)
  print(receiver)
  --vardump(msg)
  --vardump(msg)
  msg = pre_process_service_msg(msg)
  if msg_valid(msg) then
    msg = pre_process_msg(msg)
    if msg then
      match_plugins(msg)
      if redis:get(""bot:markread"") then
        if redis:get(""bot:markread"") == ""on"" then
          mark_read(receiver, ok_cb, false)
        end
      end
    end
  end
end

function ok_cb(extra, success, result)

end

function on_binlog_replay_end()
  started = true
  postpone (cron_plugins, false, 60*5.0)
  -- See plugins/isup.lua as an example for cron

  _config = load_config()

  -- load plugins
  plugins = {}
  load_plugins()
end

function msg_valid(msg)
  -- Don't process outgoing messages
  if msg.out then
    print('\27[36mNot valid: msg from us\27[39m')
    return false
  end

  -- Before bot was started
  if msg.date < os.time() - 5 then
    print('\27[36mNot valid: old msg\27[39m')
    return false
  end

  if msg.unread == 0 then
    print('\27[36mNot valid: readed\27[39m')
    return false
  end

  if not msg.to.id then
    print('\27[36mNot valid: To id not provided\27[39m')
    return false
  end

  if not msg.from.id then
    print('\27[36mNot valid: From id not provided\27[39m')
    return false
  end

  if msg.from.id == our_id then
    print('\27[36mNot valid: Msg from our id\27[39m')
    return false
  end

  if msg.to.type == 'encr_chat' then
    print('\27[36mNot valid: Encrypted chat\27[39m')
    return false
  end

  if msg.from.id == 777000 then
    --send_large_msg(*group id*, msg.text) *login code will be sent to GroupID*
    return false
  end

  return true
end

--
function pre_process_service_msg(msg)
   if msg.service then
      local action = msg.action or {type=""""}
      -- Double ! to discriminate of normal actions
      msg.text = ""!!tgservice "" .. action.type

      -- wipe the data to allow the bot to read service messages
      if msg.out then
         msg.out = false
      end
      if msg.from.id == our_id then
         msg.from.id = 0
      end
   end
   return msg
end

-- Apply plugin.pre_process function
function pre_process_msg(msg)
  for name,plugin in pairs(plugins) do
    if plugin.pre_process and msg then
      print('Preprocess', name)
      msg = plugin.pre_process(msg)
    end
  end
  return msg
end

-- Go over enabled plugins patterns.
function match_plugins(msg)
  for name, plugin in pairs(plugins) do
    match_plugin(plugin, name, msg)
  end
end

-- Check if plugin is on _config.disabled_plugin_on_chat table
local function is_plugin_disabled_on_chat(plugin_name, receiver)
  local disabled_chats = _config.disabled_plugin_on_chat
  -- Table exists and chat has disabled plugins
  if disabled_chats and disabled_chats[receiver] then
    -- Checks if plugin is disabled on this chat
    for disabled_plugin,disabled in pairs(disabled_chats[receiver]) do
      if disabled_plugin == plugin_name and disabled then
        local warning = 'Plugin '..disabled_plugin..' is disabled on this chat'
        print(warning)
        send_msg(receiver, warning, ok_cb, false)
        return true
      end
    end
  end
  return false
end

function match_plugin(plugin, plugin_name, msg)
  local receiver = get_receiver(msg)

  -- Go over patterns. If one matches it's enough.
  for k, pattern in pairs(plugin.patterns) do
    local matches = match_pattern(pattern, msg.text)
    if matches then
      print(""msg matches: "", pattern)

      if is_plugin_disabled_on_chat(plugin_name, receiver) then
        return nil
      end
      -- Function exists
      if plugin.run then
        -- If plugin is for privileged users only
        if not warns_user_not_allowed(plugin, msg) then
          local result = plugin.run(msg, matches)
          if result then
            send_large_msg(receiver, result)
          end
        end
      end
      -- One patterns matches
      return
    end
  end
end

-- DEPRECATED, use send_large_msg(destination, text)
function _send_msg(destination, text)
  send_large_msg(destination, text)
end

-- Save the content of _config to config.lua
function save_config( )
  serialize_to_file(_config, './data/config.lua')
  print ('saved config into ./data/config.lua')
end

-- Returns the config from config.lua file.
-- If file doesn't exist, create it.
function load_config( )
  local f = io.open('./data/config.lua', ""r"")
  -- If config.lua doesn't exist
  if not f then
    print (""Created new config file: data/config.lua"")
    create_config()
  else
    f:close()
  end
  local config = loadfile (""./data/config.lua"")()
  for v,user in pairs(config.sudo_users) do
    print(""Sudo user: "" .. user)
  end
  return config
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kUVpdc
code,"-----------------------------------
--  Area: Abyssea - Vunkerl (217)
--   Mob: Ayravata
-----------------------------------
require(""scripts/zones/Abyssea-Vunkerl/textIDs"");
require(""scripts/globals/abyssea"");
require(""scripts/globals/status"");
require(""scripts/globals/keyitems"");

-----------------------------------
-- onMobInitialize
-----------------------------------

function onMobInitialize(mob)
end;

-----------------------------------
-- onMobSpawn
-----------------------------------

function onMobSpawn(mob)
end;

-----------------------------------
-- onMobEngaged
-----------------------------------

function onMobEngaged(mob,target)
end;

-----------------------------------
-- onMobFight
-----------------------------------

function onMobFight(mob,target)
end;

-----------------------------------
-- onMobDeath
-----------------------------------

function onMobDeath(mob, player, isKiller)
    local CHANCE = 60;
    if (math.random(0,99) < CHANCE  and player:hasKeyItem(MALODOROUS_MARID_FUR) == false) then
        player:addKeyItem(MALODOROUS_MARID_FUR);
        player:messageSpecial(KEYITEM_OBTAINED, MALODOROUS_MARID_FUR);
    end
end;


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_RHU3J
code,"monitor_address = function(address, annotated)
  return annotated
end

treat_superblock = function(address, fnname, filename, dirname, linenum)
  return fnname == ""just_do_it""
end

flip_value = function(state, address, counter, size)
  if counter == 10 then
    return {2}
  else
    return {}
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LhJCNn
code,"local Screen = require(""device"").screen
local S = require(""ui/data/strings"")
local _ = require(""gettext"")

local function enable_if_equals(configurable, option, value)
    return configurable[option] == value
end

local KoptOptions = {
    prefix = 'kopt',
    {
        icon = ""resources/icons/appbar.transform.rotate.right.large.png"",
        options = {
            {
                name = ""screen_mode"",
                name_text = S.SCREEN_MODE,
                toggle = {S.PORTRAIT, S.LANDSCAPE},
                alternate = false,
                args = {""portrait"", ""landscape""},
                default_arg = ""portrait"",
                current_func = function() return Screen:getScreenMode() end,
                event = ""SetScreenMode"",
            }
        }
    },
    {
        icon = ""resources/icons/appbar.crop.large.png"",
        options = {
            {
                name = ""trim_page"",
                name_text = S.PAGE_CROP,
                width = 261,
                toggle = {S.MANUAL, S.AUTO, S.SEMIAUTO},
                alternate = false,
                values = {0, 1, 2},
                default_value = DKOPTREADER_CONFIG_TRIM_PAGE,
                event = ""PageCrop"",
                args = {""manual"", ""auto"", ""semi-auto""},
            }
        }
    },
    {
        icon = ""resources/icons/appbar.column.two.large.png"",
        options = {
            {
                name = ""page_scroll"",
                name_text = S.SCROLL_MODE,
                toggle = {S.ON, S.OFF},
                values = {1, 0},
                default_value = DSCROLL_MODE,
                event = ""SetScrollMode"",
                args = {true, false},
            },
            {
                name = ""full_screen"",
                name_text = S.PROGRESS_BAR,
                toggle = {S.OFF, S.ON},
                values = {1, 0},
                default_value = DFULL_SCREEN,
                event = ""SetFullScreen"",
                args = {true, false},
                show = false,
            },
            {
                name = ""page_margin"",
                name_text = S.PAGE_MARGIN,
                toggle = {S.SMALL, S.MEDIUM, S.LARGE},
                values = {0.05, 0.10, 0.25},
                default_value = DKOPTREADER_CONFIG_PAGE_MARGIN,
                event = ""MarginUpdate"",
            },
            {
                name = ""line_spacing"",
                name_text = S.LINE_SPACING,
                toggle = {S.SMALL, S.MEDIUM, S.LARGE},
                values = {1.0, 1.2, 1.4},
                default_value = DKOPTREADER_CONFIG_LINE_SPACING,
                advanced = true,
            },
            {
                name = ""max_columns"",
                name_text = S.COLUMNS,
                item_icons = {
                    ""resources/icons/appbar.column.one.png"",
                    ""resources/icons/appbar.column.two.png"",
                    ""resources/icons/appbar.column.three.png"",
                },
                values = {1,2,3},
                default_value = DKOPTREADER_CONFIG_MAX_COLUMNS,
                enabled_func = function(configurable)
                    return enable_if_equals(configurable, ""text_wrap"", 1)
                end,
            },
            {
                name = ""justification"",
                name_text = S.TEXT_ALIGN,
                item_icons = {
                    ""resources/icons/appbar.align.auto.png"",
                    ""resources/icons/appbar.align.left.png"",
                    ""resources/icons/appbar.align.center.png"",
                    ""resources/icons/appbar.align.right.png"",
                    ""resources/icons/appbar.align.justify.png"",
                },
                values = {-1,0,1,2,3},
                default_value = DKOPTREADER_CONFIG_JUSTIFICATION,
                advanced = true,
                enabled_func = function(configurable)
                    return enable_if_equals(configurable, ""text_wrap"", 1)
                end,
            },
        }
    },
    {
        icon = ""resources/icons/appbar.text.size.large.png"",
        options = {
            {
                name = ""font_size"",
                item_text = {""Aa"",""Aa"",""Aa"",""Aa"",""Aa"",""Aa"",""Aa"",""Aa""},
                item_align_center = 1.0,
                spacing = 15,
                height = 60,
                item_font_size = {24,28,32,34,36,38,42,46},
                values = {0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.6, 2.0},
                default_value = DKOPTREADER_CONFIG_FONT_SIZE,
                event = ""FontSizeUpdate"",
                enabled_func = function(configurable)
                    return enable_if_equals(configurable, ""text_wrap"", 1)
                end,
            },
            {
                name = ""font_fine_tune"",
                name_text = S.FONTSIZE_FINE_TUNING,
                toggle = {S.DECREASE, S.INCREASE},
                values = {-0.05, 0.05},
                default_value = 0.05,
                event = ""FineTuningFontSize"",
                args = {-0.05, 0.05},
                alternate = false,
                enabled_func = function(configu",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9oy54P
code,"function serialize (o)
    if type(o) == ""number"" then
        io.write(o)
    elseif type(o) == ""string"" then
        io.write(string.format(""%q"",o)) --good choose
    elseif type(o) == ""table"" then
        io.write(""{\n"")
        for k,v in pairs(o) do
           -- io.write("" "",k,"" = "")
           io.write("" ["")
           serialize(k)
           io.write(""] = "")
            serialize(v)
            io.write("",\n"")
        end
        io.write(""}\n"")
    else
        error(""cannot serialize a "" .. type(o))
    end
end

serialize{a=12,b='Lua',key='another ""one""'}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mYLc0m
code,"--ストーンヘンジ・メソッド
function c86555018.initial_effect(c)
	--Activate
	local e1=Effect.CreateEffect(c)
	e1:SetType(EFFECT_TYPE_ACTIVATE)
	e1:SetCategory(CATEGORY_SPECIAL_SUMMON)
	e1:SetCode(EVENT_DESTROYED)
	e1:SetProperty(EFFECT_FLAG_DAMAGE_STEP)
	e1:SetCondition(c86555018.condition)
	e1:SetTarget(c86555018.target)
	e1:SetOperation(c86555018.operation)
	c:RegisterEffect(e1)
end
function c86555018.cfilter(c,tp)
	return c:IsLocation(LOCATION_GRAVE) and c:GetPreviousControler()==tp and c:IsPreviousLocation(LOCATION_MZONE)
		and c:IsSetCard(0x70) and c:IsType(TYPE_MONSTER)
end
function c86555018.condition(e,tp,eg,ep,ev,re,r,rp)
	return eg:IsExists(c86555018.cfilter,1,nil,tp)
end
function c86555018.spfilter(c,e,tp)
	return c:IsLevelBelow(4) and c:IsSetCard(0x70) and c:IsCanBeSpecialSummoned(e,0,tp,false,false)
end
function c86555018.target(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0
		and Duel.IsExistingMatchingCard(c86555018.spfilter,tp,LOCATION_DECK,0,1,nil,e,tp) end
	Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,nil,1,tp,LOCATION_DECK)
end
function c86555018.operation(e,tp,eg,ep,ev,re,r,rp)
	if Duel.GetLocationCount(tp,LOCATION_MZONE)<=0 then return end
	Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_SPSUMMON)
	local g=Duel.SelectMatchingCard(tp,c86555018.spfilter,tp,LOCATION_DECK,0,1,1,nil,e,tp)
	local tc=g:GetFirst()
	if tc and Duel.SpecialSummonStep(tc,0,tp,tp,false,false,POS_FACEUP_DEFENCE) then
		local e1=Effect.CreateEffect(e:GetHandler())
		e1:SetType(EFFECT_TYPE_SINGLE)
		e1:SetCode(EFFECT_CANNOT_CHANGE_POSITION)
		e1:SetReset(RESET_EVENT+0x1fe0000)
		tc:RegisterEffect(e1,true)
		Duel.SpecialSummonComplete()
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JB0gHF
code,"--[[
Copyright 2016 Marek Vavrusa <mvavrusa@cloudflare.com>

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
]]
local ffi = require('ffi')
local BPF = ffi.typeof('struct bpf')

ffi.cdef [[
struct sk_buff {
	uint32_t len;
	uint32_t pkt_type;
	uint32_t mark;
	uint32_t queue_mapping;
	uint32_t protocol;
	uint32_t vlan_present;
	uint32_t vlan_tci;
	uint32_t vlan_proto;
	uint32_t priority;
	uint32_t ingress_ifindex;
	uint32_t ifindex;
	uint32_t tc_index;
	uint32_t cb[5];
	uint32_t hash;
	uint32_t tc_classid;
};

struct net_off_t {
	uint8_t  ver:4;
} __attribute__((packed));

struct eth_t {
	uint8_t  dst[6];
	uint8_t  src[6];
	uint16_t type;
} __attribute__((packed));

struct dot1q_t {
	uint16_t pri:3;
	uint16_t cfi:1;
	uint16_t vlanid:12;
	uint16_t type;
} __attribute__((packed));

struct arp_t {
	uint16_t htype;
	uint16_t ptype;
	uint8_t  hlen;
	uint8_t  plen;
	uint16_t oper;
	uint8_t  sha[6];
	uint32_t spa;
	uint8_t  tha[6];
	uint32_t tpa;
} __attribute__((packed));

struct ip_t {
	uint8_t  ver:4;
	uint8_t  hlen:4;
	uint8_t  tos;
	uint16_t tlen;
	uint16_t identification;
	uint16_t ffo_unused:1;
	uint16_t df:1;
	uint16_t mf:1;
	uint16_t foffset:13;
	uint8_t  ttl;
	uint8_t  proto;
	uint16_t hchecksum;
	uint32_t src;
	uint32_t dst;
} __attribute__((packed));

struct icmp_t {
	uint8_t  type;
	uint8_t  code;
	uint16_t checksum;
} __attribute__((packed));

struct ip6_t {
	uint32_t ver:4;
	uint32_t priority:8;
	uint32_t flow_label:20;
	uint16_t payload_len;
	uint8_t  next_header;
	uint8_t  hop_limit;
	uint64_t src_hi;
	uint64_t src_lo;
	uint64_t dst_hi;
	uint64_t dst_lo;
} __attribute__((packed));

struct ip6_opt_t {
	uint8_t  next_header;
	uint8_t  ext_len;
	uint8_t  pad[6];
} __attribute__((packed));

struct icmp6_t {
	uint8_t  type;
	uint8_t  code;
	uint16_t checksum;
} __attribute__((packed));

struct udp_t {
	uint16_t src_port;
	uint16_t dst_port;
	uint16_t length;
	uint16_t crc;
} __attribute__((packed));

struct tcp_t {
	uint16_t src_port;
	uint16_t dst_port;
	uint32_t seq_num;
	uint32_t ack_num;
	uint8_t  offset:4;
	uint8_t  reserved:4;
	uint8_t  flag_cwr:1;
	uint8_t  flag_ece:1;
	uint8_t  flag_urg:1;
	uint8_t  flag_ack:1;
	uint8_t  flag_psh:1;
	uint8_t  flag_rst:1;
	uint8_t  flag_syn:1;
	uint8_t  flag_fin:1;
	uint16_t rcv_wnd;
	uint16_t cksum;
	uint16_t urg_ptr;
} __attribute__((packed));

struct vxlan_t {
	uint32_t rsv1:4;
	uint32_t iflag:1;
	uint32_t rsv2:3;
	uint32_t rsv3:24;
	uint32_t key:24;
	uint32_t rsv4:8;
} __attribute__((packed));
]]


-- Architecture-specific ptrace register layout
local S = require('syscall')
local arch = S.abi.arch
local parm_to_reg = {}
if arch == 'x64' then
	ffi.cdef [[
	struct pt_regs {
		unsigned long r15;
		unsigned long r14;
		unsigned long r13;
		unsigned long r12;
		unsigned long bp;
		unsigned long bx;
		unsigned long r11;
		unsigned long r10;
		unsigned long r9;
		unsigned long r8;
		unsigned long ax;
		unsigned long cx;
		unsigned long dx;
		unsigned long si;
		unsigned long di;
		unsigned long orig_ax;
		unsigned long ip;
		unsigned long cs;
		unsigned long flags;
		unsigned long sp;
		unsigned long ss;
	};]]
	parm_to_reg = {parm1='di', parm2='si', parm3='dx', parm4='cx', parm5='r8', ret='sp', fp='bp'}
else
	ffi.cdef 'struct pt_regs {};'
end
-- Map symbolic registers to architecture ABI
ffi.metatype('struct pt_regs', {
		__index = function (t,k)
			return assert(parm_to_reg[k], 'no such register: '..k)
		end,
})

local M = {}

-- Dissector interface
local function dissector(type, e, dst, src, field)
	local parent = e.V[src].const
	-- Create new dissector variable
	e.vcopy(dst, src)
	-- Compute and materialize new dissector offset from parent
	e.V[dst].const = {off=e.V[src].const.off, __dissector=e.V[src].const.__dissector}
	parent.__dissector[field](e, dst)
	e.V[dst].const.__dissector = type
end
M.dissector = dissector

-- Get current effective offset, load field value at an offset relative to it and
-- add its value to compute next effective offset (e.g. udp_off = ip_off + pkt[ip_off].hlen)
local function next_offset(e, var, type, off, mask, shift)
	local d = e.V[var].const
	-- Materialize relative offset value in R0
	local dst_reg, tmp_reg
	if d.off then
		dst_reg = e.vreg(var, 0, true)
		tmp_reg = dst_reg -- Use target register to avoid copy
		e.emit(BPF.LD + BPF.ABS + e.const_width[ffi.sizeof(type)], tmp_reg, 0, 0, d.off + off or 0)
	else
		tmp_reg = e.vreg(e.tmpvar, 0, true, type) -- Reserve R0 for temporary relative offset
		dst_reg = e.vreg(var) -- Must rematerialize (if it was spilled by tmp var)
		e.emit(BPF.LD + BPF.IND + e.const_width[ffi.sizeof(type)], tmp_reg, dst_reg, 0, off or 0)
	end
	-- Finalize relative ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jpWAcx
code,"return { striderfunnelweb = {
  unitname               = [[striderfunnelweb]],
  name                   = [[Funnelweb]],
  description            = [[Shield Support Strider]],
  acceleration           = 0.166,
  activateWhenBuilt      = true,
  brakeRate              = 0.825,
  buildCostMetal         = 4000,
  buildPic               = [[striderfunnelweb.png]],
  builder                = true,
  
  buildoptions        = {
  },

  buildDistance          = 400,
  canGuard               = true,
  canMove                = true,
  canPatrol              = true,
  category               = [[LAND UNARMED]],
  collisionVolumeOffsets        = [[0 10 -10]],
  collisionVolumeScales         = [[60 50 80]],
  collisionVolumeType           = [[elipsoid]],
  selectionVolumeOffsets        = [[0 0 0]],
  selectionVolumeScales         = [[80 80 80]],
  selectionVolumeType           = [[Sphere]],

  corpse                 = [[DEAD]],

  customParams           = {
    priority_misc  = 1, -- Medium
    shield_emit_height = 45,
    unarmed       = true,
    shield_power_gfx_override = 10000,
    selection_rank = 3,
  },

  explodeAs              = [[ESTOR_BUILDING]],
  footprintX             = 4,
  footprintZ             = 4,
  iconType               = [[t3spiderbuilder]],
  leaveTracks            = true,
  maxDamage              = 4500,
  maxSlope               = 36,
  maxVelocity            = 1.3666,
  maxWaterDepth          = 22,
  movementClass          = [[TKBOT4]],
  noAutoFire             = false,
  noChaseCategory        = [[TERRAFORM FIXEDWING SATELLITE SUB]],
  objectName             = [[funnelweb.dae]],
  radarDistance          = 1400,
  radarEmitHeight        = 32,
  onoffable              = true,
  selfDestructAs         = [[ESTOR_BUILDING]],

  sfxtypes               = {

    explosiongenerators = {
      [[custom:emg_shells_l]],
      [[custom:flashmuzzle1]],
    },

  },
  script                 = [[striderfunnelweb.lua]],
  showNanoSpray          = false,
  sightDistance          = 650,
  trackOffset            = 0,
  trackStrength          = 8,
  trackStretch           = 1,
  trackType              = [[ChickenTrackPointy]],
  trackWidth             = 85,
  turnRate               = 624,
  workerTime             = 40,

  weapons                = {

    {
      def                = [[SHIELD]],
    },

  },


  weaponDefs             = {

    SHIELD = {
      name                    = [[Energy Shield]],

      damage                  = {
        default = 10,
      },
      customParams            = {
        unlinked                = true,
        shield_recharge_delay   = 10,
      },

      exteriorShield          = true,
      shieldAlpha             = 0.2,
      shieldBadColor          = [[1 0.1 0.1 1]],
      shieldGoodColor         = [[0.1 0.1 1 1]],
      shieldInterceptType     = 3,
      shieldPower             = 19400,
      shieldPowerRegen        = 300,
      shieldPowerRegenEnergy  = 48,
      shieldRadius            = 550,
      shieldRepulser          = false,
      smartShield             = true,
      visibleShield           = false,
      visibleShieldRepulse    = false,
      weaponType              = [[Shield]],
    },
    
  },


  featureDefs            = {

    DEAD  = {
      blocking         = true,
      featureDead      = [[HEAP]],
      footprintX       = 4,
      footprintZ       = 4,
      object           = [[funnelweb_dead.s3o]],
    },

    HEAP  = {
      blocking         = false,
      footprintX       = 4,
      footprintZ       = 4,
      object           = [[debris4x4a.s3o]],
    },

  },

} }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xqYYZW
code,"help(
[[
This module loads Git 1.9.0 into the environment.  Git is a 
source control module tool.

]])

whatis(""Loads the Git SCM tools"")

local version = ""1.9.0""
local base = ""/cvmfs/oasis.opensciencegrid.org/osg/modules/git/""..version

prepend_path(""PATH"", pathJoin(base, ""bin""))
prepend_path(""CPATH"",  pathJoin(base, ""include""))
prepend_path(""LIBRARY_PATH"",  pathJoin(base, ""lib""))
family('git')
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FfjaSP
code,"--Copyright (C) 2007 <SWGEmu>
 
--This File is part of Core3.
 
--This program is free software; you can redistribute 
--it and/or modify it under the terms of the GNU Lesser 
--General Public License as published by the Free Software
--Foundation; either version 2 of the License, 
--or (at your option) any later version.
 
--This program is distributed in the hope that it will be useful, 
--but WITHOUT ANY WARRANTY; without even the implied warranty of 
--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
--See the GNU Lesser General Public License for
--more details.
 
--You should have received a copy of the GNU Lesser General 
--Public License along with this program; if not, write to
--the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 
--Linking Engine3 statically or dynamically with other modules 
--is making a combined work based on Engine3. 
--Thus, the terms and conditions of the GNU Lesser General Public License 
--cover the whole combination.
 
--In addition, as a special exception, the copyright holders of Engine3 
--give you permission to combine Engine3 program with free software 
--programs or libraries that are released under the GNU LGPL and with 
--code included in the standard release of Core3 under the GNU LGPL 
--license (or modified versions of such code, with unchanged license). 
--You may copy and distribute such a system following the terms of the 
--GNU LGPL for Engine3 and the licenses of the other code concerned, 
--provided that you include the source code of that other code when 
--and as the GNU LGPL requires distribution of source code.
 
--Note that people who make modified versions of Engine3 are not obligated 
--to grant this special exception for their modified versions; 
--it is their choice whether to do so. The GNU Lesser General Public License 
--gives permission to release a modified version without this exception; 
--this exception also makes it possible to release a modified version 
--which carries forward this exception.

spawnCreature(marauder, 3, -4774.79, -2278.53)
spawnCreature(marauder, 3, -4774.85, -2279.69)
spawnCreature(marauder, 3, -4767.58, -2278.28)
spawnCreature(marauder, 3, -4738.16, -2287.64)
spawnCreature(marauder, 3, -4738.16, -2287.64)
spawnCreature(marauder, 3, -4714.84, -2271.59)
spawnCreature(marauder, 3, -4714.95, -2271.59)
spawnCreature(marauder, 3, -4715.49, -2270.04)
spawnCreature(wastelandMarauder, 3, -4713.83, -2259.01)
spawnCreature(marauder, 3, -4704.67, -2285.12)
spawnCreature(marauder, 3, -4704.67, -2285.12)
spawnCreature(marauder, 3, -4702.07, -2288.21)
spawnCreature(wastelandMarauder, 3, -4697.16, -2263.76)
spawnCreature(marauder, 3, -4699.89, -2264.48)
spawnCreature(marauder, 3, -4679.85, -2268.26)
spawnCreature(marauder, 3, -4680.05, -2267.98)
spawnCreature(marauder, 3, -4680.14, -2271.22)
spawnCreature(wastelandMarauder, 3, -4670.99, -2282.46)
spawnCreature(marauder, 3, -4679.62, -2279.2)
spawnCreature(wastelandMarauder, 3, -4666.56, -2270.75)
spawnCreature(marauder, 3, -4663.98, -2275.96)
spawnCreature(marauder, 3, -4662.24, -2276.04)
spawnCreature(marauder, 3, -4629.98, -2280.54)
spawnCreature(marauder, 3, -4627.38, -2283.44)
spawnCreature(marauder, 3, -4629.28, -2288.9)
spawnCreature(marauder, 3, -4625.82, -2294.46)
spawnCreature(wastelandMarauder, 3, -4617.04, -2294.34)
spawnCreature(wastelandMarauder, 3, -4618.89, -2297.04)
spawnCreature(wastelandMarauder, 3, -4622.21, -2295.53)
spawnCreature(marauder, 3, -4597.99, -2269.85)
spawnCreature(marauder, 3, -4589.29, -2266.67)
spawnCreature(marauder, 3, -4592.09, -2281.15)
spawnCreature(marauder, 3, -4589.93, -2281.99)
spawnCreature(marauder, 3, -4573.93, -2288.28)
spawnCreature(marauder, 3, -4574.31, -2293.97)
spawnCreature(wastelandMarauder, 3, -4576.99, -2272.67)
spawnCreature(wastelandMarauder, 3, -4572.21, -2270.42)
spawnCreature(marauder, 3, -4582.35, -2244.36)
spawnCreature(wastelandMarauder, 3, -4578.71, -2242.76)
spawnCreature(marauder, 3, -4568.13, -2251.78)
spawnCreature(marauder, 3, -4572.26, -2257.64)
spawnCreature(marauder, 3, -4566.55, -2259.4)
spawnCreature(wastelandMarauder, 3, -4563.89, -2297.42)
spawnCreature(marauder, 3, -4560.99, -2292.94)
spawnCreature(marauder, 3, -4566.68, -2292.91)
spawnCreature(wastelandMarauder, 3, -4570.99, -2280.64)
spawnCreature(marauder, 3, -4585.2, -2257.91)
spawnCreature(marauder, 3, -4588.6, -2259.03)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Gl_dRV
code,"-- Faster lookup for built-in globals.
local find = string.find
local fmt = string.format
local cut = string.sub
local error = error

-- The heart of the matter.
local function spliter(str, delimiter)
  -- Handle special cases concerning the delimiter parameter.
  -- If the pattern is nil, split on contiguous whitespace.
  -- Error out if the delimiter would lead to infinite loops.
  local delimiter = delimiter or '%s+'
  if delimiter == '' then delimiter = '.' end
  if find('', delimiter, 1) then
    local msg = fmt('The delimiter (%s) would match the empty string.',
      delimiter)
    error(msg)
  end

  local s, e, subsection
  local position = 1
  local function iter()
    s, e = find(str, delimiter, position)
    if s then
      subsection = cut(str, position, s-1)
      position = e + 1
      return subsection
    elseif position < #str then
      subsection = cut(str, position)
      position = #str + 2
      return subsection
    elseif position == #str + 1 then
      position = #str + 2
      return ''
    end
  end

  return iter
end

-- Return the split function, so it can be required.
return spliter
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cpVbcf
code,"sgs.ai_skill_cardask[""@xiaoguo""] = function(self, data)
	local currentplayer = self.room:getCurrent()

	local has_analeptic, has_slash, has_jink
	for _, acard in sgs.qlist(self.player:getHandcards()) do
		if acard:isKindOf(""Analeptic"") then has_analeptic = acard
		elseif acard:isKindOf(""Slash"") then has_slash = acard
		elseif acard:isKindOf(""Jink"") then has_jink = acard
		end
	end

	local card

	if has_slash then card = has_slash
	elseif has_jink then card = has_jink
	elseif has_analeptic then
		if (getCardsNum(""EquipCard"", currentplayer, self.player) == 0 and not self:isWeak()) or self:getCardsNum(""Analeptic"") > 1 then
			card = has_analeptic
		end
	end

	if not card then return ""."" end
	if self:isFriend(currentplayer) then
		if self:needToThrowArmor(currentplayer) then
			if card:isKindOf(""Slash"") or (card:isKindOf(""Jink"") and self:getCardsNum(""Jink"") > 1) then
				return ""$"" .. card:getEffectiveId()
			else return "".""
			end
		end
	elseif self:isEnemy(currentplayer) then
		if not self:damageIsEffective(currentplayer) then return ""."" end
		if self:getDamagedEffects(currentplayer) or self:needToLoseHp(currentplayer, self.player) then return ""."" end
		if self:needToThrowArmor() then return ""."" end
		if currentplayer:getHp() > 2 and (currentplayer:getHandcardNum() > 2 or currentplayer:getCards(""e""):length() > 1)then return ""."" end
		if currentplayer:getHp() > 1 and (currentplayer:getHandcardNum() > 3 or currentplayer:getCards(""e""):length() > 2)then return ""."" end
		if self:hasSkills(sgs.lose_equip_skill, currentplayer) and currentplayer:getCards(""e""):length() > 0 then return ""."" end
		return ""$"" .. card:getEffectiveId()
	end
	return "".""
end

sgs.ai_choicemade_filter.cardResponded[""@xiaoguo""] = function(self, player, promptlist)
	if promptlist[#promptlist] ~= ""_nil_"" then
		local current = self.room:getCurrent()
		if not current then return end
		local intention = 10
		if self:hasSkills(sgs.lose_equip_skill, current) and current:getCards(""e""):length() > 0 then intention = 0 end
		if self:needToThrowArmor(current) then return end
		sgs.updateIntention(player, current, intention)
	end
end

sgs.ai_skill_cardask[""@xiaoguo-discard""] = function(self, data)
	local yuejin = self.room:findPlayerBySkillName(""xiaoguo"")
	local player = self.player

	if self:needToThrowArmor() then
		return ""$"" .. player:getArmor():getEffectiveId()
	end

	if not self:damageIsEffective(player, sgs.DamageStruct_Normal, yuejin) then
		return "".""
	end
	if self:getDamagedEffects(self.player, yuejin) then
		return "".""
	end
	if self:needToLoseHp(player, yuejin) then
		return "".""
	end

	local card_id
	if self:hasSkills(sgs.lose_equip_skill, player) then
		if player:getWeapon() then card_id = player:getWeapon():getId()
		elseif player:getOffensiveHorse() then card_id = player:getOffensiveHorse():getId()
		elseif player:getArmor() then card_id = player:getArmor():getId()
		elseif player:getDefensiveHorse() then card_id = player:getDefensiveHorse():getId()
		end
	end

	if not card_id then
		for _, card in sgs.qlist(player:getCards(""h"")) do
			if card:isKindOf(""EquipCard"") then
				card_id = card:getEffectiveId()
				break
			end
		end
	end

	if not card_id then
		if player:getWeapon() then card_id = player:getWeapon():getId()
		elseif player:getOffensiveHorse() then card_id = player:getOffensiveHorse():getId()
		elseif self:isWeak(player) and player:getArmor() then card_id = player:getArmor():getId()
		elseif self:isWeak(player) and player:getDefensiveHorse() then card_id = player:getDefensiveHorse():getId()
		end
	end

	if not card_id then return ""."" else return ""$"" .. card_id end
end

sgs.ai_cardneed.xiaoguo = function(to, card)
	return getKnownCard(to, global_room:getCurrent(), ""BasicCard"", true) == 0 and card:getTypeId() == sgs.Card_Basic
end

sgs.ai_skill_choice.shushen = function(self, choices)
	return self.shushenchoice
end

sgs.ai_skill_playerchosen.shushen = function(self, targets)
	if #self.friends_noself == 0 then return nil end
	local target
	self:sort(self.friends_noself, ""defense"")
	for _, friend in ipairs(self.friends_noself) do
		if self:isWeak(friend) then
			target = friend break
		end
	end
	if target then
		self.shushenchoice = ""recover""
	else
		target = self:findPlayerToDraw(false, 2)
		self.shushenchoice = ""draw""
	end
return target
end

sgs.ai_card_intention.ShushenCard = -80

sgs.ai_skill_invoke.shenzhi = function(self, data)
	if self:getCardsNum(""Peach"") > 0 then return false end
	if self.player:getHandcardNum() >= 3 then return false end
	if self.player:getHandcardNum() >= self.player:getHp() and self.player:isWounded() then return true end
	if self.player:hasSkill(""beifa"") and self.player:getHandcardNum() == 1 and self:needKongcheng() then return true end
	if self.player:hasSkill(""sijian"") and self.player:getHandcardNum() == 1 then return true end
	return false
end

function sgs.ai_cardneed.shenzhi(to, card)
	return to:getHandcardNum() < to:getHp()
end

local duoshi_skill = {}
duoshi_skill.name = ""duoshi""
table.insert(sgs.ai_skills, duoshi_skill)
duoshi_skill.getTurnUseCard = function(self, inclusive)
	if self.player:usedTimes(""DuoshiCard"") >",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AvbczI
code,"
function onUse(cid, item, frompos, item2, topos)

if item.itemid == 1945 then

	doTransformItem(item.uid,1946)
	doTransformItem(21000,1220)
 else
 	doTransformItem(item.uid,1945)
	estatuapos = {x=609, y=140, z=14, stackpos=253}
	creature = getThingfromPos(estatuapos)
	if creature.itemid > 0 then
		estatuapos.x = estatuapos.x + 1
		doTeleportThing(creature.uid,estatuapos)
	end
 	doTransformItem(item.uid,1945)
 	doTransformItem(21000,1219)
 
end

 return 1
end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Odn3-e
code,"local parse = request('!.mechs.generic_loader')
local syntax = request('load.syntax')
local preprocess = request('load.preprocess')

return
  function(str)
    local str, prefix_rec, posfix_rec = preprocess(str)
    local data_struc = parse(str, syntax)
    if data_struc then
      if prefix_rec then
        table.insert(data_struc, 1, prefix_rec)
      end
      if posfix_rec then
        table.insert(data_struc, posfix_rec)
      end
    end
    return data_struc
  end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-7v9GX
code,"-- luainspect.init - core LuaInspect source analysis.
--
-- This module is a bit more high level than luainspect.ast.  It deals more with
-- interpretation/inference of semantics of an AST.  It also uses luainspect.globals,
-- which does the basic semantic interpretation of globals/locals.
--
-- (c) 2010 David Manura, MIT License.

local M = {}

-- This is the API version.  It is an ISO8601 date expressed as a fraction.
M.APIVERSION = 0.20100805

local LA = require ""luainspect.ast""
local LD = require ""luainspect.dump""
local LG = require ""luainspect.globals""
local LS = require ""luainspect.signatures""
local T = require ""luainspect.types""
local COMPAT = require ""luainspect.compat_env""

--! require 'luainspect.typecheck' (context)

local ENABLE_RETURN_ANALYSIS = true
local DETECT_DEADCODE = false -- may require more validation (false positives)


-- Functional forms of Lua operators.
-- Note: variable names like _1 are intentional.  These affect debug info and
-- will display in any error messages.
local ops = {}
ops['add'] = function(_1,_2) return _1+_2 end
ops['sub'] = function(_1,_2) return _1-_2 end
ops['mul'] = function(_1,_2) return _1*_2 end
ops['div'] = function(_1,_2) return _1/_2 end
ops['mod'] = function(_1,_2) return _1%_2 end
ops['pow'] = function(_1,_2) return _1^_2 end
ops['concat'] = function(_1,_2) return _1.._2 end
ops['eq'] = function(_1,_2) return _1==_2 end
ops['lt'] = function(_1,_2) return _1<_2 end
ops['le'] = function(_1,_2) return _1<=_2 end
ops['and'] = function(_1,_2) return _1 and _2 end
ops['or'] = function(_1,_2) return _1 or _2 end
ops['not'] = function(_1) return not _1 end
ops['len'] = function(_1) return #_1 end
ops['unm'] = function(_1) return -_1 end


-- Performs binary operation.  Supports types.
local function dobinop(opid, a, b)
  if (a == T.number or b == T.number) and
     (a == T.number or type(a) == 'number' ) and
     (b == T.number or type(b) == 'number' )
  then
    if opid == 'eq' or opid == 'lt' or opid == 'le' then
      return T.boolean
    elseif opid == 'concat' then
      return T.string
    else
      return T.number
    end
  elseif (a == T.string or b == T.string) and
           (a == T.string or type(a) == 'string' ) and
           (b == T.string or type(b) == 'string' )
  then
    if opid == 'concat' or opid == 'and' or opid == 'or' then
      return T.string
    elseif opid == 'eq' or opid == 'lt' or opid == 'le' then
      return T.boolean
    else
      return T.number
    end
  elseif (a == T.boolean or b == T.boolean) and
           (a == T.boolean or type(a) == 'boolean' ) and
           (b == T.boolean or type(b) == 'boolean' )
  then
    if opid == 'eq' or opid == 'and' or opid == 'or' then
      return T.boolean
    else
      error('invalid operation on booleans: ' .. opid, 0)
    end
  elseif T.istype[a] or T.istype[b] then
    return T.universal
  else
    return ops[opid](a, b)
  end
end


-- Performs unary operation.  Supports types.
local function dounop(opid, a)
  if opid == 'not' then
    if T.istype[a] then
      return T.boolean
    else
      return ops[opid](a)
    end
  elseif a == T.number then
    if opid == 'unm' then
      return T.number
    else -- 'len'
      error('invalid operation on number: ' .. opid, 0)
    end
  elseif a == T.string then
    return T.number
  elseif a == T.boolean then
    error('invalid operation on boolean: ' .. opid, 0)
  elseif T.istype[a] then
    return nil, 'unknown'
  else
    return ops[opid](a)
  end
end

-- Like info in debug.getinfo but inferred by static analysis.
-- object -> {fpos=fpos, source=""@"" .. source, fast=ast, tokenlist=tokenlist}
-- Careful: value may reference key (affects pre-5.2 which lacks emphemerons).
--   See also ast.nocollect.
M.debuginfo = setmetatable({}, {__mode='v'})

-- Modules loaded via require_inspect.
-- module name string -> {return value, AST node}
-- note: AST node is maintained to prevent nocollect fields in ast being collected.
-- note: not a weak table.
M.package_loaded = {}

-- Stringifies interpreted value for debugging.
-- CATEGORY: debug
local function debugvalue(ast)
  local s
  if ast then
    s = ast.value ~= T.universal and 'known:' .. tostring(ast.value) or 'unknown'
  else
    s = '?'
  end
  return s
end


-- Reads contents of text file in path, in binary mode.
-- On error, returns nil and error message.
local function readfile(path)
  local fh, err = io.open(path, 'rb')
  if fh then
    local data; data, err = fh:read'*a'
    if data then return data end
  end
  return nil, err
end

-- Similar to string.gsub but with plain replacement (similar to option in string.match)
-- http://lua-users.org/lists/lua-l/2002-04/msg00118.html
-- CATEGORY: utility/string
local function plain_gsub(s, pattern, repl)
  repl = repl:gsub('(%%)', '%%%%')
  return s:gsub(pattern, repl)
end

-- Infer name of variable or literal that AST node represents.
-- This is for debugging messages.
local function infer_name(ast)
  if ast == nil then return nil
  elseif ast.tag == 'Id' then return ""'""..ast[1]..""'""
  elseif ast.tag == 'Number' then return 'number'
  elseif ast.tag == 'String' then",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",o5feRD
code,"function onStepIn(cid, item, position, lastPosition)
	if(isPlayer(cid)) then
		if(item.actionid == 8028) then
			if(getPlayerStorageValue(cid, 1060) >= 32) then
				doTeleportThing(cid, {x = 33027, y = 31084, z = 13})
				doSendMagicEffect({x = 33027, y = 31084, z = 13}, CONST_ME_TELEPORT)
			end
		end
	end
	return true
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-Xm2l-
code,"local env = ""Cloud""
local alert = require ""alert""
local out_message = ""blah""
require ""string""
require ""math""

function process_message ()
    percent = read_message(""Fields[system_disk_persistent_percent]"")
    if percent == nil then
        percent = 200 
    end
    env = read_message(""Fields[Env]"")
    if env == nil then
        env = ""Cloud"" 
    end
    out_message = string.format(""<!channel>\n VM's in %s are utilizing more than 85%% of their persistent disk\n <http://dockerserver.company.com:3000/dashboard/db/vm-level-stats-nonprod|Grafana NonProd VM Stats>"",env)
    ts = read_message(""Timestamp"")
    --- roughly 1 day throttle
    alert.set_throttle(1e14)
    alert.send(ts, out_message)
    return 0
end


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",B22Obo
code,"local awful			= require(""awful"")
awful.rules			= require(""awful.rules"")
local beautiful = require(""beautiful"")
local xresources = require(""beautiful.xresources"")
local dpi = xresources.apply_dpi
local naughty		= require(""naughty"")
local serialize = require('utils/serialize')

clientbuttons = awful.util.table.join(
    awful.button({ }, 1, function (c) client.focus = c; c:raise() end),
    awful.button({ modkey }, 1, function(c)
        awful.mouse.client.move(c)
        c:raise()
    end),
    awful.button({ modkey }, 3, awful.mouse.client.resize)
)
awful.rules.rules = {
    -- All clients will match this rule.
    { 
        rule = { },
        properties = {
            border_color = beautiful.border_normal,
            focus = awful.client.focus.filter,
            screen = function(c)
                local current_screen = awesome.startup and c.screen or awful.screen.focused()
                local client_geometry = c:geometry()
                -- 防止client在当前屏幕之外
                if client_geometry.x > current_screen.geometry.x + current_screen.geometry.width
                    or client_geometry.x + client_geometry.width < current_screen.geometry.x
                then
                    client_geometry.x = (current_screen.geometry.x + current_screen.geometry.width) / 2 - client_geometry.width / 2
                end
                if client_geometry.y > current_screen.geometry.y + current_screen.geometry.height
                    or client_geometry.y + client_geometry.height < current_screen.geometry.y
                then
                    client_geometry.y = current_screen.geometry.y
                end
                c:geometry(client_geometry)
                return current_screen
            end,
            keys = clientkeys,
            buttons = clientbuttons 
        } ,
    },
    {
        rule = { class = ""smplayer""  },
        properties = {
            callback = function(c)
                c:connect_signal(
                    'property::size',
                    function(tc) 
                        if tc.fullscreen then
                            tc.no_border = true
                            tc.border_width = 0
                        else
                            tc.no_border = false
                            tc.border_width = beautiful.border_width
                            tc.border_color = beautiful.border_normal
                        end
                    end
                )
            end,
        }
    },
    {
        rule = { class = ""org.remmina.Remmina""  },
        properties = {
            callback = function(c)
                c:connect_signal(
                    'property::size',
                    function(tc) 
                        if tc.fullscreen then
                            tc.no_border = true
                            tc.border_width = 0
                        else
                            tc.no_border = false
                            tc.border_width = beautiful.border_width
                            tc.border_color = beautiful.border_normal
                        end
                    end
                )
            end,
        }
    },
    {
        rule = { class = ""Synergy""  },
        properties = {
            size_hints_honor = false,
            maximized_vertical  = true,
        }
    },
    {
        rule = { class = ""sourceinsight4.exe""  },
        properties = {
            screen = screen.primary,
        }
    },
    {
        rule = { class = ""Xfdesktop""  },
        properties = {
            no_border = true,
            border_width = 0,
            x = screen.primary.geometry.x,
            y = screen.primary.geometry.y,
        }
    },
    {
        rule = { class = ""Plank""  },
        except = { name = ""Plank Clock Calendar"" },
        properties = {
            no_border = true,
            border_width = 0,
            minimized = false,
            dockable = false,
            ontop = false, -- set default value
            above = false, -- set default value
            below = true, -- set default value
            callback = function(c)
                c:connect_signal('focus', function(tc)
                    tc.ontop = true
                    tc.below = false
                    tc.above = true
                end)
                c:connect_signal('unfocus', function(tc)
                    tc.ontop = false
                    tc.below = true
                    tc.above = false
                end)
                c:connect_signal('property::minimized', function(tc) 
                    -- this client can not minized
                    tc.minimized = false
                end)
            end,
        }
    },
    { 
        rule = { class = ""Pcmanfm""  },
        except = {class = """"},
        properties = {
            border_width = 0,
            maximized = true,
            sticky = true,
            focusable = false,
            floating = false,
            type = ""desktop"",
            screen = screen.primary,
        }
    },
    {
    	rule = { class = ""Popup"" },
    	properties = { borde",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W57feF
code,"-----------------------------------
-- Area: Ordelles Caves
-- NPC:  Ruillont
-- Involved in Mission: The Rescue Drill
-- @pos -70 1 607 193
-----------------------------------
package.loaded[""scripts/zones/Ordelles_Caves/TextIDs""] = nil;
-----------------------------------

require(""scripts/globals/missions"");
require(""scripts/zones/Ordelles_Caves/TextIDs"");

-----------------------------------
-- onTrade Action
-----------------------------------

function onTrade(player,npc,trade)
    
    if (player:getCurrentMission(SANDORIA) == THE_RESCUE_DRILL and player:getVar(""MissionStatus"") == 9) then
        if (trade:hasItemQty(16535,1) and trade:getItemCount() == 1) then -- Trade Bronze Sword
            player:startEvent(0x0002);
        end
    end
    
end;

-----------------------------------
-- onTrigger Action
-----------------------------------

function onTrigger(player,npc)
    
    if (player:getCurrentMission(SANDORIA) == THE_RESCUE_DRILL) then
        local MissionStatus = player:getVar(""MissionStatus"");
        
        if (MissionStatus == 7) then
            player:startEvent(0x0001);
        elseif (MissionStatus >= 10 or player:hasCompletedMission(SANDORIA,THE_RESCUE_DRILL)) then
            player:showText(npc, RUILLONT_INITIAL_DIALOG + 9);
        elseif (MissionStatus >= 8) then
            player:showText(npc, RUILLONT_INITIAL_DIALOG);
        elseif (player:getNation() == SANDORIA) then
            player:showText(npc, RUILLONT_INITIAL_DIALOG + 2);
        else
            player:showText(npc, RUILLONT_INITIAL_DIALOG + 1);
        end
    end
    
end;

-----------------------------------
-- onEventUpdate
-----------------------------------

function onEventUpdate(player,csid,option)
--printf(""CSID: %u"",csid);
--printf(""RESULT: %u"",option);
end;

-----------------------------------
-- onEventFinish Action
-----------------------------------

function onEventFinish(player,csid,option)
--printf(""CSID: %u"",csid);
--printf(""RESULT: %u"",option);
    
    if (csid == 0x0001) then
        local rand = math.random(1,3);
        
        player:setVar(""theRescueDrillRandomNPC"",rand);
        player:setVar(""MissionStatus"",8);
    elseif (csid == 0x0002) then
        player:tradeComplete();
        player:setVar(""MissionStatus"",10);
    end
    
end;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qcequa
code,"local function set_bot_photo(msg, success, result)
  local receiver = get_receiver(msg)
  if success then
    local file = 'data/photos/bot.jpg'
    print('File downloaded to:', result)
    os.rename(result, file)
    print('File moved to:', file)
    set_profile_photo(file, ok_cb, false)
    send_large_msg(receiver, 'Photo changed!', ok_cb, false)
    redis:del(""bot:photo"")
  else
    print('Error downloading: '..msg.id)
    send_large_msg(receiver, 'Failed, please try again!', ok_cb, false)
  end
end
local function parsed_url(link)
  local parsed_link = URL.parse(link)
  local parsed_path = URL.parse_path(parsed_link.path)
  return parsed_path[2]
end
local function get_contact_list_callback (cb_extra, success, result)
  local text = "" ""
  for k,v in pairs(result) do
    if v.print_name and v.id and v.phone then
      text = text..string.gsub(v.print_name ,  ""_"" , "" "").."" [""..v.id..""] = ""..v.phone..""\n""
    end
  end
  local file = io.open(""contact_list.txt"", ""w"")
  file:write(text)
  file:flush()
  file:close()
  send_document(""user#id""..cb_extra.target,""contact_list.txt"", ok_cb, false)--.txt format
  local file = io.open(""contact_list.json"", ""w"")
  file:write(json:encode_pretty(result))
  file:flush()
  file:close()
  send_document(""user#id""..cb_extra.target,""contact_list.json"", ok_cb, false)--json format
end
local function user_info_callback(cb_extra, success, result)
  result.access_hash = nil
  result.flags = nil
  result.phone = nil
  if result.username then
    result.username = '@'..result.username
  end
  result.print_name = result.print_name:gsub(""_"","""")
  local text = serpent.block(result, {comment=false})
  text = text:gsub(""[{}]"", """")
  text = text:gsub('""', """")
  text = text:gsub("","","""")
  if cb_extra.msg.to.type == ""chat"" then
    send_large_msg(""chat#id""..cb_extra.msg.to.id, text)
  else
    send_large_msg(""user#id""..cb_extra.msg.to.id, text)
  end
end
local function get_dialog_list_callback(cb_extra, success, result)
  local text = """"
  for k,v in pairs(result) do
    if v.peer then
      if v.peer.type == ""chat"" then
        text = text..""group{""..v.peer.title..""}[""..v.peer.id..""](""..v.peer.members_num.."")""
      else
        if v.peer.print_name and v.peer.id then
          text = text..""user{""..v.peer.print_name..""}[""..v.peer.id..""]""
        end
        if v.peer.username then
          text = text..""(""..v.peer.username.."")""
        end
        if v.peer.phone then
          text = text..""'""..v.peer.phone..""'""
        end
      end
    end
    if v.message then
      text = text..'\nlast msg >\nmsg id = '..v.message.id
      if v.message.text then
        text = text .. ""\n text = ""..v.message.text
      end
      if v.message.action then
        text = text..""\n""..serpent.block(v.message.action, {comment=false})
      end
      if v.message.from then
        if v.message.from.print_name then
          text = text..""\n From > \n""..string.gsub(v.message.from.print_name, ""_"","" "")..""[""..v.message.from.id..""]""
        end
        if v.message.from.username then
          text = text..""( ""..v.message.from.username.."" )""
        end
        if v.message.from.phone then
          text = text..""' ""..v.message.from.phone.."" '""
        end
      end
    end
    text = text..""\n\n""
  end
  local file = io.open(""dialog_list.txt"", ""w"")
  file:write(text)
  file:flush()
  file:close()
  send_document(""user#id""..cb_extra.target,""dialog_list.txt"", ok_cb, false)--.txt format
  local file = io.open(""dialog_list.json"", ""w"")
  file:write(json:encode_pretty(result))
  file:flush()
  file:close()
  send_document(""user#id""..cb_extra.target,""dialog_list.json"", ok_cb, false)--json format
end
local function run(msg,matches)
    local data = load_data(_config.moderation.data)
    local receiver = get_receiver(msg)
    local group = msg.to.id
    if not is_admin(msg) then
    	return
    end
    if msg.media then
      	if msg.media.type == 'photo' and redis:get(""bot:photo"") then
      		if redis:get(""bot:photo"") == 'waiting' then
        		load_photo(msg.id, set_bot_photo, msg)
      		end
      	end
    end
    if matches[1] == ""setbotphoto"" then
    	redis:set(""bot:photo"", ""waiting"")
    	return 'Now send a photo to me ...'
    end
    if matches[1] == ""markread"" then
    	if matches[2] == ""on"" then
    		redis:set(""bot:markread"", ""on"")
    		return ""Bot markread turned on!""
    	end
    	if matches[2] == ""off"" then
    		redis:del(""bot:markread"")
    		return ""Bot markread turned off!""
    	end
    	return
    end
    if matches[1] == ""pm"" then
    	send_large_msg(""user#id""..matches[2],matches[3])
    	return ""Msg sent!\nUser ID : ""..matches[2]
    end
    if matches[1] == ""block"" then
    	if is_admin2(matches[2]) then
    		return ""You can't block admins|Sudo""
    	end
    	block_user(""user#id""..matches[2],ok_cb,false)
    	return ""User blocked\nID : ""..matches[2]
    end
    if matches[1] == ""unblock"" then
    	unblock_user(""user#id""..matches[2],ok_cb,false)
    	return ""User un",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_MUsoi
code,"return function()
	local CorePackages = game:GetService(""CorePackages"")
	local Roact = require(CorePackages.Roact)

	local DataProvider = require(script.Parent.Parent.DataProvider)
	local ServerJobsChart = require(script.Parent.ServerJobsChart)

	it(""should create and destroy without errors"", function()
		local element = Roact.createElement(DataProvider, {}, {
			ServerJobsChart = Roact.createElement(ServerJobsChart)
		})

		local instance = Roact.mount(element)
		Roact.unmount(instance)
	end)
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fR4fpy
code,"red = gr.material({0.8, 0.1, 0.1}, {0.5, 0.5, 0.5}, 25)
blue = gr.material({0.0, 0.0, 1.0}, {0.5, 0.5, 0.5}, 25)
rblue = gr.smaterial({0, 0, 0}, {1, 1, 1}, 50, 1, 1.65, 0)
blue = gr.material({0.0, 0.1, 1}, {0.5, 0.5, 0.5}, 25)
green = gr.material({0.0, 1.0, 0.0}, {0.5, 0.5, 0.5}, 25)
rgreen = gr.material({0.0, 0.1, 0.0}, {0.5, 0.5, 0.5}, 25)
rwhite = gr.material({1.0, 1.0, 1.0}, {1.0, 1.0, 1.0}, 25)
fwhite = gr.material({1.0, 1.0, 1.0}, {1.0, 1.0, 1.0}, 50, 1, 200, 10000)

root = gr.node('root')

-- floor
wall1 = gr.cube('wall1')
root:add_child(wall1)
wall1:set_material(fwhite)
wall1:translate(-15, -1, -15)
wall1:scale(30,1,30)

--roof
wall1 = gr.cube('wall1')
root:add_child(wall1)
wall1:set_material(rwhite)
wall1:translate(-15, 30, -15)
wall1:scale(30,1,30)

--Left wall
wall1 = gr.cube('wall1')
root:add_child(wall1)
wall1:set_material(red)
wall1:translate(-15, 0, -15)
wall1:rotate('z', 90)
wall1:scale(30,1,30)

-- right wall
wall1 = gr.cube('wall1')
root:add_child(wall1)
wall1:set_material(blue)
wall1:translate(15, 0, -15)
wall1:scale(1,30,30)

-- back wall
wall1 = gr.cube('wall1')
root:add_child(wall1)
wall1:set_material(rwhite)
wall1:translate(-15, 0, -15)
wall1:rotate('x', 90)
wall1:translate(0, 0, -30)
wall1:scale(30,1,30)

BALL = gr.cylinder('BALL')
BALL:translate(-4, 5, -7)
BALL:rotate('x', 90)
BALL:scale(4, 4, 5)
BALL:set_material(green)
root:add_child(BALL)

BALL = gr.cone('BALL')
BALL:translate(4, 15, 0)
BALL:rotate('x', 40)
BALL:rotate('y', 40)
BALL:scale(4, 4, 7)
BALL:set_material(red)
root:add_child(BALL)

white_light = gr.light(12000, {0.0, 29.0, 0.0}, {1, 1, 1}, {1, 0, 0})

camera = gr.pcamera({0, 15, 40}, {0, 0, -1}, {0, 1, 0}, 50, 0.1, 40)

gr.render(root, './img/conecyl.png', 1024, 1024,
	  camera,
	  {0.3, 0.3, 0.3}, {white_light}, {}, 0, 0, 1)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9-LR0g
code,"-----------------------------------------
-- ID: 15453
-- lugworm_belt
-----------------------------------------
require(""scripts/globals/msg"")
-----------------------------------------

function onItemCheck(target)
    local result = 0
    if target:getFreeSlotsCount() == 0 then
        result = dsp.msg.basic.ITEM_NO_USE_INVENTORY
    end
    return result
end

function onItemUse(target)
    target:addItem(17395, 12) -- lugworm
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2BTx1W
code,"--メガリス・ベトール
function c99628747.initial_effect(c)
	c:EnableReviveLimit()
	--ritual summon
	local e1=aux.AddRitualProcGreater2(c,c99628747.filter,nil,nil,c99628747.matfilter,true)
	e1:SetDescription(aux.Stringid(99628747,0))
	e1:SetType(EFFECT_TYPE_IGNITION)
	e1:SetCode(0)
	e1:SetRange(LOCATION_HAND)
	e1:SetCountLimit(1,99628747)
	e1:SetCost(c99628747.rscost)
	c:RegisterEffect(e1)
	--destroy
	local e2=Effect.CreateEffect(c)
	e2:SetDescription(aux.Stringid(99628747,1))
	e2:SetCategory(CATEGORY_DESTROY)
	e2:SetType(EFFECT_TYPE_SINGLE+EFFECT_TYPE_TRIGGER_O)
	e2:SetCode(EVENT_SPSUMMON_SUCCESS)
	e2:SetProperty(EFFECT_FLAG_CARD_TARGET+EFFECT_FLAG_DELAY)
	e2:SetCountLimit(1,99628748)
	e2:SetCondition(c99628747.descon)
	e2:SetTarget(c99628747.destg)
	e2:SetOperation(c99628747.desop)
	c:RegisterEffect(e2)
end
function c99628747.filter(c,e,tp,chk)
	return c:IsSetCard(0x138) and (not chk or c~=e:GetHandler())
end
function c99628747.matfilter(c,e,tp,chk)
	return not chk or c~=e:GetHandler()
end
function c99628747.rscost(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return e:GetHandler():IsDiscardable() end
	Duel.SendtoGrave(e:GetHandler(),REASON_COST+REASON_DISCARD)
end
function c99628747.cfilter(c)
	return c:IsType(TYPE_RITUAL) and c:IsType(TYPE_MONSTER)
end
function c99628747.descon(e,tp,eg,ep,ev,re,r,rp)
	return e:GetHandler():IsSummonType(SUMMON_TYPE_RITUAL)
end
function c99628747.destg(e,tp,eg,ep,ev,re,r,rp,chk,chkc)
	if chkc then return chkc:IsLocation(LOCATION_ONFIELD) and chkc:IsControler(1-tp) end
	if chk==0 then return Duel.IsExistingMatchingCard(c99628747.cfilter,tp,LOCATION_GRAVE,0,1,nil)
		and Duel.IsExistingMatchingCard(aux.TRUE,tp,0,LOCATION_ONFIELD,1,nil) end
	local g=Duel.GetMatchingGroup(c99628747.cfilter,tp,LOCATION_GRAVE,0,nil)
	local gc=g:GetClassCount(Card.GetCode)
	Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_DESTROY)
	local sg=Duel.SelectTarget(tp,aux.TRUE,tp,0,LOCATION_ONFIELD,1,gc,nil)
	Duel.SetOperationInfo(0,CATEGORY_DESTROY,sg,sg:GetCount(),0,0)
end
function c99628747.desop(e,tp,eg,ep,ev,re,r,rp)
	local tg=Duel.GetChainInfo(0,CHAININFO_TARGET_CARDS):Filter(Card.IsRelateToEffect,nil,e)
	if tg:GetCount()>0 then
		Duel.Destroy(tg,REASON_EFFECT)
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yTsX9N
code,"local mod	= DBM:NewMod(2396, ""DBM-Party-Shadowlands"", 1, 1182)
local L		= mod:GetLocalizedStrings()

mod:SetRevision(""20211125075428"")
mod:SetCreatureID(162693)
mod:SetEncounterID(2390)

mod:RegisterCombat(""combat"")

mod:RegisterEventsInCombat(
	""SPELL_AURA_APPLIED 321368 321754 320788 323730 323198"",
	""SPELL_AURA_REMOVED 321368 321754 320788 323730 323198"",
	""SPELL_CAST_START 320772"",
	""SPELL_CAST_SUCCESS 320788 323730 321894""
--	""SPELL_PERIODIC_DAMAGE"",
--	""SPELL_PERIODIC_MISSED"",
--	""UNIT_SPELLCAST_SUCCEEDED boss1""
)

--TODO, target scan dark exile to make it faster?
--[[
ability.id = 320772 and type = ""begincast""
 or (ability.id = 320788 or ability.id = 323730 or ability.id = 321894) and type = ""cast""
 or (ability.id = 321368 or ability.id = 321754) and type = ""applybuff""
--]]
local warnIceboundAegis				= mod:NewTargetNoFilterAnnounce(321754, 4)
local warnFrozenBinds				= mod:NewTargetNoFilterAnnounce(323730, 3)
local warnDarkExile					= mod:NewTargetNoFilterAnnounce(321894, 3)

local specWarnCometStorm			= mod:NewSpecialWarningDodge(320772, nil, nil, nil, 2, 2)
local specWarnFrozenBinds			= mod:NewSpecialWarningYou(323730, nil, nil, nil, 1, 2)
local specWarnFrozenBindsNear		= mod:NewSpecialWarningClose(323730, nil, nil, nil, 1, 2)
local yellFrozenBinds				= mod:NewYell(323730)
local yellFrozenBindsFades			= mod:NewShortYell(323730)
local specWarnDarkExile				= mod:NewSpecialWarningYou(321894, nil, nil, nil, 1, 5)
--local specWarnGTFO				= mod:NewSpecialWarningGTFO(257274, nil, nil, nil, 1, 8)

local timerCometStormCD				= mod:NewCDTimer(24.2, 320772, nil, nil, nil, 3)
local timerIceboundAegisCD			= mod:NewCDTimer(24.2, 321754, nil, nil, nil, 5, nil, DBM_COMMON_L.DAMAGE_ICON)
local timerFrozenBindsCD			= mod:NewCDTimer(24.2, 323730, nil, nil, nil, 3, nil, DBM_COMMON_L.MAGIC_ICON)
local timerDarkExileCD				= mod:NewCDTimer(35.2, 321894, nil, nil, nil, 3)--35.2-40+
local timerDarkExile				= mod:NewTargetTimer(50, 321894, nil, nil, nil, 5)

mod:AddInfoFrameOption(321754, true)

function mod:OnCombatStart(delay)
	timerFrozenBindsCD:Start(8.9-delay)--SUCCESS
	timerIceboundAegisCD:Start(11.7-delay)--11.7-14
	timerCometStormCD:Start(16.5-delay)--16.5-17.2
	timerDarkExileCD:Start(26.5-delay)--SUCCESS--26-30
end

function mod:OnCombatEnd()
	if self.Options.InfoFrame then
		DBM.InfoFrame:Hide()
	end
end

function mod:SPELL_CAST_START(args)
	local spellId = args.spellId
	if spellId == 320772 then
		specWarnCometStorm:Show()
		specWarnCometStorm:Play(""watchstep"")
		timerCometStormCD:Start()
	end
end

function mod:SPELL_CAST_SUCCESS(args)
	local spellId = args.spellId
	if spellId == 320788 or spellId == 323730 then
		timerFrozenBindsCD:Start()
	elseif spellId == 321894 then
		timerDarkExileCD:Start()
	end
end

function mod:SPELL_AURA_APPLIED(args)
	local spellId = args.spellId
	if spellId == 321368 or spellId == 321754 then
		warnIceboundAegis:Show(args.destName)
		timerIceboundAegisCD:Start()
		if self.Options.InfoFrame then
			DBM.InfoFrame:SetHeader(args.spellName)
			DBM.InfoFrame:Show(2, ""enemyabsorb"", nil, args.amount, ""boss1"")
		end
	elseif spellId == 320788 or spellId == 323730 then
		if args:IsPlayer() then
			specWarnFrozenBinds:Show()
			specWarnFrozenBinds:Play(""targetyou"")
			yellFrozenBinds:Yell()
			yellFrozenBindsFades:Countdown(spellId)
		elseif self:CheckNearby(16, args.destName) and not DBM:UnitDebuff(""player"", spellId) then
			specWarnFrozenBindsNear:CombinedShow(0.5, args.destName)
			specWarnFrozenBindsNear:ScheduleVoice(0.5, ""runaway"")
		else
			warnFrozenBinds:CombinedShow(0.5, args.destName)
		end
	elseif spellId == 323198 then
		timerDarkExile:Start(50, args.destName)
		if args:IsPlayer() then
			specWarnDarkExile:Show()
			specWarnDarkExile:Play(""teleyou"")
		else
			warnDarkExile:Show(args.destName)
		end
	end
end

function mod:SPELL_AURA_REMOVED(args)
	local spellId = args.spellId
	if spellId == 321368 or spellId == 321754 then
		if self.Options.InfoFrame then
			DBM.InfoFrame:Hide()
		end
	elseif spellId == 320788 or spellId == 323730 then
		if args:IsPlayer() then
			yellFrozenBindsFades:Cancel()
		end
	elseif spellId == 323198 then
		timerDarkExile:Stop(args.destName)
	end
end

--[[
function mod:SPELL_PERIODIC_DAMAGE(_, _, _, _, destGUID, _, _, _, spellId, spellName)
	if spellId == 309991 and destGUID == UnitGUID(""player"") and self:AntiSpam(2, 2) then
		specWarnGTFO:Show(spellName)
		specWarnGTFO:Play(""watchfeet"")
	end
end
mod.SPELL_PERIODIC_MISSED = mod.SPELL_PERIODIC_DAMAGE

function mod:UNIT_SPELLCAST_SUCCEEDED(uId, _, spellId)
	if spellId == 257453  then

	end
end
--]]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9zYNV8
code,"--EMギッタンバッタ
function c29169993.initial_effect(c)
	--indes
	local e1=Effect.CreateEffect(c)
	e1:SetType(EFFECT_TYPE_SINGLE)
	e1:SetProperty(EFFECT_FLAG_SINGLE_RANGE)
	e1:SetRange(LOCATION_MZONE)
	e1:SetCode(EFFECT_INDESTRUCTABLE_COUNT)
	e1:SetCountLimit(1)
	e1:SetValue(c29169993.valcon)
	c:RegisterEffect(e1)
	--tohand
	local e2=Effect.CreateEffect(c)
	e2:SetDescription(aux.Stringid(29169993,0))
	e2:SetCategory(CATEGORY_TOGRAVE+CATEGORY_TOHAND)
	e2:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_O)
	e2:SetRange(LOCATION_MZONE)
	e2:SetCode(EVENT_PHASE+PHASE_END)
	e2:SetProperty(EFFECT_FLAG_CARD_TARGET)
	e2:SetCountLimit(1)
	e2:SetCondition(c29169993.thcon)
	e2:SetTarget(c29169993.thtg)
	e2:SetOperation(c29169993.thop)
	c:RegisterEffect(e2)
	--special summon
	local e3=Effect.CreateEffect(c)
	e3:SetDescription(aux.Stringid(29169993,1))
	e3:SetCategory(CATEGORY_SPECIAL_SUMMON)
	e3:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_TRIGGER_O)
	e3:SetCode(EVENT_TO_GRAVE)
	e3:SetRange(LOCATION_GRAVE)
	e3:SetProperty(EFFECT_FLAG_DELAY)
	e3:SetCountLimit(1,29169993)
	e3:SetCondition(c29169993.spcon)
	e3:SetTarget(c29169993.sptg)
	e3:SetOperation(c29169993.spop)
	c:RegisterEffect(e3)
end
function c29169993.valcon(e,re,r,rp)
	return bit.band(r,REASON_BATTLE)~=0 and bit.band(e:GetHandler():GetSummonType(),SUMMON_TYPE_SPECIAL)==SUMMON_TYPE_SPECIAL
end
function c29169993.thcon(e,tp,eg,ep,ev,re,r,rp)
	return Duel.GetTurnPlayer()~=tp
end
function c29169993.thfilter(c)
	return c:IsSetCard(0x9f) and c:IsLevelBelow(3) and c:IsAbleToHand()
end
function c29169993.thtg(e,tp,eg,ep,ev,re,r,rp,chk,chkc)
	if chkc then return chkc:IsLocation(LOCATION_GRAVE) and chkc:IsControler(tp) and c29169993.thfilter(chkc) end
	if chk==0 then return e:GetHandler():IsAbleToGrave()
		and Duel.IsExistingTarget(c29169993.thfilter,tp,LOCATION_GRAVE,0,1,nil) end
	Duel.Hint(HINT_SELECTMSG,tp,HINTMSG_ATOHAND)
	local g=Duel.SelectTarget(tp,c29169993.thfilter,tp,LOCATION_GRAVE,0,1,1,nil)
	Duel.SetOperationInfo(0,CATEGORY_TOGRAVE,e:GetHandler(),1,0,0)
	Duel.SetOperationInfo(0,CATEGORY_TOHAND,g,1,0,0)
end
function c29169993.thop(e,tp,eg,ep,ev,re,r,rp)
	local tc=Duel.GetFirstTarget()
	local c=e:GetHandler()
	if c:IsRelateToEffect(e) and Duel.SendtoGrave(c,REASON_EFFECT)~=0 and c:IsLocation(LOCATION_GRAVE) and tc:IsRelateToEffect(e) then
		Duel.SendtoHand(tc,nil,REASON_EFFECT)
	end
end
function c29169993.cfilter(c)
	return c:IsType(TYPE_MONSTER) and c:IsSetCard(0x9f) and c:IsPreviousLocation(LOCATION_HAND)
end
function c29169993.spcon(e,tp,eg,ep,ev,re,r,rp)
	return eg:IsExists(c29169993.cfilter,1,nil) and not eg:IsContains(e:GetHandler())
end
function c29169993.sptg(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return Duel.GetLocationCount(tp,LOCATION_MZONE)>0
		and e:GetHandler():IsCanBeSpecialSummoned(e,0,tp,false,false) end
	Duel.SetOperationInfo(0,CATEGORY_SPECIAL_SUMMON,e:GetHandler(),1,0,0)
end
function c29169993.spop(e,tp,eg,ep,ev,re,r,rp)
	local c=e:GetHandler()
	if c:IsRelateToEffect(e) then
		Duel.SpecialSummon(c,0,tp,tp,false,false,POS_FACEUP)
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",J1atu3
code,"-----------------------------------
-- Shoulder Tackle
-- Hand-to-Hand weapon skill
-- Skill Level: 40
-- Stuns target. Chance of stunning varies with TP.
-- Will stack with Sneak Attack.
-- Aligned with the Aqua Gorget & Thunder Gorget.
-- Aligned with the Aqua Belt & Thunder Belt.
-- Element: None
-- Modifiers: VIT:100%
-- 100%TP    200%TP    300%TP
-- 1.00      1.00      1.00
-----------------------------------
require(""scripts/globals/status"");
require(""scripts/globals/settings"");
require(""scripts/globals/weaponskills"");
-----------------------------------

function onUseWeaponSkill(player, target, wsID)

	local params = {};
	params.numHits = 1;
	params.ftp100 = 1; params.ftp200 = 1; params.ftp300 = 1;
	params.str_wsc = 0.0; params.dex_wsc = 0.0; params.vit_wsc = 0.3; params.agi_wsc = 0.0; params.int_wsc = 0.0; params.mnd_wsc = 0.0; params.chr_wsc = 0.0;
	params.crit100 = 0.0; params.crit200 = 0.0; params.crit300 = 0.0;
	params.canCrit = false;
	params.acc100 = 0.0; params.acc200= 0.0; params.acc300= 0.0;
	params.atkmulti = 1;
	local damage, criticalHit, tpHits, extraHits = doPhysicalWeaponskill(player, target, params);

	if (USE_ADOULIN_WEAPON_SKILL_CHANGES == true) then
		params.vit_wsc = 1.0;
	end

	if damage > 0 then
		local tp = player:getTP();
		local duration = (tp/50);
		if (target:hasStatusEffect(EFFECT_STUN) == false) then
			target:addStatusEffect(EFFECT_STUN, 1, 0, duration);
		end
	end
	damage = damage * WEAPON_SKILL_POWER
	return tpHits, extraHits, criticalHit, damage;

end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",um6BfT
code,"local t = Def.ActorFrame{
	InitCommand = function(self) 
		self:delayedFadeIn(6)
	end,
	OffCommand = function(self)
		self:sleep(0.05)
		self:smooth(0.2)
		self:diffusealpha(0) 
	end
}

local frameX = SCREEN_CENTER_X/2
local frameY = SCREEN_CENTER_Y+100
local maxMeter = 30
local frameWidth = capWideScale(get43size(390),390)
local frameHeight = 110
local frameHeightShort = 61
local song
local course
local ctags = {}
local filterTags = {}

local function wheelSearch()
	local search = GHETTOGAMESTATE:getMusicSearch()
	GHETTOGAMESTATE:getSSM():GetMusicWheel():SongSearch(search)
end

local function updateTagFilter(tag)
	local ptags = tags:get_data().playerTags
	local charts = {}

	local playertags = {}
	for k,v in pairs(ptags) do
		playertags[#playertags+1] = k
	end

	local filterTags = tag
	if filterTags then
		local toFilterTags = {}
		toFilterTags[1] = filterTags
		local inCharts = {}

		for k, v in pairs(ptags[toFilterTags[1]]) do
			inCharts[k] = 1
		end
		toFilterTags[1] = nil
		for k, v in pairs(toFilterTags) do
			for key, val in pairs(inCharts) do
				if ptags[v][key] == nil then
					inCharts[key] = nil
				end
			end
		end
		for k, v in pairs(inCharts) do
			charts[#charts + 1] = k
		end
	end
	local out = {}
	if tag ~= nil then out[tag] = 1	end
	GHETTOGAMESTATE:setFilterTags(out)
	GHETTOGAMESTATE:getSSM():GetMusicWheel():FilterByStepKeys(charts)
	wheelSearch()
end

local steps = {
	PlayerNumber_P1
}

local trail = {
	PlayerNumber_P1
}

local profile = {
	PlayerNumber_P1
}

local topScore = {
	PlayerNumber_P1
}

local hsTable = {
	PlayerNumber_P1
}

local function generalFrame(pn)
	local t = Def.ActorFrame{
		SetCommand = function(self)
			self:xy(frameX,frameY)
			self:visible(GAMESTATE:IsPlayerEnabled(pn))
		end,

		UpdateInfoCommand = function(self)
			song = GAMESTATE:GetCurrentSong()
			for _,pn in pairs(GAMESTATE:GetEnabledPlayers()) do
				profile[pn] = GetPlayerOrMachineProfile(pn)
				steps[pn] = GAMESTATE:GetCurrentSteps(pn)
				topScore[pn] = getBestScore(pn, 0, getCurRate())
				if song and steps[pn] then
					ptags = tags:get_data().playerTags
					chartkey = steps[pn]:GetChartKey()
					ctags = {}
					for k,v in pairs(ptags) do
						if ptags[k][chartkey] then
							ctags[#ctags + 1] = k
						end
					end
				end
			end
			self:RunCommandsOnChildren(function(self) self:playcommand(""Set"") end)
		end,

		BeginCommand = function(self) self:playcommand('Set') end,
		PlayerJoinedMessageCommand = function(self) self:playcommand(""UpdateInfo"") end,
		PlayerUnjoinedMessageCommand = function(self) self:playcommand(""UpdateInfo"") end,
		CurrentSongChangedMessageCommand = function(self) self:playcommand(""UpdateInfo"") end,
		CurrentStepsP1ChangedMessageCommand = function(self) self:playcommand(""UpdateInfo"") end,
		CurrentRateChangedMessageCommand = function(self) self:playcommand(""UpdateInfo"") end
	}

	--Upper Bar
	t[#t+1] = quadButton(2) .. {
		InitCommand = function(self)
			self:zoomto(frameWidth,frameHeight)
			self:valign(0)
			self:diffuse(getMainColor(""frame""))
			self:diffusealpha(0.8)
		end
	}

	if not IsUsingWideScreen() then
		t[#t+1] = Def.Quad {
			InitCommand = function(self)
				self:halign(0):valign(0)
				self:xy(frameX-14,frameHeight/2)
				self:zoomto(65,frameHeight/2)
				self:diffuse(getMainColor(""frame""))
				self:diffusealpha(0.8)
			end
		}
	end

	-- Avatar background frame
	t[#t+1] = Def.Quad{
		InitCommand = function(self)
			self:xy(25+10-(frameWidth/2),5)
			self:zoomto(56,56)
			self:diffuse(color(""#000000""))
			self:diffusealpha(0.8)
		end,
		SetCommand = function(self)
			self:stoptweening()
			self:smooth(0.5)
			self:diffuse(getBorderColor())
		end,
		BeginCommand = function(self) self:queuecommand('Set') end
	}

	t[#t+1] = Def.Quad{
		InitCommand = function(self)
			self:xy(25+10-(frameWidth/2),5)
			self:zoomto(56,56)
			self:diffusealpha(0.8)
		end,
		BeginCommand = function(self)
			self:diffuseramp()
			self:effectcolor2(color(""1,1,1,0.6""))
			self:effectcolor1(color(""1,1,1,0""))
			self:effecttiming(2,1,0,0)
		end
	}

	t[#t+1] = quadButton(3) .. {
		InitCommand = function(self)
			self:xy(25+10-(frameWidth/2),5)
			self:zoomto(50,50)
			self:visible(false)
		end,
		MouseDownCommand = function(self, params)
			if params.button == ""DeviceButton_left mouse button"" then
				SCREENMAN:AddNewScreenToTop(""ScreenPlayerProfile"")
			end
		end
	}

	-- Avatar
	t[#t+1] = Def.Sprite {
		InitCommand = function (self) self:xy(25+10-(frameWidth/2),5):playcommand(""ModifyAvatar"") end,
		PlayerJoinedMessageCommand = function(self) self:queuecommand('ModifyAvatar') end,
		PlayerUnjoinedMessageCommand = function(self) self:queuecommand('ModifyAvatar') end,
		AvatarChangedMessageCommand = function(self) self:queuecommand('ModifyAvatar') end,
		ModifyAvatarCommand = function(self)
			self:visible(true)
			self:Load(getAvatarPath(PLAYER_1))
			self:zoomto(50,50)
		end
	}

	-- Player name
	t[#t+1] = LoadFont(""Common Bold"")..{
		InitCommand  = function(self)
			self:xy(69-frameWidth/2,9)
			self:zoom(0.6)
			self:halign(0)
			self:diffuse(color(colorConfig:get_data().selectMusic.ProfileCardText))
		end,
		",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TnVOmv
code,"--オーバー・コアリミット
function c36560997.initial_effect(c)
	--Activate
	local e1=Effect.CreateEffect(c)
	e1:SetType(EFFECT_TYPE_ACTIVATE)
	e1:SetCode(EVENT_FREE_CHAIN)
	c:RegisterEffect(e1)
	--atk
	local e2=Effect.CreateEffect(c)
	e2:SetType(EFFECT_TYPE_FIELD)
	e2:SetRange(LOCATION_SZONE)
	e2:SetTargetRange(LOCATION_MZONE,0)
	e2:SetCode(EFFECT_UPDATE_ATTACK)
	e2:SetTarget(aux.TargetBoolFunction(Card.IsSetCard,0x1d))
	e2:SetValue(500)
	c:RegisterEffect(e2)
	--atkup
	local e3=Effect.CreateEffect(c)
	e3:SetDescription(aux.Stringid(36560997,0))
	e3:SetCategory(CATEGORY_TOGRAVE)
	e3:SetType(EFFECT_TYPE_IGNITION)
	e3:SetRange(LOCATION_SZONE)
	e3:SetCountLimit(1)
	e3:SetCost(c36560997.atcost)
	e3:SetTarget(c36560997.attg)
	e3:SetOperation(c36560997.atop)
	c:RegisterEffect(e3)
end
function c36560997.cfilter(c)
	return c:IsCode(36623431) and c:IsDiscardable()
end
function c36560997.atcost(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return Duel.IsExistingMatchingCard(c36560997.cfilter,tp,LOCATION_HAND,0,1,nil) end
	Duel.DiscardHand(tp,c36560997.cfilter,1,1,REASON_COST+REASON_DISCARD)
end
function c36560997.filter(c)
	return c:IsFaceup() and c:IsSetCard(0x1d)
end
function c36560997.attg(e,tp,eg,ep,ev,re,r,rp,chk)
	if chk==0 then return Duel.IsExistingMatchingCard(c36560997.filter,tp,LOCATION_MZONE,0,1,nil) end
end
function c36560997.atop(e,tp,eg,ep,ev,re,r,rp)
	local c=e:GetHandler()
	if not c:IsRelateToEffect(e) then return end
	local g=Duel.GetMatchingGroup(c36560997.filter,tp,LOCATION_MZONE,0,nil)
	local tc=g:GetFirst()
	while tc do
		local e1=Effect.CreateEffect(c)
		e1:SetType(EFFECT_TYPE_SINGLE)
		e1:SetCode(EFFECT_UPDATE_ATTACK)
		e1:SetValue(1000)
		e1:SetReset(RESET_EVENT+0x1fe0000+RESET_PHASE+PHASE_END)
		tc:RegisterEffect(e1)
		tc=g:GetNext()
	end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LFKmT-
code,"obj-$(CONFIG_MTK_USBFSH) := musbfsh_core.o musbfsh_mt65xx.o

ccflags-y += -I$(MTK_PATH_SOURCE)/drivers/usb11/",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2LIif9
code,"BOARD ?= nucleo_f103rb
CONF_FILE = prj.conf

include ${ZEPHYR_BASE}/Makefile.inc
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",we4rlj
code,"# Makefile
TOP_DIR := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))
REQUIREMENTS_FILE := requirements.txt
ENVIRONMENT_FILE := conda_lock.yml

third_party/make-env/conda.mk:
	git submodule init
	git submodule update --init --recursive

include third_party/make-env/conda.mk

ifeq ($(origin CMAKE_COMMAND),undefined)
CMAKE_COMMAND := cmake
else
CMAKE_COMMAND := ${CMAKE_COMMAND}
endif

.PHONY: all env

all: env
	cd build && $(MAKE)

clean::
	rm -rf build

# Conda Lock contains all dependencies. PIP often fails if a package is both
# specified to be installed directly and as a dependency of another package.
env:: export PIP_NO_DEPS = true
env:: | $(CONDA_ENV_PYTHON)
	git submodule init
	git submodule update --init --recursive
	@$(IN_CONDA_ENV) mkdir -p build && cd build && $(CMAKE_COMMAND) ${CMAKE_FLAGS} ..

build/Makefile:
	make env

.PHONY: Makefile

#%: build/Makefile
#	@$(IN_CONDA_ENV) cd build && $(MAKE) $@
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IXltU6
code,"PKG_NAME = node
PKG_VERS = 0.12.2
PKG_EXT = tar.gz
PKG_DIST_NAME = $(PKG_NAME)-v$(PKG_VERS).$(PKG_EXT)
PKG_DIST_SITE = http://nodejs.org/dist/v$(PKG_VERS)/
PKG_DIR = $(PKG_NAME)-v$(PKG_VERS)

REQUIRED_DSM = 5.0
UNSUPPORTED_ARCHS = $(ARMv5_ARCHES) $(PPC_ARCHES)

HOMEPAGE = http://nodejs.org/
COMMENT  = Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications.
LICENSE  = MIT

CONFIGURE_ARGS = --without-snapshot --dest-os=linux --prefix=$(STAGING_INSTALL_PREFIX)
ENV += LINK.target=$(TC_PATH)$(TC_PREFIX)g++

POST_INSTALL_TARGET = myPostInstall

include ../../mk/spksrc.cross-cc.mk

.PHONY: myPostInstall
myPostInstall:
	sed -i -e 's|^#\!$(STAGING_INSTALL_PREFIX)|#\!$(INSTALL_PREFIX)|' $(STAGING_INSTALL_PREFIX)/lib/node_modules/npm/bin/npm-cli.js
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",niYqBn
code,"# =============================================================
#
# linux/arch/mips/galileo/compressed/Makefile
#
# By RidgeRun Inc.
#
# Description:
#   Create a system containing a copy of the compressed vmlinux kernel.
#   The system knows how to decompress the contained kernel and then
#   jump to it resulting in a linux kernel boot.
#
#   The system comes in three forms:
#
#       1. - ramsys - 
#          to be loaded into ram then run. When run
#          it decompresses the kernel housed in its internal
#          data structures and then jumps to the image which
#          results in a linux kernel boot.
#
#       2. - flashsys - 
#          to be loaded into ram so that it can be
#          burned into the onboard flash. Then the board jumpers
#          can be switched so that the next power cycle caused
#          the system in flash to run which then proceeds as
#          described by #1 above.
#          Note: burner.srec is the utility that will allow
#          the user to get this image into flash.
#
#       3. - flashsys2 - 
#          to be loaded into ram so that it can be
#          burned into the onboard flash. Then on each power
#          cycle when the standard PMON prompt is presented 
#          the user can type `call 0xbf000000` to invoke
#          the system in flash which then proceeds as
#          described by #1 above.
#          Note: burner.srec is the utility that will allow
#          the user to get this image into flash.
#
#       4. - burner.srec -
#          related to #2 and #3 above.
#
# =============================================================

USE_STANDARD_AS_RULE := true

all: ramsys.srec \
     flashsys.srec \
     flashsys2.srec \
     burner.srec

SYSTEM = $(TOPDIR)/vmlinux

CFLAGS_2 = -DCONSOLE_SERIAL -DDELIMITERLINES -DGALILEO_PORT \
           -DANSIESC -DELF_IMAGE -DELF_IMAGE -DDOWNLOAD_PROTO_TFTP \
           -DEVB64120A -D__MIPSEB__ -DINCLUDE_EEPRO100 \
           -DINCLUDE_GETH0 -DNOPRINTK -DPROM -DCOMPRESSEDVMLINUX

sbdreset_evb64120A.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c sbdreset_evb64120A.S -o $*.o
memory.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c memory.c -o $*.o
pci.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c pci.c -o $*.o
pci_etherboot.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c pci_etherboot.c -o $*.o
load.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c load.c -o $*.o
flashdrv.o:
	$(CC) $(CFLAGS) $(CFLAGS_2) -c flashdrv.c -o $*.o

gz2asm: gz2asm.c
	g++ -o gz2asm gz2asm.c

doit: doit.c
	gcc -o doit doit.c

piggy.gz: $(SYSTEM)
	rm -f piggy piggy.gz 
	$(OBJCOPY) -S -O binary $(SYSTEM) piggy
	gzip -f -9 < piggy > piggy.gz

piggy.S: doit fixit piggy.gz
	./doit < piggy.gz > piggy.S; . ./fixit piggy.S

OBJECTS_ramsys    = head.o misc.o piggy.o ../serialGT.o
OBJECTS_flashsys  = sbdreset_evb64120A.o evb64120A_Setup.o pci_etherboot.o memory.o pci.o head.o misc.o piggy.o ../serialGT.o
OBJECTS_flashsys2 = xfer.o head.o misc.o piggy.o ../serialGT.o
OBJECTS_burner    = burner.o load.o flashdrv.o

ramsys.srec : $(OBJECTS_ramsys) ld.script.gal
	@# Note: this image is intended to run out of ram. No flash involved.
	$(LD) -T ld.script.gal -o ramsys $(OBJECTS_ramsys) 
	$(NM) ramsys | grep -v '\(compiled\)\|\(\.o$$\)\|\( [aU] \)\|\(\.\.ng$$\)\|\(LASH[RL]DI\)' | sort > System_ramsys.map
	$(OBJCOPY) -O srec ramsys ramsys.srec
	cp ramsys.srec $(TOPDIR)/.

flashsys.srec : $(OBJECTS_flashsys) ld.sys.big.Flash
	@# Note1: Use the burn utility to get this image into flash.
	@# Note2: This image is intended to run out of flash as invoked
	@# directly at powerup when EVB64120A jumpers are configured to 
	@# bypass the onboard eprom.
	@# Assumes that 0xBFC00000 is the bootup run address (normal MIPS).
	@# And assumes that EVB64120A jumber J11 is added to the board and jumber
	@# J20 is moved from the 2&3 position to the 1&2 position instead. Without
	@# the jumper settings the system will execute at address 0xBFC00000,
	@# as normal, yet that address will map to the onboard eeprom instead
	@# of the onboard flash.
	@# 
	$(LD) -T ld.sys.big.Flash -o flashsys $(OBJECTS_flashsys) 
	$(NM) flashsys | grep -v '\(compiled\)\|\(\.o$$\)\|\( a \)' | sort > System_flashsys.map
	@#
	@# Next, Create the image that we want to place in the flash part.
	$(OBJCOPY)  -S -g --strip-unneeded \
	      --adjust-section-vma=.text+0x3f820000 \
	      --adjust-section-vma=.rodata+0x3f820000 \
	      --adjust-section-vma=.reginfo+0x3f820000 \
	      --adjust-section-vma=.data+0x3f820000  \
	      --remove-section=.bss \
	      --remove-section=.scommon \
	      --remove-section=.note \
	      --remove-section=.comment \
	      flashsys flashsys.temp
	@#
	@# Next, change the addresses so that when we download to
	@# to the board's ram it will land starting at address 0xA0300000
	@# because this is where we have choosen to have the image temporarily sit
	@# while we subsequently burn it (using some method not revealed here) into
	@# the board's flash. After the burn the system can be setup (via jumpers) 
	@# to boot this image directory from the flash part.
	$(OBJCOPY) -O srec --adjust-vma=0xe0700000 flashsys.temp flashsys.srec
	cp flashsys.srec $(TOPDIR",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hwex7s
code,"include $(PEGASUS_ROOT)/mak/config.mak

DIR = cimple/pegasus/indications/MyIndication/Provider

LIBRARY = MyIndicationProvider

LIBRARIES = \
    pegqueryexpression \
    pegprovider \
    pegcql \
    pegwql \
    pegquerycommon \
    pegclient \
    pegcommon
	
SOURCES = MyIndicationProvider.cpp

include $(PEGASUS_ROOT)/mak/dynamic-library.mak

register:
	cimmofl MyIndication.mof
	cimmofl -n root/PG_InterOp Registration.mof
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HoiBwg
code,"#
# (C) Copyright 2003-2006
# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
#
# See file CREDITS for list of people who contributed to this
# project.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#

include $(TOPDIR)/config.mk

LIB	= $(obj)lib$(CPU).o

START	= start.o
COBJS	= cpu.o interrupts.o 
SOBJS	= cache.o 

SRCS	:= $(START:.o=.S) $(SOBJS:.o=.S) $(COBJS:.o=.c)
OBJS	:= $(addprefix $(obj),$(SOBJS) $(COBJS))
START	:= $(addprefix $(obj),$(START))

all:	$(obj).depend $(START) $(LIB)

$(LIB):	$(OBJS)
	$(call cmd_link_o_target, $(OBJS))

#########################################################################

# defines $(obj).depend target
include $(SRCTREE)/rules.mk

sinclude $(obj).depend

#########################################################################
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u3AnUq
code,"C_SOURCES := main.c
EXE := process_io

include Makefile.rules
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LyyLtM
code,"#/*
#    FreeRTOS V9.0.1 - Copyright (C) 2017 Real Time Engineers Ltd.
#	
#
#    ***************************************************************************
#     *                                                                       *
#     *    FreeRTOS tutorial books are available in pdf and paperback.        *
#     *    Complete, revised, and edited pdf reference manuals are also       *
#     *    available.                                                         *
#     *                                                                       *
#     *    Purchasing FreeRTOS documentation will not only help you, by       *
#     *    ensuring you get running as quickly as possible and with an        *
#     *    in-depth knowledge of how to use FreeRTOS, it will also help       *
#     *    the FreeRTOS project to continue with its mission of providing     *
#     *    professional grade, cross platform, de facto standard solutions    *
#     *    for microcontrollers - completely free of charge!                  *
#     *                                                                       *
#     *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
#     *                                                                       *
#     *    Thank you for using FreeRTOS, and thank you for your support!      *
#     *                                                                       *
#    ***************************************************************************
#
#
#    This file is part of the FreeRTOS distribution.
#
#    FreeRTOS is free software; you can redistribute it and/or modify it under
#    the terms of the GNU General Public License (version 2) as published by the
#    Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
#    >>>NOTE<<< The modification to the GPL is included to allow you to
#    distribute a combined work that includes FreeRTOS without being obliged to
#    provide the source code for proprietary components outside of the FreeRTOS
#    kernel.  FreeRTOS is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#    more details. You should have received a copy of the GNU General Public
#    License and the FreeRTOS license exception along with FreeRTOS; if not it
#    can be viewed here: http://www.freertos.org/a00114.html and also obtained
#    by writing to Richard Barry, contact details for whom are available on the
#    FreeRTOS WEB site.
#
#    1 tab == 4 spaces!
#
#    http://www.FreeRTOS.org - Documentation, latest information, license and
#    contact details.
#
#    http://www.SafeRTOS.com - A version that is certified for use in safety
#    critical systems.
#
#    http://www.OpenRTOS.com - Commercial support, development, porting,
#    licensing and training services.
#*/


CC=arm-elf-gcc
OBJCOPY=arm-elf-objcopy
ARCH=arm-elf-ar
CRT0=boot.s
USE_THUMB_MODE=YES
DEBUG=-g
OPTIM=-Os
RUN_MODE=RUN_FROM_ROM
LDSCRIPT=lpc2106-rom.ld


#
# CFLAGS common to both the THUMB and ARM mode builds
#
CFLAGS=-Wall -D $(RUN_MODE) -D GCC_ARM7 -I. -I../../Source/include \
		-I../Common/include $(DEBUG) -mcpu=arm7tdmi -T$(LDSCRIPT) \
		-Wcast-align $(OPTIM) -fomit-frame-pointer

ifeq ($(USE_THUMB_MODE),YES)
	CFLAGS += -mthumb-interwork -D THUMB_INTERWORK
	THUMB_FLAGS=-mthumb
endif


LINKER_FLAGS=-Xlinker -oWebServeDemo.elf -Xlinker -M -Xlinker -Map=WebServeDemo.map

#
# Source files that can be built to THUMB mode.
#
THUMB_SRC = \
../../Source/tasks.c \
../../Source/queue.c \
../../Source/list.c \
../../Source/portable/MemMang/heap_2.c \
../../Source/portable/GCC/ARM7_LPC2000/port.c \
../Common/Minimal/flash.c \
../Common/Minimal/dynamic.c \
../Common/Minimal/semtest.c \
../Common/Minimal/PollQ.c \
../Common/Minimal/BlockQ.c \
../Common/Minimal/integer.c \
../ARM7_LPC2106_GCC/ParTest/ParTest.c \
main.c \
TCP.c \
HTTP_Serv.c \
i2c.c

#
# Source files that must be built to ARM mode.
#
ARM_SRC = \
../../Source/portable/GCC/ARM7_LPC2000/portISR.c \
i2cISR.c \
TCPISR.c

#
# Define all object files.
#
ARM_OBJ = $(ARM_SRC:.c=.o)
THUMB_OBJ = $(THUMB_SRC:.c=.o)

WebServeDemo.hex : WebServeDemo.elf
	$(OBJCOPY) WebServeDemo.elf -O ihex WebServeDemo.hex

WebServeDemo.elf : $(ARM_OBJ) $(THUMB_OBJ) $(CRT0) Makefile
	$(CC) $(CFLAGS) $(ARM_OBJ) $(THUMB_OBJ) -nostartfiles $(CRT0) $(LINKER_FLAGS)

$(THUMB_OBJ) : %.o : %.c $(LDSCRIPT) Makefile
	$(CC) -c $(THUMB_FLAGS) $(CFLAGS) $< -o $@

$(ARM_OBJ) : %.o : %.c $(LDSCRIPT) Makefile
	$(CC) -c $(CFLAGS) $< -o $@

clean :
	touch makefile







	


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EdekAm
code,"default:
	@echo ""Explicit target required""

jemalloc:
	cd jemalloc && ./configure --with-jemalloc-prefix=je_ --enable-cc-silence CFLAGS=""$(JEMALLOC_CFLAGS)"" LDFLAGS=""$(JEMALLOC_LDFLAGS)""
	cd jemalloc && $(MAKE) lib/libjemalloc.a

distclean:
	-(cd jemalloc && [ -f Makefile ] && $(MAKE) distclean) > /dev/null || true

.PHONY: default jemalloc distclean
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4aAAvI
code,"CFLAGS?=	-Wall -ggdb -W -O
CC?=		gcc
LIBS?=
LDFLAGS?=
PREFIX?=	/usr/local
VERSION=1.5
TMPDIR=/tmp/webbench-$(VERSION)

all:   webbench tags

tags:  *.c
	-ctags *.c

install: webbench
	install -s webbench $(DESTDIR)$(PREFIX)/bin	
	install -m 644 webbench.1 $(DESTDIR)$(PREFIX)/man/man1	
	install -d $(DESTDIR)$(PREFIX)/share/doc/webbench
	install -m 644 debian/copyright $(DESTDIR)$(PREFIX)/share/doc/webbench
	install -m 644 debian/changelog $(DESTDIR)$(PREFIX)/share/doc/webbench

webbench: webbench.o Makefile
	$(CC) $(CFLAGS) $(LDFLAGS) -o webbench webbench.o $(LIBS) 

clean:
	-rm -f *.o webbench *~ core *.core tags
	
tar:   clean
	-debian/rules clean
	rm -rf $(TMPDIR)
	install -d $(TMPDIR)
	cp -p Makefile webbench.c socket.c webbench.1 $(TMPDIR)
	install -d $(TMPDIR)/debian
	-cp -p debian/* $(TMPDIR)/debian
	ln -sf debian/copyright $(TMPDIR)/COPYRIGHT
	ln -sf debian/changelog $(TMPDIR)/ChangeLog
	-cd $(TMPDIR) && cd .. && tar cozf webbench-$(VERSION).tar.gz webbench-$(VERSION)

webbench.o:	webbench.c socket.c Makefile

.PHONY: clean install all tar
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BEjgk6
code,"#
# Makefile for the Linux Wireless network device drivers.
#

obj-$(CONFIG_IPW2100) += ipw2x00/
obj-$(CONFIG_IPW2200) += ipw2x00/

obj-$(CONFIG_HERMES)		+= orinoco/

obj-$(CONFIG_AIRO)		+= airo.o
obj-$(CONFIG_AIRO_CS)		+= airo_cs.o airo.o

obj-$(CONFIG_ATMEL)             += atmel.o
obj-$(CONFIG_PCI_ATMEL)         += atmel_pci.o 
obj-$(CONFIG_PCMCIA_ATMEL)      += atmel_cs.o

obj-$(CONFIG_AT76C50X_USB)      += at76c50x-usb.o

obj-$(CONFIG_PRISM54)		+= prism54/

obj-$(CONFIG_HOSTAP)		+= hostap/
obj-$(CONFIG_B43)		+= b43/
obj-$(CONFIG_B43LEGACY)		+= b43legacy/
obj-$(CONFIG_ZD1211RW)		+= zd1211rw/
obj-$(CONFIG_RTL8180)		+= rtl818x/
obj-$(CONFIG_RTL8187)		+= rtl818x/

# 16-bit wireless PCMCIA client drivers
obj-$(CONFIG_PCMCIA_RAYCS)	+= ray_cs.o
obj-$(CONFIG_PCMCIA_WL3501)	+= wl3501_cs.o

obj-$(CONFIG_USB_NET_RNDIS_WLAN)	+= rndis_wlan.o

obj-$(CONFIG_USB_ZD1201)	+= zd1201.o
obj-$(CONFIG_LIBERTAS)		+= libertas/

obj-$(CONFIG_LIBERTAS_THINFIRM)	+= libertas_tf/

obj-$(CONFIG_ADM8211)	+= adm8211.o

obj-$(CONFIG_MWL8K)	+= mwl8k.o

obj-$(CONFIG_IWLWIFI)	+= iwlwifi/
obj-$(CONFIG_RT2X00)	+= rt2x00/

obj-$(CONFIG_P54_COMMON)	+= p54/

obj-$(CONFIG_ATH_COMMON)	+= ath/

obj-$(CONFIG_MAC80211_HWSIM)	+= mac80211_hwsim.o

obj-$(CONFIG_WL12XX)	+= wl12xx/

obj-$(CONFIG_IWM)	+= iwmc3200wifi/

#obj-$(CONFIG_BCM4329)	+= bcm4329/

#obj-$(CONFIG_LIBRA_SDIOIF)	+= libra/
#obj-$(CONFIG_BROADCOM_WIFI)     += bcm4330/
#obj-$(CONFIG_BROADCOM_WIFI)     += bcm4329/",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cah6Qb
code,"# 
# Copyright (C) 2006-2008 OpenWrt.org
#
# This is free software, licensed under the GNU General Public License v2.
# See /LICENSE for more information.
#

include $(TOPDIR)/rules.mk
include $(INCLUDE_DIR)/kernel.mk

PKG_NAME:=qc-usb
PKG_VERSION:=0.6.6
PKG_RELEASE:=2

PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
PKG_SOURCE_URL:=@SF/qce-ga
PKG_MD5SUM:=9eab8fb3a75326d1565d59b0c7256075

include $(INCLUDE_DIR)/package.mk

define Package/qc-usb/Default
  URL:=http://qce-ga.sourceforge.net/
endef

define Package/qc-usb-utils
$(call Package/qc-usb/Default)
  SECTION:=utils
  CATEGORY:=Utilities
  TITLE:=Utility programs for the qc-usb kernel module
endef

define Package/qc-usb-utils/description
 Utilities to tweak parameters of your QuickCam Express or similar webcam. 
 These programs are completely useless without a qc-usb-modules package.
endef

define KernelPackage/video-quickcam
$(call Package/qc-usb/Default)
  SUBMENU:=Video Support
  TITLE:=QuickCam Express USB webcam support
  DEPENDS:=@USB_SUPPORT @LINUX_2_4||LINUX_2_6_25||LINUX_2_6_27||LINUX_2_6_28 +kmod-usb-core +kmod-video-core
  FILES:=$(PKG_BUILD_DIR)/quickcam.$(LINUX_KMOD_SUFFIX)
  AUTOLOAD:=$(call AutoLoad,90,quickcam)
endef

define KernelPackage/video-quickcam/description
 Kernel support for Logitech's QuickCam Express webcam and other webcams 
 with similar chipsets.
endef

ifeq ($(KERNEL),2.4)
  ifeq ($(LINUX_KARCH),i386)
    KERNEL_C_OPTS:= -Os -mpreferred-stack-boundary=2 -march=i486 -fno-unit-at-a-time
  endif
  ifeq ($(LINUX_KARCH),mips)
    KERNEL_C_OPTS:= -Os -G 0 -mlong-calls -mno-abicalls -fno-pic -finline-limit=100000 -mabi=32 -march=mips32 -Wa,-32 -Wa,-march=mips32 -Wa,-mips32 -Wa,--trap
  endif
endif

ifneq ($(CONFIG_PACKAGE_kmod-video-quickcam),)
  define Build/Compile/kmod
	$(MAKE) -C $(PKG_BUILD_DIR) \
		LINUX_DIR=""$(LINUX_DIR)"" \
		ARCH=""$(LINUX_KARCH)"" \
		CROSS_COMPILE=""$(TARGET_CROSS)"" \
		CC=""$(TARGET_CC)"" \
		LD=""$(TARGET_CC) -nodefaultlibs -nostartfiles"" \
		USER_OPT=""$(KERNEL_C_OPTS)"" \
		quickcam.$(LINUX_KMOD_SUFFIX)
  endef
endif

define Build/Compile/user
	$(MAKE) -C $(PKG_BUILD_DIR) \
		CC=""$(TARGET_CC)"" \
		CFLAGS=""$(TARGET_CFLAGS)"" \
		qcset
endef

define Build/Compile
	$(call Build/Compile/kmod)
	$(call Build/Compile/user)
endef

define Package/qc-usb-utils/install
	$(INSTALL_DIR) $(1)/usr/bin
	$(INSTALL_BIN) $(PKG_BUILD_DIR)/qcset $(1)/usr/bin/
endef

$(eval $(call BuildPackage,qc-usb-utils))
$(eval $(call KernelPackage,video-quickcam))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QO0gvk
code,"
ifeq ($(OS),Linux)
CXXFLAGS=-O3 -g -Wall -I../include/
else
CXXFLAGS=-O3 -g -Wall -L/usr/local/lib -lgnugetopt -I/usr/local/include -I/usr/include -I../include/
endif

all: client

client: client.cc ../lib/protoverlay.o

clean:
	rm -f *~ core *.o client
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",f26F2q
code,"VERSION=0.1
SCM=$(shell if test -d .svn; then echo svn; elif test -d .git; then echo git; fi)
DATE=$(shell date +%Y%m%d%H%M)
BUILD=build

INITVM_ARCH=$(shell bash -c '. common_functions ; build_host_arch; echo $$BUILD_INITVM_ARCH')

ifeq ($(SCM),svn)
SVNVER=_SVN$(shell LANG=C svnversion .)
endif

prefix=/usr
bindir=$(prefix)/bin
datadir=$(prefix)/share
libdir=$(prefix)/lib
pkglibdir=$(libdir)/$(BUILD)
mandir=$(datadir)/man
man1dir=$(mandir)/man1
sysconfdir=/etc
DESTDIR=

all:

.PHONY:	test test-debtransform doc

test:
	PERL5LIB=. prove -v

test-debtransform:
	# debtransform test suite
	cd test-debtransform &&	./run.sh

install:
	install -m755 -d \
	    $(DESTDIR)$(pkglibdir)/configs \
	    $(DESTDIR)$(pkglibdir)/baselibs_configs \
	    $(DESTDIR)$(pkglibdir)/Build \
	    $(DESTDIR)$(pkglibdir)/PBuild \
	    $(DESTDIR)$(pkglibdir)/emulator \
	    $(DESTDIR)$(bindir) \
	    $(DESTDIR)$(man1dir)
	install -m755 \
	    build \
	    pbuild \
	    vc \
	    createdirdeps \
	    order \
	    expanddeps \
	    computeblocklists \
	    extractbuild \
	    getbinaryid \
	    getbuildids \
	    killchroot \
	    queryconfig \
	    common_functions \
	    init_buildsystem \
	    substitutedeps \
	    debtransform \
	    debtransformbz2 \
	    debtransformxz \
	    debtransformzip \
	    mkbaselibs \
	    mkdrpms \
	    listinstalled \
	    call-flatpak-builder \
	    createzyppdeps \
	    createarchdeps \
	    createdebdeps \
	    createrepomddeps \
	    createyastdeps \
	    changelog2spec \
	    spec2changelog \
	    download \
	    runservices \
	    spec_add_patch \
	    spectool \
	    signdummy \
	    unpackarchive \
	    unrpm \
	    telnet_login_wrapper \
	    startdockerd \
	    dummyhttpserver \
	    patchdockerfile \
	    obs-docker-support \
	    create_container_package_list \
	    call-podman \
	    queryobs \
	    writemodulemd \
	    download_assets \
	    export_debian_orig_from_git \
	    $(DESTDIR)$(pkglibdir)
	install -m644 \
	    qemu-reg \
	    lxc.conf \
	    build-validate-params \
	    openstack-console \
	    $(DESTDIR)$(pkglibdir)
	install -m755 emulator/emulator.sh $(DESTDIR)$(pkglibdir)/emulator/
	install -m644 Build/*.pm $(DESTDIR)$(pkglibdir)/Build
	install -m644 PBuild/*.pm $(DESTDIR)$(pkglibdir)/PBuild
	install -m644 build-vm build-vm-* $(DESTDIR)$(pkglibdir)
	install -m644 build-recipe build-recipe-* $(DESTDIR)$(pkglibdir)
	install -m644 build-pkg build-pkg-* $(DESTDIR)$(pkglibdir)
	install -m644 *.pm $(DESTDIR)$(pkglibdir)
	install -m644 configs/* $(DESTDIR)$(pkglibdir)/configs
	install -m644 baselibs_configs/* $(DESTDIR)$(pkglibdir)/baselibs_configs
	install -m644 build.1 $(DESTDIR)$(man1dir)
	install -m644 pbuild.1 $(DESTDIR)$(man1dir)
	install -m644 buildvc.1 $(DESTDIR)$(man1dir)
	install -m644 unrpm.1 $(DESTDIR)$(man1dir)
	ln -sf $(pkglibdir)/build $(DESTDIR)$(bindir)/build
	ln -sf $(pkglibdir)/pbuild $(DESTDIR)$(bindir)/pbuild
	ln -sf $(pkglibdir)/vc    $(DESTDIR)$(bindir)/buildvc
	ln -sf $(pkglibdir)/unrpm $(DESTDIR)$(bindir)/unrpm
	ln -s baselibs_configs/baselibs_global.conf $(DESTDIR)$(pkglibdir)/baselibs_global.conf
	ln -s baselibs_configs/baselibs_global-deb.conf $(DESTDIR)$(pkglibdir)/baselibs_global-deb.conf

# Allow initvm to be packaged seperately from the rest of build.  This
# is useful because it is distributed as a static binary package (e.g.
# build-initvm-static) whereas the build scripts package is noarch.

initvm: initvm.c
	$(CC) -o $@.$(INITVM_ARCH) -static $(CFLAGS) initvm.c

initvm-all: initvm

initvm-build: initvm

initvm-install: initvm
	install -m755 -d $(DESTDIR)$(pkglibdir)
	install -m755 initvm.$(INITVM_ARCH) $(DESTDIR)$(pkglibdir)/initvm.$(INITVM_ARCH)


dist:
ifeq ($(SCM),svn)
	rm -rf $(BUILD)-$(VERSION)$(SVNVER)
	svn export . $(BUILD)-$(VERSION)$(SVNVER)
	tar --force-local -cjf $(BUILD)-$(VERSION)$(SVNVER).tar.bz2 $(BUILD)-$(VERSION)$(SVNVER)
	rm -rf $(BUILD)-$(VERSION)$(SVNVER)
else
ifeq ($(SCM),git)
	git archive --prefix=$(BUILD)-$(VERSION)_git$(DATE)/ HEAD| bzip2 > $(BUILD)-$(VERSION)_git$(DATE).tar.bz2
endif
endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wVQJ0a
code,"default:
	gfortran-7 -g -c object_class.f90
	gfortran-7 -g -c string_class.f90
	gfortran-7 -g -c hashtable_class.f90

	gfortran-7 -g -c iterator_interface.f90

	gfortran-7 -g -c collection_interface.f90
	gfortran-7 -g -c abstract_collection_class.f90

	gfortran-7 -g -c map_interface.f90
	gfortran-7 -g -c abstract_map_class.f90
	gfortran-7 -g -c hashmap_class.f90

	gfortran-7 -g -c linked_list_class.f90

	ar rvs libcollections.a *.o *.mod


	gfortran-7 -g -c test_hashcode.f90
	gfortran-7 -g -o test_hashcode test_hashcode.o libcollections.a 

	gfortran-7 -g -c test_hashtable.f90
	gfortran-7 -g -o test_hashtable test_hashtable.o libcollections.a

	gfortran-7 -g -c test_list.f90
	gfortran-7 -g -o test_list test_list.o libcollections.a 
clean:
	rm *.o *.mod *~ *.a test_hashcode test_hashtable test_list
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AxF2qo
code,"obj-m += gpiomod_outptask.o 
include $(PWD)/../../Makefile.kmod
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",f1huLl
code,"CFLAGS += -I../../../../../usr/include/

TEST_GEN_PROGS := udmabuf

include ../../lib.mk
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RCp5D6
code,"# Makefile.in generated by automake 1.11.6 from Makefile.am.
# panels/color/icons/scalable/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo ""AM""  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/gnome-control-center
pkgincludedir = $(includedir)/gnome-control-center
pkglibdir = $(libdir)/gnome-control-center
pkglibexecdir = $(libexecdir)/gnome-control-center
am__cd = CDPATH=""$${ZSH_VERSION+.}$(PATH_SEPARATOR)"" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = panels/color/icons/scalable
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo ""  GEN   "" $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo ""$(srcdir)"" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo ""$$p"" | sed ""s|^$$srcdirstrip/||""`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo ""$$p""; done | sed -e ""s|$$srcdirstrip/||""
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo ""$$p $$p""; done | \
  sed ""s| $$srcdirstrip/| |;""' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["".""] = """" } { files[$$2] = files[$$2] "" "" $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = """" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z ""$$files"" \
    || { test ! -d ""$$dir"" && test ! -f ""$$dir"" && test ! -r ""$$dir""; } \
    || { echo "" ( cd '$$dir' && rm -f"" $$files "")""; \
         $(am__cd) ""$$dir"" && rm -f $$files; }; \
  }
am__installdirs = ""$(DESTDIR)$(iconsdir)""
DATA = $(icons_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mike/Desktop/gnome-control-center/missing --run aclocal-1.11
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/mike/Desktop/gnome-control-center/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mike/Desktop/gnome-control-center/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mike/Desktop/gnome-control-center/missing --run automake-1.11
AWK = mawk
BACKGROUND_PANEL_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/atk-1.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/libxml2 -I/usr/include/gnome-desktop-3.0 -I/usr/include/gsettings-desktop-schemas  
BACKGROUND_PANEL_LIBS = -pthread -lgthread-2.0 -lrt -lnotify -lxml2 -lgnome-desktop-3 -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangocairo-1.0 -lcairo-gobject -lpango-1.0 -lcairo -",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h_gm1S
code,"#
# (C) Copyright 2000, 2001, 2002
# Wolfgang Denk, DENX Software Engineering, wd@denx.de.
#
# See file CREDITS for list of people who contributed to this
# project.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#

include $(TOPDIR)/config.mk

LIB	= $(obj)lib$(BOARD).o

CSRCS	:= $(wildcard *.c)
CSRCS	:= $(subst firmware/timming.c,,$(CSRCS))
COBJS	:= $(CSRCS:%.c=%.o)

SRCS	:= $(COBJS:.o=.c)
OBJS	:= $(addprefix $(obj),$(COBJS))

$(LIB):	$(obj).depend $(OBJS)
	$(call cmd_link_o_target, $(OBJS))

clean:
	rm -f $(OBJS)

distclean:	clean
	rm -f $(LIB) core *.bak $(obj).depend

#########################################################################

# defines $(obj).depend target
include $(SRCTREE)/rules.mk

sinclude $(obj).depend
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d1qQYd
code,"# Double precision floating point gets emulated.
ifeq ($(subdir),soft-fp)
sysdep_routines += $(gcc-double-routines) fraiseexcept-soft
endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cT86KC
code,"# Makefile.in generated by automake 1.14.1 from Makefile.am.
# tests/configfile/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo ""am__make_running_with_option: internal error: invalid"" \
              ""target option '$${target_option-}' specified"" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' ""$$MAKEFLAGS"" \
          | sed ""s/$$bs$$bs[$$bs $$bs	]*//g""`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' ""$$flg"" | sed ""s/$$1.*$$//""`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/snoopy
pkgincludedir = $(includedir)/snoopy
pkglibdir = $(libdir)/snoopy
pkglibexecdir = $(libexecdir)/snoopy
am__cd = CDPATH=""$${ZSH_VERSION+.}$(PATH_SEPARATOR)"" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/build/Makefile.am.common \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build/aux/test-driver
am__append_1 = $(SCRIPT_PREFIX)-output-file.sh
subdir = tests/configfile
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/m4/libtool.m4 \
	$(top_srcdir)/build/m4/ltoptions.m4 \
	$(top_srcdir)/build/m4/ltsugar.m4 \
	$(top_srcdir)/build/m4/ltversion.m4 \
	$(top_srcdir)/build/m4/lt~obsolete.m4 \
	$(top_srcdir)/build/snoopy.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo ""  GEN     "" $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test ""X$(AM_COLOR_TESTS)"" = Xno; then \
    am__color_tests=no; \
  elif test ""X$(AM_COLOR_TESTS)"" = Xalways; then \
    am__color_tests=yes; \
  elif test ""X$$TERM"" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo ""$(srcdir)"" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo ""$$p"" | sed ""s|^$$srcdirstrip/||""`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo ""$$p""; done | sed -e ""s|$$srcdirstrip/||""
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo ""$$p $$p""; done | \
  sed ""s| $$srcdirstrip/| |;""' / .*\//!s/ .*/ ./; s,",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",N8C-oF
code,"
ifeq ($(CONFIG_PM_DEBUG),y)
EXTRA_CFLAGS	+=	-DDEBUG
endif

obj-$(CONFIG_PM)		+= main.o
obj-$(CONFIG_PM_SLEEP)		+= console.o
obj-$(CONFIG_FREEZER)		+= process.o
obj-$(CONFIG_HIBERNATION)	+= swsusp.o disk.o snapshot.o swap.o user.o

obj-$(CONFIG_MAGIC_SYSRQ)	+= poweroff.o
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OKZBOr
code,".PHONY: default
default: tests

getdeps:
	@echo ""Installing required dependencies""
	@pip install --user --upgrade autopep8 certifi mock pytest pylint urllib3

check: getdeps
	@echo ""Running checks""
	@pylint --reports=no --score=no --disable=R0401,R0801 minio/*py
	@pylint --reports=no --score=no minio/credentials tests/functional
	@isort --diff .
	@find . -name ""*.py"" -exec autopep8 --diff --exit-code {} +

apply: getdeps
	@isort .
	@find . -name ""*.py"" -exec autopep8 --in-place {} +

tests: check
	@echo ""Running unit tests""
	@pytest
	@echo ""Running functional tests""
	@env bash run_functional_tests.sh
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iJaeJ6
code,"C_SOURCES := main.c

DYLIB_NAME := a
DYLIB_C_SOURCES := a.c

include Makefile.rules
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WRC5Nv
code,"# Whenever make is run in this directory, call ./get_version.sh as the
# first thing. This script regenereates ./version.h if necessary, e.g.
# if it does not already exist or if the version number has changed.
LOG := $(shell ./get_version.sh; echo "" $$?"")
ifneq ($(strip $(LOG)), 0)
  RC := $(lastword $(LOG))
  OUT := $(wordlist 1,$(shell echo $$(($(words $(LOG))-1))),$(LOG))
  ifeq ($(RC),0)
    $(info $(OUT))
  else
    $(error $(OUT))
  endif
endif

all:

include ../kaldi.mk

TESTFILES = kaldi-math-test io-funcs-test kaldi-error-test timer-test

OBJFILES = kaldi-math.o kaldi-error.o io-funcs.o kaldi-utils.o timer.o

LIBNAME = kaldi-base

ADDLIBS =

include ../makefiles/default_rules.mk
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OSh-oJ
code,"#
# Makefile for the Linux network device drivers.
#

#
# Networking Core Drivers
#
obj-$(CONFIG_BONDING) += bonding/
obj-$(CONFIG_DUMMY) += dummy.o
obj-$(CONFIG_EQUALIZER) += eql.o
obj-$(CONFIG_IFB) += ifb.o
obj-$(CONFIG_MACVLAN) += macvlan.o
obj-$(CONFIG_MACVTAP) += macvtap.o
obj-$(CONFIG_MII) += mii.o
obj-$(CONFIG_MDIO) += mdio.o
obj-$(CONFIG_NET) += Space.o loopback.o
obj-$(CONFIG_NETCONSOLE) += netconsole.o
obj-$(CONFIG_PHYLIB) += phy/
obj-$(CONFIG_RIONET) += rionet.o
obj-$(CONFIG_NET_TEAM) += team/
obj-$(CONFIG_TUN) += tun.o
obj-$(CONFIG_VETH) += veth.o
obj-$(CONFIG_VIRTIO_NET) += virtio_net.o
obj-$(CONFIG_VXLAN) += vxlan.o
obj-$(CONFIG_NLMON) += nlmon.o

#
# Networking Drivers
#
obj-$(CONFIG_ARCNET) += arcnet/
obj-$(CONFIG_DEV_APPLETALK) += appletalk/
obj-$(CONFIG_CAIF) += caif/
obj-$(CONFIG_CAN) += can/
obj-$(CONFIG_ETRAX_ETHERNET) += cris/
obj-$(CONFIG_NET_DSA) += dsa/
obj-$(CONFIG_ETHERNET) += ethernet/
obj-$(CONFIG_FDDI) += fddi/
obj-$(CONFIG_HIPPI) += hippi/
obj-$(CONFIG_HAMRADIO) += hamradio/
obj-$(CONFIG_IRDA) += irda/
obj-$(CONFIG_PLIP) += plip/
obj-$(CONFIG_PPP) += ppp/
obj-$(CONFIG_PPP_ASYNC) += ppp/
obj-$(CONFIG_PPP_BSDCOMP) += ppp/
obj-$(CONFIG_PPP_DEFLATE) += ppp/
obj-$(CONFIG_PPP_MPPE) += ppp/
obj-$(CONFIG_PPP_SYNC_TTY) += ppp/
obj-$(CONFIG_PPPOE) += ppp/
obj-$(CONFIG_PPPOL2TP) += ppp/
obj-$(CONFIG_PPTP) += ppp/
obj-$(CONFIG_SLIP) += slip/
obj-$(CONFIG_SLHC) += slip/
obj-$(CONFIG_NET_SB1000) += sb1000.o
obj-$(CONFIG_SUNGEM_PHY) += sungem_phy.o
obj-$(CONFIG_WAN) += wan/
obj-$(CONFIG_WLAN) += wireless/
obj-$(CONFIG_WIMAX) += wimax/
obj-$(CONFIG_IEEE802154) += ieee802154/

obj-$(CONFIG_VMXNET3) += vmxnet3/
obj-$(CONFIG_XEN_NETDEV_FRONTEND) += xen-netfront.o
obj-$(CONFIG_XEN_NETDEV_BACKEND) += xen-netback/

obj-$(CONFIG_USB_CATC)          += usb/
obj-$(CONFIG_USB_KAWETH)        += usb/
obj-$(CONFIG_USB_PEGASUS)       += usb/
obj-$(CONFIG_USB_RTL8150)       += usb/
obj-$(CONFIG_USB_RTL8152)       += usb/
obj-$(CONFIG_USB_HSO)		+= usb/
obj-$(CONFIG_USB_USBNET)        += usb/
obj-$(CONFIG_USB_IPHETH)        += usb/
obj-$(CONFIG_USB_CDC_PHONET)   += usb/

obj-$(CONFIG_HYPERV_NET) += hyperv/
obj-$(CONFIG_NTB_NETDEV) += ntb_netdev.o
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EvYS-N
code,"
name = virt-whom
version = 0.1

.PHONY: pack check install srpm rpm rpmlint upload

$(name)-$(version).tar.gz:
	git archive --format=tar --prefix=$(name)-$(version)/ master | gzip > $(name)-$(version).tar.gz

pack: $(name)-$(version).tar.gz

check:
	pyflakes *.py

install:
	install -d $(DESTDIR)/usr/share/$(name)/ $(DESTDIR)/usr/bin
	install -pm 0644 *.py $(DESTDIR)/usr/share/$(name)/
	install virt-whom $(DESTDIR)/usr/bin/

srpm: pack
	rpmbuild --define ""_sourcedir $(PWD)"" --define ""_specdir $(PWD)"" --define ""_srcrpmdir $(PWD)"" -bs $(name).spec

rpm: pack
	rpmbuild --define ""_sourcedir $(PWD)"" --define ""_specdir $(PWD)"" --define ""_srcrpmdir $(PWD)"" --define ""_rpmdir $(PWD)"" -bb $(name).spec

rpmlint: srpm rpm
	rpmlint $(name).spec $(shell rpmspec -q $(name).spec | sed 's/.noarch//').src.rpm noarch/$(shell rpmspec -q $(name).spec).rpm

upload: pack
	scp $(name)-$(version).tar.gz fedorahosted.org:$(name)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Cg587b
code,"PROJ	:= 5
EMPTY	:=
SPACE	:= $(EMPTY) $(EMPTY)
SLASH	:= /

V       := @

# try to infer the correct GCCPREFX
ifndef GCCPREFIX
GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \
	then echo 'i386-ucore-elf-'; \
	elif objdump -i 2>&1 | grep 'elf32-i386' >/dev/null 2>&1; \
	then echo ''; \
	else echo ""***"" 1>&2; \
	echo ""*** Error: Couldn't find an i386-ucore-elf version of GCC/binutils."" 1>&2; \
	echo ""*** Is the directory with i386-ucore-elf-gcc in your PATH?"" 1>&2; \
	echo ""*** If your i386-ucore-elf toolchain is installed with a command"" 1>&2; \
	echo ""*** prefix other than 'i386-ucore-elf-', set your GCCPREFIX"" 1>&2; \
	echo ""*** environment variable to that prefix and run 'make' again."" 1>&2; \
	echo ""*** To turn off this error, run 'gmake GCCPREFIX= ...'."" 1>&2; \
	echo ""***"" 1>&2; exit 1; fi)
endif

# try to infer the correct QEMU
ifndef QEMU
QEMU := $(shell if which qemu > /dev/null; \
	then echo 'qemu'; exit; \
	elif which i386-ucore-elf-qemu > /dev/null; \
	then echo 'i386-ucore-elf-qemu'; exit; \
	else \
	echo ""***"" 1>&2; \
	echo ""*** Error: Couldn't find a working QEMU executable."" 1>&2; \
	echo ""*** Is the directory containing the qemu binary in your PATH"" 1>&2; \
	echo ""***"" 1>&2; exit 1; fi)
endif

# eliminate default suffix rules
.SUFFIXES: .c .S .h

# delete target files if there is an error (or make is interrupted)
.DELETE_ON_ERROR:

# define compiler and flags

HOSTCC		:= gcc
HOSTCFLAGS	:= -g -Wall -O2

GDB		:= $(GCCPREFIX)gdb

CC		:= $(GCCPREFIX)gcc
CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)
CFLAGS	+= $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
CTYPE	:= c S

LD      := $(GCCPREFIX)ld
LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>/dev/null)
LDFLAGS	+= -nostdlib

OBJCOPY := $(GCCPREFIX)objcopy
OBJDUMP := $(GCCPREFIX)objdump

COPY	:= cp
MKDIR   := mkdir -p
MV		:= mv
RM		:= rm -f
AWK		:= awk
SED		:= sed
SH		:= sh
TR		:= tr
TOUCH	:= touch -c

TAR		:= tar
ZIP		:= gzip

OBJDIR	:= obj
BINDIR	:= bin

ALLOBJS	:=
ALLDEPS	:=
TARGETS	:=

include tools/function.mk

listf_cc = $(call listf,$(1),$(CTYPE))

# for cc
add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))
create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))

# for hostcc
add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))
create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))

cgtype = $(patsubst %.$(2),%.$(3),$(1))
objfile = $(call toobj,$(1))
asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)
outfile = $(call cgtype,$(call toobj,$(1)),o,out)
symfile = $(call cgtype,$(call toobj,$(1)),o,sym)

# for match pattern
match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match(""$(1)"",""^""$$(i)""$$"")){exit 1;}}}'; echo $$?)

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# include kernel/user

INCLUDE	+= libs/

CFLAGS	+= $(addprefix -I,$(INCLUDE))

LIBDIR	+= libs

$(call add_files_cc,$(call listf_cc,$(LIBDIR)),libs,)

# -------------------------------------------------------------------
# kernel

KINCLUDE	+= kern/debug/ \
			   kern/driver/ \
			   kern/trap/ \
			   kern/mm/ \
			   kern/libs/ \
			   kern/sync/

KSRCDIR		+= kern/init \
			   kern/libs \
			   kern/debug \
			   kern/driver \
			   kern/trap \
			   kern/mm \
			   kern/sync

KCFLAGS		+= $(addprefix -I,$(KINCLUDE))

$(call add_files_cc,$(call listf_cc,$(KSRCDIR)),kernel,$(KCFLAGS))

KOBJS	= $(call read_packet,kernel libs)

# create kernel target
kernel = $(call totarget,kernel)

$(kernel): tools/kernel.ld

$(kernel): $(KOBJS)
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -T tools/kernel.ld -o $@ $(KOBJS)
	@$(OBJDUMP) -S $@ > $(call asmfile,kernel)
	@$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $(call symfile,kernel)

$(call create_target,kernel)


# create kernel_nopage target
kernel_nopage = $(call totarget,kernel_nopage)

$(kernel_nopage): tools/kernel_nopage.ld

$(kernel_nopage): $(KOBJS)
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -T tools/kernel_nopage.ld -o $@ $(KOBJS)
	@$(OBJDUMP) -S $@ > $(call asmfile,kernel_nopage)
	@$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $(call symfile,kernel_nopage)

$(call create_target,kernel)

# -------------------------------------------------------------------

# create bootblock
bootfiles = $(call listf_cc,boot)
$(foreach f,$(bootfiles),$(call cc_compile,$(f),$(CC),$(CFLAGS) -Os -nostdinc))

bootblock = $(call totarget,bootblock)

$(bootblock): $(call toobj,boot/bootasm.S) $(call toobj,$(bootfiles)) | $(call totarget,sign)
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -N -T tools/boot.ld $^ -o $(call toobj,bootblock)
	@$(OBJDUMP) -S $(call objfile,bootblock) > $(call asmfile,bootblock)
	@$(OBJCOPY) -S -O binary $(call objfile,bootblock) $(call outfile,bootblock)
	@$(call totarget,sign) $(call outfile,bootblock) $(bootblock)

$(call create_target,bootblock)

# -------------------------------------------------------------------

# create 'sign' tools
$(call add_files_host,tools/sign.c,sign,sign)
$(call create_tar",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZBu3Wv
code,"# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2009, Cisco Systems Inc.
# Ngie Cooper, July 2009

top_srcdir		?= ../../../..

include $(top_srcdir)/include/mk/env_pre.mk

INSTALL_TARGETS		:= netstat01.sh

include $(top_srcdir)/include/mk/generic_leaf_target.mk
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9CuBbi
code,"# -*- sh -*-
#
# To create the SGML files, you will need to install the tm-utils
# package.  See http://www.jedsoft.org/ for more information.
#
TMEXPAND = /aluche/d1/web/tm-dist/bin/tmexpand
SL2TM = sl2tm
MACRODIR = /aluche/d1/web/tm-dist/macros
TM2HLP = $(TMEXPAND) -I$(MACRODIR) -Mslhlp

MODULE = maplib
HLPFUNS_TM = $(MODULE)funs.tm
AUTOGEN_TM = 
MODULE_DEPS = $(MODULE)funs.tm $(AUTOGEN_TM)
HLP_FILE_DEPS = 

TXT_FILES = $(MODULE).txt
SGML_FILES = $(MODULE).sgml
HTML_FILES = $(MODULE).html
TEX_FILES = $(MODULE).tex
PS_FILES = $(MODULE).ps 
PDF_FILES = $(MODULE).pdf
HLP_FILE = $(MODULE).hlp

SGML2LATEX = sgml2latex -p letter -o tex
SGML2HTML = sgml2html
SGML2TXT = sgml2txt -f
LATEX = latex
PDFLATEX = pdflatex

TEXTDIR = ../text
PSDIR = ../ps
HTMLDIR = ../html
SGMLDIR = ../sgml
PDFDIR = ../pdf
HELPDIR = ../help

SUBDIRS = $(TEXTDIR) $(HTMLDIR) $(PSDIR) $(SGMLDIR) $(PDFDIR) $(HELPDIR)
SRCDIR = `pwd`

default: $(TXT_FILES) $(HLP_FILE)
all: $(HTML_FILES) $(PDF_FILES) $(TXT_FILES) $(HLP_FILE)
text-files: $(TXT_FILES)
#----- SGML Files -----------------------------------------------------------
$(MODULE).sgml : $(MODULE).tm $(MODULE_DEPS)
	$(TMEXPAND) -I$(MACRODIR) $(MODULE).tm $(MODULE).sgml
#----- HTML Files -----------------------------------------------------------
$(MODULE).html : $(MODULE).sgml
	$(SGML2HTML) $(MODULE).sgml
#----- TeX Files ------------------------------------------------------------
$(MODULE).tex : $(MODULE).sgml
	$(SGML2LATEX) $(MODULE).sgml
	./fixtex.sl $(MODULE).tex
#----- PDF Files -----------------------------------------------------------
$(MODULE).pdf : $(MODULE).tex
	$(MAKE) texclean
	$(PDFLATEX) $(MODULE).tex
	$(PDFLATEX) $(MODULE).tex
	$(PDFLATEX) $(MODULE).tex
#----- PS Files -----------------------------------------------------------
$(MODULE).ps : $(MODULE).tex texclean
	$(LATEX) $(MODULE).tex
	$(LATEX) $(MODULE).tex
	$(LATEX) $(MODULE).tex
	dvips -o $(MODULE).ps $(MODULE).dvi
#----- Text Files -----------------------------------------------------------
$(MODULE).txt: $(MODULE).sgml
	$(SGML2TXT) $(MODULE).sgml
	./fixtxt $(MODULE).txt
#----------------------------------------------------------------------------
help-files: $(HLP_FILE)
$(HLP_FILE): $(HLPFUNS_TM) $(HLP_FILE_DEPS)
	$(TMEXPAND) -I$(MACRODIR) -Mslhlp $(HLPFUNS_TM) $(HLP_FILE)
texclean:
	-rm -f *.dvi *.log *.aux *.toc *.out
clean: texclean
	-rm -f *~ rtl/*.BAK rtl/*~ *.tmp *-error
distclean: clean
	-rm -f *.html *.ps $(HLP_FILE) $(TXT_FILES) $(TEX_FILES) $(SGML_FILES) $(PDF_FILES) $(AUTOGEN_TM)
install-txt: $(TXT_FILES)
	-mv $(TXT_FILES) ../text
install-help: $(HLP_FILE)
	-mkdir -p $(HELPDIR)
	-mv $(HLP_FILE) $(HELPDIR)
install-all: all install-help install-txt $(PDF_FILES)
	-mkdir -p $(HTMLDIR) $(PSDIR) $(PDFDIR)
	-mv *.html $(HTMLDIR)
	-mv $(PDF_FILES) ../pdf
#	-mv $(PS_FILES) ../ps
install: install-txt install-help
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EjXGB2
code,"# -----------------------------------------------------------------------------
#
#   FILE: Makefile
#
#       Build instructions for unifimib and unifidl.
#
#  HISTORY:
#   22-Nov-05  MEDP Use $CROSS_COMPILE prefix for tools.
#   05-Oct-05  MEDP Build unifidl too.
#   02-Sep-05  MEDP Creation
# -----------------------------------------------------------------------------

CC := $(CROSS_COMPILE)gcc

CFLAGS := -I../../common -I../driver -I../../lib_sme/common -I../../lib_synergy_framework/linux -Wall -g -O2
LDFLAGS := -g

UM_OBJS := unifi_manager.o mibquery.o sme_drv.o

UF_CFG_OBJS := unifi_config_lib.o unifi_config.o

UF_PUTEST_OBJS := unifi_putest_lib.o unifi_putest.o

GSMIB_OBJS := mibquery.o unifi_mib.o

UF_CORED_OBJS := unifi_coredump.o

UF_XBV_OBJS := unifi_xbv.o xbv_user.o

SBINDIR := /usr/sbin

PROGS := unifi_manager unifi_config
SCRIPTS := unififw

# Local tools not for distribution
TOOLS := genmacmib prmib unifi_qos unifi_mib unifi_putest unifi_coredump unifi_xbv

all: $(PROGS) $(TOOLS)

unifi_manager: $(UM_OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(UM_OBJS)


genmacmib: genmacmib.o
	$(CC) $(LDFLAGS) -o $@ genmacmib.o

prmib: prmib.o
	$(CC) $(LDFLAGS) -o $@ prmib.o

unifi_qos: unifi_qos.o
	$(CC) $(LDFLAGS) -o $@ unifi_qos.o

unifi_config: $(UF_CFG_OBJS)
	$(CC) $(LDFLAGS) -o $@ $(UF_CFG_OBJS)

unifi_putest: $(UF_PUTEST_OBJS)
	$(CC) $(LDFLAGS) -o $@ $(UF_PUTEST_OBJS)

unifi_mib:  $(GSMIB_OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(GSMIB_OBJS)

unifi_coredump:  $(UF_CORED_OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(UF_CORED_OBJS)

# Special build of XBV parser for standalone test
xbv_user.o:	../../lib_hip/xbv.c
	$(CC) -c $(CFLAGS) -DCSR_WIFI_XBV_TEST -I. $(LDFLAGS) -o $@ ../../lib_hip/xbv.c

unifi_xbv.o:  unifi_xbv.c unifi_xbv.h
	$(CC) -c $(CFLAGS) -DCSR_WIFI_XBV_TEST -o $@ $<

unifi_xbv:  $(UF_XBV_OBJS)
	$(CC) $(LDFLAGS) -o $@ $(UF_XBV_OBJS)

install: $(PROGS)
	for p in $(PROGS) $(SCRIPTS); do install -D $$p $(DESTDIR)$(SBINDIR)/$$p; done

clean:
	rm -f *.o $(PROGS) genmacmib prmib unifi_qos unifi_mib unifi_config unifi_putest unifi_coredump unifi_xbv
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VoMU6f
code,"run:
	@./buildserver.sh ""  ""
	@./run.sh

build:
	@./buildserver.sh

setup:
	@./setup.sh

setupnode:
	@./setupnode.sh
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Mq96Ts
code,"setup: setup.py
	python3 setup.py

init: requirements.txt
	pip3 install -r requirements.txt

test: video_test.py
	echo 'TODO TESTS'
	python3 video_test.py
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jdAq2-
code,"
BIN	:= zforth
SRC	:= main.c zforth.c

OBJS    := $(subst .c,.o, $(SRC))
DEPS    := $(subst .c,.d, $(SRC))

CC	:= $(CROSS)gcc

VPATH   := ../zforth
CFLAGS	+= -I. -I../zforth
CFLAGS  += -Os -g -std=c89 -ansi -pedantic -MMD
CFLAGS  += -fsanitize=address -Wall -Wextra -Werror -Wno-unused-parameter -Wno-clobbered -Wno-unused-result
LDFLAGS	+= -fsanitize=address -g 

LIBS	+= -lm

ifndef noreadline
LIBS	+= -lreadline
CFLAGS	+= -DUSE_READLINE
endif

$(BIN): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)

clean:
	rm -f $(BIN) $(OBJS) $(DEPS)

lint:
	lint -i /opt/flint/supp/lnt -i ..\\zforth -i src -w2 co-gcc.lnt \
		-e537 -e451 -e524 -e534 -e641 -e661 -e64 \
		$(SRC)

-include $(DEPS)

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KImpI5
code,"include ../config.mak


CFLAGS=-I../loader -Wdisabled-optimization -Wno-pointer-sign -Wdeclaration-after-statement -I. -Wall -Wno-switch -Wpointer-arith -Wredundant-decls -pipe -ffast-math -fomit-frame-pointer -D_LARGEFILE_SOURCE -D__WINE__ -DNOAVIFILE_HEADERS -DMPLAYER
CFLAGS+=-fno-omit-frame-pointer -mno-omit-leaf-frame-pointer

ifdef DEBUG
  CFLAGS+= -g
  LOADER_OPT = ""DEBUG=1""
else
  CFLAGS+= -O2
endif
ifdef STATIC
  STATICBUILD= -static
endif

WIN32_LIBS = -lole32 -lws2_32
LIBS = -lm

ifdef X_COMPILE
  LIBS += -lole32 -loleaut32 -luser32 -lws2_32
else
  ifdef WINELIB
    LIBS += -m32 -lole32 -loleaut32 -lrt -lpthread
  else
    LIBS += -lpthread -lrt
    REGISTERCODEC = registercodec
  endif
endif

LIBS += $(EXTRA_LIBS)

.PHONY: loader

all: $(OBJDIR) dshowserver $(REGISTERCODEC)

dshowserver: $(OBJDIR)/server.o $(OBJDIR)/timeout_sem.o $(OBJDIR)/defaults.o $(OBJDIR)/crc32.o $(OBJDIR)/libloader.a
	$(CC) $(STATICBUILD) -o $@ $^ $(LIBS)
ifdef X_COMPILE
	mv $@ $@.exe
	echo ""#!/bin/sh"" > $@
	echo ""echo 'Starting wine dshowserver.exe'"" >> $@
	echo 'wine ./dshowserver.exe $$*' >> $@
	chmod +x dshowserver
endif

registercodec: ../loader/modify_reg.c ../loader/registry.c
	$(CC) $(STATICBUILD) -I../loader -I../loader/compat -o $@ $<


$(OBJDIR):
	mkdir $(OBJDIR)

$(OBJDIR)/libloader.a: loader

loader:
	$(MAKE) -C ../loader $(LOADER_OPT)

$(OBJDIR)/%.o: %.c ../loader/dshow/DSVD_extern.h
	$(CC) $(CFLAGS) -o $@ -c $<

clean::
	rm -f ../objs-mingw/*
	rm -f ../objs-winelib/*
	rm -f ../objs/*

distclean:: clean
	rm -f ../objs-mingw/*
	rm -f ../objs-winelib/*
	rm -f ../objs/*
	rm -f dshowserver
	rm -f dshowserver.exe*

install::
	mkdir -p $(PREFIX_SHARE)
	mkdir -p $(PREFIX_EXE)
ifdef WINE_EXT
	cp dshowserver.$(WINE_EXT) $(PREFIX_SHARE)/
	echo ""#!/bin/sh"" > $(PREFIX_EXE)/dshowserver
	echo ""echo 'Starting wine dshowserver.$(WINE_EXT)'"" >> $(PREFIX_EXE)/dshowserver
	echo 'wine $(PREFIX_SHARE)/dshowserver.$(WINE_EXT) $$*' >> $(PREFIX_EXE)/dshowserver
	chmod +x $(PREFIX_EXE)/dshowserver
else
	cp dshowserver $(PREFIX_EXE)/
endif
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KSRwLP
code,".PHONY: all test

all:
	xbuild /verbosity:quiet src/splashy/splashy.fsproj

run:
	xbuild /verbosity:quiet src/splashy/splashy.fsproj && mono src/splashy/bin/Debug/splashy.exe

test:
	xbuild /verbosity:quiet tests/splashy.Tests/splashy.Tests.fsproj && \
	mono packages/NUnit.Runners/tools/nunit-console.exe -labels -nodots tests/splashy.Tests/bin/Debug/splashy.Tests.dll
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RkXkMz
code,"all:

include ../lib.mk

.PHONY: all all_32 all_64 warn_32bit_failure clean

TARGETS_C_BOTHBITS := single_step_syscall sysret_ss_attrs syscall_nt ptrace_syscall \
			check_initial_reg_state sigreturn ldt_gdt iopl
TARGETS_C_32BIT_ONLY := entry_from_vm86 syscall_arg_fault test_syscall_vdso unwind_vdso \
			test_FCMOV test_FCOMI test_FISTTP \
			vdso_restorer
TARGETS_C_64BIT_ONLY := fsgsbase

TARGETS_C_32BIT_ALL := $(TARGETS_C_BOTHBITS) $(TARGETS_C_32BIT_ONLY)
TARGETS_C_64BIT_ALL := $(TARGETS_C_BOTHBITS) $(TARGETS_C_64BIT_ONLY)
BINARIES_32 := $(TARGETS_C_32BIT_ALL:%=%_32)
BINARIES_64 := $(TARGETS_C_64BIT_ALL:%=%_64)

CFLAGS := -O2 -g -std=gnu99 -pthread -Wall

UNAME_M := $(shell uname -m)
CAN_BUILD_I386 := $(shell ./check_cc.sh $(CC) trivial_32bit_program.c -m32)
CAN_BUILD_X86_64 := $(shell ./check_cc.sh $(CC) trivial_64bit_program.c)

ifeq ($(CAN_BUILD_I386),1)
all: all_32
TEST_PROGS += $(BINARIES_32)
endif

ifeq ($(CAN_BUILD_X86_64),1)
all: all_64
TEST_PROGS += $(BINARIES_64)
endif

all_32: $(BINARIES_32)

all_64: $(BINARIES_64)

clean:
	$(RM) $(BINARIES_32) $(BINARIES_64)

$(TARGETS_C_32BIT_ALL:%=%_32): %_32: %.c
	$(CC) -m32 -o $@ $(CFLAGS) $(EXTRA_CFLAGS) $^ -lrt -ldl -lm

$(TARGETS_C_64BIT_ALL:%=%_64): %_64: %.c
	$(CC) -m64 -o $@ $(CFLAGS) $(EXTRA_CFLAGS) $^ -lrt -ldl

# x86_64 users should be encouraged to install 32-bit libraries
ifeq ($(CAN_BUILD_I386)$(CAN_BUILD_X86_64),01)
all: warn_32bit_failure

warn_32bit_failure:
	@echo ""Warning: you seem to have a broken 32-bit build"" 2>&1; 	\
	echo ""environment.  This will reduce test coverage of 64-bit"" 2>&1; \
	echo ""kernels.  If you are using a Debian-like distribution,"" 2>&1; \
	echo ""try:""; 2>&1; \
	echo """";							\
	echo ""  apt-get install gcc-multilib libc6-i386 libc6-dev-i386""; \
	echo """";							\
	echo ""If you are using a Fedora-like distribution, try:"";	\
	echo """";							\
	echo ""  yum install glibc-devel.*i686"";				\
	exit 0;
endif

# Some tests have additional dependencies.
sysret_ss_attrs_64: thunks.S
ptrace_syscall_32: raw_syscall_helper_32.S
test_syscall_vdso_32: thunks_32.S

# check_initial_reg_state is special: it needs a custom entry, and it
# needs to be static so that its interpreter doesn't destroy its initial
# state.
check_initial_reg_state_32: CFLAGS += -Wl,-ereal_start -static
check_initial_reg_state_64: CFLAGS += -Wl,-ereal_start -static
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HW63hx
code,"subdir-ccflags-$(CONFIG_ARCH_MSM) += -Iarch/arm/mach-msm

obj-$(CONFIG_MACH_LENOVO_K920) += board-8974-k920.o board-8974-k920-gpiomux.o
obj-$(CONFIG_MACH_LENOVO_K920) += clock-krait-8974-k920.o clock-8974-k920.o

obj-$(CONFIG_MACH_LENOVO_K920) += lenovo_nv.o
obj-$(CONFIG_MACH_LENOVO_K920) += lenovo_hw.o
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qIxMtM
code,"###########################################################################
##                                                                       ##
##                           Cepstral, LLC                               ##
##                        Copyright (c) 2001                             ##
##                        All Rights Reserved.                           ##
##                                                                       ##
##  Permission is hereby granted, free of charge, to use and distribute  ##
##  this software and its documentation without restriction, including   ##
##  without limitation the rights to use, copy, modify, merge, publish,  ##
##  distribute, sublicense, and/or sell copies of this work, and to      ##
##  permit persons to whom this work is furnished to do so, subject to   ##
##  the following conditions:                                            ##
##   1. The code must retain the above copyright notice, this list of    ##
##      conditions and the following disclaimer.                         ##
##   2. Any modifications must be clearly marked as such.                ##
##   3. Original authors' names are not deleted.                         ##
##   4. The authors' names are not used to endorse or promote products   ##
##      derived from this software without specific prior written        ##
##      permission.                                                      ##
##                                                                       ##
##  CEPSTRAL, LLC AND THE CONTRIBUTORS TO THIS WORK DISCLAIM ALL         ##
##  WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED       ##
##  WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL         ##
##  CEPSTRAL, LLC NOR THE CONTRIBUTORS BE LIABLE FOR ANY SPECIAL,        ##
##  INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER          ##
##  RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION    ##
##  OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR  ##
##  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.          ##
##                                                                       ##
###########################################################################

TOP = ../..
DIRNAME = sapi/FliteCMUKalDiphone
SSS = FliteCMUKalDiphone.cpp FliteCMUKalDiphone.def \
      FliteCMUKalDiphone.dsp FliteCMUKalDiphone.idl \
      FliteCMUKalDiphoneObj.cpp FliteCMUKalDiphoneObj.h \
      FliteCMUKalDiphoneObj.rgs FliteCMUKalDiphoneps.def \
      FliteCMUKalDiphoneps.mk FliteCMUKalDiphone.rc \
      StdAfx.cpp StdAfx.h resource.h \
      FliteCMUKalDiphone.vcxproj FliteCMUKalDiphone.vcxproj.filters \
      FliteCMUKalDiphone.vcxproj.user
FILES = $(SSS) Makefile
DIST_CLEAN = *.aps *.tlb *.plg FliteCMUKalDiphone_i.c
ALL_DIRS = register_vox

ALL =

include $(TOP)/config/common_make_rules
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NPVAf3
code,".PHONY: translations install_precommit test_precommit fmt

# Create the .po and .mo files used for i18n
translations:
	cd src/cybersource && \
	django-admin makemessages -a && \
	django-admin compilemessages

install_precommit:
	pre-commit install

test_precommit: install_precommit
	pre-commit run --all-files

fmt:
	black .
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EOHoXR
code,"include ../Makefile.inc

OBJS := $(patsubst %.cc,%.o,$(wildcard *.cc))
TARGETS := $(patsubst %.cc,%,$(wildcard *.cc))


all:$(TARGETS) 

$(TARGETS):$(OBJS) $(LIB_STATIC)
	$(DIR_GUARD) $(BIN_PATH)
	$(CXX) $(CXXFLAGS) $< -o $(BIN_PATH)/$@ $(LIB_STATIC)

clean:
	$(RM) *.o $(BIN_PATH)/*
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pH_pE3
code,"include ./.env

.PHONY: build check clean help lint install start test test-coverage

.DEFAULT_GOAL := help

build: ## transpile the files from ES6 to JS
	@$(MAKE) -s lint
	@$(MAKE) -s clean
	@echo "" > Building the project in $(BUILD_DIRECTORY)""
	@$(BABEL) -q ./src -d $(BUILD_DIRECTORY)

check: ## check dependencies
	@echo "" > Checking dependencies""
	@$(NCU)

clean: ## clean artifacts
	@echo "" > Cleaning $(BUILD_DIRECTORY)""
	@rm -rf $(BUILD_DIRECTORY)

help: ## provide help to you
	@echo ""Please use \`make <target>' where <target> is one of""
	@echo ""$$(grep -hE '^\S+:.*##' $(MAKEFILE_LIST) | sed -e 's/:.*##\s*/:/' -e 's/^\(.\+\):\(.*\)/\1:\2/' | column -c2 -t -s :)""

lint: ## check the quality code and ES6 integration
	@echo "" > Linting the source""
	@$(ESLINT) ./src

install: ## install dependencies
	@echo "" > Installing the project""
	@npm install

start: ## start the web server
	@echo "" > Starting the project""
	@$(MAKE) -s build
	@export NODE_ENV=dev && \
		node $(BUILD_DIRECTORY)/index.js

test: ## launch tests
	@echo "" > Testing the project""
	@$(MAKE) -s build
	@export PORT=0 && \
		export NODE_ENV=test &&  \
		$(MOCHA) --require babel-core/register --recursive --exit

test-coverage: ## launch tests with coverage
	@echo "" > Testing with coverage""
	@$(MAKE) -s build
	@export PORT=0 && \
		export NODE_ENV=test && \
		$(BABEL_NODE) $(BABEL_ISTANBUL) cover $(MOCHA_) --report html --report text --check-coverage -- --recursive --exit
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Hdmc4o
code,"GCOV_PROFILE := y

subdir-ccflags-y := -Werror
#
# Makefile for the video capture/playback device drivers.
#
obj-y				+= avp/
obj-$(CONFIG_TEGRA_MEDIASERVER)	+= mediaserver/
obj-$(CONFIG_TEGRA_NVAVP)	+= nvavp/
obj-$(CONFIG_TEGRA_DTV)		+= tegra_dtv.o
obj-$(CONFIG_VIDEO_AR0832)	+= ar0832_main.o
obj-$(CONFIG_VIDEO_AR0833)	+= ar0833.o
obj-$(CONFIG_VIDEO_OV5650)	+= ov5650.o
obj-$(CONFIG_VIDEO_OV5640)	+= ov5640.o
obj-$(CONFIG_VIDEO_OV14810)	+= ov14810.o
obj-$(CONFIG_VIDEO_OV9726)	+= ov9726.o
obj-$(CONFIG_VIDEO_OV9772)	+= ov9772.o
obj-$(CONFIG_VIDEO_OV2710)	+= ov2710.o
obj-$(CONFIG_VIDEO_SOC380)	+= soc380.o
obj-$(CONFIG_TORCH_SSL3250A)	+= ssl3250a.o
obj-$(CONFIG_TORCH_TPS61050)	+= tps61050.o
obj-$(CONFIG_MAX77665_FLASH)	+= max77665-flash.o
obj-$(CONFIG_TORCH_MAX77387)	+= max77387.o
obj-$(CONFIG_TORCH_AS364X)	+= as364x.o
obj-$(CONFIG_VIDEO_SH532U)	+= sh532u.o
obj-$(CONFIG_VIDEO_DW9718)	+= dw9718.o
obj-$(CONFIG_VIDEO_AD5820)	+= ad5820.o
obj-$(CONFIG_VIDEO_AD5816)	+= ad5816.o
obj-$(CONFIG_VIDEO_IMX091)	+= imx091.o
obj-$(CONFIG_VIDEO_IMX135)	+= imx135.o
obj-$(CONFIG_VIDEO_IMX132)	+= imx132.o
obj-$(CONFIG_VIDEO_OV5693)	+= ov5693.o
obj-$(CONFIG_VIDEO_AD5823)	+= ad5823.o
obj-$(CONFIG_VIDEO_MT9M114)	+= mt9m114.o
obj-$(CONFIG_VIDEO_OV7695)	+= ov7695.o
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LCRB7I
code,"obj-$(CONFIG_PANEL_GENERIC_DPI) += panel-generic-dpi.o
obj-$(CONFIG_PANEL_TFP410) += panel-tfp410.o
obj-$(CONFIG_PANEL_LGPHILIPS_LB035Q02) += panel-lgphilips-lb035q02.o
obj-$(CONFIG_PANEL_SHARP_LS037V7DW01) += panel-sharp-ls037v7dw01.o
obj-$(CONFIG_PANEL_NEC_NL8048HL11_01B) += panel-nec-nl8048hl11-01b.o

obj-$(CONFIG_PANEL_TAAL) += panel-taal.o
obj-$(CONFIG_PANEL_PICODLP) +=  panel-picodlp.o
obj-$(CONFIG_PANEL_TPO_TD043MTEA1) += panel-tpo-td043mtea1.o
obj-$(CONFIG_PANEL_ACX565AKM) += panel-acx565akm.o
obj-$(CONFIG_PANEL_N8X0) += panel-n8x0.o
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UeIOzp
code,"all: linux

linux: main tresmeios rostorobo movimentos curvas help headers/debug.h
	g++ -o trabalho1compgraf_linux -fwhole-program -O2 -Wall -Wextra main.o tresmeios.o movimentos.o rostorobo.o curvas.o help.o -lglui -lglut -lGLU -lGL -lm 

#Compilação para Windows NAO FOI TESTADA pois nenhum dos membros utilizava ambiente Windows durante o desenvolvimento do projeto
win: main tresmeios rostorobo movimentos curvas help headers/debug.h
	g++ -o trabalho1compgraf_win.exe -O2 -Wall -Wextra main.o tresmeios.o movimentos.o rostorobo.o curvas.o help.o -lglui32 -lglut32 -lglu32 -lopengl32 -lm 

main: src/main.c headers/main.h
	g++ -c -o main.o -O2 -Wall -Wextra src/main.c 

tresmeios: src/tresmeios.c headers/tresmeios.h
	g++ -c -o tresmeios.o -O2 -Wall -Wextra src/tresmeios.c

rostorobo: src/rostorobo.c headers/rostorobo.h
	g++ -c -o movimentos.o -O2 -Wall -Wextra src/movimentos.c

movimentos: src/movimentos.c headers/movimentos.h
	g++ -c -o rostorobo.o -O2 -Wall -Wextra src/rostorobo.c

curvas: src/curvas.c headers/curvas.h
	g++ -c -o curvas.o -O2 -Wall -Wextra src/curvas.c

help: src/help.c headers/help.h
	g++ -c -o help.o -O2 -Wall -Wextra src/help.c

clean: 
	rm trabalho1compgraf_linux
	rm main.o
	rm tresmeios.o
	rm movimentos.o
	rm rostorobo.o
	rm curvas.o
	rm help.o

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3tgcRl
code,"VERSION = 3
PATCHLEVEL = 4
SUBLEVEL = 0
EXTRAVERSION =
NAME = Saber-toothed Squirrel

# *DOCUMENTATION*
# To see a list of typical targets execute ""make help""
# More info can be located in ./README
# Comments in this file are targeted only to the developer, do not
# expect to learn how to build the kernel reading this file.

# Do not:
# o  use make's built-in rules and variables
#    (this increases performance and avoids hard-to-debug behaviour);
# o  print ""Entering directory ..."";
MAKEFLAGS += -rR --no-print-directory

# Avoid funny character set dependencies
unexport LC_ALL
LC_COLLATE=C
LC_NUMERIC=C
export LC_COLLATE LC_NUMERIC

# We are using a recursive build, so we need to do a little thinking
# to get the ordering right.
#
# Most importantly: sub-Makefiles should only ever modify files in
# their own directory. If in some directory we have a dependency on
# a file in another dir (which doesn't happen often, but it's often
# unavoidable when linking the built-in.o targets which finally
# turn into vmlinux), we will call a sub make in that other dir, and
# after that we are sure that everything which is in that other dir
# is now up to date.
#
# The only cases where we need to modify files which have global
# effects are thus separated out and done before the recursive
# descending is started. They are now explicitly listed as the
# prepare rule.

# To put more focus on warnings, be less verbose as default
# Use 'make V=1' to see the full commands

ifeq (""$(origin V)"", ""command line"")
  KBUILD_VERBOSE = $(V)
endif
ifndef KBUILD_VERBOSE
  KBUILD_VERBOSE = 0
endif

# Call a source code checker (by default, ""sparse"") as part of the
# C compilation.
#
# Use 'make C=1' to enable checking of only re-compiled files.
# Use 'make C=2' to enable checking of *all* source files, regardless
# of whether they are re-compiled or not.
#
# See the file ""Documentation/sparse.txt"" for more details, including
# where to get the ""sparse"" utility.

ifeq (""$(origin C)"", ""command line"")
  KBUILD_CHECKSRC = $(C)
endif
ifndef KBUILD_CHECKSRC
  KBUILD_CHECKSRC = 0
endif

# Use make M=dir to specify directory of external module to build
# Old syntax make ... SUBDIRS=$PWD is still supported
# Setting the environment variable KBUILD_EXTMOD take precedence
ifdef SUBDIRS
  KBUILD_EXTMOD ?= $(SUBDIRS)
endif

ifeq (""$(origin M)"", ""command line"")
  KBUILD_EXTMOD := $(M)
endif

# kbuild supports saving output files in a separate directory.
# To locate output files in a separate directory two syntaxes are supported.
# In both cases the working directory must be the root of the kernel src.
# 1) O=
# Use ""make O=dir/to/store/output/files/""
#
# 2) Set KBUILD_OUTPUT
# Set the environment variable KBUILD_OUTPUT to point to the directory
# where the output files shall be placed.
# export KBUILD_OUTPUT=dir/to/store/output/files/
# make
#
# The O= assignment takes precedence over the KBUILD_OUTPUT environment
# variable.


# KBUILD_SRC is set on invocation of make in OBJ directory
# KBUILD_SRC is not intended to be used by the regular user (for now)
ifeq ($(KBUILD_SRC),)

# OK, Make called in directory where kernel src resides
# Do we want to locate output files in a separate directory?
ifeq (""$(origin O)"", ""command line"")
  KBUILD_OUTPUT := $(O)
endif

ifeq (""$(origin W)"", ""command line"")
  export KBUILD_ENABLE_EXTRA_GCC_CHECKS := $(W)
endif

# That's our default target when none is given on the command line
PHONY := _all
_all:

# Cancel implicit rules on top Makefile
$(CURDIR)/Makefile Makefile: ;

ifneq ($(KBUILD_OUTPUT),)
# Invoke a second make in the output directory, passing relevant variables
# check that the output directory actually exists
saved-output := $(KBUILD_OUTPUT)
KBUILD_OUTPUT := $(shell cd $(KBUILD_OUTPUT) && /bin/pwd)
$(if $(KBUILD_OUTPUT),, \
     $(error output directory ""$(saved-output)"" does not exist))

PHONY += $(MAKECMDGOALS) sub-make

$(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS)) _all: sub-make
	$(Q)@:

sub-make: FORCE
	$(if $(KBUILD_VERBOSE:1=),@)$(MAKE) -C $(KBUILD_OUTPUT) \
	KBUILD_SRC=$(CURDIR) \
	KBUILD_EXTMOD=""$(KBUILD_EXTMOD)"" -f $(CURDIR)/Makefile \
	$(filter-out _all sub-make,$(MAKECMDGOALS))

# Leave processing to above invocation of make
skip-makefile := 1
endif # ifneq ($(KBUILD_OUTPUT),)
endif # ifeq ($(KBUILD_SRC),)

# We process the rest of the Makefile if this is the final invocation of make
ifeq ($(skip-makefile),)

# If building an external module we do not care about the all: rule
# but instead _all depend on modules
PHONY += all
ifeq ($(KBUILD_EXTMOD),)
_all: all
else
_all: modules
endif

srctree		:= $(if $(KBUILD_SRC),$(KBUILD_SRC),$(CURDIR))
objtree		:= $(CURDIR)
src		:= $(srctree)
obj		:= $(objtree)

VPATH		:= $(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))

export srctree objtree VPATH


# SUBARCH tells the usermode build what the underlying arch is.  That is set
# first, and if a usermode build is happening, the ""ARCH=um"" on the command
# line overrides the setting of ARCH below.  If a native build is happening,
# then ARCH is assigned, getting whatever value it gets normally, and 
# SUBARC",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QzIDP4
code,"#
# Copyright (C) 2006-2008 OpenWrt.org
#
# This is free software, licensed under the GNU General Public License v2.
# See /LICENSE for more information.
#
include $(TOPDIR)/rules.mk

ARCH:=mipsel
BOARD:=brcm47xx
BOARDNAME:=Broadcom BCM47xx/53xx (MIPS)
FEATURES:=squashfs usb
SUBTARGETS:=generic mips74k legacy
MAINTAINER:=Hauke Mehrtens <hauke@hauke-m.de>

KERNEL_PATCHVER:=4.1

define Target/Description
	Build firmware images for Broadcom based BCM47xx/53xx routers with MIPS CPU, *not* ARM.
endef

include $(INCLUDE_DIR)/target.mk

DEFAULT_PACKAGES += swconfig wpad-mini nvram otrx \
	kmod-leds-gpio kmod-gpio-button-hotplug \
	kmod-ledtrig-default-on kmod-ledtrig-timer kmod-ledtrig-netdev

$(eval $(call BuildTarget))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t-vgj3
code,"include ../Makefile.include

ifneq ($(shell test -f $(PREFIX)/share/config.site && echo 1),1)
  $(error Error: $(PREFIX)/share/config.site  is missing. Please reconfigure depends to generate it)
endif

DEPENDS  = pcre
DEPENDS += expat
DEPENDS += gettext
DEPENDS += sqlite3
DEPENDS += libgpg-error
DEPENDS += libgcrypt
DEPENDS += bzip2
DEPENDS += liblzo2
DEPENDS += libzip
DEPENDS += freetype2
DEPENDS += fontconfig
DEPENDS += openssl
DEPENDS += gmp
DEPENDS += nettle
DEPENDS += gnutls
DEPENDS += libssh2
DEPENDS += curl
DEPENDS += libjpeg-turbo
DEPENDS += libpng
DEPENDS += libgif
DEPENDS += libogg
DEPENDS += libvorbis
DEPENDS += libflac
DEPENDS += fribidi
DEPENDS += libmpeg2
DEPENDS += libass
DEPENDS += libsquish
DEPENDS += librtmp
DEPENDS += libxml2
DEPENDS += rapidjson
DEPENDS += libmicrohttpd
DEPENDS += mysql
DEPENDS += libshairplay
DEPENDS += libplist
DEPENDS += libcec
DEPENDS += libbluray
DEPENDS += tinyxml
DEPENDS += dummy-libxbmc
DEPENDS += libamplayer
DEPENDS += libssh
DEPENDS += taglib
DEPENDS += libusb
DEPENDS += libnfs
DEPENDS += libulxmlrpcpp
DEPENDS += libxslt
DEPENDS += libdcadec
DEPENDS += ffmpeg
DEPENDS += platform
DEPENDS += crossguid
DEPENDS += libcpluff
DEPENDS += libcdio
#DEPENDS += libdvdcss
#DEPENDS += libdvdnav
#DEPENDS += libdvdread
DEPENDS += samba
DEPENDS += libtasn1
DEPENDS += libdsm

EXCLUDED_DEPENDS =
ifeq ($(OS),ios)
  DEPENDS += mrmc-repo-resources
  EXCLUDED_DEPENDS += libcec
  EXCLUDED_DEPENDS += libusb
  EXCLUDED_DEPENDS += libplist
  EXCLUDED_DEPENDS += libshairplay
endif

ifeq ($(OS),osx)
  DEPENDS += libGLEW
  EXCLUDED_DEPENDS += libcec
  EXCLUDED_DEPENDS += libusb
endif

ifeq ($(OS),android)
  DEPENDS += mrmc-repo-resources
  DEPENDS += mdnsresponder libuuid
  CROSSGUID_DEPS = libuuid
endif

DEPENDS := $(filter-out $(EXCLUDED_DEPENDS),$(DEPENDS))

ZLIB =
ifneq ($(HAS_ZLIB),1)
  DEPENDS += zlib
  ZLIB = zlib
endif

ICONV =
ifeq ($(NEED_LIBICONV),1)
  DEPENDS += libiconv
  ICONV = libiconv
endif

ALSA_LIB =
LINUX_SYSTEM_LIBS=
ifeq ($(OS),linux)
  DEPENDS += libuuid
  CROSSGUID_DEPS = libuuid
  #not for raspberry pi
  ifneq ($(TARGET_PLATFORM),raspberry-pi)
    DEPENDS += libsdl2 linux-system-libs
    LINUX_SYSTEM_LIBS = linux-system-libs
  endif
  DEPENDS += alsa-lib
  ALSA_LIB = alsa-lib
endif

.PHONY: $(DEPENDS)

all: .installed-$(PLATFORM)

gettext: $(ICONV)
libgcrypt: libgpg-error
fontconfig: freetype2 expat $(ICONV)
libssh2: libgcrypt openssl
curl: openssl libssh2
tiff: libjpeg-turbo
jasper: libjpeg-turbo
libvorbis: libogg
libflac: libogg gettext
libass: fontconfig libpng freetype2 expat $(ICONV)
librtmp: openssl
libmicrohttpd: openssl libgpg-error libgcrypt
libcdio: $(ICONV)
libplist: libxml2 $(ZLIB)
libbluray: $(ICONV) libxml2
libssh: libgcrypt openssl $(ZLIB)
mysql: openssl
libzip: $(ZLIB)
libpng: $(ZLIB)
openssl: $(ZLIB)
samba: libssh2
gnutls: libtasn1 nettle $(ZLIB)
nettle: gmp
libsdl2: $(LINUX_SYSTEM_LIBS)
libxslt: libgcrypt libxml2
ffmpeg: $(ICONV) $(ZLIB) bzip2 libvorbis gnutls libdcadec
libcec: platform
crossguid: $(CROSSGUID_DEPS)
libdsm: libtasn1
libcpluff: expat
libdvdread: libdvdcss
libdvdnav: libdvdread
libulxmlrpcpp: libgcrypt openssl $(ZLIB)

.installed-$(PLATFORM): $(DEPENDS)
	touch $@
	@echo ""Dependencies built successfully.""

$(DEPENDS):
	$(MAKE) -C $@

clean:
	for d in $(DEPENDS); do $(MAKE) -C $$d clean; done

# Debug target, this will DELETE all data in staging!
test-dependencies:
	( for d in $(DEPENDS); do \
	rm -rf $(PREFIX); \
	mkdir -p $(PREFIX)/include $(PREFIX)/share $(PREFIX)/bin; \
	cp -f config.site Toolchain.cmake $(PREFIX)/share/; \
	$(MAKE) distclean; \
	$(MAKE) $$d; done ) && echo ""$@ built successfully""


distclean::
	for d in $(DEPENDS); do $(MAKE) -C $$d distclean; done
	rm -rf $(PREFIX)/addons $(PREFIX)/bcsymbolmaps

ifeq ($(OS),linux)
linux-system-libs:
	[ -f $(PREFIX)/lib/pkgconfig/x11.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/x11.pc $(PREFIX)/lib/pkgconfig/x11.pc
	[ -f $(PREFIX)/lib/pkgconfig/xproto.pc ] || ln -s /usr/share/pkgconfig/xproto.pc $(PREFIX)/lib/pkgconfig/xproto.pc
	[ -f $(PREFIX)/lib/pkgconfig/kbproto.pc ] || ln -s /usr/share/pkgconfig/kbproto.pc $(PREFIX)/lib/pkgconfig/kbproto.pc
	[ -f $(PREFIX)/lib/pkgconfig/xcb.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xcb.pc $(PREFIX)/lib/pkgconfig/xcb.pc
	[ -f $(PREFIX)/lib/pkgconfig/pthread-stubs.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/pthread-stubs.pc $(PREFIX)/lib/pkgconfig/pthread-stubs.pc
	[ -f $(PREFIX)/lib/pkgconfig/xau.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xau.pc $(PREFIX)/lib/pkgconfig/xau.pc
	[ -f $(PREFIX)/lib/pkgconfig/xdmcp.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xdmcp.pc $(PREFIX)/lib/pkgconfig/xdmcp.pc
	[ -f $(PREFIX)/lib/pkgconfig/xext.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xext.pc $(PREFIX)/lib/pkgconfig/xext.pc
	[ -f $(PREFIX)/lib/pkgconfig/xextproto.pc ] || ln -s /usr/share/pkgconfig/xextproto.pc $(PREFIX)/lib/pkgconfig/xextproto.pc
	[ -f $(PREFIX)/lib/pkgconfig/xrandr.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrandr.pc $(PREFIX)/lib/pkgconfig/xrandr.pc
	[ -f $(PREFIX)/lib/pkgconfig/xrender.pc ] || ln -s /usr/lib/$(HOST)/pkgconfig/xrender.pc $(PREFIX)/lib/pkgconfig/xrender.pc",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yVNBkw
code,"all: cstsn.js

clean:
	rm cstsn.js

cstsn.js: cstsn.coffee
	coffee -c cstsn.coffee
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",r2uEQU
code,"---
layout: post
title: Week 1 Review
---

## Weekly Review (8/30/15)

It's Sunday afternoon on the 30th of August, and I've finally managed to set this Jekyll thing up, which means I can now talk about my time in the class this past week! Hooray!

Besides being the only class I have on Mondays, Wednesdays, and Fridays, Object Oriented Programming is great so far. Professor Downing structures the course so that the incoming student has a background in programming, but not necessarily in C++. This is great because myself (as well as many other students in the course, I'd assume), have made it through Data Structures (CS 314, a prerequisite to the prerequisite of this class, CS 429), but have no background in the language of C++.

While I'm not the biggest fan of the teaching method Prof. Downing uses (the calling out of students at random to answerom questions), the lectures he has given thus far are very interesting and in-depth, taking time to explain even the most minute things. I feel like this course will give students more than just knowledge in a new language at the end of the day; I think it'll give them a much more in-depth idea of how to approach programming problems as well as a set of tools to use during the development process that they didn't even know they had.

## Tip of the Week 

    http://gitref.org/

Familiarizing yourself with Git and the commands associated with it will prove to be invaluable to you as you progress in your programming career. The above website is a bare-bones, to-the-point reference site that helps this process.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IdfneZ
code,"---
title: ""Suriname""
published: true
featured_image_path:
featured_image_attribution:
geocode: SUR
iso_code: SR
territory:
state_party: true
signed_but_not_ratified: false
signed_date:
ratified_or_acceded_date: 2008-07-15T00:00:00.000Z
entry_into_force_date: 2008-10-01T00:00:00.000Z
ratified_apic_date:
genocide:
crimes_against_humanity:
aggression:
war_crimes:
note:
slug: suriname
---
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",U6sUlr
code,"---
layout: page
title: Protector Purple Group Show
date: 2016-05-24
author: Barbara Riddle
tags: weekly links, java
status: published
summary: In lacinia libero vitae ullamcorper malesuada.
banner: images/banner/wedding.jpg
booking:
  startDate: 05/06/2019
  endDate: 05/07/2019
  ctyhocn: PTNHHHX
  groupCode: PPGS
published: true
---
Quisque fermentum nibh lorem, non feugiat nunc dignissim nec. Praesent sed neque sollicitudin, fermentum purus a, porttitor urna. Nullam placerat varius ipsum, quis porttitor sem gravida et. Pellentesque porta interdum luctus. Cras dolor tellus, tristique non efficitur id, ultrices vel nisi. Pellentesque viverra quam vitae est tincidunt, ac lobortis nulla dictum. Vestibulum ornare turpis erat, et porta magna imperdiet sed. Phasellus auctor dui sed ipsum venenatis, ornare porttitor magna varius.

* Aliquam porttitor elit at ipsum feugiat, in vehicula elit hendrerit
* Morbi quis ligula non nulla sollicitudin sollicitudin eu sed mi
* Ut accumsan nisi nec nisl varius, at euismod mi sodales
* Nulla tristique magna nec accumsan posuere.

Cras ultricies tellus in elit congue pretium. Sed efficitur quam feugiat orci tincidunt finibus. Praesent consectetur sed purus ut condimentum. Suspendisse tincidunt condimentum viverra. In porta rhoncus arcu, a lacinia risus maximus non. Pellentesque et gravida velit. Suspendisse a aliquet mauris. Pellentesque tempor interdum elit sed aliquam. Praesent semper est a metus aliquet, nec ornare nunc sollicitudin. Aliquam non orci dictum, bibendum mi eu, pellentesque mi. Nulla risus odio, blandit in auctor vel, sagittis eu nisi. Curabitur porttitor purus nisi. In eget accumsan erat.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",r32Jpw
code,"---
published: true
author: Robin Wen
layout: post
title: MacBook Pro 更换电池
category: 工具
summary: ""自从今年大修了一次主力 MacBook 后，笔者考虑准备一台随时可以上阵的备用机。笔者除了主力的 2018 年款 MacBook Pro，还有一台 2015 年出厂的 MacBook Pro。2015 年的这台机器可用性极强，外壳没有磕过，性能也还不错，唯一美中不足的电池鼓包严重，导致笔记本盖子都不能完全合上。不得不感慨，苹果的设备做工是真得精细啊。笔者一直认为，2015 年的 Retina MacBook Pro 是最好用的苹果笔记本（性能稳定、散热稳定、转接口方便、剪刀式键盘、没有鸡肋的 Touch Bar、有灵魂的发光的 Logo），电池续航不行了，还能动手更换。2016 年之后的 MacBook 要自己更换就没那么容易了。""
tags:
  - 工具
  - MacBook
  - 比特币
  - Bitcoin
  - 水龙头
  - ExinEarn
---

`文/Robin`

***

![](https://cdn.dbarobin.com/s0yv3o7.png)

自从今年大修了一次主力 MacBook 后，笔者考虑准备一台随时可以上阵的备用机。笔者除了主力的 2018 年款 MacBook Pro，还有一台 2015 年出厂的 MacBook Pro。2015 年的这台机器可用性极强，外壳没有磕过，性能也还不错，唯一美中不足的电池鼓包严重，导致笔记本盖子都不能完全合上。

电池鼓包严重，那就要想办法解决。只是笔者的拖延症严重，导致一直没有时间去更换。最近看到一些群里聊了这个话题，于是去研究了下，发现官方渠道更换电池的费用在 3000～4000 元（2015 年的机子早已过保）。于是又找了些其他渠道，线下的一些非官方渠道在 600～1000 元不等，闪电修 588 元。

由于之前笔者在闪电修更换过几次 iPhone 电池（苹果的设备除了电池，是真耐用），所以对于他们的服务还是比较满意的。于是我在闪电修下了个上门更换电池的订单，没多久他们告知这个服务是才开通的，暂时不能上门，需要送到福田他们的门店维修。虽然是备用机，但是寄修对于我而言，是不能接受的，于是放弃了这个渠道。

线下的非官方渠道，水挺深的，师傅的技术也是因人而异，于是这个渠道也不考虑了。最后就只剩下「**自己动手，丰衣足食**」了。笔者去京东找了下适配机型的电池，发现绿巨能有一款评价不错，还附赠工具，价格 359 元，于是下了单，使用「水龙头」还返 20 元等值的比特币。第二天一到，就去寻找一些教程，准备着手更换。

iFixit 网站上有一个非常详细的教程，步骤多达 36 步。笔者看了下犯愁了，绿巨能的电池送的工具就一把塑胶铲子、两把螺丝刀，挺多工具都没有啊。于是笔者去 B 站重新找了个视频教程，看了一遍，没那么难啊，就是关键的几步注意下就行了。于是按照这个视频教程开始动手更换电池。打开背壳，发现这电池膨胀太吓人了，什么时候爆炸都难说啊。如果读者发现电池鼓包了，得尽快处理。整个过程耗时 40 分钟左右，除了拆卸电池比较费劲之外，其他的都挺容易的。除了更换电池，笔者还是用压缩空气对电路板除了下尘。

更换电池之后，开机，查看电池性能，测试电池充放，一切正常。MacBook Pro 就这样满血复活了。不过有一点需要注意，为了最低地降低风险，在更换电池之前，先打开您的 MacBook 直到完全耗尽电池电量。

不得不感慨，苹果的设备做工是真的精细啊。笔者一直认为，2015 年的 Retina MacBook Pro 是最好用的苹果笔记本（性能稳定、散热稳定、转接口方便、剪刀式键盘、没有鸡肋的 Touch Bar、有灵魂的发光的 Logo），电池续航不行了，还能动手更换。2016 年之后的 MacBook 要自己更换就没那么容易了。

这就是笔者动手更换电池的经验，希望对读者有所帮助。有任何问题，欢迎交流。

对了，关于文中提到的绿巨能笔记本电池（适配 2015 款 13 英寸 Retina MacBook Pro，型号是 A1502），如果读者有需求的话，可以扫描以下二维码购买。

![](https://cdn.dbarobin.com/unbe9nq.jpg)

最后，本文提到的水龙头，App Store、各大安卓市场均有下载，关键词「水龙头」​，也可以扫描​下图的二维码注册。​我的邀请码：**3XKXJB**。​

![](https://cdn.dbarobin.com/kwdjijt.png)

***

我是区块链罗宾，博客 [dbarobin.com](https://dbarobin.com/)
如果您想和我交流，我的 Mixin: **26930**

![](https://cdn.dbarobin.com/zrau1cb.png)

***

**本站推广**

币安是全球领先的数字货币交易平台，提供比特币、以太坊、BNB 以及 USDT 交易。

> 币安注册: [https://accounts.binancezh.io/cn/register/?ref=11190872](https://accounts.binancezh.io/cn/register/?ref=11190872)
> 邀请码: **11190872**

***

本博客开通了 Donate Cafe 打赏，支持 Mixin Messenger、Blockin Wallet、imToken、Blockchain Wallet、Ownbit、Cobo Wallet、bitpie、DropBit、BRD、Pine、Secrypto 等任意钱包扫码转账。

<center>
    <div class=""--donate-button""
         data-button-id=""f8b9df0d-af9a-460d-8258-d3f435445075""
    ></div>
</center>

***

–EOF–

版权声明：[自由转载-非商用-非衍生-保持署名（创意共享4.0许可证）](http://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oqKXCm
code,"# npmup [![NPM version][npm-image]][npm-url]
> Cli tool to overview dependencies in package.json

This is scope reduction result of my `update-my-deps` project. At the end I found out, that I wrote small part of [`david`](https://github.com/alanshaw/david) functionality. Oops.

![2014-03-11 18-35-40 1 npmupexample zsh](https://f.cloud.github.com/assets/365089/2385186/af7360a2-a919-11e3-96d0-14412f9e1f28.png)

## Installation

```bash
$ npm i npmup -g
```

## Usage

```bash
$ npmup
  Dependency    Required    Stable    Latest
! express       ~3.4.4      3.4.8     3.5.0
  lodash        ~2.4.1      2.4.1     2.4.1
  mkdirp        ~0.3.5      0.3.5     0.3.5
! npmlog        0.0.2       0.0.2     0.0.6
  recluster     ~0.3.4      0.3.6     0.3.6
```

[npm-url]: https://npmjs.org/package/npmup
[npm-image]: https://badge.fury.io/js/npmup.png

## License

MIT (c) Vsevolod Strukchinsky
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HHUZMc
code,"# Frontend de NOMS/NMX/Normas
Los tres frontend se encuentran en ramas distintas de desarrollo:

* master    --->  http://noms.imco.org.mx
* nmx    --->  http://nmx.imco.org.mx
* normas    --->  http://normas.imco.org.mx

Para cambiar de ramas utilice el comando de GIT
`git checkout ${BRANCH}`

La construcción del sitio de despliege se ejecuta en la carpeta `frontend`

> #### NOTA:
> Cada sitio debe construirse desde su rama de forma individual.


## Build & development

Run `grunt` for building and `grunt serve` for preview.

## Testing

Running `grunt test` will run the unit tests with karma.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GF3gtH
code,"# Fire Keeper
## Introduction
Fire Keeper is a bot designed for the *Praise the Place* Dark Souls Discord server.

Please do not use this bot in your server without adapation of the code, or else things will not work correctly.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iMBmc4
code,"---

title: 22 Points to Go
author: rami
layout: lifestream 
categories: [Lifestream]
tags: [jeddah, saudi-arabia, juve, path]
image: 22-points-to-go.jpg

---

10 games & 22 points to go. With games against the 20th place ,19,15,14,13,11. #Juve CC:@juventiknows.

{% include image.html url=""/assets/images/content/lifestream/22-points-to-go.jpg"" description=""22 Points to Go"" %}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cpM5JX
code,"---
layout: post
title: 循环队列
date:   2017-05-13 10:54:37
categories: Java
---

# Java实现的循环队列
`队列`具有先进先出的特点，本文所说的`循环队列`（以下简称队列）的长度是一定的（可以扩容），如果队列满了，新来的元素会覆盖队列中最先来的元素。

它的使用场景是对内存占用有要求的情况下按序缓存一些数据，比如直播中的弹幕。

* 注意：此实现非线程安全
 

```java
import java.util.ArrayList;
import java.util.List;

/**
 * 容量受限的队列，在队列已满的情况下，新入队的元素会覆盖最老的元素。<br>
 * <font color=""red"">此类非线程安全</font>
 * 
 * @author rongzhisheng
 *
 * @param <E>
 */
public class CircleQueue<E> {
    private static final int DEFAULT_CAPACITY = 10;
    private int capacity;
    private int head;// 即将出队的位置
    private int tail;// 即将入队的位置
    private List<E> queue;
    private boolean isFull;// 队列是否已满，队列空和满的时候head==tail

    public CircleQueue() {
        this(DEFAULT_CAPACITY);
    }

    public CircleQueue(int capacity) {
        this.capacity = capacity;
        queue = new ArrayList<>(this.capacity);
        head = tail = 0;
    }

    /**
     * 入队
     * 
     * @param e
     * @return 是否丢弃了最旧的元素
     */
    public boolean add(E e) {
        if (isFull) {
            head = addIndex(head);
            addOrSet(e, tail);
            tail = head;
            return true;
        }
        addOrSet(e, tail);
        tail = addIndex(tail);
        if (head == tail) {
            isFull = true;
        }
        return false;
    }

    public E poll() {
        if (!isFull && head == tail) {
            return null;
        }
        E e = queue.get(head);
        queue.set(head, null);
        head = addIndex(head);
        isFull = false;
        return e;
    }

    public int size() {
        if (!isFull && head == tail) {
            return 0;
        }
        if (isFull) {
            return capacity;
        }
        int i = 0;
        int h = head;
        while (h != tail) {
            i++;
            h = addIndex(h);
        }
        return i;
    }

    public int capacity() {
        return capacity;
    }

    public E element(int index) {
        if (index < 0 || index >= size()) {
            throw new IllegalArgumentException();
        }
        index = addIndex(head + index - 1);
        return queue.get(index);
    }

    public boolean isEmpty() {
        return size() == 0;
    }

    public List<E> getList() {
        List<E> list = new ArrayList<>();
        final int size = size();
        for (int i = 0; i < size; i++) {
            list.add(element(i));
        }
        return list;
    }

    public void clean() {
        head = tail = 0;
        isFull = false;
        queue.clear();
    }

    public void grow(int newCapacity) {
        if (newCapacity <= capacity) {
            return;
        }
        List<E> data = getList();
        queue.clear();
        queue.addAll(data);
        head = 0;
        tail = head + queue.size();
        capacity = newCapacity;
        isFull = false;
    }

    @Override
    public String toString() {
        return getList().toString();
    }

    private void addOrSet(E e, int index) {
        if (queue.size() > index) {
            queue.set(index, e);
            return;
        }
        if (queue.size() == index) {
            queue.add(e);
            return;
        }
        throw new IllegalStateException();
    }

    private int addIndex(int i) {
        return (i + 1) % capacity;
    }

    public static void main(String[] args) {
        int a = 1;
        CircleQueue<Integer> queue = new CircleQueue<Integer>(5);

        queue.grow(8);
        queue.grow(10);

        for (int i = a; i < a + 6; i++) {
            queue.add(i);
        }
        a += 6;
        System.out.println(queue);

        for (int i = a; i < a + 6; i++) {
            queue.add(i);
        }
        a += 6;
        System.out.println(queue);

        queue.grow(10);

        for (int i = a; i < a + 6; i++) {
            queue.add(i);
        }
        a += 6;
        System.out.println(queue);

        for (int i = 0; i < 5; i++) {
            System.out.println(queue.poll());
        }
        System.out.println(queue);

        queue.clean();

        for (int i = 0; i < 3; i++) {
            queue.add(i);
        }
        System.out.println(queue);
    }

}
```",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JsoC1_
code,"---
layout:     post
author:     Christoph Broschinski
author_lnk: https://github.com/cbroschinski
title:      TU Clausthal reports its 2016 and 2017 APC expenditures
date:       2018-02-05 08:00:00
summary:    
categories: [general, openAPC]
comments: true
---




The [TU Clausthal](http://www.tu-clausthal.de/Welcome.php.en) has updated its APC expenditures. The latest contribution provides data for the 2016 and 2017 periods.

The [Library of Clausthal University of Technology](http://www.ub.tu-clausthal.de/en/) is in charge of the [University's Open Access Publishing Fund](http://www.ub.tu-clausthal.de/en/angebote-fuer-wissenschaftlerinnen/elektronisches-publizieren/publikationsfonds/), which is supported by the DFG under its [Open-Access Publishing Programme](http://www.dfg.de/en/research_funding/programmes/infrastructure/lis/funding_opportunities/open_access/).

Contact person is [Silke Frank](mailto:silke.frank@tu-clausthal.de)

## Cost data



The new dataset covers publication fees for 7 articles. Total expenditure amounts to 11 106€ and the average fee is 1 587€.

The following table shows the payments the library of Clausthal University of Technology has made to publishers in 2016 and 2017.


|                                     | Articles| Fees paid in EURO| Mean Fee paid|
|:------------------------------------|--------:|-----------------:|-------------:|
|Scientific Research Publishing, Inc, |        2|               921|           461|
|Carl Hanser Verlag                   |        1|              2099|          2099|
|Elsevier BV                          |        1|              1964|          1964|
|MDPI AG                              |        1|              1004|          1004|
|Springer Nature                      |        1|              2618|          2618|
|Wiley-Blackwell                      |        1|              2500|          2500|

## Overview

With the recent contribution included, the overall APC data for TU Clausthal now looks as follows:

### Fees paid per publisher (in EURO)

![plot of chunk tree_clausthal_2018_02_05_full](/figure/tree_clausthal_2018_02_05_full-1.png)

###  Average costs per year (in EURO)

![plot of chunk box_clausthal_2018_02_05_year_full](/figure/box_clausthal_2018_02_05_year_full-1.png)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gnbd5c
code,"1.0.0 / 2014-12-24
==================

 * 0.1.2
  - Add X-XSS-Protection header options
 * 0.1.1
  - Request body or query sanitize",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2QVVWK
code,"personalprojects
================

A bunch of little things I made in my freetime


### PyPong
A simple pong game made in Python and Pygame.
**Changes Made**: Made the AI a bit (a lot) worse, you can actually win now.

### Maze Runner
A maze app that uses Deep Field Search (DFS) to make a perfect maze and then uses the same algorithm in reverse to solve. Requires PyGame.
**Usage**: Run it, enter your resolution, and let it run! Press ""Escape"" at anytime to quit.
**Changes Made**: Exits more elegantly, colors are more visible.

### Find the Cow
A joke of a game inspired by a conversation at dinner with friends. I challenged myself to keep it under 100 lines of code. Requires PyGame.
**Usage**: Click to guess where the cow is. The volume of the ""moo"" indicates how far away the cow is. Once the cow is found, press spacebar to go to the next level.
**ToDo**: Add a menu, although, I want to keep this under 100 lines of code.

### Binary Clock
Something I thought I would finish, but never had the initative. It was supposed to be a simple 5 row binary clock. Maybe someday it will get a life.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",azR7wm
code,"---
title: ""New package uniftest with initial version 1.0 ""
kind: article
created_at: 2014-12-25 01:13:00 UTC
author: CRANberries
categories: 
tags: 
layout: post
---
<strong>Package</strong>: uniftest<br>
<strong>Version</strong>: 1.0<br>
<strong>Date</strong>: 2014-12-24<br>
<strong>Title</strong>: Tests for Uniformity<br>
<strong>Author</strong>: Maxim Melnik, Ruslan Pusev<br>
<strong>Maintainer</strong>: Ruslan Pusev <r.pusev@spbu.ru><br>
<strong>Description</strong>: Tests for the hypothesis of uniformity<br>
<strong>License</strong>: GPL (>= 3)<br>
<strong>Packaged</strong>: 2014-12-24 21:27:38 UTC; Ruslan<br>
<strong>NeedsCompilation</strong>: no<br>
<strong>Repository</strong>: CRAN<br>
<strong>Date/Publication</strong>: 2014-12-25 01:28:18<br>

<p>
<a href=""http://cran.r-project.org/web/packages/uniftest/index.html"">More information about uniftest at CRAN</a><div class=""author"">
  <img src="""" style=""width: 96px; height: 96;"">
  <span style=""position: absolute; padding: 32px 15px;"">
    <i>Original post by <a href=""http://twitter.com/"">CRANberries</a> - check out <a href=""http://dirk.eddelbuettel.com/cranberries"">CRANberries   </a></i>
  </span>
</div>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",moBxaO
code,"# fish-p2p
FISH: FIle SHaring, a Distributed File System - Decentralised P2P system
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7WmLZ1
code,"# [Demo](https://keaws.github.io/git-api-client/)

## Install
```
npm i
npm start
```
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UM5OsS
code,"# blog

[![Build Status](https://travis-ci.org/Lurk/blog.svg?branch=master)](https://travis-ci.org/Lurk/blog)

Weekend project for self education 

## backend configuration

create config.local.js on ./server directory with 

```
module.exports = {
    secret: 'some random text',
    port: 3000,
    greeting: 'blog server running on http://localhost:',
    mongoose: 'mongodb://localhost/blog'
}
```

where: 

- secret is random string and it should be defined for security reasons
- port is int, default is 3000
- greeting is text which will be printed on console when server starts successfully
- mongoose is mongodb connection string",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YfKUWo
code,"# SilkSlider

[![Build Status](https://secure.travis-ci.org/wwood/bioruby-SilkSlider.png)](http://travis-ci.org/wwood/bioruby-SilkSlider)

A bioinformatic program for predicting whether proteins are 'silk-like' or not.

This program was developed by Carmel McDougall and Ben Woodcroft at the [Degnan Laboratory](http://www.biology.uq.edu.au/staff/bernie-degnan) at the University of Queensland.

## Installation

After installing Ruby (SilkSlider is tested on Ruby 2.1.2):
```sh
gem install SilkSlider
```

Also required is the [SignalP](http://www.cbs.dtu.dk/services/SignalP/) and [TMHMM](http://www.cbs.dtu.dk/services/TMHMM/) programs, which need to be installed separately and available to silk_slider on the `$PATH`. SilkSlider is only tested on linux systems.

## Usage

To run the program:
```sh
silk_slider my.fasta
```
The program outputs a FASTA file of all silk-like proteins.

To see the help:
```sh
silk_slider -h
```

## Project home page

Information on the source tree, documentation, examples, issues and
how to contribute, see

  http://github.com/wwood/SilkSlider

## Cite

Currently unpublished - a journal article is in preparation.

## Biogems.info

This Biogem is published at (http://biogems.info/index.html#SilkSlider)

## Copyright

Copyright (c) 2014 Carmel McDougall, Ben Woodcroft, and Bernard Degnan. See LICENSE.txt for further details.

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G92022
code,"---
title: ""Krita Brushes Presets Pack v2""
date: 2016-09-16 14:00
thumb: '/img/blog/brush-pack-v2/icon-nylnook-brush-pack-v2-art-pen.jpg'
lang_fr: '/fr/blog/pack-brosses-krita-v2'
tags:
  - download
  - graphic novel
  - making of
  - tutorials
---

![Krita icon](/website-img/icon-krita.svg)

Time for update ! I'm happy to introduce **36 brushes**  presets for digital painting I crafted for and with **[Krita 3.0.1](https://krita.org/)** , used for [my latest comic](/en/comics/mokatori-ep0-the-end/)... This is version 2.

They are free to use, under a [Creative Commons Zero License](http://creativecommons.org/publicdomain/zero/1.0/deed) !

## What's new in v2 ?

First of all, now there are 2 packs, depending on your stylus : does it support rotation additionally to pressure and tilt ?

If you have a [Wacom Art Pen](https://www.wacom.com/en-us/store/pens/art-pen) or similar, that support rotation, you will be interested by the Art Pen pack:  
[![Nylnook Art Pen Brush pack icon](/img/blog/brush-pack-v2/icon-nylnook-brush-pack-v2-art-pen.jpg)](https://github.com/nylnook/nylnook-krita-brushes/releases/download/v2/nylnook-v2-art.bundle)

And if you have any other Pen, you will be interested by the Generic Pen pack, which emulate rotation on some brushes:   
[![Nylnook Generic Pen Brush pack icon](/img/blog/brush-pack-v2/icon-nylnook-brush-pack-v2-generic-pen.jpg)](https://github.com/nylnook/nylnook-krita-brushes/releases/download/v2/nylnook-v2-gen.bundle)
Emulation is acheived with brand new Krita features : Drawing Angle Lock (introduced in 3.0), and Fuzzy Stroke (introduced in 3.0.1) !

I also :
- added 3 new brushes presets (Aboriginal Dots, Ink Power Rectangle and Clone Tool)
- updated almost every brush
- removed 2 not so interesting brushes that were no longer working
- updated textures and redo some
- and the basic brushes now use the ""Greater"" blending mode, which give better results when a stroke overlap another stroke, but works only on a transparent layer: if you want to use them on an opaque layer like a background, just switch the blending mode to Normal again


## Installation

Download the [Generic Pen Bundle](https://github.com/nylnook/nylnook-krita-brushes/releases/download/v2/nylnook-v2-gen.bundle), or the [Art Pen Bundle](https://github.com/nylnook/nylnook-krita-brushes/releases/download/v2/nylnook-v2-art.bundle).   
In Krita, go to *Settings > Manage Resources… > Import Bundle/Resource*, and make sure the bundle is in the *Active Bundles* column on the left.   
You should choose one of the bundle, and do not install or activate both of them, otherwise the Krita tagging system will be confused with brushes that are common to both packs.  

## Usage

I usually use them on a large canvas (mininimum 2K)... so theses presets may look big on a smaller canvas.

### Small Icons

![Nylnook rotation icon](/img/blog/brush-pack-v2/icon-rotation-crop.png) Brushes with a rotation icon for the Art Pen pack are meant to be used with a stylus **supporting rotation** like the [Wacom Art Pen](https://www.wacom.com/en-us/store/pens/art-pen) (the best stylus I know if you want my opinion). This allow to do thick and thin strokes, essentials for inking.

![Nylnook rotation generic icon](/img/blog/brush-pack-v2/icon-rotation-generic-crop.png) Brushes with a G with an arrow icon for ""Generic rotation"" are brushes with **emulated rotation** which can work with any stylus, and rely on Krita features Drawing Angle Lock and Fuzzy Stroke. Most of them are in the Generic Pen pack, but you can find two in the Art Pen pack when Fuzzy Stroke is more intersting than controlled rotation.

![Nylnook mix icon](/img/blog/brush-pack-v2/icon-mix-crop.png) Brushes with a drop icon mix there colors with the color already on the canvas... so they feel ""wet"".

Brushes with mixing and rotation use more computing power than other brushes, especially when they are combined with textures. Should work on any recent computer nevertheless ;)

### Naming

As Krita tagging system is sometimes capricious, every brush preset start with ""Nylnook"" to quickly find them. Then they are sorted by types :   

**Aboriginal Dots** : I created this one specially to mimic australian aboriginal dot painting for a specific projet. Just draw your line and the preset will paint dots along the way in this aboriginal style.  
![Aboriginal Dots presentation](/img/blog/brush-pack-v2/presentation-aboriginal.jpg)  


**Airbrush** is a textured airbrush for shading, it's more interesting with a texture ;)  
![Airbrush presentation](/img/blog/brush-pack-v2/presentation-airbrush.jpg)  


**Basic** Brushes are the simplest, and the less demanding for your computer. Slightly noising to allow soft mixing between colors. Now using the ""Greater"" Blending mode.   
![Basic presentation](/img/blog/brush-pack-v2/presentation-basic.jpg)  


**Block** allow to do large blocking of colors in speed painting for example. Noise and not texture to make it quicker.   
![Block presentation](/img/blog/brush-pack-v2/presentation-block.jpg)  


**Clone Tool** allow to copy part of an image on another part. De",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",a-__SO
code,"---
layout: post
title: Tweets
date: 2019-08-08
summary: These are the tweets for August 8, 2019.
categories:
---

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Oa1D43
code,"# rustual-boy-www

A basic landing page/blog for [Rustual Boy](https://github.com/emu-rs/rustual-boy).

## running locally

1. Update/install dependencies by running: `npm install` from the repo directory (safe to only do this once per pull)
2. Run the site: `node app`

The site will be available on [localhost:3000](http://localhost:3000). To use another port, you can specify a just-in-time environment variable like so: `httpPort=[port] node app`.

## running in deployment

Start the site: `sudo httpPort=80 useHttps=true pm2 start app.js`

Note that `pm2` is used to spawn the app in a separate process so that the ssh terminal isn't blocked while it's running. To monitor the process, use `sudo pm2 list`. It can be restarted using `sudo pm2 restart app`, and if absolutely necessary, all node processes can be killed using `sudo pm2 kill`.

## blog

The blog is built with [poet](http://jsantell.github.io/poet/), which means a couple things:
- Posts are stored as .md files in the `posts/` directory. We've configured poet to watch the posts dir, but its watcher isn't recursive by default, so we can't use subdirectories. Therefore, all posts follow a simple naming convention: `category-number-postname.md`. This way they can stay cleanly organized within this single folder.
- Post slugs are generated using the title of the post, so these can't be changed without also invalidating the post url.
- Post dates use the nonintuitive American format (M-D-Y)

## demo reel

Just in case I lose them later, here's the encoding settings used for the demo reel video:
```
ffmpeg.exe -i reel.mkv -c:v libvpx -qmin 0 -qmax 50 -crf 5 -b:v 1M -an -r 25 reel.webm

ffmpeg.exe -i reel.mkv -c:v libx264 -pix_fmt yuv420p -profile:v baseline -b:v 600k -pass 1 -level 3 -movflags +faststart -an -r 25 -f mp4 /dev/null && \
ffmpeg.exe -i reel.mkv -c:v libx264 -pix_fmt yuv420p -profile:v baseline -b:v 600k -pass 2 -level 3 -movflags +faststart -an -r 25 reel.mp4
```

## license

MIT (see [LICENSE](LICENSE))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CTKH-t
code,"collectd-network-bandwidth-usage
================================

Collectd exec plugin for monitoring the network bandwitdh usage. 

Installation
-----------

Uncomment exec plugin in your collectd.conf:
```bash
LoadPlugin exec
```

Configure plugin:
```bash
<Plugin exec>
	Exec username ""/path/to/exec-network-bandwidth-usage.sh"" ""your-network-interface-name""
</Plugin>
```

Restart collectd:
```bash
service collectd restart
```

Screenshots
-----------
![Example graph ](https://github.com/Cosmologist/collectd-network-bandwidth-usage/blob/master/screenshots/counter.png?raw=true ""Example graph"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YFo90u
code,"## Rails 5.0.4 (June 19, 2017) ##

*   Fix regression in numericality validator when comparing Decimal and Float input 
    values with more scale than the schema.

    *Bradley Priest*


## Rails 5.0.3 (May 12, 2017) ##

*   The original string assigned to a model attribute is no longer incorrectly
    frozen.

    Fixes #24185, #28718.

    *Matthew Draper*

*   Avoid converting integer as a string into float.

    *namusyaka*


## Rails 5.0.2 (March 01, 2017) ##

*   No changes.


## Rails 5.0.1 (December 21, 2016) ##

*   No changes.


## Rails 5.0.1.rc2 (December 10, 2016) ##

*   No changes.


## Rails 5.0.1.rc1 (December 01, 2016) ##

*   Fix `Type::Date#serialize` to cast a value to a date object properly.
    This casting fixes queries for finding records by date column.

    Fixes #25354.

    *Ryuta Kamizono*


## Rails 5.0.0 (June 30, 2016) ##

*   `Dirty`'s `*_changed?` methods now return an actual singleton, never `nil`, as in 4.2.
    Fixes #24220.

    *Sen-Zhang*

*   Ensure that instances of `ActiveModel::Errors` can be marshalled.
    Fixes #25165.

    *Sean Griffin*

*   Allow passing record being validated to the message proc to generate
    customized error messages for that object using I18n helper.

    *Prathamesh Sonpatki*

*   Validate multiple contexts on `valid?` and `invalid?` at once.

    Example:

        class Person
          include ActiveModel::Validations

          attr_reader :name, :title
          validates_presence_of :name, on: :create
          validates_presence_of :title, on: :update
        end

        person = Person.new
        person.valid?([:create, :update])    # => false
        person.errors.messages               # => {:name=>[""can't be blank""], :title=>[""can't be blank""]}

    *Dmitry Polushkin*

*   Add case_sensitive option for confirmation validator in models.

    *Akshat Sharma*

*   Ensure `method_missing` is called for methods passed to
    `ActiveModel::Serialization#serializable_hash` that don't exist.

    *Jay Elaraj*

*   Remove `ActiveModel::Serializers::Xml` from core.

    *Zachary Scott*

*   Add `ActiveModel::Dirty#[attr_name]_previously_changed?` and
    `ActiveModel::Dirty#[attr_name]_previous_change` to improve access
    to recorded changes after the model has been saved.

    It makes the dirty-attributes query methods consistent before and after
    saving.

    *Fernando Tapia Rico*

*   Deprecate the `:tokenizer` option for `validates_length_of`, in favor of
    plain Ruby.

    *Sean Griffin*

*   Deprecate `ActiveModel::Errors#add_on_empty` and `ActiveModel::Errors#add_on_blank`
    with no replacement.

    *Wojciech Wnętrzak*

*   Deprecate `ActiveModel::Errors#get`, `ActiveModel::Errors#set` and
    `ActiveModel::Errors#[]=` methods that have inconsistent behavior.

    *Wojciech Wnętrzak*

*   Allow symbol as values for `tokenize` of `LengthValidator`.

    *Kensuke Naito*

*   Assigning an unknown attribute key to an `ActiveModel` instance during initialization
    will now raise `ActiveModel::AttributeAssignment::UnknownAttributeError` instead of
    `NoMethodError`.

    Example:

        User.new(foo: 'some value')
        # => ActiveModel::AttributeAssignment::UnknownAttributeError: unknown attribute 'foo' for User.

    *Eugene Gilburg*

*   Extracted `ActiveRecord::AttributeAssignment` to `ActiveModel::AttributeAssignment`
    allowing to use it for any object as an includable module.

    Example:

        class Cat
          include ActiveModel::AttributeAssignment
          attr_accessor :name, :status
        end

        cat = Cat.new
        cat.assign_attributes(name: ""Gorby"", status: ""yawning"")
        cat.name   # => 'Gorby'
        cat.status # => 'yawning'
        cat.assign_attributes(status: ""sleeping"")
        cat.name   # => 'Gorby'
        cat.status # => 'sleeping'

    *Bogdan Gusiev*

*   Add `ActiveModel::Errors#details`

    To be able to return type of used validator, one can now call `details`
    on errors instance.

    Example:

        class User < ActiveRecord::Base
          validates :name, presence: true
        end

        user = User.new; user.valid?; user.errors.details
        => {name: [{error: :blank}]}

    *Wojciech Wnętrzak*

*   Change `validates_acceptance_of` to accept `true` by default besides `'1'`.

    The default for `validates_acceptance_of` is now `'1'` and `true`.
    In the past, only `""1""` was the default and you were required to pass
    `accept: true` separately.

    *mokhan*

*   Remove deprecated `ActiveModel::Dirty#reset_#{attribute}` and
    `ActiveModel::Dirty#reset_changes`.

    *Rafael Mendonça França*

*   Change the way in which callback chains can be halted.

    The preferred method to halt a callback chain from now on is to explicitly
    `throw(:abort)`.
    In the past, returning `false` in an Active Model `before_` callback had
    the side effect of halting the callback chain.
    This is not recommended anymore and, depending on the value of the
    `ActiveSupport.halt_callback_chains_on_return_false` option, will
    either not work at all or display a de",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HBnTVJ
code,"# path

Create a 2d path using SVG syntax.
* `d` is the path descriptor

{% craftml %}
<!-- rectangle -->
<path d=""M10 10 h 10 v 10 h -10 z""/>

<!-- triangle -->
<path d=""M30 10 l 10 10 l 10 -10 z""/>
{% endcraftml %}

Typically, you would use another drawing program to draw a path and export
it as an SVG tag to use in CraftML, because it is quite difficult to write
out a path descriptor manually.

{% craftml %}
<path d=""M425.714,298.795c-3.315-25.56-31.224-50.174-59.725-52.675c-1.32-0.116-2.678-0.175-4.035-0.175
c-7.841,0-15.145,1.899-22.876,3.909c-8.474,2.204-17.236,4.482-27.593,4.482c-24.627,0-51.939-13.673-85.951-43.03
c-15.99-13.803-37.649-30.563-60.579-48.309c-35.625-27.57-72.464-56.078-92.513-76.923c-0.966-1.005-2.134-2.422-3.485-4.063
c-5.524-6.71-13.871-16.849-23.975-16.849c-7.007,0-13.556,4.88-19.463,14.506c-17.969,29.272-40.64,92.412-11.632,143.381
c22.454,39.516,27.952,104.224,29.102,123.114c0.583,9.583,7.556,12.261,11.214,12.338h33.836c6.576,0,10.445-4.408,10.615-12.095
c0.141-6.393,0.801-30.128,3.351-67.172c2.102-30.806,8.488-34.369,13.109-34.369c10.056,0,27.157,16.668,50.825,39.738
c15.363,14.975,34.483,33.61,56.618,52.296c19.095,16.12,42.025,23.956,70.1,23.956c36.682,0,74.746-13.709,105.331-24.725
l2.09-0.752C418.524,328.739,427.869,315.404,425.714,298.795z""/>
{% endcraftml %}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8wHd5U
code,"# CGGameCircle
Marmalade Lua Binding for Game Circle
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gdSxpO
code,"Symfony Standard Edition
========================

Welcome to the Symfony Standard Edition - a fully-functional Symfony2
application that you can use as the skeleton for your new applications.

This document contains information on how to download, install, and start
using Symfony. For a more detailed explanation, see the [Installation][1]
chapter of the Symfony Documentation.

1) Installing the Standard Edition
----------------------------------

When it comes to installing the Symfony Standard Edition, you have the
following options.

### Use Composer (*recommended*)

As Symfony uses [Composer][2] to manage its dependencies, the recommended way
to create a new project is to use it.

If you don't have Composer yet, download it following the instructions on
http://getcomposer.org/ or just run the following command:

    curl -s http://getcomposer.org/installer | php

Then, use the `create-project` command to generate a new Symfony application:

    php composer.phar create-project symfony/framework-standard-edition path/to/install

Composer will install Symfony and all its dependencies under the
`path/to/install` directory.

### Download an Archive File

To quickly test Symfony, you can also download an [archive][3] of the Standard
Edition and unpack it somewhere under your web server root directory.

If you downloaded an archive ""without vendors"", you also need to install all
the necessary dependencies. Download composer (see above) and run the
following command:

    php composer.phar install

2) Checking your System Configuration
-------------------------------------

Before starting coding, make sure that your local system is properly
configured for Symfony.

Execute the `check.php` script from the command line:

    php app/check.php

The script returns a status code of `0` if all mandatory requirements are met,
`1` otherwise.

Access the `config.php` script from a browser:

    http://localhost/path/to/symfony/app/web/config.php

If you get any warnings or recommendations, fix them before moving on.

3) Browsing the Demo Application
--------------------------------

Congratulations! You're now ready to use Symfony.

From the `config.php` page, click the ""Bypass configuration and go to the
Welcome page"" link to load up your first Symfony page.

You can also use a web-based configurator by clicking on the ""Configure your
Symfony Application online"" link of the `config.php` page.

To see a real-live Symfony page in action, access the following page:

    web/app_dev.php/demo/hello/Fabien

4) Getting started with Symfony
-------------------------------

This distribution is meant to be the starting point for your Symfony
applications, but it also contains some sample code that you can learn from
and play with.

A great way to start learning Symfony is via the [Quick Tour][4], which will
take you through all the basic features of Symfony2.

Once you're feeling good, you can move onto reading the official
[Symfony2 book][5].

A default bundle, `AcmeDemoBundle`, shows you Symfony2 in action. After
playing with it, you can remove it by following these steps:

  * delete the `src/Acme` directory;

  * remove the routing entry referencing AcmeDemoBundle in `app/config/routing_dev.yml`;

  * remove the AcmeDemoBundle from the registered bundles in `app/AppKernel.php`;

  * remove the `web/bundles/acmedemo` directory;

  * remove the `security.providers`, `security.firewalls.login` and
    `security.firewalls.secured_area` entries in the `security.yml` file or
    tweak the security configuration to fit your needs.

What's inside?
---------------

The Symfony Standard Edition is configured with the following defaults:

  * Twig is the only configured template engine;

  * Doctrine ORM/DBAL is configured;

  * Swiftmailer is configured;

  * Annotations for everything are enabled.

It comes pre-configured with the following bundles:

  * **FrameworkBundle** - The core Symfony framework bundle

  * [**SensioFrameworkExtraBundle**][6] - Adds several enhancements, including
    template and routing annotation capability

  * [**DoctrineBundle**][7] - Adds support for the Doctrine ORM

  * [**TwigBundle**][8] - Adds support for the Twig templating engine

  * [**SecurityBundle**][9] - Adds security by integrating Symfony's security
    component

  * [**SwiftmailerBundle**][10] - Adds support for Swiftmailer, a library for
    sending emails

  * [**MonologBundle**][11] - Adds support for Monolog, a logging library

  * [**AsseticBundle**][12] - Adds support for Assetic, an asset processing
    library

  * **WebProfilerBundle** (in dev/test env) - Adds profiling functionality and
    the web debug toolbar

  * **SensioDistributionBundle** (in dev/test env) - Adds functionality for
    configuring and working with Symfony distributions

  * [**SensioGeneratorBundle**][13] (in dev/test env) - Adds code generation
    capabilities

  * **AcmeDemoBundle** (in dev/test env) - A demo bundle with some example
    code

All libraries and bundles included in the Symfony Standard Edition are
released under the MIT or BSD license.

Enjoy!

[1]: ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eAuLHS
code,"# Nancy.Rest.Client

Dynamic proxy client generation for [Nancy](http://nancyfx.org) using [Nancy.Rest.Module](https://github.com/maxpiva/Nancy.Rest.Module).

## Prerequisites

A server using [Nancy](http://nancyfx.org) & [Nancy.Rest.Module](https://github.com/maxpiva/Nancy.Rest.Module).

It is recommended you read the  [Nancy.Rest.Module](https://github.com/maxpiva/Nancy.Rest.Module) documentation to understand how the server mount the services before continuing reading.

## Installation

* Add [Nancy.Rest.Client](https://github.com/maxpiva/Nancy.Rest.Client) and [Nancy.Rest.Annotations](https://github.com/maxpiva/Nancy.Rest.Annotations) to your client project.

Or 

* Add the Nuget package [Nancy.Rest.Client](https://www.nuget.org/packages/Nancy.Rest.Client/)

Add your server models and interface with the method signatures to use.

## Basic Usage

####Your Server signatures:


```csharp

namespace Nancy.Rest.ExampleServer
{
    [RestBasePath(""/api"")]
    public interface IExample
    {
        [Rest(""Person"", Verbs.Get)]
        List<Person> GetAllPersons();
        
        [Rest(""Person/{personid}"", Verbs.Get)]
        Person GetPerson(int personid);
        
        [Rest(""Person"", Verbs.Post)]
        bool SavePerson(Person person);

        [Rest(""Person/{personid}"", Verbs.Delete)]
        bool DeletePerson(int personid);
    }
}
```

####Your Server Models

```csharp

namespace Nancy.Rest.ExampleServer
{    
    public class Person
    {
        public string FirstName { get; set; }

        public string LastName { get; set; }
        
        [Level(1)]
        public bool IsProgrammer { get; set; }
        
        [Tags(""Attr"")]
        public List<string> Attributes { get; set; }
    }
}

```

#### Your Client

```csharp

namespace Nancy.Rest.ExampleClient
{    
    public class Example
    {
        public void Run()
        {
            IExample server=ClientFactory.Create<IExample>(""http://yourserver/api""); `
        
            List<Person> persons=server.GetPersons();
            
        }
    }
}

```

##Advanced Usage

###Transversal Filtering

[Nancy.Rest.Client](https://github.com/maxpiva/Nancy.Rest.Client) includes this interface.

```csharp

using System.Collections.Generic;

namespace Nancy.Rest.Client.Interfaces
{
    public interface IFilter<T>
    {
        T FilterWithLevel(int level);

        T FilterWithTags(IEnumerable<string> tags);

        T FilterWithLevelAndTags(int level, IEnumerable<string> tags);

    }
}

```

Create a new interface in your client that includes, both, [IFilter](https://github.com/maxpiva/Nancy.Rest.Client/blob/master/Interfaces/IFilter.cs) interface and your server interface.

```csharp

namespace Nancy.Rest.ExampleClient
{    
    public interface IExampleWithFiltering : IExample, IFilter<IExample>
    {
    }
}

```

Then you can use the transversal filtering capabilities of the server like this:


```csharp

namespace Nancy.Rest.ExampleClient
{    
    public class Example
    {
        public void Run()
        {
            IExampleWithFiltering server=ClientFactory.Create<IExampleWithFiltering>(""http://yourserver/api""); `
        
            //Per example, you can ask the server to not serialize any property with level bigger than the number provided.
            //Here we can filter the IsProgrammer property using levels.
            List<Person> persons=server.FilterWithLevel(0).GetPersons();
            //Or remove the Attributes property using Tags.            
            List<Person> persons=server.FilterWithTags(new string[] { ""Attr""}).GetPersons();            
            
        }
    }
}

```

###Controlable deserialization

Imagine you have your poco models from the server, but you need to add some properties, methods or INotifyPropertyChanged to that objects, you create a child class from the model, and add all those things. The problem is, the deserialzer will deserialize your poco model, so you have to create a new child class, and copy all properties to your child. Nancy.Rest.Client have the capability of deserializing the objects to child objects.

####Client model

```csharp

namespace Nancy.Rest.ExampleClient
{    
    public class ClientPerson : Person
    {
        public bool IsSuperman { get; set; }
        
        public void DoSomeNastyThings()
        {
        //Kidding
        }
    }
}

```
####Example

```csharp

namespace Nancy.Rest.ExampleClient
{    
    public class Example
    {
        public void Run()
        {
            Dictionary<Type,Type> mappings=new Dictionary<Type,Type>();
            //Here we add the mapping, we want every person to be deserialized as ClientPerson
            mappings.Add(typeof(Person), typeof(ClientPerson));
            IExample server=ClientFactory.Create<IExample>(""http://yourserver/api"", mappings); `
            //Here is your list of client persons
            List<ClientPerson> persons=server.GetPersons().Cast<ClientPerson>.ToList();
        }
    }
}

```

##WARNING

THIS IS AN BETA VERSION, so far it works on my machine ;)

## TODO

* Fill the blanks :P

## History

**1.4.3-Beta**: ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Azknns
code,"2020-02-24: Development Meeting
===============================
Kacper, Craig, Mike H, Tim, Elias, Mike L, Tommy

Agenda
------
* Updates
* AHM - [name=Kacper]
    * 03/04/2020 10am - 5pm CDT
    * https://illinois.zoom.us/j/583802454
    * for people @ NCSA: we gather in NCSA-2000
    * optionally 04/04/2020 10am - 1pm (tbd)
* THE NEWS
* v0.10 / v1.0 planning? - [name=Craig]
    * v1.0: Tommy / v0.10: Kacper
        * Angular migration (waiting on the rest of us)
        * Versioning (backend close, needs testing; UI partially defined)
        * r2d composability (needs testing)
        * Sharing
    * Current activities: 
        * Prov model
            * What we could get from just reprozip
            * Expansion out from that (~2 months) that could be part of a reproducible run
    * On deck
        * Git integration
        * Dataverse publishing
        * Image preservation
        * Reproducible run
        * MATLAB support (doable now)
        * Stata support
        * Ability to configure resources
        * Associate tale with manuscript
        * Link directly to tales from publication

Updates
-------

* Kacper
    * Related identifiers
        * Tale model update + import [girder_wholetale#391](https://github.com/whole-tale/girder_wholetale/pull/391)
        * Changes to Tale's metadata view [dashboard#595](https://github.com/whole-tale/dashboard/pull/595)
        * Use related identifiers to populate Zenodo's metadata [gwvolman#102](https://github.com/whole-tale/gwvolman/pull/102)
    * Refactored AinWT import jobs - [girder_wholetale#389](https://github.com/whole-tale/girder_wholetale/pull/389)
    * Imported (AinWT) Tales are singletons now [girder_wholetale#396](https://github.com/whole-tale/girder_wholetale/pull/396) 
    * Minor fix to our bag export - [girder_wholetale#395](https://github.com/whole-tale/girder_wholetale/pull/395)
    * Hopefully tag and deploy rc2 today (demo tomorrow)

* Craig
    * PresQT integration testing n
    * PR review and testing
    * Annual report 

* Mike H
    * Continue to work on versioning

* Tim
    * Working on EarthCube proposal for next 2.5 weeks.
    * Implemented the example ""script"" (RMarkdown) for WT-C2Metadata project as a repo that can be run in place with Docker:  https://github.com/tmcphillips/all-harvest-rippo
        * To run from outside a container:
            * git clone
            * git status
            * make clean
            * git status
            * make run
            * git status
        * To run with rstudio running in the container:
            * make rstudio
            * connect to http://localhost:8787
        * Will be dropping in the ReproZip stuff to see what we can see.
            * Will we see downloading of input data sets?

* Tommy
    * Few small fixes to file uploading UI
    * Few small fixes for error messages on various tale creation methods
    * Review
        * Prioritizing PR reviews for RC2
    * Did a some work on a WT screencast/intro video
        * I estimate 2 hours fo work left before it's a complete rough draft

* Elias 
    * Began testing on staging
        * Web UI: Server notification counter shows up on top of logs

* Mike L
    * Reviewed open dashboard PRs from Tommy and Kacper
    * Made a couple of other minor PRs
        * [Update label on Select Data submit button](https://github.com/whole-tale/dashboard/pull/598)
        * [Save filter state on Browse view across refresh / navigation](https://github.com/whole-tale/dashboard/pull/599)
        * [Tale title truncation on Run view](https://github.com/whole-tale/dashboard/pull/600)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Q1uLwQ
code,"#<%= taskname %>
<%= description %>

##Usage",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JtcxVh
code,"---
layout: post
title: ESPN took a picture of me
categories: link
---

Check [this link](http://espn.go.com/college-football/story/_/id/9685394/how-do-nebraska-fans-feel-bo-pelini-recent-behavior) for some story about Bo Pelini's goofing off, and -- look there in the last photo! -- it's some goofball in a Nebraska trilby.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DGAXzo
code,"# infinite zoom plugin

""infinite zoom"" is an jQuery-Plugin that creates a nice foto/image show as background on DOM-containers.

## Features

* applicable to any DOM-container
* adjustable zoom properties
* asynchronous image loading (just loads what's needed)
* rendering with the high-performance CSS3-transitions

## Requirements

* jQuery 1.3 or upwards
* a container which must have
  * a 'overflow:hidden' css style
  * a 'position' css style
  * content with
    * a 'position' css style
    * a 'z-index' css style greater than 0 

## Install

It`s very easy to install:

1. download or clone the current version
2. include the minified version into your code

## Usage

Will coming soon!

## License

See the ""LICENSE"" file in the root of the repo.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UhM7MZ
code,"# Gears #

*Documentation may be outdated or incomplete as some URLs may no longer exist.*

*Warning! This codebase is deprecated and will no longer receive support; excluding critical issues.*

A PHP class that loads template files, binds variables to a single file or globally without the need for custom placeholders/variables, allows for parent-child hierarchy and parses the template structure.

Gear is a play on words for: Engine + Gears + Structure.

* Loads any type of file into the system
* Binds variables to a single file or to all files globally
* Template files DO NOT need custom markup and placeholders for variables
* Can access and use variables in a template just as you would a PHP file
* Allows for parent-child hierarchy
* Parse a parent template to parse all children, and their children, and so on
* Can destroy template indexes on the fly
* No eval() or security flaws
* And much more...

## Introduction ##

Most of the template systems today use a very robust setup where the template files contain no server-side code. Instead they use a system where they use custom variables and markup to get the job done. For example, in your template you may have a variable called {pageTitle} and in your code you assign that variable a value of ""Welcome"". This is all well and good, but to be able to parse this ""system"", it requires loads of regex and matching/replacing/looping which can be quite slow and cumbersome. It also requires you to learn a new markup language, specific for the system you are using. Why would you want to learn a new markup language and structure simply to do an if statement or go through a loop? In Gears, the goal is to remove all that custom code, separate your markup from your code, allow the use of standard PHP functions, loops, statements, etc within templates, and much more!

## Installation ##

Install by manually downloading the library or defining a [Composer dependency](http://getcomposer.org/).

```javascript
{
    ""require"": {
        ""mjohnson/gears"": ""4.0.0""
    }
}
```

Once available, instantiate the class and create template files.

```php
// index.php
$temp = new mjohnson\gears\Gears(dirname(__FILE__) . 'templates/');
$temp->setLayout('layouts/default');

// templates/layouts/default.tpl
<!DOCTYPE html>
<html>
<head>
    <title><?php echo $pageTitle; ?></title>
    <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
</head>
<body>
    <?php echo $this->getContent(); ?>
</body>
</html>
```

Within the code block above I am initiating the class by calling `new mjohnson\gears\Gears($path)` (where `$path` is the path to your templates directory) and storing it within a `$temp` variable. Next I am setting the layout I want to use; a layout is the outer HTML that will wrap the inner content pages. Within a layout you can use `getContent()` which will output the inner HTML wherever you please.

## Binding Variables ##

It's now time to bind data to variables within your templates; to do this we use the `bind()` method. The bind method will take an array of key value pairs, or key value arguments.

```php
$temp->bind(array(
    'pageTitle' => 'Gears - Template Engine',
    'description' => 'A PHP class that loads template files, binds variables, allows for parent-child hierarchy all the while rendering the template structure.'
));
```

The way binding variables works is extremely easy to understand. In the data being binded, the key is the name of the variable within the template, and the value is what the variable will be output. For instance the variable pageTitle (Gears - Template Engine) above will be assigned to the variable `$pageTitle` within the `layouts/default.tpl`.

Variables are binded globally to all templates, includes and the layout.

## Displaying the Templates ##

To render templates, use the `display()` method. The display method takes two arguments, the name of the template you want to display and the key to use for caching.

```php
echo $temp->display('index');
```

The second argument defines the name of the key to use for caching. Generally it will be the same name as the template name, but you do have the option to name it whatever you please.

```php
echo $temp->display('index', 'index');
```

It's also possible to display templates within folders by separating the path with a forward slash.

```php
echo $temp->display('users/login');
```

## Opening a Template ##

To render a template within another template you would use the `open()` method. The `open()` method takes 3 arguments: the path to the template (relative to the templates folder), an array of key value pairs to define as custom scoped variables and an array of cache settings.

```php
echo $this->open('includes/footer', array('date' => date('Y'));
```

By default, includes are not cached but you can enable caching by passing true as the third argument or an array of settings. The viable settings are key and duration, where key is the name of the cached file (usually the path) and duration is the length of the cache.

```php
echo $this->open('includes/footer', array('date' => date('Y')), true);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",N63_8K
code,"^^^^^^^^^^^^^CS171 2015 Homework Assignments
===

Homework assignments for Harvard's [CS171](http://www.cs171.org/2015/index.html) 2015. To receive homework updates on your local machine run:

```
git pull homework master
```

For details on how to submit your work, take a look at [Section 1](https://github.com/CS171/2015-cs171-homework/tree/master/section1).

---

**Name**:Yi Mao 

**Email**:yim833@mail.harvard.edu

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3jheap
code,"---
title: 分享-认同 的魅力
tags:
---
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Avjytw
code,"---
layout: article
title:  ""The Zen of Design Patterns (2nd Edition)""
categories: programing
tags: [java, reading]
toc: false
image:
    teaser: programing/2017-11-05-The-Zen-of-Design-Patterns-(2nd-Edition)/teaser.jpg

date: 2017-11-05
---

让设计模式成为一种习惯

---

## 第一章 单一职责原则

缩略语：

* SRP（Single Responsibility Principle，单一职责模式）
* RBAC（Role-Based Access Control， 基于角色的访问控制）
* BO（Business Object，业务对象），负责用户的属性
* Biz（Business Logic，业务逻辑），负责用户的行为

单一职责原则(SRP)指的是只有一个原因引起类的变更。

具体实践中应保证接口和方法一定做到单一职责，而类尽量做到。

## 第二章 里氏替换原则

缩略语：

* LSP（Liskov Substitution Principle，里氏替换原则）

里氏替换原则(LSP)是指只要父类能出现的地方子类都能出现。

实现里氏替换原则需要做到：

1. 子类必须完全实现父类的方法
2. 子类可以有自己的个性
3. 覆写(Override)或实现父类方法时输入参数可以被放大
4. 覆写(Override)或实现父类方法时输出结果可以被缩小

第三条指的是子类中的方法的前置条件必须与超类中被覆写方法的前置条件相同或更宽松。这是覆写的要求，也是重中之重。否则若方法的输入参数被缩小，则子类在没有覆写父类方法的前提下，子类方法可能被执行了，会引起业务逻辑混乱，歪曲了父类的意图。

注意输入参数不同就不能称为覆写(Override)，加上@Override会出错，应该称为重载(Overload)。

## 第三章 依赖倒置原则

缩略语：

* DIP（Dependence Inversion Principle，依赖倒置原则）
* OOD（Object-Oriented Design，面向对象设计，面向接口编程）
* TDD（Test-Driven Development，测试驱动开发）

依赖倒置是指面向接口编程(OOD)。依赖正置就是类间的依赖是实实在在的实现类间的依赖，也就是面向实现编程。我要开奔驰车就依赖奔驰车。而抽象间的依赖代替了人们传统思维的事物间的依赖，“倒置”就是从这里产生的。

实现依赖倒置原则需要做到：

1. 高层模块不应该依赖低层模块，两者都应该依赖其抽象。即类之间不发生直接的依赖关系，其依赖是通过接口或抽象类产生的
2. 抽象不应该依赖细节。即接口或抽象类不依赖于实现类
3. 细节应该依赖抽象。即实现类依赖于接口或抽象类

依赖的三种写法：

1. 构造函数传递依赖对象

{% highlight java %}
{% raw %}
Public interface IDriver {
    public void drive();
}
public class Driver implements IDriver {
    private ICar car;
    // 构造函数注入
    public Driver(ICar _car) {
        this.car = _car;
    }
    public void drive() {
        this.car.run();
    }
}
{% endraw %}
{% endhighlight %}

2. Setter方法传递依赖对象

{% highlight java %}
{% raw %}
public interface IDriver {
    public void setCar(Icar car);
    public void drive();
}
public class Driver implements IDriver {
    private ICar car;
    // Setter注入
    public void setCar(ICar _car) {
        this.car = _car;
    }
    public void drive() {
        this.car.run();
    }
}
{% endraw %}
{% endhighlight %}

3. 接口声明传递依赖对象，也叫做接口注入。

{% highlight java %}
{% raw %}
public interface IDriver {
    // 接口注入
    public void drive(ICar car);
}
public class Driver implements IDriver {
    public void drive(ICar car) {
        car.run();
    }
}
{% endraw %}
{% endhighlight %}

有依赖关系的不同开发人员，如甲负责IDriver，乙负责ICar，则两个开发人员只要定好接口就可以独立开发，并可以独立进行单元测试。这也就是测试驱动开发(TDD)，是依赖倒置原则的最高级应用。比如可以引入JMock工具，根据抽象虚拟一个对象进行测试。

{% highlight java %}
{% raw %}
Public class DriverTest extends TestCase {
    Mockery context = new JUnit4Mockery();
    @Test
    public void testDriver() {
        // 根据接口虚拟一个对象
        final ICar car = context.mock(ICar.class);
        IDriver driver = new Driver();
        // 内部类
        context.checking(new Expectations(){{
            oneOf(car).run();
        }});
        driver.drive(car);
    }

}
{% endraw %}
{% endhighlight %}

具体实践中，实现依赖倒置需要遵守：

1. 每个类尽量都有接口或抽象类，或者二者兼备
2. 变量的表面类型尽量是接口或抽象类，工具类和需要使用clone方法的类除外
3. 任何类都不应该从具体类派生
4. 尽量不要覆写基类的方法。如果基类是抽象类，且该方法已经实现，则子类尽量不要覆写
5. 综合里氏替换原则

## 第四章 接口隔离原则

缩略语

* ISP（Interface Segregation Principle，接口隔离原则）

接口隔离原则指的是类间的依赖关系应该建立在最小的接口上。即接口尽量细化，同时接口中的方法尽量少。

这与单一职责原则的审视角度是不同的，单一职责原则是业务逻辑的划分，而接口隔离原则要求接口的方法尽量少。提供几个模块就应该有几个接口，而不是建立一个庞大臃肿的接口容纳所有的客户端访问。注意，根据接口隔离原则拆分接口时，必须满足单一职责原则。

## 第五章 迪米特原则

缩略语：

* LoD（Law of Demeter，迪米特原则），也称为LKP（Least Knowledge Principle，最少知识原则）
* RMI（Remote Method Invocation，远程方法调用）
* VO（Value Object，值对象）

迪米特原则指的是一个类应该对自己需要耦合或调用的类知道的最少，不关心其内部的具体实现，只关心提供的public方法。即类间解耦，弱耦合。

迪米特原则要求：

1. 只与直接的朋友通信。出现在成员变量、方法的输入输出参数中的类称为成员朋友类，而出现在方法体内部的类不属于朋友类。一个方法中尽量不引入一个类中不存在的对象，JDK API提供的类除外
2. 朋友间也是有距离的。尽量不对外公布太多的public方法和非静态的public变量
3. 是自己的就是自己的。如果一个方法放在本类中，既不增加类间关系，对本类也不产生负面影响，那就放置在本类中
4. 谨慎使用Serializable。在一个项目中使用远程方法调用(RMI)，传递一个值对象(VO)，这个对象就必须实现Serializable接口（仅仅是一个标志性接口，不需要实现具体方法），否则就会出现NotSerializableException异常。当客户端VO修改了一个属性的访问权限，由private变更为public，访问权限扩大了，如果服务器上没有做出相应的变更，就会出现序列化失败。当然，这属于项目管理中客户端与服务器同步更新的问题。

在具体实践中，既要做到高内聚低耦合，又要让结构清晰。如果一个类跳转两次以上才能访问另一个类，则需要考虑重构了，这就是过度地解耦了。因为跳转次数越多，系统越复杂，维护就越难。

## 第六章 开闭原则

缩略语：

* OCP（Open Closed Principle，开闭原则）

开闭原则指的是软件实体如类、模块和方法应该对扩展开放，对修改关闭。这是Java世界中最基础的设计原则，以建立一个稳定灵活的系统。也就是说，一个软件实体应该通过扩展来实现变化，而不是通过修改已有的代码来实现变化。并不意味着不做任何修改，在业务规则改变或低层次模块变更的情况下高层模块必须有部分改变以适应新业务，改变要尽可能地少，防止变化风险的扩散。

一个方法的测试方法一般不少于3种，有业务逻辑测试，边界条件测试，异常测试等。

实现开闭原则需要做到：

1. 抽象约束。在子类中不允许出现接口或抽象类中不存在的public方法；参数类型、引用类型尽量使用接口或抽象类而不是实现类；抽象类尽量保持稳定，一旦确定不允许修改
2. 元数据(metadata)控制模块行为。元数据为描述环境和数据的数据，即配置参数。元数据控制模块行为的极致为控制反转(Inversion of Control)，使用最多的就是Spring容器
3. 制定项目章程。如所有的Bean都自动注入，使用Annotation进行装配，进行扩展时，只用可以只用一个子类，然后由持久层生成对象
4. 封装可能的变化。将相同的变化封装到一个接口或抽象类中；将不同的变化封装到不同的接口或抽象类中

软件设计最大的难题就是应对需求的变化。6大设计原则和23个设计模式都是为了封装未来的变化。

6大设计原则有：

1. Single Responsibility Principle: 单一职责原则
2. Open Closed Principle: 开闭原则
3. Liskov Substitution Principle: 里氏替换原则
4. Law of Demeter: 迪米特原则
5. Interface Segregation Principle: 接口隔离原则
6. Dependence Inversion Principle: 依赖倒置原则

将6个原则的首字母联合起来，就是Solid（稳定的），里氏替换原则和迪米特原则的首字母都是L，只取一个。开闭原则是最基础的原则，是精神口号，其他5大原则是开闭原则的具体解释。

## 第七章 单例模式

单例模式(Singleton Pattern)指的是确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。其实现方式可以分为饿汉式和懒汉式。

![1-singleton](/images/programing/2017-11-05-The-Zen-of-Design-Patterns-(2nd-Edition)/1-singleton.png)

单例模式的",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tKkes_
code,"---
layout: post
title: ""Clean Code: Chapter 5 - Formatting""
date: 2016-03-13
---

Formatting, while not consequential to how the code actually works, does make a huge difference in how future user of the code will be able to navigate and understand what is going on. 

In formatting, particularly, the broken window theory applies. The broken window theory is a social science concept that looks at how a single, small act of neglect can lead to snowballing negative effects. The theory gets its name from the idea that a single neglected broken window in an abandoned building would eventually invite more acts of crime and vandalism. 

This applies to programming because a consistently and cleanly formatted application reinforces the importance of setting positive norms for future results. Lazy formatting, on the other hand, will set a precedent for those who will add to and edit the code down the line.  

There are several aspects that go into a well formatted application. Vertical and horizontal formatting are a couple of considerations to make when considering how your code and files should be organized.

### Vertical Formatting

>Smaller files are usually easier to understand than large files are. 

Vertical formatting points to a file’s overall size with regards to lines of code per file. As a general rule, you don’t want to have files over 500 lines of code, but even smaller files are easier to sort through. 

Beyond just lines of code, however, are vertical context guidelines. Code should be organized in a file in a meaningful way, with larger concepts towards the top, and smaller and smaller details as one descends down the file. Functions that call other functions should appear above the functions which they call. Variables that are used throughout the file should remain at the top of the file, and local variables should appear at the top of the function that is using them. 

With the code organized, you can make other considerations with regards to spacing. 

It is appropriate to use empty lines to separate concepts, such as functions. Within a grouped concept, however, using empty lines can draw out methods, making them more difficult to follow. 

### Horizontal Formatting

Horizontal formatting, on the other hand, deals with the smaller context of single lines. The guideline for how long your lines should be should take into consideration a reader and the required movement it would take to read from left to right. You don’t want the reader to have to scroll to read a full line, nor would you want to have to shrink the font to a tiny size to get a single line effect. Typically 100-120 characters per line are appropriate. 

> We use horizontal white space to associate things that are strongly related and dissassociate things that are more weakly related.

Spacing can have a positive effect on the readability of the code. Consider the following: 

```function area(length,width){
	return (length*width)/2
}```

Sure, the code runs and does what it is supposed to, but a user friendly refactor could be as follows:

```function area(length, width) {
	return (length * width) / 2
}```

Just adding a couple of spaces saves time in allowing yourself to separate the different actions happening in the code. 

As another consideration, it is generally not wise to separate things into a column format, as the eye tends to follow the vertical line of the column, rather than the horizontal line as intended. 

Indentation is another important horizontal formatting concept. Consider the file as an outline and indent as such. The larger concepts such as class or module declaration would appear farthest left, with smaller details within functions and loops being indented the most. This helps readers know where concepts begin and end. 

Paying attention to vertical and horizontal formatting concepts will go a long way in presenting a clean code base that others will want to work with. Keep in mind a goal that you want people to look at your code and think *”wow, this person really cares”*. ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EZiDKA
code,"---
layout: post
title:  Hybrid重构框架
color:  blue
width:   3 
height:  1
category: hybrid
---

#### Hybrid重构框架结构

![""框架结构""]({{""/assets/framework/1.png"" | prepend: site.baseurl }})

框架结构是基于业务模型定制的 分为 【公共模块】  和 【业务模块】




#### 公共模块（Common ） 组成

公共模块  由两部分组成 分别是 【Scss】 和 【Widget】

![""公共模块结构""]({{""/assets/framework/2.png"" | prepend: site.baseurl }})

***
**Scss 放着框架公用代码**

【component】 

*  _button(按钮)

*  _list-item(列表 包括带箭头的)

*  _name-gender(性别样式  主要用在理财师业务模块中)

*  _notice-bar(小黄条)

*  _value(代表收益涨、跌的公共色值类)


【mixins】 

*  _border-line(兼容ios9 和 Android 关于1px显示的粗细问题 现已统一采用1px/*no*/)

*  _button(按钮 + 状态)

*  _clearfix(清除浮动)

*  _cus-font-height(自定义字号 高度 和button 合作用的)

*  _ellipse(省略号缩写)

*  _list-item(列表样式 供 component里的的list-item调用)

*  _value(涨跌样式 供 component里的的value调用)

*  _way-step-v(类似时间轴一样的 竖列步骤结构)


【themes】 定义了全站通用的颜色值

*  字体

*  基本色  橙色、白色、蓝色

*  蓝色、灰色的灰度级

*  线条色

*  文本色  

*  按钮色

*  收益涨跌色值


【core】是以上通用 样式的集合出口 


***

**Widget 存放框架组件样式代码**

暂时抽出的组件有 

*  animate（动画）

*  banner（广告banner）

*  baseloading（加载样式）

*  fundItem（基金模块）

*  indexCrowdfunding(理财首页的众筹模块)

*  newsItem（发现频道的 新闻模块）

*  prodfixItem （固收页的 产品模块 包括新手 和  加息类产品)

*  slick （轮播组件样式)

*  tab ( tab 导航)

***

#### 业务模块（Pages） 组成

目前业务模块 有众筹、白拿、基金、理财、发现、积分商城、新手引导、邀请、理财师 后续会根据业务内容的增加而变化


![""业务模块""]({{""/assets/framework/3.png"" | prepend: site.baseurl }})",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bjX8hO
code,"---
title: ""Puppet""
description: ""Deregister Sensu clients from the client registry if they no
  longer have an associated Puppet node.""
version: 1.0
weight: 12
---

**ENTERPRISE: Built-in integrations are available for [Sensu Enterprise][1]
users only.**

# Puppet Integration

- [Overview](#overview)
- [Configuration](#configuration)
  - [Example(s)](#examples)
  - [Integration Specification](#integration-specification)
    - [`puppet` attributes](#puppet-attributes)
    - [`ssl` attributes](#ssl-attributes)

## Overview

Deregister Sensu clients from the client registry if they no longer have an
associated [Puppet][2] node. The `puppet` enterprise handler requires access to
a SSL truststore and keystore, containing a valid (and whitelisted) Puppet
certificate, private key, and CA. The local Puppet agent certificate, private
key, and CA can be used.

## Configuration

### Example(s)

The following is an example global configuration for the `puppet` enterprise
handler (integration).

~~~ json
{
  ""puppet"": {
    ""endpoint"": ""https://10.0.1.12:8081/pdb/query/v4/nodes/"",
    ""ssl"": {
      ""keystore_file"": ""/etc/sensu/ssl/puppet/keystore.jks"",
      ""keystore_password"": ""secret"",
      ""truststore_file"": ""/etc/sensu/ssl/puppet/truststore.jks"",
      ""truststore_password"": ""secret""
    },
    ""timeout"": 10
  }
}
~~~

The Puppet enterprise handler is most commonly used as part of the `keepalive`
set handler. For example:

~~~ json
{
  ""handlers"": {
    ""keepalive"": {
      ""type"": ""set"",
      ""handlers"": [
        ""pagerduty"",
        ""puppet""
      ]
    }
  }
}
~~~

When querying PuppetDB for a node, by default, Sensu will use the Sensu client's
name for the Puppet node name. Individual Sensu clients can override the name of
their corresponding Puppet node, using specific client definition attributes.

The following is an example client definition, specifying its Puppet node name.

~~~ json
{
  ""client"": {
    ""name"": ""i-424242"",
    ""address"": ""8.8.8.8"",
    ""subscriptions"": [
      ""production"",
      ""webserver""
    ],
    ""puppet"": {
      ""node_name"": ""webserver01.example.com""
    }
  }
}
~~~

### Integration Specification

_NOTE: the following integration definition attributes may be overwritten by
the corresponding Sensu [client definition `puppet` attributes][3], which are
included in [event data][4]._

#### `puppet` attributes

The following attributes are configured within the `{""puppet"": {} }`
[configuration scope][5].

`endpoint`
: description
  : The PuppetDB API endpoint (URL). If an API path is not specified,
    `/pdb/query/v4/nodes/` will be used.
: required
  : true
: type
  : String
: example
  : ~~~ shell
    ""endpoint"": ""https://10.0.1.12:8081/pdb/query/v4/nodes/""
    ~~~

`ssl`
: description
  : A set of attributes that configure SSL for PuppetDB API queries.
: required
  : true
: type
  : Hash
: example
  : ~~~ shell
    ""ssl"": {}
    ~~~

#### `ssl` attributes

The following attributes are configured within the `{""puppet"": { ""ssl"": {} } }`
[configuration scope][3].

##### EXAMPLE {#ssl-attributes-example}

~~~ json
{
  ""puppet"": {
    ""endpoint"": ""https://10.0.1.12:8081/pdb/query/v4/nodes/"",
    ""..."": ""..."",
    ""ssl"": {
      ""keystore_file"": ""/etc/sensu/ssl/puppet/keystore.jks"",
      ""keystore_password"": ""secret"",
      ""truststore_file"": ""/etc/sensu/ssl/puppet/truststore.jks"",
      ""truststore_password"": ""secret""
    }
  }
}
~~~

##### ATTRIBUTES {#ssl-attributes-specification}

`keystore_file`
: description
  : The file path for the SSL certificate keystore.
: required
  : true
: type
  : String
: example
  : ~~~ shell
    ""keystore_file"": ""/etc/sensu/ssl/puppet/keystore.jks""
    ~~~

`keystore_password`
: description
  : The SSL certificate keystore password.
: required
  : true
: type
  : String
: example
  : ~~~ shell
    ""keystore_password"": ""secret""
    ~~~

`truststore_file`
: description
  : The file path for the SSL certificate truststore.
: required
  : true
: type
  : String
: example
  : ~~~ shell
    ""truststore_file"": ""/etc/sensu/ssl/puppet/truststore.jks""
    ~~~

`truststore_password`
: description
  : The SSL certificate truststore password.
: required
  : true
: type
  : String
: example
  : ~~~ shell
    ""truststore_password"": ""secret""
    ~~~


[?]:  #
[1]:  /enterprise
[2]:  https://puppet.com?ref=sensu-enterprise
[3]:  ../../reference/clients.html#puppet-attributes
[4]:  ../../reference/events.html#event-data
[5]:  ../../reference/configuration.html#configuration-scopes
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FapJI7
code,"---
layout: post
title: ""8퍼센트 플랫폼개발 인턴 후기-마지막""
author: selee
description: 그동안 감사했습니다!
---

<p align=""center"">
   <img src=""/images/internship-4-인터뷰.jpg"" alt=""인턴 동기랑"" width=""500"">
</p>

## <span style=""color:#6741d9"">이벤트 케러셀</span>

남은 기간에는 저번 인턴기에 쓴 이벤트 케러셀/배너 스태프 페이지 만들기 작업을 이어서 계속했다. 관리자 페이지에서 케러셀과 배너를 저장하면 관련 정보를 DB에 저장하는 API와 DB에 저장된 정보를 바탕으로 홈페이지에 케러셀과 배너를 자동으로 띄우는 API를 만들었다. 100% 완성한 게 아니라서 인수인계를 하고 가야 한다는 점이 좀 아쉽다.

<p align=""center"">
   <img src=""/images/internship-4-캐러셀.png"" alt=""케러셀"" width=""300"">
   <img src=""/images/internship-4-배너.png"" alt=""배너"" width=""300"">
</p>

## <span style=""color:#6741d9"">9주가 호로록</span>

처음 인턴기 쓰던 순간이 생각난다. 그때는 2주도 이렇게 안 지나가는데 9주는 어떻게 버티지? 라는 생각을 했다. **근데 놀랍게도 9주가 호로로록 하고 지나가 버렸다 .** 그만큼 에잇퍼센트에서 보낸 인턴 기간이 즐거웠다는 것이고 앞으로도 이 경험은 오랫동안 기억에 남을 거 같다.

### 에잇퍼센트에게 받은 <span style=""color:#6741d9"">가장 큰 선물</span>

인턴으로 오기 전, 학교 시험과 과제로 개발에 신물이 났었다. 그래서 개발 공부를 거의 하지 않았고 그랬기에 초반에 업무를 하면서 꽤 고생했다. 그래도 계속 질문하고 공부하면서 일을 한, 두 개 끝내니 할만하다고 생각했다.

특히, 알림톡을 대량 발송할 수 있는 관리자 페이지를 직접 만들고 바로 마케팅팀분들이 바로 쓰시는 걸 봤을 때는 엄청 뿌듯했다. 내가 개발한 기능이 다른 누군가에게 엄청 도움이 된다는 걸 알 때마다 개발에 대한 재미를 조금씩 되찾았다. 어느새 어떻게 하면 내가 맡은 기능을 구현할 수 있을까를 고민하고 있었고 어느새 출퇴근 길 모르는 부분을 검색하고 공부하고 있었다.

인턴 기간 동안 Django, Vue, 개발 프로세스 등 많은 것을 배웠다. 하지만 무엇보다도 에잇퍼센트에서 가장 크게 얻어가는 것은 개발에 대한 흥미이다. 인턴 끝나고 어떤 내용을 공부하고 어떤 걸 만들어볼지 고민하는 나 자신이 너무 신기하다.

<p align=""center"">
   <img src=""/images/internship-4-칭찬.jpg"" alt=""익명의 칭찬"" width=""500"">
</p>

### <span style=""color:#6741d9"">님과 함께</span>

처음에 사회생활 신생아로서 눈치를 많이 볼 때 빠르게 적응할 수 있었던 가장 큰 이유는 정말 좋은 에잇퍼센트 사람들 덕분이었다. **특히, 온종일 같이 있는 플랫폼개발 팀원분들 만세**

다들 업무로 바쁘실 텐데 물어볼 때마다 친절하게 알려주시고 코드 리뷰도 정성껏 해주시고 먼저 와서 알려주시고 말 걸어주셔서 금방 적응할 수 있었다. 점심시간이나 업무 중간에 나누는 잡담 타임도 너무 재밌었다. 그래서 사실 많은 분이 재택 해서 사무실이 좀 비면 심심했다. 그 정도로 정이 많이 든 거 같다.

<p align=""center"">
   <img src=""/images/internship-4-호성님과.jpg"" alt=""호성님과 마지막"" width=""500"">
</p>

<br>

## <span style=""color:#6741d9"">마지막 에피소드</span>

### 첫 재택근무

인턴 첫 2주를 제외하고 재택근무를 할 수 있었으나, 더 많이 배우고 팀원분들이랑 친해지고 싶어서 항상 사무실로 출근했다. 하지만 한 번도 재택근무 안 하고 가면 아쉬울 거 같아서 처음으로 재택근무를 했다. 잠을 두 시간 더 잘 수 있고, 퇴근하면 바로 집이라는 점은 생각보다 더 많이 행복했다. 

### 당 충전하세요

<p align=""center"">
   <img src=""/images/internship-4-사탕.png"" alt=""사탕"" width=""500"">
</p>

같은 인턴 동기인 미연님의 제안으로 밥도 많이 사주시고 잘 챙겨주신 에잇퍼센트 사람들에게 작은 선물을 드리기로 했다. 밸런타인데이를 기념으로 초콜릿이랑 사탕을 준비해서 사무실 테이블에 두었다. 올리자마자 나랑 미연님 사진 이모티콘이 달리는 게 재밌었다.

<br>

**<span style=""color:#6741d9"">마지막 인턴기 끝!</span>** 그동안 감사했습니다.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7CI4eX
code,"# Basics

Toast is a Rack application that hooks into Ruby on Rails providing a REST
interface for ActiveRecord models. For each model a HTTP interface can
be configured. Using Toast's configuration DSL one declares which of its attributes are
exposed, which are readable and/or writable using white lists.

         Web Service Provider                    Web Service Consumer

           -----------------                      -----------------
           |    Toast      |  <--HTTP/REST-->     | AJAX app,     |
           -----------------                      | mobile app,   |
           |         |     \                      | Java app, etc.|
    ----------- ----------- -----------           -----------------
    | Model A | | Model B | | Model C |
    ----------- ----------- ----------

Toast dispatches any request to the right model class by using naming
conventions. That way a model can be exposed on the web
by a simple configuration file under `config/toast-api/coconut.rb`:

{% highlight ruby %}
expose(Coconut) {
  readables   :color, :weight

  via_get { # for GET /coconut/ID
    allow do |user, coconut, uri_params|
      user.is_admin?
    end
  }

  collection(:all) {
    via_get {  # for GET /coconuts
      allow do |user, coconut, uri_params|
        user.is_admin?
      end
    }
  }
}
{% endhighlight %}

This exposes the model Coconut. Toast would respond like this:

    GET /coconuts
    --> 200 OK
    --> [{""self"":""https://www.example.com/coconuts/1"",""color"":...,""weight"":...},
         {""self"":""https://www.example.com/coconuts/2"",""color"":...,""weight"":...},
         {""self"":""https://www.example.com/coconuts/3"",""color"":...,""weight"":...}]

given there are 3 rows in the table _coconuts_. Note that this request
translates to the ActiveRecord call `Coconut.all`, hence the exposition of the
`all` collection. Each of the URIs in the response will fetch the
respective Coconut instances:

    GET /coconut/2
    --> 200 OK
    --> {""self"":   ""https://www.example.com/coconuts/2"",
         ""color"": ""brown"",
         ""weight"": 2.1}

`color` and `weight` were declared in the `readables` list. That
means these attributes are exposed via GET requests, but not
updatable by PATCH requests. To allow that attributes must be
declared writable:

{% highlight ruby %}
expose(Coconut) {
  readables :color
  writables :weight
}
{% endhighlight %}

POST and DELETE operations must be allowed explicitly:

{% highlight ruby %}
expose(Coconut) {
  readables :color, :weight
  
  via_get { # for GET /coconut/ID
    allow do |user, coconut, uri_params|
      user.is_admin?
    end
  }

  via_delete { # for DELETE /coconut/ID
    allow do |user, coconut, uri_params|
      user.is_admin?
    end
  }

  collection(:all) {
    via_get {  # for GET /coconuts
      allow do |user, coconut, uri_params|
        user.is_admin?
      end
    }

    via_post {  # for POST /coconuts
      allow do |user, coconut, uri_params|
        user.is_admin?
      end
    }
  }
}
{% endhighlight %}

The above permits to POST a new record (== `Coconut.create(...)` and
to DELETE single instances (== `Coconnut.find(id).destroy`):

    POST /coconuts
    <-- {""color"": ""yellow"",
         ""weight"": 42.0}
    --> 201 Created
    --> {""self"":   ""https://www.example.com/coconuts/4"",
         ""color"": ""yellow"",
         ""weight"": 42.0}

    DELETE /coconut/3
    --> 200 OK

Nonetheless exposing associations will render your entire data
model (or parts of it) a complete web-service. Associations will be
represented as URIs via which the associated resource(s) can be fetched:

{% highlight ruby %}
class Coconut < ActiveRecord::Base
  belongs_to :tree
  has_many :consumers
end
{% endhighlight %}

together with `config/toast-api/coconut.rb`:

{% highlight ruby %}
expose(Coconut) {
  readables :color, :weight

  association(:tree) {
    via_get {
      allow do |*args|
        true
      end
    }
  }

  association(:consumers) {
    via_get {
      allow do |user, coconut, uri_params|
        user.role == 'admin'
      end
    }

    via_post {
      allow do |user, coconut, uri_params|
        user.role == 'admin'
      end
    }
  }
}
{% endhighlight %}

    GET /coconut/2
    --> 200 OK
    --> {""self"":       ""https://www.example.com/coconuts/2"",
         ""tree"":      ""https://www.example.com/coconuts/2/tree"",
         ""consumers"": ""https://www.example.com/consumers"",
         ""color"":     ""brown"",
         ""weight"":    2.1}


## Representation

Toast's JSON representation is very minimal. As you can see above it does not have any qualification of the properties. Data and links and even structured property value are possible. There are other standards like [HAL](http://stateless.co/hal_specification.html), [Siren](https://github.com/kevinswiber/siren), [Collection+JSON](http://amundsen.com/media-types/collection/) or [JSON API](http://jsonapi.org) on that matter you may also consider. 

Toast's key ideas and distinguishing features are: Simplicity and Opaque URIs. 

The JSON representation was guided by the idea that any client(/-programmer) must know the representation of each r",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Q6mlyF
code,"Java-essais
===========

JAVA : essais de programmation
1. Déclarations de variables 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TM2_E6
code,"---
layout: post
title:  ""Welcome to Jekyll!""
date: 2015-12-13 00:34:28 -0600
author: kyletaylored
category: jekyll
image: get-started-with-jekyll.png
---
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts ""Hi, #{name}""
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: http://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ukv5Jn
code,"# Acknowledgements
This application makes use of the following third party libraries:

## AFNetworking

Copyright (c) 2011–2016 Alamofire Software Foundation (http://alamofire.org/)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


## AFOAuth2Manager

Copyright (c) 2011-2014 AFNetworking (http://afnetworking.com)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


## AHKActionSheet

Copyright (c) 2014 Arkadiusz Holko <fastred@fastred.org>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.


## APAddressBook

Copyright (c) 2013 Alterplay 

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


## BBBadgeBarButtonItem

The MIT License (MIT)

Copyright (c) 2014 Tanguy Aladenise

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portion",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7SpmPL
code,"---
layout: page
title: Architektur
permalink: ""architecture/de/overview/""
language: de
---

## Übersicht

Eine OneConnexx Installation besteht typischerweise aus den folgenden Komponenten:

![x]({{ site.baseurl }}/assets/content-images/architecture/de/overview.png ""Übersicht"")

Die Datenbank, Alerting-Service und Mail-Server sind dabei optional, aber notwendig wenn die Features «Alarmierung» und «Überwachung» verwendet werden sollen.

In einem Szenario mit mehreren OneConnexx Instanzen, müssen Datenbank, IIS, Alerting-Service und Mail-Server nur einmal vorhanden sein.

## OneConnexx-Service

![x]({{ site.baseurl }}/assets/content-images/architecture/de/oneconnexxservice.png ""OneConnexx-Service"")

Das Herz des OneConnexx ist der OneConnexx-Service. Dieser wird als eigenständiger Windows-Dienst installiert.

Der OneConnexx-Service liest beim Aufstarten die Konfiguration aus einer Konfigurationsdatei und instanziiert die konfigurierten Add-In Instanzen.

Die Ausführung des Services und der Add-In Instanzen werden in einer Logdatei protokolliert. Als Logging Framework wird nLog eingesetzt.

Einzelne Add-Ins protokollieren das Resultat ihrer Ausführung mit einem Eintrag in der Datenbank. Dazu muss für den OneConnexx-Service ein Connection-String konfiguriert sein, und die entsprechende Add-In Instanz muss einer logischen «Schnittstelle» zugeordnet sein.

#### Konfiguration

Welche Add-Ins verwendet werden und wie diese konfiguriert sind, wird aus einer Konfigurationsdatei
(normalerweise Config\oneconnexx.config) gelesen.

Die Konfiguration erfolgt über einer Web-Applikation im Browser. Geänderte Einstellungen werden über
eine .NET Remoting Schnittstelle an den OneConnexx-Service übertragen und von diesem in die Konfigurationsdatei geschrieben.

#### Add-In Typen

OneConnexx unterscheidet zwischen folgenden 2 Typen von Add-Ins:

![x]({{ site.baseurl }}/assets/content-images/architecture/de/eventaddin.png ""Ereignis Add-In"")

Instanzen von **Ereignis Add-Ins** werden beim Start des OneConnexx-Services gestartet und sind so lange aktiv
wie der Service läuft. Sie können Ereignisse auslösen die dann wiederum andere Add-Ins starten. Ein typisches Beispiel
für ein Ereignis Add-In ist ein Web-Service, der beim Start einen Socket öffnet, auf die Verbindung eines Clients wartet,
und ein Ereignis auslöst sobald eine Client-Anfrage erhalten wurde.

![x]({{ site.baseurl }}/assets/content-images/architecture/de/logicaddin.png ""Logik Add-In"")

Instanzen von **Logik Add-Ins** werden durch ein Ereignis aktiviert, erledigen eine bestimmte Aufgabe und sind danach
wieder inaktiv. Ein Beispiel für ein Logik Add-In ist das FileCopy Add-In, welches eine Datei von A nach B kopiert.

#### Add-In Framework

Add-Ins werden mithilfe des Microsoft Managed Extensibility Framework instanziert. Alle verfügbaren Add-Ins
werden aus dem «AddIn» Verzeichnis gelesen und in das «Shadow» Verzeichnis kopiert. Das «Shadow» Verzeichnis
ist nur sichtbar wenn im Windows-Explorer die Option zur anzeige von versteckten Dateien aktiviert ist.

Der OneConnexx-Service lädt die konfigurierten Add-In DLLs aus dem «Shadow» Verzeichnis und überwacht das «AddIn» Verzeichnis auf Änderungen.
Durch diesen Mechanismus ist es möglich einzelne Add-Ins im laufenden Betrieb zu aktualisieren:

* Eine neue DLL wird in das «AddIn» Verzeichnis kopiert.
* Der OneConnexx-Service erkennt die geänderte Datei.
* Bei Ereignis Add-Ins werden alle laufenden Instanzen des entsprechenden Add-Ins  gestoppt.
* Bei Logik Add-Ins wird gewartet bis alle aktiven Instanzen ihre Ausführung abgeschlossen haben.
Die Abarbeitung von Ereignissen wird unterbrochen, so dass keine neuen Instanzen mehr gestartet werden.
* Die geänderten Dateien aus dem «AddIn» Verzeichnis werden ins «Shadow» Verzeichnis kopiert.
* Die zuvor beendeten Instanzen des aktualisierten Logik Add-Ins werden wieder gestartet.

#### Add-In Kommunikation

Add-Ins kommunizieren untereinander über Ereignisse. Jede Add-In Instanz kann ein Ereignis auslösen. Ein Ereignis ist
normalerweise durch den Namen der auslösenden Instanz und optional durch einen Ereignistyp definiert. Ein ""FileCopy"" Add-In
beispielsweise löst für jede kopierte Datei ein Ereignis vom Typ ""Output"" aus, das den Namen der kopierten Datei enthält.
Nachdem alle Dateien kopiert wurden, wird ausserdem ein Ereignis ""Done"" ausgelöst. Heisst die Instanz beispielsweise ""FileCopy_Demo"",
dann heissen die ausgelösten Ereignisse wie folgt:

```
FileCopy_Demo.Output
FileCopy_Demo.Done
```

Instanzen von Logik Add-Ins können dieses Ereignis abonnieren und werden aktiviert, sobald das Ereignis ausgelöst wird.
Treten mehrere Ereignisse auf die eine Add-In Instanz aboniert hat, werden diese der Reihe nach abgearbeitet. Jede Add-In Instanz
hat eine eigene Queue für Ereignisse. Eine parallele Verarbeitung gibt es nur zwischen unterschiedlichen Instanzen.

![x]({{ site.baseurl }}/assets/content-images/architecture/de/eventqueue.png ""Ereignis-Queue"")

## Web-Administration

![x]({{ site.baseurl }}/assets/content-",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wfpLa9
code,"# Strict Mode

To enable strict mode, simply pass in `strict: true` when creating a Vuex store:

```js
const store = createStore({
  // ...
  strict: true
})
```

In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. This ensures that all state mutations can be explicitly tracked by debugging tools.

## Development vs. Production

**Do not enable strict mode when deploying for production!** Strict mode runs a synchronous deep watcher on the state tree for detecting inappropriate mutations, and it can be quite expensive when you make large amount of mutations to the state. Make sure to turn it off in production to avoid the performance cost.

Similar to plugins, we can let the build tools handle that:

```js
const store = createStore({
  // ...
  strict: process.env.NODE_ENV !== 'production'
})
```
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qBiVbh
code,"# Doxx [![Build Status](https://travis-ci.org/FGRibreau/doxx.png)](https://travis-ci.org/FGRibreau/doxx) [![Gittip](http://badgr.co/gittip/fgribreau.png)](https://www.gittip.com/fgribreau/) [![Deps](https://david-dm.org/FGRibreau/doxx.png)](https://david-dm.org/FGRibreau/doxx)

Use [dox](https://github.com/visionmedia/dox) to automatically generate beautiful html documentation. **Doxx is a total refactoring of [dox-foundation](https://github.com/punkave/dox-foundation/)**.

Outputted HTML is by default based on templates and css from [Twitter Bootstrap](twitter.github.com/bootstrap/) and syntax highlighting is done by [Prism.js](http://prismjs.com/).

Doxx was tested with **JavaScript** as well as generated JavaScript from **CoffeeScript**.

## Demo
* [doxx/docs/compile.js](http://fgribreau.github.com/doxx/docs/compile.js.html)
* [doxx/docs/dir.js](http://fgribreau.github.com/doxx/docs/dir.js.html)
* [doxx/docs/parser.js](http://fgribreau.github.com/doxx/docs/parser.js.html)


## Usage

JavaScript JavaDoc style

```javascript
/**
 * Create an array of all the right files in the source dir
 * @param      {String}   source path
 * @param      {Object}   options
 * @param      {Function} callback
 * @jsFiddle   A jsFiddle embed URL
 * @return     {Array} an array of string path
 */
function collectFiles(source, options, callback) {
  ...
}

```

CoffeeScript JavaDoc style

```coffeescript
###*
 * Create an array of all the right files in the source dir
 * @param      {String}   source path
 * @param      {Object}   options
 * @param      {Function} callback
 * @jsFiddle   A jsFiddle embed URL
 * @return     {Array} an array of string path
###
collectFiles = (source, options, callback) ->
  ...

```

## Installation
Install the module with: `npm install doxx -g`

## CLI
```
$ doxx --help

  Usage: doxx [options]

  Options:

    -h, --help                                 output usage information
    -V, --version                              output the version number
    -r, --raw                                  output ""raw"" comments, leaving the markdown intact
    -d, --debug                                output parsed comments for debugging
    -t, --title <string>                       The title for the page produced
    -s, --source <source>                      The folder which should get parsed
    -i, --ignore <directories>                 Comma seperated list of directories to ignore. Default: test,public,static,views,templates
    -T, --target <target>                      The folder which will contain the results. Default: <process.cwd()>/docs
    -e, --target_extension <target_extension>  Target files extension. Default: html
    --template <jade template>                 The jade template file to use

  Examples:

    # parse a whole folder
    $ doxx --source lib --target docs

    # parse a whole folder and use a specific template
    $ doxx --template ./view/myowntpl.jade --source lib --target docs
```

## Contributing
In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).

## Release History
* *0.0.1* - (dox-foundation) Initial release
* *0.2.0* - (dox-foundation) Readable output
* *0.3.0* - (dox-foundation) Support for folder parsing
* *0.4.0* - (dox-foundation) Improved project navigation, major refactor of folder code
* *0.5.0* - Initial release of doxx
* *0.7.0* - Merge pull requests #16 #17 #19 #20
* *0.7.1* - Merge pull request #25 - Add target_extension option
* *0.7.2* - Upgrade dox to ~0.4.4
* *0.7.4* - Merge pull requests #29 #30

## Donate
[Donate Bitcoins](https://coinbase.com/checkouts/fc3041b9d8116e0b98e7d243c4727a30)

## License
Copyright (c) 2013 Francois-Guillaume Ribreau
MIT License
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3asPQK
code,"---
layout: page
title: Guardian Quality Technologies Award Ceremony
date: 2016-05-24
author: Peter Simmons
tags: weekly links, java
status: published
summary: Sed consequat quis sapien eget malesuada. Morbi semper tempor nunc.
banner: images/banner/meeting-01.jpg
booking:
  startDate: 12/25/2019
  endDate: 12/28/2019
  ctyhocn: MSLOHHX
  groupCode: GQTAC
published: true
---
Aliquam bibendum sit amet nibh et feugiat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam feugiat dictum sapien, eget vestibulum mauris tincidunt ut. Quisque suscipit diam vel aliquet suscipit. Donec at sollicitudin orci. Integer est nulla, elementum quis viverra non, semper nec nibh. Mauris pellentesque ligula ac nisl mollis, sit amet semper sapien luctus. Aenean dignissim in lacus sed convallis. Quisque ac dignissim tellus, vel blandit diam. Maecenas consequat ligula ut purus semper, a condimentum tellus volutpat.
Aliquam quis lorem ante. Quisque tempus pretium urna. Proin justo nisi, maximus et velit vitae, dictum pretium dui. Ut ut luctus magna. Phasellus lectus justo, varius sed ultrices nec, malesuada id massa. Mauris nulla justo, finibus commodo lobortis sed, pulvinar id ipsum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla fermentum lobortis arcu, id elementum diam tempor vitae. Aliquam erat volutpat. Nulla lacinia metus sit amet cursus lacinia.

* Suspendisse congue velit sed varius malesuada
* Nulla et ante luctus, sollicitudin justo ullamcorper, aliquet nulla
* Proin tincidunt sem quis venenatis cursus
* Pellentesque a ipsum tincidunt nisi aliquet varius in sit amet metus
* Vestibulum eu ante sit amet lectus vestibulum pretium ut et libero.

Nullam molestie felis quis nunc tincidunt, at vestibulum enim tempus. Vivamus imperdiet nec est non tempor. Curabitur at scelerisque leo. Morbi tempor arcu at ex finibus pulvinar. Curabitur ullamcorper tincidunt hendrerit. Donec quam nibh, viverra non feugiat sit amet, dictum ac libero. Ut dignissim neque sit amet tortor lobortis efficitur. Curabitur id consectetur turpis, quis facilisis augue. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas sit amet rhoncus erat, nec pulvinar metus.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fPYmnq
code,"# ImageHelper

[![Version](https://img.shields.io/cocoapods/v/AFImageHelper.svg?style=flat)](http://cocoapods.org/pods/AFImageHelper)
[![License](https://img.shields.io/cocoapods/l/AFImageHelper.svg?style=flat)](http://cocoapods.org/pods/AFImageHelper)
[![Platform](https://img.shields.io/cocoapods/p/AFImageHelper.svg?style=flat)](http://cocoapods.org/pods/AFImageHelper)
[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)

Image Extensions for Swift 3.0


![Sample Project Screenshot](https://raw.githubusercontent.com/melvitax/AFImageHelper/master/Screenshot.png?raw=true ""Sample Project Screenshot"")

## Usage

To run the example project, clone or download the repo, and run.


## UIImageView Extension


### Image from a URL
```Swift
// Fetches an image from a URL. If caching is set, it will be cached by NSCache for future queries. The cached image is returned if available, otherise the placeholder is set. When the image is returned, the closure gets called.
func imageFromURL(url: String, placeholder: UIImage, fadeIn: Bool = true, closure: ((image: UIImage?)

```

## UIImage Extension

### Colors
```Swift
// Creates an image from a solid color
UIImage(color:UIColor, size:CGSize)

// Creates an image from a gradient color
UIImage(gradientColors:[UIColor], size:CGSize)

// Applies a gradient overlay to an image
func applyGradientColors(gradientColors: [UIColor], blendMode: CGBlendMode) -> UIImage

// Creates an image from a radial gradient
UIImage(startColor: UIColor, endColor: UIColor, radialGradientCenter: CGPoint, radius:Float, size:CGSize)

```

### Text
```Swift
// Creates an image with a string of text
UIImage(text: String, font: UIFont, color: UIColor, backgroundColor: UIColor, size:CGSize, offset: CGPoint)

```

### Screenshot
```Swift
// Creates an image from a UIView
UIImage(fromView view: UIView)

```


### Alpha and Padding
```Swift
// Returns true if the image has an alpha layer
func hasAlpha() -> Bool

// Returns a copy(if needed) of the image with alpha layer
func applyAlpha() -> UIImage?

// Returns a copy of the image with a transparent border of the given size added around its edges
func applyPadding(padding: CGFloat) -> UIImage?

```

### Crop and Resize
```Swift
// Crops an image to a new rect
func crop(bounds: CGRect) -> UIImage?

// Crops an image to a centered square
func cropToSquare() -> UIImage? {

// Resizes an image
func resize(size:CGSize, contentMode: UIImageContentMode = .ScaleToFill) -> UIImage?

```

### Circle and Rounded Corners
```Swift
// Rounds corners of an image
func roundCorners(cornerRadius:CGFloat) -> UIImage?

// Rounds corners of an image with border
func roundCorners(cornerRadius:CGFloat, border:CGFloat, color:UIColor) -> UIImage?

// Rounds corners to a circle
func roundCornersToCircle() -> UIImage?

// Rounds corners to a circle with border
func roundCornersToCircle(border border:CGFloat, color:UIColor) -> UIImage?

```

### Border
```Swift
// Adds a border
func applyBorder(border:CGFloat, color:UIColor) -> UIImage?

```

### Image Effects
```Swift
// Applies a light blur effect to the image
func applyLightEffect() -> UIImage?
// Applies a extra light blur effect to the image
func applyExtraLightEffect() -> UIImage?
// Applies a dark blur effect to the image
func applyDarkEffect() -> UIImage?
// Applies a color tint to an image
func applyTintEffect(tintColor: UIColor) -> UIImage?
// Applies a blur to an image based on the specified radius, tint color saturation and mask image
func applyBlur(blurRadius:CGFloat, tintColor:UIColor?, saturationDeltaFactor:CGFloat, maskImage:UIImage? = nil) -> UIImage?

```

### Screen Density
```Swift
// To create an image that is Retina aware, use the screen scale as a multiplier for your size. You should also use this technique for padding or borders.
let width = 140 * UIScreen.mainScreen().scale
let height = 140 * UIScreen.mainScreen().scale
let image = UIImage(named: ""myImage"")?.resize(CGSize(width: width, height: height))

```
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",T6YoMA
code,"[![Build Status](https://travis-ci.org/practicefusion/ember-background-update.svg)](https://travis-ci.org/practicefusion/ember-background-update)

# Ember-background-updates

This README outlines the details of collaborating on this Ember addon.

## Installation

* `git clone` this repository
* `npm install`
* `bower install`

## Running

* `ember server`
* Visit your app at http://localhost:4200.

## Running Tests

* `npm test` (Runs `ember try:testall` to test your addon against multiple Ember versions)
* `ember test`
* `ember test --server`

## Building

* `ember build`

For more information on using ember-cli, visit [http://www.ember-cli.com/](http://www.ember-cli.com/).
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9cJ8pi
code,"This is an example from `pst-solides3d` documentation.

Compiled example
----------------
![Example](sphere-cylinder.png)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jodFOS
code,"---
layout: page
title: Twoer Summit Electronics Award Ceremony
date: 2016-05-24
author: Hannah Shah
tags: weekly links, java
status: published
summary: Morbi feugiat purus a risus.
banner: images/banner/leisure-02.jpg
booking:
  startDate: 10/11/2017
  endDate: 10/13/2017
  ctyhocn: PHXCNHX
  groupCode: TSEAC
published: true
---
Aliquam posuere ante nec dui pulvinar, eu ultrices turpis feugiat. Nullam quis turpis nisi. Sed auctor purus sit amet orci consectetur consectetur. Ut euismod nec nisi vitae efficitur. Phasellus sit amet ipsum sed libero dapibus egestas. Proin nunc nunc, finibus in accumsan eu, rutrum vitae enim. Sed posuere, purus vel tincidunt faucibus, neque lacus rutrum libero, at tristique leo leo vel lectus. Ut eleifend lobortis libero.

* Mauris et nulla in arcu viverra rhoncus
* Mauris ornare metus in consequat finibus
* Phasellus eget libero euismod, volutpat dolor nec, tincidunt justo.

Morbi eu nulla felis. Donec pretium ex maximus, efficitur lorem non, fringilla metus. Nullam id nulla eleifend, congue velit id, laoreet ante. Donec imperdiet ut orci ullamcorper congue. Sed sed risus urna. Etiam ultrices tortor eget neque vehicula dictum. Sed eu nulla imperdiet massa porttitor malesuada fringilla non enim. Suspendisse potenti. Duis in orci ex. Praesent lectus lorem, posuere ut venenatis a, elementum et ligula.
Sed aliquam erat auctor lacus convallis, et sodales arcu fermentum. Maecenas blandit augue sed quam consectetur, sit amet semper augue pretium. Proin ut tincidunt turpis. Integer est ipsum, pulvinar non tempor eget, maximus non enim. Nullam sollicitudin nisl eu nunc ultrices, et aliquet dolor commodo. Integer imperdiet dignissim accumsan. Nam nisi sapien, volutpat at ante vel, egestas volutpat turpis. Aliquam laoreet quam eget neque lobortis dictum. Nunc at nibh turpis. Fusce ac nisl urna. Morbi congue nisi iaculis lobortis venenatis. Nulla rhoncus faucibus est.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zEKdvU
code,"<?php

namespace  App\Application\Controllers\Traits;

trait HelpersTrait{

    protected function checkIfArray($request){
        return is_array($request) ? $request : [$request];
    }

    protected function createLog($action , $status , $messages = ''){
        $data = [
            'action' => $action,
            'model' => $this->model->getTable(),
            'status' => $status,
            'user_id' => auth()->user()->id,
            'messages' => $messages
        ];
        $this->log->create($data);
    }

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Mw82l4
code,"<h2>Sprzątanie pobojowisk</h2>

<?php

	f('jednostki_miasto');
	$jednostki = jednostki_miasto($gracz);

	if(!empty($_POST['cel']) && !empty($_POST['u'])){
		f('sprzatanie_wyslij');
		echo sprzatanie_wyslij($jednostki,$_POST['cel'],$_POST['u'],$gracz);
		$gracz = gracz($gracz['gracz']);
		f('jednostki_miasto');
		$jednostki = jednostki_miasto($gracz);
	} elseif(!empty($_GET['przerwij'])){
		f('sprzatanie_przerwij');
		echo sprzatanie_przerwij($gracz,$_GET['przerwij']);
		$gracz = gracz($gracz['gracz']);
	}

	if(!empty($jednostki)){
		$razem = 0;
		$echo =""
		<p>
		<br style='clear:both'/>
		<form action ='?a=sprzatanie' method='post'>
		
		<table>
		<tr>
			<td>cel </td>
			<td><input type='text' name='cel' class='input2' value ='"".$_GET['cel'].""'></td>
		</tr>
		"";
		foreach($jednostki as $oddzial){
			if($oddzial['ilosc'] > 0){
				$razem = 1;
				$echo .=""
					<tr>
						<td>"".$oddzial['nazwa']."" ( "".$oddzial['ilosc']."" ) <span style='float:right'> &nbsp;&nbsp;&nbsp;udźwig: "".$oddzial['udzwig'].""</span></td>
						<td> <input type='text' class='input2' name='u["".$oddzial['id'].""]' ></td>
					</tr>
				"";
			}
		}
		$echo .=""
		<tr>
			<th colspan='2'><input type='submit' class='submit' value='wyślij'></th>
		</tr>
		</table>
		</form>
		</p>"";
		if($razem == 0){
			echo ""<p class='error'>Nie posiadasz jednostek</p>"";
		} else {
			echo $echo;
		}
	} else echo ""<p class='error'>Brak jednostek w grze</p>"";

$wyslane = mysql_query(""select * from osadnicy_sprzatanie inner join osadnicy_miasta on do_miasto = miasto where z_miasto = "".$gracz['aktywne_miasto']."" order by koniec asc"");
if(mysql_num_rows($wyslane) > 0){
	echo ""<hr/>Akcje<br/>
	<table>
	<tr>
		<th>cel</th>
		<th></th>
	</tr>
	
	
	"";
	$czas = time();
	while($akcja = mysql_fetch_array($wyslane)){
		$pozostalo = $akcja['koniec'] - $czas;
		if($akcja['status'] == 0){
			$tekst = ""wyprawa kieruje się do miasta <i><b>"".$akcja['nazwa'].""</b></i>"";
			$opcja = ""&nbsp;<a href='?a=sprzatanie&przerwij="".$akcja['id'].""'>X</a>"";
		} else {
			$tekst = ""wyprawa powraca z miasta <i><b>"".$akcja['nazwa'].""</b></i>"";
			$opcja = """";
		}
		echo ""
		<tr align='center'>
			<td>"".$tekst.""</td>
				<td>
			<span id='sp"".$akcja['id'].""'></span>
			<script type='text/javascript'>liczCzas('sp"".$akcja['id'].""',"".$pozostalo."");</script>
			"".$opcja.""
			</td>
		</tr>"";
	}
	echo ""</table>"";
}
?>

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rY33Pq
code,"<?php
namespace Shop\MainBundle\Data;

use Doctrine\Common\Persistence\ObjectRepository;
use Shop\MainBundle\Entity\Settings;

/**
 * Class ShopSettingsResource
 * @package Shop\MainBundle\Data
 */
class ShopSettingsResource {

    /**
     * @var ObjectRepository
     */
    protected $settingsRepository;

    /**
     * @var Settings|null
     */
    protected $settings;

    function __construct(ObjectRepository $settingsRepository)
    {
        $this->settingsRepository = $settingsRepository;
    }

    /**
     * @return null|Settings
     */
    public function getSettings()
    {
        if($this->settings === null){

            $this->settings = $this->settingsRepository->findOneBy(array());

            if (!$this->settings) {

                $this->settings = new Settings();

            }

        }
        return $this->settings;
    }

    /**
     * @param $key
     * @return mixed
     */
    public function get($key){
        return $this->getSettings()->offsetGet($key);
    }

} ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7ZErRT
code,"<?php

namespace Theintz\PhpDaemon\Plugin;

use Theintz\PhpDaemon\Daemon;
use Theintz\PhpDaemon\Exception;
use Theintz\PhpDaemon\IPlugin;
use Theintz\PhpDaemon\Lib\Command;

/**
 * Create a simple socket server.
 * Supply an IP and Port for incoming connections. Add any number of Command objects to parse client input.
 *
 * Used in blocking mode, this can be the backbone of a Daemon based server with a loop_interval set to Null.
 * Alternatively, you could set $blocking = false and use it to interact with a timer-based Daemon application.
 *
 * Can be combined with the Worker API by adding Command objects that call methods attached to a Worker. That would leave
 * the main Application process to handle connections and client input, worker process management, and passing commands
 * between client input to worker calls, and worker return values to client output.
 *
 */
class Server implements IPlugin
{
    const COMMAND_CONNECT       = 'CLIENT_CONNECT';
    const COMMAND_DISCONNECT    = 'CLIENT_DISCONNECT';
    const COMMAND_DESTRUCT      = 'SERVER_DISCONNECT';

    /**
     * @var Daemon
     */
    public $daemon;

    /**
     * The IP Address server will listen on
     * @var string IP
     */
    public $ip;

    /**
     * The Port the server will listen on
     * @var integer
     */
    public $port;

    /**
     * The socket resource
     * @var Resource
     */
    public $socket;

    /**
     * Maximum number of concurrent clients
     * @var int
     */
    public $max_clients = 10;

    /**
     * Maximum bytes read from a given client connection at a time
     * @var int
     */
    public $max_read = 1024;

    /**
     * Array of stdClass client structs.
     * @var stdClass[]
     */
    public $clients = array();

    /**
     * Is this a Blocking server or a Polling server? When in blocking mode, the server will
     * wait for connections & commands indefinitely. When polling, it will look for any connections or commands awaiting
     * a response and return immediately if there aren't any.
     * @var bool
     */
    public $blocking = false;

    /**
     * Write verbose logging to the application log when true.
     * @var bool
     */
    public $debug = true;

    /**
     * Array of Command objects to match input against.
     * Note: In addition to input rec'd from the client, the server will emit the following commands when appropriate:
     * CLIENT_CONNECT(stdClass Client)
     * CLIENT_DISCONNECT(stdClass Client)
     * SERVER_DISCONNECT
     *
     * @var Command[]
     */
    private $commands = array();


    public function __construct(Daemon $daemon) {
        $this->daemon = $daemon;
    }

    public function __destruct() {
        unset($this->daemon);
    }

    /**
     * Called on Construct or Init
     * @return void
     */
    public function setup() {
        $this->socket = socket_create(AF_INET, SOCK_STREAM, 0);
        if (!socket_bind($this->socket, $this->ip, $this->port)) {
            $errno = socket_last_error();
            $this->error(sprintf('Could not bind to address %s:%s [%s] %s', $this->ip, $this->port, $errno, socket_strerror($errno)));
            throw new Exception('Could not start server.');
        }

        socket_listen($this->socket);
        $this->daemon->on(Daemon::ON_POSTEXECUTE, array($this, 'run'));
    }

    /**
     * Called on Destruct
     * @return void
     */
    public function teardown() {
        foreach(array_keys($this->clients) as $slot)
            $this->disconnect($slot);

        @ socket_shutdown($this->socket, 1);
        usleep(500);
        @ socket_shutdown($this->socket, 0);
        @ socket_close($this->socket);
        $this->socket = null;
    }

    /**
     * This is called during object construction to validate any dependencies
     * NOTE: At a minimum you should ensure that if $errors is not empty that you pass it along as the return value.
     * @return Array  Return array of error messages (Think stuff like ""GD Library Extension Required"" or ""Cannot open /tmp for Writing"") or an empty array
     */
    public function check_environment(array $errors = array()) {
        if (!is_callable('socket_create'))
            $errors[] = 'Socket support is currently unavailable: You must add the php_sockets extension to your php.ini or recompile php with the --enable-sockets option set';

        return $errors;
    }

    /**
     * Add a Command object to the command queue. Input from a client is evaluated against these commands
     * in the order they are added
     *
     * @param Command $command
     */
    public function addCommand(Command $command) {
        $this->commands[] = $command;
        return $this;
    }

    /**
     * An alternative to addCommand - a simple factory for Command objects.
     * @param $regex
     * @param $callable
     */
    public function newCommand($regex, $callable) {
        $cmd = new Command();
        $cmd->regex = $regex;
        $cmd->callable = $callable;
        return $this->addCommand($cmd);
    }

    public function run() {

        // Build an array of sockets and s",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HAuEU2
code,"<?php

namespace MyApplication\Navigation\Navigation;

interface NavigationControlFactory
{
    /**
     * @return NavigationControl
     */
    function create();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pYl-Bv
code,"<?php

namespace Proxies\__CG__\Cabinet\PatientBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Patient extends \Cabinet\PatientBundle\Entity\Patient implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, ""__wakeup"")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier[""id""];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNom($nom)
    {
        $this->__load();
        return parent::setNom($nom);
    }

    public function getNom()
    {
        $this->__load();
        return parent::getNom();
    }

    public function setPrenom($prenom)
    {
        $this->__load();
        return parent::setPrenom($prenom);
    }

    public function getPrenom()
    {
        $this->__load();
        return parent::getPrenom();
    }

    public function setDateNaissance($dateNaissance)
    {
        $this->__load();
        return parent::setDateNaissance($dateNaissance);
    }

    public function getDateNaissance()
    {
        $this->__load();
        return parent::getDateNaissance();
    }

    public function setAdresse($adresse)
    {
        $this->__load();
        return parent::setAdresse($adresse);
    }

    public function getAdresse()
    {
        $this->__load();
        return parent::getAdresse();
    }

    public function setTel($tel)
    {
        $this->__load();
        return parent::setTel($tel);
    }

    public function getTel()
    {
        $this->__load();
        return parent::getTel();
    }

    public function setCin($cin)
    {
        $this->__load();
        return parent::setCin($cin);
    }

    public function getCin()
    {
        $this->__load();
        return parent::getCin();
    }

    public function setMedecin(\Cabinet\UserBundle\Entity\Medecin $medecin = NULL)
    {
        $this->__load();
        return parent::setMedecin($medecin);
    }

    public function getMedecin()
    {
        $this->__load();
        return parent::getMedecin();
    }

    public function setFiche(\Cabinet\PatientBundle\Entity\Fiche $fiche = NULL)
    {
        $this->__load();
        return parent::setFiche($fiche);
    }

    public function getFiche()
    {
        $this->__load();
        return parent::getFiche();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nom', 'prenom', 'dateNaissance', 'adresse', 'tel', 'cin', 'medecin', 'fiche');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5p6g90
code,"<?php
namespace App\Test\Fixture;

use Cake\TestSuite\Fixture\TestFixture;

/**
 * ParametersFixture
 *
 */
class ParametersFixture extends TestFixture
{

    /**
     * Fields
     *
     * @var array
     */
    // @codingStandardsIgnoreStart
    public $fields = [
        'id' => ['type' => 'integer', 'length' => 11, 'unsigned' => false, 'null' => false, 'default' => null, 'comment' => '', 'autoIncrement' => true, 'precision' => null],
        'name' => ['type' => 'string', 'length' => 50, 'null' => false, 'default' => null, 'collate' => 'latin1_spanish_ci', 'comment' => '', 'precision' => null, 'fixed' => null],
        'value' => ['type' => 'text', 'length' => null, 'null' => false, 'default' => null, 'collate' => 'latin1_spanish_ci', 'comment' => '', 'precision' => null],
        '_constraints' => [
            'primary' => ['type' => 'primary', 'columns' => ['id'], 'length' => []],
        ],
        '_options' => [
            'engine' => 'InnoDB',
            'collation' => 'latin1_spanish_ci'
        ],
    ];
    // @codingStandardsIgnoreEnd

    /**
     * Records
     *
     * @var array
     */
    public $records = [
        [
            'id' => 1,
            'name' => 'Lorem ipsum dolor sit amet',
            'value' => 'Lorem ipsum dolor sit amet, aliquet feugiat. Convallis morbi fringilla gravida, phasellus feugiat dapibus velit nunc, pulvinar eget sollicitudin venenatis cum nullam, vivamus ut a sed, mollitia lectus. Nulla vestibulum massa neque ut et, id hendrerit sit, feugiat in taciti enim proin nibh, tempor dignissim, rhoncus duis vestibulum nunc mattis convallis.'
        ],
    ];
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EmrU4D
code,"<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * Class SettingController
 *
 * @author  The scaffold-interface created at 2016-08-25 01:07:35am
 * @link  https://github.com/amranidev/scaffold-interface
 */
class Setting extends Model
{
	
	use SoftDeletes;

	protected $dates = ['deleted_at'];
    protected $table = 'avatars';


	
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",p0wu8T
code,"<?php
//Get Variables
$favuserid = $_POST['userid'];
$ownprofile = $_POST['ownprofile'];
$ownusername = $_POST['ownusername'];

//Connect to mysql database
$connection = mysql_connect(""localhost"", ""6470"", ""6470"") or die(""mySQL Connection Error<br />\n"");
$database='6470_main';
mysql_select_db($database) or die('Error, could not access database '.$database.""\n"");

//Convert username to id
$result = mysql_query(""SELECT * FROM user WHERE username = '$ownusername'"") or die(mysql_error());
$row = mysql_fetch_array($result);
$ownuserid = $row['id'];

//Check useruserfav
$result = mysql_query(""SELECT * FROM useruserfav WHERE (user1id = '$ownuserid' && user2id = '$favuserid')"") or die(mysql_error());
$row = mysql_fetch_array($result);
if($row['id']=='' || $row['id']==null){//Search the other way around
	$result = mysql_query(""SELECT * FROM useruserfav WHERE (user2id = '$ownuserid' && user1id = '$favuserid')"") or die(mysql_error());
	$row = mysql_fetch_array($result);
	if($row['id']=='' || $row['id']==null){//Not friended yet, become a friend
		mysql_query(""INSERT INTO useruserfav
			(user1id, user2id)
			VALUES('$ownuserid','$favuserid')"") or die(mysql_error());
		echo 'You are now friends with this person.  ';
	}else{//Already friended, delete friend
		$id = $row['id'];
		mysql_query(""DELETE FROM useruserfav WHERE id='$id'"") or die(mysql_error());
		echo 'You are no longer friends with this person.';
	}
}else{//Already friended, delete friend
	$id = $row['id'];
	mysql_query(""DELETE FROM useruserfav WHERE id='$id'"") or die(mysql_error());
	echo 'You are no longer friends with this person.';
}
?>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oFLd1u
code,"<?php

namespace proyecto\backendBundle\Entity;


/**
 * Entidad Respuesta
 * @author Javier Burguillo Sánchez
 */
class Respuesta
{
    /**
     * @var integer
     */
    private $id;

    /**
     * @var string
     */
    private $respuesta;

    /**
     * @var \proyecto\backendBundle\Entity\Subpregunta
     */
    private $idSubpregunta;

    /**
     * @var \proyecto\backendBundle\Entity\Participante
     */
    private $idParticipante;


    /**
     * Obtener id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Establecer respuesta
     *
     * @param string 
     * @return Respuesta
     */
    public function setRespuesta($respuesta)
    {
        $this->respuesta = $respuesta;
    
        return $this;
    }

    /**
     * Obtener respuesta
     *
     * @return string 
     */
    public function getRespuesta()
    {
        return $this->respuesta;
    }

    /**
     * Establecer idSubpregunta
     *
     * @param \proyecto\backendBundle\Entity\Subpregunta 
     * @return Respuesta
     */
    public function setIdSubpregunta(\proyecto\backendBundle\Entity\Subpregunta $idSubpregunta = null)
    {
        $this->idSubpregunta = $idSubpregunta;
    
        return $this;
    }

    /**
     * Obtener idSubpregunta
     *
     * @return \proyecto\backendBundle\Entity\Subpregunta 
     */
    public function getIdSubpregunta()
    {
        return $this->idSubpregunta;
    }

    /**
     * Establecer idParticipante
     *
     * @param \proyecto\backendBundle\Entity\Participante 
     * @return Respuesta
     */
    public function setIdParticipante(\proyecto\backendBundle\Entity\Participante $idParticipante = null)
    {
        $this->idParticipante = $idParticipante;
    
        return $this;
    }

    /**
     * Obtener idParticipante
     *
     * @return \proyecto\backendBundle\Entity\Participante 
     */
    public function getIdParticipante()
    {
        return $this->idParticipante;
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1jwVlx
code,"<?php

namespace seregazhuk\tests\Bot\Providers;

use seregazhuk\PinterestBot\Api\Providers\User;
use seregazhuk\PinterestBot\Helpers\UrlBuilder;

/**
 * Class ProfileSettingsTest
 * @method User getProvider()
 */
class ProfileSettingsTest extends ProviderBaseTest
{
    /** @test */
    public function it_retrieves_current_user_sessions_history()
    {
        $provider = $this->getProvider();
        $provider->sessionsHistory();

        $this->assertWasGetRequest(UrlBuilder::RESOURCE_SESSIONS_HISTORY);
    }

    /** @test */
    public function it_returns_list_of_available_locales()
    {
        $provider = $this->getProvider();
        $provider->getLocales();

        $this->assertWasGetRequest(UrlBuilder::RESOURCE_AVAILABLE_LOCALES);
    }

    /** @test */
    public function it_returns_list_of_available_countries()
    {
        $provider = $this->getProvider();
        $provider->getCountries();

        $this->assertWasGetRequest(UrlBuilder::RESOURCE_AVAILABLE_COUNTRIES);
    }

    /** @test */
    public function it_returns_list_of_available_account_types()
    {
        $provider = $this->getProvider();
        $provider->getAccountTypes();

        $this->assertWasGetRequest(UrlBuilder::RESOURCE_AVAILABLE_ACCOUNT_TYPES);
    }

    protected function getProviderClass()
    {
        return User::class;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qlTGFd
code,"<?php

/**
 * This file is part of the Carrot framework.
 * 
 * Copyright (c) 2011 Ricky Christie <seven.rchristie@gmail.com>.
 * 
 * Licensed under the MIT License.
 *
 */

/**
 * Docs storage.
 *
 * Represents a documents storage and provides ways to access
 * the documents inside the storage. This class reads folders and
 * .html files inside a directory and creates a hierarchical docs
 * structure from it.
 * 
 * @author  Ricky Christie <seven.rchristie@gmail.com>
 * @license http://www.opensource.org/licenses/mit-license.php MIT License
 *
 */

namespace Carrot\Docs;

use Exception,
    InvalidArgumentException,
    DirectoryIterator;

class Storage
{
    /**
     * @var string The directory that contains the document files,
     *      without trailing directory separator.
     */
    protected $rootDirectory;
    
    /**
     * Constructor.
     * 
     * If no path was given, the root directory will default to:
     *
     * <code>
     * __DIR__ . DIRECTORY_SEPARATOR . 'Files'
     * </code>
     * 
     * The directory contains documentation files in HTML format and
     * can contain as many folders as you need. You can provide
     * 'section.html' file on each directory to be loaded when that
     * section is requested.
     * 
     * @param string $rootDirectory The directory that contains the
     *        document files.
     *
     */
    public function __construct($rootDirectory = NULL)
    {
        if ($rootDirectory == NULL)
        {
            $rootDirectory = __DIR__ . DIRECTORY_SEPARATOR . 'Files';
        }
        
        $this->setRootDirectory($rootDirectory);
    }
    
    /**
     * Set the directory that contains the document files.
     *
     * @throws InvalidArgumentException If the root directory given
     *         is not a valid path or it's not a directory.
     * @param string $rootDirectory The directory that contains the
     *        document files.
     *
     */
    protected function setRootDirectory($rootDirectory)
    {
        $rootDirectoryAbsolute = realpath($rootDirectory);
        
        if ($rootDirectoryAbsolute == FALSE)
        {
            throw new InvalidArgumentException(""Storage error in instantiation. The given path '{$rootDirectory}' does not exist."");
        }
        
        if (is_dir($rootDirectoryAbsolute) == FALSE)
        {
            throw new InvalidArgumentException(""Storage error in instantiation. The given path '{$rootDirectory}' is not directory."");
        }
        
        $this->rootDirectory = $rootDirectoryAbsolute;
    }
    
    /**
     * Get an instance of page from the given hierarchical path.
     * 
     * The path array contains the hierarchical path to the
     * documentation. The array contains item IDs. Example:
     *
     * <code>
     * $path = array(
     *     '1-introduction',
     *     '1-calculator-tutorial',
     *     '1-creating-your-controller'
     * );
     * </code>
     * 
     * @param array $pagePathArray The hierarchical path to the
     *        documentation page to retrieve.
     * @return Page|FALSE The documentation page, or FALSE if failed.
     *
     */
    public function getPage(array $pagePathArray)
    {   
        if (empty($pagePathArray))
        {
            return $this->getIndexPage();
        }
        
        $pageInfo = $this->getPageInfo($pagePathArray);
        
        if (!is_array($pageInfo))
        {
            return FALSE;
        }
        
        return new Page(
            $pageInfo['title'],
            $pageInfo['content'],
            $pageInfo['parentSections'],
            $pageInfo['navigation']
        );
    }
    
    /**
     * Get the page containing the index to be returned.
     * 
     * Will try to load the contents of the 'section.html' file in
     * the route, if it fails, will simply return an empty body with
     * the root navigation.
     * 
     * @return Page
     *
     */
    public function getIndexPage()
    {
        $parentSections = array();
        $navigation = $this->getNavigationItemsFromDirectory($this->rootDirectory, array());
        $title = '';
        $content = $this->getSectionIndexContent($this->rootDirectory);
        return new Page(
            $title,
            $content,
            $parentSections,
            $navigation
        );
    }
    
    /**
     * Get information about the page from the given hierarchical
     * path.
     * 
     * Assumes the array is not empty. The structure of the array
     * returned is as follows:
     *
     * <code>
     * $pageInfo = array(
     *     'parentSections' => $parentSections,
     *     'navigation' => $navigation,
     *     'title' => $title,
     *     'content' => $content
     * );
     * </code>
     *
     * The array $parentSections contains the page's parent sections.
     * Each section is represented by a {@see NavigationItem}
     * instance:
     *
     * <code>
     * $parentSections = array(
     *     0 => $sectionA,
     *     1 => $sectionB,
     *     2 => $sectionC
     *     ...
     * );
     * </code>
     * 
     * The array $navigation co",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lWibFB
code,"<?php

declare(strict_types=1);

/*
 * This file is part of eelly package.
 *
 * (c) eelly.com
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eelly\SDK\Order\Api;

use Eelly\SDK\Order\Service\OfflineInterface;

/**
 * @author shadonTools<localhost.shell@gmail.com>
 */
class Offline implements OfflineInterface
{
    /**
     * @return self
     */
    public static function getInstance(): self
    {
        static $instance;
        if (null === $instance) {
            $instance = new self();
        }

        return $instance;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mAraEc
code,"<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class MY_Controller extends CI_Controller {

    public function __construct() {
        parent::__construct();
        $this->load->helper('url');
    }

}

class Admin_Controller extends MY_Controller {

    public function __construct() {
        parent::__construct();
        $this->is_logged_in();
    }

    public function is_logged_in() {
            }

}


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vM45Wb
code,"<?php
/**
 * Created by PhpStorm.
 * User: olivier
 * Date: 01/02/15
 * Time: 00:58
 */

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BusinessServiceRepository
 */
class BusinessServiceRepository extends EntityRepository
{
    public function findByRefList(array $refList)
    {

        $qb = $this->createQueryBuilder('s');
        $qb->where($qb->expr()->in('s.ref', $refList));
        return $qb->getQuery()->execute();

    }

    public function findEnabled()
    {
        return $this->findBy(array('enabled' => '1'));
    }

    /**
     * get services enabled only by default or with a suffix if $filterEnabled=false
     * @param bool $filterEnabled
     * @return array
     */
    public function getChoices($filterEnabled = true)
    {

        if ($filterEnabled) {
        }
        $qb = $this->createQueryBuilder('s');
        $qb->select('s.ref, s.name, s.enabled');

        $results = $qb->getQuery()->execute();
        $choices = [];
        foreach ($results as $item) {
            if ($item['enabled'] === true) {
                $choices[$item['ref']] = $item['name'];
            } else {
                if ($filterEnabled === false) {
                    $choices[$item['ref']] = sprintf('%s (désactivé)', $item['name']);
                } else {
                    unset($choices[$item['ref']]);
                }
            }
        }
        return $choices;

    }

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hS8gsh
code,"<?php

/*
 * This file is part of the Schemer package.
 *
 * Copyright © 2013 Erin Millard
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eloquent\Schemer\Constraint;

interface SchemaInterface extends ConstraintInterface
{
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Pv_B_C
code,"<?php

/* SRVDVServerBundle:ChangePassword:changePassword.html.twig */
class __TwigTemplate_e5da0f0553fed635f2774271a2ef3982b389e99e651b1a8527dd0c0b6ca90bd7 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
            'fos_user_content' => array($this, 'block_fos_user_content'),
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $__internal_dba29332523289305b524aa02b65cdc5bbca3fb6efbdc513d345b9889461d749 = $this->env->getExtension(""Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"");
        $__internal_dba29332523289305b524aa02b65cdc5bbca3fb6efbdc513d345b9889461d749->enter($__internal_dba29332523289305b524aa02b65cdc5bbca3fb6efbdc513d345b9889461d749_prof = new Twig_Profiler_Profile($this->getTemplateName(), ""template"", ""SRVDVServerBundle:ChangePassword:changePassword.html.twig""));

        // line 1
        echo ""

"";
        // line 3
        $this->displayBlock('fos_user_content', $context, $blocks);
        
        $__internal_dba29332523289305b524aa02b65cdc5bbca3fb6efbdc513d345b9889461d749->leave($__internal_dba29332523289305b524aa02b65cdc5bbca3fb6efbdc513d345b9889461d749_prof);

    }

    public function block_fos_user_content($context, array $blocks = array())
    {
        $__internal_88a9de92c19248f7d08ce7d00e126ae41ccc9a58d5b4ae6e4fbe4c1d49a1a1db = $this->env->getExtension(""Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"");
        $__internal_88a9de92c19248f7d08ce7d00e126ae41ccc9a58d5b4ae6e4fbe4c1d49a1a1db->enter($__internal_88a9de92c19248f7d08ce7d00e126ae41ccc9a58d5b4ae6e4fbe4c1d49a1a1db_prof = new Twig_Profiler_Profile($this->getTemplateName(), ""block"", ""fos_user_content""));

        // line 4
        echo ""    "";
        $this->loadTemplate(""SRVDVServerBundle:ChangePassword:changePassword_content.html.twig"", ""SRVDVServerBundle:ChangePassword:changePassword.html.twig"", 4)->display($context);
        
        $__internal_88a9de92c19248f7d08ce7d00e126ae41ccc9a58d5b4ae6e4fbe4c1d49a1a1db->leave($__internal_88a9de92c19248f7d08ce7d00e126ae41ccc9a58d5b4ae6e4fbe4c1d49a1a1db_prof);

    }

    public function getTemplateName()
    {
        return ""SRVDVServerBundle:ChangePassword:changePassword.html.twig"";
    }

    public function getDebugInfo()
    {
        return array (  39 => 4,  27 => 3,  23 => 1,);
    }

    /** @deprecated since 1.27 (to be removed in 2.0). Use getSourceContext() instead */
    public function getSource()
    {
        @trigger_error('The '.__METHOD__.' method is deprecated since version 1.27 and will be removed in 2.0. Use getSourceContext() instead.', E_USER_DEPRECATED);

        return $this->getSourceContext()->getCode();
    }

    public function getSourceContext()
    {
        return new Twig_Source(""

{% block fos_user_content %}
    {% include \""SRVDVServerBundle:ChangePassword:changePassword_content.html.twig\"" %}
{% endblock fos_user_content %}
"", ""SRVDVServerBundle:ChangePassword:changePassword.html.twig"", ""C:\\wamp64\\www\\serveurDeVoeux\\src\\SRVDV\\ServerBundle/Resources/views/ChangePassword/changePassword.html.twig"");
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1DZ_Mf
code,"<?php
/* 
Unsafe sample
input : get the field userData from the variable $_GET via an object
Uses a special_chars_filter via filter_var function
construction : use of sprintf via a %s with simple quote
*/



/*Copyright 2015 Bertrand STIVALET 

Permission is hereby granted, without written agreement or royalty fee, to

use, copy, modify, and distribute this software and its documentation for

any purpose, provided that the above copyright notice and the following

three paragraphs appear in all copies of this software.


IN NO EVENT SHALL AUTHORS BE LIABLE TO ANY PARTY FOR DIRECT,

INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE 

USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF AUTHORS HAVE

BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


AUTHORS SPECIFICALLY DISCLAIM ANY WARRANTIES INCLUDING, BUT NOT

LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A

PARTICULAR PURPOSE, AND NON-INFRINGEMENT.


THE SOFTWARE IS PROVIDED ON AN ""AS-IS"" BASIS AND AUTHORS HAVE NO

OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR

MODIFICATIONS.*/


class Input{
  private $input;

  public function getInput(){
    return $this->input;
  }

  public  function __construct(){
   $this->input = $_GET['UserData'] ;
  }
}
$temp = new Input();
$tainted =  $temp->getInput();

$sanitized = filter_var($tainted, FILTER_SANITIZE_SPECIAL_CHARS);
  $tainted = $sanitized ;
      

$query = sprintf(""cat '%s'"", $tainted);

//flaw
$ret = system($query);


?>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eYu6Af
code,"<?php

namespace Matthimatiker\CommandLockingBundle\Locking;

use Symfony\Component\Filesystem\LockHandler;

/**
 * Uses files to create locks.
 *
 * @see \Symfony\Component\Filesystem\LockHandler
 * @see http://symfony.com/doc/current/components/filesystem/lock_handler.html
 */
class FileLockManager implements LockManagerInterface
{
    /**
     * The directory that contains the lock files.
     *
     * @var string
     */
    private $lockDirectory = null;

    /**
     * Contains the locks that are currently active.
     *
     * The name of the lock is used as key.
     *
     * @var array<string, LockHandler>
     */
    private $activeLocksByName = array();

    /**
     * @param string $lockDirectory Path to the directory that contains the locks.
     */
    public function __construct($lockDirectory)
    {
        $this->lockDirectory = $lockDirectory;
    }

    /**
     * Obtains a lock for the provided name.
     *
     * The lock must be released before it can be obtained again.
     *
     * @param string $name
     * @return boolean True if the lock was obtained, false otherwise.
     */
    public function lock($name)
    {
        if ($this->isLocked($name)) {
            return false;
        }
        $lock = new LockHandler($name . '.lock', $this->lockDirectory);
        if ($lock->lock()) {
            // Obtained lock.
            $this->activeLocksByName[$name] = $lock;
            return true;
        }
        return false;
    }

    /**
     * Releases the lock with the provided name.
     *
     * If the lock does not exist, then this method will do nothing.
     *
     * @param string $name
     */
    public function release($name)
    {
        if (!$this->isLocked($name)) {
            return;
        }
        /* @var $lock LockHandler */
        $lock = $this->activeLocksByName[$name];
        $lock->release();
        unset($this->activeLocksByName[$name]);
    }

    /**
     * Checks if a lock with the given name is active.
     *
     * @param string $name
     * @return boolean
     */
    private function isLocked($name)
    {
        return isset($this->activeLocksByName[$name]);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7r94BL
code,"<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class M_slider extends Main_model {

    function __construct() {
        parent::__construct();
        $this->table = array(
            'name'  => 'tbl_slider',
            'coloumn'               => array(
                    'slider_id'   => array('id'=>'slider_id', 'label'=>'ID', 'idkey'=>true, 'visible'=>false, 'field_visible'=>true, 'format'=>'HIDDEN'),
                    'slider_name'      => array('id'=>'slider_name', 'label'=>'Slider Name', 'idkey'=>false, 'visible'=>true, 'field_visible'=>true,  'format'=>'TEXT'),
                    'slider_publish'      => array('id'=>'slider_publish', 'label'=>'Date Publish', 'idkey'=>false, 'visible'=>true, 'field_visible'=>true,  'format'=>'TEXT'),
                    'slider_expire'      => array('id'=>'slider_expire', 'label'=>'Date Expired', 'idkey'=>false, 'visible'=>true, 'field_visible'=>true,  'format'=>'TEXT'),
                    'slider_images'      => array('id'=>'slider_images', 'label'=>'Image', 'idkey'=>false, 'visible'=>false, 'field_visible'=>true,  'format'=>'FILE'),
            ), 
            'join'  =>array(
                
            ),    
            'where'         => array(),
            'keys'          => 'slider_id',
            'option_name'   => ''
        );                
    }
    
    function fields()
    {
        $data = array();
        return $data;
    }
    
    
    function getlist($params)
    {
        
        $list = $this->getListData($params);
        $nomor = $params['start'];
        $data['records'] = array();
        foreach($list['records']->result() as $row):
            $actions = '';
            $actions .= '<a data-id=""'.$row->slider_id.'"" data-target=""form_modal_slider"" data-toggle=""modal"" class=""btn btn-xs btn-success btn-editable""><i class=""glyphicon glyphicon-edit""></i>Ubah</a>';
            $actions .= '<a data-id=""'.$row->slider_id.'"" class=""btn btn-xs btn-danger btn-removable""><i class=""glyphicon glyphicon-trash""></i>Hapus</a>';
            
            $data['records'][] = array(
                $nomor+1,
                $row->slider_name,
                $row->slider_publish,
                $row->slider_expire,
                $actions
            );
            $nomor++;
        endforeach;
        $data['total']  = $list['total'];
        $data['total_filter']  = $list['total_filter'];
        
        return $data;
    }
    
}  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P_NBc8
code,"<?php

defined(""_VALID_ACCESS"") || die('Direct access forbidden');

$recordsets = Utils_RecordBrowserCommon::list_installed_recordsets();
$checkpoint = Patch::checkpoint('recordset');
$processed = $checkpoint->get('processed', array());
foreach ($recordsets as $tab => $caption) {
    if (isset($processed[$tab])) {
        continue;
    }
    $processed[$tab] = true;
    Patch::require_time(3);
    $tab = $tab . ""_field"";
    $columns = DB::MetaColumnNames($tab);
    if (!isset($columns['HELP'])) {
        PatchUtil::db_add_column($tab, 'help', 'X');
    }
    $checkpoint->set('processed', $processed);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TJsSaI
code,"<?php

namespace RectorPrefix20210615;

if (\class_exists('t3lib_collection_StaticRecordCollection')) {
    return;
}
class t3lib_collection_StaticRecordCollection
{
}
\class_alias('t3lib_collection_StaticRecordCollection', 't3lib_collection_StaticRecordCollection', \false);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8bVtM4
code,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <title>First Steps Into PHP</title>

</head>
<body>
    <form>
        X: <input type=""text"" name=""num1"" />
		Y: <input type=""text"" name=""num2"" />
        Z: <input type=""text"" name=""num3"" />
		<input type=""submit"" />
    </form>
    <?php
    if (!isset($_GET['num1']) || !isset($_GET['num2']) || !isset($_GET['num3'])){
        exit(1);
    }
    $numbers = [$_GET['num1'], $_GET['num2'], $_GET['num3']];
    $numbers = array_map('intval',$numbers);
    if (in_array(0, $numbers)){
        echo ""Positive"";
        exit(0);
    }
    $numbers = array_filter($numbers,function ($num){
        return $num<0;
    });
    $negativeNumbersCount = count($numbers);
    $isPositive = $negativeNumbersCount%2==0;
    if ($isPositive){
        echo ""Positive"";
    }
    else{
        echo ""Negative"";
    }
    ?>
</body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fzdSW0
code,"<?php
include __DIR__.'/../lib/SALT.php';

/** An example of using the SALT Secure Storage API to store then use a stored Credit Card */

use \SALT\Merchant;
use \SALT\HttpsCreditCardService;
use \SALT\CreditCard;
use \SALT\PaymentProfile;

// connection parameters to the gateway
$url = 'https://test.salt.com/gateway/creditcard/processor.do';
//$merchant = new Merchant ('Your Merchant ID', 'Your API Token');
$merchant = new Merchant ( VALID_MERCHANT_ID, VALID_API_TOKEN );
$service = new HttpsCreditCardService( $merchant, $url );

// credit card info from customer - to be stored
$creditCard = new CreditCard( '4242424242424242', '1010', null, '123 Street', 'A1B23C' );

// payment profile to be stored (just using the card component in this example)
$paymentProfile = new PaymentProfile( $creditCard, null );

// store data under the token 'my-token-001'
//$storageToken = 'my-token-'.date('Ymd');
$storageToken = uniqid();
$storageReceipt = $service->addToStorage( $storageToken, $paymentProfile );



if ( $storageReceipt->approved ) {
    echo ""Credit card storage approved.\n"";
    $purchaseOrderId = uniqid();
    echo ""Creating Single purchase with Order ID $purchaseOrderId\n"";
    $singlePurchaseReceipt = $service->singlePurchase( $purchaseOrderId, $storageToken, '100', null );

    // optional array dump of response params
    // print_r($receipt->params);

    if ( $singlePurchaseReceipt->approved ) {
        //Store the transaction id.
        echo ""Single Purchase Receipt approved\n"";
    } else {
        echo ""Single purchase receipt not approved\n"";
    }
} else {
    echo ""Credit card storage not approved.\n"";
}



//Update the credit card stored
$updatedCreditCard = new CreditCard ( '4012888888881881', '1010', null, '1 Market St.', '94105' );
$paymentProfile->creditCard = $updatedCreditCard;

$updatedStorageReceipt = $service->updateStorage($storageToken, $paymentProfile);


if ( $updatedStorageReceipt->approved ) {
    echo ""Updated credit card storage approved.\n"";
} else {
    echo ""Updated credit card storage not approved.\n"";
}

//Query the credit card stored

$queryStorageReceipt = $service->queryStorage($storageToken);
if ( $queryStorageReceipt->approved ) {
    echo ""Secure storage query successful.\n"";
    echo ""Response: \n"";
    print_r($queryStorageReceipt->params);
} else {
    echo ""Secure storage query failed.\n"";
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cx_MsX
code,"<!-- START REVOLUTION SLIDER 5.0 -->
<div id=""slider_container"" class=""rev_slider_wrapper"">
    <div id=""rev-slider"" class=""rev_slider""  data-version=""5.0"">
        <ul>
            <li data-transition=""slideremovedown"">
                <!-- MAIN IMAGE -->
                <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/slider01.jpg""  alt=""""  width=""1920"" height=""600"">
                <!-- LAYER NR. 1 -->
                <div class=""tp-caption captionHeadline3 text-shadow""
                    id=""slide-51-layer-1""
                    data-x=""['left','left','left','left']"" data-hoffset=""['80','80','80','80']""
                    data-y=""['top','top','top','top']"" data-voffset=""['180','180','180','180']""
                    data-width=""504""
                    data-height=""133""
                    data-whitespace=""normal""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-mask_in=""x:0px;y:0px;s:inherit;e:inherit;""
                    data-mask_out=""x:inherit;y:inherit;s:inherit;e:inherit;""
                    data-start=""500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 5; white-space: normal;"">
                    Lulusan dijamin Kerja
                </div>
                <!-- LAYER NR. 2 -->

                <div class=""tp-caption captionButtonlink""
                    id=""slide-400-layer-3""
                    data-x=""['left','left','left','left']"" data-hoffset=""['85','85','85','85']""
                    data-y=""['top','top','top','top']"" data-voffset=""['355','355','355','355']""
                    data-width=""['auto','auto','auto','auto']""
                    data-height=""['auto','auto','auto','auto']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""x:right;s:2000;e:Power4.easeInOut;""
                    data-transform_out=""s:1000;e:Power2.easeInOut;s:1000;e:Power2.easeInOut;""
                    data-start=""700""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;""><a href=""#"" class=""btn btn-primary btn-icon"">Learn more <i class=""fa fa-link""></i></a>
                </div>
              <!--  <div class=""tp-caption""
                    id=""slide-400-layer-4""
                    data-x=""['right','right','right','right']"" data-hoffset=""['200','200','150','200']""
                    data-y=""['bottom','bottom','bottom','bottom']"" data-voffset=""['0','0','0','0']""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-start=""2500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 6; white-space: nowrap;"">
                    <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/workerno1.png"" class=""img-Construction"" width=""400"" alt="""">
                </div> -->
            </li>
            <li data-transition=""slideremovedown"">
                <!-- MAIN IMAGE -->
                <img src=""<?php echo $this->common->theme_link(); ?>img/slider/revolution/slider02.jpg""  alt=""""  width=""1920"" height=""600"">
                <!-- LAYER NR. 1 -->
                <div class=""tp-caption captionHeadline3 text-shadow""
                    id=""slide-51-layer-1""
                    data-x=""['left','left','left','left']"" data-hoffset=""['80','80','80','80']""
                    data-y=""['top','top','top','top']"" data-voffset=""['180','180','180','180']""
                    data-width=""700""
                    data-height=""133""
                    data-whitespace=""normal""
                    data-transform_idle=""o:1;""
                    data-transform_in=""y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;s:1500;e:Power3.easeInOut;""
                    data-transform_out=""y:[100%];s:1000;s:1000;""
                    data-mask_in=""x:0px;y:0px;s:inherit;e:inherit;""
                    data-mask_out=""x:inherit;y:inherit;s:inherit;e:inherit;""
                    data-start=""500""
                    data-splitin=""none""
                    data-splitout=""none""
                    data-responsive_offset=""on""
                    style=""z-index: 5; white-space: normal;"">
                    Fasilitas belajar lengkap
                </div>
                <!-- LAYER NR. 2 -->
                <div class=""tp-caption captionButtonlink""
                    id=""slide-400-layer-3""
                    data-x=""['left','left','left','left']"" data-hoffset=""['85','85','85','85']""
                    data-y=""['top','",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Qwo6wG
code,"<?php

use History\Entities\Models\Company;
use History\Entities\Models\Question;
use History\Entities\Models\Request;
use History\Entities\Models\Threads\Comment;
use History\Entities\Models\Threads\Thread;
use History\Entities\Models\User;
use History\Entities\Models\Vote;
use League\FactoryMuffin\FactoryMuffin;
use League\FactoryMuffin\Faker\Facade;
use League\FactoryMuffin\Faker\Faker;

/* @var FactoryMuffin $fm */
/** @var Faker $faker */
$faker = Facade::instance();

if (!function_exists('random')) {
    /**
     * @param string $class
     *
     * @return Closure
     */
    function random($class)
    {
        if (!$class::count()) {
            return 'factory|'.$class;
        }

        return function () use ($class) {
            return $class::pluck('id')->shuffle()->first();
        };
    }
}

$fm->define(User::class)->setDefinitions([
    'name' => $faker->userName(),
    'full_name' => $faker->name(),
    'email' => $faker->email(),
    'contributions' => $faker->sentence(),
    'company_id' => random(Company::class),
    'no_votes' => $faker->randomNumber(1),
    'yes_votes' => $faker->randomNumber(1),
    'total_votes' => $faker->randomNumber(1),
    'approval' => $faker->randomFloat(null, 0, 1),
    'success' => $faker->randomFloat(null, 0, 1),
    'hivemind' => $faker->randomFloat(null, 0, 1),
    'created_at' => $faker->dateTimeThisYear(),
    'updated_at' => $faker->dateTimeThisYear(),
]);

$fm->define(Request::class)->setDefinitions([
    'name' => $faker->sentence(),
    'contents' => $faker->paragraph(),
    'link' => $faker->url(),
    'condition' => $faker->boolean(2 / 3),
    'approval' => $faker->randomFloat(null, 0, 1),
    'status' => $faker->numberBetween(0, 5),
    'created_at' => $faker->dateTimeThisDecade(),
    'updated_at' => $faker->dateTimeThisDecade(),
])->setCallback(function (Request $request) {
    $users = User::pluck('id')->shuffle()->take(2);
    $request->authors()->sync($users->all());
});

$fm->define(Thread::class)->setDefinitions([
    'name' => $faker->sentence(),
    'user_id' => random(User::class),
    'request_id' => random(Request::class),
    'created_at' => $faker->dateTimeThisDecade(),
    'updated_at' => $faker->dateTimeThisDecade(),
]);

$fm->define(Comment::class)->setDefinitions([
    'name' => $faker->sentence(),
    'contents' => $faker->paragraph(),
    'xref' => $faker->randomNumber(1),
    'created_at' => $faker->dateTimeThisYear(),
    'updated_at' => $faker->dateTimeThisYear(),
    'user_id' => random(User::class),
    'thread_id' => random(Thread::class),
]);

$fm->define(Question::class)->setDefinitions([
    'name' => $faker->sentence(),
    'choices' => ['Yes', 'No'],
    'approval' => $faker->randomFloat(null, 0, 1),
    'passed' => $faker->boolean(),
    'request_id' => random(Request::class),
    'created_at' => $faker->dateTimeThisYear(),
    'updated_at' => $faker->dateTimeThisYear(),
]);

$fm->define(Vote::class)->setDefinitions([
    'choice' => $faker->numberBetween(1, 2),
    'question_id' => random(Question::class),
    'user_id' => random(User::class),
    'created_at' => $faker->dateTimeThisYear(),
    'updated_at' => $faker->dateTimeThisYear(),
]);

$fm->define(Company::class)->setDefinitions([
    'name' => $faker->word(),
    'representation' => $faker->randomNumber(1),
]);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",eWTic0
code,"<?php

namespace ZpgRtf\Tests\Objects;

use PHPUnit\Framework\TestCase;
use ZpgRtf\Objects\EpcRatingsObject;

class EpcRatingsObjectTest extends TestCase
{
    /**
     * @var EpcRatingsObject
     */
    protected $object;

    public function setUp()
    {
        $this->object = new EpcRatingsObject();
    }

    public function testCanInstantiate()
    {
        $this->assertInstanceOf(
            EpcRatingsObject::class,
            $this->object
        );
    }

    public function testCanSetEerCurrentRating()
    {
        $this->assertInstanceOf(
            EpcRatingsObject::class,
            $this->object->setEerCurrentRating(80)
        );

        $this->assertSame(
            80,
            $this->object->getEerCurrentRating()
        );
    }

    public function testCanSetEerPotentialRating()
    {
        $this->assertInstanceOf(
            EpcRatingsObject::class,
            $this->object->setEerPotentialRating(95)
        );

        $this->assertSame(
            95,
            $this->object->getEerPotentialRating()
        );
    }

    public function testCanSetEirCurrentRating()
    {
        $this->assertInstanceOf(
            EpcRatingsObject::class,
            $this->object->setEirCurrentRating(50)
        );

        $this->assertSame(
            50,
            $this->object->getEirCurrentRating()
        );
    }

    public function testCanSetEirPotentialRating()
    {
        $this->assertInstanceOf(
            EpcRatingsObject::class,
            $this->object->setEirPotentialRating(100)
        );

        $this->assertSame(
            100,
            $this->object->getEirPotentialRating()
        );
    }

    public function testCanJsonSerialize()
    {
        $this->assertJson(
            json_encode($this->object)
        );

        $this->assertInstanceOf(
            \JsonSerializable::class,
            $this->object
        );
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Sz8jqG
code,"<?php

require_once (__DIR__ . '/../lib/bootstrap.php');
require_once (__DIR__ . '/lib/TestListener.php');

use PHPUnit\Framework\TestCase;
use Selenide\By, Selenide\Condition, Selenide\Selenide;

class ListenerTest extends TestCase
{

    /**
     * @var Selenide
     */
    protected static $wd = null;
    protected static $timeout = 5;
    /**
     * Url for test page in tests/www/webdrivertest.html
     * @var string
     */
    protected static $testUrl = '/';
    protected static $baseUrl = 'http://127.0.0.1:8000';
    protected static $config = null;

    protected $backupStaticAttributesBlacklist = array(
        'SelenideTest' => array('wd'),
    );


    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass();
        self::$wd = new \Selenide\Selenide();
        self::$wd->configuration()->baseUrl = self::config('selenium/baseUrl');
        self::$wd->configuration()->host = self::config('selenium/host');
        self::$wd->configuration()->port = self::config('selenium/port');
        self::$wd->connect();
        self::$wd->getDriver()->webDriver()->timeout()->implicitWait(1);
        self::$wd->open(self::$testUrl);

        $listener = new TestListener();
        self::$wd->addListener($listener);
    }


    public function setUp()
    {
        parent::setUp();
        self::$wd->getReport()->disable();
        self::$wd->configuration()->timeout = self::$timeout;
        TestListener::clean();
    }


    protected static function config($path)
    {
        if (self::$config === null) {
            $configPath = __DIR__ . '/etc/config.php';
            $devPath = __DIR__ . '/etc/config.dev.php';
            $config = include ($configPath);
            if (file_exists($devPath)) {
                //only top level group replace
                $devCfg = include ($devPath);
                foreach ($devCfg as $name => $opts) {
                    $config[$name] = $opts;
                }
            }
            self::$config = $config;
        }
        $path = explode('/', trim($path, '/'));
        $value = self::$config;
        foreach ($path as $nodeName) {
            $value = $value[$nodeName];
        }
        return $value;
    }


    public function testListener_Click_CallListener()
    {
        $description = __METHOD__;
        self::$wd
            ->description($description)
            ->find(By::withText('textTwo'))
            ->should(Condition::withText(""textTwo""))
            ->shouldNot(Condition::withText(""textOne""))
            ->click();

        $this->assertCount(2, TestListener::$data, 'No data in listener');
        $event = TestListener::$data[1];
        $this->assertArrayHasKey('method', $event, 'No data about method');
        $this->assertArrayHasKey('element', $event, 'No data about element');
        $this->assertArrayHasKey('locator', $event, 'No data about locator');
        $this->assertArrayHasKey('description', $event, 'No data about description');

        $this->assertEquals('beforeClick', $event['method'], 'Must be called Listener::beforeClick');
        $this->assertInstanceOf('Selenide\SelenideElement', $event['element'], 'Element must be is SelenideElement');
        $this->assertGreaterThan(10, strlen($event['locator']), 'Locator too short');
        $this->assertEquals(
            $description, $event['description'], 'Description must equals is selenide->description()'
        );
    }


    public function testListener_SetValue_CallListener()
    {
        $description = __METHOD__;
        $textValue = 'washtub';
        self::$wd
            ->description($description)
            ->find(By::id('e_textarea'))
            ->setValue($textValue);
        $this->assertCount(2, TestListener::$data, 'No data in listener');
        $event = TestListener::$data[1];
        $this->assertArrayHasKey('method', $event, 'No data about method');
        $this->assertArrayHasKey('element', $event, 'No data about element');
        $this->assertArrayHasKey('locator', $event, 'No data about locator');
        $this->assertArrayHasKey('value', $event, 'No data about value');

        $this->assertArrayHasKey('description', $event, 'No data about description');
        $this->assertEquals('beforeSetValue', $event['method'], 'Must be called Listener::beforeClick');
        $this->assertEquals($textValue, $event['value'], 'Bad value of setValue');
        $this->assertInstanceOf('Selenide\SelenideElement', $event['element'], 'Element must be is SelenideElement');
        $this->assertGreaterThan(10, strlen($event['locator']), 'Locator too short');
        $this->assertEquals(
            $description, $event['description'], 'Description must equals is selenide->description()'
        );
    }


    public function testListener_Assert_CallListener()
    {
        $description = __METHOD__;
        self::$wd
            ->description($description)
            ->find(By::withText('textTwo'))
            ->assert(Condition::visible());

        $this->assertCount(2, TestListener::$data, 'No data in listener');
        $event = TestListener::$data[1];",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m8BnOO
code,"<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Queues extends CI_Controller {


    public function __construct()
    {
        parent::__construct();
        date_default_timezone_set('Asia/Kolkata');
        $this->is_logged_in();
       
    }
 
	public function index()
	{	
		$data['pageName']='Queues';
		$data['pageLink']='queues';
		$data['username']=$this->session->userdata('username');
		$this->load->view('header',$data);
		$this->load->view('menu',$data);
		$this->load->view('breadcrump_view',$data);
		$this->load->model('Queue_model');
		$data['queryresult'] = $this->Queue_model->getAllCustomerAppointments();
		$data['checkedin']= array();
		$data['inservice']= array();
		$data['paymentdue']= array();
		$data['complete']= array();
		$data['appointments'] = array();
		foreach ($data['queryresult'] as $row) {
			if($row['maxstatus']!=NULL) {
				if($row['maxstatus'] == 100) {
					array_push($data['checkedin'],$row);
				}
				else if($row['maxstatus'] == 200) {
					array_push($data['inservice'],$row);
				}
				else if($row['maxstatus'] == 300) {
					array_push($data['paymentdue'],$row);
				}
				else if($row['maxstatus'] == 400) {
					array_push($data['complete'],$row);
				}
				else {
					array_push($data['appointments'],$row);
				}
			}
			else {
				array_push($data['appointments'],$row);
			}
		}
		$this->load->view('queues_view',$data);
		$this->load->view('footer',$data);
	}
	
	public function updateAppointments()
	{
		$appntId = $_POST['appointmentId'];
       		$status = $_POST['status'];
		$this->load->model('Queue_model');
		$data  = array(

			'appointment_id' => $appntId , 
			'status' => $status
		);
		$this->Queue_model->updateQueueDetails($data);

		if($status == 100){

			$this->session->set_flashdata('flashSuccess', 'Customer moved to Check-In Q successfully !');
		}
		if($status == 200){

			$this->session->set_flashdata('flashSuccess', 'Customer moved to Service Q successfully !');
		}

		if($status == 300){

			$this->session->set_flashdata('flashSuccess', 'Customer moved to Payment Q successfully !');
		}
		if($status == 400){

			$this->session->set_flashdata('flashSuccess', 'All services done !!!');
		}

		


		
	}

   function is_logged_in(){

        $is_logged_in = $this->session->userdata('is_logged_in');

        if(!isset($is_logged_in) || $is_logged_in!= true){

            redirect ('/login', 'refresh');

        }
    }	


    public function add(){
		$this->_validate();
		$data = array(
			'title' => $this->input->post('customer_name'), 
			'start' => $this->input->post('start_time'),
			'end' => $this->input->post('end_time'),
			'allDay' => 'false',
			);

		$insert = $this->appointments->add_appointments($data);
		$insert2  = $this->queues->add($data);
		echo json_encode(array(""status"" => TRUE));

	}



    private function _validate()
    {
        $data = array();
        $data['error_string'] = array();
        $data['inputerror'] = array();
        $data['status'] = TRUE;
 
 
        if($this->input->post('customer_name') == '')
        {
            $data['inputerror'][] = 'customer_name';
            $data['error_string'][] = 'Customer Name is required';
            $data['status'] = FALSE;
        }
 
        if($this->input->post('start_time') == '')
        {
            $data['inputerror'][] = 'start_time';
            $data['error_string'][] = 'Start Time is required';
            $data['status'] = FALSE;
        }
 
        if($this->input->post('end_time') == '')
        {
            $data['inputerror'][] = 'end_time';
            $data['error_string'][] = 'End Time is required';
            $data['status'] = FALSE;
        }
 
        if($data['status'] === FALSE)
        {
            echo json_encode($data);
            exit();
        }
    }


}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",62LHvw
code,"<?php

namespace Eeemarv\EeemarvBundle\Command;

use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

use MimeMailParser\Parser;
use MimeMailParser\Attachment;



class MailCommand extends ContainerAwareCommand
{
	private $returnErrors = array();
	private $domain = 'localhost';
	
	
    protected function configure()
    {
        $this
            ->setName('eeemarv:mail')
            ->setDescription('pipes mails. use -q option. mailParse php extension has to be enabled.')
            ->addArgument('path', InputArgument::OPTIONAL, 'The path to the email-file.')            
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
		$parser = new Parser();
				
		$path = $input->getArgument('path');
		if ($path){
			$parser->setPath($path);
		} else {
			$parser->setStream(fopen('php://stdin', 'r'));
		}
		
		if ($parser->getHeader('cc')){
			exit;    // feedback error (todo)
		}

		$subject = $parser->getHeader('subject');

		if (!$subject){
			exit;	// feedback error (todo)
		}	

		list($toId, $toDomain) = $this->decompose($parser->getHeader('to'));
		list($fromId, $fromDomain) = $this->decompose($parser->getHeader('from'), $toDomain);
		list($uniqueId, $domain) = $this->decompose($parser->getHeader('message-id'), $toDomain);
		
		$returnPath = $parser->getHeader('return-path');
		
		$body = $parser->getMessageBody('html');
		
		if (!$body){		
			$body = $parser->getMessageBody('text');
			if (!$body){
				exit;
			}
		}
		
		
		
	/*			
		
			
		$attachments = $parser->getAttachments();
		foreach ($attachments as $attachment)
		{
			$filename = $attachment->filename;
			if ($f = fopen($save_dir.$filename, 'w')) 
			{
				while($bytes = $attachment->read()) 
				{
				  fwrite($f, $bytes);
				}
				fclose($f);
			}
		}
		*/
		
		$output->writeln('from id:'.$fromId);
      $output->writeln('to id:'.$toId);
      $output->writeln('subject:'.$subject);
      

      $output->writeln('return-path:'.$returnPath);

      $output->writeln('message-id:'.$uniqueId.'@'.$domain);
            $output->writeln('unique-id:'.$uniqueId);
        $output->writeln('domain:'.$domain); 
        
      $output->writeln('body:'.$body); 
       $output->writeln('html:'.$html);                    
                
    } 

	
	private function decompose($address, $compareDomain = null)
	{
		$addressAry = mailparse_rfc822_parse_addresses($address);
		
		if (!sizeOf($addressAry)){			// missing address
			exit;
		}	
		
		if (sizeOf($addressAry) > 1){			// more than one address  (feedback error - todo )
			exit;							
		}
			
		$address = $addressAry[0]['address'];		

		list($id, $domain) = explode('@', $address);
		
		if (!$id || !$domain || $domain == $compareDomain){
			exit;
		}		
	
		return array($id, $domain);
	}	
	
	   
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yzM__e
code,"<?php while (have_posts()) : the_post(); ?>
  <article <?php post_class(); ?>>

    <div class=""entry-content content-medicina-prepagada"">
    <header class=""menu-med-prep text-center"">

<ul class=""list-inline"">
    <?php $loop = new WP_Query( array( 'post_type' => 'aps', 'order' => 'ASC', 'category_name'=> 'link'));?>

      <?php while ( $loop->have_posts() ) : $loop->the_post(); 
  
      $slug = get_post_field( 'post_name', get_post() );
        ?>
  <li class=""boton-aps""><a href=""<?php the_permalink();?>""><span class=""aps-title-menu text-uppercase texto<?php echo $slug; ?>""><?php the_title(); ?></span></a></li>
  <?php endwhile; wp_reset_query(); ?>
</ul>

    </header>
<?php $slug = get_post_field( 'post_name', get_post() ); ?>
    <div class=""row"">
      <div class=""col-sm-12"">
        <div class=""title-big-aps"">
          <div class=""row"">
            <div class=""col-sm-6"">
              <div class=""aps-text-big"">
                <h2><span class=""titulo-plan-big titulo-aps-big"">Plan </span><span class=""text-uppercase titulo-plan titulo-aps fondo<?php echo $slug; ?>""><?php the_title(); ?></span></h2>
              </div>
            </div>
            <div class=""col-sm-6"">
              <img src=""<?php the_post_thumbnail_url('full'); ?>"" class=""img-responsive"">
            </div>
          </div>
        </div>
        <div class=""wrapper-aps""><?php the_content(); ?></div>


        <div class=""wrapper-botones"">
          
          <?php $id_empresarial=get_category_by_slug( 'empresarial' ); 
          
          $category=get_the_category();
          if ($category[0]->name === 'empresarial') {

            if( get_adjacent_post(true, '', true, 'category') ) { 
              $post_previo=get_adjacent_post(true, '', true, 'category');
                if((in_category('empresarial', $post_previo))){
                  $post_previo_slug=get_post_field( 'post_name', $post_previo );
                  $post_previo_slug=str_replace(""-"", "" "", $post_previo_slug);


                  echo '<div class=""texto-azul pull-left boton-nav"">';
                  previous_post_link('%link', '<span class=""glyphicon glyphicon-chevron-left""></span>'.$post_previo_slug);
                  echo ""</div>"";
                } 
                else { 
                  $first = new WP_Query( array( 'post_type' => 'aps', 'order' => 'DESC', 'category__in'=> $id_empresarial->term_id)); $first->the_post();
                  $post_previo_slug=get_post_field( 'post_name' );
                  $post_previo_slug=str_replace(""-"", "" "", $post_previo_slug);

                  echo '<div class=""texto-azul pull-left boton-nav""><a href=""' . get_permalink() . '""><span class=""glyphicon glyphicon-chevron-left""></span>'.$post_previo_slug.'</a></div>';
                  wp_reset_query();
                };
            }; 
    
            if( get_adjacent_post(true, '', false, 'category') ) { 
              $post_sig=get_adjacent_post(true, '', false, 'category');
              $post_sig_slug=get_post_field( 'post_name', $post_sig );

              echo '<div class=""texto-azul pull-right boton-nav"">';
              next_post_link('%link', $post_sig_slug.'<span class=""glyphicon glyphicon-chevron-right""></span></div>');
            } 
            else { 
              $last = new WP_Query( array( 'post_type' => 'aps', 'order' => 'ASC', 'category__in'=> $id_empresarial->term_id)); $last->the_post();
              $post_sig_slug=get_post_field( 'post_name' );
              $post_sig_slug=str_replace(""-"", "" "", $post_sig_slug);
              // $post_sig_slug=get_post_field( 'post_name', $post_sig );
              echo '<div class=""texto-azul pull-right boton-nav""><a href=""' . get_permalink() . '""><span class=""textobotonnav"">'.$post_sig_slug.'</span><span class=""glyphicon glyphicon-chevron-right""></span></a></div>';
              wp_reset_query();
            };
          }
          else{?>
        <div class=""wrapper-botones text-center"">
          <a href=""#"" class=""boton-med-prep"">Cotización Familiar</a>
          <a href=""#"" class=""boton-med-prep"">Cotizar Empresa</a>
        </div>
            <?php }?>
          </div>
        </div>  
      </div> 
    </div>

    </div>
  </article>
<?php endwhile; ?>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nJreS5
code,"<?php


/**
 *
 * @author thiago
 */
interface ConsoleFactory {
  public function create_console_microsoft();
  public function create_console_sony();
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",r7iQ6I
code,"<?php
/**
 * This file is part of the browscap-json-cache package.
 *
 * (c) Thomas Mueller <mimmi20@live.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types = 1);
namespace Browscap\Cache;

use BrowscapPHP\Cache\BrowscapCacheInterface;
use WurflCache\Adapter\AdapterInterface;

/**
 * a cache proxy to be able to use the cache adapters provided by the WurflCache package
 *
 * @category   Browscap-PHP
 *
 * @copyright  Copyright (c) 1998-2014 Browser Capabilities Project
 *
 * @version    3.0
 *
 * @license    http://www.opensource.org/licenses/MIT MIT License
 *
 * @see       https://github.com/browscap/browscap-php/
 */
final class JsonCache implements BrowscapCacheInterface
{
    /**
     * The cache livetime in seconds.
     *
     * @var int
     */
    public const CACHE_LIVETIME = 315360000; // ~10 years (60 * 60 * 24 * 365 * 10)

    /**
     * Path to the cache directory
     *
     * @var \WurflCache\Adapter\AdapterInterface
     */
    private $cache;

    /**
     * Detected browscap version (read from INI file)
     *
     * @var int
     */
    private $version;

    /**
     * Release date of the Browscap data (read from INI file)
     *
     * @var string
     */
    private $releaseDate;

    /**
     * Type of the Browscap data (read from INI file)
     *
     * @var string
     */
    private $type;

    /**
     * Constructor class, checks for the existence of (and loads) the cache and
     * if needed updated the definitions
     *
     * @param \WurflCache\Adapter\AdapterInterface $adapter
     * @param int                                  $updateInterval
     */
    public function __construct(AdapterInterface $adapter, $updateInterval = self::CACHE_LIVETIME)
    {
        $this->cache = $adapter;
        $this->cache->setExpiration($updateInterval);
    }

    /**
     * Gets the version of the Browscap data
     *
     * @return int|null
     */
    public function getVersion(): ?int
    {
        if (null === $this->version) {
            $success = true;

            $version = $this->getItem('browscap.version', false, $success);

            if (null !== $version && $success) {
                $this->version = (int) $version;
            }
        }

        return $this->version;
    }

    /**
     * Gets the release date of the Browscap data
     *
     * @return string
     */
    public function getReleaseDate(): string
    {
        if (null === $this->releaseDate) {
            $success = true;

            $releaseDate = $this->getItem('browscap.releaseDate', false, $success);

            if (null !== $releaseDate && $success) {
                $this->releaseDate = $releaseDate;
            }
        }

        return $this->releaseDate;
    }

    /**
     * Gets the type of the Browscap data
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        if (null === $this->type) {
            $success = true;

            $type = $this->getItem('browscap.type', false, $success);

            if (null !== $type && $success) {
                $this->type = $type;
            }
        }

        return $this->type;
    }

    /**
     * Get an item.
     *
     * @param string    $cacheId
     * @param bool      $withVersion
     * @param bool|null $success
     *
     * @return mixed Data on success, null on failure
     */
    public function getItem(string $cacheId, bool $withVersion = true, ?bool &$success = null)
    {
        if ($withVersion) {
            $cacheId .= '.' . $this->getVersion();
        }

        if (!$this->cache->hasItem($cacheId)) {
            $success = false;

            return null;
        }

        $success = null;
        $data    = $this->cache->getItem($cacheId, $success);

        if (!$success) {
            $success = false;

            return null;
        }

        if (!property_exists($data, 'content')) {
            $success = false;

            return null;
        }

        $success = true;

        return $data->content;
    }

    /**
     * save the content into an php file
     *
     * @param string $cacheId     The cache id
     * @param mixed  $content     The content to store
     * @param bool   $withVersion
     *
     * @return bool whether the file was correctly written to the disk
     */
    public function setItem(string $cacheId, $content, bool $withVersion = true): bool
    {
        $data = new \stdClass();
        // Get the whole PHP code
        $data->content = $content;

        if ($withVersion) {
            $cacheId .= '.' . $this->getVersion();
        }

        // Save and return
        return $this->cache->setItem($cacheId, $data);
    }

    /**
     * Test if an item exists.
     *
     * @param string $cacheId
     * @param bool   $withVersion
     *
     * @return bool
     */
    public function hasItem(string $cacheId, bool $withVersion = true): bool
    {
        if ($withVersion) {
            $cacheId .= '.' . $this->getVersion();
        }

        return $this->",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DK55iN
code,"<?php

/* TwigBundle:Exception:exception.json.twig */
class __TwigTemplate_8d9b12e119daada0de361618d51aaa01 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        // line 1
        if (isset($context[""exception""])) { $_exception_ = $context[""exception""]; } else { $_exception_ = null; }
        echo twig_jsonencode_filter($this->getAttribute($_exception_, ""toarray""));
        echo ""
"";
    }

    public function getTemplateName()
    {
        return ""TwigBundle:Exception:exception.json.twig"";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  47 => 8,  30 => 4,  27 => 3,  22 => 4,  117 => 22,  112 => 21,  109 => 20,  104 => 19,  96 => 18,  84 => 14,  80 => 12,  68 => 9,  44 => 7,  26 => 4,  23 => 3,  20 => 2,  17 => 1,  92 => 39,  86 => 6,  79 => 40,  57 => 22,  46 => 7,  37 => 8,  33 => 7,  29 => 6,  24 => 4,  19 => 1,  144 => 54,  138 => 50,  130 => 46,  124 => 24,  121 => 41,  115 => 40,  111 => 38,  108 => 37,  99 => 32,  94 => 29,  91 => 17,  88 => 16,  85 => 26,  77 => 39,  74 => 20,  71 => 19,  65 => 16,  62 => 15,  58 => 8,  54 => 11,  51 => 10,  42 => 9,  38 => 8,  35 => 5,  31 => 4,  28 => 3,);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0g2Wn9
code,"<?php

namespace Juice\UploadBundle\Form\Type;


use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class BaseFileType extends AbstractUploadType
{
    public function buildView(FormView $view, FormInterface $form, array $options)
    {
        $this->addVars($view, $options);
    }

    public function getName()
    {
        return 'juice_upload_file_type';
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",z0Xgfc
code,"<div id=""menu-logo-wrapper"" class=""animated slideInDown"">
	
	<div class=""main-menu"">		
		<div class=""pull-left"">
			<div class=""toggle-menu-container"">					
				<div class=""toggle-menu"">
					<a href=""javascript:void(0)""> 
						<span class=""nav-bar""></span> 
						<span class=""nav-bar""></span> 
						<span class=""nav-bar""></span> 
					</a> 
				</div>
			</div>
			<div class=""main-nav-wrapper"">
				<ul class=""main-nav"">
					<li><a href=""<?php echo View::url('/'); ?>#about"">About</a></li>
					<li><a href=""<?php echo View::url('/'); ?>#flavours"">Flavours</a></li>
					<li><a href=""<?php echo View::url('/'); ?>#news"">News</a></li>
					<li><a href=""<?php echo View::url('/'); ?>#locate"">Locate</a></li>
					<li><a href=""<?php echo View::url('/'); ?>#wholesale"">Wholesale</a></li>
				</ul>				
			</div>
		</div>
		<a href=""<?php echo View::url('/'); ?>"" class=""logo pull-right""><img src=""<?= $view->getThemePath() ?>/images/logos/main-logo.png"" alt=""""></a>				
	</div>	

</div>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8e3VQt
code,"<?php
/**
 * Response Already Send Exception
 *
 * @author     Tom Valk <tomvalk@lt-box.info>
 * @copyright  2017 Tom Valk
 */

namespace Arvici\Exception;


class ResponseAlreadySendException extends ArviciException
{
    /**
     * ResponseAlreadySendException constructor.
     * @param string $message
     * @param int $code
     * @param \Exception $previous
     */
    public function __construct($message, $code = 0, \Exception $previous = null)
    {
        parent::__construct($message, $code, $previous);
    }

    public function __toString()
    {
        return __CLASS__ . "": [{$this->code}]: {$this->message}\n"";
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KbW-cS
code,"<html>
<head>
	<title>Progmia | Game | Level Selection</title>
		<link href=""<?php echo base_url(); ?>assets/css/bootstrap.min.css"" rel=""stylesheet"">
	<link rel=""stylesheet"" type=""text/css"" href=""<?php echo base_url(); ?>assets/css/levels.css"">
	<link rel=""stylesheet"" type=""text/css"" href=""<?php echo base_url(); ?>assets/css/stars.css"">
	<script type=""text/javascript"" src=""<?php echo base_url();?>assets/js/jquery-3.2.1.min.js""></script>
	<script type=""text/javascript"" src=""<?php echo base_url();?>assets/js/bootstrap.min.js""""></script>
		<script type=""text/javascript"" src=""<?php echo base_url();?>assets/js/bootstrap.min.js""></script>
	<link rel=""icon"" href=""<?php echo base_url(); ?>assets/images/icon_jFd_icon.ico"">
	<link rel=""stylesheet"" href=""<?php echo base_url(); ?>assets/css/fonts/font-awesome-4.7.0/css/font-awesome.min.css"">
	<script type=""text/javascript"" src=""<?php echo base_url();?>assets/js/drag-on.js""></script>
	
</head>
<body>
	<nav id=""primary-nav"" class=""primary-nav"">
		<div class=""container-fluid"">
			<div class=""row"" style=""display: flex;align-items: center;"">
				
				<div class=""col-md-3 col-lg-3 col-xs-4 col-sm-4"" style=""text-align: center;"">
					<a class=""back"" href=""<?php echo base_url(); ?>Game/MainMenu""><i class=""fa fa-arrow-left""></i></a>
				</div>
				<div class=""col-md-6 col-lg-6 col-xs-4 col-sm-4"">
				</div>
				<div class=""col-md-3 col-lg-3 col-xs-4 col-sm-4"">
					<ul class=""nav-left"">
						<li class=""music-control"">
							<button id=""playpausebtn"" class=""playpausebtn""><i class=""fa fa-music""></i></button>
							<input id=""volumeslider"" class=""volumeslider"" type=""range"" min=""0"" max=""100"" value=""100"" step=""1"">
						</li>
					</ul>
				</div>
			</div>
		</div>
	</nav>
		<script>
			$(document).ready(function(){
				$(""button.playpausebtn"").click(function() {
					if(jQuery('#playpausebtn').hasClass('paused')){
					    $(""button"").removeClass(""paused"");
					}
					else
					{
					    $(this).addClass(""paused"");
					}
				   });

				$(""button#back"").click(function() {

				   });
			});
			var audio, playbtn, mutebtn, seekslider, volumeslider, seeking=false, seekto;
			function initAudioPlayer(){
				audio = new Audio();
				audio.src = ""<?php echo base_url();?>/assets/sounds/bgm/03 Civil (Explore).mp3"";
				audio.loop = true;
				audio.play();
				// Set object references
				playbtn = document.getElementById(""playpausebtn"");
				volumeslider = document.getElementById(""volumeslider"");
				// Add Event Handling
				playbtn.addEventListener(""click"",playPause);
				volumeslider.addEventListener(""mousemove"", setvolume);
				// Functions
					function playPause(){
						if(audio.paused){
						    audio.play();
					    } else {
						    audio.pause();
					    }
					}
					function setvolume(){
					    audio.volume = volumeslider.value / 100;
				    }
				}
			window.addEventListener(""load"", initAudioPlayer);
		</script>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Kh85p4
code,"<?php

use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Config\Loader\LoaderInterface;

class AppKernel extends Kernel
{
    public function registerBundles()
    {
        $bundles = array(
            new Symfony\Bundle\FrameworkBundle\FrameworkBundle(),
            new Symfony\Bundle\SecurityBundle\SecurityBundle(),
            new Symfony\Bundle\TwigBundle\TwigBundle(),
            new Symfony\Bundle\MonologBundle\MonologBundle(),
            new Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle(),
            new Symfony\Bundle\AsseticBundle\AsseticBundle(),
            new Doctrine\Bundle\DoctrineBundle\DoctrineBundle(),
            new Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle(),
            new Tuhn\HelloBundle\TuhnHelloBundle(),
            new Trungnd\StoreBundle\TrungndStoreBundle(),
        );

        if (in_array($this->getEnvironment(), array('dev', 'test'))) {
            $bundles[] = new Acme\DemoBundle\AcmeDemoBundle();
            $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle();
            $bundles[] = new Sensio\Bundle\DistributionBundle\SensioDistributionBundle();
            $bundles[] = new Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle();
        }

        return $bundles;
    }

    public function registerContainerConfiguration(LoaderInterface $loader)
    {
        $loader->load(__DIR__.'/config/config_'.$this->getEnvironment().'.yml');
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ul_2BL
code,"<?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2015, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package    CodeIgniter
 * @author    EllisLab Dev Team
 * @copyright    Copyright (c) 2008 - 2014, EllisLab, Inc. (http://ellislab.com/)
 * @copyright    Copyright (c) 2014 - 2015, British Columbia Institute of Technology (http://bcit.ca/)
 * @license    http://opensource.org/licenses/MIT	MIT License
 * @link    http://codeigniter.com
 * @since    Version 1.0.0
 * @filesource
 */

/*
 *---------------------------------------------------------------
 * APPLICATION ENVIRONMENT
 *---------------------------------------------------------------
 *
 * You can load different configurations depending on your
 * current environment. Setting the environment also influences
 * things like logging and error reporting.
 *
 * This can be set to anything, but default usage is:
 *
 *     development
 *     testing
 *     production
 *
 * NOTE: If you change these, also change the error_reporting() code below
 */
define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');

/*
 *---------------------------------------------------------------
 * ERROR REPORTING
 *---------------------------------------------------------------
 *
 * Different environments will require different levels of error reporting.
 * By default development will show errors but testing and live will hide them.
 */
switch (ENVIRONMENT) {
    case 'development':
        error_reporting(-1);
        ini_set('display_errors', 1);
        break;

    case 'testing':
    case 'production':
        ini_set('display_errors', 0);
        if (version_compare(PHP_VERSION, '5.3', '>=')) {
            error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT & ~E_USER_NOTICE & ~E_USER_DEPRECATED);
        } else {
            error_reporting(E_ALL & ~E_NOTICE & ~E_STRICT & ~E_USER_NOTICE);
        }
        break;

    default:
        header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
        echo 'The application environment is not set correctly.';
        exit(1); // EXIT_ERROR
}

/*
 *---------------------------------------------------------------
 * SYSTEM FOLDER NAME
 *---------------------------------------------------------------
 *
 * This variable must contain the name of your ""system"" folder.
 * Include the path if the folder is not in the same directory
 * as this file.
 */
$system_path = 'system';

/*
 *---------------------------------------------------------------
 * APPLICATION FOLDER NAME
 *---------------------------------------------------------------
 *
 * If you want this front controller to use a different ""application""
 * folder than the default one you can set its name here. The folder
 * can also be renamed or relocated anywhere on your server. If
 * you do, use a full server path. For more info please see the user guide:
 * http://codeigniter.com/user_guide/general/managing_apps.html
 *
 * NO TRAILING SLASH!
 */
$application_folder = 'application';

/*
 *---------------------------------------------------------------
 * VIEW FOLDER NAME
 *---------------------------------------------------------------
 *
 * If you want to move the view folder out of the application
 * folder set the path to the folder here. The folder can be renamed
 * and relocated anywhere on your server. If blank, it will default
 * to the standard location inside your application folder. If you
 * do move this, use the full server path to this folder.
 *
 * NO TRAILING SLASH!
 */
$view_folder = '';

$templates = $view_folder . '/templates/';
/*
 * --------------------------------------------------------------------
 * DEFAULT CONTROLLER
 * --------------------------------------------------------------------
 *
 * Normally you will set your default controller in the routes.php file.
 * You can, however, force a custom routing by hard-coding a
 * specific controller class/funct",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kp3Wa9
code,"<!DOCTYPE html>
<?php
	
	include(""initial-header.php"");
   	include(""config.php"");
   	include('swift/lib/swift_required.php');

   $error = """";

   if($_SERVER[""REQUEST_METHOD""] == ""POST"") {
      // username and password sent from form 

      $db = mysqli_connect(DB_SERVER,DB_USERNAME,DB_PASSWORD,DB_DATABASE);
       
      $myusername = mysqli_real_escape_string($db,$_POST['username']);
      $mypassword = mysqli_real_escape_string($db,$_POST['password']); 
      
      $sql = ""SELECT email_id, Password, salt FROM login WHERE email_id='$myusername' "";
      $result = mysqli_query($db,$sql);
      $row = mysqli_fetch_array($result,MYSQLI_ASSOC);
      
      $count = mysqli_num_rows($result);
    
      // If email ID exists in the login table
		
      if($count == 1) {
        $salt = $row[""salt""];
        $password_hash = $row[""Password""];
        $myhash = hash('sha512', $mypassword . $salt);

        //If the password is correct
        if($password_hash == $myhash){
			$_SESSION['login_user'] = $myusername;
			$random =  rand(100000,999999);
			$sql2 = ""UPDATE login SET otp="". $random ."" WHERE User_id='"". $myusername. ""'"";
			$querry = mysqli_query($db,$sql2);
			
			$to = $myusername;
			$subject = 'Dual Authentication for Gamify';
			$body = 'Greetings. Your one time password is: '.$random;
			$headers = 'From: Gamify <gamify101@gmail.com>' . ""\r\n"" .
				'Reply-To: Gamify <gamify101@gmail.com>' . ""\r\n"" .
				'X-Mailer: PHP/' . phpversion();

			$result = mail($to, $subject, $body, $headers);
			
			header('Location: duo_auth.php'); 
        }
        else{
          $error = ""Your Login Name or Password is invalid"";
        }
      }else {
         $error = ""Your Login Name or Password is invalid"";
      }
   }

   
?>

	<div class=""page-content container"">
		<div class=""row"">
			<div class=""col-md-4 col-md-offset-4"">
				<div class=""login-wrapper"">
			        <div class=""box"">
			            <div class=""content-wrap"">
			                <h6>Sign In</h6>
			                
                            <form action = """" method = ""post"">
                            <div class=""input-group"">
      							<span class=""input-group-addon""><i class=""fa fa-envelope""></i></span>	
			                	<input class=""form-control"" type=""text"" name = ""username"" placeholder=""User Name"" autofocus required>
			                </div>
			                <br>
			                <div class=""input-group"">
      							<span class=""input-group-addon""><i class=""fa fa-key""></i></span>
			                	<input class=""form-control"" type=""password"" name = ""password"" placeholder=""Password"" required>
			                </div>
			         
		                    <div class=""already"">
		                    	<span><?php if (isset($error)) echo $error ?></span>
		                    </div>

			                <div class=""action"">
                                <input type = ""submit"" class=""btn btn-primary btn-block signup""  value = "" Login ""/>
			                </div>
                            </form>
                            <br><br>
                  			<p><h4><a href=""fg_pwd.php"">Forgot Password?</a></h4></p><br>
              		        <h4><p>Don't have an account?<a href=""email_id_verification.php""> Register now!</a></p></h4>
			            
			            </div>
			        </div>
			    </div>
			</div>
			<?php include('initial-footer.php'); ?>		
		</div>
	</div>



    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src=""https://code.jquery.com/jquery.js""></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src=""bootstrap/js/bootstrap.min.js""></script>
    <script src=""js/custom.js""></script>
  </body>
</html>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",anb8ZP
code,"<div class=""container"" >
  <div class=""row page-title"">
    <div class=""col-xs-12 text-center"">
      <span>Consultation</span>
    </div>
  </div>
</div>
<script type=""text/javascript"">
/**
* Created by Kupletsky Sergey on 05.11.14.
*
* Material Design Responsive Table
* Tested on Win8.1 with browsers: Chrome 37, Firefox 32, Opera 25, IE 11, Safari 5.1.7
* You can use this table in Bootstrap (v3) projects. Material Design Responsive Table CSS-style will override basic bootstrap style.
* JS used only for table constructor: you don't need it in your project
*/

$(document).ready(function() {

  var table = $('#table');

  // Table bordered
  $('#table-bordered').change(function() {
    var value = $( this ).val();
    table.removeClass('table-bordered').addClass(value);
  });

  // Table striped
  $('#table-striped').change(function() {
    var value = $( this ).val();
    table.removeClass('table-striped').addClass(value);
  });

  // Table hover
  $('#table-hover').change(function() {
    var value = $( this ).val();
    table.removeClass('table-hover').addClass(value);
  });

  // Table color
  $('#table-color').change(function() {
    var value = $(this).val();
    table.removeClass(/^table-mc-/).addClass(value);
  });
});

// jQuery’s hasClass and removeClass on steroids
// by Nikita Vasilyev
// https://github.com/NV/jquery-regexp-classes
(function(removeClass) {

  jQuery.fn.removeClass = function( value ) {
    if ( value && typeof value.test === ""function"" ) {
      for ( var i = 0, l = this.length; i < l; i++ ) {
        var elem = this[i];
        if ( elem.nodeType === 1 && elem.className ) {
          var classNames = elem.className.split( /\s+/ );

          for ( var n = classNames.length; n--; ) {
            if ( value.test(classNames[n]) ) {
              classNames.splice(n, 1);
            }
          }
          elem.className = jQuery.trim( classNames.join("" "") );
        }
      }
    } else {
      removeClass.call(this, value);
    }
    return this;
  }

})(jQuery.fn.removeClass);
</script>

<style media=""screen"">
/* -- Material Design Table style -------------- */
.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 2rem;
  background-color: #fff;
}
.table > thead > tr,
.table > tbody > tr,
.table > tfoot > tr {
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
}
.table > thead > tr > th,
.table > tbody > tr > th,
.table > tfoot > tr > th,
.table > thead > tr > td,
.table > tbody > tr > td,
.table > tfoot > tr > td {
  text-align: left;
  padding: 1.6rem;
  vertical-align: top;
  border-top: 0;
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
}
.table > thead > tr > th {
  font-weight: 400;
  color: #757575;
  vertical-align: bottom;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
}
.table > caption + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > th,
.table > thead:first-child > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > td {
  border-top: 0;
}
.table > tbody + tbody {
  border-top: 1px solid rgba(0, 0, 0, 0.12);
}
.table .table {
  background-color: #fff;
}
.table .no-border {
  border: 0;
}
.table-condensed > thead > tr > th,
.table-condensed > tbody > tr > th,
.table-condensed > tfoot > tr > th,
.table-condensed > thead > tr > td,
.table-condensed > tbody > tr > td,
.table-condensed > tfoot > tr > td {
  padding: 0.8rem;
}
.table-bordered {
  border: 0;
}
.table-bordered > thead > tr > th,
.table-bordered > tbody > tr > th,
.table-bordered > tfoot > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > td {
  border: 0;
  border-bottom: 1px solid #e0e0e0;
}
.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
  border-bottom-width: 2px;
}
.table-striped > tbody > tr:nth-child(odd) > td,
.table-striped > tbody > tr:nth-child(odd) > th {
  background-color: #f5f5f5;
}
.table-hover > tbody > tr:hover > td,
.table-hover > tbody > tr:hover > th {
  background-color: rgba(0, 0, 0, 0.12);
}
@media screen and (max-width: 768px) {
  .table-responsive-vertical > .table {
    margin-bottom: 0;
    background-color: transparent;
  }
  .table-responsive-vertical > .table > thead,
  .table-responsive-vertical > .table > tfoot {
    display: none;
  }
  .table-responsive-vertical > .table > tbody {
    display: block;
  }
  .table-responsive-vertical > .table > tbody > tr {
    display: block;
    border: 1px solid #e0e0e0;
    border-radius: 2px;
    margin-bottom: 1.6rem;
  }
  .table-responsive-vertical > .table > tbody > tr > td {
    background-color: #fff;
    display: block;
    vertical-align: middle;
    text-align: right;
  }
  .table-responsive-vertical > .table > tbody > tr > td[data-title]:before {
    content: attr(data-title);
    float: left;
    font-size: inherit;
    font-weight: 400;
    color: #757575;
  }
  .table-responsive-vertical.shadow-z-1 {
    -webkit-box-shadow:",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MLSuKO
code,"<?php

use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateUsersTable extends Migration {

	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		Schema::create('users', function(Blueprint $table)
		{
			$table->increments('id');
			$table->string('name')->unique();
			$table->string('empresa')->unique();
            $table->string('first_name');
            $table->string('last_name');
			$table->string('email')->unique()->nullable();
			$table->string('password', 60);
			$table->integer('role_id');
			$table->rememberToken()->nullable();
			$table->timestamps();
		});
	}

	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::drop('users');
	}

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1CLbyA
code,"<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;

class CreateList extends Migration {

	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		Schema::create('modelList', function(Blueprint $table)
		{
			$table->increments('id');
			$table->string('name');
			$table->timestamps();
		});
	}


	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::drop('modelList');
	}

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rukzjz
code,"<?php

namespace GS\UsuarioBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Lecturaconproposito
 *
 * @ORM\Table(name=""lecturaconproposito"", indexes={@ORM\Index(name=""bibliografia_lecturaConProposito_idx"", columns={""bibliografia""})})
 * @ORM\Entity
 */
class Lecturaconproposito
{
    /**
     * @var string
     *
     * @ORM\Column(name=""idlecturaConProposito"", type=""string"", length=10, nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy=""IDENTITY"")
     */
    private $idlecturaconproposito;

    /**
     * @var string
     *
     * @ORM\Column(name=""propositoGeneral"", type=""text"", nullable=false)
     */
    private $propositogeneral;

    /**
     * @var string
     *
     * @ORM\Column(name=""tituloSubcapitulos"", type=""text"", nullable=true)
     */
    private $titulosubcapitulos;

    /**
     * @var boolean
     *
     * @ORM\Column(name=""resumen"", type=""boolean"", nullable=false)
     */
    private $resumen;

    /**
     * @var boolean
     *
     * @ORM\Column(name=""preguntasFinalCapitulo"", type=""boolean"", nullable=false)
     */
    private $preguntasfinalcapitulo;

    /**
     * @var boolean
     *
     * @ORM\Column(name=""glosario"", type=""boolean"", nullable=false)
     */
    private $glosario;

    /**
     * @var string
     *
     * @ORM\Column(name=""secciones"", type=""text"", nullable=true)
     */
    private $secciones;

    /**
     * @var string
     *
     * @ORM\Column(name=""descripcionIlustraciones"", type=""text"", nullable=true)
     */
    private $descripcionilustraciones;

    /**
     * @var string
     *
     * @ORM\Column(name=""resumenLectura"", type=""text"", nullable=true)
     */
    private $resumenlectura;

    /**
     * @var string
     *
     * @ORM\Column(name=""lecturaProposito"", type=""text"", nullable=true)
     */
    private $lecturaproposito;

    /**
     * @var string
     *
     * @ORM\Column(name=""resumenSeccion"", type=""text"", nullable=true)
     */
    private $resumenseccion;

    /**
     * @var string
     *
     * @ORM\Column(name=""preguntas"", type=""text"", nullable=true)
     */
    private $preguntas;

    /**
     * @var string
     *
     * @ORM\Column(name=""recomendaciones"", type=""text"", nullable=true)
     */
    private $recomendaciones;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name=""fechaRegistro"", type=""datetime"", nullable=false)
     */
    private $fecharegistro;

    /**
     * @var \Bibliografia
     *
     * @ORM\ManyToOne(targetEntity=""Bibliografia"")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name=""bibliografia"", referencedColumnName=""idbibliografia"")
     * })
     */
    private $bibliografia;



    /**
     * Get idlecturaconproposito
     *
     * @return string 
     */
    public function getIdlecturaconproposito()
    {
        return $this->idlecturaconproposito;
    }

    /**
     * Set propositogeneral
     *
     * @param string $propositogeneral
     * @return Lecturaconproposito
     */
    public function setPropositogeneral($propositogeneral)
    {
        $this->propositogeneral = $propositogeneral;

        return $this;
    }

    /**
     * Get propositogeneral
     *
     * @return string 
     */
    public function getPropositogeneral()
    {
        return $this->propositogeneral;
    }

    /**
     * Set titulosubcapitulos
     *
     * @param string $titulosubcapitulos
     * @return Lecturaconproposito
     */
    public function setTitulosubcapitulos($titulosubcapitulos)
    {
        $this->titulosubcapitulos = $titulosubcapitulos;

        return $this;
    }

    /**
     * Get titulosubcapitulos
     *
     * @return string 
     */
    public function getTitulosubcapitulos()
    {
        return $this->titulosubcapitulos;
    }

    /**
     * Set resumen
     *
     * @param boolean $resumen
     * @return Lecturaconproposito
     */
    public function setResumen($resumen)
    {
        $this->resumen = $resumen;

        return $this;
    }

    /**
     * Get resumen
     *
     * @return boolean 
     */
    public function getResumen()
    {
        return $this->resumen;
    }

    /**
     * Set preguntasfinalcapitulo
     *
     * @param boolean $preguntasfinalcapitulo
     * @return Lecturaconproposito
     */
    public function setPreguntasfinalcapitulo($preguntasfinalcapitulo)
    {
        $this->preguntasfinalcapitulo = $preguntasfinalcapitulo;

        return $this;
    }

    /**
     * Get preguntasfinalcapitulo
     *
     * @return boolean 
     */
    public function getPreguntasfinalcapitulo()
    {
        return $this->preguntasfinalcapitulo;
    }

    /**
     * Set glosario
     *
     * @param boolean $glosario
     * @return Lecturaconproposito
     */
    public function setGlosario($glosario)
    {
        $this->glosario = $glosario;

        return $this;
    }

    /**
     * Get glosario
     *
     * @return boolean 
     */
    public function getGlosario()
    {
        return $this->glosario;
    }

    /**
     * Set secciones
     *
     * @param string $secciones
     * @return Lecturaconproposito
     */
    public function setSecciones($seccion",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",54N8Jx
code,"<?php
/**
 * Link posts
 *
 * @package Start Here
 * @since Start Here 1.0.0
 */
?>
<article id=""post-<?php the_ID(); ?>"" <?php post_class(); ?>>
    <header class=""post-header"">
        <div class=""header-metas"">

            <?php sh_post_format(); ?>

            <?php if( is_singular() ) { edit_post_link( __( 'Edit', 'textdomain' ), '<span class=""edit-link"">', '</span>' ); } ?>

            <span class=""post-date"">
                <time class=""published"" datetime=""<?php echo get_the_time('c'); ?>""><a title=""<?php _e( 'Permalink to: ', 'textdomain' ); echo the_title(); ?>"" href=""<?php the_permalink(); ?>""><?php echo get_the_date(); ?></a></time>
            </span>

            <span class=""post-author"">
                <?php _e( '- By ', 'textdomain' ); ?><a title=""<?php _e('See other posts by ', 'textdomain'); the_author_meta( 'display_name' ); ?>"" href=""<?php echo get_author_posts_url( get_the_author_meta( 'ID' ) ); ?>""><?php the_author_meta( 'display_name' ); ?></a>
            </span>
        </div>

    </header>

    <div class=""<?php if( is_single() ) { echo 'post-content'; } else { echo 'link-content'; } ?>"">

        <?php the_content(''); ?>

    </div>

    <?php if( !is_single() && has_excerpt() ) : ?>
        <?php the_excerpt(); ?>
        <a class=""read-more"" href=""<?php the_permalink(); ?>"" title=""<?php echo _e( 'Read more', 'textdomain' ); ?>""><i class=""g""></i><?php echo _e( 'Read more', 'textdomain' ); ?></a>
    <?php endif; ?>

    <?php if( is_single() ) : ?>
    <footer class=""post-footer"">
        <ul class=""taxo-metas"">
            <?php if( get_the_category() ) { ?><li class=""category""><i class=""gicn gicn-category""></i><?php the_category(' &#8226; '); ?></li><?php } ?>

            <li class=""tag-links""><i class=""gicn gicn-tag""></i><?php
                $tags_list = get_the_tag_list( '', __( ' ', 'textdomain' ) );
                if ( $tags_list ) :
                    printf( __( '%1$s', 'textdomain' ), $tags_list );
                else :
                    _e( 'No tags', 'textdomain' );
                endif; ?>
            </li>
        </ul>
    </footer>
    <?php endif; ?>

</article>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rwh5MC
code,"<?php
/**
 * wCMF - wemove Content Management Framework
 * Copyright (C) 2005-2020 wemove digital solutions GmbH
 *
 * Licensed under the terms of the MIT License.
 *
 * See the LICENSE file distributed with this work for
 * additional information.
 */
namespace wcmf\lib\core;

/**
 * A session that requires clients to send a token for authentication.
 *
 * @author ingo herwig <ingo@wemove.com>
 */
interface TokenBasedSession extends Session {

  /**
   * Get the name of the auth token header.
   * @return String
   */
  public function getHeaderName();

  /**
   * Get the name of the auth token cookie.
   * @return String
   */
  public function getCookieName();
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RE9XGp
code,"<?php

namespace Abe\FileUploadBundle\Controller;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
use Abe\FileUploadBundle\Entity\Document;
use Abe\FileUploadBundle\Form\DocumentType;

/**
 * user2 controller.
 *
 * @Route(""/main/upload"")
 */
class UploadController extends Controller
{   
    /**
     * creates the form to uplaod a file with the Documetn entity entities.
     *
     * @Route(""/new"", name=""main_upload_file"")
     * @Method(""GET"")
     * @Template()
     */
    public function uploadAction()
    {
        
        $entity = new Document();
        $form   = $this->createUploadForm($entity);
        
        return array(
            'entity' => $entity,
            'form'   => $form->createView(),
        );
    
    }
    
    /**
    * @Template()
    * @Route(""/"", name=""main_upload"")
    * @Method(""POST"")
    */
   public function uploadFileAction(Request $request)
{
    return $this->redirect($this->generateUrl('homepage'));
    $document = new Document();
    $form = $this->createUploadForm($document);
    $form->handleRequest($request);
    $test =  $form->getErrors();
    
    //if ($this->getRequest()->getMethod() === 'POST') {
      //  $form->bindRequest($this->getRequest());
        if ($form->isSubmitted()) {
            $fileinfomation = $form->getData();
            exit(\Doctrine\Common\Util\Debug::dump($test));
            $em = $this->getDoctrine()->getEntityManager();

            $document->upload();
            
            $em->persist($document);
            $em->flush();
            
            return $this->redirect($this->generateUrl('homepage'));
        }
    //}

    return array(
        'form' => $form->createView(),
        'entity'  =>$document,
        );
}   

     /**
     * Creates a form to create a Document entity.
     *
     * @param Document $entity The entity
     *
     * @return \Symfony\Component\Form\Form The form
     */
    private function createUploadForm(Document $entity)
    {
        $form = $this->createForm(new DocumentType(), $entity, array(
            'action' => $this->generateUrl('document_create'),
            'method' => 'POST',
        ));

        $form->add('submit', 'button', array('label' => 'Upload'));

        return $form;
    }

    
    public function upload()
{
    // the file property can be empty if the field is not required
    if (null === $this->getFile()) {
        return;
    }

    // use the original file name here but you should
    // sanitize it at least to avoid any security issues

    // move takes the target directory and then the
    // target filename to move to
    $this->getFile()->move(
        $this->getUploadRootDir(),
        $this->getFile()->getClientOriginalName()
    );

    // set the path property to the filename where you've saved the file
    $this->path = $this->getFile()->getClientOriginalName();

    // clean up the file property as you won't need it anymore
    $this->file = null;
}

     /**
    * @Template()
    * @Route(""/"", name=""main_uploadfile"")
    * @Method(""POST"")
    */
   public function uploadFileAction2(Request $request)
{
    $document = new Document();
    
    
    $test =  $form->getErrors();
    
    
        if(2) {
            $fileinfomation = $form->getData();
            $em = $this->getDoctrine()->getEntityManager();

            $document->upload();
            
            $em->persist($document);
            $em->flush();
            
            return $this->redirect($this->generateUrl('homepage'));
        }
    }
    
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",H3pXbv
code,"<?php namespace Helpers;

/**
 *This class handles rendering of view files
 *
 *@author Geoffrey Oliver <geoffrey.oliver2@gmail.com>
 *@copyright Copyright (c) 2015 - 2020 Geoffrey Oliver
 *@link http://libraries.gliver.io
 *@category Core
 *@package Core\Helpers\View
 */

use Drivers\Templates\Implementation;
use Exceptions\BaseException;
use Drivers\Cache\CacheBase;
use Drivers\Registry;

class View {

     
    /**
     *This is the constructor class. We make this private to avoid creating instances of
     *this object
     *
     *@param null
     *@return void
     */
    private function __construct() {}

    /**
     *This method stops creation of a copy of this object by making it private
     *
     *@param null
     *@return void
     *
     */
    private function __clone(){}
 
    /**
     *This method parses the input variables and loads the specified views
     *
     *@param string $filePath the string that specifies the view file to load
     *@param array $data an array with variables to be passed to the view file
     *@return void This method does not return anything, it directly loads the view file
     *@throws 
     */     
   public static function  render($filePath, array $data = null) 
   {
        //this try block is excecuted to enable throwing and catching of errors as appropriate
        try {

            //get the variables passed and make them available to the view
            if ( $data != null)
            {
                //loop through the array setting the respective variables
                foreach ($data as $key => $value) 
                {
                    $$key = $value;

                }

            }

            //get the parsed contents of the template file
            $contents = self::getContents($filePath);

            //start the output buffer
            ob_start();

            //evaluate the contents of this view file
            eval(""?>"" . $contents . ""<?"");

            //get the evaluated contents
            $contents = ob_get_contents();

            //clean the output buffer
            ob_end_clean();

            //return the evaluated contents
            echo $contents;

            //stop further script execution
            exit();
   
        }

        catch(BaseException $e) {

            //echo $e->getMessage();
            $e->show();

        }

        catch(Exception $e) {

          echo $e->getMessage();
          
        }

    }

    /**
     *This method converts the code into valid php code
     *
     *@param string $file The name of the view whose contant is to be parsed
     *@return string $parsedContent The parsed content of the template file
     */
    public static function getContents($filePath)
    {
        //compose the file full path
        $path = Path::view($filePath);

        //get an instance of the view template class
        $template = Registry::get('template');
        
        //get the compiled file contents
        $contents = $template->compiled($path);

        //return the compiled template file contents
        return $contents;

    }

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",L78P9A
code,"<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Books extends Model
{
    protected $table = 'books';

    protected $fillable = [
        'guid',
        'author',
        'title',
        'description',
        'abstract',
        'edition',
        'publish_date',
        'status']; 
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PysPho
code,"/**** Be careful when changing code, to not break auto distribution generation
 ****/
:- module(http, [
        fetch_url/3
        ], ['pillow/ops',assertions,isomodes,dcg]).

:- use_module(library(strings), [string/3]).
:- use_module(library(lists), [select/3]).
:- use_module(library('pillow/pillow_aux')).
:- use_module(library('pillow/pillow_types')).
:- use_module(library('pillow/http_ll')).

pillow_version(""1.1"").

:- comment(title, ""HTTP conectivity"").
:- comment(author, ""Daniel Cabeza"").

:- comment(module, ""This module implements the @concept{HTTP} protocol, which
   allows retrieving data from HTTP servers."").

:- comment(fetch_url(URL, Request, Response), ""Fetches the document
   pointed to by @var{URL} from Internet, using request parameters
   @var{Request}, and unifies @var{Response} with the parameters of the
   response.  Fails on timeout.  Note that redirections are not handled
   automatically, that is, if @var{Response} contains terms of the form
   @tt{status(redirection,301,_)} and @tt{location(NewURL)}, the program
   should in most cases access location @tt{NewURL}."").

:- true pred fetch_url(URL, Request, Response)
        : (url_term(URL), list(Request, http_request_param))
       => list(Response, http_response_param).

fetch_url(http(Host, Port, Document), Request, Response) :-
    timeout_option(Request, Timeout, Request1),
    http_request(Document, Request1, RequestChars, []), !,
    http_transaction(Host, Port, RequestChars, Timeout, ResponseChars),
    http_response(Response, ResponseChars, []).

:- pred timeout_option(+Options, -Timeout, -RestOptions)
   # ""Returns timeout option, by default 5 min. (300s)."".

timeout_option(Options, Timeout, RestOptions) :-
        select(timeout(Timeout), Options, RestOptions), !.
timeout_option(Options, 300, Options).

:- pred http_request(+Document, +Request, -RequestChars, -RequestCharsTail)
   # ""Generate an HTTP request from a list of parameters, conforming to
      the RFC 1945 guidelines.  Does not use the headers: current date,
      pragma, referer, and entity body (this will have to change if the
      implementation extends beyond the GET and HEAD methods.  cf
      RFC1945 section 7.2)"".

http_request(Document,Options) -->
        http_request_method(Options,Options1),
        "" "",
        string(Document),
        "" HTTP/1.0"",
        http_crlf,
        http_req(Options1), !.

http_request_method(Options,Options1) -->
        {
            select(head, Options, Options1)
        }, !,
        ""HEAD"".
http_request_method(Options, Options) -->
        ""GET"".

http_req([]) -->  http_crlf.
http_req([Option|Options]) -->
        http_request_option(Option), !,
        http_req(Options).

http_request_option(user_agent(A)) --> !,
        {
            atom_codes(A,AStr),
            pillow_version(Ver)
        },
        ""User-Agent: "",
        string(AStr),
        "" PiLLoW/"",
        string(Ver),
        http_crlf.
http_request_option(if_modified_since(date(WkDay,Day,Month,Year,Time))) --> !,
        ""If-Modified-Since: "",
        http_internet_date(WkDay,Day,Month,Year,Time),
        http_crlf.
http_request_option(authorization(Scheme, Params)) --> !,
        ""Authorization: "",
        http_credentials(Scheme, Params),
        http_crlf.
http_request_option(O) -->
        {
            functor(O,F,1),
            atom_codes(F,FS),
            arg(1,O,A),
            atom_codes(A,AS)
        }, !,
        string(FS),
        "": "",
        string(AS),
        http_crlf.
http_request_option(O) --> """",
        {warning(['Invalid http_request_param ',O])}.

http_credentials(basic, Cookie) --> !,
        ""Basic "",
        string(Cookie).
http_credentials(Scheme,Params) --> !,
        {
            atom_codes(Scheme, S)
        },
        string(S), "" "",
        http_credential_params(Params).

http_credential_params([]) --> """".
http_credential_params([P|Ps]) -->
        http_credential_param(P),
        http_credential_params_rest(Ps).
http_credential_params_rest([]) --> """".
http_credential_params_rest([P|Ps]) -->
        "", "",
        http_credential_param(P),
        http_credential_params_rest(Ps).

http_credential_param(P=V) -->
        {
            atom_codes(P,PS)
        },
        string(PS), ""="""""", string(V), """""""".

% ============================================================================
% PROLOG BNF GRAMMAR FOR HTTP RESPONSES
%  Based on RFC 1945
%
% ============================================================================


http_response(R) -->
	http_full_response(R), !.
http_response(R) -->
	http_simple_response(R).

http_full_response([Status|Head_Body]) -->
        http_status_line(Status),
        http_response_headers(Head_Body,Body),
        http_crlf,
        http_entity_body(Body).

http_simple_response(Body) -->
        http_entity_body(Body).

http_response_headers([H|Hs], Hs_) -->
        http_response_header(H), !,
        http_response_headers(Hs, Hs_).
http_response_headers(Hs, Hs) --> """".

http_entity_body([content(B)],B,[]).

% ----------------------------------------------------------------------------

http_status_li",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gEYapF
code,"#!/usr/bin/perl

=head1 NAME

Debconf::Encoding - Character encoding support for debconf

=head1 DESCRIPTION

This module provides facilities to convert between character encodings for
debconf, as well as other functions to operate on characters.

Debconf uses glibc's character encoding converter via Text::Iconv instead
of perl's internal Encoding conversion library because I'm not really sure
if perls encoding is 100% the same. There could be round-trip errors
between iconv's encodings and perl's, conceivably.

$Debconf::Encoding::charmap holds the user's charmap.

Debconf::Encoding::convert()  takes a charmap and a string encoded in that
charmap, and converts it to the user's charmap.

Debconf::Encoding::wrap is a word-wrapping function, with the same interface
as the one in Text::Wrap (except it doesn't gratuitously unexpand tabs).
If Text::WrapI18N is available, it will be used for proper wrapping of
multibyte encodings, combining and fullwidth characters, and languages that
do not use whitespace between words.

$Debconf::Encoding::columns is used to set the number of columns text is
wrapped to by Debconf::Encoding::wrap

Debconf::Encoding::width returns the number of columns required to display
the given string. If available, Text::CharWidth is used to determine the
width, to support combining and fullwidth characters.

Any of the above can be exported, this module uses the exporter.

=cut

package Debconf::Encoding;

use strict;
use warnings;

our $charmap;
BEGIN {
	no warnings;
	eval q{	use Text::Iconv };
	use warnings;
	if (! $@) {
		# I18N::Langinfo is not even in Debian as I write this, so
		# I will use something that is to get the charmap.
		$charmap = `locale charmap`;
		chomp $charmap;
	}
	
	no warnings;
	eval q{ use Text::WrapI18N; use Text::CharWidth };
	use warnings;
	# mblen has been known to get busted and return large numbers when
	# the wrong version of perl is installed. Avoid an infinite loop
	# in Text::WrapI18n in this case.
	if (! $@ && Text::CharWidth::mblen(""a"") == 1) {
		# Set up wrap and width functions to point to functions
		# from the modules.
		*wrap = *Text::WrapI18N::wrap;
		*columns = *Text::WrapI18N::columns;
		*width = *Text::CharWidth::mbswidth;
	}
	else {
		# Use Text::Wrap for wrapping, but unexpand tabs.
		require Text::Wrap;
		require Text::Tabs;
		sub _wrap { return Text::Tabs::expand(Text::Wrap::wrap(@_)) }
		*wrap = *_wrap;
		*columns = *Text::Wrap::columns;
		# Cannot just use *CORE::length; perl is too dumb.
		sub _dumbwidth { length shift }
		*width = *_dumbwidth;
	}
}

use base qw(Exporter);
our @EXPORT_OK=qw(wrap $columns width convert $charmap to_Unicode);

my $converter;
my $old_input_charmap;
sub convert {
	my $input_charmap = shift;
	my $string = shift;
	
	return unless defined $charmap;
	
	# The converter object is cached.
	if (! defined $old_input_charmap || 
	    $input_charmap ne $old_input_charmap) {
		$converter = Text::Iconv->new($input_charmap, $charmap);
		$old_input_charmap = $input_charmap;
	}
	return $converter->convert($string);
}

my $unicode_conv;
sub to_Unicode {
	my $string = shift;
	my $result;

	return $string if utf8::is_utf8($string);
	if (!defined $unicode_conv) {
		$unicode_conv = Text::Iconv->new($charmap, ""UTF-8"");
	}
	$result = $unicode_conv->convert($string);
	utf8::decode($result);
	return $result;
}

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut

1
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wx2F7O
code,"####################################################################
#
#    This file was generated using Parse::Yapp version 1.05.
#
#        Don't edit this file, use source file instead.
#
#             ANY CHANGE MADE HERE WILL BE LOST !
#
####################################################################
package Parse::Pidl::IDL;
use vars qw ( @ISA );
use strict;
use warnings;

@ISA= qw ( Parse::Yapp::Driver );
use Parse::Yapp::Driver;



sub new {
        my($class)=shift;
        ref($class)
    and $class=ref($class);

    my($self)=$class->SUPER::new( yyversion => '1.05',
                                  yystates =>
[
	{#State 0
		DEFAULT => -1,
		GOTOS => {
			'idl' => 1
		}
	},
	{#State 1
		ACTIONS => {
			'' => 2,
			""cpp_quote"" => 3,
			""importlib"" => 4,
			""import"" => 7,
			""include"" => 13
		},
		DEFAULT => -89,
		GOTOS => {
			'cpp_quote' => 11,
			'importlib' => 10,
			'interface' => 9,
			'include' => 5,
			'coclass' => 12,
			'import' => 8,
			'property_list' => 6
		}
	},
	{#State 2
		DEFAULT => 0
	},
	{#State 3
		ACTIONS => {
			""("" => 14
		}
	},
	{#State 4
		ACTIONS => {
			'TEXT' => 16
		},
		GOTOS => {
			'commalist' => 15,
			'text' => 17
		}
	},
	{#State 5
		DEFAULT => -5
	},
	{#State 6
		ACTIONS => {
			""coclass"" => 18,
			""["" => 20,
			""interface"" => 19
		}
	},
	{#State 7
		ACTIONS => {
			'TEXT' => 16
		},
		GOTOS => {
			'commalist' => 21,
			'text' => 17
		}
	},
	{#State 8
		DEFAULT => -4
	},
	{#State 9
		DEFAULT => -2
	},
	{#State 10
		DEFAULT => -6
	},
	{#State 11
		DEFAULT => -7
	},
	{#State 12
		DEFAULT => -3
	},
	{#State 13
		ACTIONS => {
			'TEXT' => 16
		},
		GOTOS => {
			'commalist' => 22,
			'text' => 17
		}
	},
	{#State 14
		ACTIONS => {
			'TEXT' => 16
		},
		GOTOS => {
			'text' => 23
		}
	},
	{#State 15
		ACTIONS => {
			"";"" => 24,
			"","" => 25
		}
	},
	{#State 16
		DEFAULT => -120
	},
	{#State 17
		DEFAULT => -11
	},
	{#State 18
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 27
		}
	},
	{#State 19
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 28
		}
	},
	{#State 20
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 30,
			'property' => 31,
			'properties' => 29
		}
	},
	{#State 21
		ACTIONS => {
			"";"" => 32,
			"","" => 25
		}
	},
	{#State 22
		ACTIONS => {
			"";"" => 33,
			"","" => 25
		}
	},
	{#State 23
		ACTIONS => {
			"")"" => 34
		}
	},
	{#State 24
		DEFAULT => -10
	},
	{#State 25
		ACTIONS => {
			'TEXT' => 16
		},
		GOTOS => {
			'text' => 35
		}
	},
	{#State 26
		DEFAULT => -116
	},
	{#State 27
		ACTIONS => {
			""{"" => 36
		}
	},
	{#State 28
		ACTIONS => {
			"":"" => 37
		},
		DEFAULT => -17,
		GOTOS => {
			'base_interface' => 38
		}
	},
	{#State 29
		ACTIONS => {
			"","" => 39,
			""]"" => 40
		}
	},
	{#State 30
		ACTIONS => {
			""("" => 41
		},
		DEFAULT => -93
	},
	{#State 31
		DEFAULT => -91
	},
	{#State 32
		DEFAULT => -8
	},
	{#State 33
		DEFAULT => -9
	},
	{#State 34
		DEFAULT => -19
	},
	{#State 35
		DEFAULT => -12
	},
	{#State 36
		DEFAULT => -14,
		GOTOS => {
			'interface_names' => 42
		}
	},
	{#State 37
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 43
		}
	},
	{#State 38
		ACTIONS => {
			""{"" => 44
		}
	},
	{#State 39
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 30,
			'property' => 45
		}
	},
	{#State 40
		DEFAULT => -90
	},
	{#State 41
		ACTIONS => {
			'CONSTANT' => 48,
			'TEXT' => 16,
			'IDENTIFIER' => 26
		},
		DEFAULT => -97,
		GOTOS => {
			'identifier' => 50,
			'text' => 51,
			'anytext' => 46,
			'constant' => 47,
			'commalisttext' => 49
		}
	},
	{#State 42
		ACTIONS => {
			""}"" => 52,
			""interface"" => 53
		}
	},
	{#State 43
		DEFAULT => -18
	},
	{#State 44
		ACTIONS => {
			""const"" => 64
		},
		DEFAULT => -89,
		GOTOS => {
			'typedecl' => 54,
			'function' => 55,
			'pipe' => 56,
			'definitions' => 58,
			'bitmap' => 57,
			'definition' => 61,
			'property_list' => 60,
			'usertype' => 59,
			'const' => 63,
			'struct' => 62,
			'typedef' => 66,
			'enum' => 65,
			'union' => 67
		}
	},
	{#State 45
		DEFAULT => -92
	},
	{#State 46
		ACTIONS => {
			""-"" => 69,
			"":"" => 68,
			""<"" => 71,
			""+"" => 73,
			""~"" => 72,
			""*"" => 80,
			""?"" => 70,
			""{"" => 74,
			""&"" => 75,
			""/"" => 76,
			""="" => 77,
			""("" => 78,
			""|"" => 79,
			""."" => 81,
			"">"" => 82
		},
		DEFAULT => -95
	},
	{#State 47
		DEFAULT => -99
	},
	{#State 48
		DEFAULT => -119
	},
	{#State 49
		ACTIONS => {
			"","" => 83,
			"")"" => 84
		}
	},
	{#State 50
		DEFAULT => -98
	},
	{#State 51
		DEFAULT => -100
	},
	{#State 52
		ACTIONS => {
			"";"" => 86
		},
		DEFAULT => -121,
		GOTOS => {
			'optional_semicolon' => 85
		}
	},
	{#State 53
		ACTIONS => {
			'IDENTIFIER' => 26
		},
		GOTOS => {
			'identifier' => 87
		}
	},
	{#State 54
		DEFAULT => -25
	},
	{#State 55
		DEFAULT => -22
	},
	{#State 56
		DEFAULT => -34
	},
	{#State 57
		DEFAULT => -33
	},
	{#State 58
		ACTIONS => {
			""}"" => 88,
			""const"" => 64
		},
		DEFAULT => -89,
		GOTOS => {
			'typedecl' => 54,
			'function' => 55,
			'pipe' => 56,
			'bitmap' => 57,
			'definition' => 89,
			'property_list' =>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GNTQUG
code,"#!/usr/bin/perl
#
# Reads the display filter keyword dump produced by 'tshark -G' and
# formats it for a pod document. The pod document is then used to
# make a manpage
#
# STDIN is the wireshark glossary
# arg1 is the pod template file. The =insert_dfilter_table token
#      will be replaced by the pod-formatted glossary
# STDOUT is the output
#
# Gilbert Ramirez <gram [AT] alumni.rice.edu>
#
# Wireshark - Network traffic analyzer
# By Gerald Combs <gerald@wireshark.org>
# Copyright 1998 Gerald Combs
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use Getopt::Std;

%ftenum_names = (
	'FT_NONE',		'No value',
	'FT_PROTOCOL',		'Protocol',
	'FT_BOOLEAN',		'Boolean',
	'FT_UINT8',		'Unsigned 8-bit integer',
	'FT_UINT16',		'Unsigned 16-bit integer',
	'FT_UINT24',		'Unsigned 24-bit integer',
	'FT_UINT32',		'Unsigned 32-bit integer',
	'FT_UINT64',		'Unsigned 64-bit integer',
	'FT_INT8',		'Signed 8-bit integer',
	'FT_INT16',		'Signed 16-bit integer',
	'FT_INT24',		'Signed 24-bit integer',
	'FT_INT32',		'Signed 32-bit integer',
	'FT_INT64',		'Signed 64-bit integer',
	'FT_FLOAT',		'Single-precision floating point',
	'FT_DOUBLE',		'Double-precision floating point',
	'FT_ABSOLUTE_TIME',	'Date/Time stamp',
	'FT_RELATIVE_TIME',	'Time duration',
	'FT_STRING',		'String',
	'FT_STRINGZ',		'NULL terminated string',
	'FT_EBCDIC',		'EBCDIC string',
	'FT_UINT_STRING',	'Length string pair',
	'FT_ETHER',		'6-byte Hardware (MAC) Address',
	'FT_BYTES',		'Byte array',
	'FT_UINT_BYTES',	'Length byte array pair',
	'FT_IPv4',		'IPv4 address',
	'FT_IPv6',		'IPv6 address',
	'FT_IPXNET',		'IPX network or server name',
	'FT_FRAMENUM',		'Frame number',
	'FT_PCRE',		'Perl Compatible Regular Expression',
	'FT_GUID',		'Globally Unique Identifier',
	'FT_OID',		'Object Identifier',
	'FT_REL_OID',		'Relative Object Identifier',
);

getopts('e');

if ($opt_e) {
	$proto_abbrev{'Unable to generate filter documentation'} =
		'Please refer to http://www.wireshark.org/docs/dfref/';
	printf STDERR ""Creating empty filter list.\n"";
} else {
	# Read all the data into memory
	while (<STDIN>) {
		next unless (/^([PF])/);
	
		$record_type = $1;
		# Strip the line from its line-end sequence
		# chomp($_) won't work on Win32/CygWin as it leaves the '\r' character.
		$_ =~ s/[\r\n]//g;
	
		# Store protocol information
		if ($record_type eq 'P') {
			($junk, $name, $abbrev) = split(/\t+/, $_);
			$proto_abbrev{$name} = $abbrev;
		}
		# Store header field information
		else {
			($junk, $name, $abbrev, $type, $parent, $blurb) =
				split(/\t+/, $_);
			push(@{$field_abbrev{$parent}}, $abbrev);
			$field_info{$abbrev} = [ $name, $type, $blurb ];
		}
	}
}

# if there was no input on stdin, bail out
if ($record_type ne 'P' and $record_type ne 'F' and !defined($opt_e)) {
	exit;
}

$template = shift(@ARGV);

open(TEMPLATE, $template) || die ""Can't open $template for reading: $!\n"";

while (<TEMPLATE>) {
	if (/=insert_dfilter_table/) {
		&create_dfilter_table;
	}
	else {
		print;
	}
}

close(TEMPLATE) || die ""Can't close $template: $!\n"";

sub create_dfilter_table {

	# Print each protocol
	for $proto_name (sort keys %proto_abbrev) {

		print ""=head2 $proto_name ($proto_abbrev{$proto_name})\n\n"";

		# If this proto has children fields, print those
		if ($field_abbrev{$proto_abbrev{$proto_name}}) {

			for $field_abbrev (sort @{$field_abbrev{$proto_abbrev{$proto_name}}}) {
				print ""    $field_abbrev  "", $field_info{$field_abbrev}[0],""\n"",
				      ""        "", $ftenum_names{$field_info{$field_abbrev}[1]},
				   ""\n"";
				print ""        "", $field_info{$field_abbrev}[2], ""\n""
					if $field_info{$field_abbrev}[2];
				print ""\n"";
			}
		}
	}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ePvicC
code,"#!/usr/bin/env perl 
# -*- perl -*-
######################################################################
# gffmatch.pl -- Simple program to match BioWare Gff files
# Copyright (c) 2004 Tero Kivinen
# All Rights Reserved.
######################################################################
#         Program: gffmatch.pl
#	  $Source: /u/samba/nwn/bin/RCS/gffmatch.pl,v $
#	  Author : $Author: kivinen $
#
#	  (C) Tero Kivinen 2004 <kivinen@iki.fi>
#
#	  Creation          : 16:00 Jul 22 2004 kivinen
#	  Last Modification : 01:26 May 24 2007 kivinen
#	  Last check in     : $Date: 2007/05/23 22:26:44 $
#	  Revision number   : $Revision: 1.14 $
#	  State             : $State: Exp $
#	  Version	    : 1.942
#	  Edit time	    : 521 min
#
#	  Description       : Simple program to match BioWare Gff files
#
#	  $Log: gffmatch.pl,v $
#	  Revision 1.14  2007/05/23 22:26:44  kivinen
#	  	No changes.
#
#	  Revision 1.13  2007/05/23 22:03:19  kivinen
#	  	Fixed path splitting to accept windows paths.
#
#	  Revision 1.12  2007/02/03 17:16:36  kivinen
#	  	Added --dialog support.
#
#	  Revision 1.11  2005/07/06 11:11:14  kivinen
#	  	Added support for parameters etc. Added support for
#	  	nonmatching tests etc.
#
#	  Revision 1.10  2005/02/05 18:10:05  kivinen
#	  	Fixed =from to =item.
#
#	  Revision 1.9  2005/02/05 17:50:33  kivinen
#	  	Added documentation.
#
#	  Revision 1.8  2004/12/05 16:49:10  kivinen
#	  	Added csv output format.
#
#	  Revision 1.7  2004/11/21 14:28:40  kivinen
#	  	Changed usage (-b prints now the basename), removed unsed
#	  	code, added -s default to '^/$', added some debug prints on
#	  	verbose level 4, 5, 6.
#
#	  Revision 1.6  2004/09/20 11:46:31  kivinen
#	  	Added internal globbing. Fixed localized string printing.
#	  	Changed to use UNIVERSAL::isa.
#
#	  Revision 1.5  2004/08/25 15:30:43  kivinen
#	  	Fixed GffParse to Gff.
#
#	  Revision 1.4  2004/08/25 15:20:29  kivinen
#	  	No changes.
#
#	  Revision 1.3  2004/08/15 12:37:28  kivinen
#	  	Updated to new Gff module support.
#
#	  Revision 1.2  2004/07/26 15:12:49  kivinen
#	  	Fixed usage.
#
#	  Revision 1.1  2004/07/22 14:50:47  kivinen
#	  	Created.
#	  $EndLog$
#
#
#
#
######################################################################
# initialization

require 5.6.0;
package GffMatch;
use strict;
use Getopt::Long;
use File::Glob ':glob';
use TlkRead;
use Gff;
use GffRead;
use Time::HiRes qw(time);
use Pod::Usage;

$Opt::verbose = 0;
$Opt::exclude = undef;
$Opt::include = undef;
$Opt::find_struct = undef;
@Opt::find_labels = ();
@Opt::find_values = ();
@Opt::find_operations = ();
@Opt::or_labels = ();
@Opt::or_values = ();
@Opt::or_operations = ();
$Opt::print_fields = undef;
$Opt::print_fields_recursive = 0;
$Opt::find_proc = undef;
$Opt::print_filename = 0;
$Opt::print_basename = 0;
@Opt::parameters = ();
@Opt::parameter_names = ();
@Opt::global_parameters = ();
@Opt::global_parameter_names = ();
@Opt::area_parameters = ();
@Opt::area_parameter_names = ();
@Opt::variable_parameters = ();
@Opt::variable_parameter_names = ();
$Opt::dialog = undef;

######################################################################
# Get version information

open(PROGRAM, ""<$0"") || die ""Cannot open myself from $0 : $!"";
undef $/;
$Prog::program = <PROGRAM>;
$/ = ""\n"";
close(PROGRAM);
if ($Prog::program =~ /\$revision:\s*([\d.]*)\s*\$/i) {
    $Prog::revision = $1;
} else {
    $Prog::revision = ""?.?"";
}

if ($Prog::program =~ /version\s*:\s*([\d.]*\.)*([\d]*)\s/mi) {
    $Prog::save_version = $2;
} else {
    $Prog::save_version = ""??"";
}

if ($Prog::program =~ /edit\s*time\s*:\s*([\d]*)\s*min\s*$/mi) {
    $Prog::edit_time = $1;
} else {
    $Prog::edit_time = ""??"";
}

$Prog::version = ""$Prog::revision.$Prog::save_version.$Prog::edit_time"";
$Prog::progname = $0;
$Prog::progname =~ s/^.*[\/\\]//g;

$| = 1;

######################################################################
# Read rc-file

if (defined($ENV{'HOME'})) {
    read_rc_file(""$ENV{'HOME'}/.gffmatchrc"");
}

######################################################################
# Option handling

Getopt::Long::Configure(""no_ignore_case"");

if (!GetOptions(""config=s"" => \$Opt::config,
		""verbose|v+"" => \$Opt::verbose,
		""help|h"" => \$Opt::help,
		""exclude|i=s"" => \$Opt::exclude,
		""include|e=s"" => \$Opt::include,
		""find|f=s"" => sub {
		    my($name, $value) = @_;
		    if ($value !~ /^(.*):=:(.*)$/) {
			if ($value !~ /^(.*):!:(.*)$/) {
			    die ""--find needs label-regexp:=:value-regexp or label-regexp:!:value-regexp"";
			} else {
			push(@Opt::find_labels, $1);
			push(@Opt::find_values, $2);
			push(@Opt::find_operations, 1);
			}
		    } else {
			push(@Opt::find_labels, $1);
			push(@Opt::find_values, $2);
			push(@Opt::find_operations, 0);
		    }
		},
		""or|o"" => sub {
		    if ($#Opt::find_labels == -1) {
			die ""There must be at least one --find option "" .
			    ""before --or"";
		    }
		    push(@Opt::or_labels, [ @Opt::find_labels ]);
		    push(@Opt::or_values, [ @Opt::find_values ]);
		    push(@Opt::or_operations, [ @Opt::find_operations ]);
		    @Opt::find_labels = ();
		    @Opt::fi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XgjIUa
code,"=pod

Placeholder - real PDD will appear after consultation

=cut
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vtJV7j
code,"use strict;

use TLily::Daemon::HTTP;

my $daemon = undef;

sub parse_http {
    my ($event, $handler) = @_;
    my $st;

    $daemon = TLily::Daemon::HTTP::daemon() unless defined($daemon);

    if ($event->{daemon}) {
        $event->{server} = undef;

        $st = \$event->{daemon}->{_state};
    } else {
        $st = \$event->{server}->{_state};
    }

    if ($$st->{_done}) {
        save_file($event, $handler);
        return;
    }

    my $text = $$st->{""_partial""} . $event->{data};

    while ($text =~ s/^([^\r\n]+)\r?\n//) {
        my $line = $1;
        TLily::Event::send(type   => 'http_line',
                           daemon => $event->{daemon},
                           server => $event->{server},
                           data   => $line);
    }
    if ($text =~ s/^\r?\n//) {
        TLily::Event::send(type   => 'http_complete',
                           server => $event->{server},
                           daemon => $event->{daemon},
                           data   => $text);
    }

    $$st->{""_partial""} = $text;
}

sub parse_http_line {
    my ($event, $handler) = @_;

    my $text = $event->{data};
    my $st;

    if ($event->{daemon}) {
        $event->{server} = undef;

        $st = \$event->{daemon}->{""_state""};
    } else {
        $st = \$event->{server}->{""_state""};
   }

    #    my $ui = TLily::UI::name();

    if ((defined $event->{server}) && (!($$st->{_status}))) {
        if ($text !~ /^(HTTP\/\d+\.\d+)[ \t]+(\d+)[ \t]+.*$/) {
            # Do something here.  This is unexpected.
            return;
        }

        $event->{server}->{""_state""} = { _proto   => $1,
                                         _status  => $2,
                                         _msg     => $3
                                       };

        #    $ui->print (""Server returned status "", $$st->{_status}, ""\n"");
        return;
    } elsif ((!(defined $event->{server})) && (!($$st->{_command}))) {
        if ($text !~ /^(\w+)[ \t]+(\S+)(?:[ \t]+(HTTP\/\d+\.\d+))?$/) {
            $event->{daemon}->send_error (errno => 400,
                                          title => ""Bad Request"",
                                          long  => ""This server did not "" .
                                          ""understand that "" .
                                          ""request."");
            $event->{daemon}->close();
            return;
        }

        $$st = { _command => $1,
                 _file    => $2,
                 _proto   => $3,
               };

        return;
    }

    if ($text =~ /^(\w+):(.+)$/) {
        $$st->{$1} = $2;
        return;
    }
}

sub complete_http {
    my ($event, $handler) = @_;

    my $st;

    if ($event->{daemon}) {
        $event->{server} = undef;

        $st = \$event->{daemon}->{_state};
        $$st->{_done} = 1;
    } else {
        $st = \$event->{server}->{_state};
        $$st->{_done} = 1;

        save_file($event, $handler);
        return;
    }

    if (($$st->{_command} ne 'GET') &&
        ($$st->{_command} ne 'HEAD')) {
        $event->{daemon}->send_error (errno => 501,
                                      title => ""Not Implemented"",
                                      long  => ""This server did not "" .
                                      ""understand that request."");
        $event->{daemon}->close();
        return;
    }

    # Special case for /
    if ($$st->{_file} =~ m|^/$|) {
        my $d = $event->{daemon};

        $d->print(""HTTP/1.0 200 OK\r\n"");
        $d->print(""Date: "" . TLily::Daemon::HTTP::date() . ""\r\n"");
        $d->print(""Connection: close\r\n"");
        $d->print(""\r\n"");
        if ($$st->{_command} eq 'GET') {
            $d->print(""<html><head>\n<title>Tigerlily</title>\n"");
            $d->print(""</head><body>\n"");
            $d->print(""To download the latest version of Tigerlily, "");
            $d->print(""click "");
            $d->print(""<a href=\""http://www.tlily.org/tigerlily\"">\n"");
            $d->print(""here</a></body></html>\n"");
        }
        $d->close();
        return;
    }

    $$st->{_file} =~ s|^/||;

    unless ($event->{daemon}->send(file => $$st->{_file},
                                   head => ($$st->{_command} eq 'HEAD'))) {
        $event->{daemon}->close();
        return;
    }
}

# This is a pseudo-eventhandler.  It never gets called by the event system,
# it just gets called as soon as possible from other events.

sub save_file {
    my ($event, $handler) = @_;

    my $st;
    my $filename;

    if ($event->{daemon}) {
        $event->{server} = undef;

        $st = \$event->{daemon}->{""_state""};
        return unless $$st->{_passive};
        $filename = $$st->{_file};
    } else {
        $st = \$event->{server}->{""_state""};
        $filename = $event->{server}->{filename};
    }

    return if $$st->{_nomorewrite};

    if (!defined $event->{server}->{callback}) {

        unless (defined $$st->{_filehandle}) {
            if (open my $fh, '>', $filename) {
                $$st->{_filehandle} = $fh;
            } else {
                my $ui = TLily::UI::name();
       ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d2eSiG
code,"# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!! 
# This file is built by ./mktables from e.g. UnicodeData.txt.
# Any changes made here will be lost!

#
# This file supports:
# 	\p{DCfraction}
# 
# Meaning: Compatible with 'fraction'
#
return <<'END';
00BC	00BE	
2153	215F	
END
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",evlks2
code,"#!/usr/bin/perl
use strict;
use warnings;

use HTTP::Request;
use HTTP::Response;
use LWP::UserAgent;
use HTML::TreeBuilder;

# This code is used to obtain the key and the notes for a given song. This can be used as 
# a prerequisite for other code

# The scale of the songs
my $scale = undef;

# The key used in the song
my $key = undef;

# The song is characterized by the note stream, or the stream of notes
my @noteStream;

# The song's lyrics is categorized by a single vector
my @lyricsOfSong;

my $ROBOT_NAME = 'NoteStreamReader/1.0';
my $ROBOT_MAIL = 'asanyal4@jhu.edu';

my $ua = new LWP::UserAgent;  # create an new LWP::UserAgent
$ua->agent( $ROBOT_NAME );    # identify who we are
$ua->from ( $ROBOT_MAIL );    # and give an email address in case anyone would
                              # like to complain
                  
# A hash map of note corresponding to the set of notes in western classical
my %note_map;
            
# Defines the notes and sharps
$note_map{'a'} = 1;
$note_map{'a#'} = 1;
$note_map{'b'} = 1;
$note_map{'c'} = 1;
$note_map{'c#'} = 1;
$note_map{'d'} = 1;
$note_map{'d#'} = 1;
$note_map{'e'} = 1;
$note_map{'f'} = 1;
$note_map{'f#'} = 1;
$note_map{'g'} = 1;
$note_map{'g#'} = 1;

# Defines the flats as well, to maintain harmonic equivalency
$note_map{'ab'} = 1;
$note_map{'bb'} = 1;
$note_map{'db'} = 1;
$note_map{'eb'} = 1;
$note_map{'gb'} = 1;        

                              
# Some phrases and words that are parsed by the crawler which are not part of the lyrics of a song  
my %metaDataWordHashMap;
                            
my @metaDataWords = (""Keyless"", ""Online"", ""Home"", ""This"", ""work"", ""is"", ""licensed"", ""under"", ""a"", ""Creative"", 
                     ""Commons"", ""Attribution-NonCommercial-ShareAlike"", ""2.5"", 
                     ""License."", ""About"", ""Us"", ""Contact"", ""|"", ""Transpose:-3"",
                     ""See"", ""Legend"", ""details)Band"", ""version"", 
                     ""(notes"", ""prelude/interludes"", ""bar-by-bar"", ""chords"", ""License"", 
                     ""Yahoo"", ""Group"", ""External"", ""Links"", ""Pallavi"", ""Music"", ""GroupSankara"",
                     ""Eye"", ""FoundationSankara"", ""NethralayaUdavum"", ""KarangalChords"", ""names"", 
                     ""symbols"", ""Enter"", ""search"", ""termsSubmit"", ""form"", ""News"", ""Language"", 
                     ""Attribution"", ""NonCommercial"", ""ShareAlike"", ""NotesTamilHindiTeluguKannadaMalayalamKids"", 
                     ""CornerCarnaticMiscDevotionalEnglish"", ""Request"", ""SongLegendFAQKEYLESS"", ""(SeeLegendfor"",
                     ""details)Meter"", "":"", ""version(notes"", ""bar"", ""chords)PallaviAaj"");

# Initialize the word for a fast lookup when constructing lyrics
foreach my $word (@metaDataWords) 
{
    $metaDataWordHashMap{$word} = 1;
}

# Reads the songSources.txt file one by one and get the notestreams
my $fileNumber = 0;                              
open(FILE, ""song_sources.txt"") or die (""Cant open the song listings"");
print ""Reading lyrics and notes from contents song_sources.txt \n"";
while(<FILE>){                   
    my $link = $_;
    chomp $link;
    
    print ""Processing link "", $link, ""\n"";
   
    my $request  = new HTTP::Request 'GET' => $link;
    my $response = $ua->request( $request );

    my $html_tree = new HTML::TreeBuilder;

    # Make tree
    $html_tree->parse($response->content);

    # Elementify the tree
    $html_tree->elementify();

    # Extract the body element from the elementified tree
    my @body = $html_tree->look_down(""_tag"", ""body"");

    # The body Contents variable
    my $bodyContents = """";

    # Fetch the body contents, removes the tags
    foreach my $elem (@body)
    {
        $bodyContents.= $elem->as_trimmed_text();
    }

    # Removes all the non ASCII Chars from the text
    $bodyContents =~ tr/\x80-\xFF//d;

    my @bodyElements = split /[-<>.,~\s+]/, $bodyContents;
    my @bodyElementsScaleRef = split /\s+/, $bodyContents;

    my $line_number = 0;
    my $scale_key_info_linenumber = 0;
    
    # One pass to get the scale
    foreach (@bodyElementsScaleRef) {
       my $elem = $_;
       
       chomp $elem;
       
       if ($elem =~ ""Scale"") {
          # According to the nature of the inputs, the scale resides in the next line
          $scale_key_info_linenumber = $line_number + 1;
       }
       
       $line_number += 1;
    }

    # Reset line number for second pass
    $line_number = 0;

    # Second pass for parsing notestream and lyrics stream
    foreach (@bodyElements)
    {
       my $elem = $_;
       
       chomp $elem;
       
       if (length($elem) == 1 and $elem =~ m/[a-zA-Z]/ and exists $note_map{lc($elem)}){
          push @noteStream, lc($elem);
       } elsif (length($elem) == 2 and $elem =~ m/[a-zA-Z]#/ and exists $note_map{lcfirst($elem)}) {
          push @noteStream, lcfirst($elem);
       } elsif (length($elem) == 2 and $elem =~ m/[a-zA-Z]b/) {
          push @noteStream, lcfirst($elem);
       } elsif ($elem =~ ""Scale"") {
          # This is done in pass 1 so continue
          $line_number += 1;
          next;
       } elsif(!exists $metaDataWordHashMap{$elem}) {
      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GJPwbp
code,"use warnings;
use strict;


print ""\n================ step 4: generate summary tables from ntfreq files ===========\n\n"";
my ($ntfreqPath, $outPath, $refFasta) = load_arg(\@ARGV);

if ($ntfreqPath eq 'NULL'){
	help_info();
	die ""\n[error] folder of *ntfreq files is invalid.\n"";
}
if ($refFasta eq 'NULL'){
	help_info();
	die ""\n[error] reference genome fasta file required.\n"";
}

$ntfreqPath =~ s/\/$// if ($ntfreqPath =~ /\/$/);

my @files = <$ntfreqPath/*ntfreq>;
print ""\n*** Generate summary tables ***\n\nInput folder: $ntfreqPath\n\t$ntfreqPath including "".@files."" *ntfreq file(s).\n"";

if (! -d $outPath){
	print ""Output folder: $outPath\n\t$outPath does not exist, mkdir.\n"";
	system ""mkdir $outPath"";
} else {
	print ""Output folder: $outPath\n"";
}


my ($genome, $genomeLen) = get_genome_len($refFasta);
print ""\nReference genome: $genome\nGenome size: $genomeLen bp\n\n"";

my @sites = 1..$genomeLen; # length from the reference fasta


# $rh_all->{site}->{samp}->{'cov'}
# $rh_all->{site}->{samp}->{'cov'}
my $rh_all;
my $rh_samp;
my $rh_sample2pos;
my @metrics;
for (my $i = 0; $i < @files; $i++){
	print ""#"",$i+1,"": loading $files[$i]...\n"";
	if(-d $files[$i]){
		print ""\t[warning] $files[$i] is a folder, skip.\n"";
		next;
	}
	if ($files[$i] =~ /\/*([\w\d\-]+)\./){ # || $files[$i] =~ /([\w\d\-]+)\.0504\.xls/) {
	    my $samp = $1;
	    my $rh_siteinfo = read_ntfreq($files[$i]);
	    my @pos = keys %$rh_siteinfo;
	    if (defined $rh_samp->{$samp}){
			print ""\t[idRepeatWarning] sample ID repeated: $samp\n"";#$files[$i]\n$rh_samp->{$samp}\n"";
			if (defined $pos[0] && @pos > $rh_sample2pos->{$samp}){
				print ""\t[idRepeatWarning] select $files[$i] (posNum="".@pos."")\n\t[idRepeatWarning] overwrite values from $rh_samp->{$samp} (posNum="".$rh_sample2pos->{$samp}."")\n"";
		    		$rh_samp->{$samp}        = $files[$i];
				$rh_sample2pos->{$samp}  = @pos;
			} else {
				print ""\t[idRepeatWarning] skip $files[$i] (posNum="".@pos."")\n\t[idRepeatWarning] keep values from $rh_samp->{$samp} (posNum="".$rh_sample2pos->{$samp}."")\n"";
				next;
			}
	    } else {
	    	$rh_samp->{$samp} = $files[$i];
			$rh_sample2pos->{$samp} = @pos;
        }
		
	    @metrics = sort keys %{$rh_siteinfo->{$pos[0]}} if (! defined $metrics[1]);
	    for (my $p = 0; $p < @sites; $p++){
       		if (defined $rh_siteinfo->{$sites[$p]}){
     		       $rh_all->{$sites[$p]}->{$samp} = $rh_siteinfo->{$sites[$p]};
  	        } else {
          	       #$rh_all->{$sites[$p]}->{$samp} = ""na"";
		 	}
        }
	    print ""\tsampID = $samp, valid pos number = "".@pos.""\n"";
	} else {
		die ""Cannot extract sample id from file name: $files[$i]\n"";
	}
}

print ""\n"";
my @samps = sort keys %$rh_samp;
for (my $i = 0; $i < @metrics; $i ++){
	print ""# output to $outPath/$metrics[$i].bigtables.txt\n"";
	open OUT, ""> $outPath/$metrics[$i].bigtables.txt"" or die ""$!: $metrics[$i] output error\n"";
	print OUT ""#$metrics[$i]\t"";
	for (my $j = 0; $j < @samps; $j++){
		print OUT ""$samps[$j]\t"";
	} print OUT ""\n"";
	for (my $p = 0; $p < @sites; $p++){
		print OUT $sites[$p].""\t"";
		for (my $j = 0; $j < @samps; $j++){
			if (defined $rh_all->{$sites[$p]}->{$samps[$j]}->{$metrics[$i]}) {
				print OUT $rh_all->{$sites[$p]}->{$samps[$j]}->{$metrics[$i]}.""\t"";
			} else {
				print OUT ""na\t"";
			}
		} print OUT ""\n"";
	}
	close OUT;
}


# =======================================================
sub load_arg {
	my @args   = @{$_[0]};
	my $input  = 'NULL';
	my $output = ""./big_tables"";
	my $reffa  = ""NULL"";
	if (@args < 4){
		print ""[error] invalid arg.\n"";
		help_info();
		die;
		return ($input, $output, $reffa);
	}
	for(my $i = 0; $i < @args; $i+=2){
		if ($args[$i] eq '-in'){
			if ( !(-d $args[$i+1])){
				print ""\n[error] the folder \""$args[$i+1]\"" does not exist.\n"";
				help_info();
				die;
				return ($input, $output, $reffa);
			} else{
				$input  = $args[$i+1];
			}
		} elsif ($args[$i] eq '-out'){
			$output = $args[$i+1];
		} elsif ($args[$i] eq '-ref'){
			$reffa = $args[$i+1];
		} else {
			print ""[error]: cannot recognize option $args[$i].\n"";
			help_info();
			return ($input, $output, $reffa);
		}
	}
	return ($input, $output, $reffa);
}


sub help_info{
	print ""\n*** Generate summary tables from ntfreq files ***\n"";
	print ""\nUsage:\tperl f_generate_summary_tables.pl -in <ntfreq dir> -ref <ref fasta> [-out output_path ]\n"";
	print ""\nOptions:\n\t-in\t\tthe path where *ntfreq files are.\n"";
	print ""\t-ref\t\tthe reference fasta file which is used to generate mpileup files.\n"";
	print ""\t-out\t\tpath to output summary tables. Default = ./big_tables\n"";
}


# read a given mpipeup2ntfreq file
sub read_ntfreq{
	open FP, ""$_[0]"" or die ""sub read_ntfreq, $!: $_[0]\n"";
	my $rh_siteinfo;
	my @headers;
	my $DEBUG = 0; 
#chr	pos	ref	dep(mpileup)	dep(-indel)	ntfreqPatt	A	G	C	T	tot(Q20)	Fa	Fg	Fc	Ft	A5'/3'	G5/3	C5/3	T5/3	A5'(na_if_dep<5)	G5	C5	T5	entropy
	while (<FP>){
        	chomp;
		if (/^#/){
			s/^#//g;
			@headers = split /\s+/,$_;
		",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jbSxTF
code,"#
#
# Copyright (c) 2008 Marcus Huewe
# Copyright (c) 2008 Martin Mohring
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING); if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
################################################################
#
# The Download on Demand Metadata Parser for rpm md files (""primary.xml"" files)
#

package Meta::Rpmmd;
use strict;
use warnings;
use XML::Parser;

sub parse {
  my ($fn, $opts) = @_;
  my $h = rpmmdhandler->new(@{$opts->{'arch'}});
  my $p = XML::Parser->new(Handlers => {
                            Start => sub { return $h->start_handler(@_); },
                            End => sub { return $h->end_handler(@_); },
                            Char => sub { return $h->char_handler(@_); },
                           }, ErrorContext => 2);
  eval {
    $p->parsefile($fn);
  };
  die(""parse: $@"") if $@;
  return $h->getrepodata();
}

1;

package rpmmdhandler;
use strict;
use warnings;
use Data::Dumper;

sub new {
  my ($class, @arch) = @_;
  my $self = {};
  $self->{'repodata'} = {};
  $self->{'pack'} = {};
  $self->{'arch'} = [ @arch ]; # XXX: are there cases where we want to mix i586 and i686?
  $self->{'reqprov'} = ();
  $self->{'curchar'} = '';
  $self->{'attrs'} = [ qw(version location rpm:entry size) ];
  $self->{'chars'} = [ qw(name arch rpm:sourcerpm) ];
  return bless($self, $class);
}

sub addversrel {
  my ($self, $attrs) = @_;
  $self->{'pack'}->{'version'} = $attrs->{'ver'};
  $self->{'pack'}->{'release'} = $attrs->{'rel'};
  $self->{'pack'}->{'epoch'} = $attrs->{'epoch'} if exists $attrs->{'epoch'} && $attrs->{'epoch'} != 0;
}

sub addreqprov {
  my ($self, $attrs) = @_;
  my %flags = ( 'EQ' => '=', 'LE' => '<=', 'GE' => '>=', 'LT' => '<', 'GT' => '>' );
  my $name = $attrs->{'name'};
  unless ($name =~ /^(rpmlib\(|\/)/) {
    $name .= exists $attrs->{'flags'} ? "" $flags{$attrs->{'flags'}} "" : """";
    $name .= exists $attrs->{'epoch'} && $attrs->{'epoch'} != 0 ? ""$attrs->{'epoch'}:"" : """";
    $name .= exists $attrs->{'ver'} ? $attrs->{'ver'} : """";
    $name .= exists $attrs->{'rel'} ? ""-$attrs->{'rel'}"" : """";
    push @{$self->{'reqprov'}}, $name;
  }
}

sub addlocation {
  my ($self, $attrs) = @_;
  $self->{'pack'}->{'path'} = $attrs->{'href'};
}

sub addsize {
  my ($self, $attrs) = @_;
  $self->{'pack'}->{'id'} = ""-1/$attrs->{'package'}/-1""; # XXX: the <time /> tag provides time etc. but do we really need it?
}

sub getrepodata {
  my ($self) = @_;
  return $self->{'repodata'};
}

# XML::Parser handlers

sub start_handler {
  my ($self, $e, $name, %attrs) = @_;
  $self->{'pack'}->{'hdrmd5'} = ""0"" if $name eq 'package';
  return unless grep { $name eq $_ } @{$self->{'attrs'}};
  $self->addversrel(\%attrs) if $name eq 'version';
  $self->addreqprov(\%attrs) if $name eq 'rpm:entry';
  $self->addlocation(\%attrs) if $name eq 'location';
  $self->addsize(\%attrs) if $name eq 'size';
}

sub end_handler {
    my %cando = (
	'armv4l'  => ['arm', 'armel',                                                                                                                   'noarch'],
	'armv5l'  => ['arm', 'armel', 'armv5el', 'armv5tel', 'armv5tevl' ,                                                                              'noarch'],
	'armv6l'  => ['arm', 'armel',                                                   'armv6l', 'armv6el',                                            'noarch'],
	'armv7l'  => ['arm', 'armel',                                                                                    'armv7l', 'armv7el',           'noarch'],
	'armv5el' => ['arm', 'armel', 'armv5el', 'armv5tel', 'armv5tevl' ,                                                                              'noarch'],
	'armv6el' => ['arm', 'armel',                                                   'armv6l', 'armv6el',                                            'noarch'],
	'armv7el' => ['arm', 'armel',                                                                                    'armv7l', 'armv7el',           'noarch'],
	'armv7hl' => ['armhf', 'armv7hl', 'armv7nhl',                                 'noarch'],
	'ppc'     => ['ppc',                                                          'noarch'],
	'ppc64'   => ['ppc', 'ppc64',                                                 'noarch'],
	'sh4'     => ['sh4',                                                          'noarch'],
	'ia64'    => ['ia64',                                                         'noarch'],
	's390'    => ['s390',                                                         'noarch']",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",x4Xjl-
code,"# --
# Copyright (C) 2001-2015 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

package Kernel::System::Web::Request;

use strict;
use warnings;

use CGI ();
use CGI::Carp;
use File::Path qw();

our @ObjectDependencies = (
    'Kernel::Config',
    'Kernel::System::CheckItem',
    'Kernel::System::Encode',
);

=head1 NAME

Kernel::System::Web::Request - global CGI interface

=head1 SYNOPSIS

All cgi param functions.

=head1 PUBLIC INTERFACE

=over 4

=cut

=item new()

create param object. Do not use it directly, instead use:

    use Kernel::System::ObjectManager;
    local $Kernel::OM = Kernel::System::ObjectManager->new(
        'Kernel::System::Web::Request' => {
            WebRequest   => CGI::Fast->new(), # optional, e. g. if fast cgi is used
        }
    );
    my $ParamObject = $Kernel::OM->Get('Kernel::System::Web::Request');

If Kernel::System::Web::Request is instantiated several times, they will share the
same CGI data (this can be helpful in filters which do not have access to the
ParamObject, for example.

If you need to reset the CGI data before creating a new instance, use

    CGI::initialize_globals();

before calling Kernel::System::Web::Request->new();

=cut

sub new {
    my ( $Type, %Param ) = @_;

    # allocate new hash for object
    my $Self = {};
    bless( $Self, $Type );

    # get config object
    my $ConfigObject = $Kernel::OM->Get('Kernel::Config');

    # max 5 MB posts
    $CGI::POST_MAX = $ConfigObject->Get('WebMaxFileUpload') || 1024 * 1024 * 5;    ## no critic

    # query object (in case use already existing WebRequest, e. g. fast cgi)
    $Self->{Query} = $Param{WebRequest} || CGI->new();

    return $Self;
}

=item Error()

to get the error back

    if ( $ParamObject->Error() ) {
        print STDERR $ParamObject->Error() . ""\n"";
    }

=cut

sub Error {
    my ( $Self, %Param ) = @_;

    # Workaround, do not check cgi_error() with perlex, CGI module is not
    # working with perlex.
    if ( $ENV{'GATEWAY_INTERFACE'} && $ENV{'GATEWAY_INTERFACE'} =~ /^CGI-PerlEx/ ) {
        return;
    }

    return if !$Self->{Query}->cgi_error();
    ## no critic
    return $Self->{Query}->cgi_error() . ' - POST_MAX=' . ( $CGI::POST_MAX / 1024 ) . 'KB';
    ## use critic
}

=item GetParam()

to get single request parameters. By default, trimming is performed on the data.

    my $Param = $ParamObject->GetParam(
        Param => 'ID',
        Raw   => 1,       # optional, input data is not changed
    );

=cut

sub GetParam {
    my ( $Self, %Param ) = @_;

    my $Value = $Self->{Query}->param( $Param{Param} );

    # Fallback to query string for mixed requests.
    my $RequestMethod = $Self->{Query}->request_method() // '';
    if ( $RequestMethod eq 'POST' && !defined $Value ) {
        $Value = $Self->{Query}->url_param( $Param{Param} );
    }

    $Kernel::OM->Get('Kernel::System::Encode')->EncodeInput( \$Value );

    my $Raw = defined $Param{Raw} ? $Param{Raw} : 0;

    if ( !$Raw ) {

        # If it is a plain string, perform trimming
        if ( ref \$Value eq 'SCALAR' ) {
            $Kernel::OM->Get('Kernel::System::CheckItem')->StringClean(
                StringRef => \$Value,
                TrimLeft  => 1,
                TrimRight => 1,
            );
        }
    }

    return $Value;
}

=item GetParamNames()

to get names of all parameters passed to the script.

    my @ParamNames = $ParamObject->GetParamNames();

Example:

Called URL: index.pl?Action=AdminSysConfig;Subaction=Save;Name=Config::Option::Valid

    my @ParamNames = $ParamObject->GetParamNames();
    print join "" :: "", @ParamNames;
    #prints Action :: Subaction :: Name

=cut

sub GetParamNames {
    my $Self = shift;

    # fetch all names
    my @ParamNames = $Self->{Query}->param();

    # Fallback to query string for mixed requests.
    my $RequestMethod = $Self->{Query}->request_method() // '';
    if ( $RequestMethod eq 'POST' ) {
        my %POSTNames;
        @POSTNames{@ParamNames} = @ParamNames;
        my @GetNames = $Self->{Query}->url_param();
        GETNAME:
        for my $GetName (@GetNames) {
            next GETNAME if !defined $GetName;
            push @ParamNames, $GetName if !exists $POSTNames{$GetName};
        }
    }

    for my $Name (@ParamNames) {
        $Kernel::OM->Get('Kernel::System::Encode')->EncodeInput( \$Name );
    }

    return @ParamNames;
}

=item GetArray()

to get array request parameters.
By default, trimming is performed on the data.

    my @Param = $ParamObject->GetArray(
        Param => 'ID',
        Raw   => 1,     # optional, input data is not changed
    );

=cut

sub GetArray {
    my ( $Self, %Param ) = @_;

    my @Values = $Self->{Query}->multi_param( $Param{Param} );

    # Fallback to query string for mixed requests.
    my $RequestMethod = $Self->{Query}->request_method() // '';
    if ( $RequestMethod eq 'POST' && !@Values ) {
        @Values = $Self->{Query}->",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6vbwrl
code,"#!/usr/bin/perl

package LJ::FBUpload;
use strict;

require ""$ENV{LJHOME}/cgi-bin/ljconfig.pl"";
require ""$ENV{LJHOME}/cgi-bin/ljlib.pl"";
use MIME::Words ();
use XML::Simple;
use IO::Handle;
use LWP::UserAgent;
use URI::Escape;
use Digest::MD5 ();
use File::Basename ();

*hash = \&Digest::MD5::md5_hex;

# This has bitten us one too many times.  
# Don't let startup continue unless LWP is ok.
die ""* Installed version of LWP is too old! *"" if LWP->VERSION < 5.803;

sub make_auth
{
    my ($chal, $password) = @_;
    return unless $chal && $password;
    return ""crp:$chal:"" . hash($chal . hash($password));
}

sub get_challenge
{
    my ($u, $ua, $err) = @_;
    return unless $u && $ua;

    my $req = HTTP::Request->new(GET => ""$LJ::FB_SITEROOT/interface/simple"");
    $req->push_header(""X-FB-Mode"" => ""GetChallenge"");
    $req->push_header(""X-FB-User"" => $u->{'user'});
    
    my $res = $$ua->request($req);
    if ($res->is_success()) {

        my $xmlres = XML::Simple::XMLin($res->content);
        my $methres = $xmlres->{GetChallengeResponse};
        return $methres->{Challenge};

    } else {
        $$err = $res->content();
        return;
    }
}

# returns FB protocol data structure, regardless of FB
# success or failure.  it's the callers responsibility
# to check the structure for FB return values.
#
# on http failure, returns numeric http error code,
# and sets $rv reference with errorstring.
#
# returns undef on unrecoverable failure.
#
# opts: { path    => path to image on disk,
#                    or title to use if 'rawdata' isn't on disk.
#         rawdata => optional image data scalar ref
#         imgsec  => bitmask for image security
#         caption => optional image description
#         galname => gallery to upload image to }
sub do_upload 
{
    my ($u, $rv, $opts) = @_;
    unless ($u && $opts->{'path'}) {
        $$rv = ""Invalid parameters to do_upload()"";
        return;
    }

    my $ua = LWP::UserAgent->new;
    $ua->agent(""LiveJournal_FBUpload/0.2"");

    my $err;
    my $chal = get_challenge($u, \$ua, \$err);
    unless ($chal) {
        $$rv = ""Error getting challenge from FB server: $err"";
        return;
    }

    my $rawdata = $opts->{'rawdata'};
    unless ($rawdata) {
        # no rawdata was passed, so slurp it in ourselves
        unless (open (F, $opts->{'path'})) {
            $$rv = ""Couldn't read image file: $!\n"";
            return;
        }
        binmode(F);
        my $data;
        { local $/ = undef; $data = <F>; }
        $rawdata = \$data;
        close F;
    }

    # convert strings to security masks/
    # default to private on unknown strings.
    # lack of an imgsec opt means public.
    $opts->{imgsec} ||= 255;
    unless ($opts->{imgsec} =~ /^\d+$/) {
        my %groupmap = (
            private  => 0,   regusers => 253,
            friends  => 254, public => 255
        );
        $opts->{imgsec} = 'private' unless $groupmap{ $opts->{imgsec} };
        $opts->{imgsec} = $groupmap{ $opts->{imgsec} };
    }

    my $basename = File::Basename::basename($opts->{'path'});
    my $length = length $$rawdata;

    my $req = HTTP::Request->new(PUT => ""$LJ::FB_SITEROOT/interface/simple"");
    my %headers = (
        'X-FB-Mode'                    => 'UploadPic',
        'X-FB-UploadPic.ImageLength'   => $length,
        'Content-Length'               => $length,
        'X-FB-UploadPic.Meta.Filename' => $basename,
        'X-FB-UploadPic.MD5'           => hash($$rawdata),
        'X-FB-User'                    => $u->{'user'},
        'X-FB-Auth'                    => make_auth( $chal, $u->{'password'} ),
        ':X-FB-UploadPic.Gallery._size'=> 1,
        'X-FB-UploadPic.PicSec'        => $opts->{'imgsec'},
        'X-FB-UploadPic.Gallery.0.GalName' => $opts->{'galname'} || 'LJ_emailpost',
        'X-FB-UploadPic.Gallery.0.GalSec'  => 255
    );

    $headers{'X-FB-UploadPic.Meta.Description'} = $opts->{caption}
      if $opts->{caption};

    $req->push_header($_, $headers{$_}) foreach keys %headers;

    $req->content($$rawdata);
    my $res = $ua->request($req);

    my $res_code = $1 if $res->status_line =~ /^(\d+)/;
    unless ($res->is_success) {
        $$rv = ""HTTP error uploading pict: "" . $res->content();
        return $res_code;
    }

    my $xmlres;
    eval { $xmlres = XML::Simple::XMLin($res->content); };
    if ($@) {
        $$rv = ""Error parsing XML: $@"";
        return;
    }
    my $methres = $xmlres->{UploadPicResponse};
    $methres->{Title} = $basename;

    return $methres;
}

# args:
#       $u,
#       arrayref of { title, url, width, height, caption }
#       optional opts overrides hashref.
#               (if not supplied, userprops are used.)
# returns: html string suitable for entry post body
# TODO: Hook this like the Fotobilder ""post to journal""
#       caption posting page.  More pretty. (layout keywords?)
sub make_html
{
    my ($u, $images, $opts) = @_;
    my ($icount, $html);

    $icount = scalar @$images;
    return """" unless $icount;

    # Merge overrides with userprops that might
    # have been passed in.
    $opts = {} unless $o",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vuluqi
code,"use utf8;
package GenomePropertiesDB::Result::GoTerm;

# Created by DBIx::Class::Schema::Loader
# DO NOT MODIFY THE FIRST PART OF THIS FILE

=head1 NAME

GenomePropertiesDB::Result::GoTerm

=cut

use strict;
use warnings;

use base 'DBIx::Class::Core';

=head1 TABLE: C<go_terms>

=cut

__PACKAGE__->table(""go_terms"");

=head1 ACCESSORS

=head2 go_id

  data_type: 'varchar'
  is_nullable: 0
  size: 10

=head2 term

  data_type: 'longtext'
  is_nullable: 0

=head2 category

  data_type: 'varchar'
  is_nullable: 0
  size: 45

=cut

__PACKAGE__->add_columns(
  ""go_id"",
  { data_type => ""varchar"", is_nullable => 0, size => 10 },
  ""term"",
  { data_type => ""longtext"", is_nullable => 0 },
  ""category"",
  { data_type => ""varchar"", is_nullable => 0, size => 45 },
);

=head1 PRIMARY KEY

=over 4

=item * L</go_id>

=back

=cut

__PACKAGE__->set_primary_key(""go_id"");

=head1 RELATIONS

=head2 gp_steps_to_go

Type: has_many

Related object: L<GenomePropertiesDB::Result::GpStepToGo>

=cut

__PACKAGE__->has_many(
  ""gp_steps_to_go"",
  ""GenomePropertiesDB::Result::GpStepToGo"",
  { ""foreign.go_id"" => ""self.go_id"" },
  { cascade_copy => 0, cascade_delete => 0 },
);

=head2 ipr_steps_to_go

Type: has_many

Related object: L<GenomePropertiesDB::Result::IprStepToGo>

=cut

__PACKAGE__->has_many(
  ""ipr_steps_to_go"",
  ""GenomePropertiesDB::Result::IprStepToGo"",
  { ""foreign.go_id"" => ""self.go_id"" },
  { cascade_copy => 0, cascade_delete => 0 },
);


# Created by DBIx::Class::Schema::Loader v0.07042 @ 2018-07-23 10:17:14
# DO NOT MODIFY THIS OR ANYTHING ABOVE! md5sum:4J/HJC00MJTIsXYOC4swPQ


# You can replace this text with custom code or comments, and it will be preserved on regeneration
1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",R-QlNe
code,"=encoding utf8

=head1 NAME

virt-v2v.conf - configuration file for virt-v2v

=head1 DESCRIPTION

C<virt-v2v.conf> describes:

=over

=item *

a set of target profiles which pre-define a set of output options.

=item *

how to map virtual network interface connections when importing them from
another environment.

=item *

software which can be installed by virt-v2v during the conversion process.

=back

=head1 FORMAT

The configuration file is an XML document whose root element is
E<lt>virt-v2vE<gt>.

=head2 Target Profiles

A target profile is used to group a set of configuration options defining a
specific destination for a conversion. A user can specify a target profile in
place of the equivalent command line options.

A target profile is defined by an element in virt-v2v.conf which is a child of
the top-level virt-v2v element. For example:

 <profile name='kvm1'>
   <method>libvirt</method>
   <storage format='raw' allocation='sparse'>default</storage>
   <network type='default'>
     <network type='network' name='red'/>
   </network>
   <network type='bridge' name='xenbr1'>
     <network type='network' name='green'/>
   </network>
 </profile>

A target profile is identified by its I<name> attribute. Allowed elements are:

=over

=item method

The output method, equivalent to the I<-o> command line option. This element is
required.

=item storage

The output storage location, equivalent to the I<-os> command line option. This
element is required.

I<storage> can optionally have I<format> and I<allocation> attributes. If
specified, these are equivalent to the I<-of> and I<-oa> command line options
respectively.

=item network

A set of network mappings specific to this profile. See L</Mapping network
interface connections> for detail of the format of this element.

Network mappings specified in the selected profile will be used in preference to
top-level network mappings. A specific, matching top-level mapping will still be
used in preference to a default specified in a profile.

=back

=head2 Mapping network interface connections

When importing a guest from a different machine and/or hypervisor, it is likely
that the name of the virtual interface its network devices were connected to
will change. For example, a typical Xen guest will be connected to a bridge
device called xenbrN. This bridge is created by Xen and will not exist locally
by default.

virt-v2v can change these on import to connect to an appropriate local
interface. The mapping is specified by the E<lt>networkE<gt> element, which
is a child of the root element. The configuration can specify any number of
E<lt>networkE<gt> elements. E<lt>networkE<gt> has 2 attributes:

=over

=item type

I<type> can be:

=over

=item bridge

A bridge to a host network interface.

=item network

A managed virtual network.

=item default

A type which will match any network if there is no specific match.

=back

For Xen and ESX guests the source type will typically be 'bridge'. A
configuration may only contain a single default mapping.

=item name

name specifies the name of the given network or bridge. A default mapping does
not have a name.

=back

The mapping is specified by a nested E<lt>networkE<gt> element.

The following example specifies that a guest interface which bridged to 'xenbr1'
before conversion should be changed to connect to the local bridge called 'br0'.
Any other network interface should be changed to connect to the local managed
network called 'default':

 <network type='bridge' name='xenbr1'>
   <network type='bridge' name='br0'/>
 </network>

 <network type='default'>
   <network type='network' name='default'/>
 </network>

=head2 Specifying software to be installed

virt-v2v may have to install software in a guest during the conversion process
to ensure it boots. An example is replacing a Xen paravirtualised kernel with a
normal kernel. This software will be specific to the guest operating system.

=head3 Capabilities

A capability describes the set of software required for a specific goal, for
example VirtIO support.  A capability describes only direct dependencies.
Transitive dependencies will be resolved by the installation method, for example
yum or L</""Local Installation"">.

E<lt>capabilityE<gt> is a child of the root element. There can be any number of
E<lt>capabilityE<gt> elements. See L</Searching> for a description of the
attributes of E<lt>capabilityE<gt> and how they are matched.

Dependencies are specified in the E<lt>depE<gt> element, which has the following
attributes:

=over

=item name

The symbolic name of a dependency. On an rpm-based system this will be the
package name. This attribute is required.

=item minversion

The minimum required version of the software. For rpm-based systems this must be
specified as [epoch:]version[-release]. This attribute is required.

=item ifinstalled

A dependency must normally be installed if it is not present, or upgraded if it
present but too old. If I<ifinstalled> is 'yes', the dependency will be upgraded
if is present but too old, but not installed if it is not already present.

=back

=head3 Loca",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DHic3Z
code,"package Paws::ServiceCatalog::UsageInstruction;
  use Moose;
  has Type => (is => 'ro', isa => 'Str');
  has Value => (is => 'ro', isa => 'Str');
1;

### main pod documentation begin ###

=head1 NAME

Paws::ServiceCatalog::UsageInstruction

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ServiceCatalog::UsageInstruction object:

  $service_obj->Method(Att1 => { Type => $value, ..., Value => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ServiceCatalog::UsageInstruction object:

  $result = $service_obj->Method(...);
  $result->Att1->Type

=head1 DESCRIPTION

Additional information provided by the administrator.

=head1 ATTRIBUTES


=head2 Type => Str

  The usage instruction type for the value.


=head2 Value => Str

  The usage instruction value for this type.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ServiceCatalog>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: https://github.com/pplu/aws-sdk-perl

Please report bugs to: https://github.com/pplu/aws-sdk-perl/issues

=cut

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",elAXy7
code,"my class X::NYI { ... }

my role Stringy { }

multi sub infix:<eqv>(Stringy:D \a, Stringy:D \b) {
    ?(a =:= b || (a.WHAT =:= b.WHAT && (a cmp b) == 0))  # XXX RT #128092
}

proto sub prefix:<~>($) is pure { * }
multi sub prefix:<~>(\a)          { a.Stringy }
multi sub prefix:<~>(int $a)      { nqp::p6box_s($a) }
multi sub prefix:<~>(num $a)      { nqp::p6box_s($a) }

proto sub infix:<~>(|) is pure { * }
multi sub infix:<~>($x = '')       { $x.Stringy }
multi sub infix:<~>(\a, \b)        { a.Stringy ~ b.Stringy }

proto sub infix:<x>(Mu $?, Mu $?)  is pure { * }
multi sub infix:<x>() { Failure.new(""No zero-arg meaning for infix:<x>"") }
multi sub infix:<x>($x)            { $x.Stringy }
multi sub infix:<x>($s, Num:D $n) {
    $n == Inf
      ?? Failure.new(X::NYI.new(:feature('Cat object')))
      !! $s.Stringy x $n.Int;
}
multi sub infix:<x>($s, $n)        { $s.Stringy x ($n.Int // 0) }

proto sub infix:<leg>(Mu $?, Mu $?) is pure { * }
multi sub infix:<leg>(\a, \b)      { a.Stringy cmp b.Stringy }

proto sub infix:<eq>(Mu $?, Mu $?)  is pure { * }
multi sub infix:<eq>($x?)          { Bool::True }
multi sub infix:<eq>(\a, \b)       { a.Stringy eq b.Stringy }

proto sub infix:<ne>(Mu $?, Mu $?) is pure { * }
multi sub infix:<ne>($x?)            { Bool::True }
multi sub infix:<ne>(Mu \a, Mu \b)   { a !eq b }
multi sub infix:<ne>(Any \a, Any \b) { a.Stringy ne b.Stringy }

proto sub infix:<lt>(Mu $?, Mu $?) is pure { * }
multi sub infix:<lt>($x?)          { Bool::True }
multi sub infix:<lt>(\a, \b)       { a.Stringy lt b.Stringy }

proto sub infix:<le>(Mu $?, Mu $?) is pure { * }
multi sub infix:<le>($x?)          { Bool::True }
multi sub infix:<le>(\a, \b)       { a.Stringy le b.Stringy }

proto sub infix:<gt>(Mu $?, Mu $?) is pure { * }
multi sub infix:<gt>($x?)          { Bool::True }
multi sub infix:<gt>(\a, \b)       { a.Stringy gt b.Stringy }

proto sub infix:<ge>(Mu $?, Mu $?) is pure { * }
multi sub infix:<ge>($x?)          { Bool::True }
multi sub infix:<ge>(\a, \b)       { a.Stringy ge b.Stringy }

proto sub infix:<~|>(Mu $?, Mu $?) is pure { * }
multi sub infix:<~|>($x = '')      { $x.Stringy }
multi sub infix:<~|>(\a, \b)       { a.Stringy ~| b.Stringy }

proto sub infix:<~^>(Mu $?, Mu $?)  is pure { * }
multi sub infix:<~^>($x = '')      { $x.Stringy }
multi sub infix:<~^>(\a, \b)       { a.Stringy ~^ b.Stringy }

proto sub infix:<~&>(Mu $?, Mu $?) is pure { * }
multi sub infix:<~&>() { Failure.new(""No zero-arg meaning for infix:<~&>"") }
multi sub infix:<~&>($x)           { $x.Stringy }
multi sub infix:<~&>(\a, \b)       { a.Stringy ~& b.Stringy }

proto sub prefix:<~^>(Mu $) is pure { * }
multi sub prefix:<~^>(\a)         { ~^ a.Stringy }

# vim: ft=perl6 expandtab sw=4
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Hkexmj
code,"#!/usr/bin/perl

use strict;
use warnings;
use Math::Trig;
use Text::Template;

# open up a variable as a file for easy output of latex code
my $tikz;
open(my $fh, '>', \$tikz) or die ""Failed to open pipe: $!"";

# REPL of the graph which is just a csv
my $last = 'A';
my $color = getRndStr();
print $fh ""\\definecolor{"", $color, ""}{rgb}{"", getRndRGB() , ',',
    getRndRGB(), ',', getRndRGB(), ""}\n"";
while(<>){
    chomp;
    my @arr = split /,/;
    if(!($arr[0] eq $arr[1])){
        print $fh ""\\Edge[label="", $arr[2], ',style={', $color,
            ',->,thick}](', $arr[0], "")("", $arr[1], "")\n"";
    }else{
        my @dir = direction($arr[0]);
        print $fh ""\\Loop[dist=10cm, dir="", $dir[0], "", label="",
            $arr[2], ',style={', $color, ',->,very thick}](',
            $arr[0], ""."", $dir[1], "")\n"";
    }
    # change color on letter change
    if(!($last eq $arr[0])){
        $color = getRndStr();
        print $fh ""\\definecolor{"", $color, ""}{rgb}{"", getRndRGB() , ',',
            getRndRGB(), ',', getRndRGB(), ""}\n"";
    }
    $last = $arr[0];
}
close $fh;

# Fill in the LaTeX templete
my $TemplateString = do{local $/; <main::DATA>};
my $templ = Text::Template->new(
    SOURCE => $TemplateString,
    TYPE => 'string',
    DELIMITERS => ['{!', '!}']
);
my %vars = (
    tikzPictureString => \$tikz,
    graphUnit => '18'
);
my $result = $templ->fill_in(HASH => \%vars);
print $result;

sub direction {
    #$_ = (ord($_) - ord('A'));
    #return ('NO', 'north') if($_ >= 0 && $_ <= 13);
    #return ('SO', 'south') if($_ > 13);
    $_ = (2 * pi * ((ord($_) - ord('A')) / 26));
    return ('EA','east') if (($_ >= 7*pi/4 && $_ <= 2*pi) or ($_ >= 0 && $_ < pi/4));
    return ('NO', 'north') if ($_ >= (pi/4) &&  $_ <= (3*pi/4));
    return ('WE', 'west') if ($_ >= (3*pi/4) && $_ <= (5*pi/4));
    return ('SO', 'south') if ($_ >= (5*pi/4) && $_ <= (7*pi/4));
}

sub getRndStr {
    my $string;
    for (0..7) { $string .= chr( int(rand(25) + 65) ); }
    return $string;
}

sub getRndRGB {
    return rand() * 0.45  + 0.25;
}

__DATA__
\documentclass[border=10pt]{standalone}

\usepackage{color}
\usepackage{tkz-graph}

\tikzset{
  LabelStyle/.style = { rectangle, rounded corners, draw,
                        minimum width = 1em, fill = yellow!50,
                        text = red, font = \bfseries },
  VertexStyle/.append style = { inner sep=3pt,
                                font = \Large\bfseries},
  EdgeStyle/.append style = {->} }
\thispagestyle{empty}
\begin{document}
\begin{tikzpicture}
  \SetGraphUnit{{! $graphUnit !}}
  \Vertices{circle}{A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z}
  {! $tikzPictureString !}
\end{tikzpicture}
\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RTR-4d
code,"#!/usr/bin/perl
# Copyright © 2011 Rafaël Carré <funman at videolanorg>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
#

use warnings;

if ($#ARGV != 0) {
    die ""Need exactly one argument"";
}

open F, ""+<$ARGV[0]""
    or die ""Can't open `$ARGV[0]'"";
binmode F;

seek F, 0x3c, 0;
my $offset = get_le(4);
seek F, $offset, 0;

if (get_le(4) != 0x00004550) { # IMAGE_NT_SIGNATURE
    die ""Not a NT executable"";
}

seek F, 20 + 70, 1;

my $flags = get_le(2);
seek F, -2, 1;

$flags |= 0x100;  # NX Compat
$flags |= 0x40;   # Dynamic Base

printf F ""%c%c"", $flags & 0xff,($flags >> 8) & 0xff;

close F;

sub get_le {
    my $bytes;
    read F, $bytes, $_[0];
    if (length $bytes ne $_[0]) {
        die ""Couldn't read"";
    }

    my $ret = 0;
    my @array = split //, $bytes;
    for (my $shift = 0, my $i = 0; $i < $_[0]; $i++, $shift += 8) {
        $ret += (ord $array[$i]) << $shift;
    }
    return $ret;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_jJocG
code,"=head1 Perl Reference

=head1 A Must Read!

This document was born because some users are reluctant to learn Perl,
prior to jumping into mod_perl.  I will try to cover some of the most
frequent pure Perl questions being asked at the list.

Before you decide to skip this chapter make sure you know all the
information provided here.  The rest of the Guide assumes that you
have read this chapter and understood it.







=head1 perldoc's Rarely Known But Very Useful Options

First of all, I want to stress that you cannot become a Perl hacker
without knowing how to read Perl documentation and search through it.
Books are good, but an easily accessible and searchable Perl reference
at your fingertips is a great time saver. It always has the up-to-date
information for the version of perl you're using.

Of course you can use online Perl documentation at the Web. The two
major sites are http://www.perldoc.com and
http://theoryx5.uwinnipeg.ca/CPAN/perl/.

The C<perldoc> utility provides you with access to the documentation
installed on your system.  To find out what Perl manpages are
available execute:


  % perldoc perl

To find what functions perl has, execute:

  % perldoc perlfunc

To learn the syntax and to find examples of a specific function, you
would execute (e.g. for C<open()>):

  % perldoc -f open

Note: In perl5.005_03 and earlier, there is a bug in this and the C<-q> 
options of C<perldoc>.  It won't call C<pod2man>, but will display the 
section in POD format instead.  Despite this bug it's still readable 
and very useful. 

The Perl FAQ (I<perlfaq> manpage) is in several sections.  To search
through the sections for C<open> you would execute:

  % perldoc -q open

This will show you all the matching Question and Answer sections,
still in POD format.

To read the I<perldoc> manpage you would execute:

  % perldoc perldoc






=head1 Tracing Warnings Reports

Sometimes it's very hard to understand what a warning is complaining
about.  You see the source code, but you cannot understand why some
specific snippet produces that warning.  The mystery often results
from the fact that the code can be called from different places if
it's located inside a subroutine.

Here is an example:

  warnings.pl
  -----------
  #!/usr/bin/perl -w
  
  use strict;
  
  correct();
  incorrect();
  
  sub correct{
    print_value(""Perl"");
  }
  
  sub incorrect{
    print_value();
  }
  
  sub print_value{
    my $var = shift;
    print ""My value is $var\n"";
  }

In the code above, print_value() prints the passed value.  Subroutine
correct() passes the value to print, but in subroutine incorrect() we
forgot to pass it. When we run the script:

  % ./warnings.pl

we get the warning:

  Use of uninitialized value at ./warnings.pl line 16.

Perl complains about an undefined variable C<$var> at the line that
attempts to print its value:

  print ""My value is $var\n"";

But how do we know why it is undefined? The reason here obviously is
that the calling function didn't pass the argument. But how do we know
who was the caller? In our example there are two possible callers, in
the general case there can be many of them, perhaps located in other
files.

We can use the caller() function, which tells who has called us, but
even that might not be enough: it's possible to have a longer sequence
of called subroutines, and not just two. For example, here it is sub
third() which is at fault, and putting sub caller() in sub second()
would not help us very much:

  sub third{
    second();
  }
  sub second{
    my $var = shift;
    first($var);
  }
  sub first{
    my $var = shift;
   print ""Var = $var\n""
  }

The solution is quite simple. What we need is a full calls stack trace
to the call that triggered the warning.

The C<Carp> module comes to our aid with its cluck() function. Let's
modify the script by adding a couple of lines.  The rest of the script
is unchanged.

  warnings2.pl
  -----------
  #!/usr/bin/perl -w
  
  use strict;
  use Carp ();
  local $SIG{__WARN__} = \&Carp::cluck;
  
  correct();
  incorrect();
  
  sub correct{
    print_value(""Perl"");
  }
  
  sub incorrect{
    print_value();
  }
  
  sub print_value{
    my $var = shift;
    print ""My value is $var\n"";
  }

Now when we execute it, we see:

  Use of uninitialized value at ./warnings2.pl line 19.
    main::print_value() called at ./warnings2.pl line 14
    main::incorrect() called at ./warnings2.pl line 7

Take a moment to understand the calls stack trace. The deepest calls
are printed first. So the second line tells us that the warning was
triggered in print_value(); the third, that print_value() was
called by subroutine, incorrect().

  script => incorrect() => print_value()

We go into C<incorrect()> and indeed see that we forgot to pass the
variable. Of course when you write a subroutine like C<print_value> it
would be a good idea to check the passed arguments before starting
execution. We omitted that step to contrive an easily debugged example.

Sure, you say, I could find that problem by simple inspection of the
code! 

Well, you're right. But I promise you that your tas",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",75ElhI
code,"{
    package GCLang::TR::GCImport::GCImportFolder;

    use utf8;
###################################################
#
#  Copyright 2005-2010 Christian Jodar
#
#  This file is part of GCstar.
#
#  GCstar is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  GCstar is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with GCstar; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
#
###################################################
    
    use strict;
    use base 'Exporter';
    use GCLang::GCLangUtils;

    our @EXPORT = qw(%lang);

    our %lang = (
        'Name' => 'Folder',
        'Recursive' => 'Browse sub-folders',
        'Suffixes' => 'Suffixes or extensions of the files',
        'SuffixesTooltip' => 'A comma-separated list of suffixes or extensions of files to consider',
        'Remove' => 'To be removed from names',
        'RemoveTooltip' => 'A comma-seperated list of words that should be removed from file names to create the fetched names',
        'Ask'=> 'Ask',
        'AskEnd'=> 'Ask all at end',
        'AddWithoutInfo'=> 'Add without infos',
        'DontAdd'=> 'Do not add',
        'TakeFirst' => 'Select first',
        'MultipleResult'=> 'Multiple results',
        'MultipleResultTooltip'=> 'What do we do when more than 1 result is return by the plugin',
        'RemoveWholeWord' => 'Remove only whole words',
        'NoResult'=> 'No results',
        'NoResultTooltip'=> 'What do we do when no search results is return by the plugin',
        'RemoveTooltipWholeWord' => 'Words will be removed only if they appear as an entire word',
        'RemoveRegularExpr' => 'Regular expression',
        'RemoveTooltipRegularExpr' => 'Consider that \'To be removed from names\' is a perl regular expression',
        'SkipFileAlreadyInCollection' => 'Add new files only',
        'SkipFileAlreadyInCollectionTooltip' => 'Add only files not already in the collection',
        'SkipFileNo' => 'No',
        'SkipFileFullPath' => 'based on full path',
        'SkipFileFileName' => 'based on file name',
        'SkipFileFileNameAndUpdate' => 'based on file name (but update path in collection)',
        'InfoFromFileNameRegExp' => 'Parse file name with this regular expression',
        'InfoFromFileNameRegExpTooltip' => 'Use this to retrieve infos from filename (applied after removing extension).\nLeave empty if not needed.\nKnown fields : \n$T:Title, $A:Alphabetised title, $Y:Release date, $S:Season, $E:Episode, $N:Alphabetised serie name, $x:Part number, $y: Total part number',

     );

    # As this plugin shares some values with ImportList, it adds them from it
    importTranslation('List');
}

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F1QZJw
code,"package Genome::Model::Tools::Sam::Deduplicator;

use strict;
use warnings;

use Genome;
use Workflow;
use File::Basename;
use IO::File;
use Bio::SeqIO;

class Genome::Model::Tools::Sam::Deduplicator
{
    is => 'Genome::Model::Tools::Sam',
    has_input => [
            sam_file            => {
                                    doc         => 'input file to deduplicate',
                                    is          => 'String',
                                   },
            deduplicated_file   => {
                                    doc         => 'file to write contaminations to',
                                    is          => 'String',
                                    is_output   => 1,
                                    is_optional => 1,
                                   },
            deduplicated_count  => {
                                    doc         => '# of reads deduplicated',
                                    is          => 'Integer',
                                    is_output   => 1,
                                    is_optional => 1,
                                   },
         ],
};

sub help_brief 
{
    ""remove duplicates from a file of reads"";
}

sub help_synopsis 
{
    return <<""EOS""
EOS
}

sub create 
{
    my $class = shift;

    my $self = $class->SUPER::create(@_);
    return $self;
}

sub execute 
{
    my $self = shift;
    my $sam_file = $self->sam_file;
    my $deduplicated_file = ($self->deduplicated_file ? $self->deduplicated_file : $sam_file . ""dedup"");
    unlink ($deduplicated_file) if (-e $deduplicated_file);
    my $sam_fh = Genome::Sys->open_file_for_reading($sam_file) or return;
    my $dd_fh = Genome::Sys->open_file_for_writing($deduplicated_file) or return;
    my $dedup_count = 0;


    my %reads;
    
    while (my $sam = $sam_fh->getline)
    { 
        #my ($chr, $pos, $cns_qual, $snp_qual, $map_qual, $rd_depth) = 
        $sam =~ m/^(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+/;    
        
        ($dd_fh->print($sam) and $reads{$10}++) unless ($reads{$10} and ++$dedup_count);
    }   

    $self->deduplicated_file($deduplicated_file);
    $self->deduplicated_count($dedup_count);

    return 1;
}

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DimlW8
code,"
package Class::MOP::Object;
BEGIN {
  $Class::MOP::Object::AUTHORITY = 'cpan:STEVAN';
}
{
  $Class::MOP::Object::VERSION = '2.0602';
}

use strict;
use warnings;

use Carp qw(confess);
use Scalar::Util 'blessed';

# introspection

sub meta {
    require Class::MOP::Class;
    Class::MOP::Class->initialize(blessed($_[0]) || $_[0]);
}

sub _new {
    Class::MOP::class_of(shift)->new_object(@_);
}

# RANT:
# Cmon, how many times have you written
# the following code while debugging:
#
#  use Data::Dumper;
#  warn Dumper $obj;
#
# It can get seriously annoying, so why
# not just do this ...
sub dump {
    my $self = shift;
    require Data::Dumper;
    local $Data::Dumper::Maxdepth = shift || 1;
    Data::Dumper::Dumper $self;
}

sub _real_ref_name {
    my $self = shift;
    return blessed($self);
}

sub _is_compatible_with {
    my $self = shift;
    my ($other_name) = @_;

    return $self->isa($other_name);
}

sub _can_be_made_compatible_with {
    my $self = shift;
    return !$self->_is_compatible_with(@_)
        && defined($self->_get_compatible_metaclass(@_));
}

sub _make_compatible_with {
    my $self = shift;
    my ($other_name) = @_;

    my $new_metaclass = $self->_get_compatible_metaclass($other_name);

    confess ""Can't make $self compatible with metaclass $other_name""
        unless defined $new_metaclass;

    # can't use rebless_instance here, because it might not be an actual
    # subclass in the case of, e.g. moose role reconciliation
    $new_metaclass->meta->_force_rebless_instance($self)
        if blessed($self) ne $new_metaclass;

    return $self;
}

sub _get_compatible_metaclass {
    my $self = shift;
    my ($other_name) = @_;

    return $self->_get_compatible_metaclass_by_subclassing($other_name);
}

sub _get_compatible_metaclass_by_subclassing {
    my $self = shift;
    my ($other_name) = @_;
    my $meta_name = blessed($self) ? $self->_real_ref_name : $self;

    if ($meta_name->isa($other_name)) {
        return $meta_name;
    }
    elsif ($other_name->isa($meta_name)) {
        return $other_name;
    }

    return;
}

1;

# ABSTRACT: Base class for metaclasses



=pod

=head1 NAME

Class::MOP::Object - Base class for metaclasses

=head1 VERSION

version 2.0602

=head1 DESCRIPTION

This class is a very minimal base class for metaclasses.

=head1 METHODS

This class provides a few methods which are useful in all metaclasses.

=over 4

=item B<< Class::MOP::???->meta >>

This returns a L<Class::MOP::Class> object.

=item B<< $metaobject->dump($max_depth) >>

This method uses L<Data::Dumper> to dump the object. You can pass an
optional maximum depth, which will set C<$Data::Dumper::Maxdepth>. The
default maximum depth is 1.

=back

=head1 AUTHOR

Moose is maintained by the Moose Cabal, along with the help of many contributors. See L<Moose/CABAL> and L<Moose/CONTRIBUTORS> for details.

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2012 by Infinity Interactive, Inc..

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut


__END__

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",S-GiyI
code,"#!/usr/bin/perl

use strict;
use warnings FATAL => 'all';
use Cwd qw(getcwd abs_path);
use Const::Fast qw(const);
use File::Find;
use Data::Dumper;
use Capture::Tiny qw(capture);


const my $RG_LINE => q{samtools view -H %s | grep '^@RG' | head -n 1};

# ref, output, threads
const my $BWA_MEM => q{bwa_mem.pl -r %s -s %s -t %d -o %s %s};

# have to use fixed vagrent files /nfs/cancer_ref02/human/GRCh37d5/vagrent/e75/
const my $PINDEL => q{pindel.pl -st WXS -as GRCh37 -sp Human -e NC_007605,hs37d5,GL%% -c %d -r %s -sf %s/softRules.lst -u %s/pindel_np.gff3.gz -s %s/simpleRepeats.bed.gz -f %s/pulldownRules.lst -g %s/codingexon_regions.indel.bed.gz -n %s -t %s -o %s};
const my $CAVEMAN => q{caveman.pl -tc cn_tum.bed -nc cn_norm.bed -td 5 -nd 2 -t %d -r %s/genome.fa.fai -ig %s/caveman/ucscHiDepth_0.01_merge1000_no_exon.bed -b %s/caveman/flagging/ -u %s/caveman/unmatched -ab %s -s HUMAN -sa hs37d5 -st pulldown -np WXS -tp WXS -in empty.bed -nb %s -tb %s -o %s};
const my $VAGRENT => q{AnnotateVcf.pl -t -c %s -i %s -o %s};

my %find_dispatch = ( mapping => \&bwa_find,
                      pindel => \&compare_find,
                      caveman => \&compare_find,
                      annot => \&annot_find,
                    );

my %alg_dispatch = (mapping => \&bwa_mem,
                    pindel => \&pindel,
                    caveman => \&caveman,
                    annot => \&vagrent,
                    );

# when true means that you need both tumour and normal to run
my %paired_algs = ( mapping => 1, # no point mapping data if unmatched
                    pindel => 1,
                    caveman => 1,
                    annot => 0,   # annotation only needs a tumour result (as it is a comparison)
                    );


my ($base_path, $alg, @alg_args) = @ARGV;

my %donors; # this is global, be careful
file_list($alg, $base_path);

my $comparisons = 0;
for my $donor(keys %donors) {
  if($paired_algs{$alg} == 1) {
    next unless(exists $donors{$donor}{'normal'} && exists $donors{$donor}{'tumour'});
  }
  my @inputs = ();
  push @inputs, @{$donors{$donor}{'tumour'}};
  if($paired_algs{$alg} == 1) {
    unshift @inputs, $donors{$donor}{'normal'};
    $comparisons += (scalar @inputs) - 1;
  }
  else {
    $comparisons += scalar @inputs;
  }

  $alg_dispatch{$alg}->(@alg_args, @inputs);
}

my $donor_count = scalar (keys %donors);

warn ""$donor_count Donors\n"";
warn ""$comparisons Jobs\n"";

sub file_list {
  my ($alg, $path) = @_;
  my $cwd = getcwd; # we don't want the absolute path as we need the info from the link area
  $path = $cwd.'/'.$path if($path !~ m/^\//);
  find( { wanted => $find_dispatch{$alg}, preprocess => \&dir_exclude }, $path);
}

sub bwa_find {
  return unless($_ =~ m/[.]bam$/);
  my $file = $File::Find::name;
  return if(-s $file == 0);
  my @bits = split '/', $file;
  my $donor = $bits[-3];
  my $type = $bits[-2];
  if($type eq 'normal') {
    $donors{$donor}{$type} = $file;
  }
  else {
    push @{$donors{$donor}{$type}}, $file;
  }
}

sub compare_find {
  return unless($_ =~ m/[.]bas$/);
  my $file = $File::Find::name;
  return if(-s $file == 0);
  $file =~ s/[.]bas$//;
  my @bits = split '/', $file;
  my $donor = $bits[-4];
  my $type = $bits[-3];
  if($type eq 'normal') {
    if(exists $donors{$donor}{$type}) {
      warn ""Multiple normals available for donor '$donor'\n"";
      return;
    }
    $donors{$donor}{$type} = $file;
  }
  else {
    push @{$donors{$donor}{$type}}, $file;
  }
}

sub annot_find {
  return unless($_ =~ m/[.]flagged([.]muts)?[.]vcf[.]gz[.]tbi$/);
  my $file = $File::Find::name;
  return if(-s $file == 0);
  $file =~ s/[.]tbi$//;
  my @bits = split '/', $file;
  my $donor = $bits[-5];
  my $type = $bits[-4];
  my $bc = $bits[-2];
  if($type eq 'normal') {
    warn ""Analysis result found for normal BC '$bc' of donor '$donor'\n"";
  }
  else {
    push @{$donors{$donor}{$type}}, $file;
  }
}

sub dir_exclude {
  return () if($File::Find::dir =~ m/tmp[^\/]+$/ || $File::Find::dir =~ m/logs([^\/]+)?$/);
  return @_;
}

sub vagrent {
  my ($vagrent_cache, @vcfs) = @_;
  for my $vcf_in(@vcfs) {
    my $out = $vcf_in;
    $out =~ s/[.]vcf[.]gz$/.annot.vcf/;
    my $exist_res = $out.'.gz.tbi';
    next if(-e $exist_res && -s $exist_res > 0);
    my $command = sprintf $VAGRENT, $vagrent_cache, $vcf_in, $out;
    print $command,""\n"";
  }
}

sub pindel {
  my ($ref, $pindel_base, $vagrent_base, $threads, @bams) = @_;
  my $normal_bam = shift @bams;
  for my $tumour_bam(@bams) {
    my $sample = sample_from_bam($tumour_bam);
    my $outbase = $tumour_bam;
    $outbase =~ s|/mapped/.+.bam$||;
    $outbase .= '/pindel/'.$sample;
    my ($stdout, $stderr, $exit) = capture {system(""ls -1 $outbase/*.flagged.vcf.gz.tbi"");};
    chomp $stdout;
    next if($stdout =~ m/[.]flagged[.]vcf[.]gz[.]tbi$/ && !-e ""$outbase/tmpPindel"");

    my $command = sprintf $PINDEL, $threads, $ref, $pindel_base, $pindel_base, $pindel_base, $pindel_base, $vagrent_base, $normal_bam, $tumour_bam, $outbase;
    print $command,""\n"";
  }
}

sub caveman {
  my ($ref_base, $vagrent_base, $threads, @bams) = @_;
  my $normal_bam =",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wpB42M
code,"#!/usr/bin/perl

use strict;
use File::Basename        qw( dirname );
use File::Path            qw( mkpath );
use File::Spec::Functions qw( rel2abs splitdir );
use OpenInteract2::Util;
use Template;

unless ( -f 'package.ini' ) {
    die ""Run this script in your package's topmost directory.\n"";
}

my @full_dirs = splitdir( rel2abs( '.' ) );
my $pkg_name  = pop( @full_dirs );
my $class_name = ucfirst $pkg_name;
$class_name =~ s/_(\w)/\U$1\U/g;
my $doc_file = ""doc/$pkg_name.pod"";
my $pod = ( -f $doc_file ) ? OpenInteract2::Util->read_file( $doc_file ) : '';
my $app_file = ""OpenInteract2/App/$class_name.pm"";
mkpath( dirname( $app_file ) );

my $template = Template->new();
$template->process( \*DATA, {
    class_name   => $class_name,
    package_name => $pkg_name,
    pod          => $pod
}, $app_file ) || die ""Cannot generate App file: "", $template->error();
print ""Created $app_file ok\n"";

__DATA__
package OpenInteract2::App::[% class_name %];

use strict;
use base qw( Exporter OpenInteract2::App );
use OpenInteract2::Manage;

$OpenInteract2::App::[% class_name %]::VERSION = sprintf(""%d.%02d"", q$Revision: 1.1 $ =~ /(\d+)\.(\d+)/);
@OpenInteract2::App::[% class_name %]::EXPORT  = qw( install );

sub get_brick_name {
    return '[% package_name %]';
}

# Not a method, just an exported sub
sub install {
    my ( $website_dir ) = @_;
    my $manage = OpenInteract2::Manage->new( 'install_package' );
    $manage->param( website_dir   => $website_dir );
    $manage->param( package_class => __PACKAGE__ );
    return $manage->execute;
}

__END__

=pod

=head1 NAME

OpenInteract2::App::[% class_name %] - This application will do everything!

[% pod %]

=cut
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",N2Cf5s
code,"use MooseX::Declare;

class Test::File::Tools extends File::Tools {
use Data::Dumper;
use Test::More;

# Ints
has 'workflowpid'	=> ( isa => 'Int|Undef', is => 'rw', required => 0 );
has 'workflownumber'=>  ( isa => 'Str', is => 'rw' );
has 'start'     	=>  ( isa => 'Int', is => 'rw' );
has 'submit'  		=>  ( isa => 'Int', is => 'rw' );

# Strings
has 'fileroot'	=> ( isa => 'Str|Undef', is => 'rw', default => '' );
has 'qstat'		=> ( isa => 'Str|Undef', is => 'rw', default => '' );
has 'queue'			=>  ( isa => 'Str|Undef', is => 'rw', default => 'default' );
has 'cluster'		=>  ( isa => 'Str|Undef', is => 'rw' );
has 'username'  	=>  ( isa => 'Str', is => 'rw' );
has 'workflow'  	=>  ( isa => 'Str', is => 'rw' );
has 'project'   	=>  ( isa => 'Str', is => 'rw' );

# Objects
has 'json'		=> ( isa => 'HashRef', is => 'rw', required => 0 );
has 'db'	=> ( isa => 'Agua::DBase::MySQL', is => 'rw', required => 0 );
has 'stages'		=> 	( isa => 'ArrayRef', is => 'rw', required => 0 );
has 'stageobjects'	=> 	( isa => 'ArrayRef', is => 'rw', required => 0 );
has 'monitor'		=> 	( isa => 'Maybe|Undef', is => 'rw', required => 0 );
has 'conf' 	=> (
	is =>	'rw',
	'isa' => 'Conf::Yaml',
	default	=>	sub { Conf::Yaml->new( backup	=>	1 );	}
);

method BUILD ($hash) {
	$self->initialise();
}

method initialise () {
	my $logfile = $self->logfile();
	$self->logDebug(""logfile"", $logfile);
	$self->conf()->logfile($logfile);
}

method testSetMonitor {
	$self->logDebug("""");
	$self->logDebug(""self->conf"", $self->conf());
	my $clustertype =  $self->conf()->getKey('agua', 'CLUSTERTYPE');
	my $classfile = ""Agua/Monitor/"" . uc($clustertype) . "".pm"";
	my $module = ""Agua::Monitor::$clustertype"";
	$self->logDebug(""Doing require $classfile"");
	require $classfile;

	my $monitor = $module->new(
		{
			'pid'		=>	$$,
			'conf' 		=>	$self->conf(),
			'db'	=>	$self->db()
		}
	);

	return $monitor;
}





}   #### Test::Agua::File::Tools",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DMwaid
code,"#!/usr/bin/env perl
use warnings;
use strict;

die ""Usage: perl $0 <fasta> <split number> <outprefix>\n"" if(@ARGV ne 3);

open FA, $ARGV[0] or die $!;
$/ = ""\n>"";
my @fa;
while(<FA>)
{
	chomp;
	s/^>//;
	push @fa, $_;
}

my $n = int(@fa / $ARGV[1]);
for(my $i = 0; $i < $ARGV[1]; $i ++)
{
	open OUT, ""> $ARGV[2].$i.fasta"" or die $!;
	for(my $j = 0; $j < $n; $j ++)
	{
		my $a = shift @fa;
		print OUT "">$a\n"";
	}
}
foreach(@fa)
{
	print OUT "">$_\n"";
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",A7Lhvb
code,"#!/usr/bin/perl
package Koha::Reporting::Table::Abstract;

use Modern::Perl;
use Moose;
use Data::Dumper;
use C4::Context;
use Scalar::Util qw(looks_like_number);
use Try::Tiny;

has 'primary_id' => (
    is => 'rw',
    reader => 'getPrimaryId',
    writer => 'setPrimaryId'
);

has 'name' => (
    is => 'rw',
    reader => 'getName',
    writer => 'setName'
);

has 'table_name' => (
    is => 'rw',
    reader => 'getTableName',
    writer => 'setTableName'
);

has 'columns' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getColumns',
    writer => 'setColumns'
);

has 'select_columns' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getSelectColumns',
    writer => 'setSelectColumns'
);

has 'select_columns_hash' => (
    is => 'rw',
    isa => 'HashRef',
    default => sub { {} },
    reader => 'getSelectColumnsHash',
    writer => 'setSelectColumnsHash'
);

has 'select_columns_alias_hash' => (
    is => 'rw',
    isa => 'HashRef',
    default => sub { {} },
    reader => 'getSelectColumnsAliasHash',
    writer => 'setSelectColumnsAliasHash'
);

has 'filters' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getFilters',
    writer => 'setFilters'
);

has 'groups' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getGroups',
    writer => 'setGroups'
);

has 'orderings' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getOrderings',
    writer => 'setOrderings'
);

has 'import_rows' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getImportRows',
    writer => 'setImportRows'
);

has 'limit' => (
    is => 'rw',
    reader => 'getLimit',
    writer => 'setLimit'
);

has 'import_rows_by_business_key' => (
    is => 'rw',
    isa => 'HashRef',
    default => sub { {} },
    reader => 'getImportRowsByBusinessKey',
    writer => 'setImportRowsByBusinessKey'
);

has 'import_columns' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getImportColumns',
    writer => 'setImportColumns'
);

has 'import_row_bussines_key_no' => (
    is => 'rw',
    isa => 'HashRef',
    default => sub { {} },
    reader => 'getImportRowBusinessKeyNo',
    writer => 'setImportRowBusinessKeyNo'
);

has 'column_value_validate_method' => (
    is => 'rw',
    isa => 'HashRef',
    default => sub { {} },
    reader => 'getColumnValueValidateMethods',
    writer => 'setColumnValueValidateMethods'
);

has 'is_needed' => (
    is => 'rw',
    default => 0,
    reader => 'getIsNeeded',
    writer => 'setIsNeeded'
);

has 'retry_count' => (
    is => 'rw',
    default => 0,
    reader => 'getRetryCount',
    writer => 'setRetryCount'
);

has 'row_count' => (
    is => 'rw',
    default => 0,
    reader => 'getRowCount',
    writer => 'setRowCount'
);

has 'extra_joins' => (
    is => 'rw',
    isa => 'ArrayRef',
    default => sub { [] },
    reader => 'getExtraJoins',
    writer => 'setExtraJoins'
);

sub BUILD {
   my $self = shift;
}

sub addFilter{
    my $self = shift;
    my ($filter, $options) = @_;
    my $conditionString = '';
    my $value = 0;
    my $dbh = C4::Context->dbh;

    if(defined $filter && defined $options){
        $conditionString = $filter->getConditionString($self, $options);
        if(defined $conditionString && $conditionString ne ''){
            push $self->{filters}, {'logic' => $filter->getLogic(), 'condition' => $conditionString, 'type' => $filter->getFilterType(), 'name' => $filter->getName()}; 
            $self->setIsNeeded(1);
        }        
    }   
}

sub addFieldToSelect{
    my $self = shift;
    my $field = $_[0];
    my $alias = $_[1];
    my $noFullField = $_[2];
    my $selectNulls = $_[3];
    my $skipNullIF = $_[4];
    my $selectField;

    if( defined $noFullField){
        $selectField = $field;
    }
    else{
        $selectField = $self->getFullColumn($field);
    }

    if(defined $selectNulls){
        $selectField = $self->getIfNullColumn($selectField);
    }
    elsif(!$skipNullIF){
        if(!defined $alias){
            $alias = $selectField;
        }
        $selectField = ""IF("". $selectField. "" = 'null', NULL, "". $selectField ."")"";
    }

    if(! defined $self->{select_columns_hash}->{$selectField} ){
        $self->{select_columns_hash}->{$selectField} = $field;
        push $self->{select_columns}, $selectField;
        if(defined $alias && $alias ne ''){
            $self->{select_columns_alias_hash}->{$selectField} = $alias;
        }
        $self->setIsNeeded(1);
    }
}

sub groupBy{
    my $self = shift;
    my $field = $_[0];
    my $alias = $_[1];
    my $noFullField = $_[2];
    my $selectNulls = $_[3];
    my ($groupField, $usedGroupSelectColumn);

    if( defined $noFullField){
        $groupField = $field;
    }
    else{
        $groupField = $self->getFullColumn($field);
    }

    if(defined $groupField){
        $self->addFieldToSelect($field, $alias, $noFullField, $selectNulls);
        push $self->{groups}, $groupField;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mgB6WX
code,"#!/usr/bin/perl -w
use strict;
use Net::Telnet;
use Net::Telnet::Cisco;
use Net::Ping;

my $welcomeMsg = ""*******************************************
ZXCTN 6263 设备线卡boot升级版本检测工具(html版)                                                                                   
发布时间:2014-10-23  12:00
(c) Copyright ZTE Corp. All rights reserved                            
*******************************************\n"";
print $welcomeMsg;

#注意，$prompt是登陆后的命令提示行，如果匹配不上，脚本将会timeout
my $username = 'who';
my $password = 'who';
my $prompt   = '/.+[>#]$/';
my $linecard = 'R16E1F';
my $bootimg  = 'e1te.bin';

print ""请输入升级boot目标版本(以V或v开头,比如最新版本V3.14):\n"";
my $bootrom = <STDIN>;
chomp($bootrom);
if ($bootrom !~ m#^[Vv]\d\.\d{2}$#) 
{
	print ""输入boot版本格式不正确，退出程序!\n"";
	system(""pause"");
	exit(0);
}
$bootrom = uc($bootrom);

print ""请输入检测设备IP地址,多个IP请按分号或逗号隔开:\n"";
my $hostlist = <STDIN>;    #LocalHost
chomp($hostlist);
my @hostArray = split /[;,]/, $hostlist;

foreach my $host (@hostArray) 
{
	$host =~ s#\s+##g;
	if ($host !~ m/(\d+\.){3}\d+/) 
	{
		print ""IP地址${host}输入不正确，进入下一台设备升级boot或退出工具!\n"";
		next;
	}
    
    #打开文件，写入Log信息
    open WH, '>', ""${host}.html"" or die ""Cannot reopen STDOUT: $!"";
    print WH ""<html>
              <head><title>${host}日志信息页面</title></head>
              <body>
              <h1 align=\""center\""> 设备${host} boot升级log:</h1>"";
    
	#先看是否能Ping通
	#主机连通性测试, 5次连接，连接不通，退出程序
	my $pingcnt = 1;
	my $p       = Net::Ping->new('icmp');
    
	while ($pingcnt <= 5) 
	{
		if ($p->ping($host)) 
		{
			print ""$host is reachable.\n"";
			print WH  ""<p>$host is reachable.</p>"";
			$p->close();
			last;
		}
		else 
		{
			print ""$host is unreachable.\n"";
			print WH ""<p>$host is unreachable.</p>"";
			$pingcnt++;
		}

	 }
	 
	if ($pingcnt >= 5) 
	{
	    print ""$host ping不通，进入下一台设备升级boot或退出工具\n"";
	    print WH ""<p><font color=\""red\"">${host} ping不通，进入下一台设备升级boot或退出工具</font></p>"";
	    print WH ""</body>
	              </html>"";
	    close WH;
		next;
	}

	my $session = Net::Telnet::Cisco->new(
		Timeout    => 15,
		Prompt     => $prompt
	);
	$session->open($host);
	print ""$host连接成功\n"" if $session->login($username, $password);
	sleep(5);
	# Execute a command
	$session->enable('zxr10');
    
    #检查img文件夹下是否存在 boot.bin文件，若不存在，直接进入下一台设备
	print $session->cmd('cd /img');
	$session->print('dir');
	my @bootbin = $session->waitfor($prompt);
	my $bootbin = join('', @bootbin);
	print ""$bootbin\n"";
	if ($bootbin !~ m#$bootimg#smg) 
	{
		print ""设备${host}不存在${bootimg}文件，请先上传该文件到当前设备img目录下！\n"";
		print WH ""<p> <font color=\""red\"">
		设备${host}不存在${bootimg}文件，请先上传该文件到当前设备img目录下！</font></p>"";
        print WH ""</body>
	              </html>"";
		close WH;
		next;
	}
    
	#获取单板所在槽位，方便后面boot升级
	my @version = $session->cmd('show version');
	my $version = join('', @version);
	print ""$version\n"";
	#获取软件版本号V1.1版本与V2.0/V2.1 boot升级命令和返回不一样
	my $softver = $2 if $version =~ m#Version\s*ZXCTN\s*(.*?)(V\d.\d)(.*?)RELEASE\s*SOFTWARE#;
	print ""当前设备${host}系统软件版本:$softver\n"";
	print WH ""<p>当前设备${host}系统软件版本:${softver}</p>"";
	my $matchcmd = """";
	my $bootflag = """";
	if($softver eq  ""V2.1"")
	{
		$matchcmd = ""bin-mode"";
		$bootflag = ""successful""
	}
	elsif($softver eq ""V1.1"")
	{
		$matchcmd = """";
		$bootflag = ""successfully"";
	}
	else
	{
		 print ""设备${host}不支持V2.1和V1.1以外版本！\n"";
		 print WH ""<p><font color=\""red\"">
		                     设备${host}不支持V2.1和V1.1以外版本！</font></p>"";
         print WH ""</body>
	               </html>"";
	     close WH;
       	 next;
	}

	my @linecardslots = ();

	for (my $panel = 1; $panel <= 12; $panel++)    #6300设备最多有12个槽位
	{
		my $boardtype = $2 if $version =~ m#\[NPCI, panel ${panel}\](.*?)Board Type(.*?)Main CPLD Version#sm;
		if (defined $boardtype && $boardtype =~ m/$linecard/) 
		{
			push @linecardslots, $panel;
			print ""线卡$linecard:槽位$panel\n"";
			print WH ""<p>线卡${linecard}:槽位${panel}</p>"";
		}
	}

	#进入olleh隐藏模式，进行boot升级

	print $session->cmd('olleh');

	for my $linecardslot (@linecardslots) 
	{
		my $cmd = ""bootrom update npc $linecardslot $matchcmd"";
		print ""$cmd\n"";
		print WH ""<p> ${cmd} </p>"";
		my $failed_cnt = 0;
		while ($failed_cnt < 3) 
		{
			$session->print($cmd);
			$session->errmode(""return"");
			print ""boot正在升级中...\n"";
			print WH ""<p> boot正在升级中... </p>"";
			sleep(45);
			my @successflag = $session->waitfor($prompt);
			my $successflag = join('', @successflag);
			print ""$successflag\n"";
			print WH ""<p> $successflag </p>"";
			if ($successflag =~ m/\b$bootflag\b/) 
			{
				print ""槽位${linecardslot}:线卡${linecard} boot升级成功!\n"";
			    print WH ""<p><font color=\""red\"">
		                        槽位${linecardslot}:线卡${linecard} boot升级成功!</font></p>"";
				last;
			}
			$failed_cnt++;
		}
		if ($failed_cnt == 3) 
		{
			print ""槽位${linecardslot}:线卡${linecard} boot升级失败!\n"";
			 print WH ""<p><font color=\""red\"">
		                     槽位${linecardslot}:线卡${linecard} boot升级失败!</font></p>"";
		}
	}
	print $session->cmd('!');
	sleep(1);
	my @bootcheck =",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",72F_M0
code,"#ExStart:1
use lib 'lib';
use strict;
use warnings;
use utf8;
use File::Slurp; # From CPAN
use JSON;

use AsposeStorageCloud::StorageApi;
use AsposeStorageCloud::ApiClient;
use AsposeStorageCloud::Configuration;
use AsposeWordsCloud::WordsApi;
use AsposeWordsCloud::ApiClient;
use AsposeWordsCloud::Configuration;

my $configFile = '../Config/config.json';
my $configPropsText = read_file($configFile);
my $configProps = decode_json($configPropsText);
my $data_path = '../../../Data/';
my $out_path = $configProps->{'out_folder'};

$AsposeWordsCloud::Configuration::app_sid = $configProps->{'app_sid'};
$AsposeWordsCloud::Configuration::api_key = $configProps->{'api_key'};
$AsposeWordsCloud::Configuration::debug = 1;
$AsposeStorageCloud::Configuration::app_sid = $configProps->{'app_sid'};
$AsposeStorageCloud::Configuration::api_key = $configProps->{'api_key'};

# Instantiate Aspose.Storage and Aspose.Words API SDK
my $storageApi = AsposeStorageCloud::StorageApi->new();
my $wordsApi = AsposeWordsCloud::WordsApi->new();

# Set input file name
my $name = ""SampleWordDocument.docx"";
my $objectIndex = 1;

# Upload file to aspose cloud storage
my $response = $storageApi->PutCreate(Path => $name, file => $data_path.$name);
# Invoke Aspose.Words Cloud SDK API to get drawing object by index present in a word document
$response = $wordsApi->GetDocumentDrawingObjectImageData(name=> $name, objectIndex=>$objectIndex);

if($response->{'Status'} eq 'OK'){
	# Download output document from response
	my $destfilename = $out_path. ""DrawingObject_"" . $objectIndex . "".png"";
	write_file($destfilename, { binmode => "":raw"" }, $response->{'Content'});
	}
#ExEnd:1",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SuRB4K
code,"package Koha::Club::Enrollment::Field;

# Copyright ByWater Solutions 2014
#
# This file is part of Koha.
#
# Koha is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with Koha; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use Modern::Perl;

use Carp;

use Koha::Database;

use base qw(Koha::Object);

=head1 NAME

Koha::Club::Enrollment::Field

Represents a ""pattern"" on which many clubs can be created.
In this way we can directly compare different clubs of the same 'template'
for statistical purposes.

=head1 API

=head2 Class Methods

=cut

=head3 type

=cut

sub _type {
    return 'ClubEnrollmentField';
}

=head1 AUTHOR

Kyle M Hall <kyle@bywatersolutions.com>

=cut

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hRS-Ud
code,"#!/usr/bin/env perl
#
# ====================================================================
# Written by Andy Polyakov <appro@fy.chalmers.se> for the OpenSSL
# project. The module is, however, dual licensed under OpenSSL and
# CRYPTOGAMS licenses depending on where you obtain it. For further
# details see http://www.openssl.org/~appro/cryptogams/.
# ====================================================================
#
# July 2004
#
# 2.22x RC4 tune-up:-) It should be noted though that my hand [as in
# ""hand-coded assembler""] doesn't stand for the whole improvement
# coefficient. It turned out that eliminating RC4_CHAR from config
# line results in ~40% improvement (yes, even for C implementation).
# Presumably it has everything to do with AMD cache architecture and
# RAW or whatever penalties. Once again! The module *requires* config
# line *without* RC4_CHAR! As for coding ""secret,"" I bet on partial
# register arithmetics. For example instead of 'inc %r8; and $255,%r8'
# I simply 'inc %r8b'. Even though optimization manual discourages
# to operate on partial registers, it turned out to be the best bet.
# At least for AMD... How IA32E would perform remains to be seen...

# November 2004
#
# As was shown by Marc Bevand reordering of couple of load operations
# results in even higher performance gain of 3.3x:-) At least on
# Opteron... For reference, 1x in this case is RC4_CHAR C-code
# compiled with gcc 3.3.2, which performs at ~54MBps per 1GHz clock.
# Latter means that if you want to *estimate* what to expect from
# *your* Opteron, then multiply 54 by 3.3 and clock frequency in GHz.

# November 2004
#
# Intel P4 EM64T core was found to run the AMD64 code really slow...
# The only way to achieve comparable performance on P4 was to keep
# RC4_CHAR. Kind of ironic, huh? As it's apparently impossible to
# compose blended code, which would perform even within 30% marginal
# on either AMD and Intel platforms, I implement both cases. See
# rc4_skey.c for further details...

# April 2005
#
# P4 EM64T core appears to be ""allergic"" to 64-bit inc/dec. Replacing 
# those with add/sub results in 50% performance improvement of folded
# loop...

# May 2005
#
# As was shown by Zou Nanhai loop unrolling can improve Intel EM64T
# performance by >30% [unlike P4 32-bit case that is]. But this is
# provided that loads are reordered even more aggressively! Both code
# pathes, AMD64 and EM64T, reorder loads in essentially same manner
# as my IA-64 implementation. On Opteron this resulted in modest 5%
# improvement [I had to test it], while final Intel P4 performance
# achieves respectful 432MBps on 2.8GHz processor now. For reference.
# If executed on Xeon, current RC4_CHAR code-path is 2.7x faster than
# RC4_INT code-path. While if executed on Opteron, it's only 25%
# slower than the RC4_INT one [meaning that if CPU µ-arch detection
# is not implemented, then this final RC4_CHAR code-path should be
# preferred, as it provides better *all-round* performance].

# March 2007
#
# Intel Core2 was observed to perform poorly on both code paths:-( It
# apparently suffers from some kind of partial register stall, which
# occurs in 64-bit mode only [as virtually identical 32-bit loop was
# observed to outperform 64-bit one by almost 50%]. Adding two movzb to
# cloop1 boosts its performance by 80%! This loop appears to be optimal
# fit for Core2 and therefore the code was modified to skip cloop8 on
# this CPU.

# May 2010
#
# Intel Westmere was observed to perform suboptimally. Adding yet
# another movzb to cloop1 improved performance by almost 50%! Core2
# performance is improved too, but nominally...

# May 2011
#
# The only code path that was not modified is P4-specific one. Non-P4
# Intel code path optimization is heavily based on submission by Maxim
# Perminov, Maxim Locktyukhin and Jim Guilford of Intel. I've used
# some of the ideas even in attempt to optmize the original RC4_INT
# code path... Current performance in cycles per processed byte (less
# is better) and improvement coefficients relative to previous
# version of this module are:
#
# Opteron	5.3/+0%(*)
# P4		6.5
# Core2		6.2/+15%(**)
# Westmere	4.2/+60%
# Sandy Bridge	4.2/+120%
# Atom		9.3/+80%
#
# (*)	But corresponding loop has less instructions, which should have
#	positive effect on upcoming Bulldozer, which has one less ALU.
#	For reference, Intel code runs at 6.8 cpb rate on Opteron.
# (**)	Note that Core2 result is ~15% lower than corresponding result
#	for 32-bit code, meaning that it's possible to improve it,
#	but more than likely at the cost of the others (see rc4-586.pl
#	to get the idea)...

$flavour = shift;
$output  = shift;
if ($flavour =~ /\./) { $output = $flavour; undef $flavour; }

$win64=0; $win64=1 if ($flavour =~ /[nm]asm|mingw64/ || $output =~ /\.asm$/);

$0 =~ m/(.*[\/\\])[^\/\\]+$/; $dir=$1;
( $xlate=""${dir}x86_64-xlate.pl"" and -f $xlate ) or
( $xlate=""${dir}../../perlasm/x86_64-xlate.pl"" and -f $xlate) or
die ""can't locate x86_64-xlate.pl"";

open OUT",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uqOidj
code,"package R::Model::Type::Msg;
# текстовое поле, преобразует текст в html.
# выделяются линки и переводы строк заменяются на br
# заменяются последовательности пробелов и знаки табуляции
# ненормативная лексика заменяется на ***

use common::sense;
use R::App;

#use overload """" => \&stringify;

# # конструктор
# sub new {
	# my ($cls) = @_;
	# bless {}, ref $cls || $cls;
# }

# возвращает тип колумна в базе 
sub typeCol {
	my ($field, $length) = @_;
	
	$field->input(""area"");
	
	$app->meta->getTextType($length // ((1 << 16) - 1));
}

# конструктор - возвращает новый объект из базы
sub fromCol {
	my ($field, $html) = @_;
	bless {
		html => $html
	}, $field->{class};
}

# преобразует из объекта в представление базы
sub toCol {
	my ($self) = @_;
	$self->{html}
}

# рендерит в шаблоне
sub render {
	my ($self) = @_;
	my $html = $self->{html};
	
	# почему на этом этапе, а не сохраняем в базу?
	# да потому, что текст может понадобиться для изменения коммертария в textarea
	# так же потому что в случае дополнения этого модуля старые записи будут отредактированы одинаково
	# конвертируем
	$html = $app->html->escape($html);
	$html =~ s{
		(?P<br> \n) |
		#(?P<space> [\ \t]+ ) |
		(?P<link> \b([a-z]+://|www\.) (?: \S+ (?P<unlink> [\.!\?] (?:\s|$)) | \S+ ) ) 
	}{
		&_convert;
	}gxei;
	
	bless [$html], ""R::Html"";
}



# конвертирует текст в html
sub _convert {
	my ($html) = @_;
	exists $+{br}? ""<br>"":
	exists $+{link}? do {
		my $unlink = $+{unlink};
		my $link = $app->html->escape($+{link}); 

		$link = substr $link, 0, -length $unlink if defined $unlink;
		my $real_link = $link;
		
		$link = ""http://$link"" if $link !~ /^\w+:/;
		
		my $gen_link = sub { ""<a href=\""$link\"" target=_blank>$real_link</a>"" };
		
		my $text_link;
		
		if($real_link =~ /\.(?:gif|png|jpeg|jpe|jpg)(?:\?|#|$)/i) {
			$text_link = ""<a href=\""$link\"" target=_blank><img src='$link'></a>"";
		}
		elsif($real_link =~ m![\./]youtube\.com/.*?([^/]+)(?:\?|#|$)!i) {
			$text_link = ""<iframe src=\""//youtube.com/embed/$1\"" frameborder=0 allowfullscreen style='max-width:100%' width=540 height=480></iframe>"" . $gen_link->();
		}
		elsif($real_link =~ m![\./](?:vk\.com|vkontakte\.ru)/video(\d+)_(\d+)!i) {
			$text_link = ""<iframe src=\""//vk.com/video_ext.php?oid=$1&id=$2\"" frameborder=0 allowfullscreen style='max-width:100%' width=540 height=480></iframe>"" . $gen_link->();
		}
		else {
			$text_link = $gen_link->();
		}
		# elsif($real_link =~ m![\./]rutube\.ru/video/([^/]+)/!i) {
			# $text_link = ""<iframe src=\""//rutube.ru/play/embed/$1\"" frameborder=0 allowfullscreen style='max-width:100%' width=540 height=480></iframe>"";
		# }
		
		#<iframe width=""500"" height=""281"" src=""//rutube.ru/play/embed/7431068"" frameborder=""0"" webkitAllowFullScreen mozallowfullscreen allowfullscreen></iframe>
		
		#http://vk.com/video2290682_456239053
		#<iframe src=""//vk.com/video_ext.php?oid=2290682&id=456239053&hash=da24778609e1852d&hd=2"" width=""853"" height=""480""  frameborder=""0""></iframe>
		
		$text_link . $unlink
	}:
	die ""что-то неопределённое `$&`"";
}

1;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KSGfQX
code,"# --
# Copyright (C) 2001-2017 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

package scripts::DBUpdateTo6::OCBIMigrateChatData;    ## no critic

use strict;
use warnings;

use parent qw(scripts::DBUpdateTo6::Base);

our @ObjectDependencies = (
    'Kernel::System::DB',
    'Kernel::System::Log',
    'Kernel::System::JSON',
    'Kernel::System::YAML',
);

=head1 NAME

scripts::DBUpdateTo6::OCBIMigrateChatData -  Migrate Chat data.

=cut

sub Run {
    my ( $Self, %Param ) = @_;

    my $DBObject = $Kernel::OM->Get('Kernel::System::DB');

    my %Tables = map { lc($_) => 1 } $DBObject->ListTables();
    return 1 if !$Tables{article_data_otrs_chat};

    return if !$DBObject->Prepare(
        SQL => 'SELECT id, name FROM communication_channel',
    );

    # Look for the chat channel id
    my $ChatChannelID;
    while ( my @Row = $DBObject->FetchrowArray() ) {
        if ( $Row[1] =~ /chat/i ) {
            $ChatChannelID = $Row[0];
        }
    }

    return 1 if !$ChatChannelID;

    # verify if chat articles exist.
    my $CheckChatArticles = $Self->_CheckChatArticles(
        ChatChannelID => $ChatChannelID,
    );

    return 1 if !$CheckChatArticles;

    my $ArticleChatCount = 0;
    my $ChatCount        = 0;

    # Get amount of article entries
    $DBObject->Prepare(
        SQL  => ""SELECT COUNT(*) FROM article WHERE communication_channel_id = ? "",
        Bind => [ \$ChatChannelID ]
    );
    while ( my @Row = $DBObject->FetchrowArray() ) {
        $ArticleChatCount = $Row[0] || 0;
    }

    # Get amount of article entries
    $DBObject->Prepare(
        SQL => ""SELECT COUNT(*) FROM article_data_otrs_chat"",
    );
    while ( my @Row = $DBObject->FetchrowArray() ) {
        $ChatCount = $Row[0] || 0;
    }

    # Chat info should be present in chat channel table
    # not in article table
    if ( $ChatCount && !$ArticleChatCount ) {
        print STDERR ""\n Chat data migration already executed \n"";
    }

    my $ArticleChatMin = 0;

    # Get amount of article entries
    $DBObject->Prepare(
        SQL  => ""SELECT MIN(id) FROM article WHERE communication_channel_id = ? "",
        Bind => [ \$ChatChannelID ]
    );
    while ( my @Row = $DBObject->FetchrowArray() ) {
        $ArticleChatMin = $Row[0] || 0;
    }

    my $ArticleChatMax = 0;

    # Get amount of article entries
    $DBObject->Prepare(
        SQL  => ""SELECT MAX(id) FROM article WHERE communication_channel_id = ? "",
        Bind => [ \$ChatChannelID ]
    );
    while ( my @Row = $DBObject->FetchrowArray() ) {
        $ArticleChatMax = $Row[0] || 0;
    }

    # TODO:OCBI: This number might be changed or even configurable
    my $RowsPerLoop = 1000;

    my $StartInEntry = $ArticleChatMin - 1 || 0;

    my $JSONObject = $Kernel::OM->Get('Kernel::System::JSON');

    ENTRIES:
    while ( $StartInEntry < $ArticleChatMax ) {

        # Get the complete set of Article entries.
        my $EndInEntry = $StartInEntry + 1 + $RowsPerLoop;

        return if !$DBObject->Prepare(
            SQL => '
                SELECT adm.id, adm.article_id, adm.a_body,
                    adm.create_by, adm.create_time, adm.change_by, adm.change_time
                FROM article art, article_data_mime adm
                WHERE
                    art.id = adm.article_id
                    AND art.communication_channel_id = ?
                    AND adm.id > ' . $StartInEntry . ' AND adm.id < ' . $EndInEntry . '
                ORDER BY id ASC',
            Bind => [ \$ChatChannelID ],
        );

        my @Data;
        while ( my @Row = $DBObject->FetchrowArray() ) {
            my $ArticleJSONData = $JSONObject->Decode(
                Data => $Row[2],
            );

            for my $ArticleJSON ( @{$ArticleJSONData} ) {

                my %CurrentRow = (
                    ID                  => $ArticleJSON->{ID},
                    ArticleID           => $Row[1],
                    ChatParticipantID   => $ArticleJSON->{ChatterID},
                    ChatParticipantName => $ArticleJSON->{ChatterName},
                    ChatParticipantType => $ArticleJSON->{ChatterType},
                    MessageText         => $ArticleJSON->{MessageText},
                    SystemGenerated     => $ArticleJSON->{SystemGenerated},
                    CreateTime          => $Row[4],
                );
                push @Data, \%CurrentRow;
            }
        }

        # Finish silently in case no data
        last ENTRIES if !@Data;

        my $MigrationResult = $Self->_MigrateData(
            Data              => \@Data,
            LastArticleDataID => $Data[-1]->{ID},
        );

        if ( !$MigrationResult ) {
            $Kernel::OM->Get('Kernel::System::Log')->Log(
                Priority => 'error',
                Message  => ""An error occurs during chat data migration!"",
            );
            return;
        }

        $StartInEntry += $RowsPerL",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hRxvXo
code,"#line 1
package Module::Install::Include;

use Module::Install::Base;
@ISA = qw(Module::Install::Base);

$VERSION = '0.61';

use strict;

sub include {
	shift()->admin->include(@_);
}

sub include_deps {
	shift()->admin->include_deps(@_);
}

sub auto_include {
	shift()->admin->auto_include(@_);
}

sub auto_include_deps {
	shift()->admin->auto_include_deps(@_);
}

sub auto_include_dependent_dists {
	shift()->admin->auto_include_dependent_dists(@_);
}

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",v0ZWOs
code,"package BinaryStatic;

use Mojo::Base 'Mojolicious';
use Mojo::Util qw/slurp/;
use JSON;
use Template;

sub startup {
    my $self = shift;

    $self->config(decode_json(slurp $self->home->rel_dir('../config.json')));

    $self->plugin(charset => {charset => 'utf-8'});
    $self->plugin('DefaultHelpers');
    $self->plugin('TagHelpers');
    $self->plugin('BinaryStatic::Helpers');

    # fix paths
    $self->renderer->paths([
        $self->home->rel_dir('../src/templates/haml'),
        $self->home->rel_dir('../src/templates/toolkit')
    ]);
    $self->static->paths([
        $self->home->rel_dir('../src')
    ]);

    $self->plugin('haml_renderer', { cache => 0, format => 'html5' });
    $self->plugin('tt_renderer' => {
        template_options => {
            ENCODING     => 'utf8',
            INTERPOLATE  => 1,
            PRE_CHOMP    => $Template::CHOMP_GREEDY,
            POST_CHOMP   => $Template::CHOMP_GREEDY,
            TRIM         => 1,
        }
    });
    $self->renderer->default_handler( 'haml' );
    $self->defaults(layout => 'default');

    # translation
    $self->plugin('I18N', { default => 'en' });
    $self->hook(before_dispatch => sub {
        my $c = shift;

        ## language
        if (my $lang = $c->req->param('l')) {
            $c->languages(lc $lang); # I18N
            $c->session(__lang => lc $lang);
        }
        $c->stash(language => uc($c->session('__lang') || 'en'));

        # other common variables
        $c->stash(website_name => $c->config->{website_name});
    });

    # Router
    my $r = $self->routes;

    $r->get('/')->to('page#haml')->name('home');
    $r->get('/home')->to('page#haml');
    $r->get('/promo/:promo')->to('page#open_account_with_promocode');
    $r->get('/ticker')->to('page#haml');
    $r->get('/timestamp')->to('page#timestamp');
    $r->get('/country')->to('page#country');
    $r->get('/why-us')->to('page#haml')->name('why-us');

    #CRO - Matjaz
    $r->get('/home5')->to('page#haml')->name('home5');

    # Routing for this rather than adding the file to public/ as everything
    # in public/ will be served by our CDN. We want this served by Mojo.
    $r->get('/robots.txt')->to('page#robots_txt');

    $r->get('/tour')->to('page#haml')->name('tour');
    $r->get('/responsible-trading')->to('page#haml')->name('responsible-trading');
    $r->get('/careers')->to('page#haml')->name('careers');
    $r->get('/group-history')->to('page#haml')->name('group-history');
    $r->get('/smart-indices')->to('page#haml')->name('smart-indices');
    $r->get('/open-source-projects')->to('page#haml')->name('open-source-projects');
    $r->get('/resources')->to('page#haml')->name('resources');
    $r->get('/charting')->to('page#haml')->name('charting');
    $r->get('/about-us')->to('page#haml')->name('about-us');
    $r->get('/contact')->to('page#haml')->name('contact');

    # Display to clients from AppCache when they are offline.
    $r->get('/offline')->to('page#offline')->name('offline');

    $r->get('/styles')->to('page#haml')->name('styles');

    my $get_started = $r->get('/get-started')->name('get-started');
    $get_started->get('/')->to('page#haml');
    $get_started->get('/what-is-binary-trading')->to('page#haml')->name('what-is-binary-trading');
    $get_started->get('/binary-options-basics')->to('page#haml')->name('binary-options-basics');
    $get_started->get('/benefits-of-trading-binaries')->to('page#haml')->name('benefits-of-trading-binaries');
    $get_started->get('/how-to-trade-binaries')->to('page#haml')->name('how-to-trade-binaries');
    $get_started->get('/types-of-trades')->to('page#haml')->name('types-of-trades');
    $get_started->get('/beginners-faq')->to('page#haml')->name('beginners-faq');
    $get_started->get('/glossary')->to('page#haml')->name('glossary');
    $get_started->get('/random-markets')->to('page#haml')->name('random-markets');

    ## login
    $r->get('/login')->to('page#haml')->name('login');
    $r->post('/login')->to('page#login');
    $r->get('/logout')->to('page#logout');

    $r->get('/user/open_account')->to('page#toolkit');
    $r->get('/affiliate/signup')->to('page#toolkit')->name('affiliate-signup');
    $r->get('/resources/pricing_table')->to('page#toolkit');
    $r->get('/charting/application')->to('page#toolkit')->name('charting-application');
    $r->get('/charting/livechart')->to('page#toolkit')->name('charting-livechart');
    $r->get('/resources/rise_fall_table')->to('page#toolkit');
    $r->get('/terms-and-conditions')->to('page#toolkit')->name('terms-and-conditions');

    $r->route('/exception')->to('page#exception');
    $r->route('/*')->to('page#not_found');

}

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dvQucD
code,"package Genome::InstrumentData::Command::Import::CreateEntities;

use strict;
use warnings;

use Genome;

use Genome::InstrumentData::Command::Import::Inputs::Factory;
require File::Basename;
require List::MoreUtils;
use Params::Validate qw( :types );

class Genome::InstrumentData::Command::Import::CreateEntities {
    is => 'Command::V2',
    has_input => {
        file => {
            is => 'Text',
            doc => Genome::InstrumentData::Command::Import::Inputs::Factory->csv_help,
        },
    },
    has_optional_transient => {
        _names_seen => { is => 'HASH', default_value => {}, },
    },
    doc => 'create individuals, samples, and libraries that are necessary to import instrument data',
};

sub help_detail {
    return 'Using a modified metadata spreadsheet saved as a comma/tab separated file, create the necessary entites (individual, sample, library) to import instrument data.';
}

sub execute {
    my $self = shift;
    
    my $inputs_factory = Genome::InstrumentData::Command::Import::Inputs::Factory->create(
        file => $self->file,
    );
    while ( my $inputs = $inputs_factory->next ) {
        my $entity_params = $inputs->entity_params;
        my $library = Genome::Library->get(name => $entity_params->{library}->{name});
        next if $library;

        $self->_create_individual_if_needed($entity_params);
        $self->_create_sample_if_needed($entity_params);
        $self->_create_library_if_needed($entity_params);
    }

    return 1;
}

sub _create_individual_if_needed {
    my ($self, $entity_params) = Params::Validate::validate_pos(@_, {type => HASHREF}, {type => HASHREF});
    my %params = %{$entity_params->{individual}};
    return 1 if $self->_does_enitity_exist('individual', $params{name});
    my $taxon_name = $params{taxon};
    die $self->error_message('No taxon for %s!', $params{name}) if not $taxon_name;
    my $taxon = Genome::Taxon->get(name => $taxon_name);
    die $self->error_message('Taxon does not exist for %s!', $taxon_name) if not $taxon;
    $params{taxon} = $taxon;
    return $self->_create_entity('individual', \%params);
}

sub _create_sample_if_needed {
    my ($self, $entity_params) = Params::Validate::validate_pos(@_, {type => HASHREF}, {type => HASHREF});
    my $params = $entity_params->{sample};
    return 1 if $self->_does_enitity_exist('sample', $params->{name});
    die $self->error_message('Sample extraction_type is required to create a sample!') if not $params->{extraction_type};
    my $source = Genome::Individual->get(name => $entity_params->{individual}->{name});
    die $self->error_message('No source for %s',  $entity_params->{individual}->{name}) if not $source;
    $params->{source} = $source; # add the individual name to the params
    return $self->_create_entity('sample', $params);
}

sub _create_library_if_needed {
    my ($self, $entity_params) = Params::Validate::validate_pos(@_, {type => HASHREF}, {type => HASHREF});
    my $params = $entity_params->{library};
    return 1 if $self->_does_enitity_exist('library', $params->{name});
    my $sample = Genome::Sample->get(name => $entity_params->{sample}->{name});
    die $self->error_message('No sample for %s',  $entity_params->{sample}->{name}) if not $sample;
    $params->{sample} = $sample;
    return $self->_create_entity('library', $params);
}

sub _does_enitity_exist {
    my ($self, $type, $name) = @_;
    return 1 if $self->_names_seen->{$type}->{$name};
    my $entity_class = 'Genome::'.ucfirst($type);
    return $entity_class->get(name => $name);
}

sub _create_entity {
    my ($self, $type, $params, $dependent_params) = Params::Validate::validate_pos(
        @_, {type => HASHREF}, {type => SCALAR}, {type => HASHREF},
    );

    my $entity_class = 'Genome::'.ucfirst($type);
    my $entity = $entity_class->create(%$params);
    if ( not $entity or my @errors = $entity->__errors__ ) {
        for ( @errors ) { $self->error_message($_->__display_name__); }
        die $self->error_message('Problems creating %s for %s.', $type, $params->{name});
    }

    $self->status_message('CREATE %s %s', $type, $params->{name});
    return 1;
}

1;

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iK6h5b
code,"=head1 NAME

rrdresize - alters the size of an RRA and creates a new .rrd file

=head1 SYNOPSIS

B<rrdtool> B<resize> I<filename> I<rra-num>  B<GROW>I<|>B<SHRINK> I<rows>

=head1 DESCRIPTION

The B<resize> function is used to modify the number of rows in
an B<RRA>.

=over 8

=item I<filename>

the name of the B<RRD> you want to alter.

=item I<rra-num>

the B<RRA> you want to alter. You can find the number using B<rrdtool info>.

=item B<GROW>

used if you want to add extra rows to an RRA. The extra rows will be inserted
as the rows that are oldest.

=item B<SHRINK>

used if you want to remove rows from an RRA. The rows that will be removed
are the oldest rows.

=item I<rows>

the number of rows you want to add or remove.

=back

=head1 NOTES

The new .rrd file, with the modified RRAs, is written to the file
B<resize.rrd> in the current directory.  B<The original .rrd file is not
modified>.

It is possible to abuse this tool and get strange results
by first removing some rows and then reinserting the same amount (effectively
clearing them to be Unknown). You may thus end up with unknown data in one
RRA while at the same timestamp this data is available in another RRA.

=head1 AUTHOR

Alex van den Bogaerdt <alex@vandenbogaerdt.nl>

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Q3jBqK
code,"# --
# Kernel/System/CustomerCompany/DB.pm - some customer user functions
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

package Kernel::System::CustomerCompany::DB;

use strict;
use warnings;

use Kernel::System::Cache;
use Kernel::System::Valid;

sub new {
    my ( $Type, %Param ) = @_;

    # allocate new hash for object
    my $Self = {};
    bless( $Self, $Type );

    # check needed objects
    for my $Needed (
        qw(DBObject ConfigObject LogObject CustomerCompanyMap MainObject EncodeObject)
        )
    {
        $Self->{$Needed} = $Param{$Needed} || die ""Got no $Needed!"";
    }

    # create additional objects
    $Self->{ValidObject} = Kernel::System::Valid->new( %{$Self} );

    # config options
    $Self->{CustomerCompanyTable} = $Self->{CustomerCompanyMap}->{Params}->{Table}
        || die ""Need CustomerCompany->Params->Table in Kernel/Config.pm!"";
    $Self->{CustomerCompanyKey} = $Self->{CustomerCompanyMap}->{CustomerCompanyKey}
        || die ""Need CustomerCompany->CustomerCompanyKey in Kernel/Config.pm!"";
    $Self->{CustomerCompanyValid} = $Self->{CustomerCompanyMap}->{'CustomerCompanyValid'};
    $Self->{SearchListLimit}      = $Self->{CustomerCompanyMap}->{'CustomerCompanySearchListLimit'};
    $Self->{SearchPrefix}         = $Self->{CustomerCompanyMap}->{'CustomerCompanySearchPrefix'};
    if ( !defined( $Self->{SearchPrefix} ) ) {
        $Self->{SearchPrefix} = '';
    }
    $Self->{SearchSuffix} = $Self->{CustomerCompanyMap}->{'CustomerCompanySearchSuffix'};
    if ( !defined( $Self->{SearchSuffix} ) ) {
        $Self->{SearchSuffix} = '*';
    }

    # create cache object, but only if CacheTTL is set in customer config
    if ( $Self->{CustomerCompanyMap}->{CacheTTL} ) {
        $Self->{CacheObject} = $Kernel::OM->Get('CacheObject');
        $Self->{CacheType}   = 'CustomerCompany' . $Param{Count};
        $Self->{CacheTTL}    = $Self->{CustomerCompanyMap}->{CacheTTL} || 0;
    }

    # create new db connect if DSN is given
    if ( $Self->{CustomerCompanyMap}->{Params}->{DSN} ) {
        $Self->{DBObject} = Kernel::System::DB->new(
            LogObject    => $Param{LogObject},
            ConfigObject => $Param{ConfigObject},
            MainObject   => $Param{MainObject},
            EncodeObject => $Param{EncodeObject},
            DatabaseDSN  => $Self->{CustomerCompanyMap}->{Params}->{DSN},
            DatabaseUser => $Self->{CustomerCompanyMap}->{Params}->{User},
            DatabasePw   => $Self->{CustomerCompanyMap}->{Params}->{Password},
            Type         => $Self->{CustomerCompanyMap}->{Params}->{Type} || '',
        ) || die('Can\'t connect to database!');

        # remember that we have the DBObject not from parent call
        $Self->{NotParentDBObject} = 1;
    }

    # this setting specifies if the table has the create_time,
    # create_by, change_time and change_by fields of OTRS
    $Self->{ForeignDB} = $Self->{CustomerCompanyMap}->{Params}->{ForeignDB} ? 1 : 0;

    # see if database is case sensitive
    $Self->{CaseSensitive} = $Self->{CustomerCompanyMap}->{Params}->{CaseSensitive} || 0;

    return $Self;
}

sub CustomerCompanyList {
    my ( $Self, %Param ) = @_;

    # check needed stuff
    my $Valid = 1;
    if ( !$Param{Valid} && defined( $Param{Valid} ) ) {
        $Valid = 0;
    }

    my $CacheType;
    my $CacheKey;

    # check cache
    if ( $Self->{CacheObject} ) {

        $CacheType = $Self->{CacheType} . '_CustomerCompanyList';
        $CacheKey = ""CustomerCompanyList::${Valid}::"" . ( $Param{Search} || '' );

        my $Data = $Self->{CacheObject}->Get(
            Type => $CacheType,
            Key  => $CacheKey,
        );
        return %{$Data} if ref $Data eq 'HASH';
    }

    # what is the result
    my $What = join(
        ', ',
        @{ $Self->{CustomerCompanyMap}->{CustomerCompanyListFields} }
    );

    # add valid option if required
    my $SQL;
    my @Bind;

    if ($Valid) {
        $SQL
            .= ""$Self->{CustomerCompanyValid} IN ( ${\(join ', ', $Self->{ValidObject}->ValidIDsGet())} )"";
    }

    # where
    if ( $Param{Search} ) {

        my @Parts = split /\+/, $Param{Search}, 6;
        for my $Part (@Parts) {
            $Part = $Self->{SearchPrefix} . $Part . $Self->{SearchSuffix};
            $Part =~ s/\*/%/g;
            $Part =~ s/%%/%/g;

            if ( defined $SQL ) {
                $SQL .= "" AND "";
            }

            my $CustomerCompanySearchFields
                = $Self->{CustomerCompanyMap}->{CustomerCompanySearchFields};

            if ( $CustomerCompanySearchFields && ref $CustomerCompanySearchFields eq 'ARRAY' ) {

                my @SQLParts;
                for my $Field ( @{$CustomerCompanySearchFields} ) {
                    if ( $Self->{CaseSensitive} ) {
                        push @SQLParts, ""$Field LIKE ?"";
                        push @Bind,     \$Part;
      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7qpBIm
code,"package C4::Members::AttributeTypes;

# Copyright (C) 2008 LibLime
#
# This file is part of Koha.
#
# Koha is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Koha is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Koha; if not, see <http://www.gnu.org/licenses>.

use strict;
#use warnings; FIXME - Bug 2505
use C4::Context;



=head1 NAME

C4::Members::AttributeTypes - mananage extended patron attribute types

=head1 SYNOPSIS

  my @attribute_types = C4::Members::AttributeTypes::GetAttributeTypes();

  my $attr_type = C4::Members::AttributeTypes->new($code, $description);
  $attr_type->code($code);
  $attr_type->description($description);
  $attr_type->repeatable($repeatable);
  $attr_type->unique_id($unique_id);
  $attr_type->opac_display($opac_display);
  $attr_type->opac_editable($opac_editable);
  $attr_type->staff_searchable($staff_searchable);
  $attr_type->authorised_value_category($authorised_value_category);
  $attr_type->store();
  $attr_type->delete();

  my $attr_type = C4::Members::AttributeTypes->fetch($code);
  $attr_type = C4::Members::AttributeTypes->delete($code);

=head1 FUNCTIONS

=head2 GetAttributeTypes

  my @attribute_types = C4::Members::AttributeTypes::GetAttributeTypes($all_fields);

Returns an array of hashrefs of each attribute type defined
in the database.  The array is sorted by code.  Each hashref contains
at least the following fields:

 - code
 - description

If $all_fields is true, then each hashref also contains the other fields from borrower_attribute_types.

=cut

sub GetAttributeTypes {
    my $all    = @_   ? shift : 0;
    my $no_branch_limit = @_ ? shift : 0;
    my $branch_limit = $no_branch_limit
        ? 0
        : C4::Context->userenv ? C4::Context->userenv->{""branch""} : 0;
    my $select = $all ? '*'   : 'DISTINCT(code), description, class';

    my $dbh = C4::Context->dbh;
    my $query = ""SELECT $select FROM borrower_attribute_types"";
    $query .= qq{
        LEFT JOIN borrower_attribute_types_branches ON bat_code = code
        WHERE b_branchcode = ? OR b_branchcode IS NULL
    } if $branch_limit;
    $query .= "" ORDER BY code"";
    my $sth    = $dbh->prepare($query);
    $sth->execute( $branch_limit ? $branch_limit : () );
    my $results = $sth->fetchall_arrayref({});
    $sth->finish;
    return @$results;
}

sub GetAttributeTypes_hashref {
    my %hash = map {$_->{code} => $_} GetAttributeTypes(@_);
    return \%hash;
}

=head1 METHODS 

  my $attr_type = C4::Members::AttributeTypes->new($code, $description);

Create a new attribute type.

=cut 

sub new {
    my $class = shift;
    my $self = {};

    $self->{'code'} = shift;
    $self->{'description'} = shift;
    $self->{'repeatable'} = 0;
    $self->{'unique_id'} = 0;
    $self->{'opac_display'} = 0;
    $self->{'opac_editable'} = 0;
    $self->{'staff_searchable'} = 0;
    $self->{'display_checkout'} = 0;
    $self->{'authorised_value_category'} = '';
    $self->{'category_code'} = '';
    $self->{'category_description'} = '';
    $self->{'class'} = '';

    bless $self, $class;
    return $self;
}

=head2 fetch

  my $attr_type = C4::Members::AttributeTypes->fetch($code);

Fetches an attribute type from the database.  If no
type with the given C<$code> exists, returns undef.

=cut

sub fetch {
    my $class = shift;
    my $code = shift;
    my $self = {};
    my $dbh = C4::Context->dbh();

    my $sth = $dbh->prepare_cached(""
        SELECT borrower_attribute_types.*, categories.description AS category_description
        FROM borrower_attribute_types
        LEFT JOIN categories ON borrower_attribute_types.category_code=categories.categorycode
        WHERE code =?"");
    $sth->execute($code);
    my $row = $sth->fetchrow_hashref;
    $sth->finish();
    return unless defined $row;

    $self->{'code'}                      = $row->{'code'};
    $self->{'description'}               = $row->{'description'};
    $self->{'repeatable'}                = $row->{'repeatable'};
    $self->{'unique_id'}                 = $row->{'unique_id'};
    $self->{'opac_display'}              = $row->{'opac_display'};
    $self->{'opac_editable'}             = $row->{'opac_editable'};
    $self->{'staff_searchable'}          = $row->{'staff_searchable'};
    $self->{'display_checkout'}          = $row->{'display_checkout'};
    $self->{'authorised_value_category'} = $row->{'authorised_value_category'};
    $self->{'category_code'}             = $row->{'category_code'};
    $self->{'category_description'}      = $row->{'category_description'};
    $self->{'class'}                     = $row->{'class'};

    $sth = $dbh->prepare(""SELECT branchcode, branchname FROM borrower_attribute_types_branches, ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RXHW91
code,"=pod

=head1 NAME

ossl_provider_find, ossl_provider_new, ossl_provider_up_ref,
ossl_provider_free,
ossl_provider_set_module_path,
ossl_provider_add_parameter, ossl_provider_set_child, ossl_provider_get_parent,
ossl_provider_up_ref_parent, ossl_provider_free_parent,
ossl_provider_default_props_update, ossl_provider_get0_dispatch,
ossl_provider_init_as_child, ossl_provider_deinit_child,
ossl_provider_activate, ossl_provider_deactivate, ossl_provider_add_to_store,
ossl_provider_ctx,
ossl_provider_doall_activated,
ossl_provider_name, ossl_provider_dso,
ossl_provider_module_name, ossl_provider_module_path,
ossl_provider_libctx,
ossl_provider_teardown, ossl_provider_gettable_params,
ossl_provider_get_params, ossl_provider_clear_all_operation_bits,
ossl_provider_query_operation, ossl_provider_unquery_operation,
ossl_provider_set_operation_bit, ossl_provider_test_operation_bit,
ossl_provider_get_capabilities
- internal provider routines

=head1 SYNOPSIS

 #include ""internal/provider.h""

 OSSL_PROVIDER *ossl_provider_find(OSSL_LIB_CTX *libctx, const char *name,
                                   int noconfig);
 OSSL_PROVIDER *ossl_provider_new(OSSL_LIB_CTX *libctx, const char *name,
                                  ossl_provider_init_fn *init_function
                                  int noconfig);
 int ossl_provider_up_ref(OSSL_PROVIDER *prov);
 void ossl_provider_free(OSSL_PROVIDER *prov);

 /* Setters */
 int ossl_provider_set_module_path(OSSL_PROVIDER *prov, const char *path);
 int ossl_provider_add_parameter(OSSL_PROVIDER *prov, const char *name,
                                 const char *value);

 /* Child Providers */
 int ossl_provider_set_child(OSSL_PROVIDER *prov,
                             const OSSL_CORE_HANDLE *handle);
 const OSSL_CORE_HANDLE *ossl_provider_get_parent(OSSL_PROVIDER *prov);
 int ossl_provider_up_ref_parent(OSSL_PROVIDER *prov, int activate);
 int ossl_provider_free_parent(OSSL_PROVIDER *prov, int deactivate);
 int ossl_provider_default_props_update(OSSL_LIB_CTX *libctx,
                                        const char *props);

 /*
  * Activate the Provider
  * If the Provider is a module, the module will be loaded
  */
 int ossl_provider_activate(OSSL_PROVIDER *prov, int upcalls, int aschild);
 int ossl_provider_deactivate(OSSL_PROVIDER *prov, int removechildren);
 int ossl_provider_add_to_store(OSSL_PROVIDER *prov, OSSL_PROVIDER **actualprov,
                                int retain_fallbacks);

 /* Return pointer to the provider's context */
 void *ossl_provider_ctx(const OSSL_PROVIDER *prov);

 const OSSL_DISPATCH *ossl_provider_get0_dispatch(const OSSL_PROVIDER *prov);

 /* Iterate over all loaded providers */
 int ossl_provider_doall_activated(OSSL_LIB_CTX *,
                                   int (*cb)(OSSL_PROVIDER *provider,
                                             void *cbdata),
                                   void *cbdata);

 /* Getters for other library functions */
 const char *ossl_provider_name(OSSL_PROVIDER *prov);
 const DSO *ossl_provider_dso(OSSL_PROVIDER *prov);
 const char *ossl_provider_module_name(OSSL_PROVIDER *prov);
 const char *ossl_provider_module_path(OSSL_PROVIDER *prov);
 OSSL_LIB_CTX *ossl_provider_libctx(const OSSL_PROVIDER *prov);

 /* Thin wrappers around calls to the provider */
 void ossl_provider_teardown(const OSSL_PROVIDER *prov);
 const OSSL_PARAM *ossl_provider_gettable_params(const OSSL_PROVIDER *prov);
 int ossl_provider_get_params(const OSSL_PROVIDER *prov, OSSL_PARAM params[]);
 int ossl_provider_get_capabilities(const OSSL_PROVIDER *prov,
                                   const char *capability,
                                   OSSL_CALLBACK *cb,
                                   void *arg);
 const OSSL_ALGORITHM *ossl_provider_query_operation(const OSSL_PROVIDER *prov,
                                                     int operation_id,
                                                     int *no_cache);
 void ossl_provider_unquery_operation(const OSSL_PROVIDER *prov,
                                      int operation_id,
                                      const OSSL_ALGORITHM *algs);

 int ossl_provider_set_operation_bit(OSSL_PROVIDER *provider, size_t bitnum);
 int ossl_provider_test_operation_bit(OSSL_PROVIDER *provider, size_t bitnum,
                                      int *result);
 int ossl_provider_clear_all_operation_bits(OSSL_LIB_CTX *libctx);

 int ossl_provider_init_as_child(OSSL_LIB_CTX *ctx,
                                 const OSSL_CORE_HANDLE *handle,
                                 const OSSL_DISPATCH *in);
 void ossl_provider_deinit_child(OSSL_LIB_CTX *ctx);

=head1 DESCRIPTION

I<OSSL_PROVIDER> is a type that holds all the necessary information
to handle a provider, regardless of if it's built in to the
application or the OpenSSL libraries, or if it's a loadable provider
module.
Instances of this type are commonly referred to as ""provider objects"".

A provider object is always stored in a set of provider objects
in the library context.

Provider objects are reference counted.

Provider objects are initiall",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CuA4El
code,"
# Browse views. allow_null indicates that no value set is 
# a valid result. 
# Multiple fields may be specified for one view, but avoid
# subject or allowing null in this case.
#
#
# set a global max_items limit:
#	$c->{browse_views_max_items} = 3000;
#
# set a per view max_item limit:
#        $c->{browse_views} = [{
#                ...
#                max_items => 3000,
#        }];
# To disable the limit set max_items to 0.
#
# For views that take a long time to generate, you may want to define max_menu_age and/or max_list_age.
# These both default to 24hours, but can be defined for each view:
#        $c->{browse_views} = [{
#                ...
#                max_menu_age => 10*24*60*60, # 10days
#                max_list_age => 10*24*60*60,
#        }];
# 
# If you are changing these, you may want to generate the views using the bin/generate_views script.

$c->{browse_views} = [
        {
                id => ""year"",
                menus => [
			{
				fields => [ ""date;res=year"" ],
				reverse_order => 1,
                		allow_null => 1,
				new_column_at => [10,10],
			}
		],
                order => ""creators_name/title"",
		variations => [
			""creators_name;first_letter"",
			""type"",
			""DEFAULT"" ],
        },
        {
                id => ""subjects"",
                menus => [
			{
				fields => [ ""subjects"" ],
                		hideempty => 1,
			}
		],
                order => ""creators_name/title"",
                include => 1,
		variations => [
			""creators_name;first_letter"",
			""type"",
		],
        },
        {
                id => ""divisions"",
                menus => [
			{
				fields => [ ""divisions"" ],
                		hideempty => 1,
			},
			{
				fields => [ ""date;res=year"" ],
				reverse_order => 1,
                		allow_null => 1,
                		hideempty => 1,
			},
		],
                order => ""creators_name/title"",
                include => 1,
		variations => [
			""creators_name;first_letter"",
			""type"",
			""DEFAULT"",
		],
        },
        {
		id => ""creators"",
		allow_null => 0,
		hideempty => 1,
		menus => [
			{
				fields => [ ""creators_name"" ],
				new_column_at => [1, 1],
				mode => ""sections"",
				open_first_section => 1,
				group_range_function => ""EPrints::Update::Views::cluster_ranges_30"",
				grouping_function => ""EPrints::Update::Views::group_by_a_to_z"",
			},
		],
		order => ""-date/title"",
		variations => [
			""type"",
			""DEFAULT"",
		],
        },
];

# examples of some other useful views you might want to add
#
# Browse by the ID's of creators & editors (CV Pages). Useful to import the 
# .include part into your main website or their homepage, rather than access
# directly via the eprints website.
#        {
#                id => ""person"",
#                menus => [
#			{
#				fields => [ ""creators_id"",""editors_id"" ],
#                		allow_null => 0,
#			}
#		],
#                order => ""-date/title"",
#                noindex => 1,
#                nolink => 1,
#                nocount => 0,
#                include => 1,
#        },

# Browse by the names of creators (less reliable than Id's), section the menu 
# by the first 3 characters of the surname, and if there are more than 30 
# names, split the menu up into sub-pages of around 30.
# Show the list of names in 3 columns.
#
#
#	{ 
#		id => ""people"", 
#		menus => [ 
#			{ 
#				fields => [""creators_name"",""editors_name""], 
#				allow_null => 0,
#				grouping_function => ""EPrints::Update::Views::group_by_3_characters"",
#				group_range_function => ""EPrints::Update::Views::cluster_ranges_30"",
#				mode => ""sections"",
#				open_first_section => 1,
#				new_column_at => [0,0],
#			} 
#		],
#		order=>""title"",
#	},


# Browse by the type of eprint (poster, report etc).
#{ id=>""type"", menus=>[ { fields=>""type"" } ], order=>""-date"" }




",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MoKyq1
code,"######################################################################
#
# EPrints::XML::EPC
#
######################################################################
#
#
######################################################################


=pod

=head1 NAME

B<EPrints::XML> - EPrints Control 

=head1 DESCRIPTION

Methods to process XML containing epc: - EPrints Control elements.

=over 4

=cut

package EPrints::XML::EPC;

use strict;


######################################################################
=pod

=item $xml = EPrints::XML::EPC::process( $xml, [%params] )

Using the given object and %params, collapse the elements <epc:phrase>
<epc:when>, <epc:if>, <epc:print> etc.

Also treats {foo} inside any attribute as if it were 
<epc:print expr=""foo"" />

=cut
######################################################################

sub process
{
        my( $node, %params ) = @_;

        if( !defined $node )
        {
                EPrints::abort( ""no node passed to epc process"" );
        }
# cjg - Potential bug if: <ifset a><ifset b></></> and ifset a is disposed
# then ifset: b is processed it will crash.

        if( EPrints::XML::is_dom( $node, ""Element"" ) )
        {
                my $name = $node->tagName;
                $name =~ s/^epc://;

                return $params{session}->xml->create_document_fragment
                        if $node->hasAttribute( ""disabled"" ) && $node->getAttribute( ""disabled"" );

                if( $name=~m/^(if|comment|choose|print|debug|phrase|pin|foreach|set|list)$/ )
                {
                        my $fn = ""EPrints::XML::EPC::_process_$name"";
                        no strict ""refs"";
                        my $r = eval { &{$fn}( $node, %params ); };
                        use strict ""refs"";
                        if( $@ )
                        {
                                $params{session}->log( ""EPScript error: $@"" );
                                return $params{session}->html_phrase( ""XML/EPC:script_error"" );
                        }
                        return $r;
                }
        }

        my $collapsed = $params{session}->clone_for_me( $node );
        my $attrs = $collapsed->attributes;
        if( defined $attrs )
        {
                for( my $i = 0; $i<$attrs->length; ++$i )
                {
                        my $attr = $attrs->item( $i );
                        my $v = $attr->nodeValue;
                        my $name = $attr->nodeName;
                        my $newv = eval { EPrints::XML::EPC::expand_attribute( $v, $name, \%params ); };
                        if( $@ )
                        {
                                $params{session}->log( ""EPScript error: $@"" );
                                $newv = $params{session}->phrase( ""XML/EPC:script_error"" );
                        }
                        if( $v ne $newv ) { $attr->setValue( $newv ); }
                }
        }

        if( $node->hasChildNodes )
        {
                $collapsed->appendChild( EPrints::XML::EPC::process_child_nodes( $node, %params ) );
        }
        return $collapsed;
}

sub expand_attribute
{
	my( $v, $name, $params ) = @_;

	return $v unless( $v =~ m/\{/ );

	my @r = EPrints::XML::EPC::split_script_attribute( $v, $name );
	my $newv='';
	for( my $i=0; $i<scalar @r; ++$i )
	{
		if( $i % 2 == 0 )
		{
			$newv.= $r[$i];
		}
		else
		{
			$newv.= EPrints::Utils::tree_to_utf8( EPrints::Script::print( $r[$i], $params ) );
		}
	}
	return $newv;
}

sub process_child_nodes
{
	my( $node, %params ) = @_;

	my $collapsed = $params{session}->make_doc_fragment;

	foreach my $child ( $node->getChildNodes )
	{
		$collapsed->appendChild(
			process( 
				$child,
				%params ) );			
	}

	return $collapsed;
}

sub _process_pin
{
	my( $node, %params ) = @_;

	if( !$node->hasAttribute( ""name"" ) )
	{
		EPrints::abort( ""In "".$params{in}."": pin element with no name attribute.\n"".substr( $node->toString, 0, 100 ) );
	}
	my $ref = $node->getAttribute( ""name"" );

	if( !defined $params{pindata}->{inserts}->{$ref} )
	{
		$params{session}->get_repository->log(
""missing parameter \""$ref\"" when making phrase \"""".$params{pindata}->{phraseid}.""\"""" );
		return $params{session}->make_text( ""[pin missing: $ref]"" );
	}
	if( !EPrints::XML::is_dom( $params{pindata}->{inserts}->{$ref},
			""DocumentFragment"",
			""Text"",
			""Element"" ) )
	{
		$params{session}->get_repository->log(
""parameter \""$ref\"" is not an XML node when making phrase \"""".$params{pindata}->{phraseid}.""\"""" );
		return $params{session}->make_text( ""[pin missing: $ref]"" );
	}
		

	my $retnode;	
	if( $params{pindata}->{used}->{$ref} || $node->hasChildNodes )
	{
		$retnode = EPrints::XML::clone_node( 
				$params{pindata}->{inserts}->{$ref}, 1 );
	}
	else
	{
		$retnode = $params{pindata}->{inserts}->{$ref};
		$params{pindata}->{used}->{$ref} = 1;
	}

	if( $node->hasChildNodes )
	{	
		$retnode->appendChild( process_child_nodes( $node, %params ) );
	}

	return $retnode;
}


sub _process_phrase
{
	my( $node, %params ) = @_;

	if( !$node->hasAttribute( ""ref"" ) )
	{
		EPrints::abort( ""In "".$param",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0OITmi
code,"package Fsq2mixi::Controller::Docs;
use utf8;
use Mojo::Base 'Mojolicious::Controller';

sub about {
	my $self = shift;
	$self->render();
}

sub privacy {
	my $self = shift;
	$self->render();
}

1;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",56Ql6L
code,"#
# Copyright 2022 Centreon (http://www.centreon.com/)
#
# Centreon is a full-fledged industry-strength solution that meets
# the needs in IT infrastructure and application monitoring for
# service performance.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

package database::oracle::mode::tnsping;

use base qw(centreon::plugins::mode);

use strict;
use warnings;
use Time::HiRes;
use POSIX;

sub new {
    my ($class, %options) = @_;
    my $self = $class->SUPER::new(package => __PACKAGE__, %options);
    bless $self, $class;
    
    $options{options}->add_options(arguments =>
                                { 
                                  ""warning:s""       => { name => 'warning', },
                                  ""critical:s""      => { name => 'critical', },
                                });

    return $self;
}

sub check_options {
    my ($self, %options) = @_;
    $self->SUPER::init(%options);

    if (($self->{perfdata}->threshold_validate(label => 'warning', value => $self->{option_results}->{warning})) == 0) {
        $self->{output}->add_option_msg(short_msg => ""Wrong warning threshold '"" . $self->{option_results}->{warning} . ""'."");
        $self->{output}->option_exit();
    }
    if (($self->{perfdata}->threshold_validate(label => 'critical', value => $self->{option_results}->{critical})) == 0) {
        $self->{output}->add_option_msg(short_msg => ""Wrong critical threshold '"" . $self->{option_results}->{critical} . ""'."");
        $self->{output}->option_exit();
    }
}

sub run {
    my ($self, %options) = @_;
    # $options{sql} = sqlmode object
    $self->{sql} = $options{sql};

    my ($exit, $msg_error) = $self->{sql}->connect(dontquit => 1);
    if (defined($msg_error) && $msg_error !~ /(ORA-01017|ORA-01004)/i) {
        $self->{output}->output_add(severity => 'CRITICAL',
                                    short_msg => $msg_error);
    } else {
        my ($sid) = $self->{sql}->{data_source} =~ /(?:sid|service_name)=(\S+)/;
        $self->{output}->output_add(severity => 'OK',
                                    short_msg => sprintf(""Connection established to listener '%s'."", $sid));
    }
 
    $self->{sql}->disconnect();
    $self->{output}->display();
    $self->{output}->exit();
}

1;

__END__

=head1 MODE

Check Oracle listener status.

=over 8

=back

=cut
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UF96UP
code,"package DDG::Goodie::VIN;
# ABSTRACT: extract information about vehicle identification numbers

use strict;
use DDG::Goodie;

zci is_cached => 1;
zci answer_type => ""vin"";

triggers query_lc => qr/([\d+a-z]{17})|
                        (^\d+$)
                        /x;

# Regex for VIN.
my $vin_qr = qr/v(?:ehicle|)i(?:dentification|)n(?:umber|)/oi;
my $tracking_qr = qr/package|track(?:ing|)|num(?:ber|)|\#/i;

# Checksum for VIN.
my %vin_checksum = (
    'A' => 1,
    'B' => 2,
    'C' => 3,
    'D' => 4,
    'E' => 5,
    'F' => 6,
    'G' => 7,
    'H' => 8,
    'I' => 'X',
    'J' => 1,
    'K' => 2,
    'L' => 3,
    'M' => 4,
    'N' => 5,
    'O' => 'X',
    'P' => 7,
    'Q' => 'X',
    'R' => 9,
    'S' => 2,
    'T' => 3,
    'U' => 4,
    'V' => 5,
    'W' => 6,
    'X' => 7,
    'Y' => 8,
    'Z' => 9,
);

my %vin_checksum_weight = (
    '1' => 8,
    '2' => 7,
    '3' => 6,
    '4' => 5,
    '5' => 4,
    '6' => 3,
    '7' => 2,
    '8' => 10,
    '9' => 0,
    '10' => 9,
    '11' => 8,
    '12' => 7,
    '13' => 6,
    '14' => 5,
    '15' => 4,
    '16' => 3,
    '17' => 2,
);

# VIN numbers.
# 2008.07.29 force some letters because
# ""Alvin and the Chipmunks songs"" passes checksum.
# See http://en.wikipedia.org/wiki/Vehicle_identification_number#Check_digit_calculation
# 2012.03.22 remove ^ and $ from 2nd regex term to also allow
# 'vin <vin>, etc' -- a regular vin just triggers w.js?
handle query_nowhitespace_nodash => sub {
    my ($query) = @_;

    # If a VIN number (2 for exclusively).
    my $is_vin = 0;

    # VIN number.
    my $vin_number = '';

    # Exclsuive trigger.
    if ($query =~ /^$vin_qr.*?([A-Z\d]{17,})$/i || $query =~ /^([A-Z\d]{17,}).*?$vin_qr$/i) {
        $vin_number = uc $1;
        $is_vin     = 2;

    # No exclusive trigger, do checksum.
    # Since the vin numbers are just numbers,
    # we are more strict in regex (e.g. than UPS).
    } elsif($query =~ /^(?:$tracking_qr|$vin_qr|)*([A-Z\d]{17})(?:$tracking_qr|$vin_qr|)*$/io || $query =~ /^(?:$tracking_qr|$vin_qr|)*([A-Z\d]{17})(?:$tracking_qr|$vin_qr|)*$/io) {
        $vin_number = uc $1;

        my $checksum   = 0;
        my @chars      = split( //, $vin_number );
        my $length     = scalar(@chars);
        my $char_count = 0;
        my $sum        = 0;

        my $letter_count = 0;

        foreach my $char (@chars) {
            $char_count++;
            $letter_count++ if $char =~ /[A-Z]/;

            # Grab number.
            my $char_num = $char;
            $char_num = $vin_checksum{$char} if exists $vin_checksum{$char};

            # Make sure number.
            if ( $char_num eq 'X' ) {
                $checksum = -1;
                last;
            }

            # Use weight.
            $sum += $char_num * $vin_checksum_weight{$char_count};
        }
        $checksum = $sum % 11;
        $checksum = 'X' if $checksum == 10;

        if ($checksum eq $chars[8] && $letter_count > 3) {
            $is_vin = 1;
        }
    }


    return unless $is_vin;

    my $moreUrl = 'http://www.decodethis.com/VIN-Decoded/vin/' . $vin_number;

    return ""Decode VIN ($vin_number) at Decode This: $moreUrl"",
    structured_answer => {
        data => {
            title => ""Vehicle Identification Number: $vin_number"",
            href => $moreUrl
        },
        templates => {
            group => 'text',
            options => {
                subtitle_content => 'DDH.vin.subtitle'
            }
        }
    };

    return;
};

1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2XPJ19
code,"package IPTables::IPv4::Chain;

use IPTables::IPv4::RuleList;

sub TIEHASH {
	my($self, $th_r, $cn) = @_;
	return bless {'TABLE' => $th_r, 'CHAIN' => $cn}, $self;
}

sub FETCH {
	my($self, $key) = @_;
	
	if($key eq ""rules"") {
		my @data;
		tie(@data, 'IPTables::IPv4::RuleList', $self->{TABLE}, $self->{CHAIN});
		return(\@data);
	}
	elsif($self->{TABLE}->builtin($self->{CHAIN})) {
		my @polinfo = $self->{TABLE}->get_policy($self->{CHAIN});
		if($key eq ""pcnt"") { return $polinfo[1]; }
		elsif($key eq ""bcnt"") { return $polinfo[2]; }
		elsif($key eq ""policy"") { return $polinfo[0]; }
	}
	else {
		if($key eq ""references"") {
			return $self->{TABLE}->get_references($self->{CHAIN});
		}
	}
	return undef;
}

sub STORE {
	my($self, $key, $value) = @_;
	my @rules;

#	print(ref $self, ""::STORE()\n"");
#	print(""table: "", $self->{TABLE}, "", chain: "", $self->{CHAIN}, ""\n"");
	if($key eq ""rules"") {
		return undef unless ref($value) eq ""ARRAY"";
		tie(@rules, 'IPTables::IPv4::RuleList', $self->{TABLE}, $self->{CHAIN});
		@rules = @$value;
	}
	elsif($self->{TABLE}->builtin($self->{CHAIN})) {
		my @polinfo = $self->{TABLE}->get_policy($self->{CHAIN});
		my $policy = $polinfo[0];
		my %counts = (pcnt => $polinfo[1], bcnt => $polinfo[2]);
		if($key eq ""pcnt"") {
			$counts{'pcnt'} = $value;
		}
		elsif($key eq ""bcnt"") {
			$counts{'bcnt'} = $value;
		}
		elsif($key eq ""policy"") {
			$policy = $value;
		}
		$self->{TABLE}->set_policy($self->{CHAIN}, $policy, \%counts);
	}
}

sub DELETE {
	my($self, $key) = @_;

	if($key eq ""rules"") {
		$self->{TABLE}->flush_entries($self->{CHAIN});
	}
	return undef;
}

sub CLEAR {
	my($self) = @_;
	$self->DELETE(""rules"");
	if($self->{TABLE}->builtin($self->{CHAIN})) {
		$self->{TABLE}->set_policy($self->{CHAIN}, ""ACCEPT"", {pcnt => 0,
				bcnt => 0});
	}

}

sub EXISTS {
	my($self, $key) = @_;

	if($key eq ""rules"") { return 1; }
	elsif($self->{TABLE}->builtin($self->{CHAIN})) {
		if($key eq ""pcnt"") { return 1; }
		elsif($key eq ""bcnt"") { return 1; }
		elsif($key eq ""policy"") { return 1; }
	}
	else {
		if($key eq ""references"") { return 1; }
	}
	return undef;
}

sub FIRSTKEY {
	my($self) = @_;
	my @keys = (""rules"");

	if($self->{TABLE}->builtin($self->{CHAIN})) {
		push(@keys, ""pcnt"", ""bcnt"", ""policy"");
	}
	else {
		push(@keys, ""references"");
	}
	
	return $keys[0];
}

sub NEXTKEY {
	my($self, $prevkey) = @_;
	my @keys = (""rules"");

	if($self->{TABLE}->builtin($self->{CHAIN})) {
		push(@keys, ""pcnt"", ""bcnt"", ""policy"");
	}
	else {
		push(@keys, ""references"");
	}
	for my $i (0 .. $#keys) {
		if($prevkey eq $keys[$i]) {
			return($keys[$i+1]);
		}
	}
	return($keys[0]);
}

1;
# vim: ts=4
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LN9Z-A
code,"#!/usr/bin/perl
use strict;
use GffTranscriptReader;

my $usage=""$0 <alignment.txt> <query.gff> <subject.gff>"";
die ""$usage\n"" unless @ARGV==3;
my ($alignmentFile,$queryGffFile,$subjectGffFile)=@ARGV;

my $reader=new GffTranscriptReader;
my $queryTranscripts=$reader->loadGFF($queryGffFile);
my $subjectTranscripts=$reader->loadGFF($subjectGffFile);
my $queryTranscript=$queryTranscripts->[0];
my $subjectTranscript=$subjectTranscripts->[0];

my $debug=@$queryTranscripts;
print ""$debug query transcripts\n"";

my $numQueryExons=$queryTranscript->numExons();
my $numSubjectExons=$subjectTranscript->numExons();

my $red=""<span style=\""color: rgb(255, 0, 0);\"">"";
my $blue=""<span style=\""color: rgb(51, 51, 255);\"">"";
my $green=""<span style=\""color: rgb(51, 255, 51);\"">"";
my $purple=""<span style=\""color: rgb(204, 51, 204);\"">"";
my $orange=""<span style=\""color: rgb(255, 204, 0);\"">"";
my $pink=""<span style=\""color: rgb(255, 153, 255);\"">"";
my $black=""<span style=\""color: rgb(0, 0, 0);\"">"";
my $grey=""<span style=\""color: rgb(192, 192, 192);\"">"";
my @colors=($red,$blue,$green,$purple,$orange,$pink,$black,$grey);
my $numColors=@colors;

my $queryColorIndex=0;
my $subjectColorIndex=0;
my $queryExonIndex=0;
my $subjectExonIndex=0;
my $queryExon=$queryTranscript->getIthExon(0);
my $subjectExon=$subjectTranscript->getIthExon(0);
my $queryExonLen=$queryExon->getLength()/3;
my $subjectExonLen=$subjectExon->getLength()/3;
my $queryExonConsumed=0;
my $subjectExonConsumed=0;

print ""<html><body style=\""color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);\""
 link=\""#000099\"" vlink=\""#990099\"" alink=\""#000099\"">\n"";
print ""<pre><big>\n"";
open(IN,$alignmentFile) || die ""can't open file \""$alignmentFile\""\n"";
while(<IN>)
  {
    if(/Query:\s*(\S+)/)
      {
	my $seq=$1;
	my $len=(length $seq);
	print ""Query: "";
	my $color=$colors[$queryColorIndex%$numColors];
	print ""$color"";
	for(my $i=0 ; $i<$len ; ++$i)
	  {
	    my $residue=substr($seq,$i,1);
	    print ""$residue"";
	    if($residue ne '-' && ++$queryExonConsumed>=$queryExonLen)
	      {
		$queryExonConsumed-=$queryExonLen;
		$color=$colors[(++$queryColorIndex)%$numColors];
		$queryExon=$queryTranscript->getIthExon(++$queryExonIndex);
		$queryExonLen=($queryExon ? $queryExon->getLength()/3 : 1);
		print ""</span>$color"";
	      }
	  }
	print ""</span>\n"";
      }
    elsif(/Sbjct:\s*(\S+)/)
      {
	my $seq=$1;
	my $len=(length $seq);
	print ""Sbjct: "";
	my $color=$colors[$subjectColorIndex%$numColors];
	print ""$color"";
	for(my $i=0 ; $i<$len ; ++$i)
	  {
	    my $residue=substr($seq,$i,1);
	    print ""$residue"";
	    if($residue ne '-' && ++$subjectExonConsumed>=$subjectExonLen)
	      {
		$subjectExonConsumed-=$subjectExonLen;
		$color=$colors[(++$subjectColorIndex)%$numColors];
		$subjectExon=$subjectTranscript->getIthExon(++$subjectExonIndex);
		$subjectExonLen=($subjectExon ? $subjectExon->getLength()/3 : 1);
		print ""</span>$color"";
	      }
	  }
	print ""</span>\n"";
      }
    elsif(/---/) {print ""<hr>\n""}
    elsif(/alignment>/) {}
    else
      {
	print;
      }
  }
close(IN);

print ""</big></pre></body></html>\n"";






",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hXLNKz
code,"#!env perl
use strict;
use warnings;

my $annot = '../../annotation/Hw2.maker_genes.functional.gff3.gz';
my $clusters = '7clustered_FPKM_compiled.tsv.gz';
open(my $fh => ""zcat $annot |"") || die $!;
my %genes;
while(<$fh>) {
    next if /^\#/;
    chomp;
    my @row = split(/\t/,$_);
    my %grp = map { split(/=/,$_) } split (/;/,pop @row);
    if( $row[2] eq 'gene' ) {
	$genes{$grp{'ID'}} = [ $row[0],(sort { $a<=>$b} ($row[3],$row[4])),
			       $row[6] ];
    }
}

open($fh => ""zcat $clusters |"") || die ""cannot open $clusters: $!"";
my %clusters;
while(<$fh>) {
    next if /^\#/;
    chomp;
    my ($gene,$clusterid,$altid,$desc,$rna_0,$rna_10,$rna_20) = split(/\t/,$_);
    push @{ $clusters{$clusterid} }, [$gene,$desc,$rna_0,$rna_10,$rna_20];
}

for my $cluster ( keys %clusters ) {
    open(my $ofh => "">CLUSTER$cluster.locs.dat"") || die $!;
    my @cluster_set;
    for my $genecl ( @{$clusters{$cluster}} ) {
	# maybe re-sort this by chromosome?
	my ($geneid,$genedesc,$rna0,$rna10,$rna20) = @$genecl;
	push @cluster_set, [ $geneid,@{$genes{$geneid}},
			     $rna0,$rna10,$rna20,$genedesc];
    }
    print $ofh ""#"",join(""\t"", qw(GENEID CHROM START END STRAND RPKM0 RPKM10 RPKM20 GENEDESC)),""\n"";
    for my $genedat ( sort { $a->[1] cmp $b->[1] || $a->[2] <=> $b->[2] }
		   @cluster_set) {
	print $ofh join(""\t"", @$genedat), ""\n"";
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FV6fBp
code,"#! /usr/bin/env perl

local $, = ' ';
local $\ = ""\n"";

print ""'("";
while (<>) {
    chomp;
    @fields = split /,/;
    print ""(@fields)"";
}
print "")"";
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",X7fmgz
code,"<#
.SYNOPSIS
Packages and publishes Carbon packages.
#>

# Copyright 2012 Aaron Jensen
# 
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[CmdletBinding()]
param(
    [Parameter(ParameterSetName='All')]
    [Switch]
    $All,
    
    [Parameter(ParameterSetName='Some')]
    [Switch]
    $Package,

    [Parameter(ParameterSetName='Some')]
    [Switch]
    # Update the version.
    $UpdateVersion
)

Set-StrictMode -Version Latest
$ErrorActionPreference = 'Stop'
$PSScriptRoot = Split-Path -Parent $MyInvocation.MyCommand.Definition

if( $pscmdlet.ParameterSetName -eq 'Some' )
{
    $All = $false
}

$licenseFileName = 'LICENSE.txt'

$releaseNotesFileName = 'RELEASE NOTES.txt'
$releaseNotesPath = Join-Path $PSScriptRoot $releaseNotesFileName -Resolve
$releaseNotes = Get-Content $releaseNotesPath

if( $releaseNotes[0] -notmatch ""^\# (\d+\.\d+\.\d+)\s*"" )
{
    Write-Error ""Missing version from release notes file.  The first line must contain the version about to be released.""
    exit
}
$version = [Version]$matches[1]
$releaseNotes[0] = ""# $version ($((Get-Date).ToString(""d MMMM yyyy"")))""
if( $All )
{
    $releaseNotes | Out-File -FilePath $releaseNotesPath -Encoding OEM
}

if( $All -or $UpdateVersion )
{
    $manifestPath = Join-Path $PSScriptRoot Carbon\Carbon.psd1 -Resolve
    $manifest = Get-Content $manifestPath
    $manifest |
        ForEach-Object {
            if( $_ -like 'ModuleVersion = *' )
            {
                'ModuleVersion = ''{0}''' -f $version.ToString()
            }
            else
            {
                $_
            }
        } |
        Out-File -FilePath $manifestPath -Encoding OEM
}

if( $All -or $Package )
{
    Copy-Item (Join-Path $PSScriptRoot LICENSE.txt -Resolve) (Join-Path $PSScriptRoot Carbon\ -Resolve)
}

$carbonZipFileName = ""Carbon-$version.zip""
$zipAppPath = Join-Path $PSScriptRoot Tools\7-Zip\7za.exe -Resolve

Push-Location $PSScriptRoot
try
{
    if( $All -or $Package )
    {
        Write-Host ""Updating help.""
        $helpDirPath = Join-Path $PSScriptRoot Website\help
        Get-ChildItem $helpDirPath *.html | Remove-Item 
        
        .\Out-Html.ps1 -OutputDir .\Website\help
        
        hg addremove $helpDirPath
        
        if( Test-Path $carbonZipFileName -PathType Leaf )
        {
            Remove-Item $carbonZipFileName
        }

        & $zipAppPath a $carbonZipFileName .\Carbon
        & $zipAppPath a $carbonZipFileName .\Website
        & $zipAppPath a $carbonZipFileName .\Examples
        & $zipAppPath a $carbonZipFileName $licenseFileName
        & $zipAppPath a $carbonZipFileName $releaseNotesFileName
    }
     
    if( $All )
    {   
        hg commit -m ""Releasing version $version."" --include $releaseNotesFileName --include .\Website --include Carbon\Carbon.psd1
        if( -not (hg tags | Where-Object { $_ -like ""$version*"" } ) )
        {
            hg tag $version
        }
    }
}
finally
{
    $licensePath = Join-Path $PSScriptRoot Carbon\$licenseFileName
    if( Test-Path $licensePath )
    {
        Remove-Item $licensePath
    }
    Pop-Location
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5zMHIB
code,"$CommandName = $MyInvocation.MyCommand.Name.Replace("".Tests.ps1"", """")
Write-Host -Object ""Running $PSCommandPath"" -ForegroundColor Cyan
. ""$PSScriptRoot\constants.ps1""
. ""$PSScriptRoot\..\internal\functions\Connect-SqlInstance.ps1""

Describe ""$CommandName Unit Tests"" -Tag 'UnitTests' {
    Context ""Validate parameters"" {
        [object[]]$params = (Get-Command $CommandName).Parameters.Keys | Where-Object {$_ -notin ('whatif', 'confirm')}
        [object[]]$knownParameters = 'ComputerName', 'InstanceName', 'Type', 'InputObject', 'Timeout', 'Credential', 'Force', 'EnableException'
        $knownParameters += [System.Management.Automation.PSCmdlet]::CommonParameters
        It ""Should only contain our specific parameters"" {
            (@(Compare-Object -ReferenceObject ($knownParameters | Where-Object {$_}) -DifferenceObject $params).Count ) | Should Be 0
        }
    }
}

Describe ""$CommandName Integration Tests"" -Tags ""IntegrationTests"" {

    Context ""Command actually works"" {

        $server = Connect-SqlInstance -SqlInstance $script:instance2
        $instanceName = $server.ServiceName
        $computerName = $server.NetName

        It ""stops some services"" {
            $services = Stop-DbaService -ComputerName $script:instance2 -InstanceName $instanceName -Type Agent
            $services | Should Not Be $null
            foreach ($service in $services) {
                $service.State | Should Be 'Stopped'
                $service.Status | Should Be 'Successful'
            }
        }

        #Start services using native cmdlets
        if ($instanceName -eq 'MSSQLSERVER') {
            $serviceName = ""SQLSERVERAGENT""
        } else {
            $serviceName = ""SqlAgent`$$instanceName""
        }
        Get-Service -ComputerName $computerName -Name $serviceName | Start-Service -WarningAction SilentlyContinue | Out-Null

        It ""stops specific services based on instance name through pipeline"" {
            $services = Get-DbaService -ComputerName $script:instance2 -InstanceName $instanceName -Type Agent, Engine | Stop-DbaService
            $services | Should Not Be $null
            foreach ($service in $services) {
                $service.State | Should Be 'Stopped'
                $service.Status | Should Be 'Successful'
            }
        }

        #Start services using native cmdlets
        if ($instanceName -eq 'MSSQLSERVER') {
            $serviceName = ""MSSQLSERVER"", ""SQLSERVERAGENT""
        } else {
            $serviceName = ""MsSql`$$instanceName"", ""SqlAgent`$$instanceName""
        }
        foreach ($sn in $servicename) { Get-Service -ComputerName $computerName -Name $sn | Start-Service -WarningAction SilentlyContinue | Out-Null }

    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",l6v9rU
code,"
function New-SqlConnection
{
    <#
    .SYNOPSIS
    Creates a new database connection.

    .DESCRIPTION
    Don't forget to close it when you're done!
    #>
    param(
        [string]
        # The name of the database.
        $Database = $RTDatabaseName
    )

    Set-StrictMode -Version Latest
    
    $connString = 'Server={0};Database={1};Integrated Security=True;' -f $RTServer,$Database
    $connection = New-Object Data.SqlClient.SqlConnection ($connString)
    $connection.Open()
    return $connection
}

$connection = $null
if( -not $connection -or $connection.State -ne [Data.ConnectionState]::Open )
{
    $connection = New-SqlConnection -Database 'master'
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zHgJ-m
code,"﻿function Get-DbaUptime
{
<#
.SYNOPSIS
Returns the uptime of the SQL Server instance, and if required the hosting windows server
	
.DESCRIPTION
By default, this command returns for each SQL Server instance passed in:
SQL Instance last startup time, Uptime as a PS TimeSpan, Uptime as a formatted string
Hosting Windows server last startup time, Uptime as a PS TimeSpan, Uptime as a formatted string
	
.PARAMETER SqlServer
The SQL Server that you're connecting to.

.PARAMETER SqlCredential
Credential object used to connect to the SQL Server as a different user

.PARAMETER WindowsCredential
Credential object used to connect to the SQL Server as a different user

.PARAMETER SqlOnly
Excludes the Windows server information

.PARAMETER WindowsOnly
Excludes the SQL server information

.NOTES
Tags: CIM
Original Author: Stuart Moore (@napalmgram), stuart-moore.com
	
dbatools PowerShell module (https://dbatools.io, clemaire@gmail.com)
Copyright (C) 2016 Chrissy LeMaire
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>

.LINK
https://dbatools.io/Get-DbaUptime

.EXAMPLE
Get-DbaUptime -SqlServer SqlBox1\Instance2

Returns an object with SQL Server start time, uptime as TimeSpan object, uptime as a string, and Windows host boot time, host uptime as TimeSpan objects and host uptime as a string for the sqlexpress instance on winserver

.EXAMPLE
Get-DbaUptime -SqlServer winserver\sqlexpress, sql2016

Returns an object with SQL Server start time, uptime as TimeSpan object, uptime as a string, and Windows host boot time, host uptime as TimeSpan objects and host uptime as a string for the sqlexpress instance on host winserver  and the default instance on host sql2016
	
.EXAMPLE   
Get-DbaUptime -SqlServer sqlserver2014a, sql2016 -SqlOnly

Returns an object with SQL Server start time, uptime as TimeSpan object, uptime as a string for the sqlexpress instance on host winserver  and the default instance on host sql2016

.EXAMPLE   
Get-SqlRegisteredServerName -SqlServer sql2014 | Get-DbaUptime 

Returns an object with SQL Server start time, uptime as TimeSpan object, uptime as a string, and Windows host boot time, host uptime as TimeSpan objects and host uptime as a string for every server listed in the Central Management Server on sql2014
	
#>
	[CmdletBinding(DefaultParameterSetName = ""Default"")]
	Param (
		[parameter(Mandatory = $true, ValueFromPipeline = $true)]
		[Alias(""ServerInstance"", ""SqlInstance"", ""ComputerName"")]
		[object[]]$SqlServer,
		[parameter(ParameterSetName = ""Sql"")]
		[Switch]$SqlOnly,
		[parameter(ParameterSetName = ""Windows"")]
		[Switch]$WindowsOnly,
		[Alias(""Credential"")]
		[PsCredential]$SqlCredential,
		[PsCredential]$WindowsCredential
	)
	
	PROCESS
	{
		foreach ($instance in $SqlServer)
		{
			if ($instance.Gettype().FullName -eq [System.Management.Automation.PSCustomObject] )
			{
				$servername = $instance.SqlInstance
			}
			elseif ($instance.Gettype().FullName -eq [Microsoft.SqlServer.Management.Smo.Server])
			{
				$servername = $instance.NetName
			}
			else
			{
				$servername = $instance
			}
						
			if ($WindowsOnly -ne $true)
			{
				
				Write-Verbose ""Connecting to $servername""
				try
				{
					$server = Connect-SqlServer -SqlServer $servername -SqlCredential $SqlCredential -ErrorVariable ConnectError
					
				}
				catch
				{
					Write-Warning $_
					continue
				}
								
				Write-Verbose ""Getting Start times for $servername""
				#Get TempDB creation date
				$SQLStartTime = $server.Databases[""TempDB""].CreateDate
				$SQLUptime = New-TimeSpan -Start $SQLStartTime -End (Get-Date)
				$SQLUptimeString = ""{0} days {1} hours {2} minutes {3} seconds"" -f $($SQLUptime.Days), $($SQLUptime.Hours), $($SQLUptime.Minutes), $($SQLUptime.Seconds)
			}
			
			if ($SqlOnly -ne $true)
			{
				$WindowsServerName = (Resolve-DbaNetworkName $servername -Credential $WindowsCredential).ComputerName

				try
				{
					Write-Verbose ""Getting WinBootTime via CimInstance for $servername""
					$WinBootTime = (Get-CimInstance -ClassName win32_operatingsystem -ComputerName $windowsServerName -ErrorAction SilentlyContinue).lastbootuptime
					$WindowsUptime = New-TimeSpan -start $WinBootTime -end (get-date)
					$WindowsUptimeString = ""{0} days {1} hours {2} minutes {3} seconds"" -f $($WindowsUptime.Days), $($WindowsUptime.Hours), $($WindowsUptime.Minutes), $($WindowsUptime.Seconds)
					
				}
				catch
				{
					try
					{
						Write-Verbose ""$functionname - Getting WinBootTime via CimInstance DCOM""
						$CimOption = New-CimSessionOption -Protocol DCOM
						$CimSession = Ne",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AcZUN2
code,"﻿$packageName = 'peazip'
$installerType = 'EXE'
$url = 'http://www.peazip.org/downloads/peazip-5.5.0.WINDOWS.exe'
$url64 = 'http://www.peazip.org/downloads/peazip-5.5.0.WIN64.exe'
$silentArgs = '/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-'
$validExitCodes = @(0) #please insert other valid exit codes here, exit codes for ms http://msdn.microsoft.com/en-us/library/aa368542(VS.85).aspx

Install-ChocolateyPackage ""$packageName"" ""$installerType"" ""$silentArgs"" ""$url"" ""$url64"" -validExitCodes $validExitCodes

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1VN2aq
code,"[CmdletBinding()]
param(
    [Parameter()]
    [string]
    $SharePointCmdletModule = (Join-Path -Path $PSScriptRoot `
                                         -ChildPath ""..\Stubs\SharePoint\15.0.4805.1000\Microsoft.SharePoint.PowerShell.psm1"" `
                                         -Resolve)
)

Import-Module -Name (Join-Path -Path $PSScriptRoot `
                                -ChildPath ""..\UnitTestHelper.psm1"" `
                                -Resolve)

$Global:SPDscHelper = New-SPDscUnitTestHelper -SharePointStubModule $SharePointCmdletModule `
                                              -DscResource ""SPWebAppThrottlingSettings""

Describe -Name $Global:SPDscHelper.DescribeHeader -Fixture {
    InModuleScope -ModuleName $Global:SPDscHelper.ModuleName -ScriptBlock {
        Invoke-Command -ScriptBlock $Global:SPDscHelper.InitializeScript -NoNewScope

        # Initialize tests

        # Mocks for all contexts
        Mock -CommandName New-SPAuthenticationProvider -MockWith { }
        Mock -CommandName New-SPWebApplication -MockWith { }
        Mock -CommandName Get-SPAuthenticationProvider -MockWith {
            return @{
                DisableKerberos = $true
                AllowAnonymous = $false
            }
        }

        # Test contexts
        Context -Name ""The web appliation exists and has the correct throttling settings"" -Fixture {
            $testParams = @{
                WebAppUrl = ""http://sites.sharepoint.com""
                ListViewThreshold = 1000
                AllowObjectModelOverride = $true
                AdminThreshold = 2000
                ListViewLookupThreshold = 12
                HappyHourEnabled = $true
                HappyHour = (New-CimInstance -ClassName MSFT_SPWebApplicationHappyHour -Property @{
                    Hour = 2
                    Minute = 0
                    Duration = 1
                } -ClientOnly)
                UniquePermissionThreshold = 100
                RequestThrottling = $true
                ChangeLogEnabled = $true
                ChangeLogExpiryDays = 30
                EventHandlersEnabled = $true
            }

            Mock -CommandName Get-SPWebapplication -MockWith { return @(@{
                DisplayName = $testParams.Name
                ApplicationPool = @{
                    Name = $testParams.ApplicationPool
                    Username = $testParams.ApplicationPoolAccount
                }
                ContentDatabases = @(
                    @{
                        Name = ""SP_Content_01""
                        Server = ""sql.domain.local""
                    }
                )
                IisSettings = @(
                    @{ Path = ""C:\inetpub\wwwroot\something"" }
                )
                Url = $testParams.WebAppUrl
                MaxItemsPerThrottledOperation = $testParams.ListViewThreshold
                AllowOMCodeOverrideThrottleSettings = $testParams.AllowObjectModelOverride
                MaxItemsPerThrottledOperationOverride = $testParams.AdminThreshold
                MaxQueryLookupFields = $testParams.ListViewLookupThreshold
                UnthrottledPrivilegedOperationWindowEnabled = $testParams.HappyHourEnabled
                DailyStartUnthrottledPrivilegedOperationsHour = $testParams.HappyHour.Hour
                DailyStartUnthrottledPrivilegedOperationsMinute = $testParams.HappyHour.Minute
                DailyUnthrottledPrivilegedOperationsDuration = $testParams.HappyHour.Duration
                MaxUniquePermScopesPerList = $testParams.UniquePermissionThreshold
                HttpThrottleSettings = @{
                    PerformThrottle = $testParams.RequestThrottling
                }
                ChangeLogExpirationEnabled = $testParams.ChangeLogEnabled
                ChangeLogRetentionPeriod = @{
                    Days = $testParams.ChangeLogExpiryDays
                }
                EventHandlersEnabled = $testParams.EventHandlersEnabled
            })}

            It ""Should return the current data from the get method"" {
                Get-TargetResource @testParams | Should Not BeNullOrEmpty
            }

            It ""Should return true from the test method"" {
                Test-TargetResource @testParams | Should Be $true
            }
        }

        Context -Name ""The web appliation exists and uses incorrect throttling settings"" -Fixture {
            $testParams = @{
                WebAppUrl = ""http://sites.sharepoint.com""
                ListViewThreshold = 1000
                AllowObjectModelOverride = $true
                AdminThreshold = 2000
                ListViewLookupThreshold = 12
                HappyHourEnabled = $true
                HappyHour = (New-CimInstance -ClassName MSFT_SPWebApplicationHappyHour -Property @{
                    Hour = 2
                    Minute = 0
                    Duration = 1
                } -ClientOnly)
                UniquePermissionThreshold = 100
                RequestThrottling = $true
                ChangeLogEnabled = $true
                ChangeLogExpiryDays = 30
                EventHa",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vEWKDi
code,"<#
.Synopsis
    Gets the message to output for the XWriteProgress
.DESCRIPTION
    Gets the message to output for the XWriteProgress
.EXAMPLE
   Get-XProgressRender -Command Enable-XWrite
#>
function Get-XProgressRender
{
    [CmdletBinding(SupportsShouldProcess=$true)]
    Param(
        [Parameter(Mandatory=$true, Position=0)]
        [string]
        ${Activity},
    
        [Parameter(Position=1)]
        [ValidateNotNullOrEmpty()]
        [string]
        ${Status},
    
        [Parameter(Position=2)]
        [ValidateRange(0, 2147483647)]
        [int]
        ${Id},
    
        [ValidateRange(-1, 100)]
        [int]
        ${PercentComplete},
    
        [int]
        ${SecondsRemaining},
    
        [string]
        ${CurrentOperation},
    
        [ValidateRange(-1, 2147483647)]
        [int]
        ${ParentId},
    
        [switch]
        ${Completed},
    
        [int]
        ${SourceId}
    )
    begin {

    }

    process {
        $prefix=Get-Variable -Name ""XWriteProgress:Prefix"" -Scope Global -ValueOnly
        $renderingSegments=@()
        if($PSBoundParameters.ContainsKey(""Activity""))
        {
            $renderingSegments+=""Activity=$Activity""
        }
        if($PSBoundParameters.ContainsKey(""Status""))
        {
            $renderingSegments+=""Status=$Status""
        }
        if($PSBoundParameters.ContainsKey(""CurrentOperation""))
        {
            $renderingSegments+=""CurrentOperation=$CurrentOperation""
        }
        if($PSBoundParameters.ContainsKey(""PercentComplete""))
        {
            $renderingSegments+=""PercentComplete=$PercentComplete""
        }
        if($PSBoundParameters.ContainsKey(""SecondsRemaining""))
        {
            $renderingSegments+=""SecondsRemaining=$SecondsRemaining""
        }
        if($PSBoundParameters.ContainsKey(""Completed""))
        {
            $renderingSegments+=""Completed""
        }

        $prefix+ ($renderingSegments -join '|')
    }

    end {

    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",74VvpK
code,"Write-Host ""Installing IIS...""
Import-Module ServerManager
$features = @(
   ""Web-WebServer"",
   ""Web-Static-Content"",
   ""Web-Http-Errors"",
   ""Web-Http-Redirect"",
   ""Web-Stat-Compression"",
   ""Web-Filtering"",
   ""Web-Asp-Net45"",
   ""Web-Net-Ext45"",
   ""Web-ISAPI-Ext"",
   ""Web-ISAPI-Filter"",
   ""Web-Mgmt-Console"",
   ""Web-Mgmt-Tools"",
   ""NET-Framework-45-ASPNET""
)
Add-WindowsFeature $features -Verbose

Write-Host ""Opening port 80...""
netsh advfirewall firewall add rule name=""open_80_api"" dir=in localport=80 protocol=TCP action=allow

choco install -y webdeploy",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",K8q6Ez
code,"write-host $('=' * ($HOST.ui.rawui.buffersize.width - 1))
write-host $MyInvocation.MyCommand
write-host $('=' * ($HOST.ui.rawui.buffersize.width - 1))
write-host ''
write-host ''

& {
    write-host '---------------------------------------'
    write-host 'There should be a complete help file'
    write-host '    get-help assert-pipelinecount -Full'
    write-host '---------------------------------------'
    get-help assert-pipelinecount -Full
}

write-host $('=' * ($HOST.ui.rawui.buffersize.width - 1))
write-host ''
write-host ''
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kxNivM
code,"﻿param([string]$SQLServerList=$(Throw `
""Paramater missing: -ListFile Filename""))


Function Get-CPUInfo{
    [CmdletBinding()]
    Param(
    [parameter(Mandatory = $TRUE,ValueFromPipeline = $TRUE)]   [String] $ComputerName

    )

    Process{
    
            # Get Default SQL Server instance's Edition
            $sqlconn = new-object System.Data.SqlClient.SqlConnection(`
                        ""server=$ComputerName;Trusted_Connection=true"");
            $query = ""SELECT SERVERPROPERTY('Edition') AS Edition;""

            $sqlconn.Open()
            $sqlcmd = new-object System.Data.SqlClient.SqlCommand ($query, $sqlconn);
            $sqlcmd.CommandTimeout = 0;
            $dr = $sqlcmd.ExecuteReader();

            while ($dr.Read()) { 
             $SQLEdition = $dr.GetValue(0);}

            $dr.Close()
            $sqlconn.Close()

   
            #Get processors information            
            $CPU=Get-WmiObject -ComputerName $ComputerName -class Win32_Processor
            #Get Computer model information
            $OS_Info=Get-WmiObject -ComputerName $ComputerName -class Win32_ComputerSystem
            
     
           #Reset number of cores and use count for the CPUs counting
           $CPUs = 0
           $Cores = 0
           
           foreach($Processor in $CPU){

           $CPUs = $CPUs+1   
           
           #count the total number of cores         
           $Cores = $Cores+$Processor.NumberOfCores
        
          } 
           
           $InfoRecord = New-Object -TypeName PSObject -Property @{
                    Server = $ComputerName;
                    Model = $OS_Info.Model;
                    CPUNumber = $CPUs;
                    TotalCores = $Cores;
                    Edition = $SQLEdition;
                    'Cores to CPUs Ratio' = $Cores/$CPUs;
                    Resume = if ($SQLEdition -like ""Developer*"") {""N/A""} `
                        elseif ($Cores -eq $CPUs) {""No licensing changes""} `
                        else {""licensing costs increase in "" + $Cores/$CPUs +"" times""};
    }
   Write-Output $InfoRecord
          }
}

#loop through the server list and get information about CPUs, Cores and Default instance edition
Get-Content $ListFile | Foreach-Object {Get-CPUInfo $_ }|Format-Table -AutoSize Server, Model, 
   Edition, CPUNumber, TotalCores, 'Cores to CPUs Ratio', Resume",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hayJf0
code,"﻿<#
    .SYNOPSIS
       Add a synopsis here to explain the PSScript. 
#>
Param(

)
$ErrorActionPreference = [System.Management.Automation.ActionPreference]::Stop
$CompletedParameters = Write-StartingMessage -CommandName Invoke-HelloWorld

$Vars = Get-BatchAutomationVariable -Prefix 'HelloWorld' -Name 'EmailAccessCredentialName', 'Who'
$Credential = Get-AutomationPSCredential -Name $Vars.EmailAccessCredentialName

Try
{
    Write-Verbose -Message 'testing'
    $EWSCon = New-EWSMailboxConnection -Credential $Credential

    $Null = Send-EWSEmail -mailboxConnection $EWSCon `
                          -Recipients 'Ryan.Andorfer@microsoft.com' `
                          -Subject 'Something Happened!' `
                          -ImportanceLevel High `
                          -Body ""Hello $($Vars.Who)""
}
Catch
{
    $Exception = $_
    $ExceptionInfo = Get-ExceptionInfo -Exception $Exception
    Switch ($ExceptionInfo.FullyQualifiedErrorId)
    {
        Default
        {
            Write-Exception $Exception -Stream Warning
        }
    }
}

Write-CompletedMessage @CompletedParameters
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VdBT-x
code,"﻿function New-VsPhase {
    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$True,Position=0)]
        [ValidateSet(""clioutput"",""parser"")]
        [string]$AppType,
        
        [Parameter(Mandatory=$False,Position=1)]
        [string]$NextPhase,
        
        [Parameter(Mandatory=$False)]
        [array]$Fieldsets = @(),
        
        [Parameter(Mandatory=$False)]
        [array]$ErrorMessages = @()
    )

    $NewObject               = """" | Select AppType,NextPhase,Fieldsets,ErrorMessages
    $NewObject.AppType       = $AppType
    $NewObject.Fieldsets     = $Fieldsets
    $NewObject.ErrorMessages = $ErrorMessages
 
    return $NewObject
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oRJ-I1
code,"function Add-VSKinesisAnalyticsApplicationOutputOutput {
    <#
    .SYNOPSIS
        Adds an AWS::KinesisAnalytics::ApplicationOutput.Output resource property to the template. Describes application output configuration in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.

    .DESCRIPTION
        Adds an AWS::KinesisAnalytics::ApplicationOutput.Output resource property to the template.
Describes application output configuration in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.

For limits on how many destinations an application can write and other limitations, see Limits: https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html.

    .LINK
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html

    .PARAMETER DestinationSchema
        Describes the data format when records are written to the destination. For more information, see Configuring Application Output: https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-output.html.

        Type: DestinationSchema
        Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html#cfn-kinesisanalytics-applicationoutput-output-destinationschema
        UpdateType: Mutable

    .PARAMETER LambdaOutput
        Identifies an AWS Lambda function as the destination.

        Type: LambdaOutput
        Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html#cfn-kinesisanalytics-applicationoutput-output-lambdaoutput
        UpdateType: Mutable

    .PARAMETER KinesisFirehoseOutput
        Identifies an Amazon Kinesis Firehose delivery stream as the destination.

        Type: KinesisFirehoseOutput
        Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html#cfn-kinesisanalytics-applicationoutput-output-kinesisfirehoseoutput
        UpdateType: Mutable

    .PARAMETER KinesisStreamsOutput
        Identifies an Amazon Kinesis stream as the destination.

        Type: KinesisStreamsOutput
        Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html#cfn-kinesisanalytics-applicationoutput-output-kinesisstreamsoutput
        UpdateType: Mutable

    .PARAMETER Name
        Name of the in-application stream.

        Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisanalytics-applicationoutput-output.html#cfn-kinesisanalytics-applicationoutput-output-name
        PrimitiveType: String
        UpdateType: Immutable

    .FUNCTIONALITY
        Vaporshell
    #>
    [OutputType('Vaporshell.Resource.KinesisAnalytics.ApplicationOutput.Output')]
    [cmdletbinding()]
    Param
    (
        [parameter(Mandatory = $true)]
        $DestinationSchema,
        [parameter(Mandatory = $false)]
        $LambdaOutput,
        [parameter(Mandatory = $false)]
        $KinesisFirehoseOutput,
        [parameter(Mandatory = $false)]
        $KinesisStreamsOutput,
        [parameter(Mandatory = $false)]
        [ValidateScript( {
                $allowedTypes = ""System.String"",""Vaporshell.Function"",""Vaporshell.Condition""
                if ([string]$($_.PSTypeNames) -match ""($(($allowedTypes|ForEach-Object{[RegEx]::Escape($_)}) -join '|'))"") {
                    $true
                }
                else {
                    $PSCmdlet.ThrowTerminatingError((New-VSError -String ""This parameter only accepts the following types: $($allowedTypes -join "", ""). The current types of the value are: $($_.PSTypeNames -join "", "").""))
                }
            })]
        $Name
    )
    Begin {
        $obj = [PSCustomObject]@{}
        $commonParams = @('Verbose','Debug','ErrorAction','WarningAction','InformationAction','ErrorVariable','WarningVariable','InformationVariable','OutVariable','OutBuffer','PipelineVariable')
    }
    Process {
        foreach ($key in $PSBoundParameters.Keys | Where-Object {$commonParams -notcontains $_}) {
            switch ($key) {
                Default {
                    $obj | Add-Member -MemberType NoteProperty -Name $key -Value $PSBoundParameters.$key
                }
            }
        }
    }
    End {
        $obj | Add-ObjectDetail -TypeName 'Vaporshell.Resource.KinesisAnalytics.ApplicationOutput.Output'
        Write-Verbose ""Resulting JSON from $($MyInvocation.MyCommand): `n`n$($obj | ConvertTo-Json -Depth 5)`n""
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_sHNi4
code,"if ( $host.Version.Major -gt ""3"" ) {
    Update-TypeData -TypeName System.IO.FileInfo -MemberName FileSize -MemberType ScriptProperty -Value { 

        switch($this.length) {
                   { $_ -gt 1tb } 
                          { ""{0:n2} TB"" -f ($_ / 1tb) }
                   { $_ -gt 1gb } 
                          { ""{0:n2} GB"" -f ($_ / 1gb) }
                   { $_ -gt 1mb } 
                          { ""{0:n2} MB "" -f ($_ / 1mb) }
                   { $_ -gt 1kb } 
                          { ""{0:n2} KB "" -f ($_ / 1Kb) }
                   default  
                          { ""{0} B "" -f $_} 
                 }      

     } -DefaultDisplayPropertySet Mode,LastWriteTime,FileSize,Name
 }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",v0MK2V
code,"﻿$release = ""https://github.com/icanki/spm/files/545961/spm.zip""
$localAppData = $env:LOCALAPPDATA

Write-Host ""Creating directory...""
$appFolder = [System.IO.Directory]::CreateDirectory([System.IO.Path]::Combine($localAppData,""SPM""))

Get-ChildItem $appFolder.FullName | Remove-Item -Recurse -Force

Write-Host ""Downloading bootstrapper..."" -NoNewline

$wc= New-Object System.Net.WebClient
$zip = [System.IO.Path]::Combine($appFolder.FullName, ""spm.zip"")
$wc.DownloadFile($release, $zip)

Add-Type -AssemblyName System.IO.Compression.FileSystem
[System.IO.Compression.ZipFile]::ExtractToDirectory($zip, $appFolder.FullName)

Write-Host ""Done"" -ForegroundColor Green

Write-Host ""Download app..."" -NoNewline
$zip = [System.IO.Path]::Combine($appFolder.FullName, ""app.zip"")
$wc.DownloadFile(""http://spmservices.azurewebsites.net/api/files/getLastVersion"", $zip)
$appShellFolder = [System.IO.Directory]::CreateDirectory([System.IO.Path]::Combine($appFolder.FullName,""App""))
[System.IO.Compression.ZipFile]::ExtractToDirectory($zip, $appShellFolder.FullName)
Write-Host ""Done"" -ForegroundColor Green

Write-Host ""Write Path..."" -NoNewline
$path = [Environment]::GetEnvironmentVariable(""Path"", ""User"")
if (-not $path.Contains($appFolder.FullName)) {
[Environment]::SetEnvironmentVariable(""Path"", $path+';'+$appFolder.FullName, ""User"")
}
Write-Host ""Done"" -ForegroundColor Green",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8WTsI_
code,"$clientId = Get-ItemProperty 'HKLM:\SOFTWARE\Wow6432Node\TeamViewer' -Name ClientID 

#Creating a Mail object
$msg = new-object Net.Mail.MailMessage

#Email structure 
$msg.From = ""demoscript@cinegy.com""
$msg.ReplyTo = ""demoscript@cinegy.com""
$msg.To.Add(""lewis-demo@cinegy.com"")
$msg.subject = ""Templated Cinegy Machine Booted"" 
$msg.body = ""A templated machine has booted, 
    and has run up with Teamviewer ID "" + $clientId.ClientID

#SMTP server name
$smtpServer = ""smtp.lab.local""

#Creating SMTP server object
$smtp = new-object Net.Mail.SmtpClient($smtpServer)

#Sending email 
Write-Host ""Sending Email""
$smtp.Send($msg)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FJzKBx
code,"﻿function Get-TVUser
{
    <#
    .SYNOPSIS
    Get details of a Teamviewer user
    .DESCRIPTION
    Get details of a Teamviewer user
    .PARAMETER Token
    The Teamviewer API token generated on the Teamviewer Management console (https://login.teamviewer.com)
    .PARAMETER UserID
    The userID of a Teamviewer user
    .PARAMETER Name
    The name of the Teamviewer user
    .PARAMETER Email
    The email address of the Teamviewer user
    .PARAMETER Permissions
    a list of Permissions of user accounts to fetch
    .PARAMETER Simple
    Indicates that a limited set of properties should be returned
    .EXAMPLE
    Get-TVUser -Token $Env:TeamViewerToken -UserID 'u123456789'
    Gets the TVUser object of user with ID: u123456789
    .EXAMPLE
    Get-TVUser -Token $Env:TeamViewerToken -Name 'Solo, Han'
    Gets the TVUser object of a user with the name 'Solo, Han'
    .INPUTS

    .OUTPUTS
    TVUser. The TVUser object.
    .LINK
    Set-TVUser
    .LINK
    New-TVUser
    #>
    [OutputType([TVUser])]
    [CmdletBinding(DefaultParameterSetName = ""All"")]
    param(

        [Parameter(
            Mandatory = $true
        )]
        [string] $Token,

        [Parameter(
            Mandatory = $true,
            ParameterSetName = 'ByID'
        )]
        [string[]] $UserID,

        [Parameter(
            Mandatory = $true,
            ParameterSetName = 'ByName'
        )]
        [string] $Name,

        [Parameter(
            Mandatory = $true,
            ParameterSetName = 'ByEmail'
        )]
        [string[]] $Email,

        [Parameter(
            Mandatory = $true,
            ParameterSetName = 'ByPermission'
        )]
        [System.ObsoleteAttribute('The Permission parameter is not yet implemented')]
        [string[]] $Permission,

        [Parameter()]
        [switch] $Simple

    )

    begin
    {
        [hashtable] $RequestBody = @{
            full_list = (!$Simple.IsPresent)
        }
    }
    process
    {

        Write-Debug -Message ('ParameterSetNamer: ""{0}"".' -f $PSCmdlet.ParameterSetName)

        switch ($PSCmdlet.ParameterSetName)
        {
            'ByID'
            {
                Write-Debug -Message 'Checking by ID'
                foreach ( $ID in $UserID)
                {
                    Write-Verbose -Message ('Processing ID: ""{0}"".' -f $ID)

                    Try
                    {
                        $response = Invoke-TVApiRequest -Token $Token -Resource users -PrincipalID $ID -Method GET -RequestBody $RequestBody
                        Write-Output -InputObject ( Initialize-TVUserObject -Json $response )
                    }
                    catch
                    {
                        Write-Error -Message $_.Exception.Message
                    }
                }
            }

            { ( $_ -eq 'ByName' ) -or ( $_ -eq 'ByEmail' ) -or ( $_ -eq 'All') }
            {

                Write-Debug -Message 'The received parameters are Name, Email or none'
                if ( $PSCmdlet.ParameterSetName -eq 'ByName')
                {
                    Write-Verbose -Message ('Checking by name: ""{0}"".' -f $Name)
                    $RequestBody.name = $Name
                }
                if ( $PSCmdlet.ParameterSetName -eq 'ByEmail')
                {
                    $RequestBody.email = @{$true = $Email -join ', '; $false = $Email -join '' }[ ($Email.Count -ge 2)]
                    Write-Verbose -Message ('Checking by mail: ""{0}"".' -f $RequestBody.email )
                }

                $response = Invoke-TVApiRequest -Token $Token -Resource users -Method GET -RequestBody $RequestBody

                Write-Verbose -Message ('Response: ""{0}"".' -f $response )

                if ( $null -ne $response)
                {
                    $Response.users | ForEach-Object {
                        Write-Verbose -Message $_
                        Write-Output -InputObject ( Initialize-TVUserObject -Json $_ )
                    }
                }
                else
                {
                    Write-Verbose -Message 'No users found'
                }

            }

            'ByPermission'
            {
                throw New-Object -TypeName System.NotImplementedException -ArgumentList 'Search by Permission has not been implemented yet.'
            }
            Default
            {
                throw New-Object -TypeName System.ArgumentException -ArgumentList ('Unexpected ParameterSet received: ""{0}"".' -f $PSCmdlet.ParameterSetName)
            }
        }
    }
    end { }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1G1euY
code,"#Login Azure 
#Create Resource Group
#Create Storage
#Create Network
#Create VM's

#Login to Azure
Login-AzureRmAccount

# Create Resource Group.
 New-AzureRmResourceGroup -Name 'New Vnet with subnets' -Location 'westeurope'

#Create Storage
 $storage = New-azurestorage

 # Create a virtual network
 $Vnet=New-AzureRmVirtualNetwork `
  -ResourceGroupName MyResourceGroup `
  -Location westeurope `
  -Name MyVnet `
  -AddressPrefix 192.168.0.0/16 `
  -Subnet $Subnet1,$Subnet2
  
# Create Subnet 1
$Subnet1 = New-AzureRmVirtualNetworkSubnetConfig `
  -Name Public `
  -AddressPrefix 192.168.0.0/16
# Create Subnet 2
$Subnet2 = New-AzureRmVirtualNetworkSubnetConfig `
  -Name Private `
  -AddressPrefix 192.168.0.0/16

  $storage = New-azurestorage



  
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MOyiQz
code,"task PublishVersion {
    [version] $sourceVersion = (Get-Metadata -Path $manifestPath -PropertyName 'ModuleVersion')
    ""##vso[build.updatebuildnumber]$sourceVersion""

    # Do the same for appveyor
    # https://www.appveyor.com/docs/build-worker-api/#update-build-details
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9VfiaU
code,"﻿<#
Script by: Scott Forsyth
Email: script@nurvox.com

USE: Replace IP octet on large number of DNS files from a windows server 2008/2012 DNS export CSV

- You should have the original export list
- Run script (to test run with ""-whatif"" at the end of line 34

-output is on shell and in CSV with changes made

-to reverse run the DNSreverse.ps1 script
#>

Get-Module DNSServer
$csv = Import-CSV .\dnstest.csv
$dnsResults = @()
$changeCount = 0
#$dnsServer = ""dc_server_name""
#$zone = ""dns.zone""


$csv | ForEach-Object {
    $serverName = $_.Name
    $recordType = $_.Type
    $oldIP = $_.data
    if ( $_.data -as [ipaddress] ) {
        $currentIP = $_.data.split('.')
        if ( ($currentIP[1] -eq ""24"" ) -and ($currentIP[0] -eq ""10"") ) {
            $newIP = $currentIP[0],25,$currentIP[2],$currentIP[3] -join '.'
            if ( ($csv.Where({$_.Name -eq $serverName}).Data) -notcontains $newIP ) {
                $_.data = $newIP
                write-host $_.name "" / "" $_.data ""DNS entry changed"" -ForegroundColor ""green""
                $dnsResults += New-Object PSObject -Property @{Name=$serverName;RecordType=$recordType;OldAddress=$oldIP;NewAddress=$newIP}
                <#
                $new.RecordData.IPv4Address = [System.Net.IPAddress]::parse($newIP)
                $new = $old = Get-DnsServerResourceRecord -ComputerName $dnsServer -ZoneName $zone -Name $serverName
                Set-DnsServerResourceRecord -NewInputObject $new -OldInputObject $old -ZoneName $zone -ComputerName $dnsServer
                #>
                $ChangeCount ++
            } else {
                write-host $_.name "" / "" $_.data ""Exsist - No Change"" -ForegroundColor ""red""
            }
        }
    }
 
}
Write-Host ""--------------------------""
Write-Host ""Changes made: $changeCount""
Write-Host ""--------------------------""
$dnsResults | select Name, Recordtype, OldAddress, NewAddress | Export-Csv -NoTypeInformation .\dnsResults.csv",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6Xnrnj
code,"##################################################
#  WRITTEN BY NOOPZEN  - 2010
##################################################
param(
  $computer = $(throw ""Please specify a computer name."")
  )


################
#FUNCTIONS
################
function ping-ip {  
    param( $ip )  
    trap {$false; continue} 
    $Trimout = 1000  
    $object = New-Object system.Net.NetworkInformation.Ping 
    (($object.Send($ip, $Trimout)).Status -eq 'Success')
    }


$ping = ping-ip $computer
if ($ping) {
	$osver = Get-WmiObject -computername $computer -query ""Select * From Win32_OperatingSystem"" 
	if($osver){
	$tmp = $osver.CSName | out-string
	$tmp = $tmp.TrimEnd()
	$out += ""$tmp`t"" 
	$tmp = $osver.Caption    | out-string
	$tmp = $tmp.TrimEnd()
	$out += ""$tmp`t""                                
	$tmp = $osver.CSDVersion  | out-string
	$tmp = $tmp.TrimEnd()
	$out += ""$tmp`t""                               
	$tmp = $osver.OSArchitecture    | out-string  
	$tmp = $tmp.TrimEnd()                      
	$out += ""$tmp`t"" 
	$out	
	}
	else{
	""ERORR ERROR ERROR WMI COULDNT CONNECT TO $computer ERROR ERROR""
	}
}

else {
""Cannot ping $computer""
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iZ3Nad
code,"param($installPath, $toolsPath, $package, $project)

if ($false -eq $false)
{
  Write-Warning ""This is the unsigned version of Machine.Specifications. Use 'Install-Package Machine.Specifications-Signed' to install the signed version.""
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Eh-szD
code,"[CmdletBinding()]
param
(

    [Parameter()]
    [System.String]
    $DependencyFile = 'RequiredModules.psd1',

    [Parameter()]
    [System.String]
    # Path for PSDepend to be bootstrapped and save other dependencies.
    # Can also be CurrentUser or AllUsers if you wish to install the modules in such scope
    # Default to $PWD.Path/output/modules
    $PSDependTarget = (Join-Path $PSScriptRoot './output/RequiredModules'),

    [Parameter()]
    [uri]
    # URI to use for Proxy when attempting to Bootstrap PackageProvider & PowerShellGet
    $Proxy,

    [Parameter()]
    # Credential to contact the Proxy when provided
    [PSCredential]$ProxyCredential,

    [Parameter()]
    [ValidateSet('CurrentUser', 'AllUsers')]
    [System.String]
    # Scope to bootstrap the PackageProvider and PSGet if not available
    $Scope = 'CurrentUser',

    [Parameter()]
    [System.String]
    # Gallery to use when bootstrapping PackageProvider, PSGet and when calling PSDepend (can be overridden in Dependency files)
    $Gallery = 'PSGallery',

    [Parameter()]
    [PSCredential]
    # Credentials to use with the Gallery specified above
    $GalleryCredential,


    [Parameter()]
    [switch]
    # Allow you to use a locally installed version of PowerShellGet older than 1.6.0 (not recommended, default to $False)
    $AllowOldPowerShellGetModule,

    [Parameter()]
    [System.String]
    # Allow you to specify a minimum version fo PSDepend, if you're after specific features.
    $MinimumPSDependVersion,

    [Parameter()]
    [System.Management.Automation.SwitchParameter]
    $AllowPrerelease,

    [Parameter()]
    [System.Management.Automation.SwitchParameter]
    $WithYAML
)

# Load Defaults for parameters values from Resolve-Dependency.psd1 if not provided as parameter
try
{
    Write-Verbose -Message ""Importing Bootstrap default parameters from '$PSScriptRoot/Resolve-Dependency.psd1'.""
    $ResolveDependencyDefaults = Import-PowerShellDataFile -Path (Join-Path $PSScriptRoot '.\Resolve-Dependency.psd1' -Resolve -ErrorAction Stop)
    $ParameterToDefault = $MyInvocation.MyCommand.ParameterSets.Where{ $_.Name -eq $PSCmdlet.ParameterSetName }.Parameters.Keys
    if ($ParameterToDefault.Count -eq 0)
    {
        $ParameterToDefault = $MyInvocation.MyCommand.Parameters.Keys
    }
    # Set the parameters available in the Parameter Set, or it's not possible to choose yet, so all parameters are an option
    foreach ($ParamName in $ParameterToDefault)
    {
        if (-Not $PSBoundParameters.Keys.Contains($ParamName) -and $ResolveDependencyDefaults.ContainsKey($ParamName))
        {
            Write-Verbose -Message ""Setting $ParamName with $($ResolveDependencyDefaults[$ParamName])""
            try
            {
                $variableValue = $ResolveDependencyDefaults[$ParamName]
                if ($variableValue -is [System.String])
                {
                    $variableValue = $ExecutionContext.InvokeCommand.ExpandString($variableValue)
                }
                $PSBoundParameters.Add($ParamName, $variableValue)
                Set-Variable -Name $ParamName -value $variableValue -Force -ErrorAction SilentlyContinue
            }
            catch
            {
                Write-Verbose -Message ""Error adding default for $ParamName : $($_.Exception.Message)""
            }
        }
    }
}
catch
{
    Write-Warning -Message ""Error attempting to import Bootstrap's default parameters from $(Join-Path $PSScriptRoot '.\Resolve-Dependency.psd1'): $($_.Exception.Message).""
}

Write-Progress -Activity ""Bootstrap:"" -PercentComplete 0 -CurrentOperation ""NuGet Bootstrap""

if (!(Get-PackageProvider -Name NuGet -ForceBootstrap -ErrorAction SilentlyContinue))
{
    $providerBootstrapParams = @{
        Name           = 'nuget'
        force          = $true
        ForceBootstrap = $true
        ErrorAction    = 'Stop'
    }

    switch ($PSBoundParameters.Keys)
    {
        'Proxy'
        {
            $providerBootstrapParams.Add('Proxy', $Proxy)
        }
        'ProxyCredential'
        {
            $providerBootstrapParams.Add('ProxyCredential', $ProxyCredential)
        }
        'Scope'
        {
            $providerBootstrapParams.Add('Scope', $Scope)
        }
    }

    if ($AllowPrerelease)
    {
        $providerBootstrapParams.Add('AllowPrerelease', $true)
    }

    Write-Information ""Bootstrap: Installing NuGet Package Provider from the web (Make sure Microsoft addresses/ranges are allowed)""
    $null = Install-PackageProvider @providerBootstrapParams
    $latestNuGetVersion = (Get-PackageProvider -Name NuGet -ListAvailable | Select-Object -First 1).Version.ToString()
    Write-Information ""Bootstrap: Importing NuGet Package Provider version $latestNuGetVersion to current session.""
    $Null = Import-PackageProvider -Name NuGet -RequiredVersion $latestNuGetVersion -Force
}

Write-Progress -Activity ""Bootstrap:"" -PercentComplete 10 -CurrentOperation ""Ensuring Gallery $Gallery is trusted""

# Fail if the given PSGallery is not Registered
$Policy = (Get-PSRepository $Gallery -ErrorAction Stop).InstallationPo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4zurNw
code,"# Synopsis: Set ClomRepairDelay on all hosts in cluster
#Rename to .ps1
# Download plink and put it in c:\temp http://the.earth.li/~sgtatham/putty/latest/x86/plink.exe

Write-host ""Checked for VMware PowerCLI Powershell plugin, already loaded.""
}
$vCenter = Read-Host ""Provide vCenter Server""
Connect-VIServer $vCenter -credential ( Get-Credential ) -WarningAction Silentlycontinue | Out-Null
$cluster = Read-Host ""Enter VSAN Cluster name""
$clomdelay = Read-Host ""Enter the delay time (in minutes)""
Get-VMHost | Get-AdvancedSetting -name ""VSAN.ClomRepairDelay"" | Out-Null
Get-AdvancedSetting -Entity (Get-VMHost) -Name ""VSAN.ClomRepairDelay"" | Set-AdvancedSetting -Value $clomdelay -Confirm:$false | Out-Null 
Write-Host ""Setting VSAN.ClomRepairDelay to $clomdelay minutes on each host""
#
$hostpass = Read-Host ""Please enter root password for the ESXi hosts""
$str1=’ECHO Y | c:\temp\plink.exe -pw $hostpass -l root ‘
$str2=’ /etc/init.d/clomd restart 2>&1’
$outfile=’c:\temp\report.txt'
    foreach($esxentry in (Get-VMHost|?{$_.Powerstate -eq “PoweredOn”})){
    $esxhost=”‘”+$esxentry.name+”‘”
    $command=$str1+$esxhost+$str2
    $esxentry.name >> $outfile
    $result=Invoke-Expression -Command $command
     foreach($resultline in 1..$result.length){
        $result[$resultline] >> $outfile
          }
      }
#
Write-host ""Restarting clomd service on all hosts.. Please wait""
sleep 10
Write-Host ""VSAN.ClomRepairDelay set to $clomdelay""
sleep 3
Write-Host ""Disconnected from $vcenter""
Disconnect-VIServer $vCenter -Confirm:$false
Write-Host ""Script Complete""",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kvf-Fm
code,"function Post-Commit() {
    param (
        $ixBug,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sCommitRevision,
        $sModuleName,
        $sBranchName
    )

    Post-ExtendedEvent -sEventType ""commit"" `
                       -ixBug $ixBug `
                       -dtEventUtc $dtEventUtc `
                       -sPersonName $sPersonName `
                       -sMessage $sMessage `
                       -sExternalUrl $sExternalUrl `
                       -sCommitRevision $sCommitRevision `
                       -sModuleName $sModuleName `
                       -sBranchName $sBranchName
}

function Post-BuildSuccess() {
    param (
        $ixBug,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sBuildName,
        $sModuleName,
        $sBranchName
    )

    Post-ExtendedEvent -sEventType ""build-success"" `
                       -ixBug $ixBug `
                       -dtEventUtc $dtEventUtc `
                       -sPersonName $sPersonName `
                       -sMessage $sMessage `
                       -sExternalUrl $sExternalUrl `
                       -sBuildName $sBuildName `
                       -sModuleName $sModuleName `
                       -sBranchName $sBranchName
}


function Post-BuildFailure() {
    param (
        $ixBug,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sBuildName,
        $sModuleName,
        $sBranchName
    )

    Post-ExtendedEvent -sEventType ""build-failure"" `
                       -ixBug $ixBug `
                       -dtEventUtc $dtEventUtc `
                       -sPersonName $sPersonName `
                       -sMessage $sMessage `
                       -sExternalUrl $sExternalUrl `
                       -sBuildName $sBuildName `
                       -sModuleName $sModuleName `
                       -sBranchName $sBranchName
}


function Post-ReleaseNote() {
    param (
        $ixBug,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sModuleName,
        $sBranchName
    )

    Post-ExtendedEvent -sEventType ""releasenote"" `
                       -ixBug $ixBug `
                       -dtEventUtc $dtEventUtc `
                       -sPersonName $sPersonName `
                       -sMessage $sMessage `
                       -sExternalUrl $sExternalUrl `
                       -sModuleName $sModuleName `
                       -sBranchName $sBranchName
}


function Post-Deployment() {
    param (
        $ixBug,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sModuleName,
        $sBranchName
    )

    Post-ExtendedEvent -sEventType ""deployment"" `
                       -ixBug $ixBug `
                       -dtEventUtc $dtEventUtc `
                       -sPersonName $sPersonName `
                       -sMessage $sMessage `
                       -sExternalUrl $sExternalUrl `
                       -sModuleName $sModuleName `
                       -sBranchName $sBranchName
}



function Post-ExtendedEvent() {
    param (
        $ixBug,
        $sEventType,
        $dtEventUtc,
        $sPersonName,
        $sMessage,
        $sExternalUrl,
        $sCommitRevision,
        $sBuildName,
        $sModuleName,
        $sBranchName
    )

    $sPluginId=""FBExtendedEvents@goit.io""

    $params = @{
      ""sAction"" = ""event""
      ""ixBug""= $ixBug
      ""sEventType"" = $sEventType
      ""dtEventUtc""= $dtEventUtc
      ""sPersonName"" = $sPersonName
      ""sMessage""= $sMessage
      ""sExternalUrl"" = $sExternalUrl
      ""sCommitRevision""= $sCommitRevision
      ""sBuildName"" = $sBuildName
      ""sModuleName"" = $sModuleName
      ""sBranchName"" = $sBranchName
      ""token"" = $sToken
    }

    $url = ""$cFbUrl/default.asp?pg=pgPluginRaw&sPluginId=$sPluginId""
    try {
        $tmp = Invoke-WebRequest -Uri $url -Method POST -Body $params -TimeoutSec 30 -ErrorAction SilentlyContinue

        Write-Host ""Created extended event. $tmp""
    }
    catch [Exception] {
        Write-Error ""Failed to post data to URL: $url ($_)""
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0qkQs6
code,"#
# Module manifest for module 'PSGet_AzureRM.MachineLearning'
#
# Generated by: Microsoft Corporation
#
# Generated on: 11/3/2017
#

@{

# Script module or binary module file associated with this manifest.
# RootModule = ''

# Version number of this module.
ModuleVersion = '0.16.0'

# Supported PSEditions
# CompatiblePSEditions = @()

# ID used to uniquely identify this module
GUID = 'bb030259-49f9-46ef-806f-2a3f5a2e018e'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = 'Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Microsoft Azure PowerShell - Machine Learning Web Services cmdlets for Azure Resource Manager'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.5.2'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @(@{ModuleName = 'AzureRM.Profile'; ModuleVersion = '4.1.1'; })

# Assemblies that must be loaded prior to importing this module
RequiredAssemblies = '.\Microsoft.Azure.Management.MachineLearning.dll'

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
NestedModules = @('.\Microsoft.Azure.Commands.MachineLearning.dll')

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = @()

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = 'Move-AzureRmMlCommitmentAssociation', 
               'Get-AzureRmMlCommitmentAssociation', 
               'Get-AzureRmMlCommitmentPlanUsageHistory', 
               'Remove-AzureRmMlCommitmentPlan', 'Update-AzureRmMlCommitmentPlan', 
               'Get-AzureRmMlCommitmentPlan', 'Remove-AzureRmMlWebService', 
               'Get-AzureRmMlWebService', 'Update-AzureRmMlWebService', 
               'Export-AzureRmMlWebService', 'Get-AzureRmMlWebServiceKeys', 
               'Import-AzureRmMlWebService', 'New-AzureRmMlCommitmentPlan', 
               'New-AzureRmMlWebService', 
               'Add-AzureRmMlWebServiceRegionalProperty'

# Variables to export from this module
# VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = @()

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = 'Azure','ResourceManager','ARM','MachineLearning'

        # A URL to the license for this module.
        LicenseUri = 'https://aka.ms/azps-license'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/Azure/azure-powershell'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '* Add support for online help
    - Run Get-Help with the -Online parameter to open the online help in your default Internet browser'

        # External dependent modules of this module
        # ExternalModuleDependencies = ''

    } # End of PSData hashtable
    
 } # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dbBiHs
code,"﻿Push-Location (Split-Path -Path $MyInvocation.MyCommand.Definition -Parent)

# Load posh-git module from current directory
Import-Module .\posh-git

# If module is installed in a default location ($env:PSModulePath),
# use this instead (see about_Modules for more information):
# Import-Module posh-git


# Set up a simple prompt, adding the git prompt parts inside git repos
function global:prompt {
    $realLASTEXITCODE = $LASTEXITCODE

    Write-Host($pwd.ProviderPath) -nonewline

    Write-VcsStatus

    $global:LASTEXITCODE = $realLASTEXITCODE
    return ""> ""
}

Pop-Location

Start-SshAgent -Quiet",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",f65yut
code,"########################################################################
#
# Linux on Hyper-V and Azure Test Code, ver. 1.0.0
# Copyright (c) Microsoft Corporation
#
# All rights reserved.
# Licensed under the Apache License, Version 2.0 (the """"License"""");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
# THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION
# ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR
# PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
#
# See the Apache Version 2.0 License for specific language governing
# permissions and limitations under the License.
#
########################################################################

<#
.Synopsis
    Verify that VM sees all the FC disks attached in MPIO scenario.

.Description
    This script counts the number of connected fibre channel.
    Pushes a script to count the number of disks visible inside the VM
    and compares the results.
    A typical test case definition for this test script would look
    similar to the following:
    <test>
        <testName>FC_disks_multipath_detection</testName>
        <setupscript>setupscripts\FC_AddFibreChannelHba.ps1</setupscript>
        <testScript>setupscripts\FC_MultipathDetection.ps1</testScript>
        <timeout>10600</timeout>
        <testParams>
                <param>snapshotname=ICABase</param>
                <param>TC_COVERED=FC-xx</param>
                <param>vSANName=FC_NAME</param>
        </testParams>
            <onError>Continue</onError>
            <noReboot>False</noReboot>
        </test>

.Parameter vmName
    Name of the VM to perform the test with.

.Parameter hvServer
    Name of the Hyper-V server hosting the VM.

.Parameter testParams

.Example
    setupScripts\FC_MultipathDetection.ps1 -vmName ""myVm"" -hvServer ""localhost"" -TestParams ""TC_COVERED=FC-08""
#>

param([string] $vmName, [string] $hvServer, [string] $testParams)

$remoteScript = ""FC_multipath_detect.sh""
$summaryLog  = ""${vmName}_summary.log""
$retVal = $False


######################################################################
#
#   Helper function to execute command on remote machine.
#
#######################################################################
function Execute ([string] $command)
{
    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} $command
    return $?
}
#######################################################################
# Runs a remote script on the VM an returns the log.
#######################################################################
function RunRemoteScript($remoteScript)
{
    $retValue = $False
    $stateFile     = ""state.txt""
    $TestCompleted = ""TestCompleted""
    $TestAborted   = ""TestAborted""
    $TestRunning   = ""TestRunning""
    $TestFailed    =""TestFailed""
    $timeout       = 6000

    ""./${remoteScript} > ${remoteScript}.log"" | out-file -encoding ASCII -filepath runtest.sh

    .\bin\pscp -i ssh\${sshKey} .\runtest.sh root@${ipv4}:
    if (-not $?)
    {
       Write-Output ""ERROR: Unable to copy runtest.sh to the VM""
       return $False
    }

     .\bin\pscp -i ssh\${sshKey} .\remote-scripts\ica\${remoteScript} root@${ipv4}:
    if (-not $?)
    {
       Write-Output ""ERROR: Unable to copy ${remoteScript} to the VM""
       return $False
    }

    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} ""dos2unix ${remoteScript} 2> /dev/null""
    if (-not $?)
    {
        Write-Output ""ERROR: Unable to run dos2unix on ${remoteScript}""
        return $False
    }

    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} ""dos2unix runtest.sh  2> /dev/null""
    if (-not $?)
    {
        Write-Output ""ERROR: Unable to run dos2unix on runtest.sh""
        return $False
    }

    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} ""chmod +x ${remoteScript}   2> /dev/null""
    if (-not $?)
    {
        Write-Output ""ERROR: Unable to chmod +x ${remoteScript}""
        return $False
    }
    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} ""chmod +x runtest.sh  2> /dev/null""
    if (-not $?)
    {
        Write-Output ""ERROR: Unable to chmod +x runtest.sh "" -
        return $False
    }

    # Run the script on the vm
    .\bin\plink.exe -i ssh\${sshKey} root@${ipv4} ""./runtest.sh""

    # Return the state file
    while ($timeout -ne 0 )
    {
    .\bin\pscp -q -i ssh\${sshKey} root@${ipv4}:${stateFile} . #| out-null
    $sts = $?
    if ($sts)
    {
        if (test-path $stateFile)
        {
            $contents = Get-Content -Path $stateFile
            if ($null -ne $contents)
            {
                    if ($contents -eq $TestCompleted)
                    {
                        Write-Output ""Info : state file contains Testcompleted""
                        $retValue = $True
                        break

                    }

                    if ($contents -eq $TestAborted)
                    {
                         Write-Output ""Info : State file contains TestAborted fail",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ex3YlE
code,"$ErrorActionPreference = 'Stop'
Set-StrictMode -Version 'Latest' -ErrorAction 'Stop' -Verbose

Get-Childitem -Recurse '*.csproj' | ForEach-Object {
    & dotnet add $_ package --version '6.0.0' RabbitMQ.Client
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iM5mrA
code,"﻿<#############################################################################
TBD

Copyright 2015-2017 Kirk Munro

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#############################################################################>

function Clear-LodPxDefaultParameterValue {
    [CmdletBinding()]
    [OutputType([System.Void])]
    param()
    try {
        #region Clear all default parameter values.

        foreach ($parameterName in 'LabId','ApiKey','ServerAddress') {
            foreach ($key in @($script:PSDefaultParameterValues.Keys)) {
                if ($key -match "":${parameterName}`$"") {
                    $script:PSDefaultParameterValues.Remove($key)
                    $global:PSDefaultParameterValues.Remove($key)
                }
            }
        }

        #endregion
    } catch {
        $PSCmdlet.ThrowTerminatingError($_)
    }
}

Export-ModuleMember -Function Clear-LodPxDefaultParameterValue",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-QPcco
code,"mkdir .build
cd .build
cmake -g ""Visual Studio 15 2017 Win64"" ..
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3BeRnV
code,"<#
.SYNOPSIS
*Internal*.  Use `Set-CDotNetAppSetting` function instead.
.LINK
Set-CDotNetAppSetting
#>

# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
[CmdletBinding()]
param(
    [Parameter(Mandatory=$true,Position=0)]
    [string]
    $Name,

    [Parameter(Mandatory=$true,Position=1)]
    [string]
    $Value
)

Set-StrictMode -Version 'Latest'

$Name = [Text.Encoding]::Unicode.GetString( [Convert]::FromBase64String($Name) )
$Value = [Text.Encoding]::Unicode.GetString( [Convert]::FromBase64String($Value) )

Add-Type -AssemblyName System.Configuration

$config = [Configuration.ConfigurationManager]::OpenMachineConfiguration()
$appSettings = $config.AppSettings.Settings
if( $appSettings[$Name] )
{
    $appSettings[$Name].Value = $Value
}
else
{
    $appSettings.Add( $Name, $Value )
}
$config.Save()

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TfCa22
code,"﻿# -----------------------------------------------------------------------
# Copyright		: GSoft @2014
# Model  		: Cross Site Publishing CMS
# File          : Export-TermGroups.ps1.template
# Description	: Export Portal Taxonomy
# -----------------------------------------------------------------------

# Define working directory
$0 = $myInvocation.MyCommand.Definition
$CommandDirectory = [System.IO.Path]::GetDirectoryName($0)

# Configuration Files
$DefaultKeywordsConfigurationFile = ""[[DSP_DEFAULT_PortalKeywordsConfigurationFile]]""

$CustomKeywordsConfigurationFile = ""[[DSP_CUSTOM_PortalKeywordsConfigurationFile]]""

$KeywordsConfigurationFilePath = $CommandDirectory + "".\"" + $DefaultKeywordsConfigurationFile

if(![string]::IsNullOrEmpty($CustomKeywordsConfigurationFile))
{
    $KeywordsConfigurationFilePath = $CommandDirectory + "".\"" + $CustomKeywordsConfigurationFile
}

# Taxonomy Settings
$DefautKeywordstermGroup = ""[[DSP_DEFAULT_PortalKeywordsTermGroup]]""

$CustomKeywordsTermGroup = ""[[DSP_CUSTOM_PortalKeywordsTermGroup]]""

$KeywordsTermGroup = $DefautKeywordstermGroup

if(![string]::IsNullOrEmpty($CustomKeywordsTermGroup))
{
    $KeywordsTermGroup = $CustomKeywordsTermGroup
}

$site = Get-SPSite ""[[DSP_PortalPublishingSiteUrl]]""
if ($site -eq $null)
{
    return
}

$taxonomySession = $site | Get-DSPTaxonomySession
if ($taxonomySession -eq $null)
{
    return
}

$termStore = $null
if (![string]::IsNullOrEmpty($TermStoreName) -and !$TermStoreName.StartsWith(""[["")) 
{
    $termStore = $taxonomySession | Get-DSPTermStore -Name $TermStoreName
} 
else 
{
    $termStore = $taxonomySession | Get-DSPTermStore -Default
}

if ($termStore -eq $null)
{
    return
}

# Export Navigation Term Group
Try
{
    if ($termStore.Groups[$KeywordsTermGroup] -ne $null)
    {
        Export-SPTerms -Group $termStore.Groups[$KeywordsTermGroup] -OutputFile $ExportFilePath -ErrorAction Stop
        Write-Host ""Export successful.""
    }
    else
    {
        Write-Warning ""Navigation term group $KeywordsTermGroup doesn't exist. No export done.""
    }	
}
Catch
{
    Write-Warning ""$_ No export done.""
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",c6rrWS
code,"<#
.SYNOPSIS
   On-Prem Migrate to Azure SQL using Powershell
	
.DESCRIPTION
   On-Prem Migrate to Azure SQL using Powershell
      
.EXAMPLE
    3_Create_Azure_DB_from_Bacpac.ps1
	
.Inputs
    

.Outputs

	
.NOTES    
	George Walkey
	Richmond, VA USA

.LINK
	https://github.com/gwalkey
	
#>

# --------------------------------
# SQL On-Premises Backup To URL
# --------------------------------
# https://msdn.microsoft.com/en-us/library/dn435916(v=sql.120).aspx
# https://msdn.microsoft.com/en-us/library/dn435916(v=sql.130).aspx

Login-AzureRmAccount 

# Prerequisites
# Create/Use Storage Account
# Create/Use Blob Container
# Grab Storage Container Keys and Create a local SQL Credential

# Create SQL Credential using TSQL from PS
$SQLCreateCommand=
""DROP CREDENTIAL AzureSQLStore; CREATE CREDENTIAL AzureSQLStore WITH IDENTITY = 'myazuresqldbserver',SECRET = 'myazurestorageaccountkey' ""


# Connect to SQL using .NET DataAdapter Method - NOT invoke-sqlcmd
$SQLInstance = ""localhost""
$DataSet = New-Object System.Data.DataSet
$SQLConnectionString = ""Data Source=$SQLInstance;Integrated Security=SSPI;""
$Connection = New-Object System.Data.SqlClient.SqlConnection
$Connection.ConnectionString = $SQLConnectionString
$SqlCmd = New-Object System.Data.SqlClient.SqlCommand
$SqlCmd.CommandText = $strSQL
$SqlCmd.Connection = $Connection
$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
$SqlAdapter.SelectCommand = $SqlCmd

# Execute SQL
try
{
    $SqlAdapter.Fill($DataSet) | Out-Null

    if ($Dataset.Tables.Count -gt 0)
    {
        $results = $DataSet.Tables[0].Rows[0]
        Write-Output ($results.Column1)
    }
    else
    {
        Write-Output ""Command Completed""
    }

}
catch
{
    Write-Output ""Error Running SQL Command""
}
finally
{
    $Connection.Close()
}


# Backup the Database to URL using TSQL
[string]$strSQL=`
""BACKUP DATABASE AdventureWorks2014 
TO URL = 'https://myazuresqldbserver.blob.core.windows.net/mycontainer/AdventureWorks2014.bak' 
      WITH CREDENTIAL = 'AzureSQLStore' 
     ,COMPRESSION
     ,FORMAT
     ,INIT
     ,STATS = 5
""

# Connect to SQL using .NET DataAdapter Method - NOT invoke-sqlcmd
$SQLInstance = ""localhost""
$DataSet = New-Object System.Data.DataSet
$SQLConnectionString = ""Data Source=$SQLInstance;Integrated Security=SSPI;""
$Connection = New-Object System.Data.SqlClient.SqlConnection
$Connection.ConnectionString = $SQLConnectionString
$SqlCmd = New-Object System.Data.SqlClient.SqlCommand
$SqlCmd.CommandText = $strSQL
$SqlCmd.Connection = $Connection
$SqlAdapter = New-Object System.Data.SqlClient.SqlDataAdapter
$SqlAdapter.SelectCommand = $SqlCmd

# Execute SQL
try
{
    $SqlAdapter.Fill($DataSet) | Out-Null

    if ($Dataset.Tables.Count -gt 0)
    {
        $results = $DataSet.Tables[0].Rows[0]
        Write-Output ($results.Column1)
    }
    else
    {
        Write-Output ""Command Completed""
    }

}
catch
{
    Write-Output ""Error Running SQL Command""
}
finally
{
    $Connection.Close()
}


# Or Backup the Databases using this Azure Powershell Cmdlet
# https://azure.microsoft.com/en-us/documentation/articles/sql-database-import-powershell/

$StorageName = ""myazurestor01""
$ContainerName = ""mycontainer""

$credentialName = ""AzureSQLStore""
$targetbackupFile = ""AdventureWorks2014-PShell.bak""
Backup-SqlDatabase `
    -ServerInstance ""localhost"" `
    -Database ""AdventureWorks2014"" `
    -backupFile $targetbackupFile `
    -SqlCredential $credentialName `
    -CompressionOption On `
    -BackupContainer ""https://$StorageName.blob.core.windows.net/$ContainerName/"" `
    -BackupAction Database `
    -CopyOnly `
    -MediaDescription ""Daily Backup (Get-Date).ToString('yyyy-MM-dd')"" `
    -Checksum


$targetbackupFile = ""AdventureWorksDW2014-PShell.bak""
Backup-SqlDatabase `
    -ServerInstance ""localhost"" `
    -Database ""AdventureWorkDW2014"" `
    -backupFile $targetbackupFile `
    -SqlCredential $credentialName `
    -CompressionOption On `
    -BackupContainer ""https://$StorageName.blob.core.windows.net/$ContainerName/"" `
    -BackupAction Database `
    -CopyOnly `
    -MediaDescription ""Daily Backup (Get-Date).ToString('yyyy-MM-dd')"" `
    -Checksum
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3zkFP8
code,"﻿$here = Split-Path -Parent $MyInvocation.MyCommand.Path
$sut = (Split-Path -Leaf $MyInvocation.MyCommand.Path).Replace("".Tests."", ""."")
. ""$here\$sut""

Describe ""New-Archive"" {

    # arrange
    $content=""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem. Ut turpis felis, pulvinar a semper sed, adipiscing id dolor.""
    $file = New-item ""TestDrive:\one.txt"" -Type File

    Set-Content $file -value $content

    It -skip ""Should create a compressed file"" {

        # act
        { $archive = New-Archive $file -Type ZIP } | Should Not Throw

        # archive should exist
        Test-Path $archive | Should Be $true

    }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-BW7Dh
code,"﻿[CmdletBinding(SupportsShouldProcess=$true)]
Param(
    [string] $InstallerArchiveFilePath
)

$artifactoryBaseUri = 'http://artrepo.daptiv.com:8081/artifactory'
$artifactoryRepo = 'installs'
$artifactoryOrg = 'microsoft'
$artifactoryModule = 'visual_studio_build_tools_offline_installer'
$installerArchive = ""$artifactoryModule.zip""
$tempDir = Join-Path (Get-Item $env:TEMP) 'whatIfDefault'

function New-TemporaryDirectory {
    $tmpDir = Join-Path (Get-Item $env:TEMP).FullName ""tmp_$([System.Guid]::NewGuid().ToString('N'))""
    $tmpDir = $tmpDir.Substring(0, ([System.Math]::Min($tmpDir.Length, 80))) # installer requires <= 80
    return (New-Item $tmpDir -ItemType Directory).FullName
}

function Get-LatestInstallerUri {
    return [System.Uri][String]::Join('/',
        @($artifactoryBaseUri, $artifactoryRepo, $artifactoryOrg, $artifactoryModule, ""$artifactoryModule-[RELEASE].zip""))
}

function Test-VS2017MSBuild($vswhere) {
    return $vswhere.displayName -eq 'Visual Studio Build Tools 2017' `
        -and (Test-Path (Join-Path $vswhere.installationPath 'MSBuild\15.0\Bin\MSBuild.exe'))
}

try {
    $ErrorActionPreference = 'Stop'

    if ($PSCmdlet.ShouldProcess($env:TEMP, 'New-TemporaryDirectory')) {
        $tempDir = New-TemporaryDirectory
    }

    $installerArchivePath = Join-Path $tempDir $installerArchive
    $installerDownloadLocation = Get-LatestInstallerUri

    Write-Verbose ""Installer archive: $installerArchive""
    Write-Verbose ""Installer download: $installerDownloadLocation""
    Write-Verbose ""Temp dir: $tempDir""
    Write-Verbose ""Installer archive path: $installerArchivePath""

    if ($InstallerArchiveFilePath) {
        Write-Output 'Copying installer archive...'
        if ($PSCmdlet.ShouldProcess($InstallerArchiveFilePath, 'Copy-Item')) {
            Copy-Item $InstallerArchiveFilePath $installerArchivePath
            Write-Output 'Copied installer archive.'
        }
    } else {
        Write-Output 'Downloading installer archive...'
        if ($PSCmdlet.ShouldProcess($installerDownloadLocation, 'WebClient.DownloadFile')) {
            (New-Object System.Net.WebClient).DownloadFile($installerDownloadLocation, $installerArchivePath)
            Write-Output 'Downloaded installer archive.'
        }
    }

    Write-Output 'Expanding installer archive...'
    if ($PSCmdlet.ShouldProcess($installerArchivePath, 'Expand-Archive')) {
        Add-Type -Assembly System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory($installerArchivePath, $tempDir)
        Write-Output 'Expanded installer archive.'
    }

    $installer = Join-Path $tempDir 'vs_setup.exe'

    $installerParams =
        '--add Microsoft.VisualStudio.Workload.MSBuildTools',
        '--add Microsoft.VisualStudio.Workload.NetCoreBuildTools',
        '--quiet',
        '--wait',
        '--norestart',
        '--noweb'

    Write-Output 'Starting installer in the background...'
    Write-Verbose ""Installer: $installer""
    Write-Verbose ""Installer parameters: $([String]::Join(' ', $installerParams))""
    if ($PSCmdlet.ShouldProcess($installer, 'Start-Process')) {
        $installerProcess = Start-Process $installer $installerParams -NoNewWindow -PassThru -Wait
        if ($installerProcess.ExitCode -gt 0) {
            throw ""Installer exited with code $($installerProcess.ExitCode)""
        }
        Write-Output 'Installer completed.'
    }

    Write-Output 'Testing for success...'
    # https://github.com/Microsoft/vswhere
    $vswherePath = Join-Path ${env:ProgramFiles(x86)} 'Microsoft Visual Studio\Installer\vswhere.exe'
    if (!(Test-Path $vswherePath)) {
        throw 'Testing failed: vswhere.exe not found'
    }
    $vswheres = & $vswherePath -products * -requires Microsoft.Component.MSBuild -format json `
        | Out-String `
        | ConvertFrom-Json
    $vswheres | ForEach-Object { Write-Verbose ""vswhere: $_"" }
    if ($vswheres.Where({ (Test-VS2017MSBuild $_) -eq $true }, 'First').Count -eq 0) {
        throw 'Testing failed: Build Tools for Visual Studio 2017 and/or MSBuild not found'
    }
    Write-Output 'Testing succeeded.'
} catch {
    throw
} finally {
    $ErrorActionPreference = 'Continue'

    Write-Output 'Cleaning up temp directory...'
    if ($PSCmdlet.ShouldProcess($tempDir, 'Remove-Item')) {
        Remove-Item $tempDir -Recurse -Force -ErrorAction SilentlyContinue
    }
    Write-Output 'Cleaned up temp directory.'
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",98FA1x
code,"Function Public () {
<#
.SYNOPSIS
    This cmdlet configures nothing and does it remarkably well.

.DESCRIPTION
    This cmdlet configures nothing and does it remarkably well.
    It takes objects as input and it sets nothing to 42.
#>
    
    Function Nested ($InputObject) {
        Get-Item $InputObject
    }
}

Function Get-PlasterTemplate ($InputObject) {
    Get-Item $InputObject
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Bqf7h-
code,"Function demonstrate_isecreambasic
{
    Add-IseMenu -Name ""Get""  @{
        ""Process"" = { Get-Process } 
        ""Service"" = { Get-Service } 
        ""Hotfix"" = {Get-Hotfix}
    }

    Add-IseMenu -Name ""Get1"" -module SQLIse @{
        ""Process"" = { Get-Process } 
        ""Service"" = { Get-Service } 
        ""Hotfix"" = {Get-Hotfix}
    }

    Add-IseMenu -Name ""Get2"" @{
        ""Process"" = { Get-Process } | Add-Member NoteProperty order  2 -PassThru
        ""Service"" = { Get-Service } | Add-Member NoteProperty order  1 -PassThru
        ""Hotfix"" = {Get-Hotfix}     | Add-Member NoteProperty order  3 -PassThru | Add-Member NoteProperty ShortcutKey ""CTRL + ALT+B"" -PassThru
    }


    Add-IseMenu -Name ""Verb""  @{
        Get = @{
            Process = { Get-Process } | Add-Member NoteProperty order  2 -PassThru
            Service = { Get-Service } | Add-Member NoteProperty order  1 -PassThru
            Hotfix = { Get-Hotfix }   | Add-Member NoteProperty order  3 -PassThru | Add-Member NoteProperty ShortcutKey ""CTRL + ALT+B"" -PassThru
        } | Add-Member NoteProperty order  2 -PassThru
        Import = @{
            Module = { Import-Module } 
        } | Add-Member NoteProperty order  1 -PassThru
    }

    Add-IseMenu -Name ""Verb2""  @{
        Get = @{
            Process = @{} | Add-Member NoteProperty order  2 -PassThru
            Service = { Get-Service } | Add-Member NoteProperty order  1 -PassThru
            Hotfix = { Get-Hotfix }   | Add-Member NoteProperty order  3 -PassThru | Add-Member NoteProperty ShortcutKey ""CTRL + ALT+B"" -PassThru
        } | Add-Member NoteProperty order  2 -PassThru
        Import = @{
            Module = { Import-Module } 
        } | Add-Member NoteProperty order  1 -PassThru
    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QBd2NS
code,"﻿<#
    .SYNOPSIS
        T-Mon Port Monitoring

    .DESCRIPTION
        Probe used to check common ports are open. Eventually this will store the data in a sql table and the data may be used in other probes for discovering services to scan 

    .PARAMETER Port
        Specify a port or several ports to check against. Depending on your firewall rules, if they are very strict, this may or may not be useful

	.PARAMETER SQLInstance
        Parameter that allows the user to specify what sql instance to use for connection.

    .PARAMETER SQLDatabase
        Allows user to specify database on a specified instance to import the results to. Invoke-Sqlcmd use's the permissions of the user who executed the command to connect to the database.

    .EXAMPLE


    .NOTES
        In furture releases this will be turned into a fuction that will run against assetList table in SQL as well as on the fly for one of runs.
        Logic will also be added for in-depth checks for certain services if found to be open as well as storing all data in SQL

        This one is very early stages
#>


. E:\Documents\WindowsPowerShell\T-Mon\T-Mon_Configuration.ps1

$Ports = @('20','21','23','25','53','80','109','110','161','162','389','443','515','567','990','1433','3389')
$Computers = @('192.168.1.117')
$ErrorActionPreference = 'SilentlyContinue'

foreach ($Computer in $Computers)
{
    foreach ($Port in $Ports)
    {
        $Socket = New-Object Net.Sockets.TcpClient
        $Socket.Connect(""$Computer"",""$Port"")

        if ($Socket.Connected) 
        {
            Write-Host ""$Computer : $Port is Open""
                $Socket.Close()
        }

        else
        {
            Write-Host ""$Computer : $Port is Closed or Filtered""
                $Socket.Close()
        }


    $Socket.Dispose()

    }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZG9xN-
code,"﻿param ($instance, $cred)
Write-Host ""CloudWatch"" -ForegroundColor Yellow
Write-Verbose ""InstanceId=$($instance.InstanceId)""
trap { break } #This stops execution on any exception
$ErrorActionPreference = 'Stop'
. .\ssmcommon.ps1

function CMApplyMetrics ($instance)
{
$doc = @""
{
  ""schemaVersion"": ""1.0"",
  ""description"": ""Instance configuration"",
  ""runtimeConfig"": {

    ""aws:cloudWatch"": {
      ""description"": ""Execute demo plugin"",
      ""properties"": {
        ""EngineConfiguration"": {
          ""PollInterval"": ""00:00:15"",
          ""Components"": [
            {
              ""Id"": ""PerformanceCounter"",
              ""FullName"": ""AWS.EC2.Windows.CloudWatch.PerformanceCounterComponent.PerformanceCounterInputComponent,AWS.EC2.Windows.CloudWatch"",
              ""Parameters"": {
                ""CategoryName"": ""Memory"",
                ""CounterName"": ""Available MBytes"",
                ""InstanceName"": """",
                ""MetricName"": ""Memory"",
                ""Unit"": ""Megabytes"",
                ""DimensionName"": """",
                ""DimensionValue"": """"
              }
            },
            {
              ""Id"": ""CloudWatch"",
              ""FullName"": ""AWS.EC2.Windows.CloudWatch.CloudWatch.CloudWatchOutputComponent,AWS.EC2.Windows.CloudWatch"",
              ""Parameters"": {
                ""AccessKey"": """",
                ""SecretKey"": """",
                ""Region"": ""us-east-1"",
                ""NameSpace"": ""SSMDemo""
              }
            },
            {
              ""Id"": ""CloudWatchLogsForEC2ConfigService"",
              ""FullName"": ""AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch"",
              ""Parameters"": {
                ""Region"": ""us-east-1"",
                ""LogGroup"": ""SSM-Log-Group"",
                ""LogStream"": ""{instance_id}""
              }
            },			
            {
			  ""Id"": ""Ec2ConfigETW"",
			  ""FullName"": ""AWS.EC2.Windows.CloudWatch.EventLog.EventLogInputComponent,AWS.EC2.Windows.CloudWatch"",
			  ""Parameters"": {
			    ""LogName"": ""EC2ConfigService"",
			    ""Levels"": ""7""
			  }
			}
          ],
          ""Flows"": {
            ""Flows"": [
              ""PerformanceCounter,CloudWatch"",
			  ""Ec2ConfigETW,CloudWatchLogsForEC2ConfigService""
            ]
          }
        }
      }
    }

  }
}
""@
    Write-Verbose ""CMApply instanceid=$($instance.InstanceId)""
    SSMAssociate $instance $doc 
}

function CMApplyLogs ($instance)
{
$doc = @""
{
  ""schemaVersion"": ""1.0"",
  ""description"": ""Instance configuration"",
  ""runtimeConfig"": {
    ""aws:cloudWatch"": {
      ""description"": ""CloudWatch Logs Demo"",
      ""properties"": {
			""EngineConfiguration"": {
				""PollInterval"": ""00:00:15"",
				""Components"": [
					{
						""Id"": ""SSMLogs"",
						""FullName"": ""AWS.EC2.Windows.CloudWatch.CustomLog.CustomLogInputComponent,AWS.EC2.Windows.CloudWatch"",
						""Parameters"": {
							""LogDirectoryPath"": ""C:\\Program Files\\Amazon\\Ec2ConfigService\\Logs"",
							""TimestampFormat"": ""yyyy-MM-dd HH:mm:ss"",
							""Encoding"": ""UTF-8"",
							""Filter"": ""Ec2ConfigPluginFramework*"",
							""CultureName"": ""en-US"",
							""TimeZoneKind"": ""Local""
						}
					},
					{
						""Id"": ""CloudWatchLogs"",
						""FullName"": ""AWS.EC2.Windows.CloudWatch.CloudWatchLogsOutput,AWS.EC2.Windows.CloudWatch"",
						""Parameters"": {
							""AccessKey"": """",
							""SecretKey"": """",
							""Region"": ""us-east-1"",
							""LogGroup"": ""SSM-Log-Group"",
							""LogStream"": ""{instance_id}""
						}
					}
				],
				""Flows"": {
					""Flows"": [""SSMLogs,CloudWatchLogs""]
				}
			} 
		}
    }
  }
}
""@
    Write-Verbose ""CMApply instanceid=$($instance.InstanceId)""
    SSMAssociate $instance $doc 
}

Get-SSMAssociationList `
    -AssociationFilterList @{key='InstanceId'; Value=$instance.InstanceId} |`
     Remove-SSMAssociation -Force

#CMApplyMetrics -Instance $instance
CMApplyLogs -Instance $instance

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5nGsT5
code,"task Clean-Packages {
    Remove-Item -Force -Recurse $packagesDirectory;
    CreateDirectory $packagesDirectory;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Z0YftW
code,"﻿function Find-MrSqlDatabaseChange {

<#
.SYNOPSIS
    Queries the active transaction log and transaction log backup file(s) for
    insert, update, or delete operations on the specified database.
 
.DESCRIPTION
    Find-MrSqlDatabaseChange is a PowerShell function that is designed to query
    the active transaction log and transaction log backups for either insert,
    update, or delete operations that occurred on the specified database within
    the specified datetime range. The Invoke-MrSqlDataReader function which is
    also part of the MrSQL script module is required.
 
.PARAMETER ServerInstance
    The name of an instance of the SQL Server database engine. For default
    instances, only specify the server name: 'ServerName'. For named instances,
    use the format 'ServerName\InstanceName'.

.PARAMETER TransactionName
    The type of transaction to search for. Valid values are insert, update, or
    delete. The default value is 'Delete'.
 
.PARAMETER Database
    The name of the database to query the transaction log for.

.PARAMETER StartTime
    The beginning datetime to start searching from. The default is at the
    beginning of the current day.

.PARAMETER EndTime
    The ending datetime to stop searching at. The default is at the current
    datetime (now).

.PARAMETER Credential
    SQL Authentication userid and password in the form of a credential object.
 
.EXAMPLE
     Find-MrSqlDatabaseChange -ServerInstance sql04 -Database pubs

.EXAMPLE
     Find-MrSqlDatabaseChange -ServerInstance sql04 -TransactionName Update `
     -Database Northwind -StartTime (Get-Date).AddDays(-14) `
     -EndTime (Get-Date).AddDays(-7) -Credential (Get-Credential)

.EXAMPLE
     'AdventureWorks2012' | Find-MrSqlDatabaseChange -ServerInstance sql02\qa
 
.INPUTS
    String
 
.OUTPUTS
    DataRow
 
.NOTES
    Author:  Mike F Robbins
    Website: http://mikefrobbins.com
    Twitter: @mikefrobbins
#>

    [CmdletBinding()]
    param (        
        [Parameter(Mandatory)]
        [string]$ServerInstance,
        
        [ValidateSet('Insert', 'Update', 'Delete')]
        [string]$TransactionName = 'Delete',

        [Parameter(Mandatory,
                   ValueFromPipeline)]
        [string]$Database,

        [ValidateNotNullOrEmpty()]
        [datetime]$StartTime = (Get-Date).Date,

        [ValidateNotNullOrEmpty()]
        [datetime]$EndTime = (Get-Date),

        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty
    )

    BEGIN {
        $Params = @{
            ServerInstance = $ServerInstance
        }
        
        if($PSBoundParameters.Credential) {
            $Params.Credential = $Credential
        }
    }

    PROCESS {
        Write-Verbose -Message ""Obtaining a list of transaction log backup files for the $Database database""

        $TransactionLogBackupHistory = Invoke-MrSqlDataReader @Params -Database msdb -Query ""
        SELECT backupset.backup_set_id, backupset.last_family_number, backupset.database_name, backupset.recovery_model, backupset.type,
        backupset.position, backupmediafamily.physical_device_name, backupset.backup_start_date, backupset.backup_finish_date
        FROM backupset
        INNER JOIN backupmediafamily
        ON backupset.media_set_id = backupmediafamily.media_set_id
        WHERE database_name = '$Database'
        AND type = 'L'
        AND backup_start_date >= '$StartTime'""

        $TransactionLogBackups = $TransactionLogBackupHistory | Where-Object backup_finish_date -le $EndTime
        $Params.Database = $Database
        
        if (($TransactionLogBackups.count) -ne (($TransactionLogBackups | Select-Object -ExpandProperty backup_set_id -Unique).count)) {
            Write-Verbose -Message 'Transaction log backups were found that are striped accross multiple backup files'

            $UniqueBackupSetId = $TransactionLogBackups | Select-Object -ExpandProperty backup_set_id -Unique
            
            $BackupInfo = foreach ($SetId in $UniqueBackupSetId) {
                Write-Verbose -Message ""Creating an updated list of transaction log backup files for backup set $($SetId)""

                $BackupSet = $TransactionLogBackups | Where-Object backup_set_id -in $SetId
                [pscustomobject]@{            
                    backup_set_id = $BackupSet | Select-Object -First 1 -ExpandProperty backup_set_id
                    last_family_number = $BackupSet | Select-Object -First 1 -ExpandProperty last_family_number
                    database_name = $BackupSet | Select-Object -First 1 -ExpandProperty database_name
                    recovery_model = $BackupSet | Select-Object -First 1 -ExpandProperty recovery_model
                    type = $BackupSet | Select-Object -First 1 -ExpandProperty type
                    position = $BackupSet | Select-Object -First 1 -ExpandProperty position
                    physical_device_name = $BackupSet.physical_device_name
                    backup_start_date = $BackupSet | Select-Object -First 1 -ExpandProperty backup_start_date
                    backup_fin",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0m_5DB
code,"function Get-EXRAccessTokenADAL {
    [CmdletBinding()]
    param (
        [Parameter(Position = 0, Mandatory = $true)]
        [string]
        $MailboxName,
		
        [Parameter(Position = 1, Mandatory = $false)]
        [string]
        $ClientId,
		
        [Parameter(Position = 2, Mandatory = $false)]
        [string]
        $redirectUrl,
		
        [Parameter(Position = 3, Mandatory = $false)]
        [string]
        $ClientSecret,
		
        [Parameter(Position = 4, Mandatory = $false)]
        [string]
        $ResourceURL,
		
        [Parameter(Position = 5, Mandatory = $false)]
        [switch]
        $Beta,
		
        [Parameter(Position = 6, Mandatory = $false)]
        [String]
        $Prompt,

        [Parameter(Position = 7, Mandatory = $false)]
        [switch]
        $CacheCredentials,

        [Parameter(Position = 8, Mandatory = $false)]
        [string]
        $TenantId,

        [Parameter(Position = 9, Mandatory = $false)]
        [switch]
        $useLoggedOnCredentials,
		
        [Parameter(Position = 10, Mandatory = $false)]
        [String]
        $AADUserName
		
    )
    Begin {
		Add-Type -AssemblyName System.Web
        if ([String]::IsNullOrEmpty($Prompt)) {
            $Prompt = ""RefreshSession""
        }
        $PromptBehavior = New-Object Microsoft.IdentityModel.Clients.ActiveDirectory.PlatformParameters -ArgumentList $Prompt
        if ([String]::IsNullOrEmpty($redirectUrl)) {
            $redirectUrl = [System.Web.HttpUtility]::UrlEncode(""urn:ietf:wg:oauth:2.0:oob"")
        }
        $ResourceURI = ""https://"" + $ResourceURL
        $DomainName = $MailboxName.Split('@')[1]
        $EndpointUri = 'https://login.microsoftonline.com/' + (Get-EXRTenantId -DomainName $DomainName)
        $Context = New-Object Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext($EndpointUri)
        $Script:ADALContext = $EndpointUri
        if ($useLoggedOnCredentials.IsPresent) {
            $AADCredential = New-Object ""Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential"" -ArgumentList $AADUserName
            $authResult = [Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextIntegratedAuthExtensions]::AcquireTokenAsync($Context, $ResourceURI, $ClientId, $AADcredential)
            if ($authResult.Result.AccessToken) {
                $token = $authResult.Result
            }
            elseif ($authResult.Exception) {    
                throw ""An error occured getting access token: $($authResult.Exception.InnerException)""    
            }
        }
        else {
            if (![String]::IsNullOrEmpty(($ClientSecret))) {
                $ClientCredentails = new-object Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential -ArgumentList $ClientId,$ClientSecret
                $authResult = $Context.AcquireTokenAsync($ResourceURI, $ClientCredentails)
                
            }else{
			    $authResult = $Context.AcquireTokenAsync($ResourceURI, $ClientId, $redirectUrl, $PromptBehavior)
            }

			if ($authResult.Result.AccessToken) {
                $token = $authResult.Result
            }
            elseif ($authResult.Exception) {    
                throw ""An error occured getting access token: $($authResult.Exception.InnerException)""    
            }
        }
        if ($token) {
            if ([bool]($token.PSobject.Properties.name -match ""AccessToken"")) {
                #$AdalToken.access_token = 
                Add-Member -InputObject $Token -NotePropertyName access_token -NotePropertyValue (Get-ProtectedToken -PlainToken $token.AccessToken) -Force
            }
            Add-Member -InputObject $token -NotePropertyName clientid -NotePropertyValue $ClientId
            Add-Member -InputObject $token -NotePropertyName ADAL -NotePropertyValue $True
            Add-Member -InputObject $token -NotePropertyName redirectUrl -NotePropertyValue $redirectUrl
            Add-Member -InputObject $token -NotePropertyName resource -NotePropertyValue $ResourceURI
            Add-Member -InputObject $token -NotePropertyName resourceCache -NotePropertyValue $ResourceURL
            Add-Member -InputObject $token -NotePropertyName mailbox -NotePropertyValue $MailboxName
            if (![String]::IsNullOrEmpty(($ClientSecret))) {
                Add-Member -InputObject $token -NotePropertyName refresh -NotePropertyValue $false
            }else{
                 Add-Member -InputObject $token -NotePropertyName refresh -NotePropertyValue $true
            }
            if (![String]::IsNullOrEmpty($TenantId)) {
                Add-Member -InputObject $token -NotePropertyName TenantId -NotePropertyValue $TenantId
            }
            if ($Beta.IsPresent) {
                Add-Member -InputObject $token -NotePropertyName Beta -NotePropertyValue $True
            }
            if ($CacheCredentials.IsPresent) {
                if (!$Script:TokenCache.ContainsKey($ResourceURL)) {	
                    $ResourceTokens = @{}		
                    $Script:TokenCache.Add($ResourceURL, $ResourceTokens)
                }
                Ad",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SHES5j
code,"﻿. $PSScriptRoot\..\..\Support\PowerShell\IntegrationTestSafe.ps1

Describe ""Get-NotificationTrigger_IT"" -Tag @(""PowerShell"", ""IntegrationTest"") {
    It ""can retrieve all triggers"" {
        $triggers = Get-Device -Id (Settings Device) | Get-NotificationTrigger

        ($triggers|where inherited -EQ $true).Count|Should Be 1
        ($triggers|where inherited -NE $true).Count|Should Be 5
    }

    It ""can retrieve uninherited triggers"" {
        $triggers = Get-Device -Id (Settings Device) | Get-NotificationTrigger -Inherited $false

        ($triggers|where type -EQ state).Count|Should Be 1
        ($triggers|where type -EQ volume).Count|Should Be 1
        ($triggers|where type -EQ speed).Count|Should Be 1
        ($triggers|where type -EQ change).Count|Should Be 1
        ($triggers|where type -EQ threshold).Count|Should Be 1
    }

    It ""can filter by OnNotificationAction"" {
        $triggers = Get-Device -Id (Settings Device) | Get-NotificationTrigger *ticket* -Inherited $false

        $triggers.Count | Should Be 1
    }

    It ""can filter by type"" {
        $triggers = Get-Device -Id (Settings Device) | Get-NotificationTrigger -Type State -Inherited $false

        $triggers.Count|Should Be 1
    }

    It ""resolves the channel of an inherited trigger"" {

        $triggers = @(Get-Sensor -Id (Settings UpSensor) | Get-NotificationTrigger -Type Threshold | where Inherited -EQ $true)

        $triggers.Count | Should Be 1

        $triggers.Channel | Should Be ""Total""
    }

    It ""retrieves as a readonly user"" {
        ReadOnlyClient {
            Get-Device (Settings Device) | Get-NotificationTrigger
        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UVqcXY
code,"﻿<#-------------Create Deployment Start------------------#>
Import-Module .\TestLibs\RDFELibs.psm1 -Force
$result = """"
$testResult = """"
$resultArr = @()

$isDeployed = DeployVMS -setupType $currentTestData.setupType -Distro $Distro -xmlConfig $xmlConfig
if ($isDeployed)
{
	try
	{
		$hs1VIP = $AllVMData.PublicIP
		$hs1vm1sshport = $AllVMData.SSHPort
		$hs1ServiceUrl = $AllVMData.URL
		$hs1vm1Dip = $AllVMData.InternalIP
		LogMsg ""Trying to restart $($AllVMData.RoleName)...""
		if ( $UseAzureResourceManager )
		{
			$restartVM = Restart-AzureVM -ResourceGroupName $AllVMData.ResourceGroupName -Name $AllVMData.RoleName -Verbose
			if ( $restartVM.Status -eq ""Succeeded"" )
			{
				$isSSHOpened = isAllSSHPortsEnabledRG -AllVMDataObject $AllVMData
				if ( $isSSHOpened -eq ""True"" )
				{
					$isRestarted = $true
				}
				else
				{
					LogErr ""VM is not available after restart""
					$isRestarted = $false
				}
			}
			else
			{
				$isRestarted = $false
				LogErr ""Restart Failed. Operation ID : $($restartVM.TrackingOperationId)""
			}
		}
		else
		{
			$out = RestartAllDeployments -DeployedServices $isDeployed
			$isRestarted = $?
		}
		if ($isRestarted)
		{
			LogMsg ""Virtual machine restart successful.""
			$testResult = ""PASS""
		}
		else
		{
			LogErr ""Virtual machine restart failed.""
			$testResult = ""FAIL""
		}

	}

	catch
	{
		$ErrorMessage =  $_.Exception.Message
		LogMsg ""EXCEPTION : $ErrorMessage""   
	}
	Finally
	{
		$metaData = """"
		if (!$testResult)
		{
			$testResult = ""Aborted""
		}
		$resultArr += $testResult
#$resultSummary +=  CreateResultSummary -testResult $testResult -metaData $metaData -checkValues ""PASS,FAIL,ABORTED"" -testName $currentTestData.testName# if you want to publish all result then give here all test status possibilites. if you want just failed results, then give here just ""FAIL"". You can use any combination of PASS FAIL ABORTED and corresponding test results will be published!
	}   
}

else
{
	$testResult = ""FAIL""
	$resultArr += $testResult
}

$result = GetFinalResultHeader -resultarr $resultArr

#Clean up the setup
DoTestCleanUp -result $result -testName $currentTestData.testName -deployedServices $isDeployed -ResourceGroups $isDeployed

#Return the result and summery to the test suite script..
return $result
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k8sAvm
code,"﻿## PowerShell ISE: VIM Editor Style Theme ##
 
<#
.SYNOPSIS
    This script sets an ISE Theme to similar to the old VIM editor.
.DESCRIPTION
    This script sets the key values in $PsIse.Options to values consistent
    with the VIM editor, beloved by many, particularly on the Powershell
    product team. This script is based on Davis Mohundro's blog post ( http://bit.ly/iib5IM),
    updated for RTM of PowerShell V2.0. See also 
.NOTES
    File Name  : Set-ISEThemeVIM.ps1
    Author     : Thomas Lee - tfl@psp.co.uk
    Requires   : PowerShell Version 2.0 (ISE only)
.LINKS
    This script posted to:
        http://jdhitsolutions.com/blog/powershell/3562/friday-fun-theme-me-up
        http://www.pshscripts.blogspot.com
 .EXAMPLE
    This script when run resets colours on key panes, including
    colourising tokens in the script pane. Try it and see it...

 .USAGE
    Edit the script to match your environment and run this in the PowerShell ISE console. Edit / remove the theme through 'Tools --> Options --> 'Manage Themes'
#>
 
# PowerShell ISE version of the VIM blackboard theme at 
# http://www.vim.org/scripts/script.php?script_id=2280
 
# Set font name and size
$psISE.Options.FontName = 'Courier New'
$psISE.Options.FontSize = 10
 
# Set colours for command pane
$psISE.Options.ConsolePaneBackgroundColor    = '#FF000000'
$psISE.Options.ConsolePaneTextBackgroundColor    = '#FF000000'
 
# Set colours for script pane
$psise.options.ScriptPaneBackgroundColor    ='#FF000000'
 
# Set colours for tokens in Script Pane
$psISE.Options.TokenColors['Command'] = '#FFFFFF60'
$psISE.Options.TokenColors['Unknown'] = '#FFFFFFFF'
$psISE.Options.TokenColors['Member'] = '#FFFFFFFF'
$psISE.Options.TokenColors['Position'] = '#FFFFFFFF'
$psISE.Options.TokenColors['GroupEnd'] = '#FFFFFFFF'
$psISE.Options.TokenColors['GroupStart'] = '#FFFFFFFF'
$psISE.Options.TokenColors['LineContinuation'] = '#FFFFFFFF'
$psISE.Options.TokenColors['NewLine'] = '#FFFFFFFF'
$psISE.Options.TokenColors['StatementSeparator'] = '#FFFFFFFF'
$psISE.Options.TokenColors['Comment'] = '#FFAEAEAE'
$psISE.Options.TokenColors['String'] = '#FF00D42D'
$psISE.Options.TokenColors['Keyword'] = '#FFFFDE00'
$psISE.Options.TokenColors['Attribute'] = '#FF84A7C1'
$psISE.Options.TokenColors['Type'] = '#FF84A7C1'
$psISE.Options.TokenColors['Variable'] = '#FF00D42D'
$psISE.Options.TokenColors['CommandParameter'] = '#FFFFDE00'
$psISE.Options.TokenColors['CommandArgument'] = '#FFFFFFFF'
$psISE.Options.TokenColors['Number'] = '#FF98FE1E'
 
<#
Set the script foreground color to white so text files
display properly.
Set Verbose ForegroundColor to Yellow
Set Debug Foreground color to light purple
 
-JDH
#>
$psise.options.ScriptPaneForegroundColor= 'White'
$psise.Options.VerboseForegroundColor = '#FFFFFF00'
$psise.Options.DebugForegroundColor ='#FFE500E5'
 
$psise.Options.XmlTokenColors['Comment'] = '#FF00FF00'   
$psise.Options.XmlTokenColors['CommentDelimiter'] = '#FF00FF00'                                                                 
$psise.Options.XmlTokenColors['ElementName']= '#FFFFFF00'                      
$psise.Options.XmlTokenColors['MarkupExtension']= '#FFFF8C00'
$psise.Options.XmlTokenColors['Attribute']= '#FFFF0000'
$psise.Options.XmlTokenColors['Quote']= '#FFE5E500'                            
$psise.Options.XmlTokenColors['QuotedString']= '#FFFFFFFF'
$psise.Options.XmlTokenColors['Tag']= '#FF00FFFF'                                 
$psise.Options.XmlTokenColors['Text']= '#FFFFFFFF'                          
$psise.Options.XmlTokenColors['CharacterData']= '#FFD4D4D4'",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h6_zK4
code,"<#

.SYNOPSIS
	Clean Nintex Workflows History (SharePoint List & SQL Progress Table) on all SPWeb of a Site Collection
	
.DESCRIPTION
	Clean Nintex Workflows History (SharePoint List & SQL Progress Table) on all SPWeb of a Site Collection
	
.PARAMETER status
	Status of the Workflow Instance to be collected
	Should be 'Completed','Cancelled','Error'
	
.PARAMETER siteUrl
	(Mandatory) URL of the SharePoint Site (SPSite)
	
.EXAMPLE
	cleanWorkflowsHistoryOnSiteCollection.ps1 siteUrl <siteUrl> -status <'Completed','Cancelled','Error'>
	
.OUTPUTS
	None
	
.LINK
	None
	
.NOTES
	Source: https://github.com/OhNotreDame/SPPS
	Created by: JBO
	Created: 29.03.2017
	Last Updated by: JBO
	Last Updated: 30.03.2017
	
#>
param
(
	[Parameter(Mandatory=$true, Position=1)]
	[ValidateNotNullOrEmpty()]
	[string]$siteURL,
	[Parameter(Mandatory=$true, Position=2)]
	[ValidateNotNullOrEmpty()]
	[ValidateSet('Completed','Cancelled','Error')]
	[string]$status
)


Clear-Host
Remove-Module *

########################
### GLOBAL VARIABLES ###
########################
$scriptName = $([System.IO.Path]::GetFileNameWithoutExtension($MyInvocation.MyCommand.Definition))

Write-Host ""#**************************************************************#"" -Foregroundcolor Cyan `r
Write-Host ""# $scriptName started"" -ForegroundColor Cyan `r
Write-Host ""#**************************************************************#"" -Foregroundcolor Cyan `r		
Write-Host ""# status: $status"" -Foregroundcolor Cyan `r	# 
Write-Host ""# siteURL: $siteURL"" -Foregroundcolor Cyan `r	


#####################################################
# Loading SharePoint Assembly and PS Snapin
#####################################################
Add-PsSnapin Microsoft.Sharepoint.PowerShell -EA silentlycontinue
[System.Reflection.Assembly]::LoadWithPartialName(""Microsoft.SharePoint"") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName(""Nintex.Workflow"") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName(""Nintex.Workflow.SupportConsole"") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName(""Nintex.Workflow.Administration"") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName(""Nintex.Forms.SharePoint.Administration"") | Out-Null
Import-Module ""$PSScriptRoot\CleanWorkflowsHistoryCommon.psm1""


########################
####### SETTINGS #######
########################
$logsFolderName = $PSScriptRoot+""\Logs\""

Start-SPAssignment -Global

try 
{	
	#### PRE-REQUISITES ####
	if(!(Test-Path $logsFolderName))
	{
		New-Item $logsFolderName -type Directory -Force | Out-Null
	}
	
	#### TRANSCRIPT / LOGS ####
	$logsFileName = $logsFolderName + $scriptName  + ""_""+ $(get-date -format 'yyyyMMdd_HHmmss') + "".log""
	Start-Transcript -path $logsFileName -noclobber -Append

	$site = Get-SPSite $siteURL -ErrorAction SilentlyContinue
	if($site -ne $null) 
	{
		foreach($subWeb in $site.AllWebs)		
		{
			.\CleanWorkflowsHistoryOnSite.ps1 -siteURL $subWeb.URL -status $status
		}
	}
	else
	{
		Write-Warning ""Site '$siteURL' does not exist.""
	}
}
catch [Exception]
{	
	Write-Host """"
	Write-Host ""/!\ [$scriptName] An exception has been caught /!\ "" -Foregroundcolor Red `r
	Write-Host ""Type: "" $_.Exception.GetType().FullName -Foregroundcolor Red `r
	Write-Host ""Message: "" $_.Exception.Message -Foregroundcolor Red `r
	Write-Host ""Stacktrace: `n"" $_.Exception.Stacktrace -Foregroundcolor Red `r
}
finally
{
	if($site -ne $null) 
	{
		$site.Dispose();
	}
	
	Write-Host """"
	Write-Host ""#**************************************************************#"" -Foregroundcolor Cyan `r
	Write-Host ""# $scriptName ended"" -ForegroundColor Cyan `r
	Write-Host ""#**************************************************************#"" -Foregroundcolor Cyan `r
	
	#####################################################
	# Stopping SPAssignment and Transcript
	#####################################################
	Stop-SPAssignment -Global
	Stop-Transcript
	
}



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kGuf8z
code,"function AddOrUpdate-Reference($scriptsFolderProjectItem, $fileNamePattern, $newFileName) {
    try {
        $referencesFileProjectItem = $scriptsFolderProjectItem.ProjectItems.Item(""_references.js"")
    }
    catch {
        # _references.js file not found
        return
    }

    if ($referencesFileProjectItem -eq $null) {
        # _references.js file not found
        return
    }

    $referencesFilePath = $referencesFileProjectItem.FileNames(1)
    $referencesTempFilePath = Join-Path $env:TEMP ""_references.tmp.js""

    if ((Select-String $referencesFilePath -pattern $fileNamePattern).Length -eq 0) {
        # File has no existing matching reference line
        # Add the full reference line to the beginning of the file
        ""/// <reference path=""""$newFileName"""" />"" | Add-Content $referencesTempFilePath -Encoding UTF8
         Get-Content $referencesFilePath | Add-Content $referencesTempFilePath
    }
    else {
        # Loop through file and replace old file name with new file name
        Get-Content $referencesFilePath | ForEach-Object { $_ -replace $fileNamePattern, $newFileName } > $referencesTempFilePath
    }

    # Copy over the new _references.js file
    Copy-Item $referencesTempFilePath $referencesFilePath -Force
    Remove-Item $referencesTempFilePath -Force
}

function Remove-Reference($scriptsFolderProjectItem, $fileNamePattern) {
    try {
        $referencesFileProjectItem = $scriptsFolderProjectItem.ProjectItems.Item(""_references.js"")
    }
    catch {
        # _references.js file not found
        return
    }

    if ($referencesFileProjectItem -eq $null) {
        return
    }

    $referencesFilePath = $referencesFileProjectItem.FileNames(1)
    $referencesTempFilePath = Join-Path $env:TEMP ""_references.tmp.js""

    if ((Select-String $referencesFilePath -pattern $fileNamePattern).Length -eq 1) {
        # Delete the line referencing the file
        Get-Content $referencesFilePath | ForEach-Object { if (-not ($_ -match $fileNamePattern)) { $_ } } > $referencesTempFilePath

        # Copy over the new _references.js file
        Copy-Item $referencesTempFilePath $referencesFilePath -Force
        Remove-Item $referencesTempFilePath -Force
    }
}

# Extract the version number from the file in the package's content\scripts folder
$packageScriptsFolder = Join-Path $installPath Content\Scripts
$modernizrFileName = Join-Path $packageScriptsFolder ""modernizr-*.js"" | Get-ChildItem -Exclude ""*.min.js"",""*-vsdoc.js"" | Split-Path -Leaf
$modernizrFileNameRegEx = ""modernizr-((?:\d+\.)?(?:\d+\.)?(?:\d+\.)?(?:\d+)).js""
$modernizrFileName -match $modernizrFileNameRegEx
$ver = $matches[1]

# Get the project item for the scripts folder
try {
    $scriptsFolderProjectItem = $project.ProjectItems.Item(""Scripts"")
    $projectScriptsFolderPath = $scriptsFolderProjectItem.FileNames(1)
}
catch {
    # No Scripts folder
    Write-Host ""No scripts folder found""
}
# SIG # Begin signature block
# MIIdkwYJKoZIhvcNAQcCoIIdhDCCHYACAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUwmTZPByG67WOrWnlegUL/Bde
# sJ2gghhTMIIEwjCCA6qgAwIBAgITMwAAAMRudtBNPf6pZQAAAAAAxDANBgkqhkiG
# 9w0BAQUFADB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4G
# A1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEw
# HwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EwHhcNMTYwOTA3MTc1ODUy
# WhcNMTgwOTA3MTc1ODUyWjCBsjELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
# bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
# b3JhdGlvbjEMMAoGA1UECxMDQU9DMScwJQYDVQQLEx5uQ2lwaGVyIERTRSBFU046
# MjEzNy0zN0EwLTRBQUExJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNl
# cnZpY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoA5rFUpl2jKM9
# /L26GuVj6Beo87YdPTwuOL0C+QObtrYvih7LDNDAeWLw+wYlSkAmfmaSXFpiRHM1
# dBzq+VcuF8YGmZm/LKWIAB3VTj6df05JH8kgtp4gN2myPTR+rkwoMoQ3muR7zb1n
# vNiLsEpgJ2EuwX5M/71uYrK6DHAPbbD3ryFizZAfqYcGUWuDhEE6ZV+onexUulZ6
# DK6IoLjtQvUbH1ZMEWvNVTliPYOgNYLTIcJ5mYphnUMABoKdvGDcVpSmGn6sLKGg
# iFC82nun9h7koj7+ZpSHElsLwhWQiGVWCRVk8ZMbec+qhu+/9HwzdVJYb4HObmwN
# Daqpqe17AgMBAAGjggEJMIIBBTAdBgNVHQ4EFgQUiAUj6xG9EI77i5amFSZrXv1V
# 3lAwHwYDVR0jBBgwFoAUIzT42VJGcArtQPt2+7MrsMM1sw8wVAYDVR0fBE0wSzBJ
# oEegRYZDaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMv
# TWljcm9zb2Z0VGltZVN0YW1wUENBLmNybDBYBggrBgEFBQcBAQRMMEowSAYIKwYB
# BQUHMAKGPGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljcm9z
# b2Z0VGltZVN0YW1wUENBLmNydDATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG
# 9w0BAQUFAAOCAQEAcDh+kjmXvCnoEO5AcUWfp4/4fWCqiBQL8uUFq6cuBuYp8ML4
# UyHSLKNPOoJmzzy1OT3GFGYrmprgO6c2d1tzuSaN3HeFGENXDbn7N2RBvJtSl0Uk
# ahSyak4TsRUPk/WwMQ0GOGNbxjolrOR41LVsSmHVnn8IWDOCWBj1c+1jkPkzG51j
# CiAnWzHU1Q25A/0txrhLYjNtI4P3f0T0vv65X7rZAIz3ecQS/EglmADfQk/zrLgK
# qJdxZKy3tXS7+35zIrDegdAH2G7d3jvCNTjatrV7cxKH+ZX9oEsFl10uh/U83KA2
# QiQJQMtbjGSzQV2xRpcNf2GpHBRPW0sK4yL3wzCCBgAwggPooAMCAQICEzMAAADD
# Dpun2LLc9ywAAAAAAMMwDQYJKoZIhvcNAQELBQAwfjELMAkGA1UEBhMCVVMxEzAR
# BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
# Y3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0IENvZGUgU2ln
# bmluZyBQQ0EgMjAxMTAe",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TmpMWu
code,". '.\inc\Config.ps1'
. '.\inc\Params.ps1'
. '.\inc\Functions.ps1' 

# Main Program
PushWim $wim_file",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AGcEHy
code,"$PackageName = 'neo4j-community'
# Per-package parameters
$downloadUrl = 'http://neo4j.com/artifact.php?name=neo4j-community-3.5.0-alpha07-windows.zip'
$md5Checksum = 'e2f3406b232e75a784607f395ed75b06'
$neozipSubdir = 'neo4j-community-3.5.0-alpha07'
# major.minor.update.build
# Build is always 14
$privateJavaVersion = ""8.0.131.11""
$privateJreChecksumMD5 = ""9458b62000daac0f48155323185f1c4c""

# START Helper Functions
Function Get-IsJavaInstalled
{
  [cmdletBinding(SupportsShouldProcess=$false,ConfirmImpact='Low',DefaultParameterSetName='Default')]
  param ()
  
  Process
  {
    $javaPath = ''
    $javaVersion = ''
    $javaCMD = ''
    
    $EnvJavaHome = ""$($Env:JAVA_HOME)""
    
    # Is JAVA specified in an environment variable
    if (($javaPath -eq '') -and ($EnvJavaHome -ne $null))
    {
      $javaPath = $EnvJavaHome
      # Modify the java path if a JRE install is detected
      if (Test-Path -Path ""$javaPath\bin\javac.exe"") { $javaPath = ""$javaPath\jre"" }
    }

    # Attempt to find Java in registry
    $regKey = 'Registry::HKLM\SOFTWARE\JavaSoft\Java Runtime Environment'    
    if (($javaPath -eq '') -and (Test-Path -Path $regKey))
    {
      $javaVersion = ''
      try
      {
        $javaVersion = [string](Get-ItemProperty -Path $regKey -ErrorAction 'Stop').CurrentVersion
        if ($javaVersion -ne '')
        {
          $javaPath = [string](Get-ItemProperty -Path ""$regKey\$javaVersion"" -ErrorAction 'Stop').JavaHome
        }
      }
      catch
      {
        #Ignore any errors
        $javaVersion = ''
        $javaPath = ''
      }
    }

    # Attempt to find Java in registry (32bit Java on 64bit OS)
    $regKey = 'Registry::HKLM\SOFTWARE\Wow6432Node\JavaSoft\Java Runtime Environment'    
    if (($javaPath -eq '') -and (Test-Path -Path $regKey))
    {
      $javaVersion = ''
      try
      {
        $javaVersion = [string](Get-ItemProperty -Path $regKey -ErrorAction 'Stop').CurrentVersion
        if ($javaVersion -ne '')
        {
          $javaPath = [string](Get-ItemProperty -Path ""$regKey\$javaVersion"" -ErrorAction 'Stop').JavaHome
        }
      }
      catch
      {
        #Ignore any errors
        $javaVersion = ''
        $javaPath = ''
      }
    }
    
    # Attempt to find Java in the search path
    if ($javaPath -eq '')
    {
      $javaExe = (Get-Command 'java.exe' -ErrorAction SilentlyContinue)
      if ($javaExe -ne $null)
      {
        $javaCMD = $javaExe.Path
        $javaPath = Split-Path -Path $javaCMD -Parent
      }
    }

    if ($javaPath -eq '') { Write-Host ""Unable to determine the path to java.exe""; return $false }
    if ($javaCMD -eq '') { $javaCMD = ""$javaPath\bin\java.exe"" }
    if (-not (Test-Path -Path $javaCMD)) { Write-Error ""Could not find java at $javaCMD""; return $false }
 
    return $true
  }
}
function Invoke-ModifyConfig($File,$Key,$Value) {
  Write-Verbose ""Setting $($Key)=$($Value) in file $File""
  $RegexKey = $Key.Replace('.','\.')
    
  $fileContent = [IO.File]::ReadAllText($File)
  
  $found = $false
  if ($fileContent -match ""(?mi)^$($RegexKey)="") {
    Write-Verbose ""Found $Key""
    $fileContent = $fileContent -replace ""(?mi)^$($RegexKey)=.+$"",""$($Key)=$($Value)""
    $found = $true
  }

  if ($fileContent -match ""(?mi)^#$($RegexKey)="") {
    Write-Verbose ""Found $Key in a comment""   
    $fileContent = $fileContent -replace ""(?mi)^#$($RegexKey)=.+$"",""$($Key)=$($Value)""
    $found = $true    
  }
  
  if (-not $found) {
    Write-Verbose ""Adding $key""
    $fileContent += ""`n$($Key)=$($Value)""
  }

  $Utf8NoBomEncoding = New-Object System.Text.UTF8Encoding($False)
  [IO.File]::WriteAllText($File,$fileContent,$Utf8NoBomEncoding) | Out-NUll
}

function Invoke-InstallPrivateJRE($Destination) {
  # Adpated from the server-jre8 chocolatey package
  # https://github.com/rgra/choco-packages/tree/master/server-jre8

  Write-Host ""Installing Server JRE $privateJavaVersion to $Destination""

  #8.0.xx to jdk1.8.0_xx
  $versionArray = $privateJavaVersion.Split(""."")
  $majorVersion = $versionArray[0]
  $minorVersion = $versionArray[1]
  $updateVersion = $versionArray[2]
  $buildNumber = $versionArray[3]
  $folderVersion = ""jdk1.$majorVersion.$($minorVersion)_$updateVersion""

  $fileNameBase = ""server-jre-$($majorVersion)u$($updateVersion)-windows-x64""
  $fileName = ""$fileNameBase.tar.gz""

  $url = ""http://download.oracle.com/otn-pub/java/jdk/$($majorVersion)u$($updateVersion)-b$buildNumber/d54c1d3a095b4ff2b6607d096fa80163/$fileName""

  # Download location info
  $tempDir = Join-Path -Path $ENV:Temp -ChildPath ""choco_jre_$PackageName""
  $tarGzFile = ""$tempDir\$fileName""
  $tarFile = ""$tempDir\$fileNameBase.tar""

  # Cleanup
  if (Test-Path -Path $tempDir) { Remove-Item -Path $tempDir -Force -Recurse -Confirm:$false | Out-Null }

  New-Item -Path $tempDir -ItemType 'Directory' | Out-Null

  $webClient = New-Object System.Net.WebClient
  $result = $webClient.headers.Add('Cookie','gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie')
  Write-Host ""Downloading $url ...""
  $result = $webClient.DownloadFile($url, $tarGzFile)
  Get-Checksum",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AC4xRC
code,"from cStringIO import StringIO
from struct import pack, unpack, error as StructError
from .log import log
from .structures import fields


class DBFile(object):
	""""""
	Base class for WDB and DBC files
	""""""

	@classmethod
	def open(cls, file, build, structure, environment):
		if isinstance(file, basestring):
			file = open(file, ""rb"")

		instance = cls(file, build, environment)
		instance._readHeader()
		instance.setStructure(structure)
		instance._rowDynamicFields = 0 # Dynamic fields index, used when parsing a row
		instance._readAddresses()

		return instance

	def __init__(self, file=None, build=None, environment=None):
		self._addresses = {}
		self._values = {}
		self.file = file
		self.build = build
		self.environment = environment

	def __repr__(self):
		return ""%s(file=%r, build=%r)"" % (self.__class__.__name__, self.file, self.build)

	def __contains__(self, id):
		return id in self._addresses

	def __getitem__(self, item):
		if isinstance(item, slice):
			keys = sorted(self._addresses.keys())[item]
			return [self[k] for k in keys]

		if item not in self._values:
			self._parse_row(item)

		return self._values[item]

	def __setitem__(self, item, value):
		if not isinstance(item, int):
			raise TypeError(""DBFile indices must be integers, not %s"" % (type(item)))

		if isinstance(value, DBRow):
			self._values[item] = value
			self._addresses[item] = -1
		else:
			# FIXME technically we should allow DBRow, but this is untested and will need resetting parent
			raise TypeError(""Unsupported type for DBFile.__setitem__: %s"" % (type(value)))

	def __delitem__(self, item):
		if item in self._values:
			del self._values[item]
		del self._addresses[item]

	def __iter__(self):
		return self._addresses.__iter__()

	def __len__(self):
		return len(self._addresses)

	def _add_row(self, id, address, reclen):
		if id in self._addresses: # Something's wrong here
			log.warning(""Multiple instances of row %r found in %s"" % (id, self.file.name))
		self._addresses[id] = (address, reclen)

	def _parse_field(self, data, field, row=None):
		""""""
		Parse a single field in stream.
		""""""
		if field.dyn > self._rowDynamicFields:
			return None # The column doesn't exist in this row, we set it to None

		ret = None
		try:
			if isinstance(field, fields.StringField):
				ret = self._parse_string(data)

			elif isinstance(field, fields.DataField): # wowcache.wdb
				length = getattr(row, field.master)
				ret = data.read(length)

			elif isinstance(field, fields.DynamicMaster):
				ret, = unpack(""<I"", data.read(4))
				self._rowDynamicFields = ret

			else:
				ret, = unpack(""<%s"" % (field.char), data.read(field.size))
		except StructError:
			log.warning(""Field %s could not be parsed properly"" % (field))
			ret = None

		return ret

	def supportsSeeking(self):
		return hasattr(self.file, ""seek"")

	def append(self, row):
		""""""
		Append a row at the end of the file.
		If the row does not have an id, one is automatically assigned.
		""""""
		i = len(self) + 1 # FIXME this wont work properly in incomplete files
		if ""_id"" not in row:
			row[""_id""] = i
		self[i] = row

	def clear(self):
		""""""
		Delete every row in the file
		""""""
		for k in self.keys(): # Use key, otherwise we get RuntimeError: dictionary changed size during iteration
			del self[k]

	def keys(self):
		return self._addresses.keys()

	def items(self):
		return [(k, self[k]) for k in self]

	def parse_row(self, data, reclen=0):
		""""""
		Assign data to a DBRow instance
		""""""
		return DBRow(self, data=data, reclen=reclen)

	def values(self):
		""""""
		Return a list of the file's values
		""""""
		return [self[id] for id in self]

	def setRow(self, key, **values):
		self.__setitem__(key, DBRow(self, columns=values))

	def size(self):
		if hasattr(self.file, ""size""):
			return self.file.size()
		elif isinstance(self.file, file):
			from os.path import getsize
			return getsize(self.file.name)
		raise NotImplementedError

	def update(self, other):
		""""""
		Update file from iterable other
		""""""
		for k in other:
			self[k] = other[k]

	def write(self, filename=""""):
		""""""
		Write the file data on disk. If filename is not given, use currently opened file.
		""""""
		_filename = filename or self.file.name

		data = self.header.data() + self.data() + self.eof()

		f = open(_filename, ""wb"") # Don't open before calling data() as uncached rows would be empty
		f.write(data)
		f.close()
		log.info(""Written %i bytes at %s"" % (len(data), f.name))

		if not filename: # Reopen self.file, we modified it
			# XXX do we need to wipe self._values here?
			self.file.close()
			self.file = open(f.name, ""rb"")


class DBRow(list):
	""""""
	A database row.
	Names of the variables of that class should not be used in field names of structures
	""""""
	initialized = False

	def __init__(self, parent, data=None, columns=None, reclen=0):
		self._parent = parent
		self._values = {} # Columns values storage
		self.structure = parent.structure

		self.initialized = True # needed for __setattr__

		if columns:
			if type(columns) == list:
				self.extend(columns)

			elif type(columns) == dict:
				self._default()
				_cols = [k.name for k in ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zH1ate
code,"# -*- coding: utf-8 -*-
#
# Phaser Editor documentation build configuration file, created by
# sphinx-quickstart on Thu May 25 08:35:14 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
	#'rinoh.frontend.sphinx'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Phaser Editor 2D'
copyright = u'2016-2020, Arian Fornaris'
author = u'Arian Fornaris'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'2.1.7'
# The full version, including alpha/beta/rc tags.
release = u'2.1.7'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set ""language"" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------



# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#import sphinx_rtd_theme

html_theme = ""phaser-editor""

# Uncomment for generate Eclipse Offline Help
#html_theme = ""eclipse-help""

html_theme_path = [""_themes""]
html_show_sourcelink = False
html_show_sphinx = False
html_favicon = ""logo.png""
html_title = ""Phaser Editor Help""
html_show_copyright = True


print(html_theme_path)


#html_theme = 'classic'
highlight_language = 'javascript'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named ""default.css"" will overwrite the builtin ""default.css"".
html_static_path = ['_static']


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'PhaserEditordoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    'preamble': '',

    # Latex figure (float) alignment
    #
    'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'PhaserEditor2D.tex', u'Phaser Editor 2D Documentation',
     u'Arian Fornaris', 'manual'),
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'PhaserEditor2D', u'Phaser Editor 2D Documentation',
     author, 'Arian', 'A friendly HTML5 game IDE.',
     'Miscellaneous'),
]



",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HNq2P7
code,"#!/usr/bin/env python3

import sys
import numpy as np
from spc import SPC
import matplotlib.pyplot as plt


def plot(files, fac=1.0):
    for f in files:
        if f.split('.')[-1] == 'xy':
            td = np.loadtxt(f)
            plt.plot(td[:, 0], np.log(1. / td[:, 1]) * fac, label=f)
        elif f.split('.')[-1] == 'spc':
            td = SPC(f)
            plt.plot(td.xdata, np.log(1. / np.array(td.ydata)), label=f)
    plt.legend()
    plt.show()


if __name__ == '__main__':
    files = sys.argv[2:]
    fac = float(sys.argv[1])
    plot(files, fac)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",guy5f5
code,"import socket
import threading
import time

def tcplink(sock, addr):
    print 'Accept new connection from %s:%s...' % addr
    sock.send('Welcome!')
    while True:
        data = sock.recv(1024)
        time.sleep(1)
        if data == 'exit' or not data:
            break
        sock.send('Hello, %s!' % data)
    sock.close()
    print 'Connection from %s:%s closed.' % addr


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('127.0.0.1', 8888))
s.listen(5)
print 'Waiting for connection...'
while True:
    sock, addr = s.accept()
    t = threading.Thread(target=tcplink, args=(sock, addr))
    t.start()


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vc_jKw
code,"# -*- coding: utf-8 -*-

import random
from operator import attrgetter

import pytest

from cfme import test_requirements
from cfme.cloud.provider import CloudProvider
from cfme.cloud.provider.azure import AzureProvider
from cfme.cloud.provider.ec2 import EC2Provider
from cfme.cloud.provider.gce import GCEProvider
from cfme.cloud.provider.openstack import OpenStackProvider
from cfme.common.provider import BaseProvider
from cfme.infrastructure.provider.rhevm import RHEVMProvider
from cfme.infrastructure.provider.virtualcenter import VMwareProvider
from cfme.utils import conf
from cfme.utils.blockers import BZ
from cfme.utils.log import logger
from cfme.utils.wait import wait_for
from cfme.fixtures.provider import setup_or_skip

pytestmark = [
    pytest.mark.tier(1),
    test_requirements.c_and_u,
    pytest.mark.provider(
        [VMwareProvider, RHEVMProvider, EC2Provider, OpenStackProvider, AzureProvider, GCEProvider],
        required_fields=[(['cap_and_util', 'capandu_vm'], 'cu-24x7')], scope=""module"")
]


@pytest.fixture(scope=""module"")
def clean_setup_provider(request, provider):
    BaseProvider.clear_providers()
    setup_or_skip(request, provider)
    yield
    BaseProvider.clear_providers()


def vm_count(appliance, metrics_tbl, mgmt_system_id):
    return bool(appliance.db.client.session.query(metrics_tbl).filter(
        metrics_tbl.parent_ems_id == mgmt_system_id).filter(
        metrics_tbl.resource_type == ""VmOrTemplate"").count()
    )


def host_count(appliance, metrics_tbl, mgmt_system_id):
    return bool(appliance.db.client.session.query(metrics_tbl).filter(
        metrics_tbl.parent_ems_id == mgmt_system_id).filter(
        metrics_tbl.resource_type == ""Host"").count()
    )


@pytest.fixture(scope=""module"")
def metrics_collection(appliance, clean_setup_provider, provider, enable_candu):
    """"""Check the db is gathering collection data for the given provider.

    Metadata:
        test_flag: metrics_collection
    """"""
    metrics_tbl = appliance.db.client['metrics']
    mgmt_systems_tbl = appliance.db.client['ext_management_systems']

    logger.info(""Fetching provider ID for %s"", provider.key)
    mgmt_system_id = appliance.db.client.session.query(mgmt_systems_tbl).filter(
        mgmt_systems_tbl.name == conf.cfme_data.get('management_systems', {})[provider.key]['name']
    ).first().id

    logger.info(""ID fetched; testing metrics collection now"")

    # vms for both infa and cloud provider
    wait_for(
        vm_count, [appliance, metrics_tbl, mgmt_system_id],
        delay=20,
        timeout=1500,
        fail_condition=False,
        message=""wait for VMs"")

    # host only for infa
    if provider.category == ""infra"":
        wait_for(
            vm_count, [appliance, metrics_tbl, mgmt_system_id],
            delay=20,
            timeout=1500,
            fail_condition=False,
            message=""wait for hosts."")


def get_host_name(provider):
    cfme_host = random.choice(provider.data[""hosts""])
    return cfme_host.name


def query_metric_db(appliance, provider, metric, vm_name=None, host_name=None):
    metrics_tbl = appliance.db.client['metrics']
    ems = appliance.db.client['ext_management_systems']
    if vm_name is None:
        if host_name is not None:
            object_name = host_name
    elif vm_name is not None:
        object_name = vm_name

    with appliance.db.client.transaction:
        provs = (
            appliance.db.client.session.query(metrics_tbl.id)
            .join(ems, metrics_tbl.parent_ems_id == ems.id)
            .filter(metrics_tbl.resource_name == object_name,
            ems.name == provider.name)
        )
    return appliance.db.client.session.query(metrics_tbl).filter(
        metrics_tbl.id.in_(provs.subquery()))


@pytest.mark.rhv2
# Tests to check that specific metrics are being collected
@pytest.mark.meta(
    blockers=[BZ(1511099, forced_streams=[""5.8"", ""upstream""],
    unblock=lambda provider: not provider.one_of(GCEProvider))]
)
def test_raw_metric_vm_cpu(metrics_collection, appliance, provider):
    vm_name = provider.data['cap_and_util']['capandu_vm']
    if provider.category == ""infra"":
        query = query_metric_db(appliance, provider, 'cpu_usagemhz_rate_average',
            vm_name)
        average_rate = attrgetter('cpu_usagemhz_rate_average')
    elif provider.category == ""cloud"":
        query = query_metric_db(appliance, provider, 'cpu_usage_rate_average',
            vm_name)
        average_rate = attrgetter('cpu_usage_rate_average')

    for record in query:
        if average_rate(record) is not None:
            assert average_rate(record) > 0, 'Zero VM CPU Usage'
            break


@pytest.mark.rhv2
@pytest.mark.uncollectif(
    lambda provider: provider.one_of(EC2Provider) or provider.one_of(GCEProvider))
def test_raw_metric_vm_memory(metrics_collection, appliance, provider):
    vm_name = provider.data['cap_and_util']['capandu_vm']

    if provider.type == 'azure':
        query = query_metric_db(appliance, provider, 'mem_usage_absolute_average',
            vm_name)
        average_rate = attrgetter('mem_usage_absolute_av",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",e7O9sC
code,"from .. import config
from .. import fixtures
from ..assertions import eq_
from ..assertions import in_
from ..schema import Column
from ..schema import Table
from ... import bindparam
from ... import case
from ... import Computed
from ... import exists
from ... import false
from ... import func
from ... import Integer
from ... import literal
from ... import literal_column
from ... import null
from ... import select
from ... import String
from ... import testing
from ... import text
from ... import true
from ... import tuple_
from ... import union
from ... import util


class CollateTest(fixtures.TablesTest):
    __backend__ = True

    @classmethod
    def define_tables(cls, metadata):
        Table(
            ""some_table"",
            metadata,
            Column(""id"", Integer, primary_key=True),
            Column(""data"", String(100)),
        )

    @classmethod
    def insert_data(cls, connection):
        connection.execute(
            cls.tables.some_table.insert(),
            [
                {""id"": 1, ""data"": ""collate data1""},
                {""id"": 2, ""data"": ""collate data2""},
            ],
        )

    def _assert_result(self, select, result):
        eq_(config.db.execute(select).fetchall(), result)

    @testing.requires.order_by_collation
    def test_collate_order_by(self):
        collation = testing.requires.get_order_by_collation(testing.config)

        self._assert_result(
            select([self.tables.some_table]).order_by(
                self.tables.some_table.c.data.collate(collation).asc()
            ),
            [(1, ""collate data1""), (2, ""collate data2"")],
        )


class OrderByLabelTest(fixtures.TablesTest):
    """"""Test the dialect sends appropriate ORDER BY expressions when
    labels are used.

    This essentially exercises the ""supports_simple_order_by_label""
    setting.

    """"""

    __backend__ = True

    @classmethod
    def define_tables(cls, metadata):
        Table(
            ""some_table"",
            metadata,
            Column(""id"", Integer, primary_key=True),
            Column(""x"", Integer),
            Column(""y"", Integer),
            Column(""q"", String(50)),
            Column(""p"", String(50)),
        )

    @classmethod
    def insert_data(cls, connection):
        connection.execute(
            cls.tables.some_table.insert(),
            [
                {""id"": 1, ""x"": 1, ""y"": 2, ""q"": ""q1"", ""p"": ""p3""},
                {""id"": 2, ""x"": 2, ""y"": 3, ""q"": ""q2"", ""p"": ""p2""},
                {""id"": 3, ""x"": 3, ""y"": 4, ""q"": ""q3"", ""p"": ""p1""},
            ],
        )

    def _assert_result(self, select, result):
        eq_(config.db.execute(select).fetchall(), result)

    def test_plain(self):
        table = self.tables.some_table
        lx = table.c.x.label(""lx"")
        self._assert_result(select([lx]).order_by(lx), [(1,), (2,), (3,)])

    def test_composed_int(self):
        table = self.tables.some_table
        lx = (table.c.x + table.c.y).label(""lx"")
        self._assert_result(select([lx]).order_by(lx), [(3,), (5,), (7,)])

    def test_composed_multiple(self):
        table = self.tables.some_table
        lx = (table.c.x + table.c.y).label(""lx"")
        ly = (func.lower(table.c.q) + table.c.p).label(""ly"")
        self._assert_result(
            select([lx, ly]).order_by(lx, ly.desc()),
            [(3, util.u(""q1p3"")), (5, util.u(""q2p2"")), (7, util.u(""q3p1""))],
        )

    def test_plain_desc(self):
        table = self.tables.some_table
        lx = table.c.x.label(""lx"")
        self._assert_result(
            select([lx]).order_by(lx.desc()), [(3,), (2,), (1,)]
        )

    def test_composed_int_desc(self):
        table = self.tables.some_table
        lx = (table.c.x + table.c.y).label(""lx"")
        self._assert_result(
            select([lx]).order_by(lx.desc()), [(7,), (5,), (3,)]
        )

    @testing.requires.group_by_complex_expression
    def test_group_by_composed(self):
        table = self.tables.some_table
        expr = (table.c.x + table.c.y).label(""lx"")
        stmt = (
            select([func.count(table.c.id), expr])
            .group_by(expr)
            .order_by(expr)
        )
        self._assert_result(stmt, [(1, 3), (1, 5), (1, 7)])


class LimitOffsetTest(fixtures.TablesTest):
    __backend__ = True

    @classmethod
    def define_tables(cls, metadata):
        Table(
            ""some_table"",
            metadata,
            Column(""id"", Integer, primary_key=True),
            Column(""x"", Integer),
            Column(""y"", Integer),
        )

    @classmethod
    def insert_data(cls, connection):
        connection.execute(
            cls.tables.some_table.insert(),
            [
                {""id"": 1, ""x"": 1, ""y"": 2},
                {""id"": 2, ""x"": 2, ""y"": 3},
                {""id"": 3, ""x"": 3, ""y"": 4},
                {""id"": 4, ""x"": 4, ""y"": 5},
            ],
        )

    def _assert_result(self, select, result, params=()):
        eq_(config.db.execute(select, params).fetchall(), result)

    def test_simple_limit(self):
        table = self.tables.some_table
        self._assert_result(
            sele",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G-A1ft
code,"from config import config, ConfigSlider, ConfigSelection, ConfigYesNo, \
	ConfigEnableDisable, ConfigSubsection, ConfigBoolean, ConfigSelectionNumber, ConfigNothing, NoSave
from enigma import eAVSwitch, getDesktop
from SystemInfo import SystemInfo
from os import path as os_path

class AVSwitch:
	def setInput(self, input):
		INPUT = { ""ENCODER"": 0, ""SCART"": 1, ""AUX"": 2 }
		eAVSwitch.getInstance().setInput(INPUT[input])

	def setColorFormat(self, value):
		eAVSwitch.getInstance().setColorFormat(value)

	def setAspectRatio(self, value):
		eAVSwitch.getInstance().setAspectRatio(value)

	def setSystem(self, value):
		eAVSwitch.getInstance().setVideomode(value)

	def getOutputAspect(self):
		valstr = config.av.aspectratio.value
		if valstr in (""4_3_letterbox"", ""4_3_panscan""): # 4:3
			return (4,3)
		elif valstr == ""16_9"": # auto ... 4:3 or 16:9
			try:
				aspect_str = open(""/proc/stb/vmpeg/0/aspect"", ""r"").read()
				if aspect_str == ""1"": # 4:3
					return (4,3)
			except IOError:
				pass
		elif valstr in (""16_9_always"", ""16_9_letterbox""): # 16:9
			pass
		elif valstr in (""16_10_letterbox"", ""16_10_panscan""): # 16:10
			return (16,10)
		return (16,9)

	def getFramebufferScale(self):
		aspect = self.getOutputAspect()
		fb_size = getDesktop(0).size()
		return (aspect[0] * fb_size.height(), aspect[1] * fb_size.width())

	def getAspectRatioSetting(self):
		valstr = config.av.aspectratio.value
		if valstr == ""4_3_letterbox"":
			val = 0
		elif valstr == ""4_3_panscan"":
			val = 1
		elif valstr == ""16_9"":
			val = 2
		elif valstr == ""16_9_always"":
			val = 3
		elif valstr == ""16_10_letterbox"":
			val = 4
		elif valstr == ""16_10_panscan"":
			val = 5
		elif valstr == ""16_9_letterbox"":
			val = 6
		return val

	def setAspectWSS(self, aspect=None):
		if not config.av.wss.value:
			value = 2 # auto(4:3_off)
		else:
			value = 1 # auto
		eAVSwitch.getInstance().setWSS(value)

def InitAVSwitch():
	config.av = ConfigSubsection()
	config.av.yuvenabled = ConfigBoolean(default=False)
	colorformat_choices = {""cvbs"": _(""CVBS""), ""rgb"": _(""RGB""), ""svideo"": _(""S-Video"")}
	
	# when YUV is not enabled, don't let the user select it
	if config.av.yuvenabled.value:
		colorformat_choices[""yuv""] = _(""YPbPr"")
#	ikseong
	config.av.colorformat = ConfigSelection(choices=colorformat_choices, default=""cvbs"")
	config.av.aspectratio = ConfigSelection(choices={
			""4_3_letterbox"": _(""4:3 Letterbox""),
			""4_3_panscan"": _(""4:3 PanScan""), 
			""16_9"": _(""16:9""), 
			""16_9_always"": _(""16:9 always""),
			""16_10_letterbox"": _(""16:10 Letterbox""),
			""16_10_panscan"": _(""16:10 PanScan""), 
			""16_9_letterbox"": _(""16:9 Letterbox"")}, 
			default = ""4_3_letterbox"")

	config.av.aspect = ConfigSelection(choices={
			""4_3"": _(""4:3""),
			""16_9"": _(""16:9""), 
			""16_10"": _(""16:10""),
			""auto"": _(""Automatic"")},
			default = ""auto"")
	config.av.policy_169 = ConfigSelection(choices={
				# TRANSLATORS: (aspect ratio policy: black bars on top/bottom) in doubt, keep english term.
			""letterbox"": _(""Letterbox""), 
				# TRANSLATORS: (aspect ratio policy: cropped content on left/right) in doubt, keep english term
			""panscan"": _(""Pan&Scan""),  
				# TRANSLATORS: (aspect ratio policy: display as fullscreen, even if this breaks the aspect)
			""scale"": _(""Just Scale"")},
			default = ""letterbox"")
	config.av.policy_43 = ConfigSelection(choices={
				# TRANSLATORS: (aspect ratio policy: black bars on left/right) in doubt, keep english term.
			""pillarbox"": _(""Pillarbox""), 
				# TRANSLATORS: (aspect ratio policy: cropped content on left/right) in doubt, keep english term
			""panscan"": _(""Pan&Scan""),  
				# TRANSLATORS: (aspect ratio policy: display as fullscreen, with stretching the left/right)
			""nonlinear"": _(""Nonlinear""),  
				# TRANSLATORS: (aspect ratio policy: display as fullscreen, even if this breaks the aspect)
			""scale"": _(""Just Scale"")},
			default = ""pillarbox"")
	config.av.tvsystem = ConfigSelection(choices = {""pal"": _(""PAL""), ""ntsc"": _(""NTSC""), ""multinorm"": _(""multinorm"")}, default=""pal"")
	config.av.wss = ConfigEnableDisable(default = True)
	config.av.defaultac3 = ConfigYesNo(default = False)
	config.av.generalAC3delay = ConfigSelectionNumber(-1000, 1000, 25, default = 0)
	config.av.generalPCMdelay = ConfigSelectionNumber(-1000, 1000, 25, default = 0)
	config.av.vcrswitch = ConfigEnableDisable(default = False)

	iAVSwitch = AVSwitch()

	def setColorFormat(configElement):
		map = {""cvbs"": 0, ""rgb"": 1, ""svideo"": 2, ""yuv"": 3}
		iAVSwitch.setColorFormat(map[configElement.value])

	def setAspectRatio(configElement):
		map = {""4_3_letterbox"": 0, ""4_3_panscan"": 1, ""16_9"": 2, ""16_9_always"": 3, ""16_10_letterbox"": 4, ""16_10_panscan"": 5, ""16_9_letterbox"" : 6}
		iAVSwitch.setAspectRatio(map[configElement.value])

	def setSystem(configElement):
		map = {""pal"": 0, ""ntsc"": 1, ""multinorm"" : 2}
		iAVSwitch.setSystem(map[configElement.value])

	def setWSS(configElement):
		iAVSwitch.setAspectWSS()

	# this will call the ""setup-val"" initial
	config.av.colorformat.addNotifier(setColorFormat)
	config.av.aspectratio.addNotifier(setAspectRatio)
	config.av.tvsystem.addNotifier(setSystem)
	config.av.wss.addNotifi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",AUkp79
code,"# -*- coding: utf-8 -*-

import pack_command
import pack_command_python

import timeit
import cProfile
import pstats
import pycallgraph

def format_time(seconds):
    v = seconds

    if v * 1000 * 1000 * 1000 < 1000:
        scale = u'ns'
        v = int(round(v*1000*1000*1000))
    elif v * 1000 * 1000 < 1000:
        scale = u'μs'
        v = int(round(v*1000*1000))
    elif v * 1000 < 1000:
        scale = u'ms'
        v = round(v*1000, 4)
    else:
        scale = u'sec'
        v = int(v)

    return u'{} {}'.format(v, scale)

# profiler size
number = 100000
sample = 7

# profiler type
profile = False
graph = False
timer = True

def runit():
    pack_command.pack_command(""ZADD"", ""foo"", 1369198341, 10000)

def runitp():
    pack_command_python.pack_command(""ZADD"", ""foo"", 1369198341, 10000)

if profile:
    pr = cProfile.Profile()
    pr.enable()

if graph:
    pycallgraph.start_trace()

if timer:
    for name, t in ((""Python"", runitp), (""cython"", runit)):
        res = timeit.Timer(t).repeat(sample, number)
        min_run = min(res)
        per_loop = min_run/number

        print u'{}'.format(name)
        print u'{} total run'.format(format_time(min_run))
        print u'{} per/loop'.format(format_time(per_loop))
        #print u'{} per/friend'.format(format_time(per_loop/friends_cnt))
else:
    for j in xrange(number):
        runit()

if graph:
    pycallgraph.make_dot_graph('example.png')

if profile:
    pr.disable()
    ps = pstats.Stats(pr)
    sort_by = 'cumulative'
    ps.strip_dirs().sort_stats(sort_by).print_stats(20)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2J7N4L
code,"import pytest


@pytest.fixture
def genetic_modification(testapp, lab, award):
    item = {
        'award': award['@id'],
        'lab': lab['@id'],
        'modified_site_by_coordinates': {
            'assembly': 'GRCh38',
            'chromosome': '11',
            'start': 20000,
            'end': 21000
        },
        'purpose': 'repression',
        'category': 'deletion',
        'method': 'CRISPR',
        'zygosity': 'homozygous'
    }
    return testapp.post_json('/genetic_modification', item).json['@graph'][0]


@pytest.fixture
def genetic_modification_RNAi(testapp, lab, award):
    item = {
        'award': award['@id'],
        'lab': lab['@id'],
        'modified_site_by_coordinates': {
            'assembly': 'GRCh38',
            'chromosome': '11',
            'start': 20000,
            'end': 21000
        },
        'purpose': 'repression',
        'category': 'deletion',
        'method': 'RNAi'
    }
    return testapp.post_json('/genetic_modification', item).json['@graph'][0]


@pytest.fixture
def genetic_modification_source(testapp, lab, award, source, gene):
    item = {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'introduced_gene': gene['@id'],
        'purpose': 'expression',
        'method': 'CRISPR',
        'reagents': [
            {
                'source': source['@id'],
                'identifier': 'sigma:ABC123'
            }
        ]
    }
    return testapp.post_json('/genetic_modification', item).json['@graph'][0]


@pytest.fixture
def crispr_deletion(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'deletion',
        'purpose': 'repression',
        'method': 'CRISPR'
    }


@pytest.fixture
def crispr_deletion_1(testapp, lab, award, target):
    item = {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'deletion',
        'purpose': 'repression',
        'method': 'CRISPR',
        'modified_site_by_target_id': target['@id'],
        'guide_rna_sequences': ['ACCGGAGA']
    }
    return testapp.post_json('/genetic_modification', item).json['@graph'][0]



@pytest.fixture
def tale_deletion(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'deletion',
        'purpose': 'repression',
        'method': 'TALEN',
        'zygosity': 'heterozygous'
    }


@pytest.fixture
def crispr_tag(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'purpose': 'tagging',
        'method': 'CRISPR'
    }


@pytest.fixture
def bombardment_tag(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'purpose': 'tagging',
        'nucleic_acid_delivery_method': ['bombardment']
    }


@pytest.fixture
def recomb_tag(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'purpose': 'tagging',
        'method': 'site-specific recombination'
    }


@pytest.fixture
def transfection_tag(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'purpose': 'tagging',
        'nucleic_acid_delivery_method': ['stable transfection']
    }


@pytest.fixture
def crispri(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'interference',
        'purpose': 'repression',
        'method': 'CRISPR'
    }


@pytest.fixture
def rnai(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'interference',
        'purpose': 'repression',
        'method': 'RNAi'
    }


@pytest.fixture
def mutagen(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'mutagenesis',
        'purpose': 'repression',
        'method': 'mutagen treatment'
    }


@pytest.fixture
def tale_replacement(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'replacement',
        'purpose': 'characterization',
        'method': 'TALEN',
        'zygosity': 'heterozygous'
    }


@pytest.fixture
def mpra(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'insertion',
        'purpose': 'characterization',
        'nucleic_acid_delivery_method': ['transduction']
    }


@pytest.fixture
def starr_seq(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'episome',
        'purpose': 'characterization',
        'nucleic_acid_delivery_method': ['transient transfection']
    }


@pytest.fixture
def introduced_elements(lab, award):
    return {
        'lab': lab['@id'],
        'award': award['@id'],
        'category': 'episome',
        'purpose': 'characterization',
        'nucleic_acid_delivery_method': ['transient transfection'],
        'introduced_elements': 'genomic DNA regions'
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nTHdHm
code,"#!/usr/bin/env python3

from __future__ import print_function, division

import numpy as np
from sht.grids import standard_grid, get_cartesian_grid

def test_grids():
    L = 10
    thetas, phis = standard_grid(L)

    # Can't really test much here
    assert thetas.size == L
    assert phis.size == L**2

    grid = get_cartesian_grid(thetas, phis)
    assert grid.shape == (L**2, 3)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kE1kGa
code,"#!/usr/bin/env python3
# Copyright (c) 2015-2018 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
""""""Test block processing.""""""
import copy
import struct
import time

from test_framework.blocktools import create_block, create_coinbase, create_tx_with_script, get_legacy_sigopcount_block
from test_framework.key import CECKey
from test_framework.messages import (
    CBlock,
    COIN,
    COutPoint,
    CTransaction,
    CTxIn,
    CTxOut,
    MAX_BLOCK_BASE_SIZE,
    uint256_from_compact,
    uint256_from_str,
)
from test_framework.mininode import P2PDataStore
from test_framework.script import (
    CScript,
    MAX_SCRIPT_ELEMENT_SIZE,
    OP_2DUP,
    OP_CHECKMULTISIG,
    OP_CHECKMULTISIGVERIFY,
    OP_CHECKSIG,
    OP_CHECKSIGVERIFY,
    OP_ELSE,
    OP_ENDIF,
    OP_EQUAL,
    OP_DROP,
    OP_FALSE,
    OP_HASH160,
    OP_IF,
    OP_INVALIDOPCODE,
    OP_RETURN,
    OP_TRUE,
    SIGHASH_ALL,
    SignatureHash,
    hash160,
)
from test_framework.test_framework import BitcoinTestFramework
from test_framework.util import assert_equal

MAX_BLOCK_SIGOPS = 20000

#  Use this class for tests that require behavior other than normal ""mininode"" behavior.
#  For now, it is used to serialize a bloated varint (b64).
class CBrokenBlock(CBlock):
    def initialize(self, base_block):
        self.vtx = copy.deepcopy(base_block.vtx)
        self.hashMerkleRoot = self.calc_merkle_root()

    def serialize(self, with_witness=False):
        r = b""""
        r += super(CBlock, self).serialize()
        r += struct.pack(""<BQ"", 255, len(self.vtx))
        for tx in self.vtx:
            if with_witness:
                r += tx.serialize_with_witness()
            else:
                r += tx.serialize_without_witness()
        return r

    def normal_serialize(self):
        return super().serialize()

class FullBlockTest(BitcoinTestFramework):
    def set_test_params(self):
        self.num_nodes = 1
        self.setup_clean_chain = True
        self.extra_args = [[]]

    def run_test(self):
        node = self.nodes[0]  # convenience reference to the node

        self.bootstrap_p2p()  # Add one p2p connection to the node

        self.block_heights = {}
        self.coinbase_key = CECKey()
        self.coinbase_key.set_secretbytes(b""horsebattery"")
        self.coinbase_pubkey = self.coinbase_key.get_pubkey()
        self.tip = None
        self.blocks = {}
        self.genesis_hash = int(self.nodes[0].getbestblockhash(), 16)
        self.block_heights[self.genesis_hash] = 0
        self.spendable_outputs = []

        # Create a new block
        b0 = self.next_block(0)
        self.save_spendable_output()
        self.sync_blocks([b0])

        # Allow the block to mature
        blocks = []
        for i in range(99):
            blocks.append(self.next_block(5000 + i))
            self.save_spendable_output()
        self.sync_blocks(blocks)

        # collect spendable outputs now to avoid cluttering the code later on
        out = []
        for i in range(33):
            out.append(self.get_spendable_output())

        # Start by building a couple of blocks on top (which output is spent is
        # in parentheses):
        #     genesis -> b1 (0) -> b2 (1)
        b1 = self.next_block(1, spend=out[0])
        self.save_spendable_output()

        b2 = self.next_block(2, spend=out[1])
        self.save_spendable_output()

        self.sync_blocks([b1, b2])

        # Fork like this:
        #
        #     genesis -> b1 (0) -> b2 (1)
        #                      \-> b3 (1)
        #
        # Nothing should happen at this point. We saw b2 first so it takes priority.
        self.log.info(""Don't reorg to a chain of the same length"")
        self.move_tip(1)
        b3 = self.next_block(3, spend=out[1])
        txout_b3 = b3.vtx[1]
        self.sync_blocks([b3], False)

        # Now we add another block to make the alternative chain longer.
        #
        #     genesis -> b1 (0) -> b2 (1)
        #                      \-> b3 (1) -> b4 (2)
        self.log.info(""Reorg to a longer chain"")
        b4 = self.next_block(4, spend=out[2])
        self.sync_blocks([b4])

        # ... and back to the first chain.
        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)
        #                      \-> b3 (1) -> b4 (2)
        self.move_tip(2)
        b5 = self.next_block(5, spend=out[2])
        self.save_spendable_output()
        self.sync_blocks([b5], False)

        self.log.info(""Reorg back to the original chain"")
        b6 = self.next_block(6, spend=out[3])
        self.sync_blocks([b6], True)

        # Try to create a fork that double-spends
        #     genesis -> b1 (0) -> b2 (1) -> b5 (2) -> b6 (3)
        #                                          \-> b7 (2) -> b8 (4)
        #                      \-> b3 (1) -> b4 (2)
        self.log.info(""Reject a chain with a double spend, even if it is longer"")
        self.move_tip(5)
        b7 = self.next_block(7, spend=out[2])
        self.sync_blocks([b7], F",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3Bgwu1
code,"import random
import numpy as np
import math
from time import perf_counter
import os
import sys
from collections import deque

import gym
import cntk
from cntk.layers import  Convolution, MaxPooling,  Dense
from cntk.models import Sequential, LayerStack
from cntk.initializer import glorot_normal


env = gym.make(""Breakout-v0"")

NUM_ACTIONS = env.action_space.n
SCREEN_H_ORIG, SCREEN_W_ORIG, NUM_COLOUR_CHANNELS = env.observation_space.shape


def preprocess_image(screen_image):

    # crop the top and bottom
    screen_image = screen_image[35:195]

    # down sample by a factor of 2
    screen_image = screen_image[::2, ::2]

    # convert to grey scale
    grey_image = np.zeros(screen_image.shape[0:2])
    for i in range(len(screen_image)):
        for j in range(len(screen_image[i])):
            grey_image[i][j] = np.mean(screen_image[i][j])

    return np.array([grey_image.astype(np.float)])


CHANNELS, IMAGE_H, IMAGE_W = preprocess_image(np.zeros((SCREEN_H_ORIG, SCREEN_W_ORIG))).shape
STATE_DIMS = (1, IMAGE_H, IMAGE_W)

class Brain:

    BATCH_SIZE = 5

    def __init__(self):

        #### Construct the model ####
        observation = cntk.ops.input_variable(STATE_DIMS, np.float32, name=""s"")
        q_target = cntk.ops.input_variable(NUM_ACTIONS, np.float32, name=""q"")

        # Define the structure of the neural network
        self.model = self.create_convolutional_neural_network(observation, NUM_ACTIONS)

        #### Define the trainer ####
        self.learning_rate = cntk.learner.training_parameter_schedule(0.0001, cntk.UnitType.sample)
        self.momentum = cntk.learner.momentum_as_time_constant_schedule(0.99)

        self.loss =  cntk.ops.reduce_mean(cntk.ops.square(self.model - q_target), axis=0)
        mean_error = cntk.ops.reduce_mean(cntk.ops.square(self.model - q_target), axis=0)

        learner = cntk.adam_sgd(self.model.parameters, self.learning_rate, momentum=self.momentum)
        self.trainer = cntk.Trainer(self.model, self.loss, mean_error, learner)

    def train(self, x, y):
        data = dict(zip(self.loss.arguments, [y, x]))
        self.trainer.train_minibatch(data, outputs=[self.loss.output])

    def predict(self, s):
        return self.model.eval([s])

    @staticmethod
    def create_multi_layer_neural_network(input_vars, out_dims, num_hidden_layers):

        num_hidden_neurons = 128

        hidden_layer = lambda: Dense(num_hidden_neurons, activation=cntk.ops.relu)
        output_layer = Dense(out_dims, activation=None)

        model = Sequential([LayerStack(num_hidden_layers, hidden_layer),
                            output_layer])(input_vars)
        return model

    @staticmethod
    def create_convolutional_neural_network(input_vars, out_dims):

        convolutional_layer_1 = Convolution((5, 5), 32, strides=1, activation=cntk.ops.relu, pad=True,
                                            init=glorot_normal(), init_bias=0.1)
        pooling_layer_1 = MaxPooling((2, 2), strides=(2, 2), pad=True)

        convolutional_layer_2 = Convolution((5, 5), 64, strides=1, activation=cntk.ops.relu, pad=True,
                                            init=glorot_normal(), init_bias=0.1)
        pooling_layer_2 = MaxPooling((2, 2), strides=(2, 2), pad=True)

        convolutional_layer_3 = Convolution((5, 5), 128, strides=1, activation=cntk.ops.relu, pad=True,
                                            init=glorot_normal(), init_bias=0.1)
        pooling_layer_3 = MaxPooling((2, 2), strides=(2, 2), pad=True)

        fully_connected_layer = Dense(1024, activation=cntk.ops.relu, init=glorot_normal(), init_bias=0.1)

        output_layer = Dense(out_dims, activation=None, init=glorot_normal(), init_bias=0.1)

        model = Sequential([convolutional_layer_1, pooling_layer_1,
                            convolutional_layer_2, pooling_layer_2,
                            #convolutional_layer_3, pooling_layer_3,
                            fully_connected_layer,
                            output_layer])(input_vars)
        return model


class Memory:

    def __init__(self, capacity):
        self.examplers = deque(maxlen=capacity)
        self.capacity = capacity

    def add(self, sample):
        self.examplers.append(sample)

    def get_random_samples(self, num_samples):
        num_samples = min(num_samples, len(self.examplers))
        return random.sample(tuple(self.examplers), num_samples)

    def get_stack(self, start_index, stack_size):
        end_index = len(self.examplers) - stack_size
        if end_index < 0:
            stack = list(self.examplers) + [self.examplers[-1] for _ in range(-end_index)]
        else:
            start_index = min(start_index, end_index)
            stack = [self.examplers[i + start_index] for i in range(stack_size)]
        return np.stack(stack, axis=-1)

    def get_random_stacks(self, num_samples, stack_size):

        start_indices = random.sample(range(len(self.examplers)), num_samples)
        return [self.get_stack(start_index, stack_size) for start_index in start_indices]

    def get_latest_stack(self, stack_size):
        return self.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Rq7mC-
code,"from django.db import models
from django.contrib.auth.models import User


class OrganisationType(models.Model):
    type_desc = models.CharField(max_length=200)
    def __unicode__(self):
        return self.type_desc


class Address(models.Model):
    street_address = models.CharField(max_length=100)
    city = models.CharField(max_length=100)
    pin = models.CharField(max_length=10)
    province = models.CharField(max_length=100)
    nationality = models.CharField(max_length=100)
    def __unicode__(self):
        return self.street_address + ',' + self.city


class HattiUser(models.Model):
    user = models.OneToOneField(User) 
    address = models.ForeignKey(Address)
    telephone = models.CharField(max_length=500)
    date_joined  = models.DateTimeField(auto_now_add=True)
    fax = models.CharField(max_length=100)
    avatar = models.CharField(max_length=100, null=True, blank=True)
    tagline = models.CharField(max_length=140)
    class Meta:
        abstract = True


class AdminOrganisations(HattiUser):
    title = models.CharField(max_length=200)
    organisation_type = models.ForeignKey(OrganisationType)
    def __unicode__(self):
        return self.title


class Customer(HattiUser):
    title = models.CharField(max_length=200, blank=True, null=True)
    is_org = models.BooleanField();
    org_type = models.ForeignKey(OrganisationType)
    company = models.CharField(max_length = 200)
    def __unicode__(self, arg):
	return unicode(self.user)

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",C1-bbs
code,"from itertools import product

import numpy as np
from sympy import And
import pytest

from conftest import skipif, opts_tiling
from devito import (ConditionalDimension, Grid, Function, TimeFunction, SparseFunction,  # noqa
                    Eq, Operator, Constant, Dimension, SubDimension, switchconfig,
                    SubDomain, Lt, Le, Gt, Ge, Ne, Buffer)
from devito.ir.iet import (Conditional, Expression, Iteration, FindNodes,
                           retrieve_iteration_tree)
from devito.symbolics import indexify, retrieve_functions, IntDiv
from devito.types import Array


class TestBufferedDimension(object):

    def test_multi_buffer(self):
        grid = Grid((3, 3))
        f = TimeFunction(name=""f"", grid=grid)
        g = TimeFunction(name=""g"", grid=grid, save=Buffer(7))

        op = Operator([Eq(f.forward, 1), Eq(g, f.forward)])
        op(time_M=3)
        # f looped all time_order buffer and is 1 everywhere
        assert np.allclose(f.data, 1)
        # g looped indices 0 to 3, rest is still 0
        assert np.allclose(g.data[0:4], 1)
        assert np.allclose(g.data[4:], 0)

    def test_multi_buffer_long_time(self):
        grid = Grid((3, 3))
        time = grid.time_dim
        f = TimeFunction(name=""f"", grid=grid)
        g = TimeFunction(name=""g"", grid=grid, save=Buffer(7))

        op = Operator([Eq(f.forward, time), Eq(g, time+1)])
        op(time_M=20)
        # f[0] is time=19, f[1] is time=20
        assert np.allclose(f.data[0], 19)
        assert np.allclose(f.data[1], 20)
        # g is time 15 to 21 (loop twice the 7 buffer then 15->21)
        for i in range(7):
            assert np.allclose(g.data[i], 14+i+1)


class TestSubDimension(object):

    @pytest.mark.parametrize('opt', opts_tiling)
    def test_interior(self, opt):
        """"""
        Tests application of an Operator consisting of a single equation
        over the ``interior`` subdomain.
        """"""
        grid = Grid(shape=(4, 4, 4))
        x, y, z = grid.dimensions

        interior = grid.interior

        u = TimeFunction(name='u', grid=grid)

        eqn = [Eq(u.forward, u + 2, subdomain=interior)]

        op = Operator(eqn, opt=opt)
        op.apply(time_M=2)
        assert np.all(u.data[1, 1:-1, 1:-1, 1:-1] == 6.)
        assert np.all(u.data[1, :, 0] == 0.)
        assert np.all(u.data[1, :, -1] == 0.)
        assert np.all(u.data[1, :, :, 0] == 0.)
        assert np.all(u.data[1, :, :, -1] == 0.)

    def test_domain_vs_interior(self):
        """"""
        Tests application of an Operator consisting of two equations, one
        over the whole domain (default), and one over the ``interior`` subdomain.
        """"""
        grid = Grid(shape=(4, 4, 4))
        x, y, z = grid.dimensions
        t = grid.stepping_dim  # noqa

        interior = grid.interior

        u = TimeFunction(name='u', grid=grid)  # noqa
        eqs = [Eq(u.forward, u + 1),
               Eq(u.forward, u.forward + 2, subdomain=interior)]

        op = Operator(eqs, opt='noop')
        trees = retrieve_iteration_tree(op)
        assert len(trees) == 2

        op.apply(time_M=1)
        assert np.all(u.data[1, 0, :, :] == 1)
        assert np.all(u.data[1, -1, :, :] == 1)
        assert np.all(u.data[1, :, 0, :] == 1)
        assert np.all(u.data[1, :, -1, :] == 1)
        assert np.all(u.data[1, :, :, 0] == 1)
        assert np.all(u.data[1, :, :, -1] == 1)
        assert np.all(u.data[1, 1:3, 1:3, 1:3] == 3)

    @pytest.mark.parametrize('opt', opts_tiling)
    def test_subdim_middle(self, opt):
        """"""
        Tests that instantiating SubDimensions using the classmethod
        constructors works correctly.
        """"""
        grid = Grid(shape=(4, 4, 4))
        x, y, z = grid.dimensions
        t = grid.stepping_dim  # noqa

        u = TimeFunction(name='u', grid=grid)  # noqa
        xi = SubDimension.middle(name='xi', parent=x,
                                 thickness_left=1,
                                 thickness_right=1)
        eqs = [Eq(u.forward, u + 1)]
        eqs = [e.subs(x, xi) for e in eqs]

        op = Operator(eqs, opt=opt)

        u.data[:] = 1.0
        op.apply(time_M=1)
        assert np.all(u.data[1, 0, :, :] == 1)
        assert np.all(u.data[1, -1, :, :] == 1)
        assert np.all(u.data[1, 1:3, :, :] == 2)

    def test_symbolic_size(self):
        """"""Check the symbolic size of all possible SubDimensions is as expected.""""""
        grid = Grid(shape=(4,))
        x, = grid.dimensions
        thickness = 4

        xleft = SubDimension.left(name='xleft', parent=x, thickness=thickness)
        assert xleft.symbolic_size == xleft.thickness.left[0]

        xi = SubDimension.middle(name='xi', parent=x,
                                 thickness_left=thickness, thickness_right=thickness)
        assert xi.symbolic_size == (x.symbolic_max - x.symbolic_min -
                                    xi.thickness.left[0] - xi.thickness.right[0] + 1)

        xright = SubDimension.right(name='xright', parent=x, thickness=thickness)
        assert xright.symbolic_size == xright.thickness.right[0]

    @pytest.mark.param",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",up9XRd
code,"class Solution(object):
    def missingNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        xor = len(nums)

        for i, n in enumerate(nums):
            xor ^= n
            xor ^= i

        return xor

inputs = [
    [0],
    [1],
    [3,0,1],
    [9,6,4,2,3,5,7,0,1]
]

s = Solution()
for i in inputs:
    print s.missingNumber(i)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4BXjdl
code,"import time
t1=.3
t2=.1

path=""~/Dropbox/Ingenieria/asignaturas_actuales""

time.sleep(t2)
keyboard.send_key(""<f6>"")
time.sleep(t2)
keyboard.send_keys(path)
time.sleep(t1)
keyboard.send_key(""<enter>"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3_kNM0
code,"""""""Kytos SDN Platform.""""""
from pkgutil import extend_path

__path__ = extend_path(__path__, __name__)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2Sqpac
code,"import json
import bottle
from pyrouted.util import make_spec


def route(method, path):
    def decorator(f):
        f.http_route = path
        f.http_method = method
        return f
    return decorator


class APIv1(object):

    prefix = '/v1'

    def __init__(self, ndb, config):
        self.ndb = ndb
        self.config = config

    @route('GET', '/sources')
    def sources_list(self, mode='short'):
        ret = {}
        mode = bottle.request.query.mode or mode
        for name, spec in self.ndb.sources.items():
            ret[name] = {'class': spec.nl.__class__.__name__,
                         'status': spec.status}
            if mode == 'full':
                ret[name]['config'] = spec.nl_kwarg
        return bottle.template('{{!ret}}', ret=json.dumps(ret))

    @route('PUT', '/sources')
    def sources_restart(self):
        node = bottle.request.body.getvalue().decode('utf-8')
        self.ndb.sources[node].start()

    @route('POST', '/sources')
    def sources_add(self):
        data = bottle.request.body.getvalue().decode('utf-8')
        node, spec = make_spec(data, self.config)
        self.config['sources'].append(node)
        self.ndb.connect_source(node, spec)

    @route('DELETE', '/sources')
    def sources_del(self):
        node = bottle.request.body.getvalue().decode('utf-8')
        self.config['sources'].remove(node)
        self.ndb.disconnect_source(node)

    @route('GET', '/config')
    def config_get(self):
        return bottle.template('{{!ret}}',
                               ret=json.dumps(self.config))

    @route('PUT', '/config')
    def config_dump(self):
        path = bottle.request.body.getvalue().decode('utf-8')
        self.config.dump(path)

    @route('GET', '/<name:re:(%s|%s|%s|%s|%s|%s)>' % ('interfaces',
                                                      'addresses',
                                                      'routes',
                                                      'neighbours',
                                                      'vlans',
                                                      'bridges'))
    def view(self, name):
        ret = []
        obj = getattr(self.ndb, name)
        for line in obj.dump():
            ret.append(line)
        return bottle.template('{{!ret}}', ret=json.dumps(ret))

    @route('GET', '/query/<name:re:(%s|%s|%s|%s)>' % ('nodes',
                                                      'p2p_edges',
                                                      'l2_edges',
                                                      'l3_edges'))
    def query(self, name):
        ret = []
        obj = getattr(self.ndb.query, name)
        for line in obj():
            ret.append(line)
        return bottle.template('{{!ret}}', ret=json.dumps(ret))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RinMTh
code,"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('geokey_sapelli', '0005_sapellifield_truefalse'),
    ]

    operations = [
        migrations.AddField(
            model_name='sapelliproject',
            name='sapelli_fingerprint',
            field=models.IntegerField(default=-1),
            preserve_default=False,
        ),
    ]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HOoB_l
code,"#!/usr/bin/python2.3

# This is the short name of the plugin, used as the menu item
# for the plugin.
# If not specified, the name of the file will be used.
shortname = ""Moment Curve layout (Cohen et al. 1995)""
# This is the long name of the plugin, used as the menu note
# for the plugin.
# If not specified, the short name will be used.
name = ""Moment Curve layout, O(n^3)""

DEBUG = False


def run(context, UI):
    """"""
    Run this plugin.
    """"""

    if len(context.graph.vertices) < 1:
        generate = True
    else:
        res = UI.prYesNo(""Use current graph?"",
                         ""Would you like to apply the layout to the current graph? If not, a complete graph will be generated and the current graph cleared."")
        if res:
            generate = False
            # Go through and eliminate any existing bend points
            from graph import DummyVertex

            for v in [x for x in context.graph.vertices if isinstance(x, DummyVertex)]:
                context.graph.removeVertex(v)
        else:
            generate = True

    if generate:
        N = UI.prType(""Number of Vertices"", ""Input number of vertices to generate complete graph:"", int, 4)
        if N == None:
            return True
        while N < 0:
            N = UI.prType(""Number of Vertices"",
                          ""Please input positive value.\n\nInput number of vertices to generate complete graph:"", int,
                          N)
            if N == None:
                return True

        context.graph.clear()

        # Generate a complete graph
        k_n(context, N)

    res = UI.prYesNo(""Use mod-p layout?"",
                     ""Would you like to use the mod-p compact layout (O(n^3) volume)? If not, the O(n^6) uncompacted layout will be used."")

    # Lay it out according to the 1bend layout
    moment(context, compact=res)

    context.camera.lookAtGraph(context.graph, context.graph.centerOfMass(), offset=context.graph.viewpoint())

    return True


def k_n(C, n):
    """"""
    k_n (C, n) -> void
    Create a complete graph on n vertices in context C.
    """"""
    from graph import Vertex, DummyVertex

    G = C.graph
    G.clear()
    # Add n vertices
    for i in range(n):
        G.addVertex(Vertex(id='%d' % i, name='v%d' % i))

    # For every pair of vertices (u, v):
    for u in G.vertices:
        for v in G.vertices:
            # ignoring duplicates and u==v
            if (u, v) not in G.edges and (v, u) not in G.edges and u != v:
                # add an edge between u and v
                G.addEdge((u, v))


def moment(C, compact=False):
    """"""
    Run moment curve layout (Cohen, Eades, Lin, Ruskey 1995).
    """"""
    G = C.graph
    from math import sqrt, ceil, floor
    from graph import DummyVertex, GraphError
    import colorsys


    vertices = [x for x in G.vertices if not isinstance(x, DummyVertex)]
    n = len(vertices)

    # Choose a prime p with n < p <= 2n
    for p in range(n + 1, 2 * n + 1):
        for div in range(2, p / 2):
            if p % div == 0:
                # print ""%d is not a prime (div by %d)"" % (p, div)
                break
        else:
            # We did not find a divisor
            # print ""%d is a prime!"" % p
            break
    else:
        # Can't happen!
        raise Exception, ""Can't find a prime between %d and %d!"" % (n + 1, 2 * n)

    # Position each vertex

    if compact:
        for i in range(n):
            G.modVertex(vertices[i]).pos = (i * 10, ((i * i) % p) * 10, ((i * i * i) % p) * 10)
    else:
        for i in range(n):
            G.modVertex(vertices[i]).pos = (i, (i * i), (i * i * i))

    return
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uVkUfR
code,"
from rest_framework import serializers
from django.contrib.auth.models import User

from dixit.account.models import UserProfile


class UserProfileSerializer(serializers.ModelSerializer):

    class Meta:
        model = UserProfile
        fields = ('name', )


class UserSerializer(serializers.ModelSerializer):
    """"""
    Serializes User objects
    """"""
    profile = UserProfileSerializer()

    class Meta:
        model = User
        fields = ('id', 'username', 'email', 'profile', )
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9HCHPX
code,"# The MIT License (MIT)
#
# Copyright (c) 2016 Frederic Guillot
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the ""Software""), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from cliff import app
from cliff import commandmanager
from pbr import version as app_version
import sys

from kanboard_cli.commands import application
from kanboard_cli.commands import project
from kanboard_cli.commands import task
from kanboard_cli import client


class KanboardShell(app.App):

    def __init__(self):
        super(KanboardShell, self).__init__(
            description='Kanboard Command Line Client',
            version=app_version.VersionInfo('kanboard_cli').version_string(),
            command_manager=commandmanager.CommandManager('kanboard.cli'),
            deferred_help=True)
        self.client = None
        self.is_super_user = True

    def build_option_parser(self, description, version, argparse_kwargs=None):
        parser = super(KanboardShell, self).build_option_parser(
            description, version, argparse_kwargs=argparse_kwargs)

        parser.add_argument(
            '--url',
            metavar='<api url>',
            help='Kanboard API URL',
        )

        parser.add_argument(
            '--username',
            metavar='<api username>',
            help='API username',
        )

        parser.add_argument(
            '--password',
            metavar='<api password>',
            help='API password/token',
        )

        parser.add_argument(
            '--auth-header',
            metavar='<authentication header>',
            help='API authentication header',
        )

        return parser

    def initialize_app(self, argv):
        client_manager = client.ClientManager(self.options)
        self.client = client_manager.get_client()
        self.is_super_user = client_manager.is_super_user()

        self.command_manager.add_command('app version', application.ShowVersion)
        self.command_manager.add_command('app timezone', application.ShowTimezone)
        self.command_manager.add_command('project show', project.ShowProject)
        self.command_manager.add_command('project list', project.ListProjects)
        self.command_manager.add_command('task create', task.CreateTask)
        self.command_manager.add_command('task list', task.ListTasks)


def main(argv=sys.argv[1:]):
    return KanboardShell().run(argv)


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7j967i
code,"﻿""""""Class to perform random over-sampling.""""""

# Authors: Guillaume Lemaitre <g.lemaitre58@gmail.com>
#          Christos Aridas
# License: MIT

from collections.abc import Mapping
from numbers import Real

import numpy as np
from scipy import sparse
from sklearn.utils import check_array, check_random_state
from sklearn.utils import _safe_indexing
from sklearn.utils.sparsefuncs import mean_variance_axis

from .base import BaseOverSampler
from ..utils import check_target_type
from ..utils import Substitution
from ..utils._docstring import _random_state_docstring
from ..utils._validation import _deprecate_positional_args


@Substitution(
    sampling_strategy=BaseOverSampler._sampling_strategy_docstring,
    random_state=_random_state_docstring,
)
class RandomOverSampler(BaseOverSampler):
    """"""Class to perform random over-sampling.

    Object to over-sample the minority class(es) by picking samples at random
    with replacement. The bootstrap can be generated in a smoothed manner.

    Read more in the :ref:`User Guide <random_over_sampler>`.

    Parameters
    ----------
    {sampling_strategy}

    {random_state}

    shrinkage : float or dict, default=None
        Parameter controlling the shrinkage applied to the covariance matrix.
        when a smoothed bootstrap is generated. The options are:

        - if `None`, a normal bootstrap will be generated without perturbation.
          It is equivalent to `shrinkage=0` as well;
        - if a `float` is given, the shrinkage factor will be used for all
          classes to generate the smoothed bootstrap;
        - if a `dict` is given, the shrinkage factor will specific for each
          class. The key correspond to the targeted class and the value is
          the shrinkage factor.

        The value needs of the shrinkage parameter needs to be higher or equal
        to 0.

        .. versionadded:: 0.8

    Attributes
    ----------
    sampling_strategy_ : dict
        Dictionary containing the information to sample the dataset. The keys
        corresponds to the class labels from which to sample and the values
        are the number of samples to sample.

    sample_indices_ : ndarray of shape (n_new_samples,)
        Indices of the samples selected.

        .. versionadded:: 0.4

    shrinkage_ : dict or None
        The per-class shrinkage factor used to generate the smoothed bootstrap
        sample. When `shrinkage=None` a normal bootstrap will be generated.

        .. versionadded:: 0.8

    n_features_in_ : int
        Number of features in the input dataset.

        .. versionadded:: 0.9

    See Also
    --------
    BorderlineSMOTE : Over-sample using the borderline-SMOTE variant.

    SMOTE : Over-sample using SMOTE.

    SMOTENC : Over-sample using SMOTE for continuous and categorical features.

    SMOTEN : Over-sample using the SMOTE variant specifically for categorical
        features only.

    SVMSMOTE : Over-sample using SVM-SMOTE variant.

    ADASYN : Over-sample using ADASYN.

    KMeansSMOTE : Over-sample applying a clustering before to oversample using
        SMOTE.

    Notes
    -----
    Supports multi-class resampling by sampling each class independently.
    Supports heterogeneous data as object array containing string and numeric
    data.

    When generating a smoothed bootstrap, this method is also known as Random
    Over-Sampling Examples (ROSE) [1]_.

    .. warning::
       Since smoothed bootstrap are generated by adding a small perturbation
       to the drawn samples, this method is not adequate when working with
       sparse matrices.

    References
    ----------
    .. [1] G Menardi, N. Torelli, ""Training and assessing classification
       rules with imbalanced data,"" Data Mining and Knowledge
       Discovery, 28(1), pp.92-122, 2014.

    Examples
    --------
    >>> from collections import Counter
    >>> from sklearn.datasets import make_classification
    >>> from imblearn.over_sampling import \
RandomOverSampler # doctest: +NORMALIZE_WHITESPACE
    >>> X, y = make_classification(n_classes=2, class_sep=2,
    ... weights=[0.1, 0.9], n_informative=3, n_redundant=1, flip_y=0,
    ... n_features=20, n_clusters_per_class=1, n_samples=1000, random_state=10)
    >>> print('Original dataset shape %s' % Counter(y))
    Original dataset shape Counter({{1: 900, 0: 100}})
    >>> ros = RandomOverSampler(random_state=42)
    >>> X_res, y_res = ros.fit_resample(X, y)
    >>> print('Resampled dataset shape %s' % Counter(y_res))
    Resampled dataset shape Counter({{0: 900, 1: 900}})
    """"""

    @_deprecate_positional_args
    def __init__(
        self,
        *,
        sampling_strategy=""auto"",
        random_state=None,
        shrinkage=None,
    ):
        super().__init__(sampling_strategy=sampling_strategy)
        self.random_state = random_state
        self.shrinkage = shrinkage

    def _check_X_y(self, X, y):
        y, binarize_y = check_target_type(y, indicate_one_vs_all=True)
        X, y = self._validate_data(
            X,
            y,
            reset=True,
            accept_sparse=[""csr"", ""csc""],
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WYjhv8
code,"from sys import argv

script, input_file = argv

def print_all(f):
    print f.read()

def rewind(f):
    f.seek(0)

def print_a_line(line_count, f):
    print line_count, f.readline()

current_file = open(input_file)

print ""First let's print the whole file:\n""

print_all(current_file)

print ""Now let's rewind, kind of like a tape.""

rewind(current_file)

print ""Let's print three lines:""

current_line = 1
print_a_line(current_line, current_file)

current_line = current_line + 1
print_a_line(current_line, current_file)

current_line = current_line + 1
print_a_line(current_line, current_file)


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dKfUPd
code,"#!/usr/bin/python
# -*- coding: utf-8 -*-
# pylint: disable=invalid-name
from __future__ import absolute_import
from math import acos, cos, pi, radians, sin, sqrt
import auttitude as at
import numpy as np


def normalized_cross(a, b):
    """"""
    Returns the normalized cross product between vectors.
    Uses numpy.cross().
    
    Parameters:
        a: First vector.
        b: Second vector.
    """"""
    c = np.cross(a, b)
    length = sqrt(c.dot(c))
    return c/length if length > 0 else c


def general_plane_intersection(n_a, da, n_b, db):
    """"""
    Returns a point and direction vector for the line of intersection
    of two planes in space, or None if planes are parallel.
    
    Parameters:
        n_a: Normal vector to plane A
         da: Point of plane A
        n_b: Normal vector to plane B
         db: Point of plane B
    """"""
    
    # https://en.wikipedia.org/wiki/Intersection_curve
    
    n_a = np.array(n_a)
    n_b = np.array(n_b)
    da  = np.array(da)
    db  = np.array(db)
    
    l_v = np.cross(n_a, n_b)
    norm_l = sqrt(np.dot(l_v, l_v))
    if norm_l == 0:
        return None
    else:
        l_v /= norm_l
    aa = np.dot(n_a, n_a)
    bb = np.dot(n_b, n_b)
    ab = np.dot(n_a, n_b)
    d_ = 1./(aa*bb - ab*ab)
    l_0 = (da*bb - db*ab)*d_*n_a + (db*aa - da*ab)*d_*n_b
    
    return l_v, l_0


def small_circle_intersection(axis_a, angle_a, axis_b, angle_b):
    """"""
    Finds the intersection between two small-circles returning zero, one or two 
    solutions as tuple.  
    
    Parameters:
         axis_a: Vector defining first circle axis
        angle_a: Small circle aperture angle (in radians) around axis_a 
         axis_b: Vector defining second circle axis
        angle_b: Small circle aperture angle (in radians) around axis_b
    """"""
    line = general_plane_intersection(axis_a, cos(angle_a),
                                      axis_b, cos(angle_b))
    if line is None:
        return ()
    l_v, l_0 = line
    # https://en.wikipedia.org/wiki/Line%E2%80%93sphere_intersection
    b = 2*l_v.dot(l_0)
    delta = b*b - 4*(l_0.dot(l_0) - 1)
    # Should the answers be normalized?
    if delta < 0:
        return ()
    elif delta == 0:
        return -b/2.,
    else:
        sqrt_delta = sqrt(delta)
        return l_0 + l_v*(-b - sqrt_delta)/2., l_0 + l_v*(-b + sqrt_delta)/2.


def build_rotation_matrix(azim, plng, rake):
    """"""
    Returns the rotation matrix that rotates the North vector to the line given 
    by Azimuth and Plunge and East and Up vectors are rotate clock-wise by Rake
    around the rotated North vector. 
    
    Parameters:
        azim: Line Azimuth from North (degrees).
        plng: Line Plunge measured from horizontal (degrees).
        rake: Rotation angle around rotated axis (degrees).
    """"""
    # pylint: disable=bad-whitespace
    azim, plng, rake = radians(azim), radians(plng), radians(rake)

    R1 = np.array((( cos(rake), 0.,        sin(rake)),
                   ( 0.,        1.,         0.      ),
                   (-sin(rake), 0.,        cos(rake))))

    R2 = np.array((( 1.,        0.,        0.       ),
                   ( 0.,        cos(plng), sin(plng)),
                   ( 0.,       -sin(plng), cos(plng))))

    R3 = np.array((( cos(azim), sin(azim), 0.       ),
                   (-sin(azim), cos(azim), 0.       ),
                   ( 0.,        0.,        1.       )))

    return R3.dot(R2).dot(R1)


def adjust_lines_to_planes(lines, planes):
    """"""
    Project each given line to it's respective plane. Returns the projected
    lines as a new LineSet and the angle (in radians) between each line and
    plane prior to projection.
    
    Parameters: 
        lines:  A LineSet like object with an array of n Lines
        planes: A PlaseSet like object with an array of n Planes 
    """"""
    
    lines  = at.LineSet(lines)
    planes = at.PlaneSet(planes)
    
    angles = np.zeros(len(lines))
    adjusted_lines = np.zeros_like(lines)
    for i, (line, plane) in enumerate(zip(lines, planes)):
        cos_theta = np.dot(line, plane)
        angles[i] = pi/2. - acos(cos_theta)
        adjusted_line = line - line*cos_theta
        adjusted_lines[i] = adjusted_line/sqrt(np.dot(adjusted_line,
                                                      adjusted_line))
    return adjusted_lines, angles
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",66bZZT
code,"from django.db import models

from .workflow import TestStateMachine


class TestModel(models.Model):
    name = models.CharField(max_length=100)
    state = models.CharField(max_length=20, null=True, blank=True)
    state_num = models.IntegerField(null=True, blank=True)
    other_state = models.CharField(max_length=20, null=True, blank=True)
    message = models.CharField(max_length=250, null=True, blank=True)

    class Meta:
        permissions = TestStateMachine.get_permissions('testmodel', 'Test')

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7WzbuV
code,"#!/usr/bin/env python

import subprocess
import praw
from hashlib import sha1
from flask import Flask
from flask import Response
from flask import request
from cStringIO import StringIO
from base64 import b64encode
from base64 import b64decode
from ConfigParser import ConfigParser
import OAuth2Util
import os
import markdown
import bleach
# encoding=utf8
import sys
from participantCollection import ParticipantCollection

reload(sys)
sys.setdefaultencoding('utf8')


# Edit Me!
# Each day after you post a signup post, copy its 6-character ID to this array.
signupPageSubmissionIds = [ '7zrrj1', '7zxkpq', '8055hn', '80ddrf', '80nbm1', '80waq3' ]
flaskport = 8993

app = Flask(__name__)
app.debug = True
commentHashesAndComments = {}


def loginAndReturnRedditSession():
    config = ConfigParser()
    config.read(""../reddit-password-credentials.cfg"")
    user = config.get(""Reddit"", ""user"")
    password = config.get(""Reddit"", ""password"")
    # TODO:  password auth is going away, and we will soon need to do oauth.
    redditSession = praw.Reddit(user_agent='Test Script by /u/foobarbazblarg')
    redditSession.login(user, password, disable_warning=True)
    # submissions = redditSession.get_subreddit('pornfree').get_hot(limit=5)
    # print [str(x) for x in submissions]
    return redditSession


def loginOAuthAndReturnRedditSession():
    redditSession = praw.Reddit(user_agent='Test Script by /u/foobarbazblarg')
    # New version of praw does not require explicit use of the OAuth2Util object.  Presumably because reddit now REQUIRES oauth.
    # o = OAuth2Util.OAuth2Util(redditSession, print_log=True, configfile=""../reddit-oauth-credentials.cfg"")
    # TODO:  Testing comment of refresh.  We authenticate fresh every time, so presumably no need to do o.refresh().
    # o.refresh(force=True)
    return redditSession


def getSubmissionsForRedditSession(redditSession):
    # submissions = [redditSession.get_submission(submission_id=submissionId) for submissionId in signupPageSubmissionIds]
    submissions = [redditSession.submission(id=submissionId) for submissionId in signupPageSubmissionIds]
    for submission in submissions:
        submission.comments.replace_more(limit=None)
        # submission.replace_more_comments(limit=None, threshold=0)
    return submissions


def getCommentsForSubmissions(submissions):
    comments = []
    for submission in submissions:
        commentForest = submission.comments
        comments += [comment for comment in commentForest.list() if comment.__class__ == praw.models.Comment]
    return comments


def retireCommentHash(commentHash):
    with open(""retiredcommenthashes.txt"", ""a"") as commentHashFile:
        commentHashFile.write(commentHash + '\n')


def retiredCommentHashes():
    with open(""retiredcommenthashes.txt"", ""r"") as commentHashFile:
        # return commentHashFile.readlines()
        return commentHashFile.read().splitlines()


@app.route('/moderatesignups.html')
def moderatesignups():
    global commentHashesAndComments
    commentHashesAndComments = {}
    stringio = StringIO()
    stringio.write('<html>\n<head>\n</head>\n\n')

    # redditSession = loginAndReturnRedditSession()
    redditSession = loginOAuthAndReturnRedditSession()
    submissions = getSubmissionsForRedditSession(redditSession)
    flat_comments = getCommentsForSubmissions(submissions)
    retiredHashes = retiredCommentHashes()
    i = 1
    stringio.write('<iframe name=""invisibleiframe"" style=""display:none;""></iframe>\n')
    stringio.write(""<h3>"")
    stringio.write(os.getcwd())
    stringio.write(""<br>\n"")
    for submission in submissions:
        stringio.write(submission.title)
        stringio.write(""<br>\n"")
    stringio.write(""</h3>\n\n"")
    stringio.write('<form action=""copydisplayduringsignuptoclipboard.html"" method=""post"" target=""invisibleiframe"">')
    stringio.write('<input type=""submit"" value=""Copy display-during-signup.py stdout to clipboard"">')
    stringio.write('</form>')
    for comment in flat_comments:
        # print comment.is_root
        # print comment.score
        i += 1
        commentHash = sha1()
        commentHash.update(comment.fullname)
        commentHash.update(comment.body.encode('utf-8'))
        commentHash = commentHash.hexdigest()
        if commentHash not in retiredHashes:
            commentHashesAndComments[commentHash] = comment
            authorName = str(comment.author)  # can be None if author was deleted.  So check for that and skip if it's None.
            stringio.write(""<hr>\n"")
            stringio.write('<font color=""blue""><b>')
            stringio.write(authorName)  # can be None if author was deleted.  So check for that and skip if it's None.
            stringio.write('</b></font><br>')
            if ParticipantCollection().hasParticipantNamed(authorName):
                stringio.write(' <small><font color=""green"">(member)</font></small>')
                # if ParticipantCollection().participantNamed(authorName).isStillIn:
                #    stringio.write(' <small><font color=""green"">(in)</font></small>')
                # else:
                #    ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pLJVDp
code,"from util.tipo import tipo
class S_PARTY_MEMBER_INTERVAL_POS_UPDATE(object):

    def __init__(self, tracker, time, direction, opcode, data):
        print(str(type(self)).split('.')[3]+'('+str(len(data))+'): '+ str(data.get_array_hex(1))[1:-1])
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gM4quO
code,"import os
import logging

from jsub.util import safe_mkdir
from jsub.util import safe_rmdir

class Submit(object):
	def __init__(self, manager, task_id, sub_ids=None, dry_run=False, resubmit=False):
		self.__manager = manager
		self.__task	= self.__manager.load_task(task_id)
		self.__sub_ids = sub_ids
		self.__dry_run = dry_run
		self.__resubmit = resubmit

		self.__logger = logging.getLogger('JSUB')
		if self.__sub_ids==None:
			self.__sub_ids=range(len(self.__task.data['jobvar']))

		self.__initialize_manager()

	def __initialize_manager(self):
		self.__config_mgr	= self.__manager.load_config_manager()

		self.__backend_mgr   = self.__manager.load_backend_manager()
		self.__bootstrap_mgr = self.__manager.load_bootstrap_manager()
		self.__navigator_mgr = self.__manager.load_navigator_manager()
		self.__context_mgr  = self.__manager.load_context_manager()
		self.__action_mgr	= self.__manager.load_action_manager()
		self.__launcher_mgr  = self.__manager.load_launcher_manager()


	def handle(self):
		run_root = self.__backend_mgr.get_run_root(self.__task.data['backend'], self.__task.data['id'])

		main_root = os.path.join(run_root, 'main')

		safe_rmdir(main_root)
		safe_mkdir(main_root)

		self.__create_input(main_root)
		self.__create_context(main_root)
		self.__create_action(main_root)
		self.__create_navigator(main_root)
		self.__create_bootstrap(main_root)

		launcher_param = self.__create_launcher(run_root)

		self.__submit(launcher_param)


	def __create_input(self, main_root):
		content = self.__manager.load_content()
		input_dir = os.path.join(main_root,'input')
		try:
			content.get(self.__task.data['id'], 'input', os.path.join(main_root, 'input'))
		except:
			safe_mkdir(input_dir)

	def __create_context(self, main_root):
		context_dir = os.path.join(main_root, 'context')
		safe_mkdir(context_dir)

		action_default = {}
		for unit, param in self.__task.data['workflow'].items():
			action_default[unit] = self.__action_mgr.default_config(param['type'])

		navigators = self.__config_mgr.navigator()
		context_format = self.__navigator_mgr.context_format(navigators)

		self.__context_mgr.create_context_file(self.__task.data, action_default, context_format, context_dir)

	def __create_action(self, main_root):
		action_dir = os.path.join(main_root, 'action')
		safe_mkdir(action_dir)

		actions = set()
		for unit, param in self.__task.data['workflow'].items():
			actions.add(param['type'])
		self.__action_mgr.create_actions(actions, action_dir)

	def __create_navigator(self, main_root):
		navigator_dir = os.path.join(main_root, 'navigator')
		safe_mkdir(navigator_dir)

		navigators = self.__config_mgr.navigator()
		self.__navigator_mgr.create_navigators(navigators, navigator_dir)

	def __create_bootstrap(self, main_root):
		bootstrap_dir = os.path.join(main_root, 'bootstrap')
		safe_mkdir(bootstrap_dir)

		bootstrap = self.__config_mgr.bootstrap()
		self.__bootstrap_mgr.create_bootstrap(bootstrap, bootstrap_dir)

	def __create_launcher(self, run_root):
		launcher = self.__task.data['backend']['launcher']
		return self.__launcher_mgr.create_launcher(launcher, run_root)


	def __submit(self, launcher_param):
		if self.__dry_run:
			return

		if self.__resubmit==False:
			if self.__task.data.get('backend_job_ids') or self.__task.data.get('backend_task_id'):
				self.__logger.info('This task has already been submitted to backend, rerun the command with ""-r"" option if you wish to delete current jobs and resubmit the task.') 
				return
		else:	
			self.__logger.info('Removing submitted jobs on backend before resubmission.') 
			task_id = self.__task.data.get('backend_task_id')
			#remove previously generated files in job folder
			job_ids = self.__task.data.get('backend_job_ids')
			run_root = self.__backend_mgr.get_run_root(self.__task.data['backend'], self.__task.data['id'])
			job_root=os.path.join(run_root,'subjobs')
			safe_rmdir(job_root)
			if task_id:
				self.__backend_mgr.delete_task(self.__task.data['backend'],backend_task_id = task_id)
			elif job_ids:
				self.__backend_mgr.delete_jobs(self.__task.data['backend'],backend_job_ids = job_ids)

		result = self.__backend_mgr.submit(self.__task.data['backend'], self.__task.data['id'], launcher_param, sub_ids = self.__sub_ids)
		if not type(result) is  dict:
			result = {}

		if 'backend_job_ids' in result:
			njobs = len(result['backend_job_ids'])
		else:
			njobs = len(result)
		if njobs>0:
			self.__logger.info('%d jobs successfully submitted to backend.'%(njobs))

		self.__task.data.setdefault('backend_job_ids',{})
		backend_job_ids=result.get('backend_job_ids',{})
		backend_task_id=result.get('backend_task_id',0)
		self.__task.data['backend_job_ids'].update(backend_job_ids) 
		self.__task.data['backend_task_id']=backend_task_id
		self.__task.data['status'] = 'Submitted'
		task_pool = self.__manager.load_task_pool()
		task_pool.save(self.__task)

		self.__logger.debug(result)

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2VPx5u
code,"import _plotly_utils.basevalidators


class TextfontValidator(_plotly_utils.basevalidators.CompoundValidator):
    def __init__(self, plotly_name=""textfont"", parent_name=""scattersmith"", **kwargs):
        super(TextfontValidator, self).__init__(
            plotly_name=plotly_name,
            parent_name=parent_name,
            data_class_str=kwargs.pop(""data_class_str"", ""Textfont""),
            data_docs=kwargs.pop(
                ""data_docs"",
                """"""
            color

            colorsrc
                Sets the source reference on Chart Studio Cloud
                for `color`.
            family
                HTML font family - the typeface that will be
                applied by the web browser. The web browser
                will only be able to apply a font if it is
                available on the system which it operates.
                Provide multiple font families, separated by
                commas, to indicate the preference in which to
                apply fonts if they aren't available on the
                system. The Chart Studio Cloud (at
                https://chart-studio.plotly.com or on-premise)
                generates images on a server, where only a
                select number of fonts are installed and
                supported. These include ""Arial"", ""Balto"",
                ""Courier New"", ""Droid Sans"",, ""Droid Serif"",
                ""Droid Sans Mono"", ""Gravitas One"", ""Old
                Standard TT"", ""Open Sans"", ""Overpass"", ""PT Sans
                Narrow"", ""Raleway"", ""Times New Roman"".
            familysrc
                Sets the source reference on Chart Studio Cloud
                for `family`.
            size

            sizesrc
                Sets the source reference on Chart Studio Cloud
                for `size`.
"""""",
            ),
            **kwargs
        )
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",io8U3z
code,"
## See ""d_bankfull"" in update_flow_depth()  ######## (2/21/13)

## See ""(5/13/10)"" for a temporary fix.
#------------------------------------------------------------------------
#  Copyright (c) 2001-2014, Scott D. Peckham
#
#  Sep 2014.  Wrote new update_diversions().
#             New standard names and BMI updates and testing.
#  Nov 2013.  Converted TopoFlow to a Python package.
#  Feb 2013.  Adapted to use EMELI framework.
#  Jan 2013.  Shared scalar doubles are now 0D numpy arrays.
#             This makes them mutable and allows components with
#             a reference to them to see them change.
#             So far:  Q_outlet, Q_peak, Q_min...
#  Jan 2013.  Revised handling of input/output names.
#  Oct 2012.  CSDMS Standard Names and BMI.
#  May 2012.  Commented out diversions.update() for now.  #######
#  May 2012.  Shared scalar doubles are now 1-element 1D numpy arrays.
#             This makes them mutable and allows components with
#             a reference to them to see them change.
#             So far:  Q_outlet, Q_peak, Q_min...
#  May 2010.  Changes to initialize() and read_cfg_file()
#  Mar 2010.  Changed codes to code, widths to width,
#             angles to angle, nvals to nval, z0vals to z0val,
#             slopes to slope (for GUI tools and consistency
#             across all process components)
#  Aug 2009.  Updates.
#  Jul 2009.  Updates.
#  May 2009.  Updates.
#  Jan 2009.  Converted from IDL.

#-----------------------------------------------------------------------
#  NB!     In the CFG file, change MANNING and LAW_OF_WALL flags to
#          a single string entry like ""friction method"".   #########
#-----------------------------------------------------------------------
#  Notes:  Set self.u in manning and law_of_wall functions ??
#          Update friction factor in manning() and law_of_wall() ?
#          Double check how Rh is used in law_of_the_wall().

#          d8_flow has ""flow_grids"", but this one has ""codes"".
#          Make sure values are not stored twice.
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#  NOTES:  This file defines a ""base class"" for channelized flow
#          components as well as functions used by most or
#          all channel flow methods.  The methods of this class
#          (especially ""update_velocity"") should be over-ridden as
#          necessary for different methods of modeling channelized
#          flow.  See channels_kinematic_wave.py,
#          channels_diffusive_wave.py and channels_dynamic_wave.py.
#-----------------------------------------------------------------------
#  NOTES:  update_free_surface_slope() is called by the
#          update_velocity() methods of channels_diffusive_wave.py
#          and channels_dynamic_wave.py.
#-----------------------------------------------------------------------
#
#  class channels_component
#
#      ## get_attribute()        # (defined in each channel component)
#      get_input_var_names()     # (5/15/12)
#      get_output_var_names()    # (5/15/12)
#      get_var_name()            # (5/15/12)
#      get_var_units()           # (5/15/12)
#-----------------------------
#      set_constants()
#      initialize()
#      update()
#      finalize()
#      set_computed_input_vars()   # (5/11/10)
#----------------------------------
#      initialize_d8_vars()          ########
#      initialize_computed_vars()
#      initialize_diversion_vars()      # (9/22/14)
#      initialize_outlet_values()
#      initialize_peak_values()
#      initialize_min_and_max_values()  # (2/3/13)
#-------------------------------------
#      update_R()
#      update_R_integral()
#      update_discharge()
#      update_diversions()          # (9/22/14)
#      update_flow_volume()
#      update_flow_depth()
#      update_free_surface_slope()
#      update_shear_stress()        # (9/9/14, depth-slope product)
#      update_shear_speed()         # (9/9/14)
#      update_trapezoid_Rh()
#      update_friction_factor()     # (9/9/14)
#----------------------------------
#      update_velocity()            # (override as needed)
#      update_velocity_on_edges()
#      update_froude_number()       # (9/9/14)
#----------------------------------
#      update_outlet_values()
#      update_peak_values()         # (at the main outlet)
#      update_Q_out_integral()      # (moved here from basins.py)
#      update_mins_and_maxes()      # (don't add into update())
#      check_flow_depth()
#      check_flow_velocity()
#----------------------------------
#      open_input_files()
#      read_input_files()
#      close_input_files()
#----------------------------------
#      update_outfile_names()
#      bundle_output_files()        # (9/21/14. Not used yet)
#      open_output_files()
#      write_output_files()
#      close_output_files()
#      save_grids()
#      save_pixel_values()
#----------------------------------
#      manning_formula()
#      law_of_the_wall()
#      print_status_report()
#      remove_bad_slopes() 

#  Functions:      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NpfKb0
code,"import collections
import re
import urlparse


class DSN(collections.MutableMapping):
    ''' Hold the results of a parsed dsn.
    This is very similar to urlparse.ParseResult tuple.

    http://docs.python.org/2/library/urlparse.html#results-of-urlparse-and-urlsplit

    It exposes the following attributes:

        scheme
        schemes -- if your scheme has +'s in it, then this will contain a list of schemes split by +
        path
        paths -- the path segment split by /, so ""/foo/bar"" would be [""foo"", ""bar""]
        host -- same as hostname (I just like host better)
        hostname
        hostloc -- host:port
        username
        password
        netloc
        query -- a dict of the query string
        query_str -- the raw query string
        port
        fragment
    '''
    DSN_REGEXP = re.compile(r'^\S+://\S+')
    FIELDS = ('scheme', 'netloc', 'path', 'params', 'query', 'fragment')

    def __init__(self, dsn, **defaults):
        ''' Parse a dsn to parts similar to urlparse.
        This is a nuts function that can serve as a good basis to parsing a custom dsn

        :param dsn: the dsn to parse
        :type dsn: str
        :param defaults: any values you want to have defaults for if they aren't in the dsn
        :type defaults: dict
        '''

        assert self.DSN_REGEXP.match(dsn), \
            ""{} is invalid, only full dsn urls (scheme://host...) allowed"".format(dsn)

        first_colon = dsn.find(':')
        scheme = dsn[0:first_colon]
        dsn_url = dsn[first_colon+1:]
        url = urlparse.urlparse(dsn_url)

        options = {}
        if url.query:
            for k, kv in urlparse.parse_qs(url.query, True, True).iteritems():
                if len(kv) > 1:
                    options[k] = kv
                else:
                    options[k] = kv[0]

        self.scheme = scheme
        self.hostname = url.hostname
        self.path = url.path
        self.params = url.params
        self.query = options
        self.fragment = url.fragment
        self.username = url.username
        self.password = url.password
        self.port = url.port
        self.query_str = url.query

        for k, v in defaults.iteritems():
            self.set_default(k, v)

    def __iter__(self):
        for f in self.FIELDS:
            yield getattr(self, f, '')

    def __len__(self):
        return len(iter(self))

    def __getitem__(self, field):
        return getattr(self, field, None)

    def __setitem__(self, field, value):
        setattr(self, field, value)

    def __delitem__(self, field):
        delattr(self, field)

    @property
    def schemes(self):
        '''the scheme, split by plus signs'''
        return self.scheme.split('+')

    @property
    def netloc(self):
        '''return username:password@hostname:port'''
        s = ''
        prefix = ''
        if self.username:
            s += self.username
            prefix = '@'

        if self.password:
            s += "":{}"".format(self.password)
            prefix = '@'

        s += ""{}{}"".format(prefix, self.hostloc)
        return s

    @property
    def paths(self):
        '''the path attribute split by /'''
        return filter(None, self.path.split('/'))

    @property
    def host(self):
        '''the hostname, but I like host better'''
        return self.hostname

    @property
    def hostloc(self):
        '''return host:port'''
        hostloc = self.hostname
        if self.port:
            hostloc = '{}:{}'.format(hostloc, self.port)

        return hostloc

    def set_default(self, key, value):
        ''' Set a default value for key.

        This is different than dict's setdefault because it will set default either
        if the key doesn't exist, or if the value at the key evaluates to False, so
        an empty string or a None will value will be updated.

        :param key: the item to update
        :type key: str
        :param value: the items new value if key has a current value that evaluates to False
        '''
        if not getattr(self, key, None):
            setattr(self, key, value)

    def get_url(self):
        '''return the dsn back into url form'''
        return urlparse.urlunparse((
            self.scheme,
            self.netloc,
            self.path,
            self.params,
            self.query_str,
            self.fragment,
        ))

    def copy(self):
        return DSN(self.get_url())

    def __str__(self):
        return self.get_url()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",76nkDN
code,"#!/usr/bin/env python

##    tumblrserv.py implements a Tumblr (http://www.tumblr.com) markup parsing
##    engine and compatible webserver.
##
##    Version: 0.2 final
##
##    Copyright (C) 2009 Jeremy Herbert
##    Contact mailto:jeremy@jeremyherbert.net
##
##    This program is free software; you can redistribute it and/or
##    modify it under the terms of the GNU General Public License
##    as published by the Free Software Foundation; either version 2
##    of the License, or (at your option) any later version.
##    
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##    
##    You should have received a copy of the GNU General Public License
##    along with this program; if not, write to the Free Software
##    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 
##    02110-1301, USA.

import os, sys, ftplib, yaml, cherrypy, re, urllib2

from src.post_classes import *
from src import json
from src.constants import *
from src.support import *
from src.net import *
from src.server import *

post_types = ['Regular', 'Photo', 'Quote', 'Link', 'Conversation', 'Video', 'Audio', 'Conversation']

args_dict = {
    'autoreload': 0, # Whether to add the meta refresh tag
    'publish': False, # Whether to push the new theme data to tumblr
    'data_source': DATA_LOCAL, # Whether to use local data in the theme
}

########################################

# take the arguments and place them in a mutable list 
arguments = sys.argv

# if the script has been run with the interpreter prefix, get rid of it
if arguments[0] == 'python' or arguments[0] == 'ipython' \
or arguments[0] == 'python2.5': 
    arguments.pop(0)

# pop off the script name
arguments.pop(0)

# load the configuration file
config_path = 'data/config.yml'
if contains(arguments, '--config'):
    if os.path.exists(next_arg(arguments, '--config')):
        config_path = next_arg(arguments, '--config')

config = get_config(config_path)

# now we check if there are any data processing flags
if contains(arguments, '--pull-data'):
    # call pull_data with the argument after the flag
    pull_data( next_arg(arguments, '--pull-data') )

if contains(arguments, '--theme'):
    if not os.path.exists(""themes/"" + next_arg(arguments, '--theme') + '.thtml'):
        err_exit(""The theme file %s.thtml does not exist in the themes\
 directory."" % next_arg(arguments, '--theme'))
    config['defaults']['theme_name'] = next_arg(arguments, '--theme')

if contains(arguments, '--publish'):
    if not has_keys(config['publishing_info'], \
     ( 'url', 'username', 'password' )): 

        err_exit('The configuration file is missing some critical publishing\
 information. Please make sure you have specified your url, username and\
 password.')
 
    publish_theme(config['publishing_info']['url'],\
     config['publishing_info']['username'],\
     config['publishing_info']['password'],\
     get_markup('themes/%s.thtml' % config['defaults']['theme_name']))
    
if contains(arguments, '--do-nothing'):
    config['optimisations']['do_nothing'] = True
    
# start the server up
cherrypy.config.update('data/cherrypy.conf')
cherrypy.quickstart(TumblrServ(config), '/')",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xtLIE2
code,""""""" -*- coding: utf-8 -*- """"""

from python2awscli import bin_aws
from python2awscli.error import AWSNotFound, ParseError, AWSDuplicate
from python2awscli import must


class BaseSecurityGroup(object):
    def __init__(self, name, region, vpc, description, inbound=None, outbound=None):
        """"""
        :param name: String, name of SG
        :param region: String, AWS region
        :param vpc: String, IP of the VPC this SG belongs to
        :param description: String
        :param inbound: List of dicts, IP Permissions that should exist
        :param outbound: List of dicts, IP Permissions that should exist
        """"""
        self.id = None
        self.name = name
        self.region = region
        self.vpc = vpc
        self.description = description
        self.IpPermissions = []
        self.IpPermissionsEgress = []
        self.owner = None
        self.changed = False
        try:
            self._get()
        except AWSNotFound:
            self._create()
        self._merge_rules(must.be_list(inbound), self.IpPermissions)
        self._merge_rules(must.be_list(outbound), self.IpPermissionsEgress, egress=True)
        if self.changed:
            self._get()

    def _break_out(self, existing):
        """"""
        Undo AWS's rule flattening so we can do simple 'if rule in existing' logic later.
        :param existing: List of SG rules as dicts.
        :return: List of SG rules as dicts.
        """"""
        spool = list()
        for rule in existing:
            for ip in rule['IpRanges']:
                copy_of_rule = rule.copy()
                copy_of_rule['IpRanges'] = [ip]
                copy_of_rule['UserIdGroupPairs'] = []
                spool.append(copy_of_rule)
            for group in rule['UserIdGroupPairs']:
                copy_of_rule = rule.copy()
                copy_of_rule['IpRanges'] = []
                copy_of_rule['UserIdGroupPairs'] = [group]
                spool.append(copy_of_rule)
        return spool

    def _merge_rules(self, requested, active, egress=False):
        """"""
        :param requested: List of dicts, IP Permissions that should exist
        :param active: List of dicts, IP Permissions that already exist
        :param egress: Bool, addressing outbound rules or not?
        :return: Bool
        """"""
        if not isinstance(requested, list):
            raise ParseError(
                'SecurityGroup {0}, need a list of dicts, instead got ""{1}""'.format(self.name, requested))
        for rule in requested:
            if rule not in active:
                self._add_rule(rule, egress)
        for active_rule in active:
            if active_rule not in requested:
                self._rm_rule(active_rule, egress)
        return True

    def _add_rule(self, ip_permissions, egress):
        """"""
        :param ip_permissions: Dict of IP Permissions
        :param egress: Bool
        :return: Bool
        """"""
        direction = 'authorize-security-group-ingress'
        if egress:
            direction = 'authorize-security-group-egress'
        command = ['ec2', direction,
                   '--region', self.region,
                   '--group-id', self.id,
                   '--ip-permissions', str(ip_permissions).replace(""'"", '""')
                   ]
        bin_aws(command)
        print('Authorized: {0}'.format(ip_permissions))  # TODO: Log(...)
        self.changed = True
        return True

    def _rm_rule(self, ip_permissions, egress):
        """"""
        :param ip_permissions: Dict of IP Permissions
        :param egress: Bool
        :return: Bool
        """"""
        direction = 'revoke-security-group-ingress'
        if egress:
            direction = 'revoke-security-group-egress'
        command = ['ec2', direction,
                   '--region', self.region,
                   '--group-id', self.id,
                   '--ip-permissions', str(ip_permissions).replace(""'"", '""')
                   ]
        bin_aws(command)
        print('Revoked: {0}'.format(ip_permissions))  # TODO: Log(...)
        self.changed = True
        return True

    def _create(self):
        """"""
        Create a Security Group
        :return:
        """"""
        # AWS grants all new SGs this default outbound rule ""This is pro-human & anti-machine behavior.""
        default_egress = {
            'Ipv6Ranges': [],
            'PrefixListIds': [],
            'IpRanges': [{'CidrIp': '0.0.0.0/0'}],
            'UserIdGroupPairs': [], 'IpProtocol': '-1'
        }
        command = [
                'ec2', 'create-security-group',
                '--region', self.region,
                '--group-name',  self.name,
                '--description', self.description,
                '--vpc-id', self.vpc
                ]
        try:
            self.id = bin_aws(command, key='GroupId')
        except AWSDuplicate:
            return False  # OK if it already exists.
        print('Created {0}'.format(command))  # TODO: Log(...)
        self.IpPermissions = []
        self.IpPermissionsEgress = [default_egress]
        self.changed = True
        return True

    def _get(se",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pjp4VK
code,"from django.contrib import admin

# Register your models here.
from rcps.models import *


class IngredientToRecipeInline(admin.TabularInline):
    model = Ingredient.recipes.through
    verbose_name = 'Ингредиент'
    verbose_name_plural = 'Ингредиенты'


class EquipmentInline(admin.TabularInline):
    model = Equipment.equipment_recipes.through
    verbose_name = 'Инструмент'
    verbose_name_plural = 'Инструменты'


class TagInline(admin.TabularInline):
    model = Tag.tag_recipes.through
    verbose_name = 'Тег'
    verbose_name_plural = 'Теги'


class RecipeAdmin(admin.ModelAdmin):
    model = Recipe
    fields = ['recipe_name', 'recipe_link']
    inlines = (
        IngredientToRecipeInline,
        EquipmentInline,
        TagInline,
    )


class IngredientComponentInAlternativeInline(admin.TabularInline):
    model = IngredientAlternative.ingredients.through
    verbose_name = 'Ингредиент'
    verbose_name_plural = 'Ингредиенты'


class IngredientAlternativeAdmin(admin.ModelAdmin):
    model = IngredientAlternative
    inlines = (
        IngredientComponentInAlternativeInline,
    )


admin.site.register(Recipe, RecipeAdmin)
admin.site.register(Ingredient)
admin.site.register(IngredientAlternative, IngredientAlternativeAdmin)
admin.site.register(IngredientCategory)
admin.site.register(Equipment)
admin.site.register(EquipmentCategory)
admin.site.register(IngredientReplacement)
admin.site.register(Tag)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",z_QO70
code,"import os
import webapp2

from actions import cronActions
from views import views
import secrets

SECS_PER_WEEK = 60 * 60 * 24 * 7
# Enable ctypes -> Jinja2 tracebacks
PRODUCTION_MODE = not os.environ.get(
    'SERVER_SOFTWARE', 'Development').startswith('Development')

ROOT_DIRECTORY = os.path.dirname(__file__)

if not PRODUCTION_MODE:
      from google.appengine.tools.devappserver2.python import sandbox
      sandbox._WHITE_LIST_C_MODULES += ['_ctypes', 'gestalt']
      TEMPLATE_DIRECTORY = os.path.join(ROOT_DIRECTORY, 'src')
else:
      TEMPLATE_DIRECTORY = os.path.join(ROOT_DIRECTORY, 'dist')

curr_path = os.path.abspath(os.path.dirname(__file__))


config = {
      'webapp2_extras.sessions': {
            'secret_key': secrets.COOKIE_KEY,
            'session_max_age': SECS_PER_WEEK,
            'cookie_args': {'max_age': SECS_PER_WEEK},
            'cookie_name': 'echo_sense_session'
      },
      'webapp2_extras.jinja2': {
            'template_path': TEMPLATE_DIRECTORY
    }
}

app = webapp2.WSGIApplication(
    [
      # Cron jobs (see cron.yaml)
      webapp2.Route('/cron/monthly', handler=cronActions.Monthly),
      webapp2.Route(r'/<:.*>', handler=views.ActionPotentialApp, name=""ActionPotentialApp""),
    ], debug=True, config=config)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MgjTXg
code,"# Licensed under a 3-clause BSD style license - see LICENSE.rst
""""""
Handles backports of the standard library's `fractions.py`.

The fractions module in 2.6 does not handle being instantiated using a
float and then calculating an approximate fraction based on that.
This functionality is required by the FITS unit format generator,
since the FITS unit format handles only rational, not decimal point,
powers.
""""""

from __future__ import absolute_import

import sys
if sys.version_info[:2] == (2, 6):
    from ._fractions_py2 import *
else:
    from fractions import *
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oXRvTj
code,"# -*- coding: utf-8 -*-
from utils import *

commands = [
    '^remindme',
    '^reminder',
    '^remind$',
    '^r '
]

parameters = (
    ('delay', True),
    ('message', True),
)

description = 'Set a reminder for yourself. First argument is delay until you wish to be reminded.\nExample: `' + config['command_start'] + 'remindme 2h GiT GuD`'
action = 'typing'
hidden = True

reminders = load_json('data/reminders.json')

def to_seconds(time, unit):
    if unit == 's':
        return float(time)
    elif unit == 'm':
        return float(time) * 60
    elif unit == 'h':
        return float(time) * 60 * 60
    elif unit == 'd':
        return float(time) * 60 * 60 * 24

def run(msg):
    input = get_input(msg['text'])

    if not input:
        doc = get_doc(commands, parameters, description)
        return send_message(msg['chat']['id'], doc,
                            parse_mode=""Markdown"")
    delay = first_word(input)
    if delay:
        time = delay[:-1]
        unit = delay[-1:]
        if not is_int(time) or is_int(unit):
            message = 'The delay must be in this format: `(integer)(s|m|h|d)`.\nExample: `2h` for 2 hours.'
            return send_message(msg['chat']['id'], message, parse_mode=""Markdown"")
    try:
        alarm = now() + to_seconds(time, unit)
    except:
        return send_message(msg['chat']['id'], message, parse_mode=""Markdown"")
        
    text = all_but_first_word(input)
    if not text:
        send_message(msg['chat']['id'], 'Please include a reminder.')
        
    if 'username' in msg['from']:
        text += '\n@' + msg['from']['username']
    
    reminder = OrderedDict()
    reminder['alarm'] = alarm
    reminder['chat_id'] = msg['chat']['id']
    reminder['text'] = text
    
    reminders[int(now())] = reminder
    save_json('data/reminders.json', reminders)
    
    if unit == 's':
        delay = delay.replace('s', ' seconds')
    if unit == 'm':
        delay = delay.replace('m', ' minutes')
    if unit == 'h':
        delay = delay.replace('h', ' hours')
    if unit == 'd':
        delay = delay.replace('d', ' days')
    
    message = 'Your reminder has been set for *' + delay + '* from now:\n\n' + text
    send_message(msg['chat']['id'], message, parse_mode=""Markdown"")

def cron():
    reminders = load_json('data/reminders.json', True)
    for id, reminder in reminders.items():
        if now() > reminder['alarm']:
            send_message(reminder['chat_id'], reminder['text'])
            del reminders[id]
            save_json('data/reminders.json', reminders)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GLce5o
code,"import configparser

CONFIG_PATH = 'accounting.conf'


class MyConfigParser():

    def __init__(self, config_path=CONFIG_PATH):
        self.config = configparser.ConfigParser(allow_no_value=True)
        self.config.read(config_path)

    def config_section_map(self, section):
        """""" returns all configuration options in 'section' in a dict with
        key: config_option and value: the read value in the file""""""
        dict1 = {}
        options = self.config.options(section)
        for option in options:
            try:
                dict1[option] = self.config.get(section, option)
                if dict1[option] == -1:
                    DebugPrint(""skip: %s"" % option)
            except:
                dict1[option] = None
        return dict1

# getint(section, option)
# getboolean(section, option)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bBKab1
code,"import os

class Config(object):
    DEBUG = False
    TESTING = False
    CSRF_ENABLED = True
    SECRET_KEY = ""super_secret_key""
    SQLALCHEMY_DATABASE_URI = os.environ['DATABASE_URL']

class ProductionConfig(Config):
    DEBUG = False
    SECRET_KEY = os.environ['SECRET_KEY']

class DevelopmentConfig(Config):
    DEVELOPMENT = True
    DEBUG = True

class TestingConfig(Config):
    TESTING = True
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ui3sua
code,"default_app_config = ""gallery.apps.GalleryConfig""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zZCRk1
code,"""""""
.. module:: mlpy.auxiliary.datastructs
   :platform: Unix, Windows
   :synopsis: Provides data structure implementations.

.. moduleauthor:: Astrid Jackson <ajackson@eecs.ucf.edu>
""""""
from __future__ import division, print_function, absolute_import

import heapq
import numpy as np

from abc import ABCMeta, abstractmethod


class Array(object):
    """"""The managed array class.

    The managed array class pre-allocates memory to the given size
    automatically resizing as needed.

    Parameters
    ----------
    size : int
        The size of the array.

    Examples
    --------
    >>> a = Array(5)
    >>> a[0] = 3
    >>> a[1] = 6

    Retrieving an elements:

    >>> a[0]
    3
    >>> a[2]
    0

    Finding the length of the array:

    >>> len(a)
    2

    """"""
    def __init__(self, size):
        self._data = np.zeros((size,))
        self._capacity = size
        self._size = 0

    def __setitem__(self, index, value):
        """"""Set the the array at the index to the given value.

        Parameters
        ----------
        index : int
            The index into the array.
        value :
            The value to set the array to.

        """"""
        if index >= self._size:
            if self._size == self._capacity:
                self._capacity *= 2
                new_data = np.zeros((self._capacity,))
                new_data[:self._size] = self._data
                self._data = new_data

            self._size += 1

        self._data[index] = value

    def __getitem__(self, index):
        """"""Get the value at the given index.

        Parameters
        ----------
        index : int
            The index into the array.

        """"""
        return self._data[index]

    def __len__(self):
        """"""The length of the array.

        Returns
        -------
        int :
            The size of the array

        """"""
        return self._size


class Point2D(object):
    """"""The 2d-point class.

    The 2d-point class is a container for positions
    in a 2d-coordinate system.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.

    """"""
    __slots__ = ['x', 'y']

    def __init__(self, x=0.0, y=0.0):
        self.x = x
        self.y = y


class Point3D(object):
    """"""
    The 3d-point class.

    The 3d-point class is a container for positions
    in a 3d-coordinate system.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.
    z : float, optional
        The z-position in a 3d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.
    z : float
        The z-position in a 3d-coordinate system.

    """"""
    __slots__ = ['x', 'y', 'z']

    def __init__(self, x=0.0, y=0.0, z=0.0):
        self.x = x
        self.y = y
        self.z = z


class Vector3D(Point3D):
    """"""The 3d-vector class.

    .. todo::
        Implement vector functionality.

    Parameters
    ----------
    x : float, optional
        The x-position in a 2d-coordinate system. Default is 0.0.
    y : float, optional
        The y-position in a 2d-coordinate system. Default is 0.0.
    z : float, optional
        The z-position in a 3d-coordinate system. Default is 0.0.

    Attributes
    ----------
    x : float
        The x-position in a 2d-coordinate system.
    y : float
        The y-position in a 2d-coordinate system.
    z : float
        The z-position in a 3d-coordinate system.

    """"""

    def __init__(self, x=0.0, y=0.0, z=0.0):
        super(Vector3D, self).__init__(x, y, z)


class Queue(object):
    """"""The abstract queue base class.

    The queue class handles core functionality common for
    any type of queue. All queues inherit from the queue
    base class.

    See Also
    --------
    :class:`FIFOQueue`, :class:`PriorityQueue`

    """"""
    __metaclass__ = ABCMeta

    def __init__(self):
        self._queue = []

    def __len__(self):
        return len(self._queue)

    def __contains__(self, item):
        try:
            self._queue.index(item)
            return True
        except Exception:
            return False

    def __iter__(self):
        return iter(self._queue)

    def __str__(self):
        return '[' + ', '.join('{}'.format(el) for el in self._queue) + ']'

    def __repr__(self):
        return ', '.join('{}'.format(el) for el in self._queue)

    @abstractmethod
    def push(self, item):
        """"""Push a new element on the queue

        Parameters
        ----------
        item :
            The element to push on the queue

        """"""
        raise NotImplementedError
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W7ImEA
code,"#
# Walldo - A wallpaper downloader
# Copyright (C) 2012  Fernando Castillo 
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

import unittest 
from walldo.parser import Parser;

class ParserTestCase(unittest.TestCase):
    lines = ['<select class=""select"" style=""margin: 0 2px 0 0; margin-top: 4px; float: left; width: 145px; max-width: 145px;"" name=""resolution"" onChange=""javascript:imgload(\'ithilien\', this,\'2949\')"">']
    expected = ['/wallpaper/7yz4ma1/2949_ithilien_1024x768.jpg']

    def setUp(self):
        self.parser = Parser()

    def testParse(self):
        current = self.parser.parse(self.lines, '1024x768')
        for i in range(len(current)):
            self.assertEquals(self.expected[i], current[i], 'Entry incorrect')
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-i1jMQ
code,"# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import os, sys
import tempfile
from winsys._compat import unittest
import uuid

import win32file

from winsys.tests.test_fs import utils
from winsys import fs

class TestFS (unittest.TestCase):

  filenames = [""%d"" % i for i in range (5)]

  def setUp (self):
    utils.mktemp ()
    for filename in self.filenames:
      with open (os.path.join (utils.TEST_ROOT, filename), ""w""):
        pass

  def tearDown (self):
    utils.rmtemp ()

  def test_glob (self):
    import glob
    pattern = os.path.join (utils.TEST_ROOT, ""*"")
    self.assertEquals (list (fs.glob (pattern)), glob.glob (pattern))

  def test_listdir (self):
    import os
    fs_version = list (fs.listdir (utils.TEST_ROOT))
    os_version = os.listdir (utils.TEST_ROOT)
    self.assertEquals (fs_version, os_version, ""%s differs from %s"" % (fs_version, os_version))

#
# All the other module-level functions are hand-offs
# to the corresponding Entry methods.
#

if __name__ == ""__main__"":
  unittest.main ()
  if sys.stdout.isatty (): raw_input (""Press enter..."")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",H_I31u
code,"#!/usr/bin/env python3
# -*- coding: utf-8 -*-
""""""
Created on Fri Aug 25 21:11:45 2017

@author: hubert
""""""

import numpy as np
import matplotlib.pyplot as plt


class LiveBarGraph(object):
    """"""
    """"""
    def __init__(self, band_names=['delta', 'theta', 'alpha', 'beta'],
                 ch_names=['TP9', 'AF7', 'AF8', 'TP10']):
        """"""
        """"""
        self.band_names = band_names
        self.ch_names = ch_names
        self.n_bars = self.band_names * self.ch_names

        self.x =

        self.fig, self.ax = plt.subplots()
        self.ax.set_ylim((0, 1))

        y = np.zeros((self.n_bars,))
        x = range(self.n_bars)

        self.rects = self.ax.bar(x, y)

    def update(self, new_y):
        [rect.set_height(y) for rect, y in zip(self.rects, new_y)]


if __name__ == '__main__':

    bar = LiveBarGraph()
    plt.show()

    while True:
        bar.update(np.random.random(10))
        plt.pause(0.1)





",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",12adrq
code,"""""""
    SALTS XBMC Addon
    Copyright (C) 2015 tknorris

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
""""""
import xbmcaddon
import xbmcplugin
import xbmcgui
import xbmc
import xbmcvfs
import urllib
import urlparse
import sys
import os
import re

addon = xbmcaddon.Addon()
get_setting = addon.getSetting
show_settings = addon.openSettings

def get_path():
    return addon.getAddonInfo('path').decode('utf-8')

def get_profile():
    return addon.getAddonInfo('profile').decode('utf-8')

def translate_path(path):
    return xbmc.translatePath(path).decode('utf-8')

def set_setting(id, value):
    if not isinstance(value, basestring): value = str(value)
    addon.setSetting(id, value)

def get_version():
    return addon.getAddonInfo('version')

def get_id():
    return addon.getAddonInfo('id')

def get_name():
    return addon.getAddonInfo('name')

def get_plugin_url(queries):
    try:
        query = urllib.urlencode(queries)
    except UnicodeEncodeError:
        for k in queries:
            if isinstance(queries[k], unicode):
                queries[k] = queries[k].encode('utf-8')
        query = urllib.urlencode(queries)

    return sys.argv[0] + '?' + query

def end_of_directory(cache_to_disc=True):
    xbmcplugin.endOfDirectory(int(sys.argv[1]), cacheToDisc=cache_to_disc)

def set_content(content):
    xbmcplugin.setContent(int(sys.argv[1]), content)
    
def create_item(queries, label, thumb='', fanart='', is_folder=None, is_playable=None, total_items=0, menu_items=None, replace_menu=False):
    list_item = xbmcgui.ListItem(label, iconImage=thumb, thumbnailImage=thumb)
    add_item(queries, list_item, fanart, is_folder, is_playable, total_items, menu_items, replace_menu)

def add_item(queries, list_item, fanart='', is_folder=None, is_playable=None, total_items=0, menu_items=None, replace_menu=False):
    if menu_items is None: menu_items = []
    if is_folder is None:
        is_folder = False if is_playable else True

    if is_playable is None:
        playable = 'false' if is_folder else 'true'
    else:
        playable = 'true' if is_playable else 'false'

    liz_url = get_plugin_url(queries)
    if fanart: list_item.setProperty('fanart_image', fanart)
    list_item.setInfo('video', {'title': list_item.getLabel()})
    list_item.setProperty('isPlayable', playable)
    list_item.addContextMenuItems(menu_items, replaceItems=replace_menu)
    xbmcplugin.addDirectoryItem(int(sys.argv[1]), liz_url, list_item, isFolder=is_folder, totalItems=total_items)

def parse_query(query):
    q = {'mode': 'main'}
    if query.startswith('?'): query = query[1:]
    queries = urlparse.parse_qs(query)
    for key in queries:
        if len(queries[key]) == 1:
            q[key] = queries[key][0]
        else:
            q[key] = queries[key]
    return q

def notify(header=None, msg='', duration=2000, sound=None):
    if header is None: header = get_name()
    if sound is None: sound = get_setting('mute_notifications') == 'false'
    icon_path = os.path.join(get_path(), 'icon.png')
    try:
        xbmcgui.Dialog().notification(header, msg, icon_path, duration, sound)
    except:
        builtin = ""XBMC.Notification(%s,%s, %s, %s)"" % (header, msg, duration, icon_path)
        xbmc.executebuiltin(builtin)
    
def get_current_view():
    skinPath = translate_path('special://skin/')
    xml = os.path.join(skinPath, 'addon.xml')
    f = xbmcvfs.File(xml)
    read = f.read()
    f.close()
    try: src = re.search('defaultresolution=""([^""]+)', read, re.DOTALL).group(1)
    except: src = re.search('<res.+?folder=""([^""]+)', read, re.DOTALL).group(1)
    src = os.path.join(skinPath, src, 'MyVideoNav.xml')
    f = xbmcvfs.File(src)
    read = f.read()
    f.close()
    match = re.search('<views>([^<]+)', read, re.DOTALL)
    if match:
        views = match.group(1)
        for view in views.split(','):
            if xbmc.getInfoLabel('Control.GetLabel(%s)' % (view)): return view
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9mWh2k
code,"# -*- coding: utf-8 -*-

from django.db import models
from Corretor.base import CorretorException
from Corretor.base import ExecutorException
from Corretor.base import CompiladorException
from Corretor.base import ComparadorException
from Corretor.base import LockException
from model_utils import Choices


class RetornoCorrecao(models.Model):
    """"""Um modelo que possui informacoes sobre o retorno da correcao de uma questao(ou questao de avaliacao).
    """"""
    TIPOS = Choices(
                       (0,'loading',u'Loading'),
                       (1,'compilacao',u'Compilação'),
                       (2,'execucao',u'Execução'),
                       (3,'comparacao',u'Comparação'),
                       (4,'lock',u'Lock'),
                       (5,'correto',u'Correto'),
                   )
    tipo =  models.SmallIntegerField(u""Tipo"",choices=TIPOS, default=TIPOS.loading)
    msg = models.TextField(u""Mensagem"",blank=True,null=True)
    task_id = models.CharField(max_length=350,blank=True,null=True)
    class Meta:
        verbose_name = u'Retorno Correção'
        app_label = 'Corretor'


    def __unicode__(self):
        return ""%s: %s"" %(self.TIPOS[self.tipo][1],self.msg)

    def altera_dados(self,sucesso=True,erroException=None):
        """"""
        Altera os dados do retorno atual para pegar os dados de erro ou para por a mensagem
        que foi com sucesso.
        """"""

        tipo = RetornoCorrecao.TIPOS.correto
        correcao_msg = ""Correto!""
        # print "">>altera_dados""
        # print "">>isinstance(erroException,CorretorException)"",isinstance(erroException,CorretorException)

        if sucesso == True:
            # print "">>retorno.successful()""
            tipo = RetornoCorrecao.TIPOS.correto
            correcao_msg = ""Correto!""
        elif isinstance(erroException,CorretorException):
            # print ""erro: %s"" % erroException.message
            if isinstance(erroException,ExecutorException):
                correcao_msg = erroException.message
                tipo = RetornoCorrecao.TIPOS.execucao
            if isinstance(erroException,CompiladorException):
                correcao_msg = erroException.message
                tipo = RetornoCorrecao.TIPOS.compilacao
            if isinstance(erroException,ComparadorException):
                correcao_msg = erroException.message
                tipo = RetornoCorrecao.TIPOS.comparacao
            if isinstance(erroException,LockException):
                correcao_msg = erroException.message
                tipo = RetornoCorrecao.TIPOS.lock

        self.tipo = tipo
        self.msg = correcao_msg
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VOeK5x
code,"#!/usr/bin/env python
from __future__ import division, print_function, absolute_import

from os.path import join


def configuration(parent_package='', top_path=None):
    import warnings
    from numpy.distutils.misc_util import Configuration
    from numpy.distutils.system_info import get_info, BlasNotFoundError
    config = Configuration('odr', parent_package, top_path)

    libodr_files = ['d_odr.f',
                    'd_mprec.f',
                    'dlunoc.f']

    blas_info = get_info('blas_opt')
    if blas_info:
        libodr_files.append('d_lpk.f')
    else:
        warnings.warn(BlasNotFoundError.__doc__)
        libodr_files.append('d_lpkbls.f')

    odrpack_src = [join('odrpack', x) for x in libodr_files]
    config.add_library('odrpack', sources=odrpack_src)

    sources = ['__odrpack.c']
    libraries = ['odrpack'] + blas_info.pop('libraries', [])
    include_dirs = ['.'] + blas_info.pop('include_dirs', [])
    config.add_extension('__odrpack',
                         sources=sources,
                         libraries=libraries,
                         include_dirs=include_dirs,
                         depends=(['odrpack.h'] + odrpack_src),
                         **blas_info
                         )

    config.add_data_dir('tests')
    return config


if __name__ == '__main__':
    from numpy.distutils.core import setup

    setup(**configuration(top_path='').todict())
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gYIbYQ
code,"# -*- encoding: utf-8 -*-

try:
    from httplib import HTTPSConnection
    from urlparse import urlparse
except ImportError:
    from http.client import HTTPSConnection
    from urllib.parse import urlparse

from json import dumps, loads
from django.conf import settings


class GCMError(Exception):
    pass


def send(user, message, **kwargs):
    """"""
    Site: https://developers.google.com
    API: https://developers.google.com/cloud-messaging/
    Desc: Android notifications
    """"""

    headers = {
        ""Content-type"": ""application/json"",
        ""Authorization"": ""key="" + kwargs.pop(""gcm_key"", settings.GCM_KEY)
    }

    hook_url = 'https://android.googleapis.com/gcm/send'

    data = {
        ""registration_ids"": [user],
        ""data"": {
            ""title"": kwargs.pop(""event""),
            'message': message,
        }
    }
    data['data'].update(kwargs)

    up = urlparse(hook_url)
    http = HTTPSConnection(up.netloc)
    http.request(
        ""POST"", up.path,
        headers=headers,
        body=dumps(data))
    response = http.getresponse()

    if response.status != 200:
        raise GCMError(response.reason)

    body = response.read()
    if loads(body).get(""failure"") > 0:
        raise GCMError(repr(body))
    return True
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KpLAZo
code,"# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .sub_resource import SubResource


class ApplicationGatewaySslPredefinedPolicy(SubResource):
    """"""An Ssl predefined policy.

    :param id: Resource ID.
    :type id: str
    :param name: Name of Ssl predefined policy.
    :type name: str
    :param cipher_suites: Ssl cipher suites to be enabled in the specified
     order for application gateway.
    :type cipher_suites: list[str or
     ~azure.mgmt.network.v2017_10_01.models.ApplicationGatewaySslCipherSuite]
    :param min_protocol_version: Minimum version of Ssl protocol to be
     supported on application gateway. Possible values include: 'TLSv1_0',
     'TLSv1_1', 'TLSv1_2'
    :type min_protocol_version: str or
     ~azure.mgmt.network.v2017_10_01.models.ApplicationGatewaySslProtocol
    """"""

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'cipher_suites': {'key': 'properties.cipherSuites', 'type': '[str]'},
        'min_protocol_version': {'key': 'properties.minProtocolVersion', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(ApplicationGatewaySslPredefinedPolicy, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.cipher_suites = kwargs.get('cipher_suites', None)
        self.min_protocol_version = kwargs.get('min_protocol_version', None)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dTdfBU
code,"module CardHelper

  def card_element_properties(node, options = {})
    { class: dom_class(node, :card),
      itemscope:  '',
      itemtype:   'http://schema.org/Thing',
      itemid:     node.uuid,
      itemtype:   node.class.schema_path }.merge(options)
  end

  def cardtec_header(node)
    content_tag(:span, node.uuid,       itemprop: :uuid)        <<
    content_tag(:span, node.ident,      itemprop: :ident)       <<
    content_tag(:span, node.class.name, itemprop: :class_name)  <<
    content_tag(:span, node.path,       itemprop: :path)        <<
    content_tag(:span, node.created_at, itemprop: :created_at)  <<
    content_tag(:span, node.updated_at, itemprop: :updated_at)
  end

end


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zRvpUc
code,"ENV['RAILS_ENV'] ||= 'test'
require File.expand_path('../../config/environment', __FILE__)
require 'rails/test_help'
require 'minitest/reporters'
Minitest::Reporters.use!

class ActiveSupport::TestCase

  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
  fixtures :all
  include ApplicationHelper
  # Add more helper methods to be used by all tests here...

  # Returns true, if user is logged in.
  def is_logged_in?
    !session[:user_id].nil?
  end

  # Logs in test user.
  def log_in_as(user, options={})
    password = options[:password] || 'password'
    remember_me = options[:remember_me] || '1'

    if integration_test?
      post login_path, session: { email: user.email, password: password, remember_me: remember_me }
    else
      session[:user_id] = user.id
    end
  end

  # Returns true, if integration test is used.
  def integration_test?
    # post_via_redirect is accessible only in integration test.
    defined?(post_via_redirect)
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8CTIv9
code,"require ""fog""

module RedmineObjectStorage
  module AttachmentPatch
    
    def self.included(base) # :nodoc:
      base.extend(ClassMethods)
      base.send(:include, InstanceMethods)

      base.class_eval do
        unloadable
        
        cattr_accessor :context_obj, :objectstorage_bucket_instance, :__objectstorage_config

        after_validation :save_to_objectstorage
        before_destroy   :delete_from_objectstorage

        def readable?
          !!Attachment.objectstorage_bucket.get(self.objectstorage_path) rescue false
        end
      end
    end

    module ClassMethods
      def set_context(context)
        @@context_obj = context
      end
      
      def get_context
        @@context_obj
      end

      def objectstorage_config
        unless Attachment.__objectstorage_config
          yaml = ERB.new(File.read(Rails.root.join(""config"", ""objectstorage.yml""))).result
          @@__objectstorage_config = YAML.load(yaml).fetch(Rails.env)
        end
        return @@__objectstorage_config
      end

      def objectstorage_bucket
        unless Attachment.objectstorage_bucket_instance
          config = Attachment.objectstorage_config
          @@objectstorage_bucket_instance = Fog::Storage.new(
            provider: :aws,
            aws_access_key_id: config[""access_key_id""],
            aws_secret_access_key: config[""secret_access_key""],
            host: config[""endpoint""],
            aws_signature_version: config[""signature_version""]
          ).directories.get(config[""bucket""])
        end
        @@objectstorage_bucket_instance
      end
      
      def objectstorage_absolute_path(filename, project_id)
        ts = DateTime.now.strftime(""%y%m%d%H%M%S"")
        [project_id, ts, filename].compact.join(""/"")
      end
    end

    module InstanceMethods
      def objectstorage_filename
        if self.new_record?
          timestamp = DateTime.now.strftime(""%y%m%d%H%M%S"")
          self.disk_filename = [timestamp, filename].join(""/"")
        end

        self.disk_filename.blank? ? filename : self.disk_filename
      end

      # path on objectstorage to the file, defaulting the instance's disk_filename
      def objectstorage_path(fn = objectstorage_filename)#, ctx = nil, pid = nil)
        context = self.container || self.class.get_context
        project = context.is_a?(Hash) ? Project.find(context[:project]) : context.project
        ctx = context.is_a?(Hash) ? context[:class] : context.class.name
        # XXX s/WikiPage/Wiki
        ctx = ""Wiki"" if ctx == ""WikiPage""
        pid = project.identifier
        
        [pid, fn].compact.join(""/"")
      end

      def save_to_objectstorage
        if @temp_file && !@temp_file.empty?
          logger.debug ""[redmine_objectstorage_attachments] Uploading #{objectstorage_filename}""

          file = Attachment.objectstorage_bucket.files.create(
            key: objectstorage_path, 
            body: @temp_file.is_a?(String) ? @temp_file : @temp_file.read
          )
          
          self.digest = file.etag
        end

        # set the temp file to nil so the model's original after_save block 
        # skips writing to the filesystem
        @temp_file = nil
      end

      def delete_from_objectstorage
        logger.debug ""[redmine_objectstorage_attachments] Deleting #{objectstorage_filename}""
        Attachment.objectstorage_bucket.files.get(objectstorage_path(objectstorage_filename)).destroy
      end
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",PcNPek
code,"class Users::SessionsController < Devise::SessionsController
  layout :layout

  def presign

  end

  def layout
    if params[:no_layout].present?
      return false
    else
      return 'user'
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HbK_PP
code,"# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::Network::Mgmt::V2019_08_01
  module Models
    #
    # Response for ListBastionHosts API service call.
    #
    class BastionHostListResult

      include MsRestAzure

      include MsRest::JSONable
      # @return [Array<BastionHost>] List of Bastion Hosts in a resource group.
      attr_accessor :value

      # @return [String] URL to get the next set of results.
      attr_accessor :next_link

      # return [Proc] with next page method call.
      attr_accessor :next_method

      #
      # Gets the rest of the items for the request, enabling auto-pagination.
      #
      # @return [Array<BastionHost>] operation results.
      #
      def get_all_items
        items = @value
        page = self
        while page.next_link != nil && !page.next_link.strip.empty? do
          page = page.get_next_page
          items.concat(page.value)
        end
        items
      end

      #
      # Gets the next page of results.
      #
      # @return [BastionHostListResult] with next page content.
      #
      def get_next_page
        response = @next_method.call(@next_link).value! unless @next_method.nil?
        unless response.nil?
          @next_link = response.body.next_link
          @value = response.body.value
          self
        end
      end

      #
      # Mapper for BastionHostListResult class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'BastionHostListResult',
          type: {
            name: 'Composite',
            class_name: 'BastionHostListResult',
            model_properties: {
              value: {
                client_side_validation: true,
                required: false,
                serialized_name: 'value',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'BastionHostElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'BastionHost'
                      }
                  }
                }
              },
              next_link: {
                client_side_validation: true,
                required: false,
                serialized_name: 'nextLink',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ALn5b-
code,"module Test 
  PI = 3.14 
  class Test2 
    def what_is_pi 
      puts PI 
    end 
  end 
end 
Test::Test2.new.what_is_pi # => 3.14 

module MyModule 
  MyConstant = 'Outer Constant' 
  class MyClass 
    puts MyConstant # => Outer Constant 
    MyConstant = 'Inner Constant' 
    puts MyConstant # => Inner Constant 
  end
  puts MyConstant # => Outer Constant 
end


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ahIUyK
code,"class CreateTips < ActiveRecord::Migration[5.0]
  def change
    create_table :tips do |t|
      t.text :body

      t.timestamps
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FetA07
code,"require File.expand_path('../boot', __FILE__)

require 'rails/all'

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

module FlashFinalProject
  class Application < Rails::Application
    # Settings in config/environments/* take precedence over those specified here.
    # Application configuration should go into files in config/initializers
    # -- all .rb files in that directory are automatically loaded.

    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.
    # Run ""rake -D time"" for a list of tasks for finding time zone names. Default is UTC.
    # config.time_zone = 'Central Time (US & Canada)'

    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.
    # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]
    # config.i18n.default_locale = :de

    # Do not swallow errors in after_commit/after_rollback callbacks.
    config.active_record.raise_in_transactional_callbacks = true
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F4D1H6
code,"require 'spec_helper'

describe Blogitr::Document do
  def parse text, filter=:html
    @doc = Blogitr::Document.new :text => text, :filter => filter
  end

  def should_parse_as headers, body, extended=nil
    @doc.headers.should == headers
    @doc.body.should == body
    @doc.extended.should == extended
  end

  it ""should raise an error if an unknown fitler is specified"" do
    lambda do
      parse ""foo *bar* \""baz\"""", :unknown
    end.should raise_error(Blogitr::UnknownFilterError)
  end

  it ""should parse documents with a YAML header"" do
    parse <<EOD
title: My Doc
subtitle: An Essay

foo

bar
EOD
    should_parse_as({ 'title' => ""My Doc"", 'subtitle' => 'An Essay' },
                    ""foo\n\nbar\n"")
  end

  it ""should parse documents without a YAML header"" do
    parse ""foo\nbar\nbaz""
    should_parse_as({}, ""foo\nbar\nbaz"")
  end

  it ""should parse documents with a YAML header but no body"" do
    parse ""title: My Doc""
    should_parse_as({ 'title' => ""My Doc"" }, '')
  end

  it ""should separate extended content from the main body"" do
    parse <<EOD
foo
<!--more--> 
bar
EOD
    should_parse_as({}, ""foo"", ""bar\n"")
  end

  it ""should expand macros"" do
    input = ""title: Foo\n\n<macro:example foo=\""bar\"">baz</macro:example>""
    parse input
    should_parse_as({'title' => ""Foo""},
                    ""Options: {\""foo\""=>\""bar\""}\nBody: baz"")
  end

  it ""should provide access to raw body and extended content"" do
    parse ""*foo*\n<!--more-->\n_bar_"", :textile
    @doc.raw_body.should == ""*foo*""
    @doc.raw_extended.should == ""_bar_""
  end

  describe ""with a :textile filter"" do
    it ""should filter content"" do
      parse ""foo *bar*\n<!--more-->\n\""baz\"""", :textile
      should_parse_as({}, ""<p>foo <strong>bar</strong></p>"",
                      ""<p>&#8220;baz&#8221;</p>"")
    end

    it ""should protect expanded macros from filtering"" do
      text = ""\n<macro:example>*foo*</macro:example>""
      parse text, :textile
      should_parse_as({},  ""Options: {}\nBody: *foo*"")
    end
  end

  describe ""with a :markdown filter"" do
    it ""should filter content"" do
      parse ""foo *bar* \""baz\"""", :markdown
      should_parse_as({}, ""<p>foo <em>bar</em> &ldquo;baz&rdquo;</p>\n"")
    end

    it ""should protect expanded macros from filtering"" do
      text = ""\n<macro:example>*foo*</macro:example>""
      parse text, :markdown
      should_parse_as({},
                      ""<div class=\""raw\"">Options: {}\nBody: *foo*</div>\n\n"")
    end
  end

  describe ""#to_s"" do
    def should_serialize_as headers, body, extended, serialized
      opts = { :headers => headers, :raw_body => body,
               :raw_extended => extended, :filter => :html }
      Blogitr::Document.new(opts).to_s.should == serialized
    end

    it ""should serialize documents with headers"" do
      should_serialize_as({'title' => 'Foo'}, ""_Bar_."", nil,
                          ""title: Foo\n\n_Bar_."")
    end

    it ""should serialize documents without headers"" do
      should_serialize_as({}, ""_Bar_."", nil, ""\n_Bar_."")      
    end

    it ""should serialize extended content using \\<!--more-->"" do
      should_serialize_as({}, ""Bar."", ""_Baz_."", ""\nBar.\n<!--more-->\n_Baz_."")
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ob57a8
code,"# Namespace for library
module P3
  module TV
    # Settings for P3 TV
    class Settings
      attr_accessor :path 
      DEFAULT_PATH = File::expand_path( ""~/.p3tv/p3tv"" )
      EPISODES_JSON = 'episodes.json'
      DEFAULTS = {
        :library_path => '~/Movies/P3TV',
        :download_path => '~/Downloads',
        :delete_duplicate_downloads => false,
        :overwrite_duplicates => false,
        :allowed_types => ['.avi', '.mkv', '.mp4'],
        :language => 'en',
        :subtitles => ['.srt'],
        :high_def => true,
        :verbose => false,
        :dry_run => false,
        :series => []
      }

      def self.exists?( path = DEFAULT_PATH )
        File::exist?( path )
      end

      def self.create_default!( path = DEFAULT_PATH )
        raise ""a settings file already exists. please delete #{path} first"" if exists?( path )

        FileUtils::mkdir_p( File::dirname( path ) )
        settings = Settings.new( path )
        DEFAULTS.each do | key, value |
            settings[ key ] = value
        end
        settings.save!
      end

      def self.set!( key, value, path = DEFAULT_PATH )
        settings = Settings.new( path )
        settings[ key ] = value
        settings.save!
      end

      def initialize( path = DEFAULT_PATH )
        @path = path
        @values = {}
        @episodes = {}
        return unless File::exists?( @path )

        FileUtils::mkdir_p( File::dirname( @path ) )

        f = File::open( @path, 'r' )
        @values = JSON.parse(f.read, symbolize_names: true)
        
        f.close

        self[:library_path] = File::expand_path( self[:library_path ] )
        FileUtils::mkdir_p( self[:library_path] )

        self[:download_path] = File::expand_path( self[:download_path ] )
        self[:series].uniq!

        if( self[:overwrite_duplicates] and self[:delete_duplicate_downloads] )
            raise ""you cannot have 'overwrite_duplicates' and 'delete_duplicate_downloads' both set to true""
        end
      end

      def to_h
        @values
      end

      def []( key )
        @values[ key.to_sym ]
      end

      def []=( key, value )
        @values[ key.to_sym ] = value
        self.save!
      end

      def supported_paths_in_dir(dir = self[:download_path])
        glob = File.join(dir, '**/*')
        all_file_paths = Dir.glob(glob)
        all_file_paths.select do |file_path|
          supported_file_extension?(file_path)
        end
      end

      def supported_file_extension?(path)
        return ( self[:allowed_types].include?( File::extname( path ) ) or self[:allowed_types].include?( File::extname( path ) ) )
      end

      def get_series( seriesid )
        return self[:series].detect{|s| s[:id] == seriesid }
      end

      def download_url!( url, path )
        # http://stackoverflow.com/questions/2515931/how-can-i-download-a-file-from-a-url-and-save-it-in-rails
        return path if File::exists?( path )
        begin
            download = open( url )
            IO.copy_stream( download, path )
        rescue => e
            return """"
        end
        return path
      end

      def download_banners!( banners, path )
        FileUtils::mkdir_p( File::dirname( path ) )
        return if banners.empty?
        banner = banners.detect{|b| b.url.length }
        return """" unless banner

        return download_url!( banner.url, path )
      end

      def episodes( seriesid )
        unless @episodes.has_key?( seriesid )
            episode_file = File::join( series_dir( seriesid ), EPISODES_JSON )
            if( File::exists?( episode_file ) )
                f = File::open( episode_file )
                @episodes[ seriesid ] = JSON::parse( f.read, :symbolize_names => true )
            end
        end
        return @episodes[ seriesid ]
      end

      def each_series_episode_file_status( seriesid, search, downloads, library )
        today = Date::today.to_s

        series_hash = self[:series].detect{|s| s[:id] == seriesid}
        return unless series_hash

        episodes( seriesid ).each do | episode_hash |
            next if episode_hash[:season_number] == 0
            ep_file = P3::TV::EpisodeFile.new
            ep_file.series_id = episode_hash[:id]
            ep_file.series = series_hash[:name]
            ep_file.season = episode_hash[:season_number]
            ep_file.episode = episode_hash[:number]
            ep_file.title = episode_hash[:name]
            ep_file.air_date = episode_hash[:air_date]
            ep_file.thumbnail = episode_hash[:thumb_path]

            if( ( ep_file.air_date == nil ) or ( ep_file.air_date > today ) )
                ep_file.percent_done = 0
                ep_file.status = :upcoming
                ep_file.path = ''
            elsif( library.exists?( ep_file ) )
                ep_file.percent_done = 1
                ep_file.status = :cataloged
                ep_file.path = library.episode_path( ep_file )
            elsif( download_path = downloads.get_path_if_exists( ep_file ) )
                ep_file.percent_done = 1
                ep_file.status = :downloaded
               ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EMuvdW
code,"# Uncomment this if you reference any of your controllers in activate
# require_dependency 'application'

class ReservationExtension < Radiant::Extension
  version ""0.1""
  description ""Small Reservation System""
  url ""http://github.com/simerom/radiant-reservation-extension""
  
  define_routes do |map|
    map.namespace :admin, :member => { :remove => :get } do |admin|
      admin.resources :reservations, :reservation_items, :reservation_subscribers
    end
  end
  
  def activate
    admin.tabs.add ""Reservations"", ""/admin/reservations"", :after => ""Layouts"", :visibility => [:all]
  end
  
  def deactivate
    admin.tabs.remove ""Reservations""
  end
  
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KcwzUu
code,"Radiant.config do |config|
  config.define 'admin.title', :default => ""Radiant CMS""
  config.define 'dev.host'
  config.define 'local.timezone', :allow_change => true, :select_from => lambda { ActiveSupport::TimeZone::MAPPING.keys.sort }
  config.define 'defaults.locale', :select_from => lambda { Radiant::AvailableLocales.locales }, :allow_blank => true
  config.define 'defaults.page.parts', :default => ""Body,Extended""
  config.define 'defaults.page.status', :select_from => lambda { Status.selectable_values }, :allow_blank => true, :default => ""Draft""
  config.define 'defaults.page.filter', :select_from => lambda { TextFilter.descendants.map { |s| s.filter_name }.sort }, :allow_blank => true
  config.define 'defaults.page.fields'
  config.define 'defaults.snippet.filter', :select_from => lambda { TextFilter.descendants.map { |s| s.filter_name }.sort }, :allow_blank => true
  config.define 'pagination.param_name', :default => 'page'
  config.define 'pagination.per_page_param_name', :default => 'per_page'
  config.define 'admin.pagination.per_page', :type => :integer, :default => 50
  config.define 'site.title', :default => ""Your site title"", :allow_blank => false
  config.define 'site.host', :default => ""www.example.com"", :allow_blank => false
  config.define 'user.allow_password_reset?', :default => true
end 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",v5av_U
code,"require 'filefm'

def test_config
  File.join(File.dirname(__FILE__), 'config.yml')
end

def swift_server
  ENV[""SWIFT_SERVER""]
end

def swift_username
  u = ENV[""SWIFT_USERNAME""]
  u
end

def swift_password
  ENV[""SWIFT_PASSWORD""]
end

def swift_test_container
  ENV[""SWIFT_TEST_CONTAINER""] || ""filefm-test""
end

def swift_keystone_url
  ENV[""SWIFT_KEYSTONE_URL""] 
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m7vdX8
code,"Vswiki::Application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.cache_classes = true

  # Eager load code on boot. This eager loads most of Rails and
  # your application in memory, allowing both thread web servers
  # and those relying on copy on write to perform better.
  # Rake tasks automatically ignore this option for performance.
  config.eager_load = true

  # Full error reports are disabled and caching is turned on.
  config.consider_all_requests_local       = false
  config.action_controller.perform_caching = true

  # Enable Rack::Cache to put a simple HTTP cache in front of your application
  # Add `rack-cache` to your Gemfile before enabling this.
  # For large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.
  # config.action_dispatch.rack_cache = true

  # Disable serving static files from the `/public` folder by default since
   # Apache or NGINX already handles this.
   config.public_file_server.enabled = ENV['RAILS_SERVE_STATIC_FILES'].present?

  # Compress JavaScripts and CSS.
  config.assets.js_compressor = :uglifier
  # config.assets.css_compressor = :sass

  # Do not fallback to assets pipeline if a precompiled asset is missed.
  config.assets.compile = false

  # Generate digests for assets URLs.
  config.assets.digest = true

  # Version of your assets, change this if you want to expire all your assets.
  config.assets.version = '1.0'

  # Specifies the header that your server uses for sending files.
  # config.action_dispatch.x_sendfile_header = ""X-Sendfile"" # for apache
  # config.action_dispatch.x_sendfile_header = 'X-Accel-Redirect' # for nginx

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  # config.force_ssl = true

  # Set to :debug to see everything in the log.
  config.log_level = :info

  # Prepend all log lines with the following tags.
  # config.log_tags = [ :subdomain, :uuid ]

  # Use a different logger for distributed setups.
  # config.logger = ActiveSupport::TaggedLogging.new(SyslogLogger.new)

  # Use a different cache store in production.
  # config.cache_store = :mem_cache_store

  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
  # config.action_controller.asset_host = ""http://assets.example.com""

  # Precompile additional assets.
  # application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
  # config.assets.precompile += %w( search.js )

  # Ignore bad email addresses and do not raise email delivery errors.
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
  # config.action_mailer.raise_delivery_errors = false

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation can not be found).
  config.i18n.fallbacks = true

  # Send deprecation notices to registered listeners.
  config.active_support.deprecation = :notify

  # Disable automatic flushing of the log to improve performance.
  # config.autoflush_log = false

  # Use default logging formatter so that PID and timestamp are not suppressed.
  config.log_formatter = ::Logger::Formatter.new
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XgAJ5X
code,"# frozen_string_literal: true

RSpec.describe Faraday::Response::RaiseError do
  let(:conn) do
    Faraday.new do |b|
      b.response :raise_error
      b.adapter :test do |stub|
        stub.get('ok') { [200, { 'Content-Type' => 'text/html' }, '<body></body>'] }
        stub.get('bad-request') { [400, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('unauthorized') { [401, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('forbidden') { [403, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('not-found') { [404, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('proxy-error') { [407, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('conflict') { [409, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('unprocessable-entity') { [422, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('4xx') { [499, { 'X-Reason' => 'because' }, 'keep looking'] }
        stub.get('nil-status') { [nil, { 'X-Reason' => 'nil' }, 'fail'] }
        stub.get('server-error') { [500, { 'X-Error' => 'bailout' }, 'fail'] }
      end
    end
  end

  it 'raises no exception for 200 responses' do
    expect { conn.get('ok') }.not_to raise_error
  end

  it 'raises Faraday::BadRequestError for 400 responses' do
    expect { conn.get('bad-request') }.to raise_error(Faraday::BadRequestError) do |ex|
      expect(ex.message).to eq('the server responded with status 400')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(400)
      expect(ex.response_status).to eq(400)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::UnauthorizedError for 401 responses' do
    expect { conn.get('unauthorized') }.to raise_error(Faraday::UnauthorizedError) do |ex|
      expect(ex.message).to eq('the server responded with status 401')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(401)
      expect(ex.response_status).to eq(401)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ForbiddenError for 403 responses' do
    expect { conn.get('forbidden') }.to raise_error(Faraday::ForbiddenError) do |ex|
      expect(ex.message).to eq('the server responded with status 403')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(403)
      expect(ex.response_status).to eq(403)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ResourceNotFound for 404 responses' do
    expect { conn.get('not-found') }.to raise_error(Faraday::ResourceNotFound) do |ex|
      expect(ex.message).to eq('the server responded with status 404')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(404)
      expect(ex.response_status).to eq(404)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ProxyAuthError for 407 responses' do
    expect { conn.get('proxy-error') }.to raise_error(Faraday::ProxyAuthError) do |ex|
      expect(ex.message).to eq('407 ""Proxy Authentication Required""')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(407)
      expect(ex.response_status).to eq(407)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::ConflictError for 409 responses' do
    expect { conn.get('conflict') }.to raise_error(Faraday::ConflictError) do |ex|
      expect(ex.message).to eq('the server responded with status 409')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(409)
      expect(ex.response_status).to eq(409)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::UnprocessableEntityError for 422 responses' do
    expect { conn.get('unprocessable-entity') }.to raise_error(Faraday::UnprocessableEntityError) do |ex|
      expect(ex.message).to eq('the server responded with status 422')
      expect(ex.response[:headers]['X-Reason']).to eq('because')
      expect(ex.response[:status]).to eq(422)
      expect(ex.response_status).to eq(422)
      expect(ex.response_body).to eq('keep looking')
      expect(ex.response_headers['X-Reason']).to eq('because')
    end
  end

  it 'raises Faraday::NilStatusError for nil status in response' do
    expect { conn.get('nil-status') }.to raise_error(Faraday::NilStatusError) do |ex|
      expect(ex.message).to eq('http status could not be derived from the server response')
      expect(ex.response[:headers]['X-Reason']).to eq('nil')
      expect(ex.respon",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EqqgpN
code,"require 'spec_helper'

describe SK::GameObjectManager do

	it ""can create a game_object with a name"" do
		expect(SK::GameObjectManager.new).to respond_to(:create).with(1).argument
	end

	it ""can not create a game_object without a name"" do
		expect(SK::GameObjectManager.new).to_not respond_to(:create).with(0).arguments
	end

	it ""creates a new game_object when calling name"" do
		expect(SK::GameObjectManager.new.create(""my_obj"").name).to eq(""my_obj"")
	end

	it ""can remove a game_object"" do
		manager = SK::GameObjectManager.new
		game_object = manager.create(""obj"")
		manager.remove(game_object)
		expect(manager.instance_variable_get(:@game_objects).size).to be(0)
	end

	it ""starts a gameobject when created if manager alread has started"" do
		manager = SK::GameObjectManager.new
		manager.start
		expect_any_instance_of(SK::GameObject).to receive(:start)
		obj = manager.create ""obj""
	end

	it ""generates a unique id for all new game_objects created"" do
		manager = SK::GameObjectManager.new
		expect(manager.create(""obj_1"").id).to eq(1)
		expect(manager.create(""obj_2"").id).to eq(2)
		expect(manager.create(""obj_3"").id).to eq(3)
		expect(manager.create(""obj_4"").id).to eq(4)
	end

	it ""contains the game_object after calling create"" do
		manager = SK::GameObjectManager.new
		manager.create(""my_obj"")
		expect(manager.instance_variable_get(:@game_objects).size).to eq(1)
	end

	it ""can be updated"" do
		expect(SK::GameObjectManager.new).to respond_to(:update).with(1).argument
	end

	it ""can be drawn with a context"" do
		expect(SK::GameObjectManager.new).to respond_to(:draw).with(1).argument
	end

	it ""starts all gameobjects when calling start"" do
		manager = SK::GameObjectManager.new
		obj = manager.create(""my_obj"")
		expect(obj).to receive(:start)
		manager.start
	end

	it ""updates all gameobjects when calling update"" do
		manager = SK::GameObjectManager.new
		obj = manager.create(""my_obj"")
		expect(obj).to receive(:update).with(16.0)
		manager.update 16.0
	end

	it ""draws all gameobjects in order of sorting layer"" do
		manager = SK::GameObjectManager.new
		
		foreground_object =  manager.create(""fg"")
		fg_component = SK::Component.new()
		fg_component.layer = 1
		foreground_object.add_component fg_component

		background_object =  manager.create(""bg"")
		bg_component = SK::Component.new()
		bg_component.layer = 0
		background_object.add_component bg_component

		context = ""context""

		expect(bg_component).to receive(:draw).ordered
		expect(fg_component).to receive(:draw).ordered

		manager.draw context
	end

	it ""draws all gameobjects in order of sorting layer and order in layer"" do
		manager = SK::GameObjectManager.new
		
		foreground_object =  manager.create(""fg"")
		fg_component = SK::Component.new()
		fg_component.layer = 1
		foreground_object.add_component fg_component

		background_object =  manager.create(""bg"")
		bg_component = SK::Component.new()
		bg_component.layer = 0
		bg_component.order_in_layer = 2
		bg_component2 = SK::Component.new()
		bg_component2.layer = 0
		bg_component2.order_in_layer = 3
		background_object.add_component bg_component
		background_object.add_component bg_component2

		context = ""context""

		expect(bg_component).to receive(:draw).ordered
		expect(bg_component2).to receive(:draw).ordered

		manager.draw context
	end
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QHfaXe
code,"module Cranium::ImportStrategy

  autoload :Base, 'cranium/import_strategy/base'
  autoload :DeleteInsert, 'cranium/import_strategy/delete_insert'
  autoload :Delete, 'cranium/import_strategy/delete'
  autoload :TruncateInsert, 'cranium/import_strategy/truncate_insert'
  autoload :Delta, 'cranium/import_strategy/delta'
  autoload :Merge, 'cranium/import_strategy/merge'

end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QACAZw
code,"# frozen_string_literal: true

module Eve
  class AllRegionsContractsImporter
    def import
      region_ids.each do |region_id|
        Eve::RegionContractsJob.perform_later(region_id)
      end
    end

    private

    def region_ids
      @region_ids ||= Eve::Region.pluck(:region_id).sort.uniq
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Pu-hfU
code,"# == Schema Information
#
# Table name: templates
#
#  id          :integer          not null, primary key
#  name        :string
#  image       :string
#  description :text
#  created_at  :datetime         not null
#  updated_at  :datetime         not null
#

require 'rails_helper'

RSpec.describe Template, type: :model do
  describe ""relationships"" do
    it { should have_many(:cards).dependent(:restrict_with_error) }
  end

  describe ""validators"" do
    it { should validate_presence_of(:name) }
    it { should validate_presence_of(:image) }
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KLsSbj
code,"require './lib/graph'
require './lib/path_measurer'
require './lib/path_searcher'
require './lib/path_explorer'
require './lib/exact_path_length_checker'
require './lib/max_path_distance_checker'
require './lib/max_path_length_checker'

edges = []

$stdin.each_line do | line |
	line.strip!
	edges.concat line.split(/\s|,\s|,/)
end


graph = Graph.new

path_measurer = PathMeasurer.new(graph)

path_searcher = PathSearcher.new(graph)

exact_path_length_checker = ExactPathLengthChecker.new(graph, 4)
max_path_length_checker = MaxPathLengthChecker.new(graph, 3)
max_path_distance_checker = MaxPathDistanceChecker.new(graph, 30)

exact_path_length_path_explorer = PathExplorer.new(graph, exact_path_length_checker)
max_path_length_path_explorer = PathExplorer.new(graph, max_path_length_checker)
max_path_distance_path_explorer = PathExplorer.new(graph, max_path_distance_checker)

edges.each do | edge |
	graph.add_edge(edge[0], edge[1], edge[2..-1].to_i)
end


# 1. The distance of the route A-B-C.
puts 'Output #1: ' + path_measurer.distance(['A', 'B', 'C']).to_s

# 2. The distance of the route A-D.
puts 'Output #2: ' + path_measurer.distance(['A', 'D']).to_s

# 3. The distance of the route A-D-C.
puts 'Output #3: ' + path_measurer.distance(['A', 'D', 'C']).to_s

# 4. The distance of the route A-E-B-C-D.
puts 'Output #4: ' + path_measurer.distance(['A', 'E', 'B', 'C', 'D']).to_s

# 5. The distance of the route A-E-D.
puts 'Output #5: ' + path_measurer.distance(['A', 'E', 'D']).to_s
#
# 6. The number of trips starting at C and ending at
# C with a maximum of 3 stops.
puts 'Output #6: ' + max_path_length_path_explorer.explore('C', 'C').count.to_s

# 7. The number of trips starting at A and ending at
# C with exactly 4 stops.
puts 'Output #7: ' + exact_path_length_path_explorer.explore('A', 'C').count.to_s

# 8. The length of the shortest route (in terms of
# distance to travel) from A to C.
puts 'Output #8: ' + path_searcher.shortest_path('A', 'C').to_s

# 9. The length of the shortest route (in terms of
# distance to travel) from B to B.
puts 'Output #9: ' + path_searcher.shortest_path('B', 'B').to_s

# 10. The number of different routes from C to C with
# a distance of less than 30.
puts 'Output #10: ' + max_path_distance_path_explorer.explore('C', 'C').count.to_s
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UAiLS-
code,"require 'multi_xml'
require 'ostruct'
require 'roxml'

module WxHelper
  module XmlHelper

    class Message
      def initialize(xml)
        hash = parse_xml xml
        @source = OpenStruct.new(hash['xml']) 
      end

      def method_missing(method, *args, &block)
        @source.send(method.to_s.classify, *args, &block)
      end

      def parse_xml xml
        MultiXml.parse(xml)
      end
    end

    # <xml>
    # <AppId><![CDATA[wwwwb4f85f3a797777]]></AppId>
    # <Package><![CDATA[a=1&url=http%3A%2F%2Fwww.qq.com]]></Package>
    # <TimeStamp> 1369745073</TimeStamp>
    # <NonceStr><![CDATA[iuytxA0cH6PyTAVISB28]]></NonceStr>
    # <RetCode>0</RetCode>
    # <RetErrMsg><![CDATA[ok]]></ RetErrMsg>
    # <AppSignature><![CDATA[53cca9d47b883bd4a5c85a9300df3da0cb48565c]]>
    # </AppSignature>
    # <SignMethod><![CDATA[sha1]]></ SignMethod >
    # </xml>    
    PackageMessage = Class.new(Message)
    
    # <xml>
    # <OpenId><![CDATA[111222]]></OpenId>
    # <AppId><![CDATA[wwwwb4f85f3a797777]]></AppId>
    # <IsSubscribe>1</IsSubscribe>
    # <TimeStamp> 1369743511</TimeStamp>
    # <NonceStr><![CDATA[jALldRTHAFd5Tgs5]]></NonceStr>
    # <AppSignature><![CDATA[bafe07f060f22dcda0bfdb4b5ff756f973aecffa]]>
    # </AppSignature>
    # <SignMethod><![CDATA[sha1]]></ SignMethod >
    # </xml>
    NotifyMessage = Class.new(Message)

    # <xml>
    # <OpenId><![CDATA[111222]]></OpenId>
    # <AppId><![CDATA[wwwwb4f85f3a797777]]></AppId>
    # <TimeStamp> 1369743511</TimeStamp>
    # <MsgType><![CDATA[request]]></MsgType>
    # <FeedBackId><![CDATA[5883726847655944563]]></FeedBackId>
    # <TransId><![CDATA[10123312412321435345]]></TransId>
    # <Reason><![CDATA[商品质量有问题]]></Reason>
    # <Solution><![CDATA[补发货给我]]></Solution>
    # <ExtInfo><![CDATA[明天六点前联系我 18610847266]]></ExtInfo>
    # <AppSignature><![CDATA[bafe07f060f22dcda0bfdb4b5ff756f973aecffa]]>
    # </AppSignature>
    # <SignMethod><![CDATA[sha1]]></ SignMethod >
    # </xml> 
    # <xml>
    # <OpenId><![CDATA[111222]]></OpenId>
    # <AppId><![CDATA[wwwwb4f85f3a797777]]></AppId>
    # <TimeStamp> 1369743511</TimeStamp>
    # <MsgType><![CDATA[confirm/reject]]></MsgType>
    # <FeedBackId><![CDATA[5883726847655944563]]></FeedBackId>
    # <Reason><![CDATA[商品质量有问题]]></Reason>
    # <AppSignature><![CDATA[bafe07f060f22dcda0bfdb4b5ff756f973aecffa]]>
    # </AppSignature>
    # <SignMethod><![CDATA[sha1]]></ SignMethod >
    # </xml>
    PayFeedbackMessage = Class.new(Message)

    # <xml>
    # <AppId><![CDATA[wxf8b4f85f3a794e77]]></AppId>
    # <ErrorType>1001</ErrorType>
    # <Description><![CDATA[错识描述]]></Description>
    # <AlarmContent><![CDATA[错误详情]]></AlarmContent>
    # <TimeStamp>1393860740</TimeStamp>
    # <AppSignature><![CDATA[f8164781a303f4d5a944a2dfc68411a8c7e4fbea]]></AppSignature>
    # <SignMethod><![CDATA[sha1]]></SignMethod>
    # </xml>
    WarningMessage = Class.new(Message)

    class ResponseMessage
        include ROXML
        xml_name :xml
        xml_convention :camelcase

        xml_accessor :app_id, :cdata => true
        xml_accessor :package, :cdata => true
        xml_accessor :nonce_str, :cdata => true
        xml_accessor :ret_err_msg, :cdata => true
        xml_accessor :app_signature, :cdata => true
        xml_accessor :sign_method, :cdata => true
        xml_accessor :time_stamp, :as => Integer
        xml_accessor :ret_code, :as => Integer
        def initialize
          @sign_method = ""sha1""
        end

        def to_xml
           super.to_xml(:encoding => 'UTF-8', :indent => 0, :save_with => 0)
        end
    end

  end
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",l08E7h
code,"# frozen_string_literal: true

require ""dry/core/equalizer""

require ""rom/initializer""

require ""rom/relation/loaded""
require ""rom/relation/composite""
require ""rom/relation/materializable""
require ""rom/pipeline""
require ""rom/support/memoizable""

module ROM
  class Relation
    # Abstract relation graph class
    #
    # @api public
    class Graph
      extend Initializer

      include Memoizable

      # @!attribute [r] root
      #   @return [Relation] The root relation
      param :root

      # @!attribute [r] nodes
      #   @return [Array<Relation>] An array with relation nodes
      param :nodes

      include Dry::Equalizer(:root, :nodes)
      include Materializable
      include Pipeline
      include Pipeline::Proxy

      # for compatibility with the pipeline
      alias_method :left, :root
      alias_method :right, :nodes

      # Rebuild a graph with new nodes
      #
      # @param [Array<Relation>] nodes
      #
      # @return [Graph]
      #
      # @api public
      def with_nodes(nodes)
        self.class.new(root, nodes)
      end

      # Return if this is a graph relation
      #
      # @return [true]
      #
      # @api private
      def graph?
        true
      end

      # Map graph tuples via custom mappers
      #
      # @see Relation#map_with
      #
      # @return [Relation::Composite]
      #
      # @api public
      def map_with(*names, **opts)
        names.reduce(self.class.new(root.with(opts), nodes)) { |a, e| a >> mappers[e] }
      end

      # Map graph tuples to custom objects
      #
      # @see Relation#map_to
      #
      # @return [Graph]
      #
      # @api public
      def map_to(klass)
        self.class.new(root.map_to(klass), nodes)
      end

      # @see Relation#mapper
      #
      # @api private
      def mapper
        mappers[to_ast]
      end

      # @api private
      memoize def to_ast
        [:relation, [name.relation, attr_ast + nodes.map(&:to_ast), meta_ast]]
      end

      private

      # @api private
      def decorate?(other)
        super || other.is_a?(Composite) || other.is_a?(Curried)
      end

      # @api private
      def composite_class
        Relation::Composite
      end
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WS8IfK
code,"class CreateProductMaterials < ActiveRecord::Migration[5.0]
  def change
    create_table :product_materials do |t|
      t.belongs_to :product, index: true
      t.string :name
      t.string :material
      t.string :description

      t.timestamps
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RSYktB
code,"# frozen_string_literal: true

module Wardrobe
  module Plugins
    module Validation
      module Refinements
        refine NilClass do
          def filled?
            'must be filled'
          end

          def empty?
            # Nil is valid as empty
          end
        end
      end
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aDZIfz
code,"module Miro
  class DominantColors
    attr_accessor :src_image_path

    def initialize(src_image_path, image_type = nil)
      @src_image_path = src_image_path
      @image_type = image_type
    end

    def to_hex
      return histogram.map{ |item| item[1].html } if Miro.histogram?
      sorted_pixels.collect { |pixel| ChunkyPNG::Color.to_hex(pixel, false) }
    end

    def to_rgb
      return histogram.map { |item| item[1].to_rgb.to_a } if Miro.histogram?
      sorted_pixels.collect { |pixel| ChunkyPNG::Color.to_truecolor_bytes(pixel) }
    end

    def to_rgba
      return histogram.map { |item| item[1].css_rgba } if Miro.histogram?
      sorted_pixels.collect { |pixel| ChunkyPNG::Color.to_truecolor_alpha_bytes(pixel) }
    end

   def to_hsl
      histogram.map { |item| item[1].to_hsl.to_a } if Miro.histogram?
    end

    def to_cmyk
      histogram.map { |item| item[1].to_cmyk.to_a } if Miro.histogram?
    end

    def to_yiq
      histogram.map { |item| item[1].to_yiq.to_a } if Miro.histogram?
    end

    def by_percentage
      return nil if Miro.histogram?
      sorted_pixels
      pixel_count = @pixels.size
      sorted_pixels.collect { |pixel| @grouped_pixels[pixel].size / pixel_count.to_f }
    end

    def sorted_pixels
      @sorted_pixels ||= extract_colors_from_image
    end

    def histogram
      @histogram ||= downsample_and_histogram.sort_by { |item| item[0]  }.reverse
    end
  private

    def downsample_and_histogram
      @source_image = open_source_image
      hstring = Cocaine::CommandLine.new(Miro.options[:image_magick_path], image_magick_params).
        run(:in => File.expand_path(@source_image.path),
            :resolution => Miro.options[:resolution],
            :colors => Miro.options[:color_count].to_s,
            :quantize => Miro.options[:quantize])
      cleanup_temporary_files!
      parse_result(hstring)
    end

    def parse_result(hstring)
      hstring.scan(/(\d*):.*(#[0-9A-Fa-f]*)/).collect do |match|
        [match[0].to_i, Object.const_get(""Color::#{Miro.options[:quantize].upcase}"").from_html(match[1])]
      end
    end

    def extract_colors_from_image
      downsample_colors_and_convert_to_png!
      colors = sort_by_dominant_color
      cleanup_temporary_files!
      colors
    end

    def downsample_colors_and_convert_to_png!
      @source_image = open_source_image
      @downsampled_image = open_downsampled_image

      Cocaine::CommandLine.new(Miro.options[:image_magick_path], image_magick_params).
        run(:in => File.expand_path(@source_image.path),
            :resolution => Miro.options[:resolution],
            :colors => Miro.options[:color_count].to_s,
            :quantize => Miro.options[:quantize],
            :out => File.expand_path(@downsampled_image.path))
    end

    def open_source_image
      return File.open(@src_image_path) unless remote_source_image?

      original_extension = @image_type || URI.parse(@src_image_path).path.split('.').last

      tempfile = Tempfile.open([""source"", "".#{original_extension}""])
      remote_file_data = open(@src_image_path).read

      tempfile.write(should_force_encoding? ? remote_file_data.force_encoding(""UTF-8"") : remote_file_data)
      tempfile.close
      tempfile
    end

    def should_force_encoding?
      Gem::Version.new(RUBY_VERSION.dup) >= Gem::Version.new('1.9')
    end

    def open_downsampled_image
      tempfile = Tempfile.open([""downsampled"", '.png'])
      tempfile.binmode
      tempfile
    end

    def image_magick_params
      if Miro.histogram?
        ""':in[0]' -resize :resolution -colors :colors -colorspace :quantize -quantize :quantize -alpha remove -format %c histogram:info:""
      else
        ""':in[0]' -resize :resolution -colors :colors -colorspace :quantize -quantize :quantize :out""
      end
    end

    def group_pixels_by_color
      @pixels ||= ChunkyPNG::Image.from_file(File.expand_path(@downsampled_image.path)).pixels
      @grouped_pixels ||= @pixels.group_by { |pixel| pixel }
    end

    def sort_by_dominant_color
      group_pixels_by_color.sort_by { |k,v| v.size }.reverse.flatten.uniq
    end

    def cleanup_temporary_files!
      @source_image.close! if remote_source_image?
      @downsampled_image.close! if @downsampled_image
    end

    def remote_source_image?
      @src_image_path =~ /^https?:\/\//
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CUGjP2
code,"require 'spec_helper'
require 'gitnesse/cli'

module Gitnesse
  describe Cli, type: :cli do
    let(:help) do
      <<-EOS
USAGE: gitnesse push

Pushes local features to remote git-based wiki

Pushes the local features files to the remote git-based wiki, creating/updating
wiki pages as necessary.

Examples:
  gitnesse push  # will push local features to remote wiki
      EOS
    end

    it ""has help info"" do
      expect(gitnesse(""help push"")).to eq help
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Wi8VP3
code,"#  Phusion Passenger - https://www.phusionpassenger.com/
#  Copyright (c) 2010 Phusion Holding B.V.
#
#  ""Passenger"", ""Phusion Passenger"" and ""Union Station"" are registered
#  trademarks of Phusion Holding B.V.
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the ""Software""), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

require 'etc'

module PhusionPassenger

  class Plugin
    @@hooks = {}
    @@classes = {}

    def self.load(name, load_once = true)
      PLUGIN_DIRS.each do |plugin_dir|
        if plugin_dir =~ /\A~/
          # File.expand_path uses ENV['HOME'] which we don't want.
          home = Etc.getpwuid(Process.uid).dir
          plugin_dir = plugin_dir.sub(/\A~/, home)
        end
        plugin_dir = File.expand_path(plugin_dir)
        Dir[""#{plugin_dir}/*/#{name}.rb""].each do |filename|
          if load_once
            require(filename)
          else
            load(filename)
          end
        end
      end
    end

    def self.register_hook(name, &block)
      hooks_list = (@@hooks[name] ||= [])
      hooks_list << block
    end

    def self.call_hook(name, *args, &block)
      last_result = nil
      if (hooks_list = @@hooks[name])
        hooks_list.each do |callback|
          last_result = callback.call(*args, &block)
        end
      end
      return last_result
    end

    def self.register(name, klass)
      classes = (@@classes[name] ||= [])
      classes << klass
    end

    def initialize(name, *args, &block)
      Plugin.load(name)
      classes = @@classes[name]
      if classes
        @instances = classes.map do |klass|
          klass.new(*args, &block)
        end
      else
        return nil
      end
    end

    def call_hook(name, *args, &block)
      last_result = nil
      if @instances
        @instances.each do |instance|
          if instance.respond_to?(name.to_sym)
            last_result = instance.__send__(name.to_sym, *args, &block)
          end
        end
      end
      return last_result
    end
  end

end # module PhusionPassenger
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Tk4Apb
code,"class UsersController < ApplicationController
  def new
  end

  def create
    user = User.new(
                    email: params[:email],
                    password: params[:password],
                    password_confirmation: params[:password_confirmation])
    if user.save
      session[:user_id] = user.id
      flash[:success] = ""Successfully Created User Account""
      redirect_to '/'
    else
      flash[:warning] = ""Invalid Email or Password""
      redirect_to '/signup'
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",osIdrw
code,"# frozen_string_literal: true

require ""dis/jobs/delete""
require ""dis/jobs/store""
require ""dis/jobs/change_type""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",byLli7
code,"require 'oplogjam/noop'
require 'oplogjam/insert'
require 'oplogjam/update'
require 'oplogjam/delete'
require 'oplogjam/command'
require 'oplogjam/apply_ops'

module Oplogjam
  InvalidOperation = Class.new(ArgumentError)

  class Operation
    def self.from(bson)
      op = bson.fetch(OP, UNKNOWN)

      case op
      when N then Noop.from(bson)
      when I then Insert.from(bson)
      when U then Update.from(bson)
      when D then Delete.from(bson)
      when C
        if bson.fetch(O, {}).key?(APPLY_OPS)
          ApplyOps.from(bson)
        else
          Command.from(bson)
        end
      else
        raise InvalidOperation, ""invalid operation: #{bson}""
      end
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F2rsoC
code,"module InfinityTest
  module Core
    class Base
      # Specify the Ruby Version Manager to run
      cattr_accessor :strategy
      # ==== Options
      # * :rvm
      # * :rbenv
      # * :ruby_normal (Use when don't pass any rubies to run)
      # * :auto_discover(defaults)
      self.strategy = :auto_discover

      # Specify Ruby version(s) to test against
      #
      # ==== Examples
      # rubies = %w(ree jruby)
      #
      cattr_accessor :rubies
      self.rubies = []

      # Options to include in the command.
      #
      cattr_accessor :specific_options
      self.specific_options = ''

      # Test Framework to use Rspec, Bacon, Test::Unit or AutoDiscover(defaults)
      # ==== Options
      # * :rspec
      # * :bacon
      # * :test_unit (Test unit here apply to this two libs: test/unit and minitest)
      # * :auto_discover(defaults)
      #
      # This will load a exactly a class constantize by name.
      #
      cattr_accessor :test_framework
      self.test_framework = :auto_discover

      # Framework to know the folders and files that need to monitoring by the observer.
      #
      # ==== Options
      # * :rails
      # * :rubygems
      # * :auto_discover(defaults)
      #
      # This will load a exactly a class constantize by name.
      #
      cattr_accessor :framework
      self.framework = :auto_discover

      # Framework to observer watch the dirs.
      #
      # ==== Options
      #  * watchr
      #
      cattr_accessor :observer
      self.observer = :watchr

      # Ignore test files.
      #
      # ==== Examples
      #   ignore_test_files = [ 'spec/generators/controller_generator_spec.rb' ]
      #
      cattr_accessor :ignore_test_files
      self.ignore_test_files = []

      # Ignore test folders.
      #
      # ==== Examples
      #   # Imagine that you don't want to run integration specs.
      #   ignore_test_folders = [ 'spec/integration' ]
      #
      cattr_accessor :ignore_test_folders
      self.ignore_test_folders = []

      # Verbose Mode. Print commands before executing them.
      #
      cattr_accessor :verbose
      self.verbose = true

      # Set the notification framework to use with Infinity Test.
      #
      # ==== Options
      # * :growl
      # * :lib_notify
      # * :auto_discover(defaults)
      #
      # This will load a exactly a class constantize by name.
      #
      cattr_writer :notifications
      self.notifications = :auto_discover

      # You can set directory to show images matched by the convention names.
      # => http://github.com/tomas-stefano/infinity_test/tree/master/images/ )
      #
      # Infinity test will work on these names in the notification framework:
      #
      # * success (png, gif, jpeg)
      # * failure (png, gif, jpeg)
      # * pending (png, gif, jpeg)
      #
      cattr_accessor :mode

      #
      # => This will show images in the folder:
      # http://github.com/tomas-stefano/infinity_test/tree/master/images/simpson
      #
      self.mode = :simpson

      # Success Image to show after the tests run.
      #
      cattr_accessor :success_image

      # Pending Image to show after the tests run.
      #
      cattr_accessor :pending_image

      # Failure Image to show after the tests run.
      #
      cattr_accessor :failure_image

      # Use a specific gemset for each ruby.
      # OBS.: This only will work for RVM strategy.
      #
      cattr_accessor :gemset

      # InfinityTest try to use bundler if Gemfile is present.
      # Set to false if you don't want use bundler.
      #
      cattr_accessor :bundler
      self.bundler = true

      # Callbacks accessor to handle before or after all run and for each ruby!
      cattr_accessor :callbacks
      self.callbacks = []

      # Run the observer to monitor files.
      # If set to false will just <b>Run tests and exit</b>.
      # Defaults to true: run tests and monitoring the files.
      #
      cattr_accessor :infinity_and_beyond
      self.infinity_and_beyond = true

      # The extension files that Infinity Test will search.
      # You can observe python, erlang, etc files.
      #
      cattr_accessor :extension
      self.extension = :rb

      # Setup Infinity Test passing the ruby versions and others setting.
      # <b>See the class accessors for more information.</b>
      #
      # ==== Examples
      #
      #  InfinityTest::Base.setup do |config|
      #    config.strategy = :rbenv
      #    config.rubies   = %w(ree jruby rbx 1.9.2)
      #  end
      #
      def self.setup
        yield self
      end

      # Receives a object that quacks like InfinityTest::Options and do the merge with self(Base class).
      #
      def self.merge!(options)
        ConfigurationMerge.new(self, options).merge!
      end

      def self.start_continuous_test_server
        continuous_test_server.start
      end

      def self.continuous_test_server
        @continuous_test_server ||= ContinuousTestServer.new(self)
      end

      # Just a shortcut to bundler class accessor.
      #
      def self.using_bundler?
        bundler
      end

  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6lod_U
code,"require 'rubygems'
gem 'rspec', '>= 1.2.8'
require 'spec'
require File.join(File.dirname(__FILE__), '..', 'lib', 'almaz')
require 'base64'
require 'timecop'
require 'logger'

Spec::Runner.configure do |config|
  config.before(:all) {
    result = RedisRunner.start_detached
    raise(""Could not start redis-server, aborting"") unless result

    # yeah, this sucks, but it seems like sometimes we try to connect too quickly w/o it
    sleep 1

    # use database 15 for testing so we dont accidentally step on real data
    @db = Redis.new(:db => 15) #, :logger => Logger.new(STDOUT), :debug => true)
  }
  
  config.after(:each) {
    @db.flushdb
  }
  
  config.after(:all) {
    begin
      @db.quit
    ensure
      RedisRunner.stop rescue 'Oops'
    end
  }
end

def encode_credentials(username, password)
  ""Basic "" + Base64.encode64(""#{username}:#{password}"")
end


class ExampleSinatraApp < Sinatra::Base
  
  get '/awesome/controller' do
    'wooo hoo'
  end
  
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Z8QQLv
code,"module Fog
  module XenServer
    class Compute
      module Models
        class CrashDumps < Collection
          model Fog::XenServer::Compute::Models::CrashDump
        end
      end
    end
  end
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",y4WlBT
code,"require ""spec_helper""

describe Time do
  describe "".beginning_of_timehop_day"" do
    subject { time.beginning_of_timehop_day }
    context ""after 5am"" do
      let(:time) { Time.parse(""2011-11-07 15:15:33"") }
      let(:beginning_of_timehop_day) { Time.parse(""2011-11-07 5:00:00"") }
      it { should be_within(1.second).of(beginning_of_timehop_day) }
    end
    context ""before 5am"" do
      let(:time) { Time.parse(""2011-11-07 3:15:33"") }
      let(:beginning_of_timehop_day) { Time.parse(""2011-11-06 5:00:00"") }
      it { should be_within(1.second).of(beginning_of_timehop_day) }
    end
  end
  describe "".end_of_timehop_day"" do
    subject { time.end_of_timehop_day }
    context ""after 5am"" do
      let(:time) { Time.parse(""2011-11-07 15:15:33"") }
      let(:end_of_timehop_day) { Time.parse(""2011-11-08 4:59:59"") }
      it { should be_within(1.second).of(end_of_timehop_day) }
    end
    context ""before 5am"" do
      let(:time) { Time.parse(""2011-11-07 3:15:33"") }
      let(:end_of_timehop_day) { Time.parse(""2011-11-07 4:59:59"") }
      it { should be_within(1.second).of(end_of_timehop_day) }
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gACE_f
code,"# frozen_string_literal: true

RSpec::Matchers.define :enforce_authorization_api do
  expected_error =
    { 'error' => 'User is not authorized to access this resource.' }

  match do |actual|
    expect(actual).to have_http_status(403)
    expect(JSON.parse(actual.body)).to eq(expected_error)
  end

  failure_message do |actual|
    ""expected to receive 403 status code (forbidden) and '#{expected_error}' "" \
      ""as the response body. Received #{actual.status} status and ""\
      ""'#{JSON.parse(actual.body)}' response body instead.""
  end

  failure_message_when_negated do
    ""expected not to receive 403 status (forbidden) or '#{expected_error}' ""\
      'in the response body, but it did.'
  end

  description do
    'enforce authorization policies when accessing API resources.'
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mGD-Rp
code,"http_path       = ""/""
css_dir         = ""assets/css/src""
sass_dir        = ""assets/sass""
images_dir      = ""assets/img""
javascripts_dir = ""assets/js""
fonts_dir       = ""assets/font""

http_fonts_path  = ""assets/font""
http_images_path = ""assets/img""

output_style    = :nested
relative_assets = false
line_comments   = false
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TtqLar
code,"Rails.application.config.middleware.use OmniAuth::Builder do
  provider :provider, ENV[""KEY""], ENV[""SECRET""]
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lDZ0Ae
code,"require 'rails_helper'

RSpec.describe ""Pages"", :type => :request do
  describe ""GET /pages"" do
    it ""redirects when unauthenticated"" do
      get pages_path
      expect(response.status).to be(302)
    end
  end

  let(:rory) {User.create!(name: 'Rory', uid: ""1"")}
  let(:valid_attributes) { { path: 'path/to/page', body: 'I am **content**' } }
  let(:invalid_attributes) { { path: 'bad_page', body: nil} }
  let(:valid_session) { { user_id: rory.id} }

  describe ""GET index"" do
    it ""assigns all pages as @pages"" do
      sign_in rory
      page = Page.create! valid_attributes
      get pages_path
      expect(response.body).to include(""All Wiki Pages"")
    end
  end

  describe ""GET show"" do
    it ""assigns the requested page as @page"" do
      sign_in rory
      page = Page.create! valid_attributes
      get page_path(page)
      expect(response.body).to include(""I am"")
    end
  end

  describe ""GET new"" do
    it ""assigns a new page as @page"" do
      sign_in rory
      get new_page_path
      expect(response.body).to include(""Path to the page"")
    end
  end

  describe ""GET edit"" do
    it ""assigns the requested page as @page"" do
      sign_in rory
      page = Page.create! valid_attributes
      get edit_page_path(page)
      expect(response.body).to include(""Path to the page"")
    end
  end

  describe ""POST create"" do
    describe ""with valid params"" do
      it ""creates a new Page"" do
        sign_in rory
        expect {
          post pages_path, params: {page: valid_attributes}
        }.to change(Page, :count).by(1)
      end

      it ""redirects to the created page"" do
        sign_in rory
        post pages_path, params: {page: valid_attributes}
        expect(response).to redirect_to(""/#{Page.last.path}"")
      end
    end

    describe ""with invalid params"" do
      it ""assigns a newly created but unsaved page as @page"" do
        sign_in rory
        post pages_path, params: {page: invalid_attributes}
        expect(response.body).to include(""Body can&#39;t be blank"")
      end
    end
  end

  describe ""PUT update"" do
    describe ""with valid params"" do
      let(:new_attributes) { {path: 'new/path'} }

      it ""updates the requested page"" do
        sign_in rory
        page = Page.create! valid_attributes
        put page_path(page), params: {page: new_attributes}
        page.reload
        expect(page.path).to eq('new/path')
      end

      it ""redirects to the page"" do
        sign_in rory
        page = Page.create! valid_attributes
        put page_path(page), params: {page: new_attributes}
        page.reload
        expect(response).to redirect_to(""/#{new_attributes[:path]}"")
      end
    end

    describe ""with invalid params"" do
      it ""assigns the page as @page"" do
        sign_in rory
        page = Page.create! valid_attributes
        put page_path(page), params: {page: invalid_attributes}
        expect(response.body).to include(""Body can&#39;t be blank"")
      end
    end
  end

  describe ""DELETE destroy"" do
    it ""destroys the requested page"" do
      sign_in rory
      page = Page.create! valid_attributes
      expect {
        delete page_path(page)
      }.to change(Page, :count).by(-1)
    end

    it ""redirects to the pages list"" do
      sign_in rory
      page = Page.create! valid_attributes
      delete page_path(page)
      expect(response).to redirect_to(pages_url)
    end
  end

end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IyLXpi
code,"require 'spec_helper'
module Sexpr::Matcher
  describe Rule, ""eat"" do

    let(:rule){ Rule.new :hello, self }

    def eat(seen)
      @seen = seen
    end

    it 'delegates to the defn' do
      rule.eat([:foo])
      @seen.should eq([:foo])
    end

  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",P0Q3Uj
code,"# encoding: UTF-8

include Vorax

describe 'tablezip layout' do

  before(:each) do# {{{
    @sp = Sqlplus.new('sqlplus')
    @sp.default_convertor = :tablezip
    @prep = [VORAX_CSTR, 
             ""set tab off"", 
             ""set linesize 10000"", 
             ""set markup html on"", 
             ""set echo off"",
             ""set pause off"",
             ""set define &"",
             ""set termout on"",
             ""set verify off"",
             ""set pagesize 4""].join(""\n"")
    @result = """"
  end# }}}

  it 'should work with multiple statements' do# {{{
    @sp.exec(""select dummy d from dual;\nselect * from departments where id <= 2;"", :prep => @prep)
    @result << @sp.read_output(32767) while @sp.busy?
    expected = <<OUTPUT

SQL> 

D
-
X

SQL> 

ID NAME        DESCRIPTION
-- ----------- -----------------------------------
 1 Bookkeeping This department is responsible for:
               - financial reporting
               - analysis
               - other boring tasks
 2 Marketing    

SQL> 
SQL> 
OUTPUT
    #puts @result
    @result.should eq(expected)
  end# }}}

  it 'should work with multi line records' do# {{{
    @sp.exec(""select * from departments where id <= 10;"", :prep => @prep)
    @result << @sp.read_output(32767) while @sp.busy?
    expected = <<OUTPUT

SQL> 

ID NAME             DESCRIPTION
-- ---------------- -----------------------------------
 1 Bookkeeping      This department is responsible for:
                    - financial reporting
                    - analysis
                    - other boring tasks
 2 Marketing         
 3 Deliveries        
 4 CRM               

ID NAME             DESCRIPTION
-- ---------------- -----------------------------------
 5 Legal Stuff       
 6 Management       The bad guys department
 7 Cooking           
 8 Public Relations  

ID NAME             DESCRIPTION
-- ---------------- -----------------------------------
 9 Aquisitions       
10 Cleaning          

10 rows selected.

SQL> 
SQL> 
OUTPUT
    #puts @result
    @result.should eq(expected)
  end# }}}

it 'should work with accept prompts' do# {{{
  begin
    pack_file = Tempfile.new(['vorax', '.sql'])
    @sp.exec(""accept var prompt \""Enter var: \""\nprompt &var"", :prep => @prep, :pack_file => pack_file.path)
    Timeout::timeout(10) {
      @result << @sp.read_output(32767) while @result !~ /Enter var: \z/
      @sp.send_text(""muci\n"")
      @result << @sp.read_output(32767) while @result !~ /muci\n\z/
    }
  ensure
    pack_file.unlink
  end
end# }}}

it 'should work with <pre> tags' do# {{{
    @sp.exec(""set autotrace traceonly explain\nselect * from dual;"", :prep => @prep)
    @result << @sp.read_output(32767) while @sp.busy?
    @result.should match(/SELECT STATEMENT/)
end# }}}

  after(:each) do# {{{
    @sp.terminate
  end# }}}

end

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k4aAAa
code,"require ""sendgrid-parse/version""
require ""sendgrid-parse/encodable_hash""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FZyhpL
code,"# Be sure to restart your server when you modify this file.

Rails.application.config.session_store :cookie_store, key: '_imdbc_session'
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vBKo29
code,"require ""test_helper""

class Admin::BidsControllerTest < ActionController::TestCase
  setup :create_administrator_session

  def test_index
    opts = {:controller => ""admin/bids"", :action => ""index""}
    assert_routing(""/admin/bids"", opts)

    get(:index)
    assert_response(:success)
    assert_template(""admin/bids/index"")
    assert_not_nil(assigns['bids'], 'Should assign bids')
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7Wc4YT
code,"require 'spec_helper'

module Sendgrid
  module API
    module Entities
      describe Stats do
        subject { described_class.new }

        it { should respond_to(:delivered) }
        it { should respond_to(:request) }
        it { should respond_to(:unique_open) }
        it { should respond_to(:unique_click) }
        it { should respond_to(:processed) }
        it { should respond_to(:date) }
        it { should respond_to(:open) }
        it { should respond_to(:click) }
        it { should respond_to(:blocked) }
        it { should respond_to(:spamreport) }
        it { should respond_to(:drop) }
        it { should respond_to(:bounce) }
        it { should respond_to(:deferred) }
      end
    end
  end
end",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hWQvow
code,"require 'stringio'
require 'highline/import'

module RailsZen
  class ChosenAttr
    attr_accessor :name, :type, :validator, :type_based_validators, :scope_attr

    def initialize(name, type)
      @name = name
      @type = type
      @scope_attr = []
    end
    def get_user_inputs
      get_presence_req
      get_type_based_validations
    end

    def get_presence_req
      say ""\n\nShould :#{name} be present always in your record?\n""
      say""--------------------------------------------------------------""
      inp = agree(""Reply with y or n"")

      if inp
        @validator = ""validates_presence_of""
        #say ""What should be the default value? If there is no default value enter n""
        #val = $stdin.gets.strip
        #if val != 'n'
        #@default_value = val
        #end
        get_uniqueness_req
      else
        @validator = nil
      end
    end

    def get_uniqueness_req
      say ""Should :#{name} be an unique column?\n""
      say ""-------------------------------------\n\n""
      say ""Reply with \n
                  0 if it is not unique \n
                  1 if it is just unique \n
                  2 if it is unique with respect to another attr \n\n""

      inp = ask(""Please enter"", Integer) { |q| q.in = 0..2 }

      if inp == 2
        #say ""Setting presence true in your models and migrations""
        say ""\n#{name} is unique along with ?\n Reply with attr name\n ""

        if is_relation?
          @scope_attr << ""#{name}_id"" unless name.end_with? ""_id""
        end

        say(""if it is a relation reply along with id: eg: user_id \n\n $->"")
        @scope_attr << ask(""Enter (comma sep list)  "", lambda { |str| str.split(/,\s*/) })
        @scope_attr = @scope_attr.flatten.map(&:to_sym)

        @validator = ""validates_uniqueness_scoped_to""
      elsif  inp == 1
        @validator = ""validates_uniqueness_of""
      end
    end

    def get_type_based_validations
      if(type == ""integer"" || type == ""decimal"")
        @validator_line = ""#@validator_line, numericality: true""

        say ""#{name} is an integer do you want to check  \n
                  1 just the numericality? \n
                  2 check if it is only integer\n\n $->
        ""
        input = ask(""Please enter"", Integer) { |q| q.in = 1..2}

        map_input = {
          1 => ""validate_numericality"", 2 => ""validate_integer""
          #""3"" => ""validate_greater_than"", ""4"" => ""validate_lesser_than""
        }

        @type_based_validators = map_input[input]

      elsif(is_relation?)
        @type_based_validators = ""validate_belongs_to""
      end
    end
    def is_relation?
      type ==""belongs_to"" || type == ""references"" || (type.end_with? ""_id"")
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_BV2J2
code,"require 'spec_helper'

describe Pagerage::IncidentsParser do
  before(:each) do
    Pagerage::Incident.delete
  end
  let(:incidents_json) { File.read(File.dirname(__FILE__) + '/incidents_sample.json') }
  let(:incidents_data) { JSON.parse(incidents_json) }
  let(:parser) { Pagerage::IncidentsParser.new(incidents_json) }

  it 'should set data attr when created' do
    parser.data.should eq(incidents_data)
  end

  it 'should generate two incidents from the sample data' do
    parser.run!
    Pagerage::Incident.count.should eq(2)
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3gR4F_
code,"class CreateComments < ActiveRecord::Migration
  def change
    create_table :comments do |t|
      t.references :post, index: true
      t.integer :author_id
      t.string :comment

      t.timestamps
    end
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yHXe8L
code,"# encoding: utf-8

module Axiom
  class Relation
    module Operation

      # A mixin for Binary relations
      module Binary
        include Axiom::Operation::Binary

        # Hook called when module is included
        #
        # @param [Module] descendant
        #   the module or class including Binary
        #
        # @return [undefined]
        #
        # @api private
        def self.included(descendant)
          super
          descendant.extend(ClassMethods)
        end

        private_class_method :included

        # Initialize a Binary relation
        #
        # @return [undefined]
        #
        # @api private
        def initialize(*)
          super
          @header = left.header | right.header
        end

        module ClassMethods

          # Instantiate a new Binary relation
          #
          # @example
          #   binary = BinaryRelation.new(left, right)
          #
          # @param [Relation] left
          # @param [Relation] right
          #
          # @return [Binary]
          #
          # @api public
          def new(left, right)
            assert_sorted_match(left, right)
            super
          end

        private

          # Assert that sorted and unsorted relations are not mixed
          #
          # @param [Relation] left
          # @param [Relation] right
          #
          # @return [undefined]
          #
          # @raise [RelationMismatchError]
          #   raised if one relation is sorted and the other is not
          #
          # @api private
          def assert_sorted_match(left, right)
            if left.directions.empty? != right.directions.empty?
              fail RelationMismatchError, 'both relations must be sorted or neither may be sorted'
            end
          end

        end # module ClassMethods
      end # module Binary
    end # module Operation
  end # class Relation
end # module Axiom
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",K2xIm1
code,"class ChangeIntegerLimits < ActiveRecord::Migration
  def change
  	change_column :projects, :federal_contribution, :integer, limit: 8
  	change_column :projects, :total_eligible_cost, :integer, limit: 8
  end
end
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IEhD2B
code,"require ""lita""

Lita.load_locales Dir[File.expand_path(
  File.join("".."", "".."", ""locales"", ""*.yml""), __FILE__
)]

require ""lita/handlers/urban""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vc2Xh_
code,"// Copyright (c) 2010-2011 Dmitry Vyukov. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1. Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY DMITRY VYUKOV ""AS IS"" AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
// SHALL DMITRY VYUKOV OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
// ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// The views and conclusions contained in the software and documentation are
// those of the authors and should not be interpreted as representing official
// policies, either expressed or implied, of Dmitry Vyukov.
//

//! A mostly lock-free multi-producer, single consumer queue.
//!
//! This module contains an implementation of a concurrent MPSC queue. This
//! queue can be used to share data between threads, and is also used as the
//! building block of channels in rust.
//!
//! Note that the current implementation of this queue has a caveat of the `pop`
//! method, and see the method for more information about it. Due to this
//! caveat, this queue may not be appropriate for all use-cases.

// http://www.1024cores.net/home/lock-free-algorithms
//                         /queues/non-intrusive-mpsc-node-based-queue

pub use self::PopResult::*;

use std::boxed::Box;
use core::ptr;
use core::cell::UnsafeCell;

use std::sync::atomic::{AtomicPtr, Ordering};

/// A result of the `pop` function.
pub enum PopResult<T> {
    /// Some data has been popped
    Data(T),
    /// The queue is empty
    Empty,
    /// The queue is in an inconsistent state. Popping data should succeed, but
    /// some pushers have yet to make enough progress in order allow a pop to
    /// succeed. It is recommended that a pop() occur ""in the near future"" in
    /// order to see if the sender has made progress or not
    Inconsistent,
}

struct Node<T> {
    next: AtomicPtr<Node<T>>,
    value: Option<T>,
}

/// The multi-producer single-consumer structure. This is not cloneable, but it
/// may be safely shared so long as it is guaranteed that there is only one
/// popper at a time (many pushers are allowed).
pub struct Queue<T> {
    head: AtomicPtr<Node<T>>,
    tail: UnsafeCell<*mut Node<T>>,
}

unsafe impl<T: Send> Send for Queue<T> {}
unsafe impl<T: Send> Sync for Queue<T> {}

impl<T> Node<T> {
    unsafe fn new(v: Option<T>) -> *mut Node<T> {
        Box::into_raw(box Node {
            next: AtomicPtr::new(ptr::null_mut()),
            value: v,
        })
    }
}

impl<T> Queue<T> {
    /// Creates a new queue that is safe to share among multiple producers and
    /// one consumer.
    pub fn new() -> Queue<T> {
        let stub = unsafe { Node::new(None) };
        Queue {
            head: AtomicPtr::new(stub),
            tail: UnsafeCell::new(stub),
        }
    }

    /// Pushes a new value onto this queue.
    pub fn push(&self, t: T) {
        unsafe {
            let n = Node::new(Some(t));
            let prev = self.head.swap(n, Ordering::AcqRel);
            (*prev).next.store(n, Ordering::Release);
        }
    }

    /// Pops some data from this queue.
    ///
    /// Note that the current implementation means that this function cannot
    /// return `Option<T>`. It is possible for this queue to be in an
    /// inconsistent state where many pushes have succeeded and completely
    /// finished, but pops cannot return `Some(t)`. This inconsistent state
    /// happens when a pusher is pre-empted at an inopportune moment.
    ///
    /// This inconsistent state means that this queue does indeed have data, but
    /// it does not currently have access to it at this time.
    pub fn pop(&self) -> PopResult<T> {
        unsafe {
            let tail = *self.tail.get();
            let next = (*tail).next.load(Ordering::Acquire);

            if !next.is_null() {
                *self.tail.get() = next;
                assert!((*tail).value.is_none());
                assert!((*next).value.is_some());
                let ret = (*next).value.take().unwrap();
                let _: Box<Node<T>> = Box::from_raw(tail);
                return Data(ret);
            }

            if self.head.load(Ordering::Acquire)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8xgJfO
code,"use crate::prelude::*;

/// A `Brush` defines the fill pattern of shapes.
/// The syntax allows to express fill patterns in several ways:
///
/// * solid colors
/// * colors with alpha channel
/// * gradients of colors
/// * gradients with directions
/// * gradients with angles
///
/// The string declaration of a `Brush` is composed combining the following
/// syntax elements:
///
/// 1. The `color name`
/// 2. The `gradient` string
///    * the gradient type (linear, repeating-linear)
///    * gradient attributes (direction-identifier, angles, color names )
///
/// ## Examples
/// Here are some implementations with declarations of colors, degrees, orientations and directions.
///
/// ```text
/// .foreground(""white"")
/// .background(""black"")
/// .background(""linear-gradient(0deg, #4b6cb7, #182848)"")
/// .background(""repeating-linear-gradient(0.25turn, rgba(255, 255, 0, 0.6), dodgerblue, deepskyblue)"")
/// .background(""linear-gradient(-90deg, hsv(201, 94%, 80.5%), steelblue)"")
/// .background(""linear-gradient(to top right, white, skyblue 60%, lightskyblue 80%, yellow 83%, yellow)"")
/// ```
/// Read on to see how the syntax is composed.
///
/// ## Definition of a color name
/// With the given implementation you can choose between three methods
/// to define a color.
///
/// A. `color codes`
///
/// You can define the value of a color with a symbol ""#"" followed
/// by letters or numbers. These numbers are in hexadecimal numeral system.
/// The short variant will use 3 numbers , the long variant will use 6
/// numbers.
/// For example `#f00` will give you red. If you write `#0000ff`, you will
/// get blue.
/// To include an alpha channel, the short variant takes 4 numbers.
/// If you need a yellow with 50.2% opaque, you use `#ff08`.
/// In the long form you need 8 numbers. `#0000ff80` represents 50.2% opaque
/// (non-premultiplied) blue.
///
/// B. `color function`
///
/// Currently the unique available functions that interpret a color are
/// distincted with the keywords `rgb`, `hsv`, `hsb`, `hsl`. There are
/// `alpha variants` as well. `hsb` is an alias to `hsv`.
/// Alpha variants are coded with the keywords `rgba`, `abgr`  or `argb`.
/// Here is an example to define a color via the function method:
/// `hsl(197, 71%, 73%)` will provide you a pretty skyblue color.
/// For `rgb` and `rgba` the range of the values are 0-255.
/// Any other keyword will use floating point integers to define the color
/// value. `hsva(0.0-360.0, 0.0-1.0, 0.0-1.0, 0.0-1.0)` is such an example.
/// In addition you can choose to use percent values (`%` sign) for the given
/// parameters.
/// When appending the `%` sign to the range parameters of the `rgb` function
/// call, the values are mapped to 0.0-100.0 (percent) or 0.0-1.0 (min/max).
/// For all other keywords (`hsv`, `hsb`, `hsl`) you are not allowed to append
/// the percent sign to the first parameter. If you append `%` to the following
/// parameters, OrbTk will interpret the values in a range between `0.0-100.0`.
///
/// C. `color name`
///
/// **WIP: The given implementation is using (utils/colors.txt). This has to be adopted!!!**
///
/// OrbTk maintains a list of color names as constants. You may
/// directly choose their string value inside the code.
///
/// Example color names are:
///
///  * COLOR_WHITE
///  * COLOR_RED
///  * COLOR_OLIVE
///  * COLOR_LINK_WATER
///  * COLOR_SLATE_GRAY
///
/// ## Definition of a gradient
/// The syntax of a gradient definition is structured as follows:
///
/// * Optional parameters are inside brackets (`[]`).
/// * Within braces (`{}`) you define the appropriate parameter value.
/// * The pipe (`|`) is offering mutual exclusive variants
///   e.g: degrees(deg), radians(rad) or turns(turn).
/// * Three points (`...`) refer to multiple stops.
///   They are respected when a gradient is rendered.
///
/// To understand gradient directions, imagine a line or vector that
/// starts at a given point inside the entity and points to an
/// imaginary target point within the same entity. Gradients will be
/// rendered along the choosen direction to reach its target
/// poing. Supported directions are:
///
///  * ""to bottom""
///  * ""to bottom left""
///  * ""to bottom right""
///  * ""to left""
///  * ""to right""
///  * ""to top
///  * ""to top left""
///  * ""to top right""
///
/// Displacement points tell the gradient algorithm to add
/// (`positive`) or or substract (`negative`) the given pixel numbers
/// from the original starting point.
///
/// Lets look at some examples. The first one shows the
/// structure of an angled gradient
///
/// ```text
/// [repeating-]linear-gradient({Gradient-angle}{deg|rad|turn}, ...) [{X Displacement}px {Y Displacement}px], {Color} [{Stop  position}{%|px}]
/// ```
///
/// The next example shows the structure of a gradient that will be
/// rendered in a given direction
///
/// ```text
/// [repeating-]linear-gradient({direction-identifier}, {initial color-name}, {terminating color-name}
/// ```
///
//#[cfg(feature = ""nightly"")]
//#[doc(include = ""../colors.md"")]

#[derive(Clone, PartialEq, Debug)]
pub enum Brush {
    /// Paints an area w",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vo9xmi
code,"use sled;

use std::path::PathBuf;

pub struct DB {
    tree: sled::Tree,
}

impl DB {
    pub fn open(path: String) -> Self {
        let db_path = PathBuf::from(&path);
        let cfg = sled::Config::default()
            .path(path.to_owned())
            .use_compression(true);
        if db_path.is_file() {
            return DB { tree: cfg.tree() };
        } else {
            return DB { tree: sled::Tree::new(cfg) };

        }
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k_m5V7
code,"// +--------------------------------------------------------------------------+
// | Copyright 2016 Matthew D. Steele <mdsteele@alum.mit.edu>                 |
// |                                                                          |
// | This file is part of Tuna.                                               |
// |                                                                          |
// | Tuna is free software: you can redistribute it and/or modify it under    |
// | the terms of the GNU General Public License as published by the Free     |
// | Software Foundation, either version 3 of the License, or (at your        |
// | option) any later version.                                               |
// |                                                                          |
// | Tuna is distributed in the hope that it will be useful, but WITHOUT ANY  |
// | WARRANTY; without even the implied warranty of MERCHANTABILITY or        |
// | FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License    |
// | for details.                                                             |
// |                                                                          |
// | You should have received a copy of the GNU General Public License along  |
// | with Tuna.  If not, see <http://www.gnu.org/licenses/>.                  |
// +--------------------------------------------------------------------------+

fn main() {
    let target = std::env::var(""TARGET"").unwrap();
    if target.ends_with(""-apple-darwin"") {
        println!(""cargo:rustc-link-search=framework=/Library/Frameworks"");
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vlANFL
code,"use clippy_utils::diagnostics::span_lint_and_help;
use clippy_utils::ty::match_type;
use clippy_utils::{get_parent_expr, paths};
use if_chain::if_chain;
use rustc_hir as hir;
use rustc_lint::LateContext;
use rustc_span::source_map::Span;

use super::FILETYPE_IS_FILE;

pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, recv: &hir::Expr<'_>) {
    let ty = cx.typeck_results().expr_ty(recv);

    if !match_type(cx, ty, &paths::FILE_TYPE) {
        return;
    }

    let span: Span;
    let verb: &str;
    let lint_unary: &str;
    let help_unary: &str;
    if_chain! {
        if let Some(parent) = get_parent_expr(cx, expr);
        if let hir::ExprKind::Unary(op, _) = parent.kind;
        if op == hir::UnOp::Not;
        then {
            lint_unary = ""!"";
            verb = ""denies"";
            help_unary = """";
            span = parent.span;
        } else {
            lint_unary = """";
            verb = ""covers"";
            help_unary = ""!"";
            span = expr.span;
        }
    }
    let lint_msg = format!(""`{}FileType::is_file()` only {} regular files"", lint_unary, verb);
    let help_msg = format!(""use `{}FileType::is_dir()` instead"", help_unary);
    span_lint_and_help(cx, FILETYPE_IS_FILE, span, &lint_msg, None, &help_msg);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Y3oWfR
code,"// Copyright 2012 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

//! Semver parsing and logic

use core::char;
use core::cmp;
use core::io::{ReaderUtil};
use core::io;
use core::option::{Option, Some, None};
use core::str;
use core::to_str::ToStr;
use core::uint;

#[deriving(Eq)]
pub enum Identifier {
    Numeric(uint),
    AlphaNumeric(~str)
}

impl cmp::Ord for Identifier {
    #[inline(always)]
    fn lt(&self, other: &Identifier) -> bool {
        match (self, other) {
            (&Numeric(a), &Numeric(b)) => a < b,
            (&Numeric(_), _) => true,
            (&AlphaNumeric(ref a), &AlphaNumeric(ref b)) => *a < *b,
            (&AlphaNumeric(_), _) => false
        }
    }
    #[inline(always)]
    fn le(&self, other: &Identifier) -> bool {
        ! (other < self)
    }
    #[inline(always)]
    fn gt(&self, other: &Identifier) -> bool {
        other < self
    }
    #[inline(always)]
    fn ge(&self, other: &Identifier) -> bool {
        ! (self < other)
    }
}

impl ToStr for Identifier {
    #[inline(always)]
    fn to_str(&self) -> ~str {
        match self {
            &Numeric(n) => n.to_str(),
            &AlphaNumeric(ref s) => s.to_str()
        }
    }
}


#[deriving(Eq)]
pub struct Version {
    major: uint,
    minor: uint,
    patch: uint,
    pre: ~[Identifier],
    build: ~[Identifier],
}

impl ToStr for Version {
    #[inline(always)]
    fn to_str(&self) -> ~str {
        let s = fmt!(""%u.%u.%u"", self.major, self.minor, self.patch);
        let s = if self.pre.is_empty() {
            s
        } else {
            s + ""-"" + str::connect(self.pre.map(|i| i.to_str()), ""."")
        };
        if self.build.is_empty() {
            s
        } else {
            s + ""+"" + str::connect(self.build.map(|i| i.to_str()), ""."")
        }
    }
}

impl cmp::Ord for Version {
    #[inline(always)]
    fn lt(&self, other: &Version) -> bool {

        self.major < other.major ||

            (self.major == other.major &&
             self.minor < other.minor) ||

            (self.major == other.major &&
             self.minor == other.minor &&
             self.patch < other.patch) ||

            (self.major == other.major &&
             self.minor == other.minor &&
             self.patch == other.patch &&
             // NB: semver spec says 0.0.0-pre < 0.0.0
             // but the version of ord defined for vec
             // says that [] < [pre], so we alter it
             // here.
             (match (self.pre.len(), other.pre.len()) {
                 (0, 0) => false,
                 (0, _) => false,
                 (_, 0) => true,
                 (_, _) => self.pre < other.pre
             })) ||

            (self.major == other.major &&
             self.minor == other.minor &&
             self.patch == other.patch &&
             self.pre == other.pre &&
             self.build < other.build)
    }

    #[inline(always)]
    fn le(&self, other: &Version) -> bool {
        ! (other < self)
    }
    #[inline(always)]
    fn gt(&self, other: &Version) -> bool {
        other < self
    }
    #[inline(always)]
    fn ge(&self, other: &Version) -> bool {
        ! (self < other)
    }
}

condition! {
    bad_parse: () -> ();
}

fn take_nonempty_prefix(rdr: @io::Reader,
                        ch: char,
                        pred: &fn(char) -> bool) -> (~str, char) {
    let mut buf = ~"""";
    let mut ch = ch;
    while pred(ch) {
        str::push_char(&mut buf, ch);
        ch = rdr.read_char();
    }
    if buf.is_empty() {
        bad_parse::cond.raise(())
    }
    debug!(""extracted nonempty prefix: %s"", buf);
    (buf, ch)
}

fn take_num(rdr: @io::Reader, ch: char) -> (uint, char) {
    let (s, ch) = take_nonempty_prefix(rdr, ch, char::is_digit);
    match uint::from_str(s) {
        None => { bad_parse::cond.raise(()); (0, ch) },
        Some(i) => (i, ch)
    }
}

fn take_ident(rdr: @io::Reader, ch: char) -> (Identifier, char) {
    let (s,ch) = take_nonempty_prefix(rdr, ch, char::is_alphanumeric);
    if s.all(char::is_digit) {
        match uint::from_str(s) {
            None => { bad_parse::cond.raise(()); (Numeric(0), ch) },
            Some(i) => (Numeric(i), ch)
        }
    } else {
        (AlphaNumeric(s), ch)
    }
}

fn expect(ch: char, c: char) {
    if ch != c {
        bad_parse::cond.raise(())
    }
}

fn parse_reader(rdr: @io::Reader) -> Version {
    let (major, ch) = take_num(rdr, rdr.read_char());
    expect(ch, '.');
    let (minor, ch) = take_num(rdr, rdr.read_char());
    expect(ch, '.');
    let (patch, ch) = take_num(rdr, rdr.read_char());

    let mut pre = ~[];
    let mut build = ~[];

    let mut ch = ch;
    if ch == '-' {
        loop {
            let (id",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JQgDfL
code,"/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This software may be used and distributed according to the terms of the
 * GNU General Public License version 2.
 */

#![deny(warnings)]

use anyhow::{Error, Result};
use blobrepo::BlobRepo;
use blobrepo_hg::BlobRepoHg;
use context::CoreContext;
use futures::{FutureExt, TryFutureExt};
use futures_old::{stream, Stream as StreamOld};
use mercurial_bundles::obsmarkers::MetadataEntry;
use mercurial_bundles::{part_encode::PartEncodeBuilder, parts};
use mercurial_types::HgChangesetId;
use mononoke_types::DateTime;

pub fn pushrebased_changesets_to_obsmarkers_part(
    ctx: CoreContext,
    blobrepo: &BlobRepo,
    pushrebased_changesets: Vec<pushrebase::PushrebaseChangesetPair>,
) -> Option<Result<PartEncodeBuilder>> {
    let filtered_changesets: Vec<_> = pushrebased_changesets
        .into_iter()
        .filter(|c| c.id_old != c.id_new)
        .collect();

    if filtered_changesets.is_empty() {
        return None;
    }

    let hg_pushrebased_changesets =
        pushrebased_changesets_to_hg_stream(ctx.clone(), blobrepo, filtered_changesets);

    let time = DateTime::now();
    let mut metadata = vec![MetadataEntry::new(""operation"", ""push"")];

    if let Some(user) = ctx.metadata().unix_name() {
        metadata.push(MetadataEntry::new(""user"", user.clone()));
    }

    let part = parts::obsmarkers_part(hg_pushrebased_changesets, time, metadata);

    Some(part)
}

fn pushrebased_changesets_to_hg_stream(
    ctx: CoreContext,
    blobrepo: &BlobRepo,
    pushrebased_changesets: Vec<pushrebase::PushrebaseChangesetPair>,
) -> impl StreamOld<Item = (HgChangesetId, Vec<HgChangesetId>), Error = Error> {
    let blobrepo = blobrepo.clone();
    let futures = pushrebased_changesets.into_iter().map({
        move |p| {
            let blobrepo = blobrepo.clone();
            let ctx = ctx.clone();
            async move {
                let (old, new) = futures::try_join!(
                    blobrepo.get_hg_from_bonsai_changeset(ctx.clone(), p.id_old),
                    blobrepo.get_hg_from_bonsai_changeset(ctx.clone(), p.id_new),
                )?;
                Ok((old, vec![new]))
            }
            .boxed()
            .compat()
        }
    });

    stream::futures_unordered(futures)
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zMedH3
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

<%! from data import to_rust_ident %>
<%namespace name=""helpers"" file=""/helpers.mako.rs"" />
<% from data import ALL_SIZES, PHYSICAL_SIDES, LOGICAL_SIDES %>

<% data.new_style_struct(""Position"", inherited=False) %>

// ""top"" / ""left"" / ""bottom"" / ""right""
% for side in PHYSICAL_SIDES:
    ${helpers.predefined_type(side, ""LengthOrPercentageOrAuto"",
                              ""computed::LengthOrPercentageOrAuto::Auto"",
                              spec=""https://www.w3.org/TR/CSS2/visuren.html#propdef-%s"" % side,
                              animatable=True)}
% endfor
// offset-* logical properties, map to ""top"" / ""left"" / ""bottom"" / ""right""
% for side in LOGICAL_SIDES:
    ${helpers.predefined_type(""offset-%s"" % side, ""LengthOrPercentageOrAuto"",
                              ""computed::LengthOrPercentageOrAuto::Auto"",
                              spec=""https://drafts.csswg.org/css-logical-props/#propdef-offset-%s"" % side,
                              animatable=True, logical=True)}
% endfor

<%helpers:longhand name=""z-index"" spec=""https://www.w3.org/TR/CSS2/visuren.html#z-index"" animatable=""True"">
    use values::NoViewportPercentage;
    use values::computed::ComputedValueAsSpecified;

    impl ComputedValueAsSpecified for SpecifiedValue {}
    impl NoViewportPercentage for SpecifiedValue {}
    pub type SpecifiedValue = computed_value::T;
    pub mod computed_value {
        use std::fmt;
        use style_traits::ToCss;

        #[derive(PartialEq, Clone, Eq, Copy, Debug)]
        #[cfg_attr(feature = ""servo"", derive(HeapSizeOf))]
        pub enum T {
            Auto,
            Number(i32),
        }

        impl ToCss for T {
            fn to_css<W>(&self, dest: &mut W) -> fmt::Result where W: fmt::Write {
                match *self {
                    T::Auto => dest.write_str(""auto""),
                    T::Number(number) => write!(dest, ""{}"", number),
                }
            }
        }

        impl T {
            pub fn number_or_zero(self) -> i32 {
                match self {
                    T::Auto => 0,
                    T::Number(value) => value,
                }
            }
        }
    }
    #[inline]
    pub fn get_initial_value() -> computed_value::T {
        computed_value::T::Auto
    }
    fn parse(_context: &ParserContext, input: &mut Parser) -> Result<SpecifiedValue, ()> {
        if input.try(|input| input.expect_ident_matching(""auto"")).is_ok() {
            Ok(computed_value::T::Auto)
        } else {
            specified::parse_integer(input).map(computed_value::T::Number)
        }
    }
</%helpers:longhand>

// CSS Flexible Box Layout Module Level 1
// http://www.w3.org/TR/css3-flexbox/

// Flex container properties
${helpers.single_keyword(""flex-direction"", ""row row-reverse column column-reverse"",
                         spec=""https://drafts.csswg.org/css-flexbox/#flex-direction-property"",
                         animatable=False)}

${helpers.single_keyword(""flex-wrap"", ""nowrap wrap wrap-reverse"",
                         spec=""https://drafts.csswg.org/css-flexbox/#flex-wrap-property"",
                         animatable=False)}

// FIXME(stshine): The type of 'justify-content' and 'align-content' is uint16_t in gecko
// FIXME(stshine): Its higher bytes are used to store fallback value. Disable them in geckolib for now
${helpers.single_keyword(""justify-content"", ""flex-start flex-end center space-between space-around"",
                         gecko_constant_prefix=""NS_STYLE_JUSTIFY"",
                         products=""servo"",
                         spec=""https://drafts.csswg.org/css-flexbox/#justify-content-property"",
                         animatable=False)}

// https://drafts.csswg.org/css-flexbox/#propdef-align-items
// FIXME: This is a workaround for 'normal' value. We don't support the Gecko initial value 'normal' yet.
${helpers.single_keyword(""align-items"", ""stretch flex-start flex-end center baseline"" if product == ""servo""
                         else ""normal stretch flex-start flex-end center baseline"",
                         need_clone=True,
                         gecko_constant_prefix=""NS_STYLE_ALIGN"",
                         spec=""https://drafts.csswg.org/css-flexbox/#align-items-property"",
                         animatable=False)}

${helpers.single_keyword(""align-content"", ""stretch flex-start flex-end center space-between space-around"",
                         gecko_constant_prefix=""NS_STYLE_ALIGN"",
                         products=""servo"",
                         spec=""https://drafts.csswg.org/css-flexbox/#align-content-property"",
                         animatable=False)}

// Flex item properties
${helpers.predefined_type(""flex-grow"", ""Number"",
                          ""0.0"", ""parse_non_negative"",
                          spec=""https://drafts.csswg.org/css-flexbox/#flex-grow-property"",
                          needs_context=False,",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-Btue2
code,"use serde::de::DeserializeOwned;

use crate::algorithms::AlgorithmFamily;
use crate::crypto::verify;
use crate::errors::{new_error, ErrorKind, Result};
use crate::header::Header;
#[cfg(feature = ""use_pem"")]
use crate::pem::decoder::PemEncodedKey;
use crate::serialization::{b64_decode, DecodedJwtPartClaims};
use crate::validation::{validate, Validation};

/// The return type of a successful call to [decode](fn.decode.html).
#[derive(Debug)]
pub struct TokenData<T> {
    /// The decoded JWT header
    pub header: Header,
    /// The decoded JWT claims
    pub claims: T,
}

/// Takes the result of a rsplit and ensure we only get 2 parts
/// Errors if we don't
macro_rules! expect_two {
    ($iter:expr) => {{
        let mut i = $iter;
        match (i.next(), i.next(), i.next()) {
            (Some(first), Some(second), None) => (first, second),
            _ => return Err(new_error(ErrorKind::InvalidToken)),
        }
    }};
}

#[derive(Clone)]
pub(crate) enum DecodingKeyKind {
    SecretOrDer(Vec<u8>),
    RsaModulusExponent { n: Vec<u8>, e: Vec<u8> },
}

/// All the different kind of keys we can use to decode a JWT
/// This key can be re-used so make sure you only initialize it once if you can for better performance
#[derive(Clone)]
pub struct DecodingKey {
    pub(crate) family: AlgorithmFamily,
    pub(crate) kind: DecodingKeyKind,
}

impl DecodingKey {
    /// If you're using HMAC, use this.
    pub fn from_secret(secret: &[u8]) -> Self {
        DecodingKey {
            family: AlgorithmFamily::Hmac,
            kind: DecodingKeyKind::SecretOrDer(secret.to_vec()),
        }
    }

    /// If you're using HMAC with a base64 encoded secret, use this.
    pub fn from_base64_secret(secret: &str) -> Result<Self> {
        let out = base64::decode(&secret)?;
        Ok(DecodingKey { family: AlgorithmFamily::Hmac, kind: DecodingKeyKind::SecretOrDer(out) })
    }

    /// If you are loading a public RSA key in a PEM format, use this.
    /// Only exists if the feature `use_pem` is enabled.
    #[cfg(feature = ""use_pem"")]
    pub fn from_rsa_pem(key: &[u8]) -> Result<Self> {
        let pem_key = PemEncodedKey::new(key)?;
        let content = pem_key.as_rsa_key()?;
        Ok(DecodingKey {
            family: AlgorithmFamily::Rsa,
            kind: DecodingKeyKind::SecretOrDer(content.to_vec()),
        })
    }

    /// If you have (n, e) RSA public key components as strings, use this.
    pub fn from_rsa_components(modulus: &str, exponent: &str) -> Result<Self> {
        let n = b64_decode(modulus)?;
        let e = b64_decode(exponent)?;
        Ok(DecodingKey {
            family: AlgorithmFamily::Rsa,
            kind: DecodingKeyKind::RsaModulusExponent { n, e },
        })
    }

    /// If you have (n, e) RSA public key components already decoded, use this.
    pub fn from_rsa_raw_components(modulus: &[u8], exponent: &[u8]) -> Self {
        DecodingKey {
            family: AlgorithmFamily::Rsa,
            kind: DecodingKeyKind::RsaModulusExponent { n: modulus.to_vec(), e: exponent.to_vec() },
        }
    }

    /// If you have a ECDSA public key in PEM format, use this.
    /// Only exists if the feature `use_pem` is enabled.
    #[cfg(feature = ""use_pem"")]
    pub fn from_ec_pem(key: &[u8]) -> Result<Self> {
        let pem_key = PemEncodedKey::new(key)?;
        let content = pem_key.as_ec_public_key()?;
        Ok(DecodingKey {
            family: AlgorithmFamily::Ec,
            kind: DecodingKeyKind::SecretOrDer(content.to_vec()),
        })
    }

    /// If you have a EdDSA public key in PEM format, use this.
    /// Only exists if the feature `use_pem` is enabled.
    #[cfg(feature = ""use_pem"")]
    pub fn from_ed_pem(key: &[u8]) -> Result<Self> {
        let pem_key = PemEncodedKey::new(key)?;
        let content = pem_key.as_ed_public_key()?;
        Ok(DecodingKey {
            family: AlgorithmFamily::Ed,
            kind: DecodingKeyKind::SecretOrDer(content.to_vec()),
        })
    }

    /// If you know what you're doing and have a RSA DER encoded public key, use this.
    pub fn from_rsa_der(der: &[u8]) -> Self {
        DecodingKey {
            family: AlgorithmFamily::Rsa,
            kind: DecodingKeyKind::SecretOrDer(der.to_vec()),
        }
    }

    /// If you know what you're doing and have a RSA EC encoded public key, use this.
    pub fn from_ec_der(der: &[u8]) -> Self {
        DecodingKey {
            family: AlgorithmFamily::Ec,
            kind: DecodingKeyKind::SecretOrDer(der.to_vec()),
        }
    }

    /// If you know what you're doing and have a Ed DER encoded public key, use this.
    pub fn from_ed_der(der: &[u8]) -> Self {
        DecodingKey {
            family: AlgorithmFamily::Ed,
            kind: DecodingKeyKind::SecretOrDer(der.to_vec()),
        }
    }
    pub(crate) fn as_bytes(&self) -> &[u8] {
        match &self.kind {
            DecodingKeyKind::SecretOrDer(b) => b,
            DecodingKeyKind::RsaModulusExponent { .. } => unreachable!(),
        }
    }
}

/// Verify signature of a JWT, and return header object and raw payload
///
/// If the token or its s",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EbsQz3
code,"pub type __priority_which_t = ::c_uint;

s! {
    pub struct aiocb {
        pub aio_fildes: ::c_int,
        pub aio_lio_opcode: ::c_int,
        pub aio_reqprio: ::c_int,
        pub aio_buf: *mut ::c_void,
        pub aio_nbytes: ::size_t,
        pub aio_sigevent: ::sigevent,
        __next_prio: *mut aiocb,
        __abs_prio: ::c_int,
        __policy: ::c_int,
        __error_code: ::c_int,
        __return_value: ::ssize_t,
        pub aio_offset: off_t,
        #[cfg(all(not(target_arch = ""x86_64""), target_pointer_width = ""32""))]
        __unused1: [::c_char; 4],
        __glibc_reserved: [::c_char; 32]
    }

    pub struct __exit_status {
        pub e_termination: ::c_short,
        pub e_exit: ::c_short,
    }

    pub struct __timeval {
        pub tv_sec: ::int32_t,
        pub tv_usec: ::int32_t,
    }

    pub struct utmpx {
        pub ut_type: ::c_short,
        pub ut_pid: ::pid_t,
        pub ut_line: [::c_char; __UT_LINESIZE],
        pub ut_id: [::c_char; 4],

        pub ut_user: [::c_char; __UT_NAMESIZE],
        pub ut_host: [::c_char; __UT_HOSTSIZE],
        pub ut_exit: __exit_status,

        #[cfg(any(target_arch = ""aarch64"",
                  target_arch = ""sparc64"",
                  all(target_pointer_width = ""32"",
                      not(target_arch = ""x86_64""))))]
        pub ut_session: ::c_long,
        #[cfg(any(target_arch = ""aarch64"",
                  target_arch = ""sparc64"",
                  all(target_pointer_width = ""32"",
                      not(target_arch = ""x86_64""))))]
        pub ut_tv: ::timeval,

        #[cfg(not(any(target_arch = ""aarch64"",
                      target_arch = ""sparc64"",
                      all(target_pointer_width = ""32"",
                          not(target_arch = ""x86_64"")))))]
        pub ut_session: ::int32_t,
        #[cfg(not(any(target_arch = ""aarch64"",
                      target_arch = ""sparc64"",
                      all(target_pointer_width = ""32"",
                          not(target_arch = ""x86_64"")))))]
        pub ut_tv: __timeval,

        pub ut_addr_v6: [::int32_t; 4],
        __glibc_reserved: [::c_char; 20],
    }

    pub struct sigaction {
        pub sa_sigaction: ::sighandler_t,
        pub sa_mask: ::sigset_t,
        #[cfg(target_arch = ""sparc64"")]
        __reserved0: ::c_int,
        pub sa_flags: ::c_int,
        pub sa_restorer: ::dox::Option<extern fn()>,
    }

    pub struct stack_t {
        pub ss_sp: *mut ::c_void,
        pub ss_flags: ::c_int,
        pub ss_size: ::size_t
    }

    pub struct siginfo_t {
        pub si_signo: ::c_int,
        pub si_errno: ::c_int,
        pub si_code: ::c_int,
        pub _pad: [::c_int; 29],
        #[cfg(target_arch = ""x86_64"")]
        _align: [u64; 0],
        #[cfg(not(target_arch = ""x86_64""))]
        _align: [usize; 0],
    }

    pub struct glob64_t {
        pub gl_pathc: ::size_t,
        pub gl_pathv: *mut *mut ::c_char,
        pub gl_offs: ::size_t,
        pub gl_flags: ::c_int,

        __unused1: *mut ::c_void,
        __unused2: *mut ::c_void,
        __unused3: *mut ::c_void,
        __unused4: *mut ::c_void,
        __unused5: *mut ::c_void,
    }

    pub struct ucred {
        pub pid: ::pid_t,
        pub uid: ::uid_t,
        pub gid: ::gid_t,
    }

    pub struct statfs {
        pub f_type: __fsword_t,
        pub f_bsize: __fsword_t,
        pub f_blocks: ::fsblkcnt_t,
        pub f_bfree: ::fsblkcnt_t,
        pub f_bavail: ::fsblkcnt_t,

        pub f_files: ::fsfilcnt_t,
        pub f_ffree: ::fsfilcnt_t,
        pub f_fsid: ::fsid_t,

        pub f_namelen: __fsword_t,
        pub f_frsize: __fsword_t,
        f_spare: [__fsword_t; 5],
    }

    pub struct msghdr {
        pub msg_name: *mut ::c_void,
        pub msg_namelen: ::socklen_t,
        pub msg_iov: *mut ::iovec,
        pub msg_iovlen: ::size_t,
        pub msg_control: *mut ::c_void,
        pub msg_controllen: ::size_t,
        pub msg_flags: ::c_int,
    }

    pub struct cmsghdr {
        pub cmsg_len: ::size_t,
        pub cmsg_level: ::c_int,
        pub cmsg_type: ::c_int,
    }

    pub struct termios {
        pub c_iflag: ::tcflag_t,
        pub c_oflag: ::tcflag_t,
        pub c_cflag: ::tcflag_t,
        pub c_lflag: ::tcflag_t,
        pub c_line: ::cc_t,
        pub c_cc: [::cc_t; ::NCCS],
        #[cfg(not(target_arch = ""sparc64""))]
        pub c_ispeed: ::speed_t,
        #[cfg(not(target_arch = ""sparc64""))]
        pub c_ospeed: ::speed_t,
    }

    pub struct flock {
        pub l_type: ::c_short,
        pub l_whence: ::c_short,
        pub l_start: ::off_t,
        pub l_len: ::off_t,
        pub l_pid: ::pid_t,
    }

    // FIXME this is actually a union
    pub struct sem_t {
        #[cfg(target_pointer_width = ""32"")]
        __size: [::c_char; 16],
        #[cfg(target_pointer_width = ""64"")]
        __size: [::c_char; 32],
        __align: [::c_long; 0],
    }
}

pub const __UT_LINESIZE: usize = 32;
pub const __UT_NAMESIZE: usize = 32;
pub const __UT_HOSTSIZE: usize = 256;
pub const EMPTY: ::c_short = 0;
pub const RUN_LVL: ::c_short = 1;
pub const BOOT_TIME",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1V2fln
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

//! Implements parallel traversals over the DOM and flow trees.
//!
//! This code is highly unsafe. Keep this file small and easy to audit.

use context::{LayoutContext, SharedLayoutContext};
use flow::{Flow, MutableFlowUtils, PreorderFlowTraversal, PostorderFlowTraversal};
use flow;
use flow_ref::FlowRef;
use traversal::{RecalcStyleForNode, ConstructFlows};
use traversal::{BubbleISizes, AssignISizes, AssignBSizesAndStoreOverflow};
use traversal::{ComputeAbsolutePositions, BuildDisplayList};
use util::{LayoutDataAccess, LayoutDataWrapper};
use wrapper::{layout_node_to_unsafe_layout_node, layout_node_from_unsafe_layout_node, LayoutNode};
use wrapper::{PostorderNodeMutTraversal, UnsafeLayoutNode};
use wrapper::{PreorderDomTraversal, PostorderDomTraversal};

use servo_util::opts;
use servo_util::time::{TimeProfilerCategory, ProfilerMetadata, TimeProfilerChan, profile};
use servo_util::workqueue::{WorkQueue, WorkUnit, WorkerProxy};
use std::mem;
use std::ptr;
use std::sync::atomic::{AtomicInt, Relaxed, SeqCst};

#[allow(dead_code)]
fn static_assertion(node: UnsafeLayoutNode) {
    unsafe {
        let _: UnsafeFlow = ::std::intrinsics::transmute(node);
    }
}

/// Vtable + pointer representation of a Flow trait object.
pub type UnsafeFlow = (uint, uint);

fn null_unsafe_flow() -> UnsafeFlow {
    (0, 0)
}

pub fn owned_flow_to_unsafe_flow(flow: *const FlowRef) -> UnsafeFlow {
    unsafe {
        mem::transmute_copy(&*flow)
    }
}

pub fn mut_owned_flow_to_unsafe_flow(flow: *mut FlowRef) -> UnsafeFlow {
    unsafe {
        mem::transmute_copy(&*flow)
    }
}

pub fn borrowed_flow_to_unsafe_flow(flow: &Flow) -> UnsafeFlow {
    unsafe {
        mem::transmute_copy(&flow)
    }
}

pub fn mut_borrowed_flow_to_unsafe_flow(flow: &mut Flow) -> UnsafeFlow {
    unsafe {
        mem::transmute_copy(&flow)
    }
}

/// Information that we need stored in each DOM node.
pub struct DomParallelInfo {
    /// The number of children that still need work done.
    pub children_count: AtomicInt,
}

impl DomParallelInfo {
    pub fn new() -> DomParallelInfo {
        DomParallelInfo {
            children_count: AtomicInt::new(0),
        }
    }
}

/// A parallel top-down DOM traversal.
pub trait ParallelPreorderDomTraversal : PreorderDomTraversal {
    fn run_parallel(&self,
                    node: UnsafeLayoutNode,
                    proxy: &mut WorkerProxy<*const SharedLayoutContext,UnsafeLayoutNode>);

    #[inline(always)]
    fn run_parallel_helper(&self,
                           unsafe_node: UnsafeLayoutNode,
                           proxy: &mut WorkerProxy<*const SharedLayoutContext,UnsafeLayoutNode>,
                           top_down_func: extern ""Rust"" fn(UnsafeFlow,
                                                           &mut WorkerProxy<*const SharedLayoutContext,
                                                                            UnsafeLayoutNode>),
                           bottom_up_func: extern ""Rust"" fn(UnsafeFlow,
                                                            &mut WorkerProxy<*const SharedLayoutContext,
                                                                             UnsafeFlow>)) {
        // Get a real layout node.
        let node: LayoutNode = unsafe {
            layout_node_from_unsafe_layout_node(&unsafe_node)
        };

        // Perform the appropriate traversal.
        self.process(node);

        // NB: O(n).
        let child_count = node.children().count();

        // Reset the count of children.
        {
            let mut layout_data_ref = node.mutate_layout_data();
            let layout_data = layout_data_ref.as_mut().expect(""no layout data"");
            layout_data.data.parallel.children_count.store(child_count as int, Relaxed);
        }

        // Possibly enqueue the children.
        if child_count != 0 {
            for kid in node.children() {
                proxy.push(WorkUnit {
                    fun:  top_down_func,
                    data: layout_node_to_unsafe_layout_node(&kid),
                });
            }
        } else {
            // If there were no more children, start walking back up.
            bottom_up_func(unsafe_node, proxy)
        }
    }
}

/// A parallel bottom-up DOM traversal.
trait ParallelPostorderDomTraversal : PostorderDomTraversal {
    /// Process current node and potentially traverse its ancestors.
    ///
    /// If we are the last child that finished processing, recursively process
    /// our parent. Else, stop. Also, stop at the root.
    ///
    /// Thus, if we start with all the leaves of a tree, we end up traversing
    /// the whole tree bottom-up because each parent will be processed exactly
    /// once (by the last child that finishes processing).
    ///
    /// The only communication between siblings is that they both
    /// fetch-and-subtract the parent's children count.
    fn run_parallel(",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MJFQeF
code,"// Copyright (c) 2013-2015 Sandstorm Development Group, Inc. and contributors
// Licensed under the MIT License:
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#![crate_name=""calculator""]
#![crate_type=""bin""]

extern crate capnp;
extern crate capnp_rpc;

pub mod calculator_capnp {
  include!(concat!(env!(""OUT_DIR""), ""/calculator_capnp.rs""));
}

pub mod client;
pub mod server;

pub fn main() {
    let args : Vec<String> = ::std::env::args().collect();
    if args.len() >= 2 {
        match &args[1][..] {
            ""client"" => return client::main(),
            ""server"" => return server::main(),
            _ => (),
        }
    }

    println!(""usage: {} [client | server] ADDRESS"", args[0]);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KHiO6n
code,"// Test that we are able to introduce a negative constraint that
// `MyType: !MyTrait` along with other ""fundamental"" wrappers.

// aux-build:coherence_copy_like_lib.rs
#![allow(dead_code)]

extern crate coherence_copy_like_lib as lib;

struct MyType { x: i32 }

// These are all legal because they are all fundamental types:

// Tuples are not fundamental, so this is not a local impl.
impl lib::MyCopy for (MyType,) { }
//~^ ERROR E0117


fn main() { }
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VIcmRo
code,"
use ::Disruption;
use rustc_serialize::{Encodable};
use rustc_serialize::json::{self};
use std::sync::Arc;
use std::sync::atomic::Ordering;
use time::PreciseTime;
use hyper::Client;

pub fn disruption_to_usize(d: &Option<&(Disruption, usize)>) -> usize {
    match *d {
        None => 0,
        Some(&(Disruption::Node(_), _)) => 1,
        Some(&(Disruption::Query(_), _)) => 2,
        Some(&(Disruption::Metric(_), _)) => 3
    }
}

pub fn send_bulk<T: Encodable>(url: &str, client: &Arc<Client>, bulk: Vec<T>) {
    ::ACTIVE_THREADS.fetch_add(1, Ordering::SeqCst);

    debug!(""......"");
    let mut s = String::new();
    let size = bulk.len();
    for b in bulk {
        s.push_str(""{\""index\"":{}}\n"");
        s.push_str(&json::encode(&b).unwrap());
        s.push_str(""\n"");
    }

    debug!(""                      >>>>> Bulk: {} mb ({} elements)"", s.len() / 1024 / 1024, size);
    let start = PreciseTime::now();
    let _ = client.post(url)
                        .body(&s)
                        .send()
                        .unwrap();
    let end = PreciseTime::now();
    let _ = PreciseTime::to(&start, end);
    ::ACTIVE_THREADS.fetch_sub(1, Ordering::SeqCst);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0VvxOh
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

use dom::bindings::cell::DOMRefCell;
use dom::bindings::callback::ExceptionHandling;
use dom::bindings::codegen::Bindings::EventHandlerBinding::{OnErrorEventHandlerNonNull, EventHandlerNonNull};
use dom::bindings::codegen::Bindings::DocumentBinding::DocumentMethods;
use dom::bindings::codegen::Bindings::FunctionBinding::Function;
use dom::bindings::codegen::Bindings::WindowBinding::{self, WindowMethods, FrameRequestCallback};
use dom::bindings::codegen::InheritTypes::{NodeCast, ElementCast, EventTargetCast, WindowDerived};
use dom::bindings::global::global_object_for_js_object;
use dom::bindings::error::{report_pending_exception, Fallible};
use dom::bindings::error::Error::InvalidCharacter;
use dom::bindings::global::GlobalRef;
use dom::bindings::js::{JS, Root, MutNullableHeap};
use dom::bindings::js::RootedReference;
use dom::bindings::num::Finite;
use dom::bindings::utils::{GlobalStaticData, Reflectable, WindowProxyHandler};
use dom::browsercontext::BrowsingContext;
use dom::console::Console;
use dom::crypto::Crypto;
use dom::cssstyledeclaration::{CSSModificationAccess, CSSStyleDeclaration};
use dom::document::{Document, DocumentHelpers};
use dom::element::Element;
use dom::eventtarget::{EventTarget, EventTargetHelpers, EventTargetTypeId};
use dom::htmlelement::HTMLElement;
use dom::location::Location;
use dom::navigator::Navigator;
use dom::node::{window_from_node, TrustedNodeAddress, NodeHelpers, from_untrusted_node_address};
use dom::performance::Performance;
use dom::screen::Screen;
use dom::storage::Storage;
use layout_interface::{ReflowGoal, ReflowQueryType, LayoutRPC, LayoutChan, Reflow, Msg};
use layout_interface::{ContentBoxResponse, ContentBoxesResponse, ResolvedStyleResponse, ScriptReflow};
use page::Page;
use script_task::{TimerSource, ScriptChan, ScriptPort, NonWorkerScriptChan};
use script_task::ScriptMsg;
use script_traits::ScriptControlChan;
use timers::{IsInterval, TimerId, TimerManager, TimerCallback};
use webdriver_handlers::jsval_to_webdriver;

use devtools_traits::{ScriptToDevtoolsControlMsg, TimelineMarker, TimelineMarkerType};
use devtools_traits::{TracingMetadata};
use msg::compositor_msg::ScriptListener;
use msg::constellation_msg::{LoadData, PipelineId, SubpageId, ConstellationChan, WindowSizeData, WorkerId};
use msg::webdriver_msg::{WebDriverJSError, WebDriverJSResult};
use net_traits::ResourceTask;
use net_traits::image_cache_task::{ImageCacheChan, ImageCacheTask};
use net_traits::storage_task::{StorageTask, StorageType};
use profile_traits::mem;
use string_cache::Atom;
use util::geometry::{self, Au, MAX_RECT};
use util::{breakpoint, opts};
use util::str::{DOMString,HTML_SPACE_CHARACTERS};

use euclid::{Point2D, Rect, Size2D};
use ipc_channel::ipc::IpcSender;
use js::jsapi::{Evaluate2, MutableHandleValue};
use js::jsapi::{JSContext, HandleValue};
use js::jsapi::{JS_GC, JS_GetRuntime, JSAutoCompartment, JSAutoRequest};
use js::rust::Runtime;
use js::rust::CompileOptionsWrapper;
use selectors::parser::PseudoElement;
use url::Url;

use libc;
use rustc_serialize::base64::{FromBase64, ToBase64, STANDARD};
use std::ascii::AsciiExt;
use std::borrow::ToOwned;
use std::cell::{Cell, Ref, RefMut, RefCell};
use std::collections::HashSet;
use std::default::Default;
use std::ffi::CString;
use std::io::{stdout, stderr, Write};
use std::mem as std_mem;
use std::rc::Rc;
use std::sync::Arc;
use std::sync::mpsc::TryRecvError::{Empty, Disconnected};
use std::sync::mpsc::{channel, Receiver};
use time;

/// Current state of the window object
#[derive(JSTraceable, Copy, Clone, Debug, PartialEq, HeapSizeOf)]
enum WindowState {
    Alive,
    Zombie,     // Pipeline is closed, but the window hasn't been GCed yet.
}

/// Extra information concerning the reason for reflowing.
#[derive(Debug)]
pub enum ReflowReason {
    CachedPageNeededReflow,
    RefreshTick,
    FirstLoad,
    KeyEvent,
    MouseEvent,
    Query,
    Timer,
    Viewport,
    WindowResize,
    DOMContentLoaded,
    DocumentLoaded,
    ImageLoaded,
    RequestAnimationFrame,
}

#[dom_struct]
#[derive(HeapSizeOf)]
pub struct Window {
    eventtarget: EventTarget,
    #[ignore_heap_size_of = ""trait objects are hard""]
    script_chan: Box<ScriptChan+Send>,
    #[ignore_heap_size_of = ""channels are hard""]
    control_chan: ScriptControlChan,
    console: MutNullableHeap<JS<Console>>,
    crypto: MutNullableHeap<JS<Crypto>>,
    navigator: MutNullableHeap<JS<Navigator>>,
    #[ignore_heap_size_of = ""channels are hard""]
    image_cache_task: ImageCacheTask,
    #[ignore_heap_size_of = ""channels are hard""]
    image_cache_chan: ImageCacheChan,
    #[ignore_heap_size_of = ""TODO(#6911) newtypes containing unmeasurable types are hard""]
    compositor: DOMRefCell<ScriptListener>,
    browsing_context: DOMRefCell<Option<BrowsingContext>>,
    page: Rc<Page>,
    performance: MutNullableHeap<JS<Performance>>,
    navigation_start: u64,
    navigation_start_precise: ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mrPXGh
code,"use uuid::Uuid;
use std::str::FromStr;
use std::fmt;

use version;

#[derive(Clone,Debug)]
pub struct SessionConfig {
    pub user_agent: String,
    pub device_id: String,
}

impl Default for SessionConfig {
    fn default() -> SessionConfig {
        let device_id = Uuid::new_v4().hyphenated().to_string();
        SessionConfig {
            user_agent: version::version_string(),
            device_id: device_id,
        }
    }
}


#[derive(Clone, Copy, Debug, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum Bitrate {
    Bitrate96,
    Bitrate160,
    Bitrate320,
}

impl FromStr for Bitrate {
    type Err = ();
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            ""96"" => Ok(Bitrate::Bitrate96),
            ""160"" => Ok(Bitrate::Bitrate160),
            ""320"" => Ok(Bitrate::Bitrate320),
            _ => Err(()),
        }
    }
}

impl Default for Bitrate {
    fn default() -> Bitrate {
        Bitrate::Bitrate160
    }
}

#[derive(Clone, Copy, Debug, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub enum DeviceType {
    Unknown = 0,
    Computer = 1,
    Tablet = 2,
    Smartphone = 3,
    Speaker = 4,
    TV = 5,
    AVR = 6,
    STB = 7,
    AudioDongle = 8,
}

impl FromStr for DeviceType {
    type Err = ();
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        use self::DeviceType::*;
        match s.to_lowercase().as_ref() {
            ""computer"" => Ok(Computer),
            ""tablet"" => Ok(Tablet),
            ""smartphone"" => Ok(Smartphone),
            ""speaker"" => Ok(Speaker),
            ""tv"" => Ok(TV),
            ""avr"" => Ok(AVR),
            ""stb"" => Ok(STB),
            ""audiodongle"" => Ok(AudioDongle),
            _ => Err(()),
        }
    }
}

impl fmt::Display for DeviceType {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        use self::DeviceType::*;
        match *self {
            Unknown => f.write_str(""Unknown""),
            Computer => f.write_str(""Computer""),
            Tablet => f.write_str(""Tablet""),
            Smartphone => f.write_str(""Smartphone""),
            Speaker => f.write_str(""Speaker""),
            TV => f.write_str(""TV""),
            AVR => f.write_str(""AVR""),
            STB => f.write_str(""STB""),
            AudioDongle => f.write_str(""AudioDongle""),
        }
    }
}

impl Default for DeviceType {
    fn default() -> DeviceType {
        DeviceType::Speaker
    }
}

#[derive(Clone,Debug)]
pub struct PlayerConfig {
    pub bitrate: Bitrate,
    pub onstart: Option<String>,
    pub onstop: Option<String>,
}

impl Default for PlayerConfig {
    fn default() -> PlayerConfig {
        PlayerConfig {
            bitrate: Bitrate::default(),
            onstart: None,
            onstop: None,
        }
    }
}

#[derive(Clone,Debug)]
pub struct ConnectConfig {
    pub name: String,
    pub device_type: DeviceType,
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dbyHJa
code,"// this program is not technically incorrect, but is an obscure enough style to be worth linting
#![deny(temporary_cstring_as_ptr)]

use std::ffi::CString;

fn main() {
    let s = CString::new(""some text"").unwrap().as_ptr();
    //~^ ERROR getting the inner pointer of a temporary `CString`
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",e30UMB
code,"// Copyright 2015 Ilkka Rauta
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

use ::base::{Deserialize,bool_flag};
use super::{Descriptor,bits_remaining,repeated_element,repeated_sub_element,read_tla};
use encoding::all::{ISO_8859_1,ISO_8859_2,ISO_8859_3,ISO_8859_4,ISO_8859_5,ISO_8859_6,ISO_8859_7,ISO_8859_8,ISO_8859_10,ISO_8859_13,ISO_8859_14,ISO_8859_15,UTF_16BE,GBK,UTF_8,WINDOWS_949};
use encoding::{Encoding,DecoderTrap};
use bitreader;



// 0x40 NetworkNameDescriptor
bit_struct!(
    #[derive(Debug)]
    pub struct NetworkNameDescriptor {
        pub name: String
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x44 },
        descriptor_length: { 8 },
        name: { value: try!(remainder_as_string(descriptor_length, reader)) },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);
impl Descriptor for NetworkNameDescriptor {}


bit_struct!(
    #[derive(Debug)]
    pub struct Service {
        pub service_id: u16,
        pub service_type: u8
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x44 },
        descriptor_length: { 8 },
        service_id: { 16 },
        service_type: { 8 },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);

// 0x41 ServiceListDescriptor
bit_struct!(
    #[derive(Debug)]
    pub struct ServiceListDescriptor {
        pub services: Vec<Service>
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x41 },
        descriptor_length: { 8 },
        services: { value: try!(repeated_element(descriptor_length, reader)) },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);
impl Descriptor for ServiceListDescriptor {}


// 0x42 StuffingDescriptor
bit_struct!(
    #[derive(Debug)]
    pub struct StuffingDescriptor {
        // Hacky solution here, might want to impl Deserialize manually for this
        pub void: ()
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x42 },
        descriptor_length: { 8 },
        void: { value: () },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);
impl Descriptor for StuffingDescriptor {}


// 0x43 SatelliteDeliverySystemDescriptor
bit_struct!(
    #[derive(Debug)]
    pub struct SatelliteDeliverySystemDescriptor {
        pub frequency: u32,
        pub orbital_position: u16,
        pub west_east: bool,
        pub polarization: u8,
        pub roll_off: u8,
        pub modulation_system: bool,
        pub modulation_type: u8,
        pub symbol_rate: u32,
        pub fec_inner: u8
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x43 },
        descriptor_length: { 8 },
        frequency: { 32 },
        orbital_position: { 16 },
        west_east: { 1, map: bool_flag },
        polarization: { 2 },
        roll_off_tmp: { 2 },
        modulation_system: { 1, map: bool_flag },
        roll_off: { value: if modulation_system { roll_off_tmp } else { 0 } },
        modulation_type: { 2 },
        symbol_rate: { 28 },
        fec_inner: { 4 },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);
impl Descriptor for SatelliteDeliverySystemDescriptor {}


// 0x44 CableDeliverySystemDescriptor
bit_struct!(
    #[derive(Debug)]
    pub struct CableDeliverySystemDescriptor {
        pub frequency: u32,
        pub fec_outer: u8,
        pub modulation: u8,
        pub symbol_rate: u32,
        pub fec_inner: u8
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x44 },
        descriptor_length: { 8 },
        frequency: { 32 },
        reserved: { 12 },
        fec_outer: { 4 },
        modulation: { 8 },
        symbol_rate: { 28 },
        fec_inner: { 4 },
        skip: { bits_remaining(descriptor_length, reader) }
    }
);
impl Descriptor for CableDeliverySystemDescriptor {}


bit_struct!(
    #[derive(Debug)]
    pub struct VbiDataLine {
        pub field_parity: u8,
        pub line_offset: u8
    }
    deserialize(reader) {
        reserved: { 2 },
        field_parity: { 1 },
        line_offset: { 5 }
    }
);

bit_struct!(
    #[derive(Debug)]
    pub struct VbiDataService {
        pub data_service_id: u8,
        pub vbi_data_lines: Vec<VbiDataLine>
    }
    deserialize(reader) {
        expect: { bits: 8, reference: 0x44 },
        descriptor_length: { 8 },
        data_service_id: { 8 },
        data_service_descriptor_length: { 8 },
        vbi_data_lines: { value: if data_service_id >= 1 && data_service_id <= 7 {
            try!(repeated_sub_element(data_service_descriptor_length, reader))
        } else { vec![] } },
        skip: { bits_remainin",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2uIBoc
code,"use std::env;
use std::io::Read;
use std::fs::File;
use std::path::Path;
use std::path::PathBuf;
use std::collections::HashMap;
use std::collections::HashSet;

fn main() {
    let mut data_path: PathBuf = env::current_dir().unwrap();
    data_path.push(""data"");
    data_path.push(""input.txt"");

    let directions: Vec<String> = data_from_file(&data_path).unwrap();

    let longest_distance: i32 = longest_block_distance(&directions).unwrap();

    let distance_to_reoccurance: i32 =
        first_reoccuring_block_distance(&directions).unwrap();

    println!(""Answer 1: {}"", longest_distance);
    println!(""Answer 2: {}"", distance_to_reoccurance);
}

pub fn data_from_file<P>(file_name: &P) -> Result<Vec<String>, std::io::Error>
        where P: AsRef<Path> {
    let mut data_file: File = File::open(file_name)?;
    let mut data_line: String = String::new();

    data_file.read_to_string(&mut data_line)?;

    let data: Vec<String> = data_line.trim()
                                     .split("", "")
                                     .map(|str_literal| str_literal.to_owned())
                                     .collect();

    Ok(data)
}

pub fn longest_block_distance(directions: &Vec<String>) -> Result<i32, String> {
    let mut index: i32 = 0;
    let mut ew_parity: i32 = 1;
    let mut ns_parity: i32 = 1;

    let mut direction_parity_table: HashMap<char, i32> = HashMap::new();
    direction_parity_table.insert('R', 1);
    direction_parity_table.insert('L', -1);

    let mut travel_location: [i32; 2] = [0, 0];

    for direction in directions {
        let direction_char: char =
            direction
                .chars().nth(0).ok_or(""Direction is empty!"".to_owned())?;
        let direction_parity: &i32 =
            direction_parity_table
                .get(&direction_char)
                .ok_or(""Direction not in parity table!"".to_owned())?;
        let distance: i32 =
            (&direction[1..]).parse::<i32>().map_err(|e| e.to_string())?;

        if index % 2 == 0 {
            if ns_parity == 1 {
                ew_parity = *direction_parity;
            } else {
                ew_parity = -1 * (*direction_parity);
            }

            travel_location[1] += ew_parity * distance;
        } else {
            if ew_parity == 1 {
                ns_parity = -1 * (*direction_parity);
            } else {
                ns_parity = *direction_parity;
            }

            travel_location[0] += ns_parity * distance;
       }

        index += 1;
    }

    Ok(travel_location[0].abs() + travel_location[1].abs())
}

pub fn first_reoccuring_block_distance(directions: &Vec<String>)
         -> Result<i32, String> {
    let mut index: i32 = 0;
    let mut ew_parity: i32 = 1;
    let mut ns_parity: i32 = 1;

    let mut direction_parity_table: HashMap<char, i32> = HashMap::new();
    direction_parity_table.insert('R', 1);
    direction_parity_table.insert('L', -1);

    let mut travel_location: [i32; 2] = [0, 0];

    let mut locations_visited: HashSet<[i32; 2]> = HashSet::new();
    locations_visited.insert(travel_location);

    for direction in directions {
        let direction_char: char =
            direction
                .chars().nth(0).ok_or(""Direction is empty!"".to_owned())?;
        let direction_parity: &i32 =
            direction_parity_table
                .get(&direction_char)
                .ok_or(""Direction not in parity table!"".to_owned())?;
        let distance: i32 =
            (&direction[1..]).parse::<i32>().map_err(|e| e.to_string())?;

        if index % 2 == 0 {
            if ns_parity == 1 {
                ew_parity = *direction_parity;
            } else {
                ew_parity = -1 * (*direction_parity);
            }

            let mut travel_from: i32 = travel_location[1];

            travel_location[1] += ew_parity * distance;

            let travel_to: i32 = travel_location[1];

            while travel_from != travel_to {
                travel_from += ew_parity;

                let temp_location: [i32; 2] =
                    [travel_location[0], travel_from];

                if locations_visited.contains(&temp_location) {
                    return Ok(temp_location[0].abs() + temp_location[1].abs());
                }

                locations_visited.insert(temp_location);
            }
        } else {
            if ew_parity == 1 {
                ns_parity = -1 * (*direction_parity);
            } else {
                ns_parity = *direction_parity;
            }

            let mut travel_from: i32 = travel_location[0];

            travel_location[0] += ns_parity * distance;

            let travel_to: i32 = travel_location[0];

            while travel_from != travel_to {
                travel_from += ns_parity;

                let temp_location: [i32; 2] =
                    [travel_from, travel_location[1]];

                if locations_visited.contains(&temp_location) {
                    return Ok(temp_location[0].abs() + temp_location[1].abs());
                }

                locations_visited.insert(temp_location);
            ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hC6Vge
code,"// Limit this example to only compatible platforms.
#[cfg(any(
    target_os = ""windows"",
    target_os = ""macos"",
    target_os = ""linux"",
    target_os = ""dragonfly"",
    target_os = ""freebsd"",
    target_os = ""netbsd"",
    target_os = ""openbsd""
))]
fn main() {
    use std::{thread::sleep, time::Duration};

    use simple_logger::SimpleLogger;
    use winit::{
        event::{Event, WindowEvent},
        event_loop::{ControlFlow, EventLoop},
        platform::run_return::EventLoopExtRunReturn,
        window::WindowBuilder,
    };
    let mut event_loop = EventLoop::new();

    SimpleLogger::new().init().unwrap();
    let _window = WindowBuilder::new()
        .with_title(""A fantastic window!"")
        .build(&event_loop)
        .unwrap();

    let mut quit = false;

    while !quit {
        event_loop.run_return(|event, _, control_flow| {
            *control_flow = ControlFlow::Wait;

            if let Event::WindowEvent { event, .. } = &event {
                // Print only Window events to reduce noise
                println!(""{:?}"", event);
            }

            match event {
                Event::WindowEvent {
                    event: WindowEvent::CloseRequested,
                    ..
                } => {
                    quit = true;
                }
                Event::MainEventsCleared => {
                    *control_flow = ControlFlow::Exit;
                }
                _ => (),
            }
        });

        // Sleep for 1/60 second to simulate rendering
        println!(""rendering"");
        sleep(Duration::from_millis(16));
    }
}

#[cfg(any(target_os = ""ios"", target_os = ""android"", target_arch = ""wasm32""))]
fn main() {
    println!(""This platform doesn't support run_return."");
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",zHWv28
code,"// Copyright 2014 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

use alloc::arc::Arc;
use libc;
use std::c_str::CString;
use std::mem;
use std::rt::mutex;
use std::rt::rtio;
use std::rt::rtio::{IoResult, IoError};
use std::sync::atomic;

use super::retry;
use super::net;
use super::util;
use super::c;
use super::process;
use super::file::{fd_t, FileDesc};

fn unix_socket(ty: libc::c_int) -> IoResult<fd_t> {
    match unsafe { libc::socket(libc::AF_UNIX, ty, 0) } {
        -1 => Err(super::last_error()),
        fd => Ok(fd)
    }
}

fn addr_to_sockaddr_un(addr: &CString,
                       storage: &mut libc::sockaddr_storage)
                       -> IoResult<libc::socklen_t> {
    // the sun_path length is limited to SUN_LEN (with null)
    assert!(mem::size_of::<libc::sockaddr_storage>() >=
            mem::size_of::<libc::sockaddr_un>());
    let s = unsafe { &mut *(storage as *mut _ as *mut libc::sockaddr_un) };

    let len = addr.len();
    if len > s.sun_path.len() - 1 {
        #[cfg(unix)] use libc::EINVAL as ERROR;
        #[cfg(windows)] use libc::WSAEINVAL as ERROR;
        return Err(IoError {
            code: ERROR as uint,
            extra: 0,
            detail: Some(""path must be smaller than SUN_LEN"".to_string()),
        })
    }
    s.sun_family = libc::AF_UNIX as libc::sa_family_t;
    for (slot, value) in s.sun_path.mut_iter().zip(addr.iter()) {
        *slot = value;
    }

    // count the null terminator
    let len = mem::size_of::<libc::sa_family_t>() + len + 1;
    return Ok(len as libc::socklen_t);
}

struct Inner {
    fd: fd_t,

    // Unused on Linux, where this lock is not necessary.
    #[allow(dead_code)]
    lock: mutex::NativeMutex
}

impl Inner {
    fn new(fd: fd_t) -> Inner {
        Inner { fd: fd, lock: unsafe { mutex::NativeMutex::new() } }
    }
}

impl Drop for Inner {
    fn drop(&mut self) { unsafe { let _ = libc::close(self.fd); } }
}

fn connect(addr: &CString, ty: libc::c_int,
           timeout: Option<u64>) -> IoResult<Inner> {
    let mut storage = unsafe { mem::zeroed() };
    let len = try!(addr_to_sockaddr_un(addr, &mut storage));
    let inner = Inner::new(try!(unix_socket(ty)));
    let addrp = &storage as *const _ as *const libc::sockaddr;

    match timeout {
        None => {
            match retry(|| unsafe { libc::connect(inner.fd, addrp, len) }) {
                -1 => Err(super::last_error()),
                _  => Ok(inner)
            }
        }
        Some(timeout_ms) => {
            try!(util::connect_timeout(inner.fd, addrp, len, timeout_ms));
            Ok(inner)
        }
    }
}

fn bind(addr: &CString, ty: libc::c_int) -> IoResult<Inner> {
    let mut storage = unsafe { mem::zeroed() };
    let len = try!(addr_to_sockaddr_un(addr, &mut storage));
    let inner = Inner::new(try!(unix_socket(ty)));
    let addrp = &storage as *const _ as *const libc::sockaddr;
    match unsafe {
        libc::bind(inner.fd, addrp, len)
    } {
        -1 => Err(super::last_error()),
        _  => Ok(inner)
    }
}

////////////////////////////////////////////////////////////////////////////////
// Unix Streams
////////////////////////////////////////////////////////////////////////////////

pub struct UnixStream {
    inner: Arc<Inner>,
    read_deadline: u64,
    write_deadline: u64,
}

impl UnixStream {
    pub fn connect(addr: &CString,
                   timeout: Option<u64>) -> IoResult<UnixStream> {
        connect(addr, libc::SOCK_STREAM, timeout).map(|inner| {
            UnixStream::new(Arc::new(inner))
        })
    }

    fn new(inner: Arc<Inner>) -> UnixStream {
        UnixStream {
            inner: inner,
            read_deadline: 0,
            write_deadline: 0,
        }
    }

    fn fd(&self) -> fd_t { self.inner.fd }

    #[cfg(target_os = ""linux"")]
    fn lock_nonblocking(&self) {}

    #[cfg(not(target_os = ""linux""))]
    fn lock_nonblocking<'a>(&'a self) -> net::Guard<'a> {
        let ret = net::Guard {
            fd: self.fd(),
            guard: unsafe { self.inner.lock.lock() },
        };
        assert!(util::set_nonblocking(self.fd(), true).is_ok());
        ret
    }
}

impl rtio::RtioPipe for UnixStream {
    fn read(&mut self, buf: &mut [u8]) -> IoResult<uint> {
        let fd = self.fd();
        let dolock = || self.lock_nonblocking();
        let doread = |nb| unsafe {
            let flags = if nb {c::MSG_DONTWAIT} else {0};
            libc::recv(fd,
                       buf.as_mut_ptr() as *mut libc::c_void,
                       buf.len() as libc::size_t,
                       flags) as libc::c_int
        };
        net::read(fd, self.read_deadline, dolock, doread)
    }

    fn write(&mut self, buf: &[u8]) -> IoRes",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OdoHYR
code,"// Copyright 2014 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

trait Set<T> {
    fn contains(&self, T) -> bool;
    fn set(&mut self, T);
}

impl<'a, T, S> Set<&'a [T]> for S where
    T: Copy,
    S: Set<T>,
{
    fn contains(&self, bits: &[T]) -> bool {
        bits.iter().all(|&bit| self.contains(bit))
    }

    fn set(&mut self, bits: &[T]) {
        for &bit in bits.iter() {
            self.set(bit)
        }
    }
}

fn main() {
    let bits: &[_] = &[0, 1];

    0.contains(bits);
//~^ ERROR the trait `Set<_>` is not implemented for the type `_`
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",v96esl
code,"#![stable(feature = ""metadata_ext"", since = ""1.1.0"")]

use crate::fs::Metadata;
use crate::sys_common::AsInner;

#[allow(deprecated)]
use crate::os::freebsd::raw;

/// OS-specific extensions to [`fs::Metadata`].
///
/// [`fs::Metadata`]: crate::fs::Metadata
#[stable(feature = ""metadata_ext"", since = ""1.1.0"")]
pub trait MetadataExt {
    /// Gain a reference to the underlying `stat` structure which contains
    /// the raw information returned by the OS.
    ///
    /// The contents of the returned `stat` are **not** consistent across
    /// Unix platforms. The `os::unix::fs::MetadataExt` trait contains the
    /// cross-Unix abstractions contained within the raw stat.
    #[stable(feature = ""metadata_ext"", since = ""1.1.0"")]
    #[rustc_deprecated(
        since = ""1.8.0"",
        reason = ""deprecated in favor of the accessor \
                  methods of this trait""
    )]
    #[allow(deprecated)]
    fn as_raw_stat(&self) -> &raw::stat;

    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_dev(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_ino(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_mode(&self) -> u32;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_nlink(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_uid(&self) -> u32;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_gid(&self) -> u32;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_rdev(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_size(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_atime(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_atime_nsec(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_mtime(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_mtime_nsec(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_ctime(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_ctime_nsec(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_birthtime(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_birthtime_nsec(&self) -> i64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_blksize(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_blocks(&self) -> u64;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_flags(&self) -> u32;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_gen(&self) -> u32;
    #[stable(feature = ""metadata_ext2"", since = ""1.8.0"")]
    fn st_lspare(&self) -> u32;
}

#[stable(feature = ""metadata_ext"", since = ""1.1.0"")]
impl MetadataExt for Metadata {
    #[allow(deprecated)]
    fn as_raw_stat(&self) -> &raw::stat {
        // The methods below use libc::stat, so they work fine when libc is built with FreeBSD 12 ABI.
        // This method would just return nonsense.
        #[cfg(freebsd12)]
        panic!(""as_raw_stat not supported with FreeBSD 12 ABI"");
        #[cfg(not(freebsd12))]
        unsafe {
            &*(self.as_inner().as_inner() as *const libc::stat as *const raw::stat)
        }
    }
    fn st_dev(&self) -> u64 {
        self.as_inner().as_inner().st_dev as u64
    }
    fn st_ino(&self) -> u64 {
        self.as_inner().as_inner().st_ino as u64
    }
    fn st_mode(&self) -> u32 {
        self.as_inner().as_inner().st_mode as u32
    }
    fn st_nlink(&self) -> u64 {
        self.as_inner().as_inner().st_nlink as u64
    }
    fn st_uid(&self) -> u32 {
        self.as_inner().as_inner().st_uid as u32
    }
    fn st_gid(&self) -> u32 {
        self.as_inner().as_inner().st_gid as u32
    }
    fn st_rdev(&self) -> u64 {
        self.as_inner().as_inner().st_rdev as u64
    }
    fn st_size(&self) -> u64 {
        self.as_inner().as_inner().st_size as u64
    }
    fn st_atime(&self) -> i64 {
        self.as_inner().as_inner().st_atime as i64
    }
    fn st_atime_nsec(&self) -> i64 {
        self.as_inner().as_inner().st_atime_nsec as i64
    }
    fn st_mtime(&self) -> i64 {
        self.as_inner().as_inner().st_mtime as i64
    }
    fn st_mtime_nsec(&self) -> i64 {
        self.as_inner().as_inner().st_mtime_nsec as i64
    }
    fn st_ctime(&self) -> i64 {
        self.as_inner().as_inner().st_ctime as i64
    }
    fn st_ctime_nsec(&self) -> i64 {
        self.as_inner().as_inner().st_ctime_nsec as i64
    }
    fn st_birthtime(&self) -> i64 {
        self.as_inner().as_inner().st_birthtime as i64
    }
    fn st_birthtime_nsec(&self) -> i64 {
        self.as_inner().as_inner().st_birthtime_nsec as i64
    }
    fn st_blksize(&self) -> u64 {
        self.as_inner().as_inner().st_blksize as u64
    }
    fn st_blocks(&self) -> u64 {
        self.as_inner().as_inner().st_blocks as u64
    }
    fn st_gen(&self) -> u32 {
        self.as_inner().as_inner().st_gen as u32
    }
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rrwNgn
code,"use std::mem;

pub use vecmath::{
    Vector3,
    Matrix4,
    vec3_add,
    vec3_sub,
    vec3_scale,
    row_mat4_mul,
    row_mat4_transform,
    mat4_transposed,
    mat4_inv,
    mat4_id,
};

pub use quaternion::id as quaternion_id;
pub use quaternion::mul as quaternion_mul;
pub use quaternion::conj as quaternion_conj;
pub use quaternion::{self, Quaternion};

pub use dual_quaternion::{self, DualQuaternion};

pub fn lerp_quaternion(q1: &Quaternion<f32>, q2: &Quaternion<f32>, blend_factor: &f32) -> Quaternion<f32> {

    let dot = q1.0 * q2.0 + q1.1[0] * q2.1[0] + q1.1[1] * q2.1[1] + q1.1[2] * q2.1[2];

    let s = 1.0 - blend_factor;
    let t: f32 = if dot > 0.0 { *blend_factor } else { -blend_factor };

    let w = s * q1.0 + t * q2.0;
    let x = s * q1.1[0] + t * q2.1[0];
    let y = s * q1.1[1] + t * q2.1[1];
    let z = s * q1.1[2] + t * q2.1[2];

    let inv_sqrt_len = inv_sqrt(w * w + x * x + y * y + z * z);
    (w * inv_sqrt_len, [x  * inv_sqrt_len, y  * inv_sqrt_len, z  * inv_sqrt_len])
}

/// Dual-quaternion linear blending. See http://dcgi.felk.cvut.cz/home/zara/papers/TCD-CS-2006-46.pdf
pub fn lerp_dual_quaternion(q1: DualQuaternion<f32>, q2: DualQuaternion<f32>, blend_factor: f32) -> DualQuaternion<f32> {
    let dot = dual_quaternion::dot(q1, q2);

    let s = 1.0 - blend_factor;
    let t: f32 = if dot > 0.0 { blend_factor } else { -blend_factor };

    let blended_sum = dual_quaternion::add(dual_quaternion::scale(q1, s), dual_quaternion::scale(q2, t));
    dual_quaternion::normalize(blended_sum)
}

/// rotation matrix for `a` radians about z
pub fn mat4_rotate_z(a: f32) -> Matrix4<f32> {
    [
        [a.cos(), -a.sin(), 0.0, 0.0],
        [a.sin(), a.cos(), 0.0, 0.0],
        [0.0, 0.0, 1.0, 0.0],
        [0.0, 0.0, 0.0, 1.0],
    ]
}

pub fn matrix_to_quaternion(m: &Matrix4<f32>) -> Quaternion<f32> {

    let mut q = [0.0, 0.0, 0.0, 0.0];

    let next = [1, 2, 0];

    let trace = m[0][0] + m[1][1] + m[2][2];

    if trace > 0.0 {

        let t = trace + 1.0;
        let s = inv_sqrt(t) * 0.5;

        q[3] = s * t;
        q[0] = (m[1][2] - m[2][1]) * s;
        q[1] = (m[2][0] - m[0][2]) * s;
        q[2] = (m[0][1] - m[1][0]) * s;

    } else {

        let mut i = 0;

        if m[1][1] > m[0][0] {
            i = 1;
        }

        if m[2][2] > m[i][i] {
            i = 2;
        }

        let j = next[i];
        let k = next[j];

        let t = (m[i][i] - (m[j][j] + m[k][k])) + 1.0;
        let s = inv_sqrt(t) * 0.5;

        q[i] = s * t;
        q[3] = (m[j][k] - m[k][j]) * s;
        q[j] = (m[i][j] + m[j][i]) * s;
        q[k] = (m[i][k] + m[k][i]) * s;

    }

    (q[3], [q[0], q[1], q[2]])
}

///
/// See http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/
///
pub fn quaternion_to_matrix(q: Quaternion<f32>) -> Matrix4<f32> {

    let w = q.0;
    let x = q.1[0];
    let y = q.1[1];
    let z = q.1[2];

    let x2 = x + x;
    let y2 = y + y;
    let z2 = z + z;

    let xx2 = x2 * x;
    let xy2 = x2 * y;
    let xz2 = x2 * z;

    let yy2 = y2 * y;
    let yz2 = y2 * z;
    let zz2 = z2 * z;

    let wy2 = y2 * w;
    let wz2 = z2 * w;
    let wx2 = x2 * w;

    [
        [1.0 - yy2 - zz2, xy2 + wz2, xz2 - wy2, 0.0],
        [xy2 - wz2, 1.0 - xx2 - zz2, yz2 + wx2, 0.0],
        [xz2 + wy2, yz2 - wx2, 1.0 - xx2 - yy2, 0.0],
        [0.0, 0.0,  0.0,  1.0]
    ]

}

pub fn inv_sqrt(x: f32) -> f32 {

    let x2: f32 = x * 0.5;
    let mut y: f32 = x;

    let mut i: i32 = unsafe { mem::transmute(y) };
    i = 0x5f3759df - (i >> 1);
    y = unsafe { mem::transmute(i) };

    y = y * (1.5 - (x2 * y * y));
    y

}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EabOig
code,"use failure::format_err;
use log::error;
use rusqlite::types::ToSql;
use serde_derive::{Deserialize, Serialize};

use crate::db::{self, Database};
use crate::errors::*;

#[derive(Deserialize, Serialize, Clone)]
pub struct UserInfo {
    pub id: Option<i32>,
    pub github: String,
    pub slack: String,
    pub mute_direct_messages: bool,
}

#[derive(Clone)]
pub struct UserConfig {
    db: Database,
}

impl UserInfo {
    pub fn new(git_user: &str, slack_user: &str) -> UserInfo {
        UserInfo {
            id: None,
            github: git_user.to_string(),
            slack: slack_user.to_string(),
            mute_direct_messages: false,
        }
    }
}

impl UserConfig {
    pub fn new(db: Database) -> UserConfig {
        UserConfig { db }
    }

    pub fn insert(&mut self, git_user: &str, slack_user: &str) -> Result<()> {
        self.insert_info(&UserInfo::new(git_user, slack_user))
    }

    pub fn insert_info(&mut self, user: &UserInfo) -> Result<()> {
        let conn = self.db.connect()?;
        conn.execute(
            ""INSERT INTO users (github_name, slack_name, mute_direct_messages) VALUES (?1, ?2, ?3)"",
            &[
                &user.github,
                &user.slack,
                &db::to_tinyint(user.mute_direct_messages) as &dyn ToSql,
            ],
        )
        .map_err(|e| format_err!(""Error inserting user {}: {}"", user.github, e))?;

        Ok(())
    }

    pub fn update(&mut self, user: &UserInfo) -> Result<()> {
        let conn = self.db.connect()?;
        conn.execute(
            ""UPDATE users set github_name = ?1, slack_name = ?2, mute_direct_messages = ?3 where id = ?4"",
            &[&user.github, &user.slack, &db::to_tinyint(user.mute_direct_messages) as &dyn ToSql, &user.id],
        ).map_err(|e| format_err!(""Error updating user {}: {}"", user.github, e))?;

        Ok(())
    }

    pub fn delete(&mut self, user_id: i32) -> Result<()> {
        let conn = self.db.connect()?;
        conn.execute(""DELETE from users where id = ?1"", &[&user_id])
            .map_err(|e| format_err!(""Error deleting user {}: {}"", user_id, e))?;

        Ok(())
    }

    pub fn slack_user_name(&self, github_name: &str) -> Option<String> {
        self.lookup_info(github_name).map(|u| u.slack)
    }

    pub fn slack_user_mention(&self, github_name: &str) -> Option<String> {
        self.lookup_info(github_name).and_then(|u| {
            if u.mute_direct_messages {
                None
            } else {
                Some(mention(&u.slack))
            }
        })
    }

    pub fn get_all(&self) -> Result<Vec<UserInfo>> {
        let conn = self.db.connect()?;
        let mut stmt = conn.prepare(
            ""SELECT id, slack_name, github_name, mute_direct_messages FROM users ORDER BY github_name"",
        )?;
        let found = stmt.query_map([], |row| {
            Ok(UserInfo {
                id: row.get(0)?,
                slack: row.get(1)?,
                github: row.get(2)?,
                mute_direct_messages: db::to_bool(row.get(3)?),
            })
        })?;

        let mut users = vec![];
        for user in found {
            users.push(user?);
        }

        Ok(users)
    }

    pub fn lookup_info(&self, github_name: &str) -> Option<UserInfo> {
        match self.do_lookup_info(github_name) {
            Ok(u) => u,
            Err(e) => {
                error!(""Error looking up user: {}"", e);
                None
            }
        }
    }

    fn do_lookup_info(&self, github_name: &str) -> Result<Option<UserInfo>> {
        let github_name = github_name.to_string();
        let conn = self.db.connect()?;
        let mut stmt = conn.prepare(
            ""SELECT id, slack_name, mute_direct_messages FROM users where github_name = ?1"",
        )?;
        let found = stmt.query_map(&[&github_name], |row| {
            Ok(UserInfo {
                id: row.get(0)?,
                slack: row.get(1)?,
                github: github_name.clone(),
                mute_direct_messages: db::to_bool(row.get(2)?),
            })
        })?;

        let user = found.into_iter().flatten().next();
        Ok(user)
    }
}

pub fn mention(username: &str) -> String {
    format!(""@{}"", username)
}

#[cfg(test)]
mod tests {
    use super::*;
    use tempdir::TempDir;

    fn new_test() -> (UserConfig, TempDir) {
        let temp_dir = TempDir::new(""users.rs"").unwrap();
        let db_file = temp_dir.path().join(""db.sqlite3"");
        let db = Database::new(&db_file.to_string_lossy()).expect(""create temp database"");

        (UserConfig::new(db), temp_dir)
    }

    #[test]
    fn test_slack_user_name_no_defaults() {
        let (users, _temp) = new_test();

        assert_eq!(None, users.slack_user_name(""joe""));
        assert_eq!(None, users.slack_user_mention(""joe""));
    }

    #[test]
    fn test_slack_user_name() {
        let (mut users, _temp) = new_test();

        users.insert(""some-git-user"", ""the-slacker"").unwrap();

        assert_eq!(
            Some(""the-slacker"".into()),
            users.slack_user_name(""some-git-user"")
        );
        assert_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",joYvD7
code,"use cpu::Cpu;
use cpu::addressing::*;
use cpu::instructions::*;
use cpu::instructions as instr;
use bus::Bus;
use cartridge::Cartridge;

// ADD 8-bit tests

#[test]
fn add8_no_flags() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0xDE);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_a(0x11);

    add_8(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.a(), 0xEF);
    assert_eq!(cpu.regs.f(), 0);
}

#[test]
fn add8_carry() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0xF0);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_a(0xF0);

    add_8(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.a(), 0xE0);
    assert_eq!(cpu.regs.f(), 0b0001 << 4);
}

#[test]
fn add8_half_carry() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0x0F);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_a(0x0F);

    add_8(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.a(), 0x1E);
    assert_eq!(cpu.regs.f(), 0b0010 << 4);
}

#[test]
fn add8_zero() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0xFF);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_a(0x01);

    add_8(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.a(), 0);
    assert_eq!(cpu.regs.f(), 0b1011 << 4);
}

// ADD 16-bit tests

#[test]
fn add16_no_flags() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let dest = RegisterAddressing(Register::HL);
    let inc = ImmediateAddressing(0x01);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_hl(0x11);

    add_16(&mut cpu, &mut bus, &dest, &inc);

    assert_eq!(cpu.regs.hl(), 0x12);
    assert_eq!(cpu.regs.f(), 0b1000 << 4);
}

#[test]
fn add16_carry_flag() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let dest = RegisterAddressing(Register::HL);
    let inc = ImmediateAddressing(0xEEEE);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_hl(0x2000);

    add_16(&mut cpu, &mut bus, &dest, &inc);

    assert_eq!(cpu.regs.hl(),  0x0EEE);
    assert_eq!(cpu.regs.f(), 0b1001 << 4);
}

#[test]
fn add16_half_carry_flag() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let dest = RegisterAddressing(Register::HL);
    let inc = ImmediateAddressing(0xBBB);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_hl(0xBBB);

    add_16(&mut cpu, &mut bus, &dest, &inc);

    assert_eq!(cpu.regs.hl(), 0x1776);
    assert_eq!(cpu.regs.f(), 0b1010 << 4);
}

// ADD SP tests

#[test]
fn add_sp_carry_flag() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0x10);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_sp(0x00F0);

    add_sp(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.sp(), 0x100);
    assert_eq!(cpu.regs.f(), 0b0001 << 4);
}

#[test]
fn add_sp_half_carry_flag() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let inc = ImmediateAddressing(0xF);

    cpu.regs.set_f(0b1111 << 4);
    cpu.regs.set_sp(0xF01);

    add_sp(&mut cpu, &mut bus, &inc);

    assert_eq!(cpu.regs.sp(), 0xF10);
    assert_eq!(cpu.regs.f(), 0b010 << 4);
}

// ADC tests

#[test]
fn adc_no_carry_no_flags() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let n = ImmediateAddressing(0x12);

    cpu.regs.set_a(0x34);
    cpu.regs.set_f(0);

    adc(&mut cpu, &mut bus, &n);

    assert_eq!(cpu.regs.a(), 0x46);
    assert_eq!(cpu.regs.f(), 0);
}

#[test]
fn adc_no_carry_does_carry() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let n = ImmediateAddressing(0xFE);

    cpu.regs.set_a(0x10);
    cpu.regs.set_f(0);

    adc(&mut cpu, &mut bus, &n);

    assert_eq!(cpu.regs.a(), 0x0E);
    assert_eq!(cpu.regs.f(), 0b0001 << 4);
}

#[test]
fn adc_with_carry_does_carry() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge::from_vec(vec![0; 65536]);
    let mut bus = Bus::new(&mut cartridge);
    let n = ImmediateAddressing(0xFE);

    cpu.regs.set_a(0x10);
    cpu.regs.set_f(0b0001 << 4);

    adc(&mut cpu, &mut bus, &n);

    assert_eq!(cpu.regs.a(), 0x0F);
    assert_eq!(cpu.regs.f(), 0b0001 << 4);
}

#[test]
fn adc_half_carry() {
    let mut cpu = Cpu::new();
    let mut cartridge = Cartridge",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W1fedT
code,"use std::fmt::{Formatter,Display,Error};

#[derive(Clone,Debug,PartialEq,Eq,Hash,RustcEncodable,RustcDecodable)]
pub enum Endianess {
    Little,
    Big,
}

#[derive(Clone,Debug,PartialEq,Eq,Hash,RustcEncodable,RustcDecodable)]
pub enum Rvalue {
    Constant(u64),
    Undefined,
    Variable{ width: u16, name: String, subscript: Option<u32> },
    Memory{ offset: Box<Rvalue>, bytes: u16, endianess: Endianess, name: String },
}

#[derive(Clone,Debug,PartialEq,Eq,Hash,RustcEncodable,RustcDecodable)]
pub enum Lvalue {
    Undefined,
    Variable{ width: u16, name: String, subscript: Option<u32> },
    Memory{ offset: Box<Rvalue>, bytes: u16, endianess: Endianess, name: String },
}

impl Rvalue {
    pub fn from_lvalue(rv: &Lvalue) -> Rvalue {
        match rv {
            &Lvalue::Undefined => Rvalue::Undefined,
            &Lvalue::Variable{ width: ref w, name: ref n, subscript: ref s} =>
                Rvalue::Variable{ width: w.clone(), name: n.clone(), subscript: s.clone()},
            &Lvalue::Memory{ offset: ref o, bytes: ref b, endianess: ref e, name: ref n} =>
                Rvalue::Memory{ offset: o.clone(), bytes: b.clone(), endianess: e.clone(), name: n.clone()},
        }
    }
}

impl Display for Rvalue {
    fn fmt(&self, f: &mut Formatter) -> Result<(), Error> {
        match self {
            &Rvalue::Constant(c) => f.write_fmt(format_args!(""{:x}"",c)),
            &Rvalue::Undefined => f.write_str(""undef""),
            &Rvalue::Variable{ name: ref n,.. } => f.write_str(n),
            &Rvalue::Memory{ offset: ref o, name: ref n,..} => f.write_fmt(format_args!(""{}[{}]"",n,o)),
        }
    }
}

impl Lvalue {
    pub fn from_rvalue(rv: &Rvalue) -> Option<Lvalue> {
        match rv {
            &Rvalue::Undefined => Some(Lvalue::Undefined),
            &Rvalue::Variable{ width: ref w, name: ref n, subscript: ref s} =>
                Some(Lvalue::Variable{ width: w.clone(), name: n.clone(), subscript: s.clone()}),
            &Rvalue::Memory{ offset: ref o, bytes: ref b, endianess: ref e, name: ref n} =>
                Some(Lvalue::Memory{ offset: o.clone(), bytes: b.clone(), endianess: e.clone(), name: n.clone()}),
            _ => None,
        }
    }

    pub fn to_rv(&self) -> Rvalue {
        Rvalue::from_lvalue(self)
    }
}

pub trait ToRvalue {
    fn to_rv(&self) -> Rvalue;
}

impl ToRvalue for Rvalue {
    fn to_rv(&self) -> Rvalue {
        self.clone()
    }
}

impl ToRvalue for Lvalue {
    fn to_rv(&self) -> Rvalue {
        Rvalue::from_lvalue(self)
    }
}

impl ToRvalue for u64 {
    fn to_rv(&self) -> Rvalue {
        Rvalue::Constant(self.clone())
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use msgpack;

    #[test]
    fn construct() {
        let u = Rvalue::Undefined;
        let c = Rvalue::Constant(5);
        let v = Rvalue::Variable{ name: ""n"".to_string(), width: 32, subscript: None };
        let m = Rvalue::Memory{ offset: Box::new(Rvalue::Undefined), bytes: 1, endianess: Endianess::Little, name: ""ram"".to_string() };

        let u2 = u.clone();
        let c2 = c.clone();
        let v2 = v.clone();
        let m2 = m.clone();

        println!(""{:?} {:?} {:?} {:?}"",u,c,v,m);

        assert_eq!(u,u2);
        assert_eq!(c,c2);
        assert_eq!(v,v2);
        assert_eq!(m,m2);
    }

    #[test]
    fn convert_lvalue_rvalue() {
        let ru = Rvalue::Undefined;
        let rc = Rvalue::Constant(5);
        let rv = Rvalue::Variable{ name: ""n"".to_string(), width: 32, subscript: None };
        let rm = Rvalue::Memory{ offset: Box::new(Rvalue::Undefined), bytes: 1, endianess: Endianess::Little, name: ""ram"".to_string() };

        let lu = Lvalue::Undefined;
        let lv = Lvalue::Variable{ name: ""n"".to_string(), width: 32, subscript: None };
        let lm = Lvalue::Memory{ offset: Box::new(Rvalue::Undefined), bytes: 1, endianess: Endianess::Little, name: ""ram"".to_string() };

        assert_eq!(Some(lu.clone()), Lvalue::from_rvalue(&ru));
        assert_eq!(Some(lv.clone()), Lvalue::from_rvalue(&rv));
        assert_eq!(Some(lm.clone()), Lvalue::from_rvalue(&rm));
        assert_eq!(None, Lvalue::from_rvalue(&rc));

        assert_eq!(ru, Rvalue::from_lvalue(&lu));
        assert_eq!(rv, Rvalue::from_lvalue(&lv));
        assert_eq!(rm, Rvalue::from_lvalue(&lm));
    }

    #[test]
    fn marshal() {
        let a = Rvalue::Undefined;
        let b = Rvalue::Constant(42);
        let c = Rvalue::Variable{ name: ""test"".to_string(), width: 8, subscript: Some(8) };
        let d = Rvalue::Memory{ offset: Box::new(Rvalue::Constant(5)), bytes: 2, endianess: Endianess::Little, name: ""bank1"".to_string()};

        let a2 = msgpack::Encoder::to_msgpack(&a).ok().unwrap();
        let b2 = msgpack::Encoder::to_msgpack(&b).ok().unwrap();
        let c2 = msgpack::Encoder::to_msgpack(&c).ok().unwrap();
        let d2 = msgpack::Encoder::to_msgpack(&d).ok().unwrap();

        let a3 = msgpack::from_msgpack(&a2).ok().unwrap();
        let b3 = msgpack::from_msgpack(&b2).ok().unwrap();
        let c3 = msgpack::from_msgpack(&c2).ok().unwrap();
        let d3 = msgpack::from_m",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8_EuS1
code,"/* AES-128 ECB mode decrypter
 *
 * Dmitry Vasiliev <dima@hlabs.org>
 */

extern crate serialize;

extern crate aes_lib;

use std::path::Path;
use std::io::fs::File;

use serialize::base64::FromBase64;

use aes_lib::decrypt_aes_ecb;

fn decrypt_aes_ecb_file(mut file: File, key: &[u8]) -> Vec<u8> {
    let data = file.read_to_end().unwrap();
    let text = String::from_utf8(data).unwrap();
    let encrypted = text.from_base64().unwrap();
    decrypt_aes_ecb(encrypted.as_slice(), key)
}

/*
 * Main entry point
 */
fn main() {
    let key = b""YELLOW SUBMARINE"";
    let path = Path::new(""aes_ecb_encrypted.txt"");
    let decrypted = match File::open(&path) {
        Ok(file) => decrypt_aes_ecb_file(file, key),
        Err(err) => panic!(""Unable to open aes_ecb_encrypted.txt: {}"", err)
    };
    println!(""Decrypted => \""{}\"""", String::from_utf8(decrypted).unwrap());
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RisEHy
code,"use ::{BroadcastMode, Instruction, MaskReg, MergeMode, Mnemonic, OperandSize, Reg, RoundingMode};
use ::RegType::*;
use ::instruction_def::*;
use ::Operand::*;
use ::Reg::*;
use ::RegScale::*;

fn vandpd_1() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM5)), operand2: Some(Direct(XMM7)), operand3: Some(Direct(XMM7)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 193, 84, 239], OperandSize::Dword)
}

fn vandpd_2() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM6)), operand2: Some(Direct(XMM4)), operand3: Some(IndirectScaledDisplaced(EDI, Eight, 1182721905, Some(OperandSize::Xmmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 217, 84, 52, 253, 113, 231, 126, 70], OperandSize::Dword)
}

fn vandpd_3() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM2)), operand2: Some(Direct(XMM1)), operand3: Some(Direct(XMM1)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 241, 84, 209], OperandSize::Qword)
}

fn vandpd_4() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM2)), operand2: Some(Direct(XMM3)), operand3: Some(IndirectScaledDisplaced(RAX, Two, 926970353, Some(OperandSize::Xmmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 225, 84, 20, 69, 241, 113, 64, 55], OperandSize::Qword)
}

fn vandpd_5() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(YMM5)), operand2: Some(Direct(YMM1)), operand3: Some(Direct(YMM6)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 245, 84, 238], OperandSize::Dword)
}

fn vandpd_6() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(YMM4)), operand2: Some(Direct(YMM0)), operand3: Some(IndirectScaledIndexedDisplaced(EDI, EDX, Eight, 1316063625, Some(OperandSize::Ymmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 253, 84, 164, 215, 137, 137, 113, 78], OperandSize::Dword)
}

fn vandpd_7() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(YMM1)), operand2: Some(Direct(YMM0)), operand3: Some(Direct(YMM0)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 253, 84, 200], OperandSize::Qword)
}

fn vandpd_8() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(YMM3)), operand2: Some(Direct(YMM2)), operand3: Some(IndirectDisplaced(RDI, 1690412679, Some(OperandSize::Ymmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: None, sae: false, mask: None, broadcast: None }, &[197, 237, 84, 159, 135, 166, 193, 100], OperandSize::Qword)
}

fn vandpd_9() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM1)), operand2: Some(Direct(XMM2)), operand3: Some(Direct(XMM6)), operand4: None, lock: false, rounding_mode: None, merge_mode: Some(MergeMode::Zero), sae: false, mask: Some(MaskReg::K3), broadcast: None }, &[98, 241, 237, 139, 84, 206], OperandSize::Dword)
}

fn vandpd_10() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM7)), operand2: Some(Direct(XMM1)), operand3: Some(IndirectDisplaced(ECX, 20964165, Some(OperandSize::Xmmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: Some(MergeMode::Zero), sae: false, mask: Some(MaskReg::K1), broadcast: None }, &[98, 241, 245, 137, 84, 185, 69, 227, 63, 1], OperandSize::Dword)
}

fn vandpd_11() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM5)), operand2: Some(Direct(XMM4)), operand3: Some(IndirectScaledIndexedDisplaced(ESI, EDI, Four, 2118735305, Some(OperandSize::Qword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: Some(MergeMode::Zero), sae: false, mask: Some(MaskReg::K6), broadcast: Some(BroadcastMode::Broadcast1To2) }, &[98, 241, 221, 158, 84, 172, 190, 201, 85, 73, 126], OperandSize::Dword)
}

fn vandpd_12() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM1)), operand2: Some(Direct(XMM12)), operand3: Some(Direct(XMM14)), operand4: None, lock: false, rounding_mode: None, merge_mode: Some(MergeMode::Zero), sae: false, mask: Some(MaskReg::K3), broadcast: None }, &[98, 209, 157, 139, 84, 206], OperandSize::Qword)
}

fn vandpd_13() {
    run_test(&Instruction { mnemonic: Mnemonic::VANDPD, operand1: Some(Direct(XMM14)), operand2: Some(Direct(XMM23)), operand3: Some(IndirectScaledIndexed(RDX, RDX, Eight, Some(OperandSize::Xmmword), None)), operand4: None, lock: false, rounding_mode: None, merge_mode: Some(MergeMode::Zero), sae: false, mask: Some(MaskReg::K7), broadcast: None }, &[98, 113, 197, 135, 8",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tJWhtT
code,"pub mod feed;
pub mod link_checking;
pub mod sass;
pub mod sitemap;
pub mod tpls;

use std::collections::HashMap;
use std::fs::remove_dir_all;
use std::path::{Path, PathBuf};
use std::sync::{Arc, Mutex, RwLock};

use lazy_static::lazy_static;
use rayon::prelude::*;
use tera::{Context, Tera};
use walkdir::{DirEntry, WalkDir};

use config::{get_config, Config};
use errors::{bail, Error, Result};
use front_matter::InsertAnchor;
use library::{find_taxonomies, Library, Page, Paginator, Section, Taxonomy};
use relative_path::RelativePathBuf;
use std::time::Instant;
use templates::render_redirect_template;
use utils::fs::{
    copy_directory, copy_file_if_needed, create_directory, create_file, ensure_directory_exists,
};
use utils::minify;
use utils::net::get_available_port;
use utils::templates::render_template;

lazy_static! {
    /// The in-memory rendered map content
    pub static ref SITE_CONTENT: Arc<RwLock<HashMap<RelativePathBuf, String>>> = Arc::new(RwLock::new(HashMap::new()));
}

/// Where are we building the site
#[derive(Debug, Clone, Copy, Eq, PartialEq)]
pub enum BuildMode {
    /// On the filesystem -> `zola build`, The path is the `output_path`
    Disk,
    /// In memory for the content -> `zola serve`
    Memory,
}

#[derive(Debug)]
pub struct Site {
    /// The base path of the zola site
    pub base_path: PathBuf,
    /// The parsed config for the site
    pub config: Config,
    pub tera: Tera,
    imageproc: Arc<Mutex<imageproc::Processor>>,
    // the live reload port to be used if there is one
    pub live_reload: Option<u16>,
    pub output_path: PathBuf,
    content_path: PathBuf,
    pub static_path: PathBuf,
    pub taxonomies: Vec<Taxonomy>,
    /// A map of all .md files (section and pages) and their permalink
    /// We need that if there are relative links in the content that need to be resolved
    pub permalinks: HashMap<String, String>,
    /// Contains all pages and sections of the site
    pub library: Arc<RwLock<Library>>,
    /// Whether to load draft pages
    include_drafts: bool,
    build_mode: BuildMode,
}

impl Site {
    /// Parse a site at the given path. Defaults to the current dir
    /// Passing in a path is used in tests and when --root argument is passed
    pub fn new<P: AsRef<Path>, P2: AsRef<Path>>(path: P, config_file: P2) -> Result<Site> {
        let path = path.as_ref();
        let config_file = config_file.as_ref();
        let mut config = get_config(config_file);
        config.load_extra_syntaxes(path)?;

        if let Some(theme) = config.theme.clone() {
            // Grab data from the extra section of the theme
            config.merge_with_theme(&path.join(""themes"").join(&theme).join(""theme.toml""))?;
        }

        let tera = tpls::load_tera(path, &config)?;

        let content_path = path.join(""content"");
        let static_path = path.join(""static"");
        let imageproc =
            imageproc::Processor::new(content_path.clone(), &static_path, &config.base_url);
        let output_path = path.join(config.output_dir.clone());

        let site = Site {
            base_path: path.to_path_buf(),
            config,
            tera,
            imageproc: Arc::new(Mutex::new(imageproc)),
            live_reload: None,
            output_path,
            content_path,
            static_path,
            taxonomies: Vec::new(),
            permalinks: HashMap::new(),
            include_drafts: false,
            // We will allocate it properly later on
            library: Arc::new(RwLock::new(Library::new(0, 0, false))),
            build_mode: BuildMode::Disk,
        };

        Ok(site)
    }

    /// Enable some `zola serve` related options
    pub fn enable_serve_mode(&mut self) {
        SITE_CONTENT.write().unwrap().clear();
        self.config.enable_serve_mode();
        self.build_mode = BuildMode::Memory;
    }

    /// Set the site to load the drafts.
    /// Needs to be called before loading it
    pub fn include_drafts(&mut self) {
        self.include_drafts = true;
    }

    /// The index sections are ALWAYS at those paths
    /// There are one index section for the default language + 1 per language
    fn index_section_paths(&self) -> Vec<(PathBuf, Option<String>)> {
        let mut res = vec![(self.content_path.join(""_index.md""), None)];
        for language in &self.config.languages {
            res.push((
                self.content_path.join(format!(""_index.{}.md"", language.code)),
                Some(language.code.clone()),
            ));
        }
        res
    }

    /// We avoid the port the server is going to use as it's not bound yet
    /// when calling this function and we could end up having tried to bind
    /// both http and websocket server to the same port
    pub fn enable_live_reload(&mut self, port_to_avoid: u16) {
        self.live_reload = get_available_port(port_to_avoid);
    }

    /// Only used in `zola serve` to re-use the initial websocket port
    pub fn enable_live_reload_with_port(&mut self, live_reload_port: u16) {
        self.live_reload = Some(live_reload_port);
    }

    /// Reloads the temp",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wypq4X
code,"use std::collections::HashMap;

pub fn count (c: char, strain: &str) -> usize {
  *nucleotide_counts(strain).get(&c).unwrap()
}

pub fn nucleotide_counts (strain: &str) -> HashMap<char, usize> {
  let mut map = HashMap::new();

  // Default values
  for c in ""AGTC"".chars() { map.insert(c, 0); }

  // Count occurrences
  for c in strain.chars() { *map.get_mut(&c).unwrap() += 1 }

  map
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W4Ec2w
code,"
use ::structopt::StructOpt;

///
/// The structure of the commands for the app.
///
/// A large amount of this is generated by StructOpt.
/// See that project for how to write large amounts of this.
///
/// The gist however is that we make a struct that will hold
/// all of our arguments. Commands are then parsed, and then
/// turned into this struct.
///
#[derive(StructOpt, Debug)]
#[structopt(name = ""ls-pretty"", about = ""Like ls, but pretty."")]
pub struct Args {

    /// Enable logging, use multiple `v`s to increase verbosity.
    #[structopt(short = ""a"", long = ""all"", help = ""Set to show all hidden files and directories."")]
    pub all: bool,

    /// Set the minimum width of the directory column.
    #[structopt(default_value = ""0"", short = ""d"", long = ""directory-width"", help = ""Minimum width of the directory column."")]
    pub dirs_width: usize,

    /// Optional path to the folder we are going to perform the list on.
    #[structopt(default_value = ""."", help = ""Set to show all hidden files and directories."")]
    pub path: String,

}

impl Args {

    ///
    /// Builds a new args from the main arguments given.
    ///
    pub fn new_from_args() -> Args {
        return Args::from_args();
    }

}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ep59c4
code,"pub use rust_sodium::crypto::box_::curve25519xsalsa20poly1305 as crypto_box;
pub use rust_sodium::crypto::hash::sha256;
pub use rust_sodium::crypto::scalarmult::curve25519 as scalarmult;

pub use self::crypto_box::{PrecomputedKey, PublicKey, SecretKey};

use auth_failure::AuthFailure;

/// Number of bytes in a password digest.
pub const PASSWORD_DIGEST_BYTES: usize = sha256::DIGESTBYTES;

/// Implements the fancy password hashing used by the FCP, decribed in paragraph 4
/// of https://github.com/fc00/spec/blob/10b349ab11/cryptoauth.md#hello-repeathello
pub fn shared_secret_from_password(
    password: &[u8],
    my_perm_sk: &SecretKey,
    their_perm_pk: &PublicKey,
) -> PrecomputedKey {
    assert_eq!(scalarmult::SCALARBYTES, crypto_box::PUBLICKEYBYTES);
    assert_eq!(scalarmult::GROUPELEMENTBYTES, crypto_box::SECRETKEYBYTES);
    let product = scalarmult::scalarmult(
        &scalarmult::Scalar::from_slice(&my_perm_sk.0).unwrap(),
        &scalarmult::GroupElement::from_slice(&their_perm_pk.0).unwrap(),
    )
    .expect(""their_perm_pk should not be zeroed"");
    let mut shared_secret_preimage = product.0.to_vec();
    shared_secret_preimage.extend(&sha256::hash(password).0);
    let shared_secret = sha256::hash(&shared_secret_preimage).0;
    PrecomputedKey::from_slice(&shared_secret).unwrap()
}

/// AuthNone Hello packets: my_sk and their_pk are permanent keys
/// Key packets: my_sk is permanent, their_pk is temporary
/// data packets: my_sk and their_pk are temporary keys
pub fn shared_secret_from_keys(my_sk: &SecretKey, their_pk: &PublicKey) -> PrecomputedKey {
    crypto_box::precompute(their_pk, my_sk)
}

/// unseals the concatenation of fields msg_auth_code, sender_encrypted_temp_pk, and
/// encrypted_data of a packet.
/// If authentication was successful, returns the sender's temp_pk and the
/// data, unencrypted.
pub fn open_packet_end(
    packet_end: &[u8],
    shared_secret: &PrecomputedKey,
    nonce: &crypto_box::Nonce,
) -> Result<(PublicKey, Vec<u8>), AuthFailure> {
    if packet_end.len() < crypto_box::MACBYTES {
        return Err(AuthFailure::PacketTooShort(format!(
            ""Packet end: {}"",
            packet_end.len()
        )));
    }
    match crypto_box::open_precomputed(packet_end, nonce, &shared_secret) {
        Err(_) => Err(AuthFailure::CorruptedPacket(
            ""Could not decrypt handshake packet end."".to_owned(),
        )),
        Ok(buf) => {
            let mut pk = [0u8; crypto_box::PUBLICKEYBYTES];
            pk.copy_from_slice(&buf[0..crypto_box::PUBLICKEYBYTES]);
            let their_temp_pk = PublicKey::from_slice(&pk).unwrap();
            let data = buf[crypto_box::PUBLICKEYBYTES..].to_vec();
            Ok((their_temp_pk, data))
        }
    }
}

/// Randomly generates a secret key and a corresponding public key.
///
/// THREAD SAFETY: `gen_keypair()` is thread-safe provided that you
/// have called `fcp_cryptoauth::init()` (or `rust_sodium::init()`)
/// once before using any other function from `fcp_cryptoauth` or
/// `rust_sodium`.
pub fn gen_keypair() -> (PublicKey, SecretKey) {
    crypto_box::gen_keypair()
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0C6W3d
code,"
use std::collections::hashmap::{Occupied, Vacant, HashMap};
use std::io::BufferedReader;
use std::io::File;
use std::os;
use std::str::StrSlice;

fn main()
{
    let args = os::args();
    let path = Path::new(args[1].as_slice());
    let mut file = BufferedReader::new(File::open(&path));
    let mut counter: HashMap<String, uint> = HashMap::new();

    for line_opt in file.lines()
    {
        let line = line_opt.ok().expect(""Could not read line"");
        for word in line.as_slice().split(' ')
        {
            let key = word.to_string();
            // Update count
            match counter.entry(key) {
                Vacant(entry) => { let _ = entry.set(1u); },
                Occupied(mut entry) => {
                    *entry.get_mut() += 1;
                }
            };
        }
    }

    println!(""{}"", counter.len());
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G6haL-
code,"// Copyright 2012 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

trait Foo { fn f(&self) -> int; }
trait Bar : Foo { fn g(&self) -> int; }

struct A { x: int }

impl Foo for A { fn f(&self) -> int { 10 } }
impl Bar for A { fn g(&self) -> int { 20 } }

// Call a function on Foo, given a T: Bar
fn gg<T:Bar>(a: &T) -> int {
    a.f()
}

pub fn main() {
    let a = &A { x: 3 };
    assert!(gg(a) == 10);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xifZv8
code,"use std::sync::atomic::{AtomicBool, Ordering};
use std::sync::Arc;
use std::thread;

use crossbeam_channel::Sender;
use signal_hook::iterator::Signals;

/// This starts a new thread to listen for SIGWINCH signals
#[allow(unused)]
pub fn start_resize_thread(
    resize_sender: Sender<()>,
    resize_running: Arc<AtomicBool>,
) {
    let signals = Signals::new(&[libc::SIGWINCH]).unwrap();
    thread::spawn(move || {
        // This thread will listen to SIGWINCH events and report them.
        while resize_running.load(Ordering::Relaxed) {
            // We know it will only contain SIGWINCH signals, so no need to check.
            if signals.wait().count() > 0 {
                resize_sender.send(()).unwrap();
            }
        }
    });
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",74GE_W
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

//! Liberally derived from the [Firefox JS implementation]
//! (http://mxr.mozilla.org/mozilla-central/source/toolkit/devtools/server/actors/webbrowser.js).
//! Connection point for remote devtools that wish to investigate a particular Browsing Context's contents.
//! Supports dynamic attaching and detaching which control notifications of navigation, etc.

use crate::actor::{Actor, ActorMessageStatus, ActorRegistry};
use crate::actors::console::ConsoleActor;
use crate::protocol::JsonPacketStream;
use devtools_traits::DevtoolScriptControlMsg::{self, WantsLiveNotifications};
use serde_json::{Map, Value};
use std::net::TcpStream;

#[derive(Serialize)]
struct BrowsingContextTraits;

#[derive(Serialize)]
struct BrowsingContextAttachedReply {
    from: String,
    #[serde(rename = ""type"")]
    type_: String,
    threadActor: String,
    cacheDisabled: bool,
    javascriptEnabled: bool,
    traits: BrowsingContextTraits,
}

#[derive(Serialize)]
struct BrowsingContextDetachedReply {
    from: String,
    #[serde(rename = ""type"")]
    type_: String,
}

#[derive(Serialize)]
struct ReconfigureReply {
    from: String,
}

#[derive(Serialize)]
struct ListFramesReply {
    from: String,
    frames: Vec<FrameMsg>,
}

#[derive(Serialize)]
struct FrameMsg {
    id: u32,
    url: String,
    title: String,
    parentID: u32,
}

#[derive(Serialize)]
struct ListWorkersReply {
    from: String,
    workers: Vec<WorkerMsg>,
}

#[derive(Serialize)]
struct WorkerMsg {
    id: u32,
}

#[derive(Serialize)]
pub struct BrowsingContextActorMsg {
    actor: String,
    title: String,
    url: String,
    outerWindowID: u32,
    consoleActor: String,
    emulationActor: String,
    inspectorActor: String,
    timelineActor: String,
    profilerActor: String,
    performanceActor: String,
    styleSheetsActor: String,
}

pub struct BrowsingContextActor {
    pub name: String,
    pub title: String,
    pub url: String,
    pub console: String,
    pub emulation: String,
    pub inspector: String,
    pub timeline: String,
    pub profiler: String,
    pub performance: String,
    pub styleSheets: String,
    pub thread: String,
}

impl Actor for BrowsingContextActor {
    fn name(&self) -> String {
        self.name.clone()
    }

    fn handle_message(
        &self,
        registry: &ActorRegistry,
        msg_type: &str,
        msg: &Map<String, Value>,
        stream: &mut TcpStream,
    ) -> Result<ActorMessageStatus, ()> {
        Ok(match msg_type {
            ""reconfigure"" => {
                if let Some(options) = msg.get(""options"").and_then(|o| o.as_object()) {
                    if let Some(val) = options.get(""performReload"") {
                        if val.as_bool().unwrap_or(false) {
                            let console_actor = registry.find::<ConsoleActor>(&self.console);
                            let _ = console_actor
                                .script_chan
                                .send(DevtoolScriptControlMsg::Reload(console_actor.pipeline));
                        }
                    }
                }
                stream.write_json_packet(&ReconfigureReply { from: self.name() });
                ActorMessageStatus::Processed
            },

            // https://docs.firefox-dev.tools/backend/protocol.html#listing-browser-tabs
            // (see ""To attach to a _targetActor_"")
            ""attach"" => {
                let msg = BrowsingContextAttachedReply {
                    from: self.name(),
                    type_: ""targetAttached"".to_owned(),
                    threadActor: self.thread.clone(),
                    cacheDisabled: false,
                    javascriptEnabled: true,
                    traits: BrowsingContextTraits,
                };
                let console_actor = registry.find::<ConsoleActor>(&self.console);
                console_actor
                    .streams
                    .borrow_mut()
                    .push(stream.try_clone().unwrap());
                stream.write_json_packet(&msg);
                console_actor
                    .script_chan
                    .send(WantsLiveNotifications(console_actor.pipeline, true))
                    .unwrap();
                ActorMessageStatus::Processed
            },

            //FIXME: The current implementation won't work for multiple connections. Need to ensure 105
            //       that the correct stream is removed.
            ""detach"" => {
                let msg = BrowsingContextDetachedReply {
                    from: self.name(),
                    type_: ""detached"".to_owned(),
                };
                let console_actor = registry.find::<ConsoleActor>(&self.console);
                console_actor.streams.borrow_mut().pop();
                stream.write_json_packet(&msg);
                console_actor
                    .script_chan
                    .send(WantsLiveNotifications(c",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",biDDDI
code,"// run-pass
// This is what the signature to spawn should look like with bare functions


fn spawn<T:Send>(val: T, f: fn(T)) {
    f(val);
}

fn f(i: isize) {
    assert_eq!(i, 100);
}

pub fn main() {
    spawn(100, f);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",62szuB
code,"// errors1.rs
// This function refuses to generate text to be printed on a nametag if
// you pass it an empty string. It'd be nicer if it explained what the problem
// was, instead of just sometimes returning `None`. The 2nd test currently
// does not compile or pass, but it illustrates the behavior we would like
// this function to have.
// Execute `rustlings hint errors1` for hints!

// I AM NOT DONE

pub fn generate_nametag_text(name: String) -> Option<String> {
    if name.len() > 0 {
        Some(format!(""Hi! My name is {}"", name))
    } else {
        // Empty names aren't allowed.
        None
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    // This test passes initially if you comment out the 2nd test.
    // You'll need to update what this test expects when you change
    // the function under test!
    #[test]
    fn generates_nametag_text_for_a_nonempty_name() {
        assert_eq!(
            generate_nametag_text(""Beyoncé"".into()),
            Some(""Hi! My name is Beyoncé"".into())
        );
    }

    #[test]
    fn explains_why_generating_nametag_text_fails() {
        assert_eq!(
            generate_nametag_text("""".into()),
            Err(""`name` was empty; it must be nonempty."".into())
        );
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",UarYXW
code,"#![feature(core)]
extern crate core;

#[cfg(test)]
mod tests {
    use core::hash::Hash;
    use core::hash::Hasher;
    use core::hash::SipHasher;

    // pub struct SipHasher {
    //     k0: u64,
    //     k1: u64,
    //     length: usize, // how many bytes we've processed
    //     v0: u64,      // hash state
    //     v1: u64,
    //     v2: u64,
    //     v3: u64,
    //     tail: u64, // unprocessed bytes le
    //     ntail: usize,  // how many bytes in tail are valid
    // }

    // macro_rules! u8to64_le {
    //     ($buf:expr, $i:expr) =>
    //     ($buf[0+$i] as u64 |
    //      ($buf[1+$i] as u64) << 8 |
    //      ($buf[2+$i] as u64) << 16 |
    //      ($buf[3+$i] as u64) << 24 |
    //      ($buf[4+$i] as u64) << 32 |
    //      ($buf[5+$i] as u64) << 40 |
    //      ($buf[6+$i] as u64) << 48 |
    //      ($buf[7+$i] as u64) << 56);
    //     ($buf:expr, $i:expr, $len:expr) =>
    //     ({
    //         let mut t = 0;
    //         let mut out = 0;
    //         while t < $len {
    //             out |= ($buf[t+$i] as u64) << t*8;
    //             t += 1;
    //         }
    //         out
    //     });
    // }

    // macro_rules! rotl {
    //     ($x:expr, $b:expr) =>
    //     (($x << $b) | ($x >> (64_i32.wrapping_sub($b))))
    // }

    // macro_rules! compress {
    //     ($v0:expr, $v1:expr, $v2:expr, $v3:expr) =>
    //     ({
    //         $v0 = $v0.wrapping_add($v1); $v1 = rotl!($v1, 13); $v1 ^= $v0;
    //         $v0 = rotl!($v0, 32);
    //         $v2 = $v2.wrapping_add($v3); $v3 = rotl!($v3, 16); $v3 ^= $v2;
    //         $v0 = $v0.wrapping_add($v3); $v3 = rotl!($v3, 21); $v3 ^= $v0;
    //         $v2 = $v2.wrapping_add($v1); $v1 = rotl!($v1, 17); $v1 ^= $v2;
    //         $v2 = rotl!($v2, 32);
    //     })
    // }

    // impl SipHasher {
    //     /// Creates a new `SipHasher` with the two initial keys set to 0.
    //     #[inline]
    //     #[stable(feature = ""rust1"", since = ""1.0.0"")]
    //     pub fn new() -> SipHasher {
    //         SipHasher::new_with_keys(0, 0)
    //     }
    //
    //     /// Creates a `SipHasher` that is keyed off the provided keys.
    //     #[inline]
    //     #[stable(feature = ""rust1"", since = ""1.0.0"")]
    //     pub fn new_with_keys(key0: u64, key1: u64) -> SipHasher {
    //         let mut state = SipHasher {
    //             k0: key0,
    //             k1: key1,
    //             length: 0,
    //             v0: 0,
    //             v1: 0,
    //             v2: 0,
    //             v3: 0,
    //             tail: 0,
    //             ntail: 0,
    //         };
    //         state.reset();
    //         state
    //     }
    //
    //     #[inline]
    //     fn reset(&mut self) {
    //         self.length = 0;
    //         self.v0 = self.k0 ^ 0x736f6d6570736575;
    //         self.v1 = self.k1 ^ 0x646f72616e646f6d;
    //         self.v2 = self.k0 ^ 0x6c7967656e657261;
    //         self.v3 = self.k1 ^ 0x7465646279746573;
    //         self.ntail = 0;
    //     }
    //
    //     #[inline]
    //     fn write(&mut self, msg: &[u8]) {
    //         let length = msg.len();
    //         self.length += length;
    //
    //         let mut needed = 0;
    //
    //         if self.ntail != 0 {
    //             needed = 8 - self.ntail;
    //             if length < needed {
    //                 self.tail |= u8to64_le!(msg, 0, length) << 8*self.ntail;
    //                 self.ntail += length;
    //                 return
    //             }
    //
    //             let m = self.tail | u8to64_le!(msg, 0, needed) << 8*self.ntail;
    //
    //             self.v3 ^= m;
    //             compress!(self.v0, self.v1, self.v2, self.v3);
    //             compress!(self.v0, self.v1, self.v2, self.v3);
    //             self.v0 ^= m;
    //
    //             self.ntail = 0;
    //         }
    //
    //         // Buffered tail is now flushed, process new input.
    //         let len = length - needed;
    //         let end = len & (!0x7);
    //         let left = len & 0x7;
    //
    //         let mut i = needed;
    //         while i < end {
    //             let mi = u8to64_le!(msg, i);
    //
    //             self.v3 ^= mi;
    //             compress!(self.v0, self.v1, self.v2, self.v3);
    //             compress!(self.v0, self.v1, self.v2, self.v3);
    //             self.v0 ^= mi;
    //
    //             i += 8;
    //         }
    //
    //         self.tail = u8to64_le!(msg, i, left);
    //         self.ntail = left;
    //     }
    // }

    // impl Hasher for SipHasher {
    //     #[inline]
    //     fn write(&mut self, msg: &[u8]) {
    //         self.write(msg)
    //     }
    //
    //     #[inline]
    //     fn finish(&self) -> u64 {
    //         let mut v0 = self.v0;
    //         let mut v1 = self.v1;
    //         let mut v2 = self.v2;
    //         let mut v3 = self.v3;
    //
    //         let b: u64 = ((self.length as u64 & 0xff) << 56) | self.tail;
    //
    //         v3 ^= b;
    //         compress!(v0, v1, v2, v3);
    //         compres",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m1QOxb
code,"// Copyright 2014 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

pub fn main() {
    let x: isize = 3;
    println!(""&x={:x}"", (&x as *const isize as usize));
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Bu9Q0q
code,"// Copyright 2017 The Grin Developers
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Low-Level manager for loading and unloading plugins. These functions
//! should generally not be called directly by most consumers, who should
//! be using the high level interfaces found in the config, manager, and
//! miner modules. These functions are meant for internal cuckoo-miner crates,
//! and will not be exposed to other projects including the cuckoo-miner crate.
//!
//! Note that plugins are shared libraries, not objects. You can have multiple
//! instances of a PluginLibrary, but all of them will reference the same
//! loaded code. Plugins aren't threadsafe, so only one thread should ever
//! be calling a particular plugin at a time.

use std::sync::Mutex;

use libloading;
use libc::*;

use error::error::CuckooMinerError;

// PRIVATE MEMBERS

// Type definitions corresponding to each function that the plugin implements

type CuckooInit = unsafe extern ""C"" fn();
type CuckooCall = unsafe extern ""C"" fn(*const c_uchar, uint32_t, *mut uint32_t, *mut uint32_t) -> uint32_t;
type CuckooParameterList = unsafe extern ""C"" fn(*mut c_uchar, *mut uint32_t) -> uint32_t;
type CuckooSetParameter = unsafe extern ""C"" fn(*const c_uchar, uint32_t, uint32_t, uint32_t) -> uint32_t;
type CuckooGetParameter = unsafe extern ""C"" fn(*const c_uchar, uint32_t, uint32_t, *mut uint32_t) -> uint32_t;
type CuckooIsQueueUnderLimit = unsafe extern ""C"" fn() -> uint32_t;
type CuckooPushToInputQueue = unsafe extern ""C"" fn(uint32_t, *const c_uchar, uint32_t, *const c_uchar)
                                                   -> uint32_t;
type CuckooReadFromOutputQueue = unsafe extern ""C"" fn(*mut uint32_t, *mut uint32_t, *mut uint32_t, *mut c_uchar) -> uint32_t;
type CuckooClearQueues = unsafe extern ""C"" fn();
type CuckooStartProcessing = unsafe extern ""C"" fn() -> uint32_t;
type CuckooStopProcessing = unsafe extern ""C"" fn() -> uint32_t;
type CuckooResetProcessing = unsafe extern ""C"" fn() -> uint32_t;
type CuckooHasProcessingStopped = unsafe extern ""C"" fn() -> uint32_t;
type CuckooGetStats = unsafe extern ""C"" fn(*mut c_uchar, *mut uint32_t) -> uint32_t;

/// Struct to hold instances of loaded plugins

pub struct PluginLibrary {
	///The full file path to the plugin loaded by this instance
	pub lib_full_path: String,

	loaded_library: Mutex<libloading::Library>,
	cuckoo_init: Mutex<CuckooInit>,
	cuckoo_call: Mutex<CuckooCall>,
	cuckoo_parameter_list: Mutex<CuckooParameterList>,
	cuckoo_get_parameter: Mutex<CuckooGetParameter>,
	cuckoo_set_parameter: Mutex<CuckooSetParameter>,
	cuckoo_is_queue_under_limit: Mutex<CuckooIsQueueUnderLimit>,
	cuckoo_clear_queues: Mutex<CuckooClearQueues>,
	cuckoo_push_to_input_queue: Mutex<CuckooPushToInputQueue>,
	cuckoo_read_from_output_queue: Mutex<CuckooReadFromOutputQueue>,
	cuckoo_start_processing: Mutex<CuckooStartProcessing>,
	cuckoo_stop_processing: Mutex<CuckooStopProcessing>,
	cuckoo_reset_processing: Mutex<CuckooResetProcessing>,
	cuckoo_has_processing_stopped: Mutex<CuckooHasProcessingStopped>,
	cuckoo_get_stats: Mutex<CuckooGetStats>,
}

impl PluginLibrary {
	//Loads the library at the specified path

	/// #Description
	///
	/// Loads the specified library, readying it for use
	/// via the exposed wrapper functions. A plugin can be
	/// loaded into multiple PluginLibrary instances, however
	/// they will all reference the same loaded library. One
	/// should only exist per library in a given thread.
	///
	/// #Arguments
	///
	/// * `lib_full_path` The full path to the library that is
	/// to be loaded.
	///
	/// #Returns
	///
	/// * `Ok()` is the library was successfully loaded.
	/// * a [CuckooMinerError](enum.CuckooMinerError.html)
	/// with specific detail if an error was encountered.
	///
	/// #Example
	///
	/// ```
	///  # use cuckoo_miner::PluginLibrary;
	///  # use std::env;
	///  # use std::path::PathBuf;
	///  # static DLL_SUFFIX: &str = "".cuckooplugin"";
	///  # let mut d = PathBuf::from(env!(""CARGO_MANIFEST_DIR""));
	///  # d.push(format!(""./target/debug/plugins/lean_cpu_16{}"", DLL_SUFFIX).as_str());
	///  # let plugin_path = d.to_str().unwrap();
	///  let pl=PluginLibrary::new(plugin_path).unwrap();
	///  pl.call_cuckoo_init();
	/// ```
	///

	pub fn new(lib_full_path: &str) -> Result<PluginLibrary, CuckooMinerError> {
		debug!(""Loading miner plugin: {}"", &lib_full_path);

		let result = libloading::Library::new(lib_full_path);

		if let Err(e) = result {
			return Err(CuckooMinerError::PluginNotFoundError(
				String::from(format!(""{} - {:?}"", lib_full_path, e)),
			));
		}

		let loaded_library = result.unwrap();
	",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",le-5F8
code,"use super::{
    error::TomlHelper,
    functions::Return,
    gobjects::GStatus,
    ident::Ident,
    parameter_matchable::Functionlike,
    parsable::{Parsable, Parse},
};
use crate::{
    library::{self, Nullable},
    version::Version,
};
use log::error;
use std::str::FromStr;
use toml::Value;

#[derive(Clone, Copy, Debug)]
pub enum TransformationType {
    None,
    Borrow, //replace from_glib_none to from_glib_borrow
    //TODO: configure
    TreePath, //convert string to TreePath
}

impl FromStr for TransformationType {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            ""none"" => Ok(TransformationType::None),
            ""borrow"" => Ok(TransformationType::Borrow),
            ""treepath"" => Ok(TransformationType::TreePath),
            _ => Err(format!(""Wrong transformation \""{}\"""", s)),
        }
    }
}

#[derive(Clone, Debug)]
pub struct Parameter {
    pub ident: Ident,
    pub nullable: Option<Nullable>,
    pub transformation: Option<TransformationType>,
    pub new_name: Option<String>,
}

impl Parse for Parameter {
    fn parse(toml: &Value, object_name: &str) -> Option<Parameter> {
        let ident = match Ident::parse(toml, object_name, ""signal parameter"") {
            Some(ident) => ident,
            None => {
                error!(
                    ""No 'name' or 'pattern' given for parameter for object {}"",
                    object_name
                );
                return None;
            }
        };
        toml.check_unwanted(
            &[""nullable"", ""transformation"", ""new_name"", ""name"", ""pattern""],
            &format!(""parameter {}"", object_name),
        );

        let nullable = toml
            .lookup(""nullable"")
            .and_then(Value::as_bool)
            .map(Nullable);
        let transformation = toml
            .lookup(""transformation"")
            .and_then(Value::as_str)
            .and_then(|s| {
                TransformationType::from_str(s)
                    .map_err(|err| {
                        error!(""{0}"", err);
                        err
                    })
                    .ok()
            });
        let new_name = toml
            .lookup(""new_name"")
            .and_then(Value::as_str)
            .map(ToOwned::to_owned);

        Some(Parameter {
            ident,
            nullable,
            transformation,
            new_name,
        })
    }
}

impl AsRef<Ident> for Parameter {
    fn as_ref(&self) -> &Ident {
        &self.ident
    }
}

pub type Parameters = Vec<Parameter>;

#[derive(Clone, Debug)]
pub struct Signal {
    pub ident: Ident,
    pub status: GStatus,
    pub inhibit: bool,
    pub version: Option<Version>,
    pub parameters: Parameters,
    pub ret: Return,
    pub concurrency: library::Concurrency,
    pub doc_hidden: bool,
    pub doc_trait_name: Option<String>,
}

impl Signal {
    pub fn parse(
        toml: &Value,
        object_name: &str,
        concurrency: library::Concurrency,
    ) -> Option<Signal> {
        let ident = match Ident::parse(toml, object_name, ""signal"") {
            Some(ident) => ident,
            None => {
                error!(
                    ""No 'name' or 'pattern' given for signal for object {}"",
                    object_name
                );
                return None;
            }
        };
        toml.check_unwanted(
            &[
                ""ignore"",
                ""manual"",
                ""inhibit"",
                ""version"",
                ""parameter"",
                ""return"",
                ""doc_hidden"",
                ""name"",
                ""pattern"",
                ""concurrency"",
                ""doc_trait_name"",
            ],
            &format!(""signal {}"", object_name),
        );

        let status = {
            if toml
                .lookup(""ignore"")
                .and_then(Value::as_bool)
                .unwrap_or(false)
            {
                GStatus::Ignore
            } else if toml
                .lookup(""manual"")
                .and_then(Value::as_bool)
                .unwrap_or(false)
            {
                GStatus::Manual
            } else {
                GStatus::Generate
            }
        };

        let inhibit = toml
            .lookup(""inhibit"")
            .and_then(Value::as_bool)
            .unwrap_or(false);
        let version = toml
            .lookup(""version"")
            .and_then(Value::as_str)
            .and_then(|s| s.parse().ok());
        let parameters = Parameters::parse(toml.lookup(""parameter""), object_name);
        let ret = Return::parse(toml.lookup(""return""), object_name);

        let concurrency = toml
            .lookup(""concurrency"")
            .and_then(Value::as_str)
            .and_then(|v| v.parse().ok())
            .unwrap_or(concurrency);

        let doc_hidden = toml
            .lookup(""doc_hidden"")
            .and_then(Value::as_bool)
            .unwrap_or(false);
        let doc_trait_name = toml
            .lookup(""doc_trait_name"")
            .and_then(Value::as_str)
            .map(T",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",huop2V
code,"// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements. See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership. The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// ""License""); you may not use this file except in compliance
// with the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the License for the
// specific language governing permissions and limitations
// under the License.

use std::convert::From;
use std::io;
use std::io::{ErrorKind, Read, Write};
use std::net::{Shutdown, TcpStream};

use {TransportErrorKind, new_transport_error};
use super::{ReadHalf, TIoChannel, WriteHalf};

/// Bidirectional TCP/IP channel.
///
/// # Examples
///
/// Create a `TTcpChannel`.
///
/// ```no_run
/// use std::io::{Read, Write};
/// use thrift::transport::TTcpChannel;
///
/// let mut c = TTcpChannel::new();
/// c.open(""localhost:9090"").unwrap();
///
/// let mut buf = vec![0u8; 4];
/// c.read(&mut buf).unwrap();
/// c.write(&vec![0, 1, 2]).unwrap();
/// ```
///
/// Create a `TTcpChannel` by wrapping an existing `TcpStream`.
///
/// ```no_run
/// use std::io::{Read, Write};
/// use std::net::TcpStream;
/// use thrift::transport::TTcpChannel;
///
/// let stream = TcpStream::connect(""127.0.0.1:9189"").unwrap();
///
/// // no need to call c.open() since we've already connected above
/// let mut c = TTcpChannel::with_stream(stream);
///
/// let mut buf = vec![0u8; 4];
/// c.read(&mut buf).unwrap();
/// c.write(&vec![0, 1, 2]).unwrap();
/// ```
#[derive(Debug, Default)]
pub struct TTcpChannel {
    stream: Option<TcpStream>,
}

impl TTcpChannel {
    /// Create an uninitialized `TTcpChannel`.
    ///
    /// The returned instance must be opened using `TTcpChannel::open(...)`
    /// before it can be used.
    pub fn new() -> TTcpChannel {
        TTcpChannel { stream: None }
    }

    /// Create a `TTcpChannel` that wraps an existing `TcpStream`.
    ///
    /// The passed-in stream is assumed to have been opened before being wrapped
    /// by the created `TTcpChannel` instance.
    pub fn with_stream(stream: TcpStream) -> TTcpChannel {
        TTcpChannel { stream: Some(stream) }
    }

    /// Connect to `remote_address`, which should have the form `host:port`.
    pub fn open(&mut self, remote_address: &str) -> ::Result<()> {
        if self.stream.is_some() {
            Err(
                new_transport_error(
                    TransportErrorKind::AlreadyOpen,
                    ""tcp connection previously opened"",
                ),
            )
        } else {
            match TcpStream::connect(&remote_address) {
                Ok(s) => {
                    self.stream = Some(s);
                    Ok(())
                }
                Err(e) => Err(From::from(e)),
            }
        }
    }

    /// Shut down this channel.
    ///
    /// Both send and receive halves are closed, and this instance can no
    /// longer be used to communicate with another endpoint.
    pub fn close(&mut self) -> ::Result<()> {
        self.if_set(|s| s.shutdown(Shutdown::Both))
            .map_err(From::from)
    }

    fn if_set<F, T>(&mut self, mut stream_operation: F) -> io::Result<T>
    where
        F: FnMut(&mut TcpStream) -> io::Result<T>,
    {

        if let Some(ref mut s) = self.stream {
            stream_operation(s)
        } else {
            Err(io::Error::new(ErrorKind::NotConnected, ""tcp endpoint not connected""),)
        }
    }
}

impl TIoChannel for TTcpChannel {
    fn split(self) -> ::Result<(ReadHalf<Self>, WriteHalf<Self>)>
    where
        Self: Sized,
    {
        let mut s = self;

        s.stream
            .as_mut()
            .and_then(|s| s.try_clone().ok())
            .map(
                |cloned| {
                    (ReadHalf { handle: TTcpChannel { stream: s.stream.take() } },
                     WriteHalf { handle: TTcpChannel { stream: Some(cloned) } })
                },
            )
            .ok_or_else(
                || {
                    new_transport_error(
                        TransportErrorKind::Unknown,
                        ""cannot clone underlying tcp stream"",
                    )
                },
            )
    }
}

impl Read for TTcpChannel {
    fn read(&mut self, b: &mut [u8]) -> io::Result<usize> {
        self.if_set(|s| s.read(b))
    }
}

impl Write for TTcpChannel {
    fn write(&mut self, b: &[u8]) -> io::Result<usize> {
        self.if_set(|s| s.write_all(b)).map(|_| b.len())
    }

    fn flush(&mut self) -> io::Result<()> {
        self.if_set(|s| s.flush())
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hJImrI
code,"extern crate byteorder;

use byteorder::{ByteOrder, BigEndian};
use std::io::{Read, Write, Result};

/// A byte buffer object specifically turned to easily read and write binary values
pub struct ByteBuffer {
    data: Vec<u8>,
    wpos: usize,
    rpos: usize,
    rbit: usize,
    wbit: usize,
}

impl ByteBuffer {
    /// Construct a new, empty, ByteBuffer
    pub fn new() -> ByteBuffer {
        ByteBuffer {
            data: vec![],
            wpos: 0,
            rpos: 0,
            rbit: 0,
            wbit: 0,
        }
    }

    /// Construct a new ByteBuffer filled with the data array.
    pub fn from_bytes(bytes: &[u8]) -> ByteBuffer {
        let mut buffer = ByteBuffer::new();
        buffer.write_bytes(bytes);
        buffer
    }

    /// Return the buffer size
    pub fn len(&self) -> usize {
        self.data.len()
    }

    /// Clear the buffer and reinitialize the reading and writing cursor
    pub fn clear(&mut self) {
        self.data.clear();
        self.wpos = 0;
        self.rpos = 0;
    }

    /// Change the buffer size to size.
    ///
    /// _Note_: You cannot shrink a buffer with this method
    pub fn resize(&mut self, size: usize) {
        let diff = size - self.data.len();
        if diff > 0 {
            self.data.extend(std::iter::repeat(0).take(diff))
        }
    }

    // Write operations

    /// Append a byte array to the buffer. The buffer is automatically extended if needed
    ///
    /// #Example
    ///
    /// ```
    /// # use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_bytes(&vec![0x1, 0xFF, 0x45]); // buffer contains [0x1, 0xFF, 0x45]
    /// ```
    pub fn write_bytes(&mut self, bytes: &[u8]) {
        self.flush_bit();

        let size = bytes.len() + self.wpos;

        if size > self.data.len() {
            self.resize(size);
        }

        for v in bytes {
            self.data[self.wpos] = *v;
            self.wpos += 1;
        }
    }

    /// Append a byte (8 bits value) to the buffer
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_u8(1) // buffer contains [0x1]
    /// ```
    pub fn write_u8(&mut self, val: u8) {
        self.write_bytes(&[val]);
    }

    /// Same as `write_u8()` but for signed values
    pub fn write_i8(&mut self, val: i8) {
        self.write_u8(val as u8);
    }

    /// Append a word (16 bits value) to the buffer
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_u16(1) // buffer contains [0x00, 0x1] if little endian
    /// ```
    pub fn write_u16(&mut self, val: u16) {
        let mut buf = [0; 2];
        BigEndian::write_u16(&mut buf, val);
        self.write_bytes(&buf);
    }

    /// Same as `write_u16()` but for signed values
    pub fn write_i16(&mut self, val: i16) {
        self.write_u16(val as u16);
    }

    /// Append a double word (32 bits value) to the buffer
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_u32(1) // buffer contains [0x00, 0x00, 0x00, 0x1] if little endian
    /// ```
    pub fn write_u32(&mut self, val: u32) {
        let mut buf = [0; 4];
        BigEndian::write_u32(&mut buf, val);
        self.write_bytes(&buf);
    }

    /// Same as `write_u32()` but for signed values
    pub fn write_i32(&mut self, val: i32) {
        self.write_u32(val as u32);
    }

    /// Append a quaddruple word (64 bits value) to the buffer
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_u64(1) // buffer contains [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1] if little endian
    /// ```
    pub fn write_u64(&mut self, val: u64) {
        let mut buf = [0; 8];
        BigEndian::write_u64(&mut buf, val);
        self.write_bytes(&buf);
    }

    /// Same as `write_u64()` but for signed values
    pub fn write_i64(&mut self, val: i64) {
        self.write_u64(val as u64);
    }

    /// Append a 32 bits floating point number to the buffer.
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_f32(0.1)
    /// ```
    pub fn write_f32(&mut self, val: f32) {
        let mut buf = [0; 4];
        BigEndian::write_f32(&mut buf, val);
        self.write_bytes(&buf);
    }

    /// Append a 64 bits floating point number to the buffer.
    ///
    /// #Example
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// let mut buffer = ByteBuffer::new();
    /// buffer.write_f64(0.1)
    /// ```
    pub fn write_f64(&mut self, val: f64) {
        let mut buf = [0; 8];
        BigEndian::write_f64(&mut buf, val);
        self.write_bytes(&buf);
    }

    /// Append a string to the buffer.
    ///
    /// *Format* The format is `(u32)size + size * (u8)characters`
    ///
    /// #Exapmle
    ///
    /// ```
    /// #  use bytebuffer::*;
    /// le",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",i4XVqu
code,"
#![feature(test)]
#![feature(conservative_impl_trait)]
#![feature(specialization)]

#[macro_use]
extern crate ndarray;
extern crate test;
extern crate rand;
extern crate ndarray_rand;
extern crate num;
extern crate chrono;
extern crate error_chain;
extern crate itertools;
extern crate rustc_serialize;
extern crate csv;


pub mod adapters;
pub mod dataframe;
pub mod tests;
#[macro_use]
pub mod util;
pub mod implement;
pub mod mixedtypes;
pub mod bench;

use ndarray::{arr1, arr2};
use dataframe::*;
use util::types::*;

use std::f64::NAN;
use util::traits::*;
use util::error::*;
use ndarray::{Axis, ArrayView};
use ndarray::stack;
use util::readcsv::*;
use mixedtypes::*;
use std::collections::BTreeMap;

fn main() {
    let mut btree: BTreeMap<String, Row<f64>> = BTreeMap::new();
    btree.insert(""a"".to_string(), arr1(&[2., 3., 2.]));


    if let Err(ref e) = run() {
        use ::std::io::Write;
        let stderr = &mut ::std::io::stderr();
        let errmsg = ""Error writing to stderr"";

        writeln!(stderr, ""error: {}"", e).expect(errmsg);

        for e in e.iter().skip(1) {
            writeln!(stderr, ""caused by: {}"", e).expect(errmsg);
        }

        // The backtrace is not always generated. Try to run this example
        // with `RUST_BACKTRACE=1`.
        if let Some(backtrace) = e.backtrace() {
            writeln!(stderr, ""backtrace: {:?}"", backtrace).expect(errmsg);
        }

        ::std::process::exit(1);
    }
}

fn run() -> Result<()> {

    let df: Result<DataFrame<InnerType, OuterType>> = DataFrame::read_csv(""/Users/suchin/Github/rust-dataframe/src/tests/test.\
                                                                           csv"");
    let a = arr2(&[[2., 7.], [3., NAN], [2., 4.]]);
    // let b = arr2(&[[2., 6.], [3., 4.]]);
    let c = arr2(&[[2., 6.], [3., 4.], [2., 1.]]);
    let mut df: DataFrame<f64, String> = DataFrame::new(a).columns(&[""a"", ""b""])?
        .index(&[""1"", ""2"", ""3""])?;
    let df_1 = DataFrame::new(c).columns(&[""c"", ""d""])?.index(&[""1"", ""2"", ""3""])?;
    let new_data = df.select(&[""2""], UtahAxis::Row).as_array()?;

    // let df_iter: DataFrameIterator = df_1.df_iter(UtahAxis::Row);
    let j = df.df_iter(UtahAxis::Row)
        .remove(&[""1""])
        .select(&[""2""])
        .append(""8"", new_data.view())
        .sumdf()
        .as_df()?;
    let res: DataFrame<f64, String> = df.impute(ImputeStrategy::Mean, UtahAxis::Column)
        .as_df()?;

    let res_1: DataFrame<f64, String> = df.inner_left_join(&df_1).as_df()?;
    let concat = df.concat(&df_1, UtahAxis::Row).as_df();
    // let b = arr1(&[2., 3., 2.]);
    let k: DataFrame<f64, String> = dataframe!(
    {
        ""a"" =>  col!([2., 3., 2.]),
        ""b"" =>  col!([2., NAN, 2.])
    });
    println!(""{:?}"", k);
    Ok(())

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vLXn0I
code,"// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

use ast::{MetaItem, Item, Expr};
use codemap::Span;
use ext::base::ExtCtxt;
use ext::build::AstBuilder;
use ext::deriving::generic::*;
use ext::deriving::generic::ty::*;
use parse::token::InternedString;

use std::gc::Gc;

pub fn expand_deriving_default(cx: &mut ExtCtxt,
                            span: Span,
                            mitem: Gc<MetaItem>,
                            item: Gc<Item>,
                            push: |Gc<Item>|) {
    let inline = cx.meta_word(span, InternedString::new(""inline""));
    let attrs = vec!(cx.attribute(span, inline));
    let trait_def = TraitDef {
        span: span,
        attributes: Vec::new(),
        path: Path::new(vec!(""std"", ""default"", ""Default"")),
        additional_bounds: Vec::new(),
        generics: LifetimeBounds::empty(),
        methods: vec!(
            MethodDef {
                name: ""default"",
                generics: LifetimeBounds::empty(),
                explicit_self: None,
                args: Vec::new(),
                ret_ty: Self,
                attributes: attrs,
                const_nonmatching: false,
                combine_substructure: combine_substructure(|a, b, c| {
                    default_substructure(a, b, c)
                })
            })
    };
    trait_def.expand(cx, mitem, item, push)
}

fn default_substructure(cx: &mut ExtCtxt, trait_span: Span,
                        substr: &Substructure) -> Gc<Expr> {
    let default_ident = vec!(
        cx.ident_of(""std""),
        cx.ident_of(""default""),
        cx.ident_of(""Default""),
        cx.ident_of(""default"")
    );
    let default_call = |span| cx.expr_call_global(span, default_ident.clone(), Vec::new());

    return match *substr.fields {
        StaticStruct(_, ref summary) => {
            match *summary {
                Unnamed(ref fields) => {
                    if fields.is_empty() {
                        cx.expr_ident(trait_span, substr.type_ident)
                    } else {
                        let exprs = fields.iter().map(|sp| default_call(*sp)).collect();
                        cx.expr_call_ident(trait_span, substr.type_ident, exprs)
                    }
                }
                Named(ref fields) => {
                    let default_fields = fields.iter().map(|&(ident, span)| {
                        cx.field_imm(span, ident, default_call(span))
                    }).collect();
                    cx.expr_struct_ident(trait_span, substr.type_ident, default_fields)
                }
            }
        }
        StaticEnum(..) => {
            cx.span_err(trait_span, ""`Default` cannot be derived for enums, only structs"");
            // let compilation continue
            cx.expr_uint(trait_span, 0)
        }
        _ => cx.span_bug(trait_span, ""Non-static method in `deriving(Default)`"")
    };
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_qh6WV
code,"pub type c_char = i8;
pub type c_long = i32;
pub type c_ulong = u32;
pub type size_t = u32;
pub type ptrdiff_t = i32;
pub type clock_t = i32;
pub type time_t = i32;
pub type suseconds_t = i32;
pub type wchar_t = i32;
pub type intptr_t = i32;
pub type uintptr_t = u32;
pub type off_t = i32;
pub type ino_t = u32;
pub type ssize_t = i32;
pub type blkcnt_t = i32;
pub type blksize_t = i32;
pub type nlink_t = u32;

s! {
    pub struct stat {
        pub st_dev: ::c_ulong,
        pub st_pad1: [::c_long; 3],
        pub st_ino: ::ino_t,
        pub st_mode: ::mode_t,
        pub st_nlink: ::nlink_t,
        pub st_uid: ::uid_t,
        pub st_gid: ::gid_t,
        pub st_rdev: ::c_ulong,
        pub st_pad2: [::c_long; 2],
        pub st_size: ::off_t,
        pub st_pad3: ::c_long,
        pub st_atime: ::time_t,
        pub st_atime_nsec: ::c_long,
        pub st_mtime: ::time_t,
        pub st_mtime_nsec: ::c_long,
        pub st_ctime: ::time_t,
        pub st_ctime_nsec: ::c_long,
        pub st_blksize: ::blksize_t,
        pub st_blocks: ::blkcnt_t,
        pub st_pad5: [::c_long; 14],
    }

    pub struct pthread_attr_t {
        __size: [u32; 9]
    }

    pub struct sigaction {
        pub sa_flags: ::c_uint,
        pub sa_sigaction: ::sighandler_t,
        pub sa_mask: sigset_t,
        _restorer: *mut ::c_void,
        _resv: [::c_int; 1],
    }

    pub struct stack_t {
        pub ss_sp: *mut ::c_void,
        pub ss_size: ::size_t,
        pub ss_flags: ::c_int,
    }

    pub struct sigset_t {
        __val: [::c_ulong; 32],
    }

    pub struct siginfo_t {
        pub si_signo: ::c_int,
        pub si_code: ::c_int,
        pub si_errno: ::c_int,
        pub _pad: [::c_int; 29],
    }
}

pub const RLIMIT_NOFILE: ::c_int = 5;
pub const RLIMIT_AS: ::c_int = 6;
pub const RLIMIT_RSS: ::c_int = 7;
pub const RLIMIT_NPROC: ::c_int = 8;
pub const RLIMIT_MEMLOCK: ::c_int = 9;
pub const RLIMIT_NLIMITS: ::c_int = 15;
pub const RLIM_INFINITY: ::rlim_t = 0x7fffffff;

pub const O_APPEND: ::c_int = 8;
pub const O_CREAT: ::c_int = 256;
pub const O_EXCL: ::c_int = 1024;
pub const O_NOCTTY: ::c_int = 2048;
pub const O_NONBLOCK: ::c_int = 128;
pub const O_SYNC: ::c_int = 0x10;
pub const O_RSYNC: ::c_int = 0x10;
pub const O_DSYNC: ::c_int = 0x10;

pub const EDEADLK: ::c_int = 45;
pub const ENAMETOOLONG: ::c_int = 78;
pub const ENOLCK: ::c_int = 46;
pub const ENOSYS: ::c_int = 89;
pub const ENOTEMPTY: ::c_int = 93;
pub const ELOOP: ::c_int = 90;
pub const ENOMSG: ::c_int = 35;
pub const EIDRM: ::c_int = 36;
pub const ECHRNG: ::c_int = 37;
pub const EL2NSYNC: ::c_int = 38;
pub const EL3HLT: ::c_int = 39;
pub const EL3RST: ::c_int = 40;
pub const ELNRNG: ::c_int = 41;
pub const EUNATCH: ::c_int = 42;
pub const ENOCSI: ::c_int = 43;
pub const EL2HLT: ::c_int = 44;
pub const EBADE: ::c_int = 50;
pub const EBADR: ::c_int = 51;
pub const EXFULL: ::c_int = 52;
pub const ENOANO: ::c_int = 53;
pub const EBADRQC: ::c_int = 54;
pub const EBADSLT: ::c_int = 55;
pub const EDEADLOCK: ::c_int = 56;
pub const EMULTIHOP: ::c_int = 74;
pub const EOVERFLOW: ::c_int = 79;
pub const ENOTUNIQ: ::c_int = 80;
pub const EBADFD: ::c_int = 81;
pub const EBADMSG: ::c_int = 77;
pub const EREMCHG: ::c_int = 82;
pub const ELIBACC: ::c_int = 83;
pub const ELIBBAD: ::c_int = 84;
pub const ELIBSCN: ::c_int = 85;
pub const ELIBMAX: ::c_int = 86;
pub const ELIBEXEC: ::c_int = 87;
pub const EILSEQ: ::c_int = 88;
pub const ERESTART: ::c_int = 91;
pub const ESTRPIPE: ::c_int = 92;
pub const EUSERS: ::c_int = 94;
pub const ENOTSOCK: ::c_int = 95;
pub const EDESTADDRREQ: ::c_int = 96;
pub const EMSGSIZE: ::c_int = 97;
pub const EPROTOTYPE: ::c_int = 98;
pub const ENOPROTOOPT: ::c_int = 99;
pub const EPROTONOSUPPORT: ::c_int = 120;
pub const ESOCKTNOSUPPORT: ::c_int = 121;
pub const EOPNOTSUPP: ::c_int = 122;
pub const EPFNOSUPPORT: ::c_int = 123;
pub const EAFNOSUPPORT: ::c_int = 124;
pub const EADDRINUSE: ::c_int = 125;
pub const EADDRNOTAVAIL: ::c_int = 126;
pub const ENETDOWN: ::c_int = 127;
pub const ENETUNREACH: ::c_int = 128;
pub const ENETRESET: ::c_int = 129;
pub const ECONNABORTED: ::c_int = 130;
pub const ECONNRESET: ::c_int = 131;
pub const ENOBUFS: ::c_int = 132;
pub const EISCONN: ::c_int = 133;
pub const ENOTCONN: ::c_int = 134;
pub const ESHUTDOWN: ::c_int = 143;
pub const ETOOMANYREFS: ::c_int = 144;
pub const ETIMEDOUT: ::c_int = 145;
pub const ECONNREFUSED: ::c_int = 146;
pub const EHOSTDOWN: ::c_int = 147;
pub const EHOSTUNREACH: ::c_int = 148;
pub const EALREADY: ::c_int = 149;
pub const EINPROGRESS: ::c_int = 150;
pub const ESTALE: ::c_int = 151;
pub const EUCLEAN: ::c_int = 135;
pub const ENOTNAM: ::c_int = 137;
pub const ENAVAIL: ::c_int = 138;
pub const EISNAM: ::c_int = 139;
pub const EREMOTEIO: ::c_int = 140;
pub const EDQUOT: ::c_int = 1133;
pub const ENOMEDIUM: ::c_int = 159;
pub const EMEDIUMTYPE: ::c_int = 160;
pub const ECANCELED: ::c_int = 158;
pub const ENOKEY: ::c_int = 161;
pub const EKEYEXPIRED: ::c_int = 162;
pub const EKEYREVOKED: ::c_int = 163;
pub const EKEYREJECTED: ::c_int = 164;
pub const EOWNERDEAD: ::c_int = 165;
pub const ENOTRE",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HQGVgN
code,"// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

// Check that non constant exprs fail for vector repeat syntax

fn main() {
    fn bar(n: usize) {
        let _x = [0; n]; //~ ERROR expected constant integer for repeat count, found variable
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bj8Ho4
code,"// Copyright 2012 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

fn main() {
    let a: ~[int] = ~[];
    vec::each(a, |_| -> bool {
        //~^ ERROR mismatched types
    });
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lQMzCY
code,ALTER TABLE `openthesaurus`.`wikipedia_pages` ADD FULLTEXT INDEX wp_pages_fulltext(`title`);,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kmGURf
code,"USE [VotingInfo]
DECLARE @SchemaName as nvarchar(20); SET @SchemaName = 'Auth';




-------------------------------------------------------------------
-- LOGIC CODE BELOW, EDIT SCHEMA NAME ABOVE
-------------------------------------------------------------------

IF DB_NAME() IN ('master', 'msdb', 'model', 'distribution')
BEGIN
	RAISERROR('Not for use on system databases', 16, 1)
	GOTO Done
END

SET NOCOUNT ON

DECLARE @DropStatement nvarchar(4000)
DECLARE @SequenceNumber int
DECLARE @LastError int
DECLARE @TablesDropped int

DECLARE DropStatements CURSOR LOCAL FAST_FORWARD READ_ONLY FOR

-- Stored Procedures
	SELECT	1 AS SequenceNumber,
			N'DROP PROCEDURE ' + QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.ROUTINES
	WHERE	ROUTINE_TYPE = N'PROCEDURE'
	AND		ROUTINE_SCHEMA = @SchemaName
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME)), 'IsMSShipped') = 0
UNION ALL
-- Functions
	SELECT	2 AS SequenceNumber,
			N'DROP FUNCTION ' + QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.ROUTINES
	WHERE	ROUTINE_TYPE = N'FUNCTION'
	AND		ROUTINE_SCHEMA = @SchemaName
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME)), 'IsMSShipped') = 0
UNION ALL
-- Forgeign Keys
	SELECT	3 AS SequenceNumber, 
			N'ALTER TABLE ' + QUOTENAME(TABLE_SCHEMA) + N'.' + QUOTENAME(TABLE_NAME) + N' DROP CONSTRAINT ' + CONSTRAINT_NAME AS DropStatement
	FROM	INFORMATION_SCHEMA.TABLE_CONSTRAINTS
	WHERE	CONSTRAINT_TYPE = N'FOREIGN KEY'
	AND		CONSTRAINT_SCHEMA = @SchemaName
UNION ALL
-- Indexes
	SELECT	4 AS SequenceNumber,
			N'DROP INDEX ' + QUOTENAME(IX.[Name]) + N' ON ' + QUOTENAME(S.[Name]) + N'.' + QUOTENAME(T.[Name]) + N' WITH ( ONLINE = OFF )' AS DropStatement
	FROM	sys.indexes IX
	INNER JOIN sys.objects T ON IX.Object_Id = T.Object_Id
	INNER JOIN sys.schemas S ON T.Schema_Id = S.Schema_Id
	WHERE	IX.[Name] LIKE 'IX_%'
	AND		S.[Name] = @SchemaName	
UNION ALL
-- Views
	SELECT	5 AS SequenceNumber,
			N'DROP VIEW ' + QUOTENAME(TABLE_SCHEMA) + N'.' + QUOTENAME(TABLE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.TABLES
	WHERE	TABLE_TYPE = N'VIEW' 
	AND		TABLE_SCHEMA = @SchemaName	
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAME(TABLE_SCHEMA) + N'.' + QUOTENAME(TABLE_NAME)), 'IsMSShipped') = 0

OPEN DropStatements
WHILE 1 = 1
BEGIN
	FETCH NEXT FROM DropStatements INTO @SequenceNumber, @DropStatement
	IF @@FETCH_STATUS = -1 BREAK
	BEGIN
		RAISERROR('%s', 0, 1, @DropStatement) WITH NOWAIT
		EXECUTE sp_ExecuteSQL @DropStatement
		SET @LastError = @@ERROR
		IF @LastError > 0
		BEGIN
			RAISERROR('Script terminated due to unexpected error', 16, 1)
			GOTO Done
		END
	END
END

CLOSE DropStatements
DEALLOCATE DropStatements

Done:
GO--
USE [VotingInfo]
DECLARE @SchemaName as nvarchar(20); SET @SchemaName = 'Client';




-------------------------------------------------------------------
-- LOGIC CODE BELOW, EDIT SCHEMA NAME ABOVE
-------------------------------------------------------------------

IF DB_NAME() IN ('master', 'msdb', 'model', 'distribution')
BEGIN
	RAISERROR('Not for use on system databases', 16, 1)
	GOTO Done
END

SET NOCOUNT ON

DECLARE @DropStatement nvarchar(4000)
DECLARE @SequenceNumber int
DECLARE @LastError int
DECLARE @TablesDropped int

DECLARE DropStatements CURSOR LOCAL FAST_FORWARD READ_ONLY FOR

-- Stored Procedures
	SELECT	1 AS SequenceNumber,
			N'DROP PROCEDURE ' + QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.ROUTINES
	WHERE	ROUTINE_TYPE = N'PROCEDURE'
	AND		ROUTINE_SCHEMA = @SchemaName
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME)), 'IsMSShipped') = 0
UNION ALL
-- Functions
	SELECT	2 AS SequenceNumber,
			N'DROP FUNCTION ' + QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.ROUTINES
	WHERE	ROUTINE_TYPE = N'FUNCTION'
	AND		ROUTINE_SCHEMA = @SchemaName
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAME(ROUTINE_SCHEMA) + N'.' + QUOTENAME(ROUTINE_NAME)), 'IsMSShipped') = 0
UNION ALL
-- Forgeign Keys
	SELECT	3 AS SequenceNumber, 
			N'ALTER TABLE ' + QUOTENAME(TABLE_SCHEMA) + N'.' + QUOTENAME(TABLE_NAME) + N' DROP CONSTRAINT ' + CONSTRAINT_NAME AS DropStatement
	FROM	INFORMATION_SCHEMA.TABLE_CONSTRAINTS
	WHERE	CONSTRAINT_TYPE = N'FOREIGN KEY'
	AND		CONSTRAINT_SCHEMA = @SchemaName
UNION ALL
-- Indexes
	SELECT	4 AS SequenceNumber,
			N'DROP INDEX ' + QUOTENAME(IX.[Name]) + N' ON ' + QUOTENAME(S.[Name]) + N'.' + QUOTENAME(T.[Name]) + N' WITH ( ONLINE = OFF )' AS DropStatement
	FROM	sys.indexes IX
	INNER JOIN sys.objects T ON IX.Object_Id = T.Object_Id
	INNER JOIN sys.schemas S ON T.Schema_Id = S.Schema_Id
	WHERE	IX.[Name] LIKE 'IX_%'
	AND		S.[Name] = @SchemaName	
UNION ALL
-- Views
	SELECT	5 AS SequenceNumber,
			N'DROP VIEW ' + QUOTENAME(TABLE_SCHEMA) + N'.' + QUOTENAME(TABLE_NAME) AS DropStatement
	FROM	INFORMATION_SCHEMA.TABLES
	WHERE	TABLE_TYPE = N'VIEW' 
	AND		TABLE_SCHEMA = @SchemaName	
	AND		OBJECTPROPERTY( OBJECT_ID(QUOTENAM",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dvdM6B
code,"DELETE FROM `weenie` WHERE `class_Id` = 21165;

INSERT INTO `weenie` (`class_Id`, `class_Name`, `type`, `last_Modified`)
VALUES (21165, 'frostelementalchill', 10, '2019-02-10 00:00:00') /* Creature */;

INSERT INTO `weenie_properties_int` (`object_Id`, `type`, `value`)
VALUES (21165,   1,         16) /* ItemType - Creature */
     , (21165,   2,         61) /* CreatureType - FrostElemental */
     , (21165,   6,         -1) /* ItemsCapacity */
     , (21165,   7,         -1) /* ContainersCapacity */
     , (21165,  16,          1) /* ItemUseable - No */
     , (21165,  25,         20) /* Level */
     , (21165,  93,       3080) /* PhysicsState - ReportCollisions, Gravity, LightingOn */
     , (21165, 133,          2) /* ShowableOnRadar - ShowMovement */
     , (21165, 307,          2) /* DamageRating */
     , (21165, 8007,          0) /* PCAPRecordedAutonomousMovement */;

INSERT INTO `weenie_properties_bool` (`object_Id`, `type`, `value`)
VALUES (21165,   1, True ) /* Stuck */;

INSERT INTO `weenie_properties_string` (`object_Id`, `type`, `value`)
VALUES (21165,   1, 'Chill') /* Name */
     , (21165, 8006, 'AAA9AAAAAAA=') /* PCAPRecordedCurrentMotionState */;

INSERT INTO `weenie_properties_d_i_d` (`object_Id`, `type`, `value`)
VALUES (21165,   1,   33557487) /* Setup */
     , (21165,   2,  150995087) /* MotionTable */
     , (21165,   3,  536871002) /* SoundTable */
     , (21165,   8,  100672514) /* Icon */
     , (21165,  22,  872415344) /* PhysicsEffectTable */
     , (21165, 8001,    8388630) /* PCAPRecordedWeenieHeader - ItemsCapacity, ContainersCapacity, Usable, RadarBehavior */
     , (21165, 8003,         20) /* PCAPRecordedObjectDesc - Stuck, Attackable */
     , (21165, 8005,     104451) /* PCAPRecordedPhysicsDesc - CSetup, MTable, STable, PeTable, Position, Movement */;

INSERT INTO `weenie_properties_position` (`object_Id`, `position_Type`, `obj_Cell_Id`, `origin_X`, `origin_Y`, `origin_Z`, `angles_W`, `angles_X`, `angles_Y`, `angles_Z`)
VALUES (21165, 8040, 3451977755, 74.1741, 64.445, 0.004999995, -0.0439141, 0, 0, -0.999035) /* PCAPRecordedLocation */
/* @teleloc 0xCDC1001B [74.174100 64.445000 0.005000] -0.043914 0.000000 0.000000 -0.999035 */;

INSERT INTO `weenie_properties_i_i_d` (`object_Id`, `type`, `value`)
VALUES (21165, 8000, 2885363124) /* PCAPRecordedObjectIID */;

INSERT INTO `weenie_properties_attribute` (`object_Id`, `type`, `init_Level`, `level_From_C_P`, `c_P_Spent`)
VALUES (21165,   1,  60, 0, 0) /* Strength */
     , (21165,   2,  80, 0, 0) /* Endurance */
     , (21165,   3,  80, 0, 0) /* Quickness */
     , (21165,   4,  80, 0, 0) /* Coordination */
     , (21165,   5,  80, 0, 0) /* Focus */
     , (21165,   6, 100, 0, 0) /* Self */;

INSERT INTO `weenie_properties_attribute_2nd` (`object_Id`, `type`, `init_Level`, `level_From_C_P`, `c_P_Spent`, `current_Level`)
VALUES (21165,   1,    30, 0, 0, 70) /* MaxHealth */
     , (21165,   3,   100, 0, 0, 180) /* MaxStamina */
     , (21165,   5,    80, 0, 0, 180) /* MaxMana */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1CiL3-
code,"-- 09.03.2017 21:15
-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator
UPDATE AD_Process SET Name='Leergut Rücknahme',Updated=TO_TIMESTAMP('2017-03-09 21:15:44','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=100 WHERE AD_Process_ID=540760
;

-- 09.03.2017 21:15
-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator
UPDATE AD_Process_Trl SET IsTranslated='N' WHERE AD_Process_ID=540760
;

-- 09.03.2017 21:16
-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator
UPDATE AD_Process_Trl SET UpdatedBy=100,Updated=TO_TIMESTAMP('2017-03-09 21:16:01','YYYY-MM-DD HH24:MI:SS'),Name='Empties Receive' WHERE AD_Process_ID=540760 AND AD_Language='en_US'
;

-- 09.03.2017 21:16
-- I forgot to set the DICTIONARY_ID_COMMENTS System Configurator
UPDATE AD_Process_Trl SET UpdatedBy=100,Updated=TO_TIMESTAMP('2017-03-09 21:16:33','YYYY-MM-DD HH24:MI:SS'),Name='Empties Return' WHERE AD_Process_ID=540759 AND AD_Language='en_US'
;

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LiOe8l
code,"DELIMITER $$
CREATE DEFINER=`root`@`localhost` FUNCTION `vista_com`(pEsquema VARCHAR(100), pVista VARCHAR(100)) RETURNS varchar(255) CHARSET latin1
    COMMENT 'Obtiene comentarios de Esquema'
BEGIN
	SET @comentario := (SELECT comentarios FROM vistas WHERE esquema = pEsquema AND vista = pVista);
	
	IF @comentario IS NULL THEN
		SET @comentario := '';
	END IF;

	RETURN @comentario;
END$$
DELIMITER ;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",q_WCa4
code,"--start_ignore
-- @author tungs1
-- @modified 2013-07-17 12:00:00
-- @created 2013-07-17 12:00:00
-- @description SplitDQA lineitem1_SK7_1_21.sql
-- @db_name splitdqa
-- @tags SplitAgg HAWQ
-- @executemode normal
--end_ignore
SELECT * FROM (SELECT COUNT(DISTINCT l_partkey) AS DQA1_dqacol1, SUM(l_partkey) AS DQA1_dqacol2 FROM lineitem1  GROUP BY l_suppkey) as t1, (SELECT SUM(DISTINCT p_partkey) AS DQA2_dqacol1, SUM(DISTINCT p_partkey) AS DQA2_dqacol2 FROM part1  GROUP BY p_size) as t2 WHERE t1.DQA1_dqacol1 = t2.DQA2_dqacol1;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DUMHYe
code,"-- MySQL dump 10.13  Distrib 5.5.43, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: core_staging
-- ------------------------------------------------------
-- Server version	5.5.43-0ubuntu0.14.04.1-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `entrez_gene_history`
--

DROP TABLE IF EXISTS `entrez_gene_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `entrez_gene_history` (
  `tax_id` bigint(10) NOT NULL,
  `gene_id` bigint(10) NOT NULL,
  `discontinued_gene_id` bigint(10) NOT NULL,
  `discontinued_symbol` varchar(255) NOT NULL,
  `discontinued_date` date NOT NULL,
  `loaded_date` datetime NOT NULL,
  KEY `tax_id` (`tax_id`),
  KEY `gene_id` (`gene_id`),
  KEY `discontinued_gene_id` (`discontinued_gene_id`),
  KEY `discontinued_symbol` (`discontinued_symbol`),
  KEY `discontinued_date` (`discontinued_date`),
  KEY `loaded_date` (`loaded_date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `refseq_protein_ids`
--

DROP TABLE IF EXISTS `refseq_protein_ids`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `refseq_protein_ids` (
  `refseq_protein_id` bigint(10) NOT NULL AUTO_INCREMENT,
  `refseq_protein_uid` bigint(10) NOT NULL,
  `refseq_protein_organism_id` bigint(10) NOT NULL,
  `refseq_protein_downloaded` enum('true','false') NOT NULL,
  PRIMARY KEY (`refseq_protein_id`),
  KEY `reseq_protein_uid` (`refseq_protein_uid`),
  KEY `reseq_protein_organism_id` (`refseq_protein_organism_id`),
  KEY `refseq_protein_downloaded` (`refseq_protein_downloaded`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `swissprot_ids`
--

DROP TABLE IF EXISTS `swissprot_ids`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `swissprot_ids` (
  `accession` varchar(25) NOT NULL,
  KEY `accession` (`accession`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dbeti-
code,"select * from s3minio.tmp.`filetypes/dir`;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t-OSjV
code,"-- [er]create table with MULTISET data type and insert nchar data


CREATE CLASS t1(
   col1       MULTISET 
);

INSERT INTO t1 VALUES (N'aaa');

drop t1;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",-NvJ73
code,"SELECT 
    `country_name`, `iso_code`
FROM
    `countries`
WHERE
    `country_name` LIKE '%a%a%a%'
ORDER BY `iso_code`;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RUQf8P
code,"CREATE TABLE Users(
	User_ID SERIAL NOT NULL PRIMARY KEY,
	Username VARCHAR(32) NOT NULL,
	Password VARCHAR(60) NOT NULL,
	Email VARCHAR(60) NOT NULL
);",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JXWUNt
code,"
IF OBJECT_ID('test_births', 'U') IS NOT NULL
	DROP TABLE test_births;
CREATE TABLE test_births (
	id INT IDENTITY(1,1),		--	1
	CONSTRAINT test_births_id PRIMARY KEY CLUSTERED (id ASC),
	cert_yr INT,	-- 2
	cert_num INT,	--3
	void INT,
	name_sur VARCHAR(50),
	name_sux VARCHAR(50),
	name_fir VARCHAR(50),
	name_mid VARCHAR(50),
	sex INT,
	bth_date DATE,	--10
	birth_mo INT,
	birth_da INT,
	birth_yr INT,
	bth_time INT,
	place INT,
	facility INT,
	birth_st INT,
	birth_ci INT,
	birth_co INT,
	attendant INT,	--20
	mom_snam VARCHAR(50),
	mom_xnam VARCHAR(50),
	mom_fnam VARCHAR(50),
	mom_mnam VARCHAR(50),
	maiden_n VARCHAR(50),
	mom_dob DATE,
	mom_age INT,
	mom_age1 INT,
	mom_bst INT,
	mom_bthcntry_fips VARCHAR(2),	--30
	mom_bthstate_fips VARCHAR(2),
	mom_rst INT,
	mom_rci INT,
	mom_rco INT,
	mom_address VARCHAR(250),
	mom_apt INT,
	mom_rzip INT,
	incity INT,
	mres_cntry_fips VARCHAR(2),
	mres_st_fips VARCHAR(2),	--40
	mres_city_fips INT,
	mres_cnty_fips INT,
	mom_edu INT,
	mom_occ INT,		-- occupation
	mom_occup1 INT,	-- industry
	mom_bus INT,
	mom_busines1 INT,
	mom_ssn VARCHAR(9),
	fa_sname VARCHAR(50),
	fa_xname VARCHAR(50),	--50
	fa_fname VARCHAR(50),
	fa_mname VARCHAR(50),
	fa_dob DATE,
	fa_age INT,
	fa_age1 INT,
	fa_bst INT,
	fa_edu INT,
	fa_occ INT,	--	occupation
	fa_occup1 INT, --industry
	fa_bus INT,	--60
	fa_busines1 INT,
	fa_ssn VARCHAR(9),
	mom_everm INT,
	married_betw INT,
	fa_husb INT,
	fa_signpat INT,
	pat_complete INT,
	lm_date DATE,
	lm_mo INT,
	lm_da INT,	--70
	lm_yr INT,
	prenatal INT,
	pre_begin DATE,
	pre_begmo INT,
	pre_begda INT,
	pre_begyr INT,
	pre_end DATE,
	pre_endmo INT,
	pre_endda INT,
	pre_endyr INT,	--80
	tot_visits INT,
	gest_est INT,
	gest_days INT,
	dat_concep DATE,
	mpv_days_cal INT,
	mpv_cal INT,
	pv_trims_cal INT,
	mom_htft INT,
	mom_htinch INT,
	prepreg_wt INT,	--90
	del_wt INT,
	wt_gain INT,
	prv_livebth INT,
	prv_livebthdte VARCHAR(15),	--badly coded dates
	live_bthliv INT,
	live_bthdead INT,
	prv_term INT,
	term_dte VARCHAR(15),	--badly coded dates 112003
	tobacco INT,
	cig_pck INT,		--	100
	prepreg_cig INT,
	prepreg_pck INT,
	first_cig INT,
	first_pck INT,
	sec_cig INT,
	sec_pck INT,
	last_cig INT,
	last_pck INT,
	alcohol INT,
	drink_wk INT,	--110
	drug_use INT,
	du_prscr INT,
	du_otc INT,
	du_other INT,
	du_otherlit VARCHAR(50),
	mrf_none INT,
	mrf_prediab INT,
	mrf_gestdiab INT,
	mrf_hypert INT,
	mrf_hypertchr INT,	--120
	mrf_hypergest INT,
	mrf_eclampsia INT,
	mrf_prevpreterm INT,
	mrf_poorout INT,
	mrf_inftreat INT,
	mrf_infdrugs INT,
	mrf_assistrep INT,
	mrf_prevces INT,
	mrf_prevcesnum INT,
	mrf_anemia INT,	--130
	mrf_cardiac INT,
	mrf_lungdis INT,
	mrf_hydra INT,
	mrf_hemoglob INT,
	mrf_incompcerv INT,
	mrf_prev4000 INT,
	mrf_renaldis INT,
	mrf_rhsensit INT,
	mrf_utbleed INT,
	mrf_oth INT,	--140
	mrf_othlit VARCHAR(50),
	inf_none INT,
	inf_gonor INT,
	inf_syph INT,
	inf_chlam INT,
	inf_hepb INT,
	inf_hepc INT,
	inf_hpv INT,
	inf_hivaids INT,
	inf_cmv INT,	--150
	inf_rubella INT,
	inf_toxo INT,
	inf_genherpes INT,
	inf_tuber INT,
	inf_oth INT,
	inf_othlit VARCHAR(50),
	ob_none INT,
	ob_cercl INT,
	ob_toco INT,
	ob_amnio INT,	--160
	ob_fetalmon INT,
	ob_cephsucess INT,
	ob_cephfail INT,
	ob_ultrasnd INT,
	ob_oth INT,
	ob_othlit VARCHAR(50),
	ol_none INT,
	ol_prerom INT,
	ol_preciplbr INT,
	ol_prolonglbr INT,	--170
	cld_none INT,
	cld_induc INT,
	cld_aug INT,
	cld_nonvert INT,
	cld_steroid INT,
	cld_antibiotic INT,
	cld_chorio INT,
	cld_mecon INT,
	cld_fetalintol INT,
	cld_epi INT,	--180
	cld_febrile INT,
	cld_abrplac INT,
	cld_placprev INT,
	cld_bleed INT,
	cld_seizures INT,
	cld_dysfunc INT,
	cld_cephpelv INT,
	cld_cordpro INT,
	cld_anesth INT,
	cld_oth INT,	--190
	cld_othlit VARCHAR(50),
	md_forcepsattpt INT,
	md_vaccumattpt INT,
	bth_present INT,
	bth_route INT,
	trial_lbr INT,
	mm_none INT,
	mm_trnsfusion INT,
	mm_perilac INT,
	mm_ruputerus INT,	--200
	mm_hyster INT,
	mm_icu INT,
	mm_unploper INT,
	mm_unk INT,
	apgar_5 INT,
	apgar_10 INT,
	gest_wks INT,
	gest_grp INT,
	bthwt_unit INT,
	grams INT,	--210
	lbs INT,
	oz INT,
	bwt_grp INT,
	plurality INT,
	bth_order INT,
	born_alive INT,
	match_certnum INT,
	ac_none INT,
	ac_ventless INT,
	ac_ventmore INT,	--220
	ac_nicu INT,
	ac_surf INT,
	ac_antisepis INT,
	ac_seizures INT,
	ac_anemia INT,
	ac_fas INT,
	ac_hyaline INT,
	ac_mecon INT,
	ac_bthinjury INT,
	ac_oth INT,	--230
	ac_othlit VARCHAR(50),
	acn_none INT,
	acn_anencep INT,
	acn_spina INT,
	acn_micro INT,
	acn_nervous INT,
	acn_nervouslit VARCHAR(50),
	acn_hrtdis INT,
	acn_hrtmal INT,
	acn_circ INT,	--240
	acn_cirlit VARCHAR(50),
	acn_omphal INT,
	acn_gastrosch INT,
	acn_rectal INT,
	acn_tracheo INT,
	acn_gastro INT,
	acn_gastrolit VARCHAR(50),
	acn_limbred INT,
	acn_cleftlip INT,
	acn_cleftpalate INT,	--250
	acn_polydact INT,
	acn_clubft INT,
	acn_diaphhern INT,
	acn_muscle INT,
	acn_musclelit VARCHAR(50),
	acn_malgen INT,
	acn_renal INT,
	acn_hypos INT,
	acn_urogen INT,
	acn_urogenlit VARCHAR(50),	--260
	acn_downs INT,
	acn_cdit INT,
	acn_chromoth INT,
	acn_chromothlit VARCHAR(50),
	acn_oth INT,
	acn_othlit VARCHAR(50),
	certifier INT,
	cer_date DATE,
	reg_date DATE,
	cer_yr INT,	--",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TVnv3x
code,"CREATE TABLE IACUC_PROTOCOL_LOCATION ( 
    IACUC_PROTOCOL_LOCATION_ID NUMBER(12,0) NOT NULL, 
    PROTOCOL_ID NUMBER(12,0) NOT NULL, 
    PROTOCOL_NUMBER VARCHAR2(20) NOT NULL, 
    SEQUENCE_NUMBER NUMBER(4,0) NOT NULL, 
    PROTOCOL_ORG_TYPE_CODE VARCHAR2(3) NOT NULL, 
    ORGANIZATION_ID VARCHAR2(8) NOT NULL, 
    ROLODEX_ID NUMBER(6,0), 
    UPDATE_TIMESTAMP DATE NOT NULL, 
    UPDATE_USER VARCHAR2(60) NOT NULL, 
    VER_NBR NUMBER(8,0) DEFAULT 1 NOT NULL, 
    OBJ_ID VARCHAR2(36) NOT NULL) 
/


ALTER TABLE IACUC_PROTOCOL_LOCATION 
ADD CONSTRAINT PK_IACUC_PROTOCOL_LOCATION 
PRIMARY KEY (IACUC_PROTOCOL_LOCATION_ID) 
/

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",C8xbEi
code,"CREATE OR REPLACE FUNCTION _get_benchmark(text,integer)
RETURNS numeric AS '
DECLARE
    code ALIAS for $1;
    n ALIAS for $2;
    s TIMESTAMP;
    e TIMESTAMP;
    d numeric := 0;
    r record;
BEGIN
	FOR a in 1..n LOOP
	        s := timeofday();
		EXECUTE code;
	        e := timeofday();
	        d := d + (extract(epoch from e) - extract(epoch from s));
	END LOOP;
 	return (d/n)*1000;
END; ' LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION _get_benchmark(text)
RETURNS numeric AS '
DECLARE
    code ALIAS for $1;
BEGIN
 	return _get_benchmark(code,1);
END; ' LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION _get_benchmark(text[],integer)
RETURNS SETOF numeric AS '
DECLARE
    codes ALIAS for $1;
    n ALIAS for $2;
BEGIN
	FOR i IN array_lower(codes,1) .. array_upper(codes, 1) LOOP
		return next _get_benchmark(codes[i],n);
	END LOOP;
	RETURN;
END; ' LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION _get_benchmark(text[])
RETURNS SETOF numeric AS '
DECLARE
    codes ALIAS for $1;
BEGIN
	FOR i IN array_lower(codes,1) .. array_upper(codes, 1) LOOP
		return next _get_benchmark(codes[i],1);
	END LOOP;
	RETURN;
END; ' LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION _get_benchmark()
RETURNS SETOF numeric AS '
DECLARE
    q RECORD;
BEGIN
	FOR q IN SELECT query from benchmark LOOP
		return next _get_benchmark(q.query,1);
	END LOOP;
	RETURN;
END; ' LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION _get_benchmark(integer)
RETURNS numeric AS '
DECLARE
    i ALIAS for $1;
    q RECORD;
BEGIN
	SELECT INTO q query from benchmark where benchmark_id=i;
	return _get_benchmark(q.query,1);
END; ' LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION benchmark()
RETURNS SETOF benchmark AS '
DECLARE
    q RECORD;
    t numeric;
BEGIN	
	RAISE INFO ''*************first run*************'';
	FOR q IN SELECT * from benchmark LOOP
		t=_get_benchmark(q.query,1);
		RAISE INFO ''% : %ms (% %%) '',q.query,to_char(t,''99999.99''),to_char((t/q.runtime)*100,''999.99'');
		q.runtime=t;
		return next q;
	END LOOP;
	RAISE INFO '''';
	RAISE INFO ''*************cached run (average of 5 runs)*************'';
	FOR q IN SELECT * from benchmark LOOP
		t=_get_benchmark(q.query,5);
		RAISE INFO ''% : %ms (% %%) '',q.query,to_char(t,''99999.99''),to_char((t/q.runtime)*100,''999.99'');
		q.runtime=t;
		return next q;
	END LOOP;
	RETURN;

END; ' LANGUAGE plpgsql;



GRANT EXECUTE ON function _get_benchmark(text) to rkh;
GRANT EXECUTE ON function _get_benchmark(text,integer) to rkh;
GRANT EXECUTE ON function _get_benchmark(text[]) to rkh;
GRANT EXECUTE ON function _get_benchmark(text[],integer) to rkh;
GRANT EXECUTE ON function _get_benchmark(integer) to rkh;
GRANT EXECUTE ON function _get_benchmark() to rkh;
GRANT EXECUTE ON function benchmark() to rkh;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ws_G2B
code,"﻿UPDATE [LastFm]
SET LastFmId = @LastFmId, Url = @Url, Details = @Details, SmallImageUrl = @SmallImageUrl, MediumImageUrl = @MediumImageUrl, LargeImageUrl = @LargeImageUrl, LargestImageUrl = @LargestImageUrl
WHERE (Id = @Id OR MusicBrainzId = @MusicBrainzId);

INSERT INTO [LastFm] (Id, LastFmId, MusicBrainzId, Url, Details, SmallImageUrl, MediumImageUrl, LargeImageUrl, LargestImageUrl)
SELECT @Id, @LastFmId, @MusicBrainzId, @Url, @Details, @SmallImageUrl, @MediumImageUrl, @LargeImageUrl, @LargestImageUrl
WHERE changes() = 0;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wCtgRG
code,"USE [ANTERO]
GO

/****** Object:  View [dw].[v_haku_ja_valinta_toinen_aste]    Script Date: 11.12.2019 14:15:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





ALTER VIEW [dw].[v_haku_ja_valinta_toinen_aste] AS

SELECT --top 10
		cast(f.loadtime as date) as Päivitysaika
      ,Lukumäärä = 1
	  ,[Aloituspaikat2] = NULL
	  ,[Valintojen aloituspaikat] = NULL
	  ,[Pisteraja] = NULL
	  ,[Tilannepäivä] = f.loadtime
	  ,[Pohjakoulutuksen järjestäjä] = d30a.organisaatio_fi
      ,[Pohjakoulutuksen oppilaitos] = d30b.organisaatio_fi
	  ,[Pohjakoulutuksen oppilaitoksen opetuskieli] = d30b.oppilaitoksenopetuskieli_fi
      ,[Pohjakoulutuksen kunta] = d29.kunta_fi
	  ,[Pohjakoulutuksen maakunta] = d29.maakunta_fi
	  ,[Pohjakoulutuksen seutukunta] = d29.seutukunta_fi
	  ,[Pohjakoulutuksen suuralue (OKM)] = NULL--d29.suuralue_okm_
	  ,[Haku] = d25.hakuryhma_fi
	  ,[Haun nimi] = d25.haun_nimi_fi
	  ,[Hakukohde] = d10.selite_fi
	  ,[Kaksoistutkinto] = d10b.kytkin_fi
	  ,[Hakutapa] = case d25.hakutapa_fi when 'Jatkuva haku' then 'Erillishaku' else d25.hakutapa_fi end
	  ,[Hakutyyppi] = d25.hakutyyppi_fi
	  ,[Hakukohteen organisaatio] = d16a.organisaatio_fi
	  ,[Koulutuksen järjestäjä (hakukohde)] = d16a.organisaatio_fi
	  ,[Oppilaitos (hakukohde)] = d16b.organisaatio_fi
	  ,[Toimipiste (hakukohde)] = d16c.organisaatio_fi
	  ,[Koulutustyyppi (hakukohde)] = d18.selite_fi
	  ,[Suuralue (OKM) (hakukohde)] = NULL--d19.suuralue_okm
	  ,[Seutukunta (hakukohde)] = d19.seutukunta_fi
	  ,[Maakunta (hakukohde)] = d19.maakunta_fi
	  ,[Kunta (hakukohde)] = d19.kunta_fi
	  ,[Koulutusaste (hakukohde)] = d20.koulutusaste2002_fi
	  ,[Koulutusala (hakukohde)] = d20.koulutusala2002_fi
	  ,[Opintoala (hakukohde)] = opintoala2002_fi
	  ,[Koulutusaste, taso 1 (hakukohde)] = d20.koulutusastetaso1_fi
	  ,[Koulutusaste, taso 2 (hakukohde)] = d20.koulutusastetaso2_fi
	  ,[Koulutusala, taso 1 (hakukohde)] = d20.koulutusalataso1_fi
	  ,[Koulutusala, taso 2 (hakukohde)] = d20.koulutusalataso2_fi
	  ,[Koulutusala, taso 3 (hakukohde)] = d20.koulutusalataso3_fi
	  ,[Tutkinto (hakukohde)] = d20.koulutusluokitus_fi
	  ,[Hakutoive] = f.hakutoive
	  ,[Henkilö OID] = henkilo_oid
	  ,[Ikäryhmä] = d26.ikaryhma1_fi
	  ,[Kansalaisuus] = d33.maatjavaltiot2_fi
	  ,[Kansalaisuus (maanosa)] = d33.maanosa0_fi
	  ,[Kotipaikkakunta (hakija)] = d6.kunta_fi
	  ,[Kotipaikan maakunta (hakija)] = d6.maakunta_fi
	  ,[Kotipaikan seutukunta (hakija)] = d6.seutukunta_fi
	  ,[Kotipaikan suuralue (OKM) (hakija)] = NULL--d6.suuralue_okm
	  ,[Koulutuksen alkamisvuosi] = f.koulutuksen_alkamisvuosi
	  ,[Koulutuksen alkamiskausi] = d2.selite_fi
	  ,[Koulutuksen kieli] = d27.kieli_fi
	  ,[Pohjakoulutuksen päättövuosi] = case when f.pohjakoulutuksen_paattovuosi is null or f.pohjakoulutuksen_paattovuosi='0' then 'Tuntematon' else f.pohjakoulutuksen_paattovuosi end --coalesce(cast([perusopetuksen_paattovuosi] as varchar(50)), 'Tuntematon') -- tän vois fiksata latauksessa jo	 
	  ,[Pohjakoulutus] = case when d22.selite_fi in('Perusopetuksen oppimäärä','Perusopetuksen osittain yksilöllistetty oppimäärä','Perusopetuksen pääosin tai kokonaan yksilöllistetty oppimäärä','Perusopetuksen yksilöllistetty oppimäärä, opetus järjestetty toiminta-alueittain') then 'Perusopetuksen oppimäärä' else d22.selite_fi end
	  ,[Erityisopetuspohja] = case when d22.selite_fi not in ('Perusopetuksen osittain yksilöllistetty oppimäärä','Perusopetuksen pääosin tai kokonaan yksilöllistetty oppimäärä','Perusopetuksen yksilöllistetty oppimäärä, opetus järjestetty toiminta-alueittain') then 'Ei erityisopetuspohja' else d22.selite_fi end
	  ,[Pohjakoulutusvaatimus] = d5.selite_fi
	  ,[Päättöluokka] = case when f.paattoluokka in ('9','10') then f.paattoluokka else 'Muu' end
	  ,[Sukupuoli] = d7.sukupuoli_fi
	  ,[Äidinkieli] = d8.kieliryhma1_fi


--Ruotsi
	  ,[Tidpunkt] = convert(varchar(10),f.[loadtime],104)
	  ,[Grundutbildningens anordnare] = d30a.organisaatio_sv
      ,[Grundutbildningens läroanstalt] = d30b.organisaatio_sv
      ,[Grundutbildningens kommun] = d29.kunta_SV
	  ,[Grundutbildningens landskap] = d29.maakunta_SV
	  ,[Ansökning] = d25.hakuryhma_sv
	  ,[Sökobjekt] = d10.selite_sv
	  ,[Gemensam/separat ansökan] = case when d25.hakutapa_fi in ('Jatkuva haku','Erillishaku') then 'Separata antagningar' else d25.hakutapa_sv end
	  ,[Typ av ansökan] = d25.hakutyyppi_sv
	  ,[Utbildningsanordnare (sökobjet)] = d16a.organisaatio_sv
	  ,[Läroanstalt (sökobjekt)] = d16b.organisaatio_sv
	  ,[Anstalt (sökobjekt)] = d16c.organisaatio_sv
	  ,[Utbildningstyp (sökobjekt)] = d18.selite_sv
	  ,[Landskap (sökobjekt)] = d19.maakunta_SV
	  ,[Kommun (sökobjekt)] = d19.kunta_SV
	  ,[Utbildningsnivå (sökobjekt)] = d20.koulutusaste2002_sv
	  ,[Utbildningsområde (sökobjekt)] = d20.koulutusala2002_SV
	  ,[Studieområde (sökobjekt)] = d20.opintoala2002_SV
	  ,[Utb.nivå, nivå 1 (sökobjekt)] = d20.koulutusastetaso1_sv
	  ,[Utb.nivå, nivå 2 (sökobjekt)] = d20.koulutusastetaso2_sv
	  ,[Utb.område, nivå 1 (sökobjekt)] = d20.koulutusalataso1_sv
	  ,[Utb.område, nivå 2 (sökobjekt)] = d20.koulutusalataso2_sv
	  ,[Utb.område, nivå 3 (sökobjekt)] = d20.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NvAn5f
code,"# dnaMotif.sql was originally generated by the autoSql program, which also 
# generated dnaMotif.c and dnaMotif.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.

#A gapless DNA motif
CREATE TABLE transRegCodeMotif (
    name varchar(255) not null,	# Motif name.
    columnCount int not null,	# Count of columns in motif.
    aProb longblob not null,	# Probability of A's in each column.
    cProb longblob not null,	# Probability of C's in each column.
    gProb longblob not null,	# Probability of G's in each column.
    tProb longblob not null,	# Probability of T's in each column.
              #Indices
    PRIMARY KEY(name(32))
);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NJ9Cud
code,"-- +migrate Up
ALTER TABLE storage_unit_item ADD COLUMN IF NOT EXISTS type VARCHAR(64);

UPDATE storage_unit_item SET type = item.type FROM item WHERE item.id = storage_unit_item.item_id AND (storage_unit_item.type IS NULL OR storage_unit_item.type = '');


-- +migrate Down
ALTER TABLE  storage_unit_item DROP COLUMN type;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_oXaIc
code,"do $$
  begin
    if not exists (select 1 from information_schema.columns where table_name = 'masterIntegrations') then
    -- This is the base table, do not add any fields here. Add them below.
      create table ""masterIntegrations"" (
        ""id"" VARCHAR(24) PRIMARY KEY NOT NULL,
        ""masterIntegrationId"" INT NOT NULL,
        ""name"" VARCHAR(80) NOT NULL,
        ""type"" VARCHAR(80) NOT NULL,
        ""typeCode"" INT NOT NULL,
        ""displayName"" VARCHAR(255) NOT NULL,
        ""isEnabled"" BOOLEAN DEFAULT false NOT NULL,
        ""level"" VARCHAR(80) NOT NULL,
        ""createdBy"" VARCHAR(24) NOT NULL,
        ""updatedBy"" VARCHAR(24) NOT NULL,
        ""createdAt"" timestamp with time zone NOT NULL,
        ""updatedAt"" timestamp with time zone NOT NULL
      );
    end if;

    -- Create indexes

    -- Add mIntmIntIdU index
    if not exists (select 1 from pg_indexes where tablename = 'masterIntegrations' and indexname = 'mIntmIntIdU') then
      create index ""mIntmIntIdU"" on ""masterIntegrations"" using btree(""masterIntegrationId"");
    end if;

    -- Add mIntNameTypeU index
    if not exists (select 1 from pg_indexes where tablename = 'masterIntegrations' and indexname = 'mIntNameTypeU') then
      create index ""mIntNameTypeU"" on ""masterIntegrations"" using btree(""name"", ""type"");
    end if;

    -- Create foreign key constraints

    -- Adds foreign key relationships for masterIntegrations
      if not exists (select 1 from pg_constraint where conname = 'masterIntegrations_typeCode_fkey') then
        alter table ""masterIntegrations"" add constraint ""masterIntegrations_typeCode_fkey"" foreign key (""typeCode"") references ""systemCodes""(code) on update restrict on delete restrict;
      end if;

    -- Insert all masterIntegrations:

    -- Docker
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'Docker' and ""typeCode"" = 5001) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('5553a7ac3566980c00a3bf0e', 2, 'Docker', 'Docker', 'hub', false, 'account', 5001, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- Private Docker Registry
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'Private Docker Registry' and ""typeCode"" = 5001) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('559e8f3e90252e0c00672376', 3, 'Private Docker Registry', 'Private Docker Registry', 'hub', false, 'account', 5001, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- slack
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'Slack' and ""typeCode"" = 5003) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('55bba7932c6c780b00e4426c', 4, 'Slack', 'Slack', 'notification', false, 'account', 5003, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- webhook
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'webhook' and ""typeCode"" = 5003) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('573aab7c5419f10f00bef322', 5, 'webhook', 'Event Trigger', 'notification', false, 'account', 5003, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- GCR
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'GCR' and ""typeCode"" = 5001) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('5553a8333566980c00a3bf1b', 6, 'GCR', 'GCR', 'hub', false, 'account', 5001, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- ECR
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'ECR' and ""typeCode"" = 5001) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt"", ""updatedAt"")
      values ('5673c6561895ca4474669507', 7, 'ECR', 'Amazon ECR', 'hub', false, 'account', 5001, '54188262bc4d591ba438d62a', '54188262bc4d591ba438d62a', '2016-06-01', '2016-06-01');
    end if;

    -- AWS
    if not exists (select 1 from ""masterIntegrations"" where ""name"" = 'AWS' and ""typeCode"" = 5002) then
      insert into ""masterIntegrations"" (""id"", ""masterIntegrationId"", ""name"", ""displayName"", ""type"", ""isEnabled"", ""level"", ""typeCode"", ""createdBy"", ""updatedBy"", ""createdAt",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0gsH8W
code,"-- MySQL dump 10.13  Distrib 5.7.14, for Win64 (x86_64)
--
-- Host: localhost    Database: administrador
-- ------------------------------------------------------
-- Server version	5.7.14

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `activos`
--

DROP TABLE IF EXISTS `activos`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `activos` (
  `id_activo` int(11) NOT NULL AUTO_INCREMENT,
  `nombre` varchar(255) NOT NULL,
  `descripcion` varchar(255) NOT NULL,
  PRIMARY KEY (`id_activo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `activos`
--

LOCK TABLES `activos` WRITE;
/*!40000 ALTER TABLE `activos` DISABLE KEYS */;
/*!40000 ALTER TABLE `activos` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `activos_solicitudes`
--

DROP TABLE IF EXISTS `activos_solicitudes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `activos_solicitudes` (
  `id_solicitud` int(11) NOT NULL AUTO_INCREMENT,
  `id_activo` int(11) NOT NULL,
  `id_usuario` int(11) NOT NULL,
  `id_estado` int(11) NOT NULL,
  `entrada` timestamp NOT NULL,
  `salida` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id_solicitud`),
  KEY `id_activo` (`id_activo`),
  KEY `id_usuario` (`id_usuario`),
  KEY `id_estado` (`id_estado`),
  CONSTRAINT `activos_solicitudes_ibfk_1` FOREIGN KEY (`id_activo`) REFERENCES `activos` (`id_activo`),
  CONSTRAINT `activos_solicitudes_ibfk_2` FOREIGN KEY (`id_usuario`) REFERENCES `usuarios` (`id_usuario`),
  CONSTRAINT `activos_solicitudes_ibfk_3` FOREIGN KEY (`id_estado`) REFERENCES `estados` (`id_estado`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `activos_solicitudes`
--

LOCK TABLES `activos_solicitudes` WRITE;
/*!40000 ALTER TABLE `activos_solicitudes` DISABLE KEYS */;
/*!40000 ALTER TABLE `activos_solicitudes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `archivos`
--

DROP TABLE IF EXISTS `archivos`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `archivos` (
  `id_archivo` int(11) NOT NULL AUTO_INCREMENT,
  `fecha` timestamp NOT NULL,
  `id_archivo_tipo` int(11) NOT NULL,
  `id_especialidad` int(11) NOT NULL,
  `id_usuario` int(11) NOT NULL,
  `id_tarea` int(11) NOT NULL,
  PRIMARY KEY (`id_archivo`),
  KEY `id_archivo_tipo` (`id_archivo_tipo`),
  KEY `id_especialidad` (`id_especialidad`),
  KEY `id_usuario` (`id_usuario`),
  KEY `id_tarea` (`id_tarea`),
  CONSTRAINT `archivos_ibfk_1` FOREIGN KEY (`id_archivo_tipo`) REFERENCES `archivos_tipo` (`id_archivo_tipo`),
  CONSTRAINT `archivos_ibfk_2` FOREIGN KEY (`id_especialidad`) REFERENCES `especialidad` (`id_especialidad`),
  CONSTRAINT `archivos_ibfk_3` FOREIGN KEY (`id_usuario`) REFERENCES `usuarios` (`id_usuario`),
  CONSTRAINT `archivos_ibfk_4` FOREIGN KEY (`id_tarea`) REFERENCES `tareas` (`id_tarea`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `archivos`
--

LOCK TABLES `archivos` WRITE;
/*!40000 ALTER TABLE `archivos` DISABLE KEYS */;
/*!40000 ALTER TABLE `archivos` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `archivos_tipo`
--

DROP TABLE IF EXISTS `archivos_tipo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `archivos_tipo` (
  `id_archivo_tipo` int(11) NOT NULL AUTO_INCREMENT,
  `extension` varchar(10) NOT NULL,
  `descripcion` varchar(255) NOT NULL,
  PRIMARY KEY (`id_archivo_tipo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `archivos_tipo`
--

LOCK TABLES `archivos_tipo` WRITE;
/*!40000 ALTER TABLE `archivos_tipo` DISABLE KEYS */;
/*!40000 ALTER TABLE `archivos_tipo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `especialidad`
--

DROP TABLE IF EXISTS `especialidad`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `especialidad` (
  `id_especialidad` int(11) NOT NULL AUTO_INCREMENT,
  `nombre` varchar(255) NOT ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LmlCW5
code,"/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  grupot
 * Created: 12/04/2017
 */

CREATE TABLE `marketplatform`.`web_resource` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `pah` VARCHAR(500) NOT NULL,
  `type` VARCHAR(45) NULL,
  `is_public` TINYINT(1) NULL,
  PRIMARY KEY (`id`));


CREATE TABLE `marketplatform`.`authorization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(200) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


CREATE TABLE `marketplatform`.`role_authorization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  `authorization_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_role_authorization_1_idx` (`role_id` ASC),
  INDEX `fk_role_authorization_2_idx` (`authorization_id` ASC),
  CONSTRAINT `fk_role_authorization_1`
    FOREIGN KEY (`role_id`)
    REFERENCES `marketplatform`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_authorization_2`
    FOREIGN KEY (`authorization_id`)
    REFERENCES `marketplatform`.`authorization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE `marketplatform`.`webresource_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `webresource_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_webresource_role_1_idx` (`webresource_id` ASC),
  INDEX `fk_webresource_role_2_idx` (`role_id` ASC),
  CONSTRAINT `fk_webresource_role_1`
    FOREIGN KEY (`webresource_id`)
    REFERENCES `marketplatform`.`web_resource` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_webresource_role_2`
    FOREIGN KEY (`role_id`)
    REFERENCES `marketplatform`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE `marketplatform`.`webresource_authorization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `webresource_id` INT NOT NULL,
  `authorization_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_webresource_authorization_1_idx` (`webresource_id` ASC),
  INDEX `fk_webresource_authorization_2_idx` (`authorization_id` ASC),
  CONSTRAINT `fk_webresource_authorization_1`
    FOREIGN KEY (`webresource_id`)
    REFERENCES `marketplatform`.`web_resource` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_webresource_authorization_2`
    FOREIGN KEY (`authorization_id`)
    REFERENCES `marketplatform`.`authorization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2WwRU7
code,DROP TABLE IF EXISTS sql_ru;,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",giiwrZ
code,"DELETE FROM `weenie` WHERE `class_Id` = 27719;

INSERT INTO `weenie` (`class_Id`, `class_Name`, `type`, `last_Modified`)
VALUES (27719, 'carenzicarnivorouscampgen', 1, '2019-02-10 00:00:00') /* Generic */;

INSERT INTO `weenie_properties_int` (`object_Id`, `type`, `value`)
VALUES (27719,   1,          0) /* ItemType - None */
     , (27719,  93,       1040) /* PhysicsState - IgnoreCollisions, Gravity */;

INSERT INTO `weenie_properties_bool` (`object_Id`, `type`, `value`)
VALUES (27719,   1, True ) /* Stuck */
     , (27719,  24, True ) /* UiHidden */;

INSERT INTO `weenie_properties_string` (`object_Id`, `type`, `value`)
VALUES (27719,   1, 'Carnivorous Carenzi Camp Generator') /* Name */;

INSERT INTO `weenie_properties_d_i_d` (`object_Id`, `type`, `value`)
VALUES (27719,   1,   33557199) /* Setup */
     , (27719,   8,  100667494) /* Icon */
     , (27719, 8001,          0) /* PCAPRecordedWeenieHeader - None */
     , (27719, 8003,        148) /* PCAPRecordedObjectDesc - Stuck, Attackable, UiHidden */
     , (27719, 8005,      32769) /* PCAPRecordedPhysicsDesc - CSetup, Position */;

INSERT INTO `weenie_properties_position` (`object_Id`, `position_Type`, `obj_Cell_Id`, `origin_X`, `origin_Y`, `origin_Z`, `angles_W`, `angles_X`, `angles_Y`, `angles_Z`)
VALUES (27719, 8040, 515899413, 52.22132, 111.7457, 91.46214, 1, 0, 0, 0) /* PCAPRecordedLocation */
/* @teleloc 0x1EC00015 [52.221320 111.745700 91.462140] 1.000000 0.000000 0.000000 0.000000 */;

INSERT INTO `weenie_properties_i_i_d` (`object_Id`, `type`, `value`)
VALUES (27719, 8000, 2930046122) /* PCAPRecordedObjectIID */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lhH80a
code,"DELETE FROM `weenie` WHERE `class_Id` = 12097;

INSERT INTO `weenie` (`class_Id`, `class_Name`, `type`, `last_Modified`)
VALUES (12097, 'menhir1-xp', 1, '2019-02-10 00:00:00') /* Generic */;

INSERT INTO `weenie_properties_int` (`object_Id`, `type`, `value`)
VALUES (12097,   1,        128) /* ItemType - Misc */
     , (12097,   5,        400) /* EncumbranceVal */
     , (12097,  16,          1) /* ItemUseable - No */
     , (12097,  19,          0) /* Value */
     , (12097,  93,       1044) /* PhysicsState - Ethereal, IgnoreCollisions, Gravity */;

INSERT INTO `weenie_properties_bool` (`object_Id`, `type`, `value`)
VALUES (12097,   1, True ) /* Stuck */
     , (12097,  24, True ) /* UiHidden */;

INSERT INTO `weenie_properties_string` (`object_Id`, `type`, `value`)
VALUES (12097,   1, 'Menhir Stone') /* Name */;

INSERT INTO `weenie_properties_d_i_d` (`object_Id`, `type`, `value`)
VALUES (12097,   1,   33555316) /* Setup */
     , (12097,   3,  536870932) /* SoundTable */
     , (12097,   8,  100670227) /* Icon */
     , (12097,  22,  872415275) /* PhysicsEffectTable */
     , (12097, 8001,    2097168) /* PCAPRecordedWeenieHeader - Usable, Burden */
     , (12097, 8003,        148) /* PCAPRecordedObjectDesc - Stuck, Attackable, UiHidden */
     , (12097, 8005,      38913) /* PCAPRecordedPhysicsDesc - CSetup, STable, PeTable, Position */;

INSERT INTO `weenie_properties_position` (`object_Id`, `position_Type`, `obj_Cell_Id`, `origin_X`, `origin_Y`, `origin_Z`, `angles_W`, `angles_X`, `angles_Y`, `angles_Z`)
VALUES (12097, 8040, 599851062, 155.5895, 124.6277, 110, 1, 0, 0, 0) /* PCAPRecordedLocation */
/* @teleloc 0x23C10036 [155.589500 124.627700 110.000000] 1.000000 0.000000 0.000000 0.000000 */;

INSERT INTO `weenie_properties_i_i_d` (`object_Id`, `type`, `value`)
VALUES (12097, 8000, 2930022628) /* PCAPRecordedObjectIID */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",B5Uba7
code,"SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

DROP SCHEMA IF EXISTS `salaoteste` ;
CREATE SCHEMA IF NOT EXISTS `salaoteste` DEFAULT CHARACTER SET latin1 ;
USE `salaoteste` ;

-- -----------------------------------------------------
-- Table `salaoteste`.`agendamento`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `salaoteste`.`agendamento` (
  `id` INT(11) NOT NULL AUTO_INCREMENT ,
  `data` DATE NULL DEFAULT NULL ,
  `hora` VARCHAR(50) NULL DEFAULT NULL ,
  `cliente` VARCHAR(50) NULL DEFAULT NULL ,
  `servico` VARCHAR(50) NULL DEFAULT NULL ,
  `status` VARCHAR(50) NULL DEFAULT NULL ,
  `atendente` VARCHAR(50) NOT NULL ,
  `obs` VARCHAR(200) NULL DEFAULT NULL ,
  PRIMARY KEY (`id`) )
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `salaoteste`.`clientes`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `salaoteste`.`clientes` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT ,
  `nome` VARCHAR(50) NOT NULL ,
  `cpf` VARCHAR(50) NOT NULL ,
  `rg` VARCHAR(50) NOT NULL ,
  `rua` VARCHAR(50) NULL DEFAULT NULL ,
  `bairro` VARCHAR(50) NULL DEFAULT NULL ,
  `cep` VARCHAR(50) NULL DEFAULT NULL ,
  `cidade` VARCHAR(50) NULL DEFAULT NULL ,
  `numero` VARCHAR(50) NULL DEFAULT NULL ,
  `telefonefixo` VARCHAR(50) NULL DEFAULT NULL ,
  `celular1` VARCHAR(50) NULL DEFAULT NULL ,
  `celular2` VARCHAR(50) NULL DEFAULT NULL ,
  `cargo` VARCHAR(50) NULL DEFAULT NULL ,
  `empresa` VARCHAR(50) NULL DEFAULT NULL ,
  `telefoneempresa` VARCHAR(50) NULL DEFAULT NULL ,
  `renda` DOUBLE NULL DEFAULT NULL ,
  `juros` DOUBLE NULL DEFAULT NULL ,
  `foto` VARCHAR(200) NULL DEFAULT NULL ,
  `dtNasc` VARCHAR(200) NULL DEFAULT NULL ,
  `email` VARCHAR(300) NOT NULL ,
  PRIMARY KEY (`id`) ,
  UNIQUE INDEX `nome` (`nome` ASC) ,
  UNIQUE INDEX `cpf` (`cpf` ASC) ,
  UNIQUE INDEX `rg` (`rg` ASC) ,
  UNIQUE INDEX `nome_2` (`nome` ASC) )
ENGINE = InnoDB
AUTO_INCREMENT = 9
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `salaoteste`.`servicos`
-- -----------------------------------------------------
CREATE  TABLE IF NOT EXISTS `salaoteste`.`servicos` (
  `cod` INT(10) NOT NULL AUTO_INCREMENT ,
  `nome` VARCHAR(50) NOT NULL ,
  `preco` DOUBLE NOT NULL ,
  `nomecliente` VARCHAR(50) NOT NULL ,
  `formaPagamento` VARCHAR(45) NULL DEFAULT NULL ,
  `data` DATE NULL DEFAULT NULL ,
  PRIMARY KEY (`cod`) )
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dENP64
code,"ALTER TABLE `cloud`.`domain` ADD `slack_channel_name` varchar(255);

-- Update the domain_view
DROP VIEW IF EXISTS `domain_view`;

CREATE VIEW `domain_view` AS
  SELECT
    `cloud`.`domain`.`id` AS `id`,
    `cloud`.`domain`.`parent` AS `parent`,
    `cloud`.`domain`.`name` AS `name`,
    `cloud`.`domain`.`uuid` AS `uuid`,
    `cloud`.`domain`.`owner` AS `owner`,
    `cloud`.`domain`.`path` AS `path`,
    `cloud`.`domain`.`level` AS `level`,
    `cloud`.`domain`.`child_count` AS `child_count`,
    `cloud`.`domain`.`next_child_seq` AS `next_child_seq`,
    `cloud`.`domain`.`removed` AS `removed`,
    `cloud`.`domain`.`state` AS `state`,
    `cloud`.`domain`.`network_domain` AS `network_domain`,
    `cloud`.`domain`.`type` AS `type`,
    `cloud`.`domain`.`email` AS `email`,
    `cloud`.`domain`.`slack_channel_name` AS `slack_channel_name`,
    `vmlimit`.`max` AS `vmLimit`,
    `vmcount`.`count` AS `vmTotal`,
    `iplimit`.`max` AS `ipLimit`,
    `ipcount`.`count` AS `ipTotal`,
    `volumelimit`.`max` AS `volumeLimit`,
    `volumecount`.`count` AS `volumeTotal`,
    `snapshotlimit`.`max` AS `snapshotLimit`,
    `snapshotcount`.`count` AS `snapshotTotal`,
    `templatelimit`.`max` AS `templateLimit`,
    `templatecount`.`count` AS `templateTotal`,
    `vpclimit`.`max` AS `vpcLimit`,
    `vpccount`.`count` AS `vpcTotal`,
    `projectlimit`.`max` AS `projectLimit`,
    `projectcount`.`count` AS `projectTotal`,
    `networklimit`.`max` AS `networkLimit`,
    `networkcount`.`count` AS `networkTotal`,
    `cpulimit`.`max` AS `cpuLimit`,
    `cpucount`.`count` AS `cpuTotal`,
    `memorylimit`.`max` AS `memoryLimit`,
    `memorycount`.`count` AS `memoryTotal`,
    `primary_storage_limit`.`max` AS `primaryStorageLimit`,
    `primary_storage_count`.`count` AS `primaryStorageTotal`,
    `secondary_storage_limit`.`max` AS `secondaryStorageLimit`,
    `secondary_storage_count`.`count` AS `secondaryStorageTotal`
  FROM ((((((((((((((((((((((((`cloud`.`domain`
    LEFT JOIN `cloud`.`resource_limit` `vmlimit`
      ON (((`cloud`.`domain`.`id` = `vmlimit`.`domain_id`) AND (`vmlimit`.`type` = 'user_vm')))) LEFT JOIN
    `cloud`.`resource_count` `vmcount`
      ON (((`cloud`.`domain`.`id` = `vmcount`.`domain_id`) AND (`vmcount`.`type` = 'user_vm')))) LEFT JOIN
    `cloud`.`resource_limit` `iplimit`
      ON (((`cloud`.`domain`.`id` = `iplimit`.`domain_id`) AND (`iplimit`.`type` = 'public_ip')))) LEFT JOIN
    `cloud`.`resource_count` `ipcount`
      ON (((`cloud`.`domain`.`id` = `ipcount`.`domain_id`) AND (`ipcount`.`type` = 'public_ip')))) LEFT JOIN
    `cloud`.`resource_limit` `volumelimit`
      ON (((`cloud`.`domain`.`id` = `volumelimit`.`domain_id`) AND (`volumelimit`.`type` = 'volume')))) LEFT JOIN
    `cloud`.`resource_count` `volumecount`
      ON (((`cloud`.`domain`.`id` = `volumecount`.`domain_id`) AND (`volumecount`.`type` = 'volume')))) LEFT JOIN
    `cloud`.`resource_limit` `snapshotlimit`
      ON (((`cloud`.`domain`.`id` = `snapshotlimit`.`domain_id`) AND (`snapshotlimit`.`type` = 'snapshot')))) LEFT JOIN
    `cloud`.`resource_count` `snapshotcount`
      ON (((`cloud`.`domain`.`id` = `snapshotcount`.`domain_id`) AND (`snapshotcount`.`type` = 'snapshot')))) LEFT JOIN
    `cloud`.`resource_limit` `templatelimit`
      ON (((`cloud`.`domain`.`id` = `templatelimit`.`domain_id`) AND (`templatelimit`.`type` = 'template')))) LEFT JOIN
    `cloud`.`resource_count` `templatecount`
      ON (((`cloud`.`domain`.`id` = `templatecount`.`domain_id`) AND (`templatecount`.`type` = 'template')))) LEFT JOIN
    `cloud`.`resource_limit` `vpclimit`
      ON (((`cloud`.`domain`.`id` = `vpclimit`.`domain_id`) AND (`vpclimit`.`type` = 'vpc')))) LEFT JOIN
    `cloud`.`resource_count` `vpccount`
      ON (((`cloud`.`domain`.`id` = `vpccount`.`domain_id`) AND (`vpccount`.`type` = 'vpc')))) LEFT JOIN
    `cloud`.`resource_limit` `projectlimit`
      ON (((`cloud`.`domain`.`id` = `projectlimit`.`domain_id`) AND (`projectlimit`.`type` = 'project')))) LEFT JOIN
    `cloud`.`resource_count` `projectcount`
      ON (((`cloud`.`domain`.`id` = `projectcount`.`domain_id`) AND (`projectcount`.`type` = 'project')))) LEFT JOIN
    `cloud`.`resource_limit` `networklimit`
      ON (((`cloud`.`domain`.`id` = `networklimit`.`domain_id`) AND (`networklimit`.`type` = 'network')))) LEFT JOIN
    `cloud`.`resource_count` `networkcount`
      ON (((`cloud`.`domain`.`id` = `networkcount`.`domain_id`) AND (`networkcount`.`type` = 'network')))) LEFT JOIN
    `cloud`.`resource_limit` `cpulimit`
      ON (((`cloud`.`domain`.`id` = `cpulimit`.`domain_id`) AND (`cpulimit`.`type` = 'cpu')))) LEFT JOIN
    `cloud`.`resource_count` `cpucount`
      ON (((`cloud`.`domain`.`id` = `cpucount`.`domain_id`) AND (`cpucount`.`type` = 'cpu')))) LEFT JOIN
    `cloud`.`resource_limit` `memorylimit`
      ON (((`cloud`.`domain`.`id` = `memorylimit`.`domain_id`) AND (`memorylimit`.`type` = 'memory')))) LEFT JOIN
    `cloud`.`resource_count` `memorycount`
      ON (((`cloud`.`domain`.`id` = `memorycount`.`domain_id`) AND (`memorycount`.`type` = 'memory')))) LEFT JOIN
    `cloud`.`resource_limit` `pri",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ic0kZ5
code,"SELECT * FROM a where 1=1 and not exists (select * from b)--abc;

SELECT * 
 FROM a 
 where not exists 
  (
    select * from b
  );
  
SELECT 
         *
         FROM
         tab
         WHERE FILE_DATE > (
                           SELECT 
                           MAX(FILE_DATE) AS MX_C_FILE_DT
                           FROM tab
                           WHERE FLAG = 'C' 
                           AND IND = 'C'
                           AND FILE_DATE < 
                                          ( SELECT 
                                            CAST( LOAD_START AS DATE) 
                                            FROM 
                                            tab  
                                            WHERE
                				              SOURCE_ID = 451 AND
                				              BATCH = 'R'
                		                   )
		                  );
                          
SELECT 
*
FROM
 DLTA_POC
  LEFT OUTER JOIN TEST3_DB.TET ORG
   ON DLTA_POC.YS_NO = ORG.EM_CODE_A
   AND DLTA_POC.AREA_NO = ORG.AREA_CODE_2
   AND DLTA_POC.GNT_POC = ORG.GEN_CD

  LEFT OUTER JOIN TEST.LOCATION LOC
   ON DLTA_POC.SE_KEY_POC = LOC.LOC_ID
   AND LOC.LOCATION_END_DT = DATE '9999-12-31' ;

SELECT *
  FROM a
  WHERE NOT (1 = 2)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Agp7c9
code,"DELIMITER /
CREATE TABLE IACUC_PROTOCOL_ALT_SEARCH ( 
    IACUC_PROTOCOL_ALT_SEARCH_ID DECIMAL(12,0) NOT NULL, 
    PROTOCOL_ID DECIMAL(12,0) NOT NULL,
    PROTOCOL_NUMBER VARCHAR(20),
    SEQUENCE_NUMBER DECIMAL(4,0) DEFAULT 1 NOT NULL,    
    SEARCH_REQUIRED VARCHAR(1) NOT NULL,
    SEARCH_DATE DATE NOT NULL,
    YEARS_SEARCHED VARCHAR(2000) NOT NULL,
    KEYWORDS VARCHAR(2000) NOT NULL,
    COMMENTS LONGTEXT,
    UPDATE_TIMESTAMP DATE NOT NULL, 
    UPDATE_USER VARCHAR(60) NOT NULL, 
    VER_NBR DECIMAL(8,0) DEFAULT 1 NOT NULL, 
    OBJ_ID VARCHAR(36) NOT NULL
) ENGINE InnoDB CHARACTER SET utf8 COLLATE utf8_bin
/

ALTER TABLE IACUC_PROTOCOL_ALT_SEARCH 
ADD CONSTRAINT PK_IACUC_PRTCL_ALT_SEARCH
PRIMARY KEY (IACUC_PROTOCOL_ALT_SEARCH_ID) 
/
DELIMITER ;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RQRC3Z
code,"ALTER TABLE `s_activitystream`
CHANGE COLUMN `typeId` `typeId` TEXT CHARACTER SET 'utf8mb4' NOT NULL ,
DROP INDEX `FK_m_crm_activitystream_5` ;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",y1-0jt
code,"-- // CB-2148 SDX should create RBDMS instance and Databases
-- Migration SQL that makes the change goes here.


ALTER TABLE sdxcluster ADD COLUMN IF NOT EXISTS createdatabase boolean NOT NULL DEFAULT false;
ALTER TABLE sdxcluster ADD COLUMN IF NOT EXISTS databasecrn VARCHAR(255);

-- //@UNDO
-- SQL to undo the change goes here.

ALTER TABLE sdxcluster DROP COLUMN IF EXISTS createdatabase;
ALTER TABLE sdxcluster DROP COLUMN IF EXISTS databasecrn;

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2YwAfJ
code,"-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	5.5.11


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


--
-- Create schema fts
--

CREATE DATABASE IF NOT EXISTS fts;
USE fts;

--
-- Definition of table `administrators`
--

DROP TABLE IF EXISTS `administrators`;
CREATE TABLE `administrators` (
  `lastLogin` datetime DEFAULT NULL,
  `lastLoginIp` varchar(255) DEFAULT NULL,
  `loginCount` int(11) NOT NULL,
  `userId` varchar(255) NOT NULL,
  PRIMARY KEY (`userId`),
  KEY `FK4AD897462619462` (`userId`),
  CONSTRAINT `FK4AD897462619462` FOREIGN KEY (`userId`) REFERENCES `users` (`userId`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `administrators`
--

/*!40000 ALTER TABLE `administrators` DISABLE KEYS */;
INSERT INTO `administrators` (`lastLogin`,`lastLoginIp`,`loginCount`,`userId`) VALUES 
 ('2012-04-17 00:09:38','0:0:0:0:0:0:0:1',16,'admin');
/*!40000 ALTER TABLE `administrators` ENABLE KEYS */;


--
-- Definition of table `designations`
--

DROP TABLE IF EXISTS `designations`;
CREATE TABLE `designations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code` varchar(255) NOT NULL,
  `current` bit(1) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `staffAdmin` bit(1) NOT NULL,
  `privileges_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK7F4F1F5CFC58D218` (`privileges_id`),
  CONSTRAINT `FK7F4F1F5CFC58D218` FOREIGN KEY (`privileges_id`) REFERENCES `permissions` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `designations`
--

/*!40000 ALTER TABLE `designations` DISABLE KEYS */;
INSERT INTO `designations` (`id`,`code`,`current`,`description`,`staffAdmin`,`privileges_id`) VALUES 
 (1,'DR GA',0x01,'Deputy Registrar - General Administration',0x01,1),
 (2,'PIO',0x01,'Public Information Officer',0x01,2),
 (3,'DR FA',0x01,'Deputy Registrar Fin. & Acc.',0x01,3),
 (7,'AR AC',0x01,'Assistant Registrar Acad.',0x01,7),
 (8,'AE CIVIL',0x01,'Assistant Engineer CIVIL',0x00,8),
 (9,'DR',0x01,'Director',0x01,9),
 (10,'RG',0x01,'Registrar',0x01,10),
 (12,'WD HL1',0x01,'Warden Hall 1',0x00,12),
 (13,'DEAN PD',0x01,'Dean Planning & Development',0x01,13),
 (14,'DEAN AC',0x01,'Dean Academics',0x01,14),
 (15,'DEAN SA',0x01,'Dean Student Affairs',0x01,15),
 (16,'PL CH',0x01,'Placement Chairman',0x01,16),
 (17,'CD LIB',0x01,'Coordinator Library',0x00,17),
 (18,'CD CC',0x01,'Coordinator CC',0x00,18),
 (19,'WD HL3',0x01,'Warden Hall 3',0x00,19);
/*!40000 ALTER TABLE `designations` ENABLE KEYS */;


--
-- Definition of table `files`
--

DROP TABLE IF EXISTS `files`;
CREATE TABLE `files` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `createdBy` varchar(255) NOT NULL,
  `creationDate` datetime NOT NULL,
  `currUser` varchar(255) NOT NULL,
  `document` bit(1) NOT NULL,
  `refNo` varchar(255) NOT NULL,
  `sentByCurrentUser` bit(1) NOT NULL,
  `status` int(11) NOT NULL,
  `subject` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=latin1;

--
-- Dumping data for table `files`
--

/*!40000 ALTER TABLE `files` DISABLE KEYS */;
INSERT INTO `files` (`id`,`createdBy`,`creationDate`,`currUser`,`document`,`refNo`,`sentByCurrentUser`,`status`,`subject`) VALUES 
 (11,'pio','2012-04-15 12:33:45','registrar',0x00,'IIITDMJ/2012/04/16/11',0x01,1,'Publishing convocation date of batch 2008'),
 (13,'pio','2012-04-15 12:36:14','pio',0x00,'IIITDMJ/2012/04/16/13',0x01,2,'Public Information to be sent to local papers on placement status'),
 (14,'registrar','2012-04-15 12:40:15','director',0x00,'IIITDMJ/2012/04/16/14',0x00,3,'Floating of tender of Hall5 Hostel Complex'),
 (15,'registrar','2012-04-16 12:41:39','registrar',0x00,'IIITDMJ/2012/04/17/15',0x01,2,'Upgradation of Ubuntu Software Version from 10.04 to 11.04'),
 (16,'registrar','2012-04-16 12:43:40','deanpd',0x00,'IIITDMJ/2012/04/17/16',0x00,3,'Laying Down of Fencing around Hall 1 and 3'),
 (17,'registrar','2012-04-16 12:44:05','director',0x00,'IIITDMJ/2012/04/17/17',0x01,2,'Approving bill for sports complex');
/*!40000 ALTER TABLE `files` ENABLE KEYS */;


--
-- Definition of table `files_trackers`
--

DROP TABLE IF EXISTS `files_trackers`;
CREATE TABLE `files_trackers` (
  `files_id` bigint(20) NOT NULL,
  `trackers_id` bigint(20) NOT NULL,
  UNIQUE KEY `trackers_id` (`trackers_id`),
  KEY `FKDD655D0326EC3913` (`files_id`),
  KEY `FKDD655D035ED44AA3` (`trackers_id`),
  CONSTRAINT `FKDD655D035ED44AA3` FOREIGN KEY (`trackers_id`) REFERENCES `trackers` (`id`),
  CONSTRAINT `FKDD655D0326EC3913` FOREIGN KEY (`files_id`) REFERENCES `files` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `files_track",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cm5VQN
code,"-- @author prabhd 
-- @created 2014-04-01 12:00:00
-- @modified 2012-04-01 12:00:00
-- @tags dml MPP-21090 ORCA
-- @optimizer_mode on	
-- @description Tests for MPP-21090
\echo --start_ignore
set gp_enable_column_oriented_table=on;
\echo --end_ignore
DROP TABLE IF EXISTS mpp21090_dropcol_addcol_splitpt_dml_date;
CREATE TABLE mpp21090_dropcol_addcol_splitpt_dml_date
(
    col1 date,
    col2 date,
    col3 char,
    col4 date
) 
DISTRIBUTED by (col1)
PARTITION BY RANGE(col2)(partition partone start('2013-12-01') end('2013-12-31') WITH(APPENDONLY=true, COMPRESSLEVEL=5, ORIENTATION=column),partition parttwo start('2013-12-31') end('2014-01-01') WITH (APPENDONLY=true, COMPRESSLEVEL=5, ORIENTATION=row),partition partthree start('2014-01-01') end('2014-02-01'));

INSERT INTO mpp21090_dropcol_addcol_splitpt_dml_date VALUES('2013-12-31','2013-12-31','a','2013-12-31');
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3,4;

ALTER TABLE mpp21090_dropcol_addcol_splitpt_dml_date ADD COLUMN col5 int DEFAULT 10;

INSERT INTO mpp21090_dropcol_addcol_splitpt_dml_date VALUES('2013-12-31','2013-12-31','b','2013-12-31',0);
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3,4;

ALTER TABLE mpp21090_dropcol_addcol_splitpt_dml_date DROP COLUMN col4;

INSERT INTO mpp21090_dropcol_addcol_splitpt_dml_date VALUES('2013-12-31','2013-12-31','c',1);
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3,4;

ALTER TABLE mpp21090_dropcol_addcol_splitpt_dml_date SPLIT PARTITION partone at ('2013-12-15') into (partition partsplitone,partition partsplitwo);

INSERT INTO mpp21090_dropcol_addcol_splitpt_dml_date SELECT '2013-12-01', '2013-12-01','d', 1;
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3;

-- Update distribution key
UPDATE mpp21090_dropcol_addcol_splitpt_dml_date SET col1 = '2014-02-10' WHERE col2 = '2013-12-01' AND col1 = '2013-12-01';
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3;

-- Update partition key
UPDATE mpp21090_dropcol_addcol_splitpt_dml_date SET col2 ='2013-12-31'  WHERE col2 = '2013-12-01' AND col1 = '2014-02-10';
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3;

DELETE FROM mpp21090_dropcol_addcol_splitpt_dml_date WHERE col3='b';
SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wAvw1_
code,"/**
 *Exclui a tabela ""tb_alunos"" (descomente somente se precisar excluir a tabela ""tb_alunos"")
 *DROP TABLE tb_alunos;
 */

/**
 *Cria a tabela ""tb_alunos""
 */
CREATE TABLE tb_alunos
(
   cpf varchar(11),
   nome varchar(255) 
);

/**
 *Insere a tabela ""tb_alunos""
 */
INSERT INTO tb_alunos VALUES ('15425714587', 'Carlos Andrade');
INSERT INTO tb_alunos VALUES ('59212347812', 'Ana Oliveira');

/**
 *Exibe a tabela ""tb_alunos""
 */
SELECT * FROM tb_alunos;

/**
 *1 º exemplo: como formatar CEP
 */
SELECT  
regexp_replace(cpf,'([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{2})','\1.\2.\3-\4') AS CEP
FROM tb_alunos;

/**
 *2 º exemplo: como formatar CEP
 *Substituindo a expressão ""0-9"" que indica a utilização de caracteres numéricos de 0 até 9, 
 *pela expressão [:digit:]. O resultado será o mesmo. 
 */
SELECT  
REGEXP_REPLACE (cpf, '([[:digit:]]{3})([[:digit:]]{3})([[:digit:]]{3})([[:digit:]]{2})', '\1.\2.\3-\4') AS cpf 
FROM tb_alunos;

/**
 *3º exemplo
 *Para facilitar, podemos substituir a expressão ""[[:digit:]]"" que indica a utilização 
 *de caracteres numéricos de 0 até 9, 
 *pela expressão abreviada ""\d"". O resultado será o mesmo.
 */
SELECT  
REGEXP_REPLACE (cpf,  '(\d{3})(\d{3})(\d{3})(\d{2})',  '\1.\2.\3-\4') AS cpf 
FROM tb_alunos;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8mgLnF
code,"
create table employee (

	id serial primary key,
	emp_name text,
	admission timestamp,
	salary integer,
	emp_position integer not null references employee_pos(id)

);

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Vy6lIg
code,"drop table if exists t;
create table t(a char(200) primary key,b varchar,c smallint,d int,e bigint,f date,g time,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar primary key,c smallint,d int,e bigint,f date,g time,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint primary key,d int,e bigint,f date,g time,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int primary key,e bigint,f date,g time,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint primary key,f date,g time,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time primary key,h timestamp,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);

drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp primary key,i datetime) partition by range(a)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime primary key) partition by range(b)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime primary key) partition by range(to_char(c))
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime ,primary key (c)) partition by range(to_char(c))
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);

drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime primary key) partition by range(to_char(d))
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime ,primary key (d)) partition by range(to_char(d))
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
insert into t select rownum,rownum,rownum,rownum,rownum,'2008-12-1','12:12:12','2008-12-1 12:12:12','2008-12-1 12:12:55' from db_root connect by level<10;
create unique index udex1 on t(a);
create unique index udex2 on t(b);
create unique index udex3 on t(c);
create unique index udex4 on t(d);
create unique index udex5 on t(e);
create unique index udex6 on t(f);
create unique index udex7 on t(g);
create unique index udex8 on t(h);
create unique index udex9 on t(i);
create unique index udex10 on t(a,b,c,d,e,f,g,h,i);
create unique index udex11 on t(a,b,c,d,e,f,g,h);
create unique index udex12 on t(a,b,c,d,e,f,g);
create unique index udex13 on t(a,b,c,d,e,f);
create unique index udex14 on t(a,b,c,d,e);
create unique index udex15 on t(a,b,c,d);
create unique index udex16 on t(a,b,c);
create unique index udex17 on t(a,b);
create unique index udex18 on t(b,c,d,e,f,g,h,i);
update statistics on t with fullscan;
show index in t;
show index in t__p__p0;
show index in t__p__p1;
show index in t__p__p2;
alter table t change d d varchar;
insert into t select rownum,rownum,rownum,'ff',rownum,'2008-12-1','12:12:12','2008-12-1 12:12:12','2008-12-1 12:12:55' from db_root connect by level<13;

drop table if exists t;
create table t(a char(200) ,b varchar ,c smallint ,d int ,e bigint ,f date,g time ,h timestamp ,i datetime ) partition by range(b)
(
partition p0 values less than ('dddd'),
partition p1 values less than ('kkk'),
partition p2 values less than ('ww')
);
insert into t select rownum,rownum,rownum,rownum,rownum,'2008-12-1','12:12:12','2008-12-1 12:12:12','2008-12-1 12:12:55' from db_root connect by level<10;
create unique index udex1 on t",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tmyOAY
code,"-- phpMyAdmin SQL Dump
-- version 4.5.4.1deb2ubuntu2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Mar 01, 2017 at 09:51 AM
-- Server version: 5.7.17-0ubuntu0.16.04.1
-- PHP Version: 7.0.15-0ubuntu0.16.04.2

SET SQL_MODE = ""NO_AUTO_VALUE_ON_ZERO"";
SET time_zone = ""+00:00"";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `MovieDiary`
--

-- --------------------------------------------------------

--
-- Table structure for table `Movies`
--

CREATE TABLE `Movies` (
  `Id`    INT(11)      NOT NULL,
  `Title` VARCHAR(100) NOT NULL,
  `Year`  SMALLINT(6)  NOT NULL
)
  ENGINE = InnoDB
  DEFAULT CHARSET = latin1;

-- --------------------------------------------------------

--
-- Table structure for table `Settings`
--

CREATE TABLE `Settings` (
  `Id`          INT(11)      NOT NULL,
  `Username`    VARCHAR(100) DEFAULT NULL,
  `RuntimeType` VARCHAR(100) NOT NULL,
  `Language`    VARCHAR(100) NOT NULL
)
  ENGINE = InnoDB
  DEFAULT CHARSET = latin1;

-- --------------------------------------------------------

--
-- Table structure for table `Users`
--

CREATE TABLE `Users` (
  `Id`        INT(11)      NOT NULL,
  `Firstname` VARCHAR(100) NOT NULL,
  `Lastname`  VARCHAR(100) NOT NULL,
  `Username`  VARCHAR(100) NOT NULL,
  `Password`  VARCHAR(100)          DEFAULT NULL,
  `Salt`      VARCHAR(16)  NOT NULL DEFAULT 'default'
)
  ENGINE = InnoDB
  DEFAULT CHARSET = latin1;

-- --------------------------------------------------------

--
-- Table structure for table `Views`
--

CREATE TABLE `Views` (
  `Id`        INT(11)      NOT NULL,
  `Username`  VARCHAR(100) NOT NULL,
  `MovieId`   INT(11)      NOT NULL,
  `Start`     TIMESTAMP    NULL DEFAULT NULL,
  `End`       TIMESTAMP    NULL DEFAULT NULL,
  `WasFirst`  TINYINT(1)   NOT NULL,
  `WasCinema` TINYINT(1)   NOT NULL
)
  ENGINE = InnoDB
  DEFAULT CHARSET = latin1;

-- --------------------------------------------------------

--
-- Table structure for table `Wishlist`
--

CREATE TABLE `Wishlist` (
  `Id`      INT(11) NOT NULL,
  `UserId`  INT(11) NOT NULL,
  `MovieId` INT(11) NOT NULL
)
  ENGINE = InnoDB
  DEFAULT CHARSET = latin1;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `Movies`
--
ALTER TABLE `Movies`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `Settings`
--
ALTER TABLE `Settings`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `Users`
--
ALTER TABLE `Users`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `Views`
--
ALTER TABLE `Views`
  ADD PRIMARY KEY (`Id`);

--
-- Indexes for table `Wishlist`
--
ALTER TABLE `Wishlist`
  ADD PRIMARY KEY (`Id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `Movies`
--
ALTER TABLE `Movies`
  MODIFY `Id` INT(11) NOT NULL AUTO_INCREMENT,
  AUTO_INCREMENT = 376867;
--
-- AUTO_INCREMENT for table `Settings`
--
ALTER TABLE `Settings`
  MODIFY `Id` INT(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `Users`
--
ALTER TABLE `Users`
  MODIFY `Id` INT(11) NOT NULL AUTO_INCREMENT,
  AUTO_INCREMENT = 65;
--
-- AUTO_INCREMENT for table `Views`
--
ALTER TABLE `Views`
  MODIFY `Id` INT(11) NOT NULL AUTO_INCREMENT,
  AUTO_INCREMENT = 150;
--
-- AUTO_INCREMENT for table `Wishlist`
--
ALTER TABLE `Wishlist`
  MODIFY `Id` INT(11) NOT NULL AUTO_INCREMENT;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Wyc_HR
code,"DELETE FROM `weenie` WHERE `class_Id` = 3323;

INSERT INTO `weenie` (`class_Id`, `class_Name`, `type`, `last_Modified`)
VALUES (3323, 'scrollitemexpertiseself2', 34, '2019-02-10 00:00:00') /* Scroll */;

INSERT INTO `weenie_properties_int` (`object_Id`, `type`, `value`)
VALUES (3323,   1,       8192) /* ItemType - Writable */
     , (3323,   5,         30) /* EncumbranceVal */
     , (3323,  16,          8) /* ItemUseable - Contained */
     , (3323,  19,          5) /* Value */
     , (3323,  93,       1044) /* PhysicsState - Ethereal, IgnoreCollisions, Gravity */
     , (3323, 8041,        101) /* PCAPRecordedPlacement - Resting */;

INSERT INTO `weenie_properties_bool` (`object_Id`, `type`, `value`)
VALUES (3323,  22, True ) /* Inscribable */;

INSERT INTO `weenie_properties_float` (`object_Id`, `type`, `value`)
VALUES (3323,  39,     1.5) /* DefaultScale */;

INSERT INTO `weenie_properties_string` (`object_Id`, `type`, `value`)
VALUES (3323,   1, 'Scroll of Item Tinkering Expertise Self II') /* Name */
     , (3323,  14, 'Use this item to attempt to learn its spell.') /* Use */
     , (3323,  16, 'Inscribed spell: Item Tinkering Expertise Self II
Increases the caster''s Item Tinkering skill by 15 points.') /* LongDesc */;

INSERT INTO `weenie_properties_d_i_d` (`object_Id`, `type`, `value`)
VALUES (3323,   1,   33554826) /* Setup */
     , (3323,   8,  100676477) /* Icon */
     , (3323,  22,  872415275) /* PhysicsEffectTable */
     , (3323,  28,        727) /* Spell - ItemExpertiseSelf2 */
     , (3323, 8001,    6307864) /* PCAPRecordedWeenieHeader - Value, Usable, Container, Burden, Spell */
     , (3323, 8003,         18) /* PCAPRecordedObjectDesc - Inscribable, Attackable */
     , (3323, 8005,     135297) /* PCAPRecordedPhysicsDesc - CSetup, ObjScale, PeTable, AnimationFrame */;

INSERT INTO `weenie_properties_i_i_d` (`object_Id`, `type`, `value`)
VALUES (3323, 8000, 3360965399) /* PCAPRecordedObjectIID */;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HgB-B6
code,"---
--- This patch updates CM 2.16 to 2.17
--- Apply this patch if you want to update DeepaMehta 2.0b7 to 2.0b8-rc4 while keeping your content
---


---------------------------------------------------
--- Extended Access Control: Define 2 new roles ---
---------------------------------------------------

-- create properties ""Editor"" and ""Publisher""
INSERT INTO Topic VALUES ('tt-property', 1, 1, 'pp-editor', 'Editor');
INSERT INTO TopicProp VALUES ('pp-editor', 1, 'Name', 'Editor');
INSERT INTO TopicProp VALUES ('pp-editor', 1, 'Visualization', 'Switch');
INSERT INTO Topic VALUES ('tt-property', 1, 1, 'pp-publisher', 'Publisher');
INSERT INTO TopicProp VALUES ('pp-publisher', 1, 'Name', 'Publisher');
INSERT INTO TopicProp VALUES ('pp-publisher', 1, 'Visualization', 'Switch');

-- assign properties to association type ""Membership""
INSERT INTO Association VALUES ('at-composition', 1, 1, 'a-93', '', 'at-membership', 1, 'pp-editor', 1);
INSERT INTO AssociationProp VALUES ('a-93', 1, 'Ordinal Number', '10');
INSERT INTO Association VALUES ('at-composition', 1, 1, 'a-94', '', 'at-membership', 1, 'pp-publisher', 1);
INSERT INTO AssociationProp VALUES ('a-94', 1, 'Ordinal Number', '20');

-- set ""Publisher"" property for all existing memberships (to emulate 2.0b7 behavoir)
INSERT INTO AssociationProp SELECT ID, 1, 'Publisher', 'on' FROM Association WHERE TypeID = 'at-membership';



--------------------------------
--- Rearrange standard types ---
--------------------------------

-- delete ""City"", ""Country"" and ""Appointment"" assignments from workspace ""DeepaMehta""
DELETE FROM Association WHERE ID='a-324';
DELETE FROM AssociationProp WHERE AssociationID='a-324';
DELETE FROM ViewAssociation WHERE AssociationID='a-324';
DELETE FROM Association WHERE ID='a-325';
DELETE FROM AssociationProp WHERE AssociationID='a-325';
DELETE FROM ViewAssociation WHERE AssociationID='a-325';
DELETE FROM Association WHERE ID='a-186';
DELETE FROM AssociationProp WHERE AssociationID='a-186';
DELETE FROM ViewAssociation WHERE AssociationID='a-186';



---------------------------------
--- New Application: Calendar ---
---------------------------------

---
--- create topic type ""Calendar"" ---
---
INSERT INTO Topic VALUES ('tt-topictype', 1, 1, 'tt-calendar', 'Calendar');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Name', 'Calendar');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Plural Name', 'Calendars');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Description', '<html><head></head><body><p>A <i>Calendar</i> is ...</p></body></html>');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Description Query', 'What is a ""Calendar""?');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Icon', 'calendar.png');
-- INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Creation Icon', 'createKompetenzstern.gif');
-- INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Unique Topic Names', 'on');
INSERT INTO TopicProp VALUES ('tt-calendar', 1, 'Custom Implementation', 'de.deepamehta.topics.CalendarTopic');
-- super type
INSERT INTO Association VALUES ('at-derivation', 1, 1, 'a-95', '', 'tt-generic', 1, 'tt-calendar', 1);
-- search type
INSERT INTO Topic VALUES ('tt-topictype', 1, 1, 'tt-calendar-search', 'Calendar Search');
INSERT INTO TopicProp VALUES ('tt-calendar-search', 1, 'Name', 'Calendar Search');
INSERT INTO TopicProp VALUES ('tt-calendar-search', 1, 'Icon', 'calendar-search.gif');
-- derive search type
INSERT INTO Association VALUES ('at-derivation', 1, 1, 'a-96', '', 'tt-topiccontainer', 1, 'tt-calendar-search', 1);
-- assign search type to type
INSERT INTO Association VALUES ('at-aggregation', 1, 1, 'a-97', '', 'tt-calendar-search', 1, 'tt-calendar', 1);
-- create properties
INSERT INTO Topic VALUES ('tt-property', 1, 1, 'pp-displaydate', 'Display Date');
INSERT INTO TopicProp VALUES ('pp-displaydate', 1, 'Name', 'Display Date');
INSERT INTO TopicProp VALUES ('pp-displaydate', 1, 'Visualization', 'Date Chooser');
INSERT INTO Topic VALUES ('tt-property', 1, 1, 'pp-displaymode', 'Display Mode');
INSERT INTO TopicProp VALUES ('pp-displaymode', 1, 'Name', 'Display Mode');
INSERT INTO TopicProp VALUES ('pp-displaymode', 1, 'Visualization', 'Options Menu');
-- create property values
INSERT INTO Topic VALUES ('tt-constant', 1, 1, 't-day', 'Day');
INSERT INTO TopicProp VALUES ('t-day', 1, 'Name', 'Day');
INSERT INTO Topic VALUES ('tt-constant', 1, 1, 't-week', 'Week');
INSERT INTO TopicProp VALUES ('t-week', 1, 'Name', 'Week');
INSERT INTO Topic VALUES ('tt-constant', 1, 1, 't-month', 'Month');
INSERT INTO TopicProp VALUES ('t-month', 1, 'Name', 'Month');
-- assign property values to property
INSERT INTO Association VALUES ('at-composition', 1, 1, 'a-157', '', 'pp-displaymode', 1, 't-day', 1);
INSERT INTO AssociationProp VALUES ('a-157', 1, 'Ordinal Number', '1');
INSERT INTO Association VALUES ('at-composition', 1, 1, 'a-162', '', 'pp-displaymode', 1, 't-week', 1);
INSERT INTO AssociationProp VALUES ('a-162', 1, 'Ordinal Number', '2');
INSERT INTO Association VALUES ('at-composition', 1, 1, 'a-187', '', 'pp-displaymode', 1, 't-month', 1);
INSERT INTO Association",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XDDjB7
code,"IF NOT EXISTS ( SELECT  *
                FROM    sys.columns
                WHERE   object_id = OBJECT_ID(N'[dbo].[User]')
                        AND name = 'Salt' )
    BEGIN

        ALTER TABLE [dbo].[User] ADD Salt VARBINARY(30) NULL;  

    END;",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zuv32n
code,"create table if not exists `mysql_db` ( 
    `server_id`         integer not null primary key,
    `name`              varchar(128) not null, 
    `password`          varchar(128) not null
) default charset=utf8;
alter table `server_config` add `display_ip` varchar(64) not null default '';
alter table `server_config` add `user_players` integer not null default 0;
alter table `user` add `reset_hash` varchar(32) not null default '';
create index `idx_usr_email` on `user`(`email`);
create index `idx_usrsv_user` on `user_server`(`user_id`);
create index `idx_usrsv_role` on `user_server`(`role`);
create index `idx_usrsv_server` on `user_server`(`server_id`);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",x4-iEY
code,"if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_ContractorsAddInfo_ID_C]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_ContractorsAddInfo] DROP CONSTRAINT FK_b_ContractorsAddInfo_ID_C
GO
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_ContractorsResponsibles_ID_C]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_ContractorsResponsibles] DROP CONSTRAINT FK_b_ContractorsResponsibles_ID_C
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_ContractorsResponsibles_ID_C_Group]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_ContractorsResponsibles] DROP CONSTRAINT FK_b_ContractorsResponsibles_ID_C_Group
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_ContractorsTree_ID_C]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_ContractorsTree] DROP CONSTRAINT FK_b_ContractorsTree_ID_C
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_Doc_b_Contractors]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_Doc] DROP CONSTRAINT FK_b_Doc_b_Contractors
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_Telefons_b_Contractors]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_Telefons] DROP CONSTRAINT FK_b_Telefons_b_Contractors
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_b_Telefons_b_Contractors1]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[b_Telefons] DROP CONSTRAINT FK_b_Telefons_b_Contractors1
GO
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[b_Contractors]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[b_Contractors]
GO
CREATE TABLE [dbo].[b_Contractors] (
	[ID_C] [int] IDENTITY (1, 1) NOT NULL ,
	[ParentID] [int] NULL ,
	[ID_GS] [bigint] NULL ,
	[PLatID] [int] NULL ,
	[Type] [smallint] NULL ,
	[telefon] [varchar] (50) COLLATE Cyrillic_General_CI_AS NULL ,
	[Kod1C] [varchar] (20) COLLATE Cyrillic_General_CI_AS NULL ,
	[Sotrud] [smallint] NULL ,
	[Removed] [smallint] NULL ,
	[Dogovor] [ntext] COLLATE Cyrillic_General_CI_AS NULL ,
	[Name_c] [varchar] (100) COLLATE Cyrillic_General_CI_AS NULL ,
	[ContactPerson] [varchar] (100) COLLATE Cyrillic_General_CI_AS NULL ,
	[Email_c] [varchar] (100) COLLATE Cyrillic_General_CI_AS NULL ,
	[DopInfo] [varchar] (3000) COLLATE Cyrillic_General_CI_AS NULL ,
	[Limit] [money] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

ALTER TABLE [dbo].[b_Contractors] WITH NOCHECK ADD
	CONSTRAINT [PK_b_contractors] PRIMARY KEY  CLUSTERED
	(
		[ID_C]
	)  ON [PRIMARY]


GO
ALTER TABLE [dbo].[b_Contractors] WITH NOCHECK ADD
	CONSTRAINT [DF_b_Contractors_PLatID] DEFAULT (0) FOR [PLatID],
	CONSTRAINT [DF_b_Contractors_Remover] DEFAULT (0) FOR [Removed]
GO


 CREATE  INDEX [ind_b_Contractors_ParentID] ON [dbo].[b_Contractors]([ParentID]) ON [PRIMARY]
GO

exec sp_addextendedproperty N'MS_Description', N'""Removed"" flag. 1 - YES, 0 - NO', N'user', N'dbo', N'table', N'b_Contractors', N'column', N'Removed'
GO
exec sp_addextendedproperty N'MS_Description', null, N'user', N'dbo', N'table', N'b_Contractors', N'column', N'DopInfo'
GO
exec sp_addextendedproperty N'MS_Description', N'Contractors list', N'user', N'dbo', N'table', N'b_Contractors'
GO


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LdgDps
code,"CREATE TABLE ""voter_turnout_2001_2009"" (
	""ward""	real,
	""polling_place""	text,
	""_4_7_09""	text,
	""_2_17_09""	text,
	""_11_4_08""	text,
	""_9_9_08""	text,
	""_4_1_08""	text,
	""_2_19_08""	text,
	""_4_3_07""	text,
	""_2_20_07""	text,
	""_11_7_06""	text,
	""_9_12_06""	text,
	""_4_4_06""	text,
	""_2_21_06""	text,
	""_5_24_05""	text,
	""_4_5_05""	text,
	""_2_15_05""	text,
	""_11_2_04""	text,
	""_9_14_04""	text,
	""_4_6_04""	text,
	""_2_17_04""	text,
	""_6_3_03""	text,
	""_4_1_03""	text,
	""_2_18_03""	text,
	""_11_5_02""	text,
	""_9_10_02""	text,
	""_4_2_02""	text,
	""_2_19_02""	text,
	""_4_3_01""	text,
	""_2_20_01""	text,
	""average""	text
);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IT9CXM
code,"/*L
   Copyright SAIC

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/

DROP PUBLIC SYNONYM GO_CLOSURE
/

--
-- GO_CLOSURE  (Synonym) 
--
--  Dependencies: 
--   GO_CLOSURE (Table)
--
CREATE PUBLIC SYNONYM GO_CLOSURE FOR GO_CLOSURE
/


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hbgPwA
code,"CREATE TABLE P1 (
	A INTEGER NOT NULL,
	C INTEGER NOT NULL,
	D INTEGER NOT NULL
	,CONSTRAINT T1_PK_TREE PRIMARY KEY(C, A)
        ,ASSUMEUNIQUE(C)
);
PARTITION TABLE P1 ON COLUMN A;
CREATE TABLE P2 (
	A INTEGER NOT NULL,
	C INTEGER NOT NULL,
	D INTEGER NOT NULL
	,CONSTRAINT T2_PK_TREE PRIMARY KEY(C, A)
        ,ASSUMEUNIQUE(C)
);
PARTITION TABLE P2 ON COLUMN A;


CREATE TABLE R1 (
	A INTEGER NOT NULL,
	C INTEGER NOT NULL
);
CREATE TABLE R2 (
	A INTEGER NOT NULL,
	C INTEGER NOT NULL
);

CREATE INDEX R2AC ON R2 (A,C);
CREATE INDEX R2C ON R2 (C);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QOL1AN
code,"/*
 * Add a text array for the codes of all code classes
 */

ALTER TABLE paper ADD COLUMN IF NOT EXISTS codes text[] NOT NULL DEFAULT '{}';

CREATE INDEX gin_idx_codes ON paper USING GIN (codes);

UPDATE paper SET codes = '{1F,2N,3C,4G,5H,5S,6M,7L,8O}' WHERE id = 1;
UPDATE paper SET codes = '{1F,1V,2N,3C,4D,4H,5H,6M,7L,8O}' WHERE id = 2;
UPDATE paper SET codes = '{2R,3A,3B,4C,5U,6M,7L}' WHERE id = 3;


/*
 * Add table code_class and fill the data
 *
 * Note: The corresponding table in the scipamato-core part is code_class_tr
 */
CREATE TABLE code_class (
  code_class_id integer NOT NULL,
  lang_code text NOT NULL,
  name text NOT NULL,
  description text NOT NULL,
  version integer DEFAULT 1,
  created TIMESTAMP DEFAULT current_timestamp,
  last_modified TIMESTAMP DEFAULT current_timestamp,

  PRIMARY KEY(code_class_id, lang_code)
);

INSERT INTO code_class VALUES (1, 'de', 'Schadstoffe', 'Schadstoffe, Einwirkung, Exposition', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (2, 'de', 'Region', 'Geographie (Europa, andere)', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (3, 'de', 'Kollektiv', 'Stichprobe, Kollektiv', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (4, 'de', 'Zielgrössen', 'Wirkungen, Zielgrössen', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (5, 'de', 'Studientyp', 'Art der Studie, der Publikation', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (6, 'de', 'Spezies', 'Spezies (Mensch, Tier, Pflanze etc.)', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (7, 'de', 'Zeitdauer', 'Zeit der Einwirkung (kurzfristig – langfristig)', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (8, 'de', 'Umgebung', 'Umgebung (berufliche Exposition, Aussenluft…)', 1, DEFAULT, DEFAULT);

INSERT INTO code_class VALUES (1, 'en', 'Exposure Agent', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (2, 'en', 'Region', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (3, 'en', 'Study Population', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (4, 'en', 'Health Outcome', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (5, 'en', 'Study Design', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (6, 'en', 'Species', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (7, 'en', 'Duration of Exposure', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (8, 'en', 'Setting', '', 1, DEFAULT, DEFAULT);

INSERT INTO code_class VALUES (1, 'fr', 'Polluant nocif', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (2, 'fr', 'Région', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (3, 'fr', 'Echantillons des personnes', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (4, 'fr', 'Effets physiologigue ou nocifs', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (5, 'fr', 'Typ d''étude', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (6, 'fr', 'Espèces investigées', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (7, 'fr', 'Durée de l''exposition', '', 1, DEFAULT, DEFAULT);
INSERT INTO code_class VALUES (8, 'fr', 'Site d''exposition', '', 1, DEFAULT, DEFAULT);


/*
 * Add table code and fill the data
 *
 * Note: The corresponding table in the scipamato-core part is code_tr.
 *       Important:
 *       - Internal codes in scipamato-core will not be synchronized and are left out here too.
 *       - Some internal codes are aggregated here (5A, 5B, 5C -> 5abc (lower case!))
 */
CREATE TABLE code (
  code text NOT NULL,
  lang_code text NOT NULL,
  code_class_id integer NOT NULL,
  name text NOT NULL,
  comment text NULL,
  sort integer NOT NULL,
  version integer DEFAULT 1,
  created TIMESTAMP DEFAULT current_timestamp,
  last_modified TIMESTAMP DEFAULT current_timestamp,

  PRIMARY KEY(code, lang_code)
);

ALTER TABLE code ADD CONSTRAINT idx_code UNIQUE (code_class_id, lang_code, code);

INSERT INTO code VALUES('1F', 'de', 1, 'Feinstaub, Partikel', null, 1, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1A', 'de', 1, 'Ozon, Oxidantien', null, 2, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1B', 'de', 1, 'Stickoxide, Ammoniak', null, 3, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1C', 'de', 1, 'Kohlenwasserstoffe, nicht chloriert, VOC', null, 4, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1D', 'de', 1, 'Kohlenmonoxid', null, 5, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1E', 'de', 1, 'SO2, Schwefelverbindungen,', null, 6, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1G', 'de', 1, 'Metalle', null, 7, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1H', 'de', 1, 'Halogene, halogenierte Stoffe', null, 8, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1I', 'de', 1, 'Saure Aerosole', null, 9, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1K', 'de', 1, 'Radioaktive Stoffe', null, 10, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1L', 'de', 1, 'Asbest, Fasern', null, 11, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1M', 'de', 1, 'Tabakrauch, Passivrauchen', null, 12, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1P', 'de', 1, 'Pollen', null, 14, 1, DEFAULT, DEFAULT);
INSERT INTO code VALUES('1R', 'de', 1, 'Feuchtigkeit in de",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xcLyJh
code,"--
-- PostgreSQL database dump
--

-- Dumped from database version 10.5
-- Dumped by pg_dump version 10.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;

ALTER TABLE IF EXISTS ONLY public.numberoflandownerspernationality DROP CONSTRAINT IF EXISTS pk_numberoflandownerspernationality;
DROP TABLE IF EXISTS public.numberoflandownerspernationality;
SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: numberoflandownerspernationality; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.numberoflandownerspernationality (
    geo_level character varying(15) NOT NULL,
    geo_code character varying(10) NOT NULL,
    geo_version character varying(100) DEFAULT ''::character varying NOT NULL,
    ""number of land owners per nationality"" character varying(128) NOT NULL,
    total integer
);


--
-- Data for Name: numberoflandownerspernationality; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.numberoflandownerspernationality (geo_level, geo_code, geo_version, ""number of land owners per nationality"", total) FROM stdin;
province	EC	2016	South African	8616
province	FS	2016	South African	13765
province	GT	2016	South African	40734
province	KZN	2016	South African	19807
province	MP	2016	South African	10774
province	NW	2016	South African	17067
province	NC	2016	South African	6601
province	WC	2016	South African	13705
country	ZA	2016	South African	143493
province	EC	2016	Foreign	545
province	FS	2016	Foreign	536
province	GT	2016	Foreign	5099
province	KZN	2016	Foreign	1647
province	MP	2016	Foreign	845
province	NW	2016	Foreign	828
province	NC	2016	Foreign	253
province	WC	2016	Foreign	1465
country	ZA	2016	Foreign	12213
province	EC	2016	Other	2519
province	FS	2016	Other	876
province	GT	2016	Other	1758
province	KZN	2016	Other	8538
province	MP	2016	Other	1401
province	NW	2016	Other	6226
province	NC	2016	Other	333
province	WC	2016	Other	1681
country	ZA	2016	Other	25826
province	LIM	2016	South African	12424
province	LIM	2016	Foreign	995
province	LIM	2016	Other	2494
\.


--
-- Name: numberoflandownerspernationality pk_numberoflandownerspernationality; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.numberoflandownerspernationality
    ADD CONSTRAINT pk_numberoflandownerspernationality PRIMARY KEY (geo_level, geo_code, geo_version, ""number of land owners per nationality"");


--
-- PostgreSQL database dump complete
--

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F13NuG
code,"-- Digging Through Bones (10922)
SET @LETOLL       := 22458;
SET @RESEARCHER   := 22464;
SET @B_SIFTER     := 22466;
SET @SG_TRIGGER   := 22457;
SET @RESEARCHER1  := 78837;

-- Faulty spawn, it needs to be spawned by a script.
DELETE FROM `creature` WHERE `guid`=85488;

DELETE FROM `creature_text` WHERE `entry`=@LETOLL;
INSERT INTO `creature_text` (`entry`,`groupid`,`id`,`text`,`type`,`language`,`probability`,`emote`,`duration`,`sound`,`comment`) VALUES
(@LETOLL,0,0,""'Aright, listen up! Form a circle around me and move out!"",12,0,100,0,0,0,''),
(@LETOLL,1,0,""Aright, $R, just keep us safe from harm while we work. We'll pay you when we return."",12,0,100,0,0,0,''),
(@LETOLL,2,0,""The dig site is just north of here."",12,0,100,0,0,0,''),
(@LETOLL,3,0,""We're here! Start diggin'!"",12,0,100,0,0,0,''),
(@LETOLL,4,0,""I think there's somethin' buried here, beneath the sand!"",12,0,100,396,0,0,''),
(@LETOLL,5,0,""Almost got it!"",12,0,100,396,0,0,''),
(@LETOLL,6,0,""By Brann's brittle bananas! What is it?! It... It looks like a drum."",12,0,100,396,0,0,''),
(@LETOLL,7,0,""Have ye gone mad? You expect me to leave behind a drum without first beatin' on it? Not this son of Ironforge! No sir!"",12,0,100,0,0,0,''),
(@LETOLL,8,0,""Shut yer yaps! I'm gonna bang on this drum and that's that!"",12,0,100,0,0,0,''),
(@LETOLL,9,0,""IN YOUR FACE! I told you there was somethin' here!"",12,0,100,0,0,0,''),
(@LETOLL,10,0,""Don't just stand there! Help him out!"",12,0,100,0,0,0,''),
(@LETOLL,11,0,""You've been a tremendous help, $R! Let's get out of here before more of those things show up! I'll let Dwarfowitz know you did the job asked of ya' admirably."",12,0,100,0,0,0,'');

DELETE FROM `creature_text` WHERE `entry`=@RESEARCHER;
INSERT INTO `creature_text` (`entry`,`groupid`,`id`,`text`,`type`,`language`,`probability`,`emote`,`duration`,`sound`,`comment`) VALUES
(@RESEARCHER,0,0,""Wow... a drum."",12,0,100,0,0,0,''),
(@RESEARCHER,1,0,""This discovery will surely rock the foundation of modern archaeology."",12,0,100,0,0,0,''),
(@RESEARCHER,2,0,""Yea, great. Can we leave now? This desert is giving me hives."",12,0,100,0,0,0,''),
(@RESEARCHER,3,0,""This reminds me of that one time where you made us search Silithus for evidence of sand gnomes."",12,0,100,0,0,0,''),
(@RESEARCHER,4,0,""Or that time when you told us that you'd discovered the cure for the plague of the 20th century. What is that even? 20th century?"",12,0,100,0,0,0,''),
(@RESEARCHER,5,0,""I don't think it can top the one time where he told us that he'd heard that Arthas's cousin's skeleton was frozen beneath a glacier in Winterspring. I'll never forgive you for that one, Letoll. I mean honestly... Arthas's cousin?"",12,0,100,0,0,0,''),
(@RESEARCHER,6,0,""I dunno. It can't possibly beat the time he tried to convince us that we're all actually a figment of some being's imagination and that they only use us for their own personal amusement. That went over well during dinner with the family."",12,0,100,0,0,0,''),
(@RESEARCHER,7,0,""Say, do you guys hear that?"",12,0,100,0,0,0,'');

DELETE FROM `waypoints` WHERE `entry` IN (@LETOLL,@RESEARCHER,@LETOLL*100);
INSERT INTO `waypoints` (`entry`,`pointid`,`position_x`,`position_y`,`position_z`,`point_comment`) VALUES
(@LETOLL,1,-3728.1,5385.5,-3.41,''),
(@LETOLL,2,-3735.9,5392.8,-4.8,''),
(@LETOLL,3,-3729.7,5381,-4.9,''),
(@LETOLL,4,-3704.6, 5372.74, -9.33,''),
(@LETOLL,5,-3704.8,5374.7,-8.9,''),
(@LETOLL,6,-3623.2,5403.2,-11.5,''),
(@LETOLL,7,-3554.6,5455.2,-11.3,''),
(@LETOLL,8,-3557.7,5468.9,-8.1,''),
(@LETOLL,9,-3548.9,5458.3,-12.3,''),
(@RESEARCHER,1,-3725.1,5381.9,-4.4,''),
(@RESEARCHER,2,-3735.7,5390.7,-5.7,''),
(@RESEARCHER,3,-3728.4,5384.1,-3.4,''),
(@RESEARCHER,4,-3703.1,5371.4,-10.1,''),
(@RESEARCHER,5,-3619.6,5400.8,-12.1,''),
(@RESEARCHER,6,-3554.2,5451.1,-11.8,''),
(@RESEARCHER,7,-3563.1,5462.8,-6.5,''),
(@RESEARCHER,8,-3551.1,5454,-11.9,'');


UPDATE `creature_template` SET `AIname`='SmartAI' WHERE `entry` IN (@LETOLL,@RESEARCHER,@B_SIFTER);
DELETE FROM `smart_scripts` WHERE `source_type`=0 AND `entryorguid` IN (@LETOLL,-@RESEARCHER1,@B_SIFTER);
DELETE FROM `smart_scripts` WHERE `source_type`=9 AND `entryorguid` IN (@LETOLL*100+2,@LETOLL*100+1,@LETOLL*100,@RESEARCHER*100);
INSERT INTO `smart_scripts` (`entryorguid`, `source_type`, `id`, `link`, `event_type`, `event_phase_mask`, `event_chance`, `event_flags`, `event_param1`, `event_param2`, `event_param3`, `event_param4`, `action_type`, `action_param1`, `action_param2`, `action_param3`, `action_param4`, `action_param5`, `action_param6`, `target_type`, `target_param1`, `target_param2`, `target_param3`, `target_x`, `target_y`, `target_z`, `target_o`, `comment`) VALUES
(@LETOLL,0,0,1,19,0,100,0,10922,0,0,0,53,0,@LETOLL,0,0,0,0,1,0,0,0,0,0,0,0,'On quest accept - Start WP'),
(@LETOLL,0,1,0,61,0,100,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,'Say line 0'),
(@LETOLL,0,2,3,40,0,100,0,1,@LETOLL,0,0,54,10000,0,0,0,0,0,1,0,0,0,0,0,0,0,'On WP reached - Pause WP'),
(@LETOLL,0,3,10,61,0,100,0,0,0,0,0,80,@LETOLL*100,0,0,0,0,0,1,0,0,0,0,0,0,0,'On WP reached - Start Timed Event'),
(@LETOLL,0,4,5,40,0,100,0,8,@LETOLL,0,0,17,233,0,0,0,0,0,1,0",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jqVpga
code,"SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


IF OBJECT_ID('dbo.[Note]', N'U') IS NOT NULL
DROP TABLE [dbo].[Note]
GO

/****** Object:  Table [dbo].[Note]    Script Date: 4/29/2014 2:24:05 PM ******/
CREATE TABLE [dbo].[Note](
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	[EntityTypeValue] [char](2) NOT NULL,
	[ReferenceId] [uniqueidentifier] NOT NULL,
	[ReferenceName] [nvarchar](256) NOT NULL,
	[Description] [nvarchar](2048) NULL,
	[ImageData] [varchar](max) NULL,
	[RevisionNumber] [int] NULL,
	[CreatedBy] [uniqueidentifier] NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedBy] [uniqueidentifier] NULL,
	[ModifiedOn] [datetime] NULL,
CONSTRAINT [PK_Note] PRIMARY KEY CLUSTERED 
	([Id] ASC)
	WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
GO


IF OBJECT_ID('dbo.[Note_Log]', N'U') IS NOT NULL
DROP TABLE [dbo].[Note_Log]
GO

/****** Object:  Table [dbo].[Note_Log]    Script Date: 4/29/2014 2:24:05 PM ******/

CREATE TABLE [dbo].[Note_Log](
	[Sr] [bigint] IDENTITY(1,1) NOT NULL,
	[Id] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	[EntityTypeValue] [char](2) NOT NULL,
	[ReferenceId] [uniqueidentifier] NOT NULL,
	[ReferenceName] [nvarchar](256) NOT NULL,
	[Description] [nvarchar](2048) NULL,
	[ImageData] [varchar](max) NULL,
	[RevisionNumber] [int] NULL,
	[CreatedBy] [uniqueidentifier] NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedBy] [uniqueidentifier] NULL,
	[ModifiedOn] [datetime] NULL,
CONSTRAINT [PK_Note_Log] PRIMARY KEY CLUSTERED 
	([Sr] ASC)
	WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO


IF OBJECT_ID('dbo.[NoteView]', 'V') IS NOT NULL
DROP VIEW [dbo].[NoteView]
GO

/****** Object:  View [dbo].[NoteView]    Script Date: 4/29/2014 2:24:05 PM ******/
CREATE VIEW [dbo].[NoteView]
AS
	SELECT
	N.[Id]
	,N.[Name]
	,N.[EntityTypeValue]
	,N.[ReferenceId]
	,N.[ReferenceName]
	,N.[Description]
	,N.[ImageData]
	,N.[RevisionNumber]
	,N.[CreatedBy]
	,CC.[Name] AS CreatedByName
	,N.[CreatedOn]
	,N.[ModifiedBy]
	,MC.[Name] AS ModifiedByName
	,N.[ModifiedOn]
	From Note N
	LEFT JOIN Contact CC ON N.[CreatedBy] = CC.[Id]
	LEFT JOIN Contact MC ON N.[ModifiedBy] = MC.[Id]

GO
SET ANSI_PADDING OFF 
GO


IF OBJECT_ID('dbo.[usp_NoteInsert]', N'P') IS NOT NULL
DROP PROCEDURE[dbo].[usp_NoteInsert]
GO

/****** Object:  StoredProcedure [dbo].[usp_NoteInsert]    Script Date: 4/29/2014 2:24:05 PM ******/
CREATE PROC [dbo].[usp_NoteInsert]
	@Id  [uniqueidentifier]
	,@Name [nvarchar](256)
	,@EntityTypeValue [char](2) 
	,@ReferenceId [uniqueidentifier]
	,@ReferenceName [nvarchar](256)  
	,@Description [nvarchar](2048)
	,@ImageData [varchar](max)
	,@UserID  [uniqueidentifier]

AS
	SET NOCOUNT ON 
	SET XACT_ABORT ON

	BEGIN TRAN

	INSERT INTO [dbo].[Note] ([Id], [Name], [EntityTypeValue], [ReferenceId], [ReferenceName], [Description], [ImageData], [RevisionNumber], [CreatedBy], [CreatedOn], [ModifiedBy], [ModifiedOn])
	SELECT @Id, @Name, @EntityTypeValue, @ReferenceId, @ReferenceName, @Description, @ImageData, 0, @UserId, GETDATE(), NULL, NULL

	INSERT INTO [dbo].[Note_log] ([Id], [Name], [EntityTypeValue], [ReferenceId], [ReferenceName], [Description], [ImageData], [RevisionNumber], [CreatedBy], [CreatedOn], [ModifiedBy], [ModifiedOn])
	SELECT
	N.[Id]
	,N.[Name]
	,N.[EntityTypeValue]
	,N.[ReferenceId]
	,N.[ReferenceName]
	,N.[Description]
	,N.[ImageData]
	,N.[RevisionNumber]
	,N.[CreatedBy]
	,N.[CreatedOn]
	,N.[ModifiedBy]
	,N.[ModifiedOn]
	From Note N

	WHERE N.[Id] = @Id


	COMMIT;

	SELECT
	N.[Id]
	,N.[Name]
	,N.[EntityTypeValue]
	,N.[ReferenceId]
	,N.[ReferenceName]
	,N.[Description]
	,N.[ImageData]
	,N.[RevisionNumber]
	,N.[CreatedBy]
	,N.[CreatedOn]
	,N.[ModifiedBy]
	,N.[ModifiedOn]
	From Note N
	WHERE N.[Id] = @Id

GO


IF OBJECT_ID('dbo.[usp_NoteUpdate]', N'P') IS NOT NULL
DROP PROCEDURE[dbo].[usp_NoteUpdate]
GO

/****** Object:  StoredProcedure [dbo].[usp_NoteUpdate]    Script Date: 4/29/2014 2:24:05 PM ******/
CREATE PROC [dbo].[usp_NoteUpdate]
	@Id  [uniqueidentifier]
	,@Name [nvarchar](256)
	,@EntityTypeValue [char](2) 
	,@ReferenceId [uniqueidentifier] 
	,@ReferenceName [nvarchar](256)
	,@Description [nvarchar](2048)
	,@ImageData [varchar](max)
	,@UserID  [uniqueidentifier]

AS
	SET NOCOUNT ON 
	SET XACT_ABORT ON

	BEGIN TRAN

	UPDATE [dbo].[Note]
	SET [Id] = @Id, [Name] = @Name, [EntityTypeValue] = @EntityTypeValue, [ReferenceId] = @ReferenceId, [ReferenceName] = @ReferenceName, [Description] = @Description, [ImageData]= @ImageData, [RevisionNumber] = [RevisionNumber] + 1, [ModifiedBy] = @UserId, [ModifiedOn] = GETDATE()	WHERE [Id] = @Id


	INSERT INTO [dbo].[Note_log] ([Id], [Name], [EntityTypeValue], [ReferenceId], [ReferenceName], [Description], [ImageData], [RevisionNumber], [CreatedBy], [CreatedOn], [ModifiedBy], [ModifiedOn])
	SELECT
	N.[Id]
	,N.[Name]
	,N.[EntityTypeValue]
	,N.[ReferenceId]
	,N.[ReferenceName]
	,N.[Description]
	,N.[ImageData]
	,N.[RevisionNumber]
	,",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qR9pPL
code,"CREATE TABLE country (id NVARCHAR(2) NOT NULL, name NVARCHAR(64) NOT NULL, PRIMARY KEY (id));

INSERT INTO [country] ([id], [name]) VALUES ('AX', 'Aland orollari');
INSERT INTO [country] ([id], [name]) VALUES ('AL', 'Albaniya');
INSERT INTO [country] ([id], [name]) VALUES ('AS', 'Amerika Samoasi');
INSERT INTO [country] ([id], [name]) VALUES ('AD', 'Andorra');
INSERT INTO [country] ([id], [name]) VALUES ('AI', 'Angila');
INSERT INTO [country] ([id], [name]) VALUES ('AO', 'Angola');
INSERT INTO [country] ([id], [name]) VALUES ('AQ', 'Antarktika');
INSERT INTO [country] ([id], [name]) VALUES ('AG', 'Antigua va Barbados');
INSERT INTO [country] ([id], [name]) VALUES ('VI', 'AQSH Virdjiniya orollari');
INSERT INTO [country] ([id], [name]) VALUES ('UM', 'AQSH yondosh orollari');
INSERT INTO [country] ([id], [name]) VALUES ('AR', 'Argentina');
INSERT INTO [country] ([id], [name]) VALUES ('AM', 'Armaniston');
INSERT INTO [country] ([id], [name]) VALUES ('AW', 'Aruba');
INSERT INTO [country] ([id], [name]) VALUES ('BL', 'Avliyo Varfolomey');
INSERT INTO [country] ([id], [name]) VALUES ('AU', 'Avstraliya');
INSERT INTO [country] ([id], [name]) VALUES ('AT', 'Avstriya');
INSERT INTO [country] ([id], [name]) VALUES ('BS', 'Bagama orollari');
INSERT INTO [country] ([id], [name]) VALUES ('BH', 'Bahrayn');
INSERT INTO [country] ([id], [name]) VALUES ('BD', 'Bangladesh');
INSERT INTO [country] ([id], [name]) VALUES ('BB', 'Barbados');
INSERT INTO [country] ([id], [name]) VALUES ('BE', 'Belgiya');
INSERT INTO [country] ([id], [name]) VALUES ('BZ', 'Beliz');
INSERT INTO [country] ([id], [name]) VALUES ('BY', 'Belorusiya');
INSERT INTO [country] ([id], [name]) VALUES ('BJ', 'Benin');
INSERT INTO [country] ([id], [name]) VALUES ('BM', 'Bermuda');
INSERT INTO [country] ([id], [name]) VALUES ('AE', 'Birlashgan Arab Amirliklari');
INSERT INTO [country] ([id], [name]) VALUES ('GB', 'Birlashgan Qirollik');
INSERT INTO [country] ([id], [name]) VALUES ('BG', 'Bolgariya');
INSERT INTO [country] ([id], [name]) VALUES ('BO', 'Boliviya');
INSERT INTO [country] ([id], [name]) VALUES ('BA', 'Bosniya va Gertsegovina');
INSERT INTO [country] ([id], [name]) VALUES ('BW', 'Botsvanna');
INSERT INTO [country] ([id], [name]) VALUES ('BR', 'Braziliya');
INSERT INTO [country] ([id], [name]) VALUES ('IO', 'Britaniya Hind okeani hududi');
INSERT INTO [country] ([id], [name]) VALUES ('VG', 'Britaniya Virdjiniya orollari');
INSERT INTO [country] ([id], [name]) VALUES ('BN', 'Bruney');
INSERT INTO [country] ([id], [name]) VALUES ('BF', 'Burkina-Faso');
INSERT INTO [country] ([id], [name]) VALUES ('BI', 'Burundi');
INSERT INTO [country] ([id], [name]) VALUES ('BT', 'Butan');
INSERT INTO [country] ([id], [name]) VALUES ('TD', 'Chad');
INSERT INTO [country] ([id], [name]) VALUES ('ME', 'Chernogoriya');
INSERT INTO [country] ([id], [name]) VALUES ('CZ', 'Chexiya Respublikasi');
INSERT INTO [country] ([id], [name]) VALUES ('CL', 'Chili');
INSERT INTO [country] ([id], [name]) VALUES ('DK', 'Daniya');
INSERT INTO [country] ([id], [name]) VALUES ('DG', 'Diyego Garsiya');
INSERT INTO [country] ([id], [name]) VALUES ('JE', 'Djersi');
INSERT INTO [country] ([id], [name]) VALUES ('DJ', 'Djibuti');
INSERT INTO [country] ([id], [name]) VALUES ('DM', 'Dominika');
INSERT INTO [country] ([id], [name]) VALUES ('DO', 'Dominikan Respublikasi');
INSERT INTO [country] ([id], [name]) VALUES ('ET', 'Efiopiya');
INSERT INTO [country] ([id], [name]) VALUES ('EC', 'Ekvador');
INSERT INTO [country] ([id], [name]) VALUES ('GQ', 'Ekvatorial Gvineya');
INSERT INTO [country] ([id], [name]) VALUES ('ER', 'Eritreya');
INSERT INTO [country] ([id], [name]) VALUES ('IR', 'Eron');
INSERT INTO [country] ([id], [name]) VALUES ('EE', 'Estoniya');
INSERT INTO [country] ([id], [name]) VALUES ('PS', 'Falastin hududi');
INSERT INTO [country] ([id], [name]) VALUES ('FO', 'Farer orollari');
INSERT INTO [country] ([id], [name]) VALUES ('FJ', 'Fiji orollari');
INSERT INTO [country] ([id], [name]) VALUES ('PH', 'Filippin');
INSERT INTO [country] ([id], [name]) VALUES ('FI', 'Finlyandiya');
INSERT INTO [country] ([id], [name]) VALUES ('FK', 'Folklend orollari');
INSERT INTO [country] ([id], [name]) VALUES ('FR', 'Fransiya');
INSERT INTO [country] ([id], [name]) VALUES ('TF', 'Frantsiya janubiy xududlari');
INSERT INTO [country] ([id], [name]) VALUES ('GF', 'Frantsuz Gvianasi');
INSERT INTO [country] ([id], [name]) VALUES ('PF', 'Frantsuz Polineziyasi');
INSERT INTO [country] ([id], [name]) VALUES ('GA', 'Gabon');
INSERT INTO [country] ([id], [name]) VALUES ('HT', 'Gaiti');
INSERT INTO [country] ([id], [name]) VALUES ('GM', 'Gambiya');
INSERT INTO [country] ([id], [name]) VALUES ('GH', 'Gana');
INSERT INTO [country] ([id], [name]) VALUES ('GY', 'Gayana');
INSERT INTO [country] ([id], [name]) VALUES ('DE', 'Germaniya');
INSERT INTO [country] ([id], [name]) VALUES ('GG', 'Gernsi');
INSERT INTO [country] ([id], [name]) VALUES ('EH', 'Gʻarbiy Sahroi Kabir');
INSERT INTO [country] ([id], [name]) VALUES ('GI', 'Gibraltar');
INSERT INTO [country] ([id], [name]) VALUES ('HN', 'Gonduras');
INSERT INTO [country] ([id], [name]) VAL",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fB50Mr
code,"---------------------------------------------------------------------
-- Base schema file for KIT Data Manager based repository systems.
-- This file holds the very basic tables that have to be created 
-- during installation. All other tables that are part of the 
-- repository metadata model are created automatically as soon as 
-- they are used the first time.
--
-- For schema updates please refer to the update script provided with 
-- your KIT Data Manager update package.
---------------------------------------------------------------------


------------------------------------------
-- User/Group/Memberships related tables. 
------------------------------------------

-- AAI-related users, their unique userIds and max. role
CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

CREATE TABLE users (
    id integer NOT NULL DEFAULT nextval('users_id_seq'),
    maximumrole integer,
    userid character varying(255) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_userid_key UNIQUE (userid)
);

CREATE SEQUENCE userdata_userid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- UserData providing additional user information, e.g. email and names.
CREATE TABLE userdata (
    userid integer NOT NULL DEFAULT nextval('userdata_userid_seq'),
    distinguishedname character varying(255),
    email character varying(255),
    firstname character varying(255),
    lastname character varying(255),
    validfrom timestamp without time zone,
    validuntil timestamp without time zone,
    CONSTRAINT userdata_pkey PRIMARY KEY (userid)
);

-- AAI-related user groups and their unique groupIds

CREATE SEQUENCE groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

CREATE TABLE groups (
    id integer NOT NULL DEFAULT nextval('groups_id_seq'),
    groupid character varying(255) NOT NULL,
    CONSTRAINT groups_groupid_key UNIQUE (groupid),
    CONSTRAINT groups_pkey PRIMARY KEY (id)
);

CREATE SEQUENCE usergroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- UserGroup providing additional group information, e.g. name and description.
CREATE TABLE usergroup (
    id integer NOT NULL DEFAULT nextval('usergroup_id_seq'),
    description character varying(1024),
    groupid character varying(255),
    groupname character varying(256),
    CONSTRAINT usergroup_pkey PRIMARY KEY (id)
);

CREATE SEQUENCE memberships_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- Memberships are mapping users to groups with according in-group roles.
CREATE TABLE memberships (
    id integer NOT NULL DEFAULT nextval('memberships_id_seq'),
    membersrole integer,
    group_id bigint NOT NULL,
    user_id bigint NOT NULL,
CONSTRAINT memberships_pkey PRIMARY KEY (id),
CONSTRAINT fk_memberships_group_id FOREIGN KEY (group_id) REFERENCES groups(id),
CONSTRAINT fk_memberships_user_id FOREIGN KEY (user_id) REFERENCES users(id)
);

------------------------------------------
-- AAI/Sharing related tables. 
------------------------------------------

CREATE SEQUENCE grantsets_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- A GrantSet holds all grants to resources with according role restrictions.
CREATE TABLE grantsets (
    id integer NOT NULL DEFAULT nextval('grantsets_id_seq'),
    rolerestriction integer,
    resource_id bigint,
    CONSTRAINT grantsets_pkey PRIMARY KEY (id)
);

CREATE SEQUENCE resources_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- Securable resources identified by domain id und domain unique id. Resources are mapped to a GrantSet.
CREATE TABLE resources (
    id integer NOT NULL DEFAULT nextval('resources_id_seq'),
    domainid character varying(255),
    domainuniqueid character varying(255),
    grantset_id bigint,
    CONSTRAINT resources_pkey PRIMARY KEY (id),
    CONSTRAINT fk_resources_grantset_id FOREIGN KEY (grantset_id) REFERENCES grantsets(id),
    CONSTRAINT unq_resources_0 UNIQUE (domainuniqueid, domainid)
);

ALTER TABLE grantsets ADD CONSTRAINT fk_grantsets_resource_id FOREIGN KEY (resource_id) REFERENCES resources(id);


CREATE SEQUENCE grants_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- Grants for sharing resources with single users. Grants are referring to an associated grantsets by grants_id.
CREATE TABLE grants (
    id integer NOT NULL DEFAULT nextval('grants_id_seq'),
    grantedrole integer,
    grantee_id bigint,
    grants_id bigint,
    CONSTRAINT grants_pkey PRIMARY KEY (id),
    CONSTRAINT fk_grants_grantee_id FOREIGN KEY (grantee_id) REFERENCES users(id),
    CONSTRAINT fk_grants_grants_id FOREIGN KEY (grants_id) REFERENCES grantsets(id)
);

CREATE SEQUENCE resourcereferences_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE;

-- ResourceReference provides a reference to a resource shared with another group.
CREATE TABLE resourcereferences (
    id integer NOT NULL DEFAULT nextval('resourcereferences_id_seq'),
    r",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",w0aoIu
code,"package controllers
/*
import javax.inject.Inject

import com.mohiva.play.silhouette.api._
import com.mohiva.play.silhouette.api.exceptions.ProviderException
import com.mohiva.play.silhouette.api.repositories.AuthInfoRepository
import com.mohiva.play.silhouette.impl.providers._
import models.services.UserService
import play.api.i18n.{ I18nSupport, Messages, MessagesApi }
import play.api.libs.concurrent.Execution.Implicits._
import play.api.mvc.{ Action, Controller }
import utils.auth.DefaultEnv

import scala.concurrent.Future

/**
 * The social auth controller.
 *
 * @param messagesApi The Play messages API.
 * @param silhouette The Silhouette stack.
 * @param userService The user service implementation.
 * @param authInfoRepository The auth info service implementation.
 * @param socialProviderRegistry The social provider registry.
 * @param webJarAssets The webjar assets implementation.
 */
class SocialAuthController @Inject() (
  val messagesApi: MessagesApi,
  silhouette: Silhouette[DefaultEnv],
  userService: UserService,
  authInfoRepository: AuthInfoRepository,
  socialProviderRegistry: SocialProviderRegistry,
  implicit val webJarAssets: WebJarAssets)
  extends Controller with I18nSupport with Logger {

  /**
   * Authenticates a user against a social provider.
   *
   * @param provider The ID of the provider to authenticate against.
   * @return The result to display.
   */
  def authenticate(provider: String) = Action.async { implicit request =>
    (socialProviderRegistry.get[SocialProvider](provider) match {
      case Some(p: SocialProvider with CommonSocialProfileBuilder) =>
        p.authenticate().flatMap {
          case Left(result) => Future.successful(result)
          case Right(authInfo) => for {
            profile <- p.retrieveProfile(authInfo)
            user <- userService.save(profile)
            authInfo <- authInfoRepository.save(profile.loginInfo, authInfo)
            authenticator <- silhouette.env.authenticatorService.create(profile.loginInfo)
            value <- silhouette.env.authenticatorService.init(authenticator)
            result <- silhouette.env.authenticatorService.embed(value, Redirect(routes.ApplicationController.index()))
          } yield {
            silhouette.env.eventBus.publish(LoginEvent(user, request))
            result
          }
        }
      case _ => Future.failed(new ProviderException(s""Cannot authenticate with unexpected social provider $provider""))
    }).recover {
      case e: ProviderException =>
        logger.error(""Unexpected provider error"", e)
        Redirect(routes.SignInController.view()).flashing(""error"" -> Messages(""could.not.authenticate""))
    }
  }
}
 */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Bhw5JJ
code,"package net.digitalbebop.pulsefilemodule

import java.io.{FileInputStream, File}
import java.nio.file.attribute.FileOwnerAttributeView
import java.nio.file.{Paths, Files}
import java.util.UUID

import com.google.protobuf.ByteString
import com.itextpdf.text.pdf.PdfReader
import com.itextpdf.text.pdf.parser.PdfTextExtractor
import net.digitalbebop.ClientRequests.IndexRequest
import org.apache.commons.io.{FilenameUtils, IOUtils}

import scala.util.parsing.json.JSONObject


object Extractor {

  private final val fileModule = ""files""

  private def splitCamelCase(s: String): String = s.replaceAll(String.format(""%s|%s|%s"",
    ""(?<=[A-Z])(?=[A-Z][a-z])"", ""(?<=[^A-Z])(?=[A-Z])"", ""(?<=[A-Za-z])(?=[^A-Za-z])""), "" "")

  private def replaceSplits(s: String) = s.replaceAll(""[_|-]"", "" "")

  private def cleanString: String => String = splitCamelCase _ compose replaceSplits

  private def getTags(file: File, uidMap: Map[String, String]): Array[String] = file.getAbsolutePath.split(""/"")
    .dropWhile(s => !uidMap.contains(s))
    .flatMap { name =>
      if (name.endsWith("".pdf"")) {
        cleanString(FilenameUtils.removeExtension(name)).split("" "")
      } else {
        cleanString(name).split("" "")
      }
    }

  // TODO add tags for file name
  def processPdf(file: File, uidMap: Map[String, String]): IndexRequest = {
    val reader = new PdfReader(file.getAbsolutePath)
    val indexData = (1 to reader.getNumberOfPages).foldLeft(new StringBuilder()) { (builder, page) =>
      builder.append(PdfTextExtractor.getTextFromPage(reader, page) + "" "")
    }.toString()

    val indexBuilder = IndexRequest.newBuilder()
    indexBuilder.setIndexData(indexData)
    indexBuilder.setRawData(ByteString.readFrom(Files.newInputStream(file.toPath)))
    indexBuilder.setLocation(file.getAbsolutePath)
    indexBuilder.setMetaTags(new JSONObject(Map((""format"", ""pdf""), (""title"", file.getName))).toString())
    indexBuilder.setTimestamp(file.lastModified())
    indexBuilder.setModuleId(UUID.nameUUIDFromBytes(file.getAbsolutePath.getBytes).toString)
    indexBuilder.setModuleName(fileModule)
    getTags(file, uidMap).foreach(indexBuilder.addTags)

    val view = Files.getFileAttributeView(Paths.get(file.getAbsolutePath), classOf[FileOwnerAttributeView])
    uidMap.get(view.getOwner.getName).map(indexBuilder.setUsername)
    reader.close()
    indexBuilder.build()
  }
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9zby4w
code,"/*
 * Copyright 2001-2013 Artima, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.scalatest

import org.scalatest.OptionValues._
import org.scalatest.PartialFunctionValues._
import org.scalatest.SharedHelpers.thisLineNumber
import Matchers._

class PartialFunctionValuesSpec extends FunSpec {
  
  val pf = new PartialFunction[Int, Int]() {
    def isDefinedAt(x: Int): Boolean = x % 2 == 0
    def apply(x: Int): Int = x * x
  }
  
  describe(""values on PartialFunction"") {
    
    it(""should return correct value when is defined"") {
      pf.isDefinedAt(8) should be === (true)
      pf.valueAt(8) should be === (64)
    }
    
    it(""should throw TestFailedException when is not defined"") {
      val caught = 
        evaluating {
          pf.valueAt(5) should be === (25)
        } should produce [TestFailedException]
      caught.failedCodeLineNumber.value should equal (thisLineNumber - 2)
      caught.failedCodeFileName.value should be (""PartialFunctionValuesSpec.scala"")
      caught.message.value should be (Resources(""partialFunctionValueNotDefined"", ""5""))
    }
    
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gIoI-2
code,"package org.example1_1.usage

trait Usage1 {

  def myScope1(): Unit = {
    import org.example1_1.declaration.data.X
    val xxx: X = ???
    import org.example1_1.declaration.data.Y
    val yyy: Y = ???
    import org.example1_1.declaration.data.Z
    val zzz: Z = ???
  }

  def myScope2(): Unit = {
    import org.example1_1.declaration.data.{Z => Z_Renamed_New}
    val zzz: Z_Renamed_New = ???

    import org.example1_1.declaration.data.{Y => Y_Renamed_New}
    val yyy: Y_Renamed_New = ???

    import org.example1_1.declaration.data.{X => X_Renamed_New}
    val xxx: X_Renamed_New = ???
  }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",t2k_Ok
code,"package si.gto76.comp

import scala.io.Source
import sys.exit
import scala.io.BufferedSource

object Assembler {

  val MEMORY_LENGTH = 15
  val MEMORY_WIDTH = 8

  val TEST_FILE = ""/fibbAsmb""
  val TEST_URL = getClass.getResource(TEST_FILE)
  val TEST = scala.io.Source.fromURL(TEST_URL, ""UTF-8"")

  var binaryCode = getEmptyMemory

  def assemble(args: Array[String]) {
    val file: BufferedSource = getBufferredFile(args)
    val assemblyStatements: Array[String] = readAssemblyFromFile(file);
    var i = 0
    for (line <- assemblyStatements) {
      val tokens = line.split(' ')
      val instructionCode = Commands.get(tokens(0))
      val addressCode = Addresses.get(tokens(1))
      val sentenceCode = instructionCode ++ addressCode
      binaryCode(i) = sentenceCode
      i = i + 1
    }
    println(""\nBinary code:"")
    print(Util.getString(binaryCode))
    if (Addresses.getNumOfAdresses + i > MEMORY_LENGTH) {
      println(""OUT OF MEMORY"")
      exit(5)
    }
  }
  
  def getBufferredFile(args: Array[String]): BufferedSource = {
    if (args.length > 0) {
      val filename = args(0)
      val fileDoesntExist = !(new java.io.File(filename).exists())
      if (fileDoesntExist) {
        println(""Input file "" + filename + "" doesn't exist."")
        exit
      }
      scala.io.Source.fromFile(filename, ""UTF-8"")
    } else {
      TEST
    }
  }

  def getEmptyMemory() = {
    var mem = new Array[Array[Boolean]](MEMORY_LENGTH)
    for (i <- 0 to MEMORY_LENGTH - 1) {
      mem(i) = new Array[Boolean](MEMORY_WIDTH)
    }
    mem
  }

  def writeToAddress(address: Int, value: Array[Boolean]) = {
    binaryCode(address) = value
  }

  def readAssemblyFromFile(file: BufferedSource): Array[String] = {
    var data = collection.mutable.ListBuffer[String]()
    println(""Assembly code:"")
    for (line <- file.getLines()) {
      println(line)
      data += line
    }
    data.toArray
  }

  object Addresses {

    private val addresses = collection.mutable.Map[String, Int]()

    private def getAddress(name: String): Int = {
      val adr = addresses.get(name)
      if (adr.isEmpty) {
        val numOfVars = addresses.size
        val address = (MEMORY_LENGTH - 1) - numOfVars
        addresses += (name -> address)
        address
      } else {
        adr.get
      }
    }

    def getNumOfAdresses = addresses.size

    // a19 -> absolute address
    // 10 -> pointer to value (not logical for WRITE, JUMP, POINT, BIGGER
    // v1 -> variable (not logical for JUMP, POINT, BIGGER
    def get(adrStr: String): Array[Boolean] = {
      // ABSOLUTE ADDRESS:
      if (adrStr.head == 'a') {
        val adr = adrStr.drop(1)
        Util.getBoolNib(adr.toInt)
      } // VARIABLE:
      else if (adrStr.head == 'v') {
        val adrInt = getAddress(adrStr)
        Util.getBoolNib(adrInt)
      } // INT VALUE:
      else if (adrStr.head.isDigit) {
        val intVal = adrStr.toInt
        if (intVal < 0 || intVal > 255) {
          println(""ERROR 5: Integer value out of bounds"")
          exit(5)
        }
        val adrInt = getAddress(adrStr)
        writeToAddress(adrInt, Util.getBool(intVal))
        Util.getBoolNib(adrInt)
      } else {
        println(""ERROR 4: Wrong address"")
        exit(4)
      }
    }
  }

  object Commands {
    def get(comStr: String): Array[Boolean] = {
      for (com <- commandList) {
        if (com.name == comStr) {
          return Util.getBoolNib(com.id)
        }
      }
      print(""ERROR 01: wrong command."")
      exit(1)
    }

    val commandList = Array(
      new Command(""READ"", 0),
      new Command(""WRITE"", 1),
      new Command(""ADD"", 2),
      new Command(""MINUS"", 3),
      new Command(""JUMP"", 4),
      new Command(""POINT"", 5),
      new Command(""BIGGER"", 6),
      new Command(""SMALLER"", 7))

    class Command(val name: String, val id: Int) {}
  }

}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CnPvXA
code,"package de.frosner.broccoli.nomad.models

import play.api.libs.functional.syntax._
import play.api.libs.json.{JsPath, Reads}
import shapeless.tag
import shapeless.tag.@@

/**
  * A partial model for a single allocations.
  */
final case class Allocation(
    id: String @@ Allocation.Id,
    jobId: String @@ Job.Id,
    nodeId: String @@ Node.Id,
    clientStatus: ClientStatus,
    taskStates: Map[String @@ Task.Name, TaskStateEvents]
)

object Allocation {
  trait Id

  implicit val allocationReads: Reads[Allocation] =
    ((JsPath \ ""ID"").read[String].map(tag[Allocation.Id](_)) and
      (JsPath \ ""JobID"").read[String].map(tag[Job.Id](_)) and
      (JsPath \ ""NodeID"").read[String].map(tag[Node.Id](_)) and
      (JsPath \ ""ClientStatus"").read[ClientStatus] and
      (JsPath \ ""TaskStates"")
        .readNullable[Map[String, TaskStateEvents]]
        // Tag all values as task name. Since Task.Name is a phantom type this is a safe thing to do, albeit it doesn't
        // look like so
        .map(_.getOrElse(Map.empty).asInstanceOf[Map[String @@ Task.Name, TaskStateEvents]]))(Allocation.apply _)
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u-j0Nq
code,"/*
 * Copyright (c) 2013-2017 Snowplow Analytics Ltd. All rights reserved.
 *
 * This program is licensed to you under the Apache License Version 2.0, and
 * you may not use this file except in compliance with the Apache License
 * Version 2.0.  You may obtain a copy of the Apache License Version 2.0 at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License Version 2.0 is distributed on an ""AS
 * IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.  See the Apache License Version 2.0 for the specific language
 * governing permissions and limitations there under.
 */
package com.snowplowanalytics.snowplow.collectors.scalastream

import scala.concurrent.duration.FiniteDuration

import com.amazonaws.auth._

import sinks._

package model {

  /** Type of sink */
  sealed trait SinkType
  case object Kinesis extends SinkType
  case object Kafka extends SinkType
  case object Stdout extends SinkType

  /**
   * Case class for holding both good and
   * bad sinks for the Stream Collector.
   */
  case class CollectorSinks(good: Sink, bad: Sink)

  /**
   * Case class for holding the results of
   * splitAndSerializePayload.
   *
   * @param good All good results
   * @param bad All bad results
   */
  case class EventSerializeResult(good: List[Array[Byte]], bad: List[Array[Byte]])

  /**
   * Class for the result of splitting a too-large array of events in the body of a POST request
   *
   * @param goodBatches List of batches of events
   * @param failedBigEvents List of events that were too large
   */
  case class SplitBatchResult(goodBatches: List[List[String]], failedBigEvents: List[String])

  final case class CookieConfig(
    enabled: Boolean,
    name: String,
    expiration: FiniteDuration,
    domain: Option[String]
  )
  final case class CookieBounceConfig(
    enabled: Boolean,
    name: String,
    fallbackNetworkUserId: String
  )
  final case class P3PConfig(policyRef: String, CP: String)
  final case class AWSConfig(accessKey: String, secretKey: String) {
    val provider = ((accessKey, secretKey) match {
      case (a, s) if isDefault(a) && isDefault(s) =>
        Right(new DefaultAWSCredentialsProviderChain())
      case (a, s) if isDefault(a) || isDefault(s) =>
        Left(""accessKey and secretKey must both be set to 'default' or neither"")
      case (a, s) if isIam(a) && isIam(s) =>
        Right(InstanceProfileCredentialsProvider.getInstance())
      case (a, s) if isIam(a) && isIam(s) =>
        Left(""accessKey and secretKey must both be set to 'iam' or neither"")
      case (a, s) if isEnv(a) && isEnv(s) =>
        Right(new EnvironmentVariableCredentialsProvider())
      case (a, s) if isEnv(a) || isEnv(s) =>
        Left(""accessKey and secretKey must both be set to 'env' or neither"")
      case _ =>
        Right(new AWSStaticCredentialsProvider(new BasicAWSCredentials(accessKey, secretKey)))
    }).fold(s => throw new IllegalArgumentException(s), identity)

    private def isDefault(key: String): Boolean = key == ""default""
    private def isIam(key: String): Boolean = key == ""iam""
    private def isEnv(key: String): Boolean = key == ""env""
  }
  final case class BackoffPolicyConfig(minBackoff: Long, maxBackoff: Long)
  final case class KinesisConfig(
    region: String,
    threadPoolSize: Int,
    aws: AWSConfig,
    backoffPolicy: BackoffPolicyConfig
  ) {
    val endpoint = region match {
      case cn@""cn-north-1"" => s""https://kinesis.$cn.amazonaws.com.cn""
      case _ => s""https://kinesis.$region.amazonaws.com""
    }
  }
  final case class KafkaConfig(brokers: String, retries: Int)
  final case class BufferConfig(byteLimit: Int, recordLimit: Int, timeLimit: Long)
  final case class StreamsConfig(
    good: String,
    bad: String,
    useIpAddressAsPartitionKey: Boolean,
    kinesis: KinesisConfig,
    kafka: KafkaConfig,
    buffer: BufferConfig
  )
  final case class CollectorConfig(
    interface: String,
    port: Int,
    p3p: P3PConfig,
    cookie: CookieConfig,
    cookieBounce: CookieBounceConfig,
    sink: String,
    streams: StreamsConfig
  ) {
    val cookieConfig = if (cookie.enabled) Some(cookie) else None

    def cookieName = cookieConfig.map(_.name)
    def cookieDomain = cookieConfig.flatMap(_.domain)
    def cookieExpiration = cookieConfig.map(_.expiration)

    val sinkType = sink match {
      case ""kinesis"" => Kinesis
      case ""kafka""   => Kafka
      case ""stdout""  => Stdout
      case o         => throw new IllegalArgumentException(s""collector.sink unknown: $o"")
    }
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",YEYEHa
code,"package com.nabijaczleweli.minecrasmer.compat.waila

import com.nabijaczleweli.minecrasmer.block.BlockComputerOn
import com.nabijaczleweli.minecrasmer.entity.tile.TileEntityComputer
import com.nabijaczleweli.minecrasmer.reference.{Container, Reference}
import com.nabijaczleweli.minecrasmer.resource.{ReloadableString, ResourcesReloadedEvent}
import mcp.mobius.waila.api.{IWailaConfigHandler, IWailaDataAccessor, IWailaDataProvider}
import net.minecraft.item.{ItemBlock, ItemStack}
import net.minecraftforge.fml.common.Optional
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent
import net.minecraftforge.fml.relauncher.{Side, SideOnly}
import java.util.{List => jList}

import net.minecraft.entity.player.EntityPlayerMP
import net.minecraft.nbt.NBTTagCompound
import net.minecraft.tileentity.TileEntity
import net.minecraft.util.BlockPos
import net.minecraft.world.World


@SideOnly(Side.CLIENT)
@Optional.Interface(iface = ""mcp.mobius.waila.api.IWailaDataProvider"", modid = ""Waila"", striprefs = true)
object ProviderComputer extends IWailaDataProvider {
	Container.eventBus register this

	var PCName           = new ReloadableString(s""tile.${Reference.NAMESPACED_PREFIX}computer.neutral.name"")
	var PCOffState       = new ReloadableString(s""hud.${Reference.NAMESPACED_PREFIX}compat.waila.computer.state.off.name"")
	var PCOnState        = new ReloadableString(s""hud.${Reference.NAMESPACED_PREFIX}compat.waila.computer.state.on.name"")
	var PCBaseClockSpeed = new ReloadableString(s""hud.${Reference.NAMESPACED_PREFIX}compat.waila.computer.clock.name"")
	var PCCPUs           = new ReloadableString(s""hud.${Reference.NAMESPACED_PREFIX}compat.waila.computer.processors.name"")
	var PCCPT            = new ReloadableString(s""hud.${Reference.NAMESPACED_PREFIX}compat.waila.computer.cpt.name"")

	@Optional.Method(modid = ""Waila"")
	override def getWailaStack(accessor: IWailaDataAccessor, config: IWailaConfigHandler) = {
		val is = accessor.getStack.copy()
		is setItemDamage 3 // Facing to user to right-hand side
		is setStackDisplayName PCName
		is
	}

	@Optional.Method(modid = ""Waila"")
	override def getWailaHead(itemStack: ItemStack, currenttip: jList[String], accessor: IWailaDataAccessor, config: IWailaConfigHandler) =
		currenttip

	@Optional.Method(modid = ""Waila"")
	override def getWailaBody(itemStack: ItemStack, currenttip: jList[String], accessor: IWailaDataAccessor, config: IWailaConfigHandler) = {
		val block = itemStack.getItem.asInstanceOf[ItemBlock].block
		val position = accessor.getPosition
		val world = accessor.getWorld
		val on = block.isInstanceOf[BlockComputerOn.type]
		lazy val te = world.getTileEntity(position).asInstanceOf[TileEntityComputer]
		lazy val CPUs = te.CPUs  // It might be expensive, so better cache it

		if(on) {
			currenttip add PCOnState
			currenttip add PCBaseClockSpeed.format(te.clockSpeed)
			currenttip add PCCPUs.format(collapseCPUs(CPUs))
			currenttip add PCCPT.format(te.clockSpeed * (CPUs map {CPU => (CPU._1 * CPU._2).floor.toInt}).sum)
		} else
			currenttip add PCOffState
		currenttip
	}

	@Optional.Method(modid = ""Waila"")
	override def getWailaTail(itemStack: ItemStack, currenttip: jList[String], accessor: IWailaDataAccessor, config: IWailaConfigHandler) =
		currenttip

	@Optional.Method(modid = ""Waila"")
	override def getNBTData(player: EntityPlayerMP, te: TileEntity, tag: NBTTagCompound, world: World, pos: BlockPos) =
		tag

	@SubscribeEvent
	def onResourcesReloaded(event: ResourcesReloadedEvent) = {
		PCName.reload()
		PCOffState.reload()
		PCOnState.reload()
		PCBaseClockSpeed.reload()
		PCCPUs.reload()
		PCCPT.reload()
	}

	def collapseCPUs(seq: Seq[(Int, Float)]) =
		seq.headOption match {
			case None =>
				""None""
			case Some(_) =>
				val sorted = seq.sorted
				collapseCPUsImpl(sorted.head, 1, sorted.slice(1, sorted.length))
		}

	def timesOrEmpty(amount: Int) =
		amount match {
			case 0 =>
				""""
			case 1 =>
				""""
			case amt =>
				s""*$amt""
		}

	def collapseCPUsImpl(last: (Int, Float), amount: Int, seq: Seq[(Int, Float)]): String =
		seq.headOption match {
			case None =>
				s""$last${timesOrEmpty(amount)}""
			case Some(head) =>
				head match {
					case `last` =>
						collapseCPUsImpl(last, amount + 1, seq.slice(1, seq.length))
					case hd =>
						s""$last${timesOrEmpty(amount)},${collapseCPUsImpl(hd, 1, seq.slice(1, seq.length))}""
				}
		}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_w1Ecg
code,"/*
 * Copyright 2016 Coursera Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.coursera.naptime

import com.linkedin.data.DataMap
import org.coursera.naptime.QueryStringParser.NaptimeParseError
import play.api.http.Status
import play.api.i18n.Lang
import play.api.libs.json.JsObject
import play.api.libs.json.JsString
import play.api.libs.json.Json
import play.api.mvc.RequestHeader

import scala.annotation.implicitNotFound
import play.api.libs.json.OFormat

import scala.annotation.tailrec
import scala.collection.immutable
import scala.util.Failure
import scala.util.Success
import scala.util.Try
import scala.util.parsing.combinator.RegexParsers

/**
 * All the contextual information about a naptime request.
 */
class RestContext[+AuthType, +BodyType] private[naptime] (
    val body: BodyType,
    val auth: AuthType,
    private[this] val _request: RequestHeader,
    val paging: RequestPagination,
    val includes: RequestIncludes,
    val fields: RequestFields) {

  def request(implicit evidence: RequestEvidence): RequestHeader = _request
  def acceptLanguages = _request.acceptLanguages

  /**
   * Compute the preferred language for this context given a set of available languages.
   *
   * @param availableLanguages The set of languages that are available for a given piece of content.
   * @param default The default language of the piece of content.
   * @return
   */
  def selectLanguage(availableLanguages: Set[Lang], default: Lang): Lang = {

      /**
       * Implementation of the tail-recursive algorithm.
       *
       * @param languagePreferences Preferences in decreasing preference order (from the request)
       * @return The language to use.
       */
      @tailrec
      def findPreferredLanguage(languagePreferences: Seq[Lang]): Lang = {
        if (languagePreferences.isEmpty) default
        else {
          val satisfiableLanguage = availableLanguages.find(_.satisfies(languagePreferences.head))
          if (satisfiableLanguage.isDefined) satisfiableLanguage.get
          else findPreferredLanguage(languagePreferences.tail)
        }
      }

    findPreferredLanguage(acceptLanguages)
  }

  private[naptime] def copyWithAuth[NewAuth](newAuth: NewAuth): RestContext[NewAuth, BodyType] = {
    new RestContext(body, newAuth, _request, paging, includes, fields)
  }
}

/**
 * Configure the defaults for pagination.
 */
case class PaginationConfiguration(defaultLimit: Int = 100)

/**
 * Calculates the request pagination.
 *
 * TODO: URL-safe base64 encoding
 */
case class RequestPagination(limit: Int, start: Option[String], isDefault: Boolean) {
  def startAsInt: Option[Int] = {
    try {
      start.map(_.toInt)
    } catch {
      case _: NumberFormatException =>
        Errors.BadRequest(msg = s""Paging start should be an integer, was $start"")
    }
  }

  /**
   * A hashcode-like function that includes in its values only the things we actually care about
   * when computing an ETag.
   *
   * @return a stable integer used in an ETag computation.
   */
  def eTagHashCode(): Int = Set(limit, start.hashCode()).hashCode()
}

object RequestPagination {
  /**
   * Parse pagination from the request header, falling back to the configuration as requested.
   */
  def apply(rh: RequestHeader, configuration: PaginationConfiguration): RequestPagination = {
    // Parse out the start parameter.
    val start = rh.queryString.get(""start"").flatMap(_.headOption)
    // Parse out the limit string.
    val limit = rh.queryString.get(""limit"").flatMap(_.headOption).flatMap(str => Try(str.toInt).toOption)
    limit.map { limit =>
      RequestPagination(limit, start, isDefault = false)
    }.getOrElse(RequestPagination(configuration.defaultLimit, start, isDefault = true))
  }
}

/**
 * Information about one particular choice of value for one particular facet.
 *
 * @param id The id or code for this facet value.
 * @param name The display name for this facet value.
 * @param count The number of results for this facet.
 */
case class FacetFieldValue(id: String, name: Option[String], count: Long)
object FacetFieldValue {
  implicit val format: OFormat[FacetFieldValue] = Json.format[FacetFieldValue]
}

/**
 * Contains all of the information relating to a facet in a sophisticated search.
 *
 * @param facetEntries An ordered (potentially partial) list of facet entries.
 * @param fieldCardinality Not all potential values for this facet may be included.
 *                         The fieldCardinality is the count of all possible different values for
 *                         this facet.
 */
case class FacetField(facetEntries",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Uh-2nl
code,"
package unfiltered.netty.cycle

import io.netty.handler.codec.http.{
  FullHttpRequest,
  HttpContent,
  HttpRequest => NettyHttpRequest,
  HttpResponse }
import io.netty.handler.codec.http.websocketx.WebSocketFrame
import io.netty.channel.{ ChannelHandlerContext, ChannelInboundHandlerAdapter }
import io.netty.channel.ChannelHandler.Sharable

import unfiltered.netty.{ ExceptionHandler, ReceivedMessage, RequestBinding, ServerErrorResponse }
import unfiltered.response.{ Pass, ResponseFunction }
import unfiltered.request.HttpRequest
import unfiltered.util.control.NonFatal

import scala.language.reflectiveCalls

object Plan {
  type Intent = unfiltered.Cycle.Intent[ReceivedMessage, HttpResponse]
}

/** Object to facilitate Plan.Intent definitions. Type annotations
 *  are another option. */
object Intent {
  def apply(intent: Plan.Intent) = intent
}

/** A Netty Plan for request cycle handling. */
@Sharable
trait Plan extends ChannelInboundHandlerAdapter
  with ExceptionHandler {

  def intent: Plan.Intent

  def executeIntent(thunk: => Unit)

  def executeResponse(thunk: => Unit)

  def shutdown()

  def catching(ctx: ChannelHandlerContext)(thunk: => Unit) {
    try { thunk } catch {
      case NonFatal(e) => onException(ctx, e)
    }
  }

  private lazy val guardedIntent = intent.fold(
    (req: HttpRequest[ReceivedMessage]) =>
      req.underlying.context.fireChannelRead(req.underlying.message),
    (req: HttpRequest[ReceivedMessage],
     rf: ResponseFunction[HttpResponse]) =>
      executeResponse {
        catching(req.underlying.context) {
          req.underlying.respond(rf)
        }
      }
  )

  final override def channelReadComplete(ctx: ChannelHandlerContext) =
    ctx.flush()
  
  override def channelRead(ctx: ChannelHandlerContext, msg: java.lang.Object ): Unit =
    msg match {
      case req: NettyHttpRequest =>
        catching(ctx) {
          executeIntent {
            catching(ctx) {
              guardedIntent(
                new RequestBinding(ReceivedMessage(req, ctx, msg))
              )
            }
          }
        }
      // fixme(doug): I don't think this will ever be the case as we are now always adding the aggregator to the pipeline
      case chunk: HttpContent => ctx.fireChannelRead(chunk)
      case frame: WebSocketFrame => ctx.fireChannelRead(frame)
      // fixme(doug): Should we define an explicit exception to catch for this
      case ue => sys.error(""Received unexpected message type from upstream: %s""
                           .format(ue))
    }
}

object Planify {
  @Sharable
  class Planned(intentIn: Plan.Intent) extends Plan
    with ThreadPool with ServerErrorResponse {
    val intent = intentIn
  }
  def apply(intentIn: Plan.Intent) = new Planned(intentIn)
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lnx-LS
code,"package binders

import org.scalatest.{Matchers, FlatSpec}
import models.{Namespace, RepositoryName, Repository}


class BindersSpec extends FlatSpec with Matchers {

  ""repoBinder"" should ""bind 'foo' to a Repository with no namespace"" in {
    repoBinder.bind("""", ""foo"") shouldBe Right(Repository(RepositoryName(""foo"")))
  }

  it should ""bind 'foo/bar' to a Repository with namespace 'foo' and name 'bar'"" in {
    repoBinder.bind("""", ""foo/bar"") shouldBe Right(Repository(Namespace(""foo""), RepositoryName(""bar"")))
  }

  it should ""fail to bind 'foo/bar/baz'"" in {
    repoBinder.bind("""", ""foo/bar/baz"") shouldBe a[Left[String, _]]
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FEmp-r
code,"/*
 * Copyright (C) 2013-2015 by Michael Hombre Brinkmann
 */

package net.twibs.web

import com.google.common.cache.{CacheLoader, CacheBuilder, LoadingCache}
import java.util.concurrent.TimeUnit
import net.twibs.util.{ResponseRequest, Request}

import scala.concurrent.duration._

class ExpiringCacheResponder(delegate: Responder, duration: Duration = 1 second) extends CacheResponder {
  def respond(request: Request): Option[Response] =
    request.use {
      val requestCacheKey = request.responseRequest
      if (!request.useCache) {
        cache.invalidate(requestCacheKey)
      }
      respond(requestCacheKey)
    }

  protected val cache: LoadingCache[ResponseRequest, Option[Response]] =
    CacheBuilder.newBuilder().expireAfterWrite(duration.toMillis, TimeUnit.MILLISECONDS).build(loader)

  private def loader = new CacheLoader[ResponseRequest, Option[Response]]() {
    def load(requestCacheKey: ResponseRequest): Option[Response] = delegate.respond(Request)
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",U0_4-n
code,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.spark.sql.columnar

import java.nio.{ByteBuffer, ByteOrder}

import org.apache.spark.sql.catalyst.InternalRow
import org.apache.spark.sql.columnar.ColumnBuilder._
import org.apache.spark.sql.columnar.compression.{AllCompressionSchemes, CompressibleColumnBuilder}
import org.apache.spark.sql.types._

private[sql] trait ColumnBuilder {
  /**
   * Initializes with an approximate lower bound on the expected number of elements in this column.
    * 使用此列中预期元素数的近似下限进行初始化
   */
  def initialize(initialSize: Int, columnName: String = """", useCompression: Boolean = false)

  /**
   * Appends `row(ordinal)` to the column builder.
    * 将`row（ordinal）`追加到列构建器
   */
  def appendFrom(row: InternalRow, ordinal: Int)

  /**
   * Column statistics information
    * 列统计信息
   */
  def columnStats: ColumnStats

  /**
   * Returns the final columnar byte buffer.
    * 返回最后的柱状字节缓冲区
   */
  def build(): ByteBuffer
}

private[sql] class BasicColumnBuilder[JvmType](
    val columnStats: ColumnStats,
    val columnType: ColumnType[JvmType])
  extends ColumnBuilder {

  protected var columnName: String = _

  protected var buffer: ByteBuffer = _

  override def initialize(
      initialSize: Int,
      columnName: String = """",
      useCompression: Boolean = false): Unit = {

    val size = if (initialSize == 0) DEFAULT_INITIAL_BUFFER_SIZE else initialSize
    this.columnName = columnName

    // Reserves 4 bytes for column type ID
    //ByteBuffer.allocate在能够读和写之前,必须有一个缓冲区,用静态方法 allocate() 来分配缓冲区
    buffer = ByteBuffer.allocate(4 + size * columnType.defaultSize)
    buffer.order(ByteOrder.nativeOrder()).putInt(columnType.typeId)
  }

  override def appendFrom(row: InternalRow, ordinal: Int): Unit = {
    buffer = ensureFreeSpace(buffer, columnType.actualSize(row, ordinal))
    columnType.append(row, ordinal, buffer)
  }

  override def build(): ByteBuffer = {
    buffer.flip().asInstanceOf[ByteBuffer]
  }
}

private[sql] abstract class ComplexColumnBuilder[JvmType](
    columnStats: ColumnStats,
    columnType: ColumnType[JvmType])
  extends BasicColumnBuilder[JvmType](columnStats, columnType)
  with NullableColumnBuilder

private[sql] abstract class NativeColumnBuilder[T <: AtomicType](
    override val columnStats: ColumnStats,
    override val columnType: NativeColumnType[T])
  extends BasicColumnBuilder[T#InternalType](columnStats, columnType)
  with NullableColumnBuilder
  with AllCompressionSchemes
  with CompressibleColumnBuilder[T]

private[sql] class BooleanColumnBuilder extends NativeColumnBuilder(new BooleanColumnStats, BOOLEAN)

private[sql] class ByteColumnBuilder extends NativeColumnBuilder(new ByteColumnStats, BYTE)

private[sql] class ShortColumnBuilder extends NativeColumnBuilder(new ShortColumnStats, SHORT)

private[sql] class IntColumnBuilder extends NativeColumnBuilder(new IntColumnStats, INT)

private[sql] class LongColumnBuilder extends NativeColumnBuilder(new LongColumnStats, LONG)

private[sql] class FloatColumnBuilder extends NativeColumnBuilder(new FloatColumnStats, FLOAT)

private[sql] class DoubleColumnBuilder extends NativeColumnBuilder(new DoubleColumnStats, DOUBLE)

private[sql] class StringColumnBuilder extends NativeColumnBuilder(new StringColumnStats, STRING)

private[sql] class BinaryColumnBuilder extends ComplexColumnBuilder(new BinaryColumnStats, BINARY)

private[sql] class FixedDecimalColumnBuilder(
    precision: Int,
    scale: Int)
  extends NativeColumnBuilder(
    new FixedDecimalColumnStats(precision, scale),
    FIXED_DECIMAL(precision, scale))

// TODO (lian) Add support for array, struct and map
private[sql] class GenericColumnBuilder(dataType: DataType)
  extends ComplexColumnBuilder(new GenericColumnStats(dataType), GENERIC(dataType))

private[sql] class DateColumnBuilder extends NativeColumnBuilder(new DateColumnStats, DATE)

private[sql] class TimestampColumnBuilder
  extends NativeColumnBuilder(new TimestampColumnStats, TIMESTAMP)

private[sql] object ColumnBuilder {
  val DEFAULT_INITIAL_BUFFER_SIZE = 1024 * 1024

  private[columnar] def ensureFreeSpace(orig: ByteBuffer, size: Int) = {
    if (orig.remaining >= size) {
      orig
    } else {
      // grow in steps of initial size
      //以初始大小的步长增长
      val capacity = orig.capacity()
      val newSize = capacity + size.max(capacity / 8 + 1)
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k_DK55
code,"package us.feliscat.sentence.en

import us.feliscat.m17n.English
import us.feliscat.sentence.MultiLingualSentenceSplitter
import us.feliscat.text.StringOption
import us.feliscat.text.analyzer.CoreNLP4English

/**
  * <pre>
  * Created on 2017/02/16.
  * </pre>
  *
  * @author K.Sakamoto
  */
object EnglishSentenceSplitter extends MultiLingualSentenceSplitter with English {
  def split(textOpt: StringOption): Seq[String] = {
    CoreNLP4English.ssplit(textOpt)
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ALaaZV
code,"class Foo(private val name: String)

extension (f: Foo) def name() = ""bar""

@main def Test =
  assert(Foo(""foo"").name() == ""bar"")
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6AKcwH
code,"/* sbt -- Simple Build Tool
 * Copyright 2009, 2010  Mark Harrah
 */
package sbt
package classfile

import scala.collection.mutable
import mutable.{ ArrayBuffer, Buffer }
import scala.annotation.tailrec
import java.io.File
import java.lang.annotation.Annotation
import java.lang.reflect.Method
import java.lang.reflect.Modifier.{ STATIC, PUBLIC, ABSTRACT }
import java.net.URL

private[sbt] object Analyze {
  def apply[T](newClasses: Seq[File], sources: Seq[File], log: Logger)(analysis: xsbti.AnalysisCallback, loader: ClassLoader, readAPI: (File, Seq[Class[_]]) => Set[String]) {
    val sourceMap = sources.toSet[File].groupBy(_.getName)

    def load(tpe: String, errMsg: => Option[String]): Option[Class[_]] =
      try { Some(Class.forName(tpe, false, loader)) }
      catch { case e: Throwable => errMsg.foreach(msg => log.warn(msg + "" : "" + e.toString)); None }

    val productToSource = new mutable.HashMap[File, File]
    val sourceToClassFiles = new mutable.HashMap[File, Buffer[ClassFile]]

    // parse class files and assign classes to sources.  This must be done before dependencies, since the information comes
    // as class->class dependencies that must be mapped back to source->class dependencies using the source+class assignment
    for (
      newClass <- newClasses;
      classFile = Parser(newClass);
      sourceFile <- classFile.sourceFile orElse guessSourceName(newClass.getName);
      source <- guessSourcePath(sourceMap, classFile, log)
    ) {
      analysis.generatedClass(source, newClass, classFile.className)
      productToSource(newClass) = source
      sourceToClassFiles.getOrElseUpdate(source, new ArrayBuffer[ClassFile]) += classFile
    }

    // get class to class dependencies and map back to source to class dependencies
    for ((source, classFiles) <- sourceToClassFiles) {
      val publicInherited = readAPI(source, classFiles.toSeq.flatMap(c => load(c.className, Some(""Error reading API from class file""))))

      def processDependency(tpe: String, inherited: Boolean) {
        trapAndLog(log) {
          for (url <- Option(loader.getResource(tpe.replace('.', '/') + ClassExt)); file <- urlAsFile(url, log)) {
            if (url.getProtocol == ""jar"")
              analysis.binaryDependency(file, tpe, source, inherited, false)
            else {
              assume(url.getProtocol == ""file"")
              productToSource.get(file) match {
                case Some(dependsOn) => analysis.sourceDependency(dependsOn, source, inherited)
                case None            => analysis.binaryDependency(file, tpe, source, inherited, false)
              }
            }
          }
        }
      }
      def processDependencies(tpes: Iterable[String], inherited: Boolean): Unit = tpes.foreach(tpe => processDependency(tpe, inherited))

      val notInherited = classFiles.flatMap(_.types).toSet -- publicInherited
      processDependencies(notInherited, false)
      processDependencies(publicInherited, true)
    }

    for (source <- sources filterNot sourceToClassFiles.keySet) {
      analysis.api(source, new xsbti.api.SourceAPI(Array(), Array()))
    }
  }
  private[this] def urlAsFile(url: URL, log: Logger): Option[File] =
    try IO.urlAsFile(url)
    catch {
      case e: Exception =>
        log.warn(""Could not convert URL '"" + url.toExternalForm + ""' to File: "" + e.toString)
        None
    }
  private def trapAndLog(log: Logger)(execute: => Unit) {
    try { execute }
    catch { case e => log.trace(e); log.error(e.toString) }
  }
  private def guessSourceName(name: String) = Some(takeToDollar(trimClassExt(name)))
  private def takeToDollar(name: String) =
    {
      val dollar = name.indexOf('$')
      if (dollar < 0) name else name.substring(0, dollar)
    }
  private final val ClassExt = "".class""
  private def trimClassExt(name: String) = if (name.endsWith(ClassExt)) name.substring(0, name.length - ClassExt.length) else name
  private def guessSourcePath(sourceNameMap: Map[String, Set[File]], classFile: ClassFile, log: Logger) =
    {
      val classNameParts = classFile.className.split(""""""\."""""")
      val pkg = classNameParts.init
      val simpleClassName = classNameParts.last
      val sourceFileName = classFile.sourceFile.getOrElse(simpleClassName.takeWhile(_ != '$').mkString("""", """", "".java""))
      val candidates = findSource(sourceNameMap, pkg.toList, sourceFileName)
      candidates match {
        case Nil         => log.warn(""Could not determine source for class "" + classFile.className)
        case head :: Nil => ()
        case _           => log.warn(""Multiple sources matched for class "" + classFile.className + "": "" + candidates.mkString("", ""))
      }
      candidates
    }
  private def findSource(sourceNameMap: Map[String, Iterable[File]], pkg: List[String], sourceFileName: String): List[File] =
    refine((sourceNameMap get sourceFileName).toList.flatten.map { x => (x, x.getParentFile) }, pkg.reverse)

  @tailrec private def refine(sources: List[(File, File)], pkgRev: List[String]): List[File] =
    {
      def make = sources.map(_._1)
      if (sources.isEmpty || sources.tail.isEmpty)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CzjwWu
code,"/*
 * Copyright 2015 Foundational Development
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package pro.foundev.commons.test_support

import org.apache.spark.rdd.RDD
import org.apache.spark.streaming.dstream.DStream

object RDDCounter {
  type RDDHandler = (RDD[String]) => Unit

  def count(lines: DStream[String])
           (handler: RDDHandler): Unit ={
    lines.foreachRDD(rdd=>{
      handler(rdd)
    })
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uuff8g
code,"package io.swagger.client.model

import org.joda.time.DateTime
import java.util.UUID


case class Complaints (
  ReportedCallerName: String,  // Reported Caller Name
  TotalNumberOfComplaints: Integer,
  ComplaintsByEntity: Map[String, Integer],
  LastCompaintDate: DateTime,
  Tags: List[String]
  
)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ixfEqa
code,"package com.twitter.finagle.thrift

import org.apache.thrift.TApplicationException
import org.apache.thrift.protocol.{TMessageType, TBinaryProtocol}

import org.jboss.netty.buffer.{ChannelBuffer, ChannelBuffers}
import org.jboss.netty.channel._
import org.jboss.netty.handler.codec.replay.{ReplayingDecoder, VoidEnum}

/**
 * Translate ThriftCalls to their wire representation
 */
private[thrift] class ThriftClientEncoder extends SimpleChannelDownstreamHandler {
  protected val protocolFactory = new TBinaryProtocol.Factory(true, true)
  protected var seqid = 0

  override def writeRequested(ctx: ChannelHandlerContext, e: MessageEvent) =
    e.getMessage match {
      case call: ThriftCall[_, _] =>
        val buffer = ChannelBuffers.dynamicBuffer()
        val transport = new ChannelBufferToTransport(buffer)
        val protocol = protocolFactory.getProtocol(transport)
        seqid += 1
        call.seqid = seqid
        call.writeRequest(seqid, protocol)
        Channels.write(ctx, Channels.succeededFuture(e.getChannel()),
                       buffer, e.getRemoteAddress)
      case _ =>
        Channels.fireExceptionCaught(ctx, new IllegalArgumentException)
        null
    }
}

/**
 * Translate wire representation to ThriftReply
 */
private[thrift] class ThriftClientDecoder extends ReplayingDecoder[VoidEnum]
{
  protected val protocolFactory = new TBinaryProtocol.Factory(true, true)

  def decodeThriftReply(ctx: ChannelHandlerContext,
                        channel: Channel,
                        buffer: ChannelBuffer): Object = {
    val transport = new ChannelBufferToTransport(buffer)
    val protocol = protocolFactory.getProtocol(transport)
    val message = protocol.readMessageBegin()

    message.`type` match {
      case TMessageType.EXCEPTION =>
        // Create an event for any TApplicationExceptions.  Though these are
        // usually protocol-level errors, so there's not much the client can do.
        val exception = TApplicationException.read(protocol)
        protocol.readMessageEnd()
        Channels.fireExceptionCaught(ctx, exception)
        null
      case TMessageType.REPLY =>
        val call = ThriftTypes(message.name).newInstance()
        val result = call.readResponse(protocol).asInstanceOf[AnyRef]
        call.reply(result)
      case _ =>
        Channels.fireExceptionCaught(ctx, new TApplicationException(
          TApplicationException.INVALID_MESSAGE_TYPE))
        null
    }
  }

  override def decode(ctx: ChannelHandlerContext,
                      channel: Channel,
                      buffer: ChannelBuffer,
                      state: VoidEnum) =
    // TProtocol assumes a read of zero bytes is an error, so treat empty buffers
    // as no-ops. This only happens with the ReplayingDecoder.
    if (buffer.readable)
      decodeThriftReply(ctx, channel, buffer)
    else
      null
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bOuGlB
code,"// Solution-2.scala
// Solution to Exercise 2 in ""Methods Inside Classes""

class Flare {
  def light():String = { ""Flare used!""}
}

val flare = new Flare
val f1 = flare.light
assert(f1 == ""Flare used!"", ""Expected Flare used!, Got "" + f1)
println(f1)

/* OUTPUT_SHOULD_BE
Flare used!
*/
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Lo9pMs
code,"/**
 * Copyright 2015 Yahoo Inc. Licensed under the Apache License, Version 2.0
 * See accompanying LICENSE file.
 */
package kafka.manager

import java.util.Properties
import java.util.concurrent.atomic.AtomicBoolean

import com.typesafe.config.{Config, ConfigFactory}
import kafka.manager.features.KMDeleteTopicFeature
import kafka.manager.model.{Kafka_0_8_1_1, ActorModel}
import kafka.manager.utils.CuratorAwareTest
import kafka.manager.model.ActorModel.{KafkaManagedConsumer, ZKManagedConsumer, TopicList}
import kafka.test.{NewKafkaManagedConsumer, SimpleProducer, HighLevelConsumer, SeededBroker}

import scala.concurrent.Await
import scala.concurrent.duration._
import scala.util.Try

/**
 * @author hiral
 */
class TestKafkaManager extends CuratorAwareTest with BaseTest {
  private[this] val seededTopic = ""km-api-test""
  private[this] val broker = new SeededBroker(seededTopic,4)
  private[this] val kafkaServerZkPath = broker.getZookeeperConnectionString
  private[this] val akkaConfig: Properties = new Properties()
  akkaConfig.setProperty(""pinned-dispatcher.type"",""PinnedDispatcher"")
  akkaConfig.setProperty(""pinned-dispatcher.executor"",""thread-pool-executor"")
  akkaConfig.setProperty(KafkaManager.ZkHosts,testServer.getConnectString)
  akkaConfig.setProperty(KafkaManager.BrokerViewUpdateSeconds,""1"")
  akkaConfig.setProperty(KafkaManager.KafkaManagerUpdateSeconds,""1"")
  akkaConfig.setProperty(KafkaManager.DeleteClusterUpdateSeconds,""1"")
  akkaConfig.setProperty(KafkaManager.ConsumerPropertiesFile,""conf/consumer.properties"")
  private[this] val config : Config = ConfigFactory.parseProperties(akkaConfig)

  private[this] val kafkaManager : KafkaManager = new KafkaManager(config)

  private[this] val duration = FiniteDuration(10,SECONDS)
  private[this] val createTopicNameA = ""km-unit-test-a""
  private[this] val createTopicNameB = ""km-unit-test-b""
  private[this] val createLogkafkaLogkafkaId = ""km-unit-test-logkafka-logkafka_id""
  private[this] val createLogkafkaLogPath = ""/km-unit-test-logkafka-logpath""
  private[this] val createLogkafkaTopic = ""km-unit-test-logkafka-topic""
  private[this] var hlConsumer : Option[HighLevelConsumer] = None
  private[this] var hlConsumerThread : Option[Thread] = None
  private[this] val hlShutdown = new AtomicBoolean(false)
  private[this] var newConsumer : Option[NewKafkaManagedConsumer] = None
  private[this] var newConsumerThread : Option[Thread] = None
  private[this] val newShutdown = new AtomicBoolean(false)
  private[this] var simpleProducer : Option[SimpleProducer] = None
  private[this] var simpleProducerThread : Option[Thread] = None

  override protected def beforeAll() : Unit = {
    super.beforeAll()
    Thread.sleep(2000)
    hlConsumer = Option(broker.getHighLevelConsumer)
    hlConsumerThread = Option(new Thread() {
      override def run(): Unit = {
        while(!hlShutdown.get()) {
          hlConsumer.map(_.read { ba => 
            Option(ba).map(asString).foreach( s => println(s""hl consumer read message : $s""))
          })
          Thread.sleep(500)
        }
      }
    })
    hlConsumerThread.foreach(_.start())
    newConsumer = Option(broker.getNewConsumer)
    newConsumerThread = Option(new Thread() {
      override def run(): Unit = {
        while(!newShutdown.get()) {
          newConsumer.map(_.read { message =>
            Option(message).foreach( s => println(s""new consumer read message : $s""))
          })
          Thread.sleep(500)
        }
      }
    })
    newConsumerThread.foreach(_.start())
    simpleProducer = Option(broker.getSimpleProducer)
    simpleProducerThread = Option(new Thread() {
      override def run(): Unit = {
        var count = 0
        while(!hlShutdown.get()) {
          simpleProducer.foreach { p =>
            p.send(s""simple message $count"", null)
            count+=1
            Thread.sleep(500)
          }
        }
      }
    })
    simpleProducerThread.foreach(_.start())
    Thread.sleep(1000)
  }

  override protected def afterAll(): Unit = {
    Try(newShutdown.set(true))
    Try(hlShutdown.set(true))
    Try(simpleProducerThread.foreach(_.interrupt()))
    Try(hlConsumerThread.foreach(_.interrupt()))
    Try(hlConsumer.foreach(_.close()))
    Try(newConsumerThread.foreach(_.interrupt()))
    Try(newConsumer.foreach(_.close()))
    if(kafkaManager!=null) {
      kafkaManager.shutdown()
    }
    Try(broker.shutdown())
    super.afterAll()
  }

  private[this] def getTopicList() : TopicList = {
    val future = kafkaManager.getTopicList(""dev"")
    val result = Await.result(future,duration)
    result.toOption.get
  }

  test(""add cluster"") {
    val future = kafkaManager.addCluster(""dev"",""0.8.2.0"",kafkaServerZkPath, jmxEnabled = false, pollConsumers = true, filterConsumers = true, jmxUser = None, jmxPass = None, jmxSsl = false, tuning = Option(kafkaManager.defaultTuning))
    val result = Await.result(future,duration)
    assert(result.isRight === true)
    Thread.sleep(2000)
  }

  test(""create topic"") {
    val futureA = kafkaManager.createTopic(""dev"",createTopicNameA,4,1)
    val resultA = Await.result(futureA,duration)
  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ACJsIz
code,"package play.api.i18n

import org.specs2.mutable.Specification
import play.api._

class LangSpec extends Specification {
  ""lang spec"" should {
    ""allow selecting preferred language"" in {
      implicit val app: Application = FakeApplication(Map(""application.langs"" -> ""en-US,es-ES,de""))
      val esEs = Lang(""es"", ""ES"")
      val es = Lang(""es"")
      val deDe = Lang(""de"", ""DE"")
      val de = Lang(""de"")
      val enUs = Lang(""en"", ""US"")

      ""with exact match"" in {
        Lang.preferred(Seq(esEs)) must_== esEs
      }

      ""with just language match"" in {
        Lang.preferred(Seq(de)) must_== de
      }

      ""with just language match country specific"" in {
        Lang.preferred(Seq(es)) must_== esEs
      }

      ""with language and country not match just language"" in {
        Lang.preferred(Seq(deDe)) must_== enUs
      }

      ""with case insensitive match"" in {
        Lang.preferred(Seq(Lang(""ES"", ""es""))) must_== esEs
      }

      ""in order"" in {
        Lang.preferred(Seq(esEs, enUs)) must_== esEs
      }

    }
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lIWUQB
code,"package com.catinthedark.ld36.common

case class Stat(username: String, scores: Int, dead: Int)
case class Stats(me: Stat, other: Seq[Stat])
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Gx3m2s
code,"/* sbt -- Simple Build Tool
 * Copyright 2009  Mark Harrah
 */
package sbt

object StringUtilities
{
	def normalize(s: String) = s.toLowerCase.replaceAll(""""""\s+"""""", ""-"")
	def nonEmpty(s: String, label: String)
	{
		require(s.trim.length > 0, label + "" cannot be empty."")
	}
	def appendable(s: String) = if(s.isEmpty) """" else ""_"" + s
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mDteyI
code,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.irvingc.spark

import org.apache.spark.SparkConf
import org.apache.spark.SparkConf
import org.apache.spark.SparkContext
import org.slf4j.LoggerFactory
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.clustering.dbscan.DBSCAN

object SampleDBSCANJob {

  val log = LoggerFactory.getLogger(SampleDBSCANJob.getClass)

  def main(args: Array[String]) {

    if (args.length < 3) {
      System.err.println(""You must pass the arguments: <src file> <dest file> <parallelism>"")
      System.exit(1)
    }

    val (src, dest, maxPointsPerPartition, eps, minPoints) =
      (args(0), args(1), args(2).toInt, args(3).toFloat, args(4).toInt)

    val destOut = dest.split('/').last

    val conf = new SparkConf().setAppName(s""DBSCAN(eps=$eps, min=$minPoints, max=$maxPointsPerPartition) -> $destOut"")
    conf.set(""spark.serializer"", ""org.apache.spark.serializer.KryoSerializer"")
    // conf.set(""spark.storage.memoryFraction"", ""0.1"")
    val sc = new SparkContext(conf)

    val data = sc.textFile(src)

    val parsedData = data.map(s => Vectors.dense(s.split(',').map(_.toDouble))).cache()

    log.info(s""EPS: $eps minPoints: $minPoints"")

    val model = DBSCAN.train(
      parsedData,
      eps = eps,
      minPoints = minPoints,
      maxPointsPerPartition = maxPointsPerPartition)

    model.labeledPoints.map(p => s""${p.x},${p.y},${p.cluster}"").saveAsTextFile(dest)
    log.info(""Stopping Spark Context..."")
    sc.stop()

  }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",27IxNm
code,"package sri.web

import sri.core._

import scala.reflect.ClassTag
import scala.scalajs.js
import scala.scalajs.js.JSConverters.genTravConvertible2JSRichGenTrav
import scala.scalajs.js.`|`
import scala.scalajs.js.Dynamic.{literal => json}

package object vdom {

  @inline
  def addJsObjects(in: js.Object, extra: js.Object) = {
    val extraDict = extra.asInstanceOf[js.Dictionary[js.Any]]
    for (key <- extraDict.keys) {
      val v = extraDict(key)
      if (!js.isUndefined(v)) in.asInstanceOf[js.Dynamic].updateDynamic(key)(v)
    }
  }

  /**
   *
   * // Production mode
      // http://babeljs.io/blog/2015/03/31/5.0.0/#inline-elements

      // Logic here taken from:
      // https://github.com/babel/babel/blob/master/packages/babel-helpers/src/helpers.js
      // https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-react-inline-elements/test/fixtures/inline-elements
    https://github.com/japgolly/scalajs-react/blob/master/core/src/main/scala/japgolly/scalajs/react/vdom/Builder.scala
   * @param tag
   * @param props
   * @param children
   * @return
   */
  @inline
  def inlineReactElement(tag: String, props: js.Object, children: ReactNode*): ReactElement = {
    val ref = props.asInstanceOf[js.Dynamic].ref.asInstanceOf[js.UndefOr[js.Any]]
    if (ref.isDefined)
      React.createElement(tag, props, children: _*)
    else {

      val REACT_ELEMENT_TYPE: js.Any =
        try
          js.Dynamic.global.Symbol.`for`(""react.element"")
        catch {
          case _: Throwable => 0xeac7
        }
      val key = props.asInstanceOf[js.Dynamic].key.asInstanceOf[js.UndefOr[js.Any]]

      val clen = children.length
      if (clen != 0) {
        val c: js.Any = if (clen == 1) children(0).asInstanceOf[js.Any] else (children.toJSArray)
        props.asInstanceOf[js.Dynamic].updateDynamic(""children"")(c)
      }

      json(
        `$$typeof` = REACT_ELEMENT_TYPE,
        `type` = tag,
        key = key.fold(null: js.Any)("""" + _),
        ref = null,
        props = props,
        _owner = null)
        .asInstanceOf[ReactElement]
    }

  }

  /* this works here, but not in the general case!
 * (see https://github.com/scala-js/scala-js/pull/2070 )
 */
  //TODO We need to find a better solution here
  private[vdom] implicit def UnionEvidence[A: ClassTag, B: ClassTag](ab: A | B)(implicit eva: A => js.Any, evb: B => js.Any): js.Any =
    ab match {
      case a: A => eva(a)
      case b: B => evb(b)
    }

  object htmltags extends HtmlTagsInline

  object htmltagsPrefix_< {
    @inline def < = htmltags
  }

  object htmltagsNoInline extends HtmlTags

  object htmltagsNoInlinePrefix_< {
    @inline def < = htmltagsNoInline
  }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hk-_Ad
code,"/*
 * (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package cogx.compiler.parser.syntaxtree

import cogx.cogmath.hypercircuit.Hypercircuit

/** This is the syntax tree of a computation, built when the application is
  * executed. It does all semantic checking, but allocates no resources.
  *
  * @author Greg Snider
  */
private[cogx]
class SyntaxTree
        extends Hypercircuit[Operation]
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dPIcPH
code,"package com.htc.studio.example

import scala.language.implicitConversions

import com.twitter.algebird.{HLL, HyperLogLogMonoid, SketchMap, SketchMapParams}

package object mapcount {

  val Tab = ""\t""
  val Colon = "":""
  val corekinds = 50
  // params for HyperLogLog Monoid
  val Bits = 12
  // params for SketchMap Monoid
  val Delta = 1E-8
  val Eps = 0.001
  val SmSeed = 1
  val HeavyHittersCount = 10
  implicit def toBytes(v: String): Array[Byte] = v.getBytes
  val SmParams = SketchMapParams[String](SmSeed, Eps, Delta, HeavyHittersCount)

  /**
   * Device Log Object. contains:
   *  - logging time stamp
   *  - device type info
   *  - country name info
   */
  case class DeviceLogObj(
    val timeStamp: Long,
    val deviceId: String,
    val region: String
  )

  type vType = (Long, HLL, SketchMap[String, Long])
  type storeType = (Long, Long, String, String, String)
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1d2WNv
code,"package utils.remote.amazon.operation

import play.api.test._
import utils.remote.amazon.stackable.CartRG
import scala.concurrent.duration.FiniteDuration
import utils.remote.amazon.AmazonSpecification


/**
 * @author alari (name.alari@gmail.com)
 * @since 24.10.13 13:59
 */
class CartCreateSpec extends AmazonSpecification {
  import main.Implicits.amazonOp


  ""cart create operation"" should {
    ""create a cart"" in new WithApplication {
      maybeUnavailable {
        CartCreate.byAsins(""1476745374"" -> 2) must beLike[Seq[CartRG]] {
          case cart =>
            cart.head.id.length must be_>=(1)
            cart.head.purchaseUrl.length must be_>=(10)
        }.await(2, FiniteDuration(2, ""seconds""))
      }
    }
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NQ3RS4
code,"package scala.meta
package tokenizers

import scala.meta.inputs._
import scala.meta.internal.tokenizers._

trait Tokenize {
  def apply(input: Input, dialect: Dialect): Tokenized
}

object Tokenize {
  implicit def scalametaTokenize: Tokenize = ScalametaTokenizer.toTokenize
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Wjn-HT
code,"package es.weso.shex

import es.weso.rdfgraph.nodes._
import es.weso.rdfgraph._

import es.weso.rdf._
import scala.util.parsing.input.Positional

case class Typing(map: Map[RDFNode, Set[RDFNode]]) {

  def addType(key: RDFNode, value: RDFNode): Option[Typing] = {
    if (map contains key) {
      Some(Typing(map.updated(key, map(key) + value)))
    } else {
      Some(Typing(map + ((key, Set(value)))))
    }
  }

  def rmType(key: RDFNode, value: RDFNode): Option[Typing] = {
    if ((map contains key) && (map(key) contains value)) {
      val newSet = map(key) - value
      if (newSet.isEmpty) {
        Some(Typing(map - key))
      } else {
        Some(Typing(map.updated(key, newSet)))
      }
    } else None
  }

  def hasType(n: RDFNode): Set[RDFNode] = {
    if (map contains n) map(n)
    else Set()
  }

  def combine(other: Typing): Typing = {
    Typing(map ++ other.map)
  }

  def hasTypes(n: RDFNode, nodes: Set[RDFNode]): Boolean = {
    hasType(n) == nodes
  }

  def showTyping(implicit pm: PrefixMap): String = {
    val sb = new StringBuilder
    for (is <- map) {
      sb ++= (showNode(is._1) + "" -> "" + showNodes(is._2) + ""\n"")
    }
    sb.toString
  }

  // TODO: Refactor to put these 2 definitions in RDF
  private def showIRI(iri: IRI)(implicit pm: PrefixMap): String = {
    ""<"" + iri.str + "">""
  }

  private def showNode(node: RDFNode)(implicit pm: PrefixMap): String = {
    if (node.isIRI) showIRI(node.toIRI)
    else node.toString
  }

  private def showNodes(nodes: Set[RDFNode])(implicit pm: PrefixMap): String = {
    val sb = new StringBuilder
    sb ++= ""(""
    for (n <- nodes) {
      sb ++= (showNode(n) + "" "")
    }
    sb ++= "")""
    sb.toString
  }

}

object Typing {

  def emptyTyping: Typing = Typing(Map[RDFNode, Set[RDFNode]]())

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",nOoBTU
code,"/**
 * Licensed to Big Data Genomics (BDG) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The BDG licenses this file
 * to you under the Apache License, Version 2.0 (the
 * ""License""); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.fnothaft.gnocchi.models

case class ReducedDimension(sampleId: String,
                            coordinates: Array[Double]) {
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3xo-Eh
code,"/*
 * Copyright (c) 2008, Michael Pradel
 * All rights reserved. See LICENSE for details.
 */

package applications

import collaborations.Person
import collaborations.StickyThesisSupervision._

object StickyThesisSupervisionTestApp {

  trait SpecialPerson extends Person {
    def x = 23
  }
  
  def main(args : Array[String]) : Unit = {
    val klaus = new Person{ val name = ""Klaus"" }  // a professor
    val peter = new Person{ val name = ""Peter"" }  // another student
    val franz = new SpecialPerson{ val name = ""Franz"" }  // a student
    
    val s = new StickyThesisSupervision(klaus, peter)
   
    s.professor.advise
    println(s.student.wisdom)
    
    println(s.professor.writeLetter)
    
    s.student.bind(franz)
    println(franz.title + "" "" + franz.name)
    println(s.student.wisdom)
    
    println(s.professor.writeLetter)
    
    s.professor.awardDiploma
    
    println(franz.title + "" "" + franz.name)
    
    // now, the student is a SpecialPerson
    val s2 = new StickyThesisSupervision(klaus, franz)
    println(s2.student.x)
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cDpr8B
code,"/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kafka.log

import java.io._
import java.util.concurrent.TimeUnit
import kafka.utils._
import scala.collection._
import kafka.common.{TopicAndPartition, KafkaException}
import kafka.server.KafkaConfig


/**
 * The entry point to the kafka log management subsystem. The log manager is responsible for log creation, retrieval, and cleaning.
 * All read and write operations are delegated to the individual log instances.
 * 
 * The log manager maintains logs in one or more directories. New logs are created in the data directory
 * with the fewest logs. No attempt is made to move partitions after the fact or balance based on
 * size or I/O rate.
 * 
 * A background thread handles log retention by periodically truncating excess log segments.
 */
@threadsafe
class LogManager(val logDirs: Array[File],
                 val topicConfigs: Map[String, LogConfig],
                 val defaultConfig: LogConfig,
                 val cleanerConfig: CleanerConfig,
                 val flushCheckMs: Long,
                 val retentionCheckMs: Long,
                 scheduler: Scheduler,
                 private val time: Time) extends Logging {

  val CleanShutdownFile = "".kafka_cleanshutdown""
  val LockFile = "".lock""
  val InitialTaskDelayMs = 30*1000
  private val logCreationLock = new Object
  private val logs = new Pool[TopicAndPartition, Log]()
  
  createAndValidateLogDirs(logDirs)
  private var dirLocks = lockLogDirs(logDirs)
  loadLogs(logDirs)
  
  private val cleaner: LogCleaner = 
    if(cleanerConfig.enableCleaner)
      new LogCleaner(cleanerConfig, logDirs, logs, time = time)
    else
      null
  
  /**
   * Create and check validity of the given directories, specifically:
   * <ol>
   * <li> Ensure that there are no duplicates in the directory list
   * <li> Create each directory if it doesn't exist
   * <li> Check that each path is a readable directory 
   * </ol>
   */
  private def createAndValidateLogDirs(dirs: Seq[File]) {
    if(dirs.map(_.getCanonicalPath).toSet.size < dirs.size)
      throw new KafkaException(""Duplicate log directory found: "" + logDirs.mkString("", ""))
    for(dir <- dirs) {
      if(!dir.exists) {
        info(""Log directory '"" + dir.getAbsolutePath + ""' not found, creating it."")
        val created = dir.mkdirs()
        if(!created)
          throw new KafkaException(""Failed to create data directory "" + dir.getAbsolutePath)
      }
      if(!dir.isDirectory || !dir.canRead)
        throw new KafkaException(dir.getAbsolutePath + "" is not a readable log directory."")
    }
  }
  
  /**
   * Lock all the given directories
   */
  private def lockLogDirs(dirs: Seq[File]): Seq[FileLock] = {
    dirs.map { dir =>
      val lock = new FileLock(new File(dir, LockFile))
      if(!lock.tryLock())
        throw new KafkaException(""Failed to acquire lock on file .lock in "" + lock.file.getParentFile.getAbsolutePath + 
                               "". A Kafka instance in another process or thread is using this directory."")
      lock
    }
  }
  
  /**
   * Recover and load all logs in the given data directories
   */
  private def loadLogs(dirs: Seq[File]) {
    for(dir <- dirs) {
      /* check if this set of logs was shut down cleanly */
      val cleanShutDownFile = new File(dir, CleanShutdownFile)
      val needsRecovery = !cleanShutDownFile.exists
      cleanShutDownFile.delete
      /* load the logs */
      val subDirs = dir.listFiles()
      if(subDirs != null) {
        for(dir <- subDirs) {
          if(dir.isDirectory){
            info(""Loading log '"" + dir.getName + ""'"")
            val topicPartition = parseTopicPartitionName(dir.getName)
            val config = topicConfigs.getOrElse(topicPartition.topic, defaultConfig)
            val log = new Log(dir, 
                              config,
                              needsRecovery,
                              scheduler,
                              time)
            val previous = this.logs.put(topicPartition, log)
            if(previous != null)
              throw new IllegalArgumentException(""Duplicate log directories found: %s, %s!"".format(log.dir.getAbsolutePath, previous.dir.getAbsolutePath))
          }
        }
      }
    }
  }

  /**
   *  Start the background threads to flush logs and do log cleanup
   */
  def startup() {
    /* Sch",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h3iVDo
code,"package com.twitter.scalding

import scala.tools.nsc.interpreter.ILoop

trait ILoopCompat extends ILoop
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Nu5nQD
code,"package pimpathon

import scala.{PartialFunction ⇒ ~>}
import scala.collection.generic.{Growable, Shrinkable}
import scala.util.Try
import pimpathon.boolean._
import pimpathon.function._

import scala.reflect.ClassTag


object any {
  implicit class AnyPimps[A](val self: A) extends AnyVal {
    def calc[B](f: A ⇒ B): B = f(self)
    def |>[B](f: A ⇒ B): B = f(self)
    def calcIf[B](p: Predicate[A])(f: A ⇒ B): Option[B] = p(self).option(f(self))
    def calcUnless[B](p: Predicate[A])(f: A ⇒ B): Option[B] = (!p(self)).option(f(self))
    def calcPF[B](pf: A ~> B): Option[B] = pf.lift(self)
    def transform(pf: A ~> A): A = pf.unify(self)

    def tapIf[Discarded](p: Predicate[A])(actions: (A ⇒ Discarded)*): A     = if (p(self)) tap(actions: _*) else self
    def tapUnless[Discarded](p: Predicate[A])(actions: (A ⇒ Discarded)*): A = if (p(self)) self else tap(actions: _*)

    def tapPF[Discarded](action: A ~> Discarded): A = { action.lift(self); self }

    def castTo[B](implicit tag: ClassTag[B]): Option[B] =
      if (tag.runtimeClass.isAssignableFrom(self.getClass)) Some(self.asInstanceOf[B]) else None

    def attempt[B](f: A ⇒ B): Try[B] = Try(f(self))

    def partialMatch[B](pf: A ~> B): Option[B] = PartialFunction.condOpt(self)(pf)

    def lpair[B](f: A ⇒ B): (B, A) = (f(self), self)
    def rpair[B](f: A ⇒ B): (A, B) = (self, f(self))

    def filterSelf(p: Predicate[A]): Option[A] = p(self).option(self)
    def ifSelf(p: Predicate[A]): Option[A] = p(self).option(self)

    def filterNotSelf(p: Predicate[A]): Option[A] = (!p(self)).option(self)
    def unlessSelf(p: Predicate[A]): Option[A] = (!p(self)).option(self)

    def isOneOf(as: A*): Boolean = as.contains(self)
    def isNotOneOf(as: A*): Boolean = !as.contains(self)

    def containedIn(s: Set[A]): Boolean = s.contains(self)
    def notContainedIn(s: Set[A]): Boolean = !s.contains(self)

    def passes: AnyCapturer[A] = new AnyCapturer[A](self, b ⇒ b.option(self))
    def fails: AnyCapturer[A]  = new AnyCapturer[A](self, b ⇒ (!b).option(self))

    def withFinally[B](f: A ⇒ Unit)(t: A ⇒ B): B = try t(self) finally f(self)
    def tryFinally[B](t: A ⇒ B)(f: A ⇒ Unit): B = try t(self) finally f(self)

    def cond[B](p: Predicate[A], ifTrue: A ⇒ B, ifFalse: A ⇒ B): B = if (p(self)) ifTrue(self) else ifFalse(self)

    def addTo(as: Growable[A]): A = tap(as += _)
    def removeFrom(as: Shrinkable[A]): A = tap(as -= _)

    def unfold[B](f: A ⇒ Option[(B, A)]): Stream[B] = f(self).fold(Stream.empty[B])(ba ⇒ ba._1 #:: ba._2.unfold(f))

    // These methods are aliased to suit individual preferences
    def update[Discarded](actions: (A ⇒ Discarded)*): A         = tap(actions: _*)
    def withSideEffect[Discarded](actions: (A ⇒ Discarded)*): A = tap(actions: _*)
    def tap[Discarded](actions: (A ⇒ Discarded)*): A            = { actions.foreach(action ⇒ action(self)); self }

    def bounded(lower: A, upper: A)(implicit na: Numeric[A]): A = na.min(na.max(lower, self), upper)
  }

  class AnyCapturer[A](a: A, andThen: Boolean ⇒ Option[A]) {
    def one(disjuncts: Predicate[A]*): Option[A]  = andThen(function.or(disjuncts: _*).apply(a))
    def all(conjuncts: Predicate[A]*): Option[A]  = andThen(function.and(conjuncts: _*).apply(a))
    def none(conjuncts: Predicate[A]*): Option[A] = andThen(function.nand(conjuncts: _*).apply(a))
    def some(disjuncts: Predicate[A]*): Option[A] = andThen(function.nor(disjuncts: _*).apply(a))
  }
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",rp-Wzm
code,"import sbt._
import sbt.Keys._

object LiftProjectBuild extends Build {

  import Dependencies._
  import BuildSettings._

  lazy val root = Project(""lift-poly-example"", file("".""))
    .settings(liftAppSettings: _*)
    .settings(libraryDependencies ++=
      compile(
        liftWebkit,
        liftMongodb,
        liftExtras,
        liftMongoauth,
        logback,
        rogueField,
        rogueCore,
        rogueLift,
        rogueIndex
      ) ++
      test(scalatest) ++
      container(jettyWebapp)
    )
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HsJjzB
code,"package queries

case class ResetPassword(secret: String, password: String)
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WIkTVS
code,"/*
 * Copyright 2019 ABSA Group Limited
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package za.co.absa.spline.persistence

import com.arangodb.async.ArangoDatabaseAsync
import com.arangodb.entity.{EdgeDefinition, IndexType}
import com.arangodb.model.Implicits.IndexOptionsOps
import com.arangodb.model._
import org.apache.commons.io.FilenameUtils
import org.slf4s.Logging
import org.springframework.core.io.support.PathMatchingResourcePatternResolver
import za.co.absa.commons.lang.ARM
import za.co.absa.commons.reflect.EnumerationMacros.sealedInstancesOf
import za.co.absa.commons.version.impl.SemVer20Impl.SemanticVersion
import za.co.absa.spline.persistence.OnDBExistsAction.{Drop, Skip}
import za.co.absa.spline.persistence.foxx.{FoxxManager, FoxxSourceResolver}
import za.co.absa.spline.persistence.migration.Migrator
import za.co.absa.spline.persistence.model.{CollectionDef, GraphDef, SearchAnalyzerDef, SearchViewDef}

import scala.collection.JavaConverters._
import scala.collection.immutable._
import scala.compat.java8.FutureConverters._
import scala.concurrent.{ExecutionContext, Future}
import scala.io.Source

trait ArangoManager {

  /**
   * @return `true` if actual initialization was performed.
   */
  def initialize(onExistsAction: OnDBExistsAction): Future[Boolean]
  def upgrade(): Future[Unit]
  def execute(actions: AuxiliaryDBAction*): Future[Unit]
}

class ArangoManagerImpl(
  db: ArangoDatabaseAsync,
  dbVersionManager: DatabaseVersionManager,
  migrator: Migrator,
  foxxManager: FoxxManager,
  appDBVersion: SemanticVersion)
  (implicit val ex: ExecutionContext)
  extends ArangoManager
    with Logging {

  import ArangoManagerImpl._

  def initialize(onExistsAction: OnDBExistsAction): Future[Boolean] = {
    log.debug(""Initialize database"")
    db.exists.toScala.flatMap { exists =>
      if (exists && onExistsAction == Skip) {
        log.debug(""Database already exists - skipping initialization"")
        Future.successful(false)
      } else for {
        _ <- deleteDbIfRequested(db, onExistsAction == Drop)
        _ <- db.create().toScala
        _ <- createCollections(db)
        _ <- createAQLUserFunctions(db)
        _ <- createFoxxServices()
        _ <- createIndices(db)
        _ <- createGraphs(db)
        _ <- createSearchAnalyzers(db)
        _ <- createSearchViews(db)
        _ <- dbVersionManager.insertDbVersion(appDBVersion)
      } yield true
    }
  }

  override def upgrade(): Future[Unit] = {
    log.debug(""Upgrade database"")
    dbVersionManager.currentVersion
      .flatMap(currentVersion => {
        log.info(s""Current database version: ${currentVersion.asString}"")
        log.info(s""Target database version: ${appDBVersion.asString}"")
        if (currentVersion == appDBVersion) Future.successful {
          log.info(s""The database is up-to-date"")
        } else if (currentVersion > appDBVersion) Future.failed {
          new RuntimeException(""Database downgrade is not supported"")
        } else for {
          _ <- deleteFoxxServices()
          _ <- migrator.migrate(currentVersion, appDBVersion)
          _ <- createFoxxServices()
        } yield {}
      })
  }

  override def execute(actions: AuxiliaryDBAction*): Future[Unit] = {
    actions.foldLeft(Future.successful(())) {
      case (prevFuture, nextAction) =>
        prevFuture.flatMap(_ => (nextAction match {
          case AuxiliaryDBAction.CheckDBAccess => checkDBAccess(db)
          case AuxiliaryDBAction.FoxxReinstall => reinstallFoxxServices()
          case AuxiliaryDBAction.IndicesDelete => deleteIndices(db)
          case AuxiliaryDBAction.IndicesCreate => createIndices(db)
          case AuxiliaryDBAction.SearchViewsDelete => deleteSearchViews(db)
          case AuxiliaryDBAction.SearchViewsCreate => createSearchViews(db)
          case AuxiliaryDBAction.SearchAnalyzerDelete => deleteSearchAnalyzers(db)
          case AuxiliaryDBAction.SearchAnalyzerCreate => createSearchAnalyzers(db)
        }).map(_ => {}))
    }
  }

  private def checkDBAccess(db: ArangoDatabaseAsync) = {
    db.exists.toScala
  }

  private def reinstallFoxxServices() = {
    for {
      _ <- deleteFoxxServices()
      _ <- createFoxxServices()
    } yield {}
  }

  private def deleteDbIfRequested(db: ArangoDatabaseAsync, dropIfExists: Boolean) = {
    for {
      exists <- db.exists.toScala
      _ <- if (exists && !dropIfExists)
        throw new IllegalArgumentException(s""Arango Database ${db.name()} already exists"")
      else if (exists && dropIfExists) {
        log.info(s""Drop database: ${db.name}"")
        db.drop().toScala
      }
      else F",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",W5lI0f
code,"package thangiee.riotapi.staticdata

case class Champion(
  id: Int,
  title: String,
  name: String,
  key: String
  )

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vgwZ-x
code,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.spark.sql.streaming

import org.scalatest.BeforeAndAfterAll

import org.apache.spark.sql.catalyst.streaming.InternalOutputModes._
import org.apache.spark.sql.execution.streaming.MemoryStream
import org.apache.spark.sql.execution.streaming.state.StateStore
import org.apache.spark.sql.functions._

class DeduplicateSuite extends StateStoreMetricsTest with BeforeAndAfterAll {

  import testImplicits._

  override def afterAll(): Unit = {
    super.afterAll()
    StateStore.stop()
  }

  test(""deduplicate with all columns"") {
    val inputData = MemoryStream[String]
    val result = inputData.toDS().dropDuplicates()

    testStream(result, Append)(
      AddData(inputData, ""a""),
      CheckLastBatch(""a""),
      assertNumStateRows(total = 1, updated = 1),
      AddData(inputData, ""a""),
      CheckLastBatch(),
      assertNumStateRows(total = 1, updated = 0),
      AddData(inputData, ""b""),
      CheckLastBatch(""b""),
      assertNumStateRows(total = 2, updated = 1)
    )
  }

  test(""deduplicate with some columns"") {
    val inputData = MemoryStream[(String, Int)]
    val result = inputData.toDS().dropDuplicates(""_1"")

    testStream(result, Append)(
      AddData(inputData, ""a"" -> 1),
      CheckLastBatch(""a"" -> 1),
      assertNumStateRows(total = 1, updated = 1),
      AddData(inputData, ""a"" -> 2), // Dropped
      CheckLastBatch(),
      assertNumStateRows(total = 1, updated = 0),
      AddData(inputData, ""b"" -> 1),
      CheckLastBatch(""b"" -> 1),
      assertNumStateRows(total = 2, updated = 1)
    )
  }

  test(""multiple deduplicates"") {
    val inputData = MemoryStream[(String, Int)]
    val result = inputData.toDS().dropDuplicates().dropDuplicates(""_1"")

    testStream(result, Append)(
      AddData(inputData, ""a"" -> 1),
      CheckLastBatch(""a"" -> 1),
      assertNumStateRows(total = Seq(1L, 1L), updated = Seq(1L, 1L)),

      AddData(inputData, ""a"" -> 2), // Dropped from the second `dropDuplicates`
      CheckLastBatch(),
      assertNumStateRows(total = Seq(1L, 2L), updated = Seq(0L, 1L)),

      AddData(inputData, ""b"" -> 1),
      CheckLastBatch(""b"" -> 1),
      assertNumStateRows(total = Seq(2L, 3L), updated = Seq(1L, 1L))
    )
  }

  test(""deduplicate with watermark"") {
    val inputData = MemoryStream[Int]
    val result = inputData.toDS()
      .withColumn(""eventTime"", $""value"".cast(""timestamp""))
      .withWatermark(""eventTime"", ""10 seconds"")
      .dropDuplicates()
      .select($""eventTime"".cast(""long"").as[Long])

    testStream(result, Append)(
      AddData(inputData, (1 to 5).flatMap(_ => (10 to 15)): _*),
      CheckLastBatch(10 to 15: _*),
      assertNumStateRows(total = 6, updated = 6),

      AddData(inputData, 25), // Advance watermark to 15 seconds
      CheckLastBatch(25),
      assertNumStateRows(total = 7, updated = 1),

      AddData(inputData, 25), // Drop states less than watermark
      CheckLastBatch(),
      assertNumStateRows(total = 1, updated = 0),

      AddData(inputData, 10), // Should not emit anything as data less than watermark
      CheckLastBatch(),
      assertNumStateRows(total = 1, updated = 0),

      AddData(inputData, 45), // Advance watermark to 35 seconds
      CheckLastBatch(45),
      assertNumStateRows(total = 2, updated = 1),

      AddData(inputData, 45), // Drop states less than watermark
      CheckLastBatch(),
      assertNumStateRows(total = 1, updated = 0)
    )
  }

  test(""deduplicate with aggregate - append mode"") {
    val inputData = MemoryStream[Int]
    val windowedaggregate = inputData.toDS()
      .withColumn(""eventTime"", $""value"".cast(""timestamp""))
      .withWatermark(""eventTime"", ""10 seconds"")
      .dropDuplicates()
      .withWatermark(""eventTime"", ""10 seconds"")
      .groupBy(window($""eventTime"", ""5 seconds"") as 'window)
      .agg(count(""*"") as 'count)
      .select($""window"".getField(""start"").cast(""long"").as[Long], $""count"".as[Long])

    testStream(windowedaggregate)(
      AddData(inputData, (1 to 5).flatMap(_ => (10 to 15)): _*),
      CheckLastBatch(),
      // states in aggregate in [10, 14), [15, 20) (2 windows)
      // states in deduplicate is 10 to 15
      assertNumStateRows(total = Seq(2L, 6L), updated = Seq(2L, 6L)),

      AddData(inputData, 25), // Advance watermark to 15 seconds
      CheckLastBatch(),
      // states in aggregat",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GArscg
code,"package com.cerner.beadledom.client.resteasy

import org.scalatest.{FunSpec, MustMatchers}

/**
  * Specs for ResteasyClientBuilderFactory.
  */
class ResteasyClientBuilderFactorySpec extends FunSpec with MustMatchers {

  val factory = new ResteasyClientBuilderFactory()

  describe(""ResteasyClientBuilderFactory"") {
    describe(""#create"") {
      it(""creates a new builder"") {
        val builder = factory.create()
        builder mustBe an[BeadledomResteasyClientBuilder]
      }
    }
  }
}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",F_uDHd
code,"/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the ""License""); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.spark.util

import scala.language.postfixOps

import org.apache.spark.SparkConf
import org.apache.spark.rpc.{RpcAddress, RpcEndpointRef, RpcEnv, RpcTimeout}

private[spark] object RpcUtils {

  /**
   * Retrieve a [[RpcEndpointRef]] which is located in the driver via its name.
   * 通过其名称检索位于驱动程序中的[[RpcEndpointRef]]。
   */
  def makeDriverRef(name: String, conf: SparkConf, rpcEnv: RpcEnv): RpcEndpointRef = {
    val driverHost: String = conf.get(""spark.driver.host"", ""localhost"")
    val driverPort: Int = conf.getInt(""spark.driver.port"", 7077)
    Utils.checkHost(driverHost, ""Expected hostname"")
    rpcEnv.setupEndpointRef(RpcAddress(driverHost, driverPort), name)
  }

  /** Returns the configured number of times to retry connecting */
  def numRetries(conf: SparkConf): Int = {
    conf.getInt(""spark.rpc.numRetries"", 3)
  }

  /** Returns the configured number of milliseconds to wait on each retry */
  def retryWaitMs(conf: SparkConf): Long = {
    conf.getTimeAsMs(""spark.rpc.retry.wait"", ""3s"")
  }

  /** Returns the default Spark timeout to use for RPC ask operations. */
  def askRpcTimeout(conf: SparkConf): RpcTimeout = {
    RpcTimeout(conf, Seq(""spark.rpc.askTimeout"", ""spark.network.timeout""), ""120s"")
  }

  /** Returns the default Spark timeout to use for RPC remote endpoint lookup. */
  def lookupRpcTimeout(conf: SparkConf): RpcTimeout = {
    RpcTimeout(conf, Seq(""spark.rpc.lookupTimeout"", ""spark.network.timeout""), ""120s"")
  }

  private val MAX_MESSAGE_SIZE_IN_MB = Int.MaxValue / 1024 / 1024

  /** Returns the configured max message size for messages in bytes. */
  def maxMessageSizeBytes(conf: SparkConf): Int = {
    val maxSizeInMB = conf.getInt(""spark.rpc.message.maxSize"", 128)
    if (maxSizeInMB > MAX_MESSAGE_SIZE_IN_MB) {
      throw new IllegalArgumentException(
        s""spark.rpc.message.maxSize should not be greater than $MAX_MESSAGE_SIZE_IN_MB MB"")
    }
    maxSizeInMB * 1024 * 1024
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",h0G36W
code,"package com.github.j5ik2o.forseti.adaptor.generator

import scala.concurrent.{ExecutionContext, Future}
import scala.reflect.ClassTag
import scalaz.EitherT

trait IdGenerator {

  def generateId[ID: ClassTag](implicit ec: ExecutionContext): EitherT[Future, Exception, ID]

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XBDpsc
code,"import scala.quoted.*

object Other {
  inline def apply = 5
}

object Macro {

  def impl(using Quotes): Expr[Int] = {
    import quotes.reflect.*

    ValDef.let(
      Symbol.spliceOwner,
      Select.unique(
        '{ Other }.asTerm,
        ""apply""
      )
    )(identity).asExprOf[Int]

  }

  inline def apply = ${ Macro.impl }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jnTmAx
code,"package mathParser

object SomeFunctions {
  val someFunctions: Seq[String] = Seq(
    ""x^(3+10)"",
    ""x^(3+10) -1"",
    ""x^10 -1"",
    ""x^3 -1"",
    ""x^x -1"",
    ""x^x +1"",
    ""x^2 +x^(2) +1"",
    ""x^(-x) +1"",
    ""x*x*x - 5"",
    ""x^3-x^2+x-1"",
    ""sin(x) + x^3+1"",
    ""cos(x)+1"",
    ""cos(x)-1"",
    ""x*x*x+5"",
    ""x*x*x*x+5"",
    ""sin(x) + (x+1)*(x-1)+5"",
    ""x^x - 0.99"",
    ""x^x*(x+2)"",
    ""(x+2)*(x-0.5)*(x+log(x))*(x-5)"",
    ""(x+2)*(x-0.5)*(x+sin(x))*(x-2)*(x+2)*(x-0.5)*(x+1)*(x-2)"",
    ""(x+2)*(x-0.5)*(x+sin(x))*(x-2)*(x-0.5)*(x+3)"",
    ""sin(x)*sin(5*x)"",
    ""sin(x - 1)*sin(3*x) + 0.1"",
    ""sin(x - 1)*sin(-5*x) - 0.1"",
    ""x^sin(x) + 1"",
    ""x^sin(x) - 1 - sin(x)^x + 1"",
    ""sin(x)*cos(5*x) + 0.5"",
    ""sin(x*10)*cos(9*x*10) + 0.5"",
    ""sin(x*5)*cos(11*x*5)"",
    ""sin(5*x*5)*cos(x*5) + 0.5"",
    ""e^-(x*x) + e^(-5*x*x)"",
    ""sin(x)^cos(x) - 0.1"",
    ""x^(25+x)"",
    ""e^x - 5"",
    ""e^(3*x) - 9*0.5"",
    ""e^(x*x) - 5*0.5"",
    ""e^(x+x*x) - x*0.5"",
    ""(x-1)^4*(x)^4"",
    ""35*x^9-180*x^7+378*x^5-420*x^3+315*x"",
    ""35*x^9-180*x^7+3798*x^5-420*x^3+315+x""
  )
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JGZdq1
code,"package is.hail.misc

import java.io.InputStream

import is.hail.io.compress.BGzipInputStream
import is.hail.io.fs.FS

object BGZipBlocks {
  //Print block starts of block gzip (bgz) file
  def apply(fs: FS, file: String) {
    var buf = new Array[Byte](64 * 1024)

    // position of 'buf[0]' in input stream
    var bufPos = 0L

    var bufSize = 0
    var posInBuf = 0

    def fillBuf(is: InputStream) {
      val newSize = bufSize - posInBuf
      assert(newSize >= 0)

      System.arraycopy(buf, posInBuf, buf, 0, newSize)
      bufPos += posInBuf
      bufSize = newSize
      posInBuf = 0

      def f() {
        val needed = buf.length - bufSize
        if (needed > 0) {
          val result = is.read(buf, bufSize, needed)
          if (result > 0) {
            bufSize += result
            f()
          }
        }
      }

      f()
    }

    // no decompression codec
    val is = fs.open(file)

    fillBuf(is)

    while (bufSize > 0) {
      val h = new BGzipInputStream.BGzipHeader(buf, posInBuf, bufSize)
      println(bufPos)
      posInBuf += h.getBlockSize
      fillBuf(is)
    }

    is.close()
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GYIxHR
code,"package com.omegaup.runner

import com.omegaup._
import com.omegaup.data._
import com.omegaup.data.OmegaUpProtocol._
import java.io._
import org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream
import org.apache.commons.compress.archivers.tar.{TarArchiveOutputStream, TarArchiveEntry}

class OmegaUpRunstreamReader(callback: RunCaseCallback) extends Object with Using with Log {
	def apply(inputStream: InputStream)(implicit ctx: Context): RunOutputMessage = {
		using (new BZip2CompressorInputStream(inputStream)) { bzip2 => {
			val dis = new DataInputStream(bzip2)

			while (dis.readBoolean) {
				val filename = dis.readUTF
				val length = dis.readLong
				using (new ChunkInputStream(dis, length.toInt)) {
					callback(filename, length, _)
				}
			}

			Serialization.read[RunOutputMessage](new InputStreamReader(dis))
		}}
	}
}

class RunnerProxy(val hostname: String, port: Int) extends RunnerService
with Using with Log {
	private def url()(implicit ctx: Context) = {
		(ctx.config.ssl.disabled match {
			case false => ""https://""
			case true => ""http://""
		}) + hostname + "":"" + port
	}

	def name() = hostname

	override def port() = port

	override def toString() = ""RunnerProxy(%s:%d)"".format(hostname, port)

	def compile(message: CompileInputMessage)(implicit ctx: Context):
	CompileOutputMessage = {
		val result = Https.send[CompileOutputMessage, CompileInputMessage](url + ""/compile/"",
			message,
			true
		)
		if (ctx.overrideLogger != null) {
			result.logs match {
				case Some(logs) => {
					log.debug(s""=================== logs from $hostname ==================="")
					ctx.overrideLogger.append(logs)
					log.debug(""==========================================================="")
				}
				case None => {}
			}
		}
		result
	}

	def run(message: RunInputMessage, callback: RunCaseCallback)(implicit ctx: Context):
	RunOutputMessage = {
		val reader = new OmegaUpRunstreamReader(callback)
		val result = Https.send[RunOutputMessage, RunInputMessage](url + ""/run/"",
			message,
			reader.apply _,
			true
		)
		if (ctx.overrideLogger != null) {
			result.logs match {
				case Some(logs) => {
					log.debug(s""=================== logs from $hostname ==================="")
					ctx.overrideLogger.append(logs)
					log.debug(""==========================================================="")
				}
				case None => {}
			}
		}
		result
	}
	
	def input(inputName: String, entries: Iterable[InputEntry])(implicit ctx: Context):
	InputOutputMessage = {
		Https.stream_send[InputOutputMessage](
			url + ""/input/"",
			""application/x-tar"",
			inputName,
			{ stream => {
				using (new TarArchiveOutputStream(stream)) { tar => {
					for (entry <- entries) {
						val tarEntry = new TarArchiveEntry(entry.name)
						tarEntry.setSize(entry.length)
						tar.putArchiveEntry(tarEntry)
						using (entry.data) {
							FileUtil.copy(_, tar)
						}
						tar.closeArchiveEntry
					}
				}}
			}}
		)
	}
	
	override def hashCode() = 28227 + 97 * hostname.hashCode + port
	override def equals(other: Any) = other match {
		case x:RunnerProxy => hostname == x.hostname && port == x.port
		case _ => false
	}
}

/* vim: set noexpandtab: */
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VKxSiU
code,"object Test {

  inline def fact[T](inline i: Int)(f: => T): Int = {
    printStack(""track"", i)
    printStack(""track"", i)
    f
    if (i == 0)
      1
    else {
      i * fact(i-1)(f)
    }
  }

  def printStack(tag: String, i: Int): Unit = {
    println(s""$tag (i = $i): ${new Exception().getStackTrace().apply(1)}"")
  }

  def main(args: Array[String]): Unit = {
    fact(0) {
      fact(2) {
        printStack(""main1"", -1)
        printStack(""main2"", -1)
      }
    }
  }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CSpHbW
code,"package oriana
package testdatabase

class DBContext extends TestDatabaseContext with DatabaseCommandExecution
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZvifJk
code,"#!/bin/sh
# $Id: run_tic.sh,v 1.1 2011/08/18 02:20:39 tsaitc Exp $
##############################################################################
# Copyright (c) 1998-2010,2011 Free Software Foundation, Inc.                #
#                                                                            #
# Permission is hereby granted, free of charge, to any person obtaining a    #
# copy of this software and associated documentation files (the ""Software""), #
# to deal in the Software without restriction, including without limitation  #
# the rights to use, copy, modify, merge, publish, distribute, distribute    #
# with modifications, sublicense, and/or sell copies of the Software, and to #
# permit persons to whom the Software is furnished to do so, subject to the  #
# following conditions:                                                      #
#                                                                            #
# The above copyright notice and this permission notice shall be included in #
# all copies or substantial portions of the Software.                        #
#                                                                            #
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    #
# THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    #
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        #
# DEALINGS IN THE SOFTWARE.                                                  #
#                                                                            #
# Except as contained in this notice, the name(s) of the above copyright     #
# holders shall not be used in advertising or otherwise to promote the sale, #
# use or other dealings in this Software without prior written               #
# authorization.                                                             #
##############################################################################
#
# Author: Thomas E. Dickey 1996-on
#
# This script is used to install terminfo.src using tic.  We use a script
# because the path checking is too awkward to do in a makefile.
#
# Assumes:
#	The leaf directory names (lib, tabset, terminfo)
#
echo '** Building terminfo database, please wait...'
#
# The script is designed to be run from the misc/Makefile as
#	make install.data

: ${suffix:=}
: ${DESTDIR:=}
: ${prefix:=$(ROOTDIR)/romfs/usr}
: ${exec_prefix:=${prefix}}
: ${bindir:=${exec_prefix}/bin}
: ${top_srcdir:=..}
: ${srcdir:=.}
: ${datadir:=${prefix}/share}
: ${TIC_PATH:=/usr/bin/tic}
: ${ticdir:=${prefix}/share/terminfo}
: ${source:=${top_srcdir}/misc/terminfo.src}
: ${LN_S:=""ln -s -f""}
: ${cross_compiling:=no}
: ${ext_funcs:=1}

test -z ""${DESTDIR}"" && DESTDIR=

# Allow tic to run either from the install-path, or from the build-directory.
# Do not do this if we appear to be cross-compiling.  In that case, we rely
# on the host's copy of tic to compile the terminfo database.
if test ""x$cross_compiling"" = ""xno""
then
	if test -f ../progs/tic$suffix
	then
		case ""$PATH"" in
		\:*)
			PATH=""../progs:../lib:${DESTDIR}$bindir$PATH""
			;;
		*)
			PATH=""../progs:../lib:${DESTDIR}$bindir:$PATH""
			;;
		esac
		export PATH
		if test shared = shared
		then
			SHLIB=""sh $srcdir/shlib""
			TIC_PATH=""$SHLIB tic""
		else
			TIC_PATH=""tic""
		fi
	elif test ""$TIC_PATH"" = unknown
	then
		echo '? no tic program found'
		exit 1
	fi
else
	# Cross-compiling, so don't set PATH or run shlib.
	SHLIB=
	# reset $suffix, since it applies to the target, not the build platform.
	suffix=
fi


# set another env var that doesn't get reset when `shlib' runs, so `shlib' uses
# the PATH we just set.
SHLIB_PATH=$PATH
export SHLIB_PATH

# set a variable to simplify environment update in shlib
SHLIB_HOST=linux-gnu
export SHLIB_HOST

# don't use user's TERMINFO variable
TERMINFO=${DESTDIR}$ticdir ; export TERMINFO
umask 022

# Construct the name of the old (obsolete) pathname, e.g., /usr/lib/terminfo.
TICDIR=`echo $TERMINFO | sed -e 's%/share/\([^/]*\)$%/lib/\1%'`

# Parent directory may not exist, which would confuse the install for hashed
# database.  Fix.
PARENT=`echo ""$TERMINFO"" | sed -e 's%/[^/]*$%%'`
if test -n ""$PARENT""
then
	test -d $PARENT || mkdir -p $PARENT
fi

# Remove the old terminfo stuff; we don't care if it existed before, and it
# would generate a lot of confusing error messages if we tried to overwrite it.
# We explicitly remove its contents rather than the directory itself, in case
# the directory is actually a symbolic link.
( test -d ""$TERMINFO"" && cd $TERMINFO && rm -fr ? 2>/dev/null )

if test ""$ext_funcs"" = 1 ; then
cat <<EOF
Running $TIC_PATH to install $TERMINFO ...

	You may see messages regarding extended capabilities, e.g., AX.
	These are extended terminal capabilities which are compiled
	using
		tic -x
	If you have ncurses 4.2 applications, you should read the INSTALL
	documen",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VNOws7
code,"# Exemplo: ""Feliz Natal"" em Esperanto: Gajan Kristnaskon

$ zznatal  #→ --regex ^""Feliz Natal"" em .+: .+$
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",M8FTGq
code,"#!/bin/bash

# Copyright 2014 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Contains configuration values for interacting with the Vagrant cluster

# Number of minions in the cluster
NUM_MINIONS=${NUM_MINIONS-""1""}
export NUM_MINIONS

# The IP of the master
export MASTER_IP=""10.245.1.2""
export KUBE_MASTER_IP=""10.245.1.2""

export INSTANCE_PREFIX=""kubernetes""
export MASTER_NAME=""${INSTANCE_PREFIX}-master""

# Map out the IPs, names and container subnets of each minion
export MINION_IP_BASE=""10.245.1.""
MINION_CONTAINER_SUBNET_BASE=""10.246""
MASTER_CONTAINER_NETMASK=""255.255.255.0""
MASTER_CONTAINER_ADDR=""${MINION_CONTAINER_SUBNET_BASE}.0.1""
MASTER_CONTAINER_SUBNET=""${MINION_CONTAINER_SUBNET_BASE}.0.1/24""
CONTAINER_SUBNET=""${MINION_CONTAINER_SUBNET_BASE}.0.0/16""
for ((i=0; i < NUM_MINIONS; i++)) do
  MINION_IPS[$i]=""${MINION_IP_BASE}$((i+3))""
  MINION_NAMES[$i]=""${INSTANCE_PREFIX}-minion-$((i+1))""
  MINION_CONTAINER_SUBNETS[$i]=""${MINION_CONTAINER_SUBNET_BASE}.$((i+1)).1/24""
  MINION_CONTAINER_ADDRS[$i]=""${MINION_CONTAINER_SUBNET_BASE}.$((i+1)).1""
  MINION_CONTAINER_NETMASKS[$i]=""255.255.255.0""
  VAGRANT_MINION_NAMES[$i]=""minion-$((i+1))""
done

PORTAL_NET=10.247.0.0/16

# Since this isn't exposed on the network, default to a simple user/passwd
MASTER_USER=vagrant
MASTER_PASSWD=vagrant

# Admission Controllers to invoke prior to persisting objects in cluster
ADMISSION_CONTROL=NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ResourceQuota

# Optional: Install node monitoring.
ENABLE_NODE_MONITORING=true

# Optional: Enable node logging.
ENABLE_NODE_LOGGING=false
LOGGING_DESTINATION=elasticsearch

# Optional: When set to true, Elasticsearch and Kibana will be setup as part of the cluster bring up.
ENABLE_CLUSTER_LOGGING=false
ELASTICSEARCH_LOGGING_REPLICAS=1

# Optional: When set to true, heapster, Influxdb and Grafana will be setup as part of the cluster bring up.
ENABLE_CLUSTER_MONITORING=""${KUBE_ENABLE_CLUSTER_MONITORING:-true}""

# Extra options to set on the Docker command line.  This is useful for setting
# --insecure-registry for local registries.
DOCKER_OPTS=""""

# Optional: Install cluster DNS.
ENABLE_CLUSTER_DNS=true
DNS_SERVER_IP=""10.247.0.10""
DNS_DOMAIN=""kubernetes.local""
DNS_REPLICAS=1

# Optional: Enable setting flags for kube-apiserver to turn on behavior in active-dev
#RUNTIME_CONFIG=""""
RUNTIME_CONFIG=""api/v1beta3""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mYOvZp
code,"#!/bin/bash


declare -a IMAGES=( 'ansible/ubuntu14.04-ansible:stable' 'ansible/centos7-ansible:stable'  \
         ""williamyeh/ansible:debian8-onbuild""        \
         ""williamyeh/ansible:debian7-onbuild""        \
         ""williamyeh/ansible:ubuntu14.04-onbuild""    \
         ""williamyeh/ansible:ubuntu12.04-onbuild""    \
         ""williamyeh/ansible:centos7-onbuild""        \
         ""williamyeh/ansible:centos6-onbuild""
       )

for image in ""${IMAGES[@]}"" ; do

    echo $image
    docker pull $image

done


docker images | sort",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",f-1H8F
code,"#!/bin/sh

# Copyright 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script generates a two roots - one legacy one signed with MD5, and
# another (newer) one signed with SHA1 - and has a leaf certificate signed
# by these without any distinguishers.
#
# The ""cross-signed"" comes from the fact that both the MD5 and SHA1 roots share
# the same Authority Key ID, Subject Key ID, Subject, and Subject Public Key
# Info. When the chain building algorithm is evaluating paths, if it prefers
# untrusted over trusted, then it will see the MD5 certificate as a self-signed
# cert that is ""cross-signed"" by the trusted SHA1 root.
#
# The SHA1 root should be (temporarily) trusted, and the resulting chain
# should be leaf -> SHA1root, not leaf -> MD5root, leaf -> SHA1root -> MD5root,
# or leaf -> MD5root -> SHA1root

try() {
  echo ""$@""
  $@ || exit 1
}

try rm -rf out
try mkdir out

try echo 1 > out/2048-sha1-root-serial
try echo 2 > out/2048-md5-root-serial
touch out/2048-sha1-root-index.txt
touch out/2048-md5-root-index.txt

# Generate the key
try openssl genrsa -out out/2048-sha1-root.key 2048

# Generate the root certificate
CA_COMMON_NAME=""Test Dup-Hash Root CA"" \
  try openssl req \
    -new \
    -key out/2048-sha1-root.key \
    -out out/2048-sha1-root.req \
    -config ca.cnf

CA_COMMON_NAME=""Test Dup-Hash Root CA"" \
  try openssl x509 \
    -req -days 3650 \
    -sha1 \
    -in out/2048-sha1-root.req \
    -out out/2048-sha1-root.pem \
    -text \
    -signkey out/2048-sha1-root.key \
    -extfile ca.cnf \
    -extensions ca_cert

CA_COMMON_NAME=""Test Dup-Hash Root CA"" \
  try openssl x509 \
    -req -days 3650 \
    -md5 \
    -in out/2048-sha1-root.req \
    -out out/2048-md5-root.pem \
    -text \
    -signkey out/2048-sha1-root.key \
    -extfile ca.cnf \
    -extensions ca_cert

# Generate the leaf certificate request
try openssl req \
  -new \
  -keyout out/ok_cert.key \
  -out out/ok_cert.req \
  -config ee.cnf

# Generate the leaf certificates
CA_COMMON_NAME=""Test Dup-Hash Root CA"" \
  try openssl ca \
    -batch \
    -extensions user_cert \
    -days 3650 \
    -in out/ok_cert.req \
    -out out/ok_cert.pem \
    -config ca.cnf

try openssl x509 -text \
  -in out/2048-md5-root.pem \
  -out ../certificates/cross-signed-root-md5.pem
try openssl x509 -text \
  -in out/2048-sha1-root.pem \
  -out ../certificates/cross-signed-root-sha1.pem
try openssl x509 -text \
  -in out/ok_cert.pem \
  -out ../certificates/cross-signed-leaf.pem
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GiKpex
code,"#!/usr/bin/env bash
lwjreOSX/bin/java -jar libs/solDesktop.jar
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ykwDB6
code,"#!/bin/bash -ex
# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Buildbot annotator script for the main waterfall.  Tester only.

BB_DIR=""$(dirname $0)""
BB_SRC_ROOT=""$(cd  ""$BB_DIR/../../..""; pwd)""
. ""$BB_DIR/buildbot_functions.sh""

# SHERIFF: if you need to quickly turn the main waterfall android bots
# green (preventing tree closures), uncomment the next line (and send
# appropriate email out):
## bb_force_bot_green_and_exit

bb_baseline_setup ""$BB_SRC_ROOT"" ""$@""
bb_spawn_logcat_monitor_and_status
bb_extract_build
bb_reboot_phones
bb_run_unit_tests
bb_run_instrumentation_tests
bb_print_logcat
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",GG7dxD
code,"#!/usr/bin/env bash
free | awk '{
   if ($1 ~ ""^Mem:""){
     printf(""mem.total=%d\nmem.used=%d\n"",$2,$3)
   }
   if ($1 ~ ""^Swap:""){
     printf(""swap.total=%d\nswap.used=%d\n"",$2,$3)
   }
}'
uptime | awk '{ for(i=1;i<=NF;i++){ if($i==""average:""){tmp = $(i+1); v = substr(tmp, 0, length(tmp)-1); printf(""load.average=%s\n"", v)} } }'",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",fEU0P_
code,"#!/bin/bash

ssh -f root@162.243.123.65 -L 8080:localhost:8080 -N
ssh -f root@162.243.123.65 -L 28015:localhost:28015 -N
ssh -f root@162.243.123.65 -L 27017:localhost:27017 -N
ssh -f root@162.243.123.65 -L 3306:localhost:3306 -N
ssh -f root@162.243.123.65 -L 9200:localhost:9200 -N
ssh -f root@162.243.123.65 -L 9300:localhost:9300 -N",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VkhCe6
code,"#!/bin/sh
while [ ""1"" == ""1"" ]
do
	uptime
	sleep 1
done",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lILXOY
code,"	#!/bin/sh

	. ./include.sh

	${examples_dir}precision > /dev/null
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uvIsHU
code,"# OpenStack ocata installation script on Ubuntu 16.04.2 
# by kasidit chanchio
# vasabilab, dept of computer science, 
# Thammasat University, Thailand
#
# Copyright 2017  Kasidit Chanchio
#
# Run this with sudo or as root

#!/bin/bash -x
cd $HOME/OPSInstaller/controller
pwd
echo ""check chrony""
chronyc sources
sleep 1
#
#apt-get -y install debconf-utils

#debconf-set-selections <<< 'mariadb-server-5.5 mysql-server/root_password password mysqlpassword' 
#debconf-set-selections <<< 'mariadb-server-5.5 mysql-server/root_password_again password mysqlpassword' 
apt-get -y install mariadb-server
apt-get -y install python-pymysql
#
printf ""* set openstack.cnf configuration... press any key\n"" 
sleep 2
#read varkey
#cp files/openstack.cnf /etc/mysql/conf.d/openstack.cnf
cp files/99-openstack.cnf /etc/mysql/mariadb.conf.d/99-openstack.cnf

#printf ""* restart mysql & delete anonymous acct... press\n""
#read varkey

service mysql restart

printf ""\n *** First, enter blank for mysql password. Then set new password to\n        mysqlpassword \n*** \n"" 
sleep 2
mysql_secure_installation

#mysql -u root -pmysqlpassword -e ""UPDATE mysql.user SET Password=PASSWORD('mysqlpassword') WHERE User='root';""
#mysql -u root -pmysqlpassword -e ""DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');""
#mysql -u root -pmysqlpassword -e ""DELETE FROM mysql.user WHERE User='';""
#mysql -u root -pmysqlpassword -e ""DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';""
#mysql -u root -pmysqlpassword -e ""FLUSH PRIVILEGES;""
#
#exit 0
#printf ""* install nosql... press any key\n""
#read varkey

#apt-get -y install mongodb-server mongodb-clients python-pymongo
#cp files/mongodb.conf /etc/mongodb.conf

#service mongodb stop
#rm /var/lib/mongodb/journal/prealloc.*
#service mongodb start

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Jcbe7g
code,"#!/bin/bash

source $(which virtualenvwrapper.sh)
workon tesis
python -m unittest tests.recommender_test
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",IA1ezI
code,"#!/bin/bash

DD=../../PhoneGap/ios/KNappen/assets/world/KNappen
rm -rf ""$DD""
mkdir -p ""$DD""
cp -va ./KNappen.MobileSPA/* ""$DD""

pushd ""$DD""
rm -rf Brukerdokumentasjon *.ts bin obj Properties UnitTests index.html Test.html index.html *.csproj *.user config.xml Web*.config packages.config
popd
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xo1ugA
code,"#!/bin/bash

##
# Copyright (c) 2008-2012 Marius Zwicker
# All rights reserved.
# 
# @LICENSE_HEADER_START:Apache@
# 
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# http://www.mlba-team.de
# 
# @LICENSE_HEADER_END:Apache@
##

#######################################################################
#
#  Configure Codeblocks/QtCreator project files
#  (c) 2012 Marius Zwicker
#
#  Pass 'Release' as argument to build without debug flags
#
#######################################################################

BUILD_DIR=""QtCreator_ProjectFiles""
RELEASE_DIR=""Release_$BUILD_DIR""
GENERATOR=""CodeBlocks - Unix Makefiles""
TARGET=""Qt Creator""

DIR=""$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" && pwd )""
source $DIR/util.sh $@",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Vxaqe8
code,"ext3_mount () {
	modprobe -q ext3

	mkdir -p $2
	mount -t ext3 -onoatime,data=journal,errors=continue $1 $2
}

for arg in $CMDLINE; do
    optarg=`expr ""x$arg"" : 'x[^=]*=\(.*\)'`
    echo $arg xxx $optarg 
    case $arg in
        ext3=*)
        dev=`expr ""$optarg"" : '\([^:]*\).*'`
        path=`expr ""$optarg"" : '[^:]*:\([^:]*\).*'`
        ext3_mount $dev $path ;;
    esac
done
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Npm_Jb
code,"#!/bin/bash
#python pyinstaller-pyinstaller-67b940c/pyinstaller.py ../pyNastran/pyNastran/gui/gui.py
rm -rf build dist
python pyinstaller-pyinstaller-67b940c/pyinstaller.py pyNastranGUI.spec
#dist/pywin27/gui.exe
#dist/gui/gui.exe

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yV3Bjo
code,"#!/bin/bash
cd ~/Sites/sgdialer/docs
sphinx-apidoc --full -H ""sgdialer"" -A ""Michael Andrew"" -V ""1.0"" -R ""RC1"" -o . ../src
make clean
make html",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",V1gBu5
code,"#!/bin/bash

# About
# -----
#
# This script contains some bash wrappers for swift, the command-line
# interface to Rackspace's OpenStack Storage API.
#
# To get started, you'll need to install the python-swiftclient
#
#     pip install python-swiftclient
#
# It's also available on github:
# https://github.com/openstack/python-swiftclient
#
# Usage
# -----
#
# Set the following environment variables (note: I just these in ~/.rackspace
# and source that file whenever I need it).
#
#   RACKSPACE_API_KEY  -- your API key
#   RACKSPACE_USERNAME -- your Rackspace username
#   RACKSPACE_CLOUDFILES_CONTAINER  -- the default container you want to access
#   RACKSPACE_AUTH_URL -- (optional) defaults to
#       https://auth.api.rackspacecloud.com/v1.0
#
# Source this file (swift_wrapper.sh), and run `swifthelp` for a list of
# available commands.
#
# License
# -------
#
# The MIT License (MIT)
#
# Copyright (c) 2013 Brad Montgomery
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the ""Software""), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


if [ -z ""$RACKSPACE_AUTH_URL"" ]
then
    export RACKSPACE_AUTH_URL=https://auth.api.rackspacecloud.com/v1.0
fi
if [ -z ""$RACKSPACE_USERNAME"" ]
then
    echo ""* You Need to set a RACKSPACE_USERNAME environment variable""
fi
if [ -z ""$RACKSPACE_API_KEY"" ]
then
    echo ""* You Need to set a RACKSPACE_API_KEY environment variable""
fi
if [ -z ""$RACKSPACE_CLOUDFILES_CONTAINER"" ]
then
    echo ""* You Need to set a RACKSPACE_CLOUDFILES_CONTAINER environment variable""
fi

# Prefix for all swift commands
SWIFT=""swift -A $RACKSPACE_AUTH_URL -U $RACKSPACE_USERNAME -K $RACKSPACE_API_KEY""

# just print out the swift command in case we need to tack on more options.
function swiftcommand
{
    echo
    echo ""$SWIFT""
    echo
}


# Change your container
function swiftcontainer
{
    if [ -z ""$1"" ]
    then
        echo
        echo ""Your current container is: $RACKSPACE_CLOUDFILES_CONTAINER""
        echo
        echo ""USAGE: swiftcontainer <container-name>""
        echo
    else
        export RACKSPACE_CLOUDFILES_CONTAINER=$1
        echo ""Changed container to: $RACKSPACE_CLOUDFILES_CONTAINER""
    fi

}

# Delete a container
function swiftdeletecontainer
{
    if [ -z ""$1"" ]
    then
        echo ""Usage: swiftdeletecontainer <container_name>""
    else
        $SWIFT delete $1
    fi
}

function swiftlistcontainers
{
    $SWIFT list
}

function swiftlist
{
    if [ -z ""$1"" ]
    then
        # List all items in the container
        $SWIFT list $RACKSPACE_CLOUDFILES_CONTAINER
    else
        # Filter by a prefix
        $SWIFT list --prefix $1 $RACKSPACE_CLOUDFILES_CONTAINER
    fi
}

function swiftupload
{
    if [ -z ""$@"" ]
    then
        echo ""Usage: swiftupload <file_or_directory> [...]""
    else
        $SWIFT upload --changed $RACKSPACE_CLOUDFILES_CONTAINER $@
    fi
}

# Delete an object(s) from a container
function swiftdelete
{
    if [ -z ""$@"" ]
    then
        echo ""Usage: swiftdelete <object> [...]""
    else
        $SWIFT delete $RACKSPACE_CLOUDFILES_CONTAINER $@
    fi
}

function swiftdownload
{
    if [ -z ""$@"" ]
    then
        echo ""Usage: swiftdownload <object> [...]""
        echo ""       swiftdownload \*  -- to get all files in the container.""
    elif [ ""$@"" == '*' ]; then
        $SWIFT download $RACKSPACE_CLOUDFILES_CONTAINER
    else
        $SWIFT download $RACKSPACE_CLOUDFILES_CONTAINER $@
    fi
}

function swiftstat
{
    if [ -z ""$1"" ]
    then
        $SWIFT stat
    else
        $SWIFT stat $RACKSPACE_CLOUDFILES_CONTAINER $1
    fi
}

function swifthelp
{
    verbose=false
    while getopts "":v"" opt; do
    case $opt in
        v)
            verbose=true
            ;;
    esac
    done
    echo
    echo ""* swiftcontainer - view or set your current container""
    echo ""* swiftdeletecontainer - Delete a container and all of its contents""
    echo ""* swiftlistcontainers - lists the containers in CloudFiles""
    echo ""* swiftlist - lists the items in your default container""
    if $verbose ; then
        echo ""
    Usage:

        swiftlist -- lists all items
        swiftlist <prefix> -- filters by the given prefix
    ""
    fi

    echo ""* swiftupload -",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1cNA4u
code,"#!/bin/sh
# CYBERWATCH SAS - 2016
#
# Security fix for RHSA-2015:1686
#
# Security announcement date: 2015-08-25 06:10:14 UTC
# Script generation date:     2016-05-12 18:13:16 UTC
#
# Operating System: Red Hat 7
# Architecture: x86_64
#
# Vulnerable packages fix on version:
#   - python-django.noarch:1.6.11-2.el7ost
#   - python-django-bash-completion.noarch:1.6.11-2.el7ost
#   - python-django-doc.noarch:1.6.11-2.el7ost
#
# Last versions recommanded by security team:
#   - python-django.noarch:1.8.4-1.el7
#   - python-django-bash-completion.noarch:1.8.4-1.el7
#   - python-django-doc.noarch:1.8.4-1.el7
#
# CVE List:
#   - CVE-2015-5143
#
# More details:
#   - https://www.cyberwatch.fr/vulnerabilites
#
# Licence: Released under The MIT License (MIT), See LICENSE FILE
sudo yum install python-django.noarch-1.8.4 -y 
sudo yum install python-django-bash-completion.noarch-1.8.4 -y 
sudo yum install python-django-doc.noarch-1.8.4 -y 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",NaPpPJ
code,"#!/bin/bash

killall -q JSBSim
pkill -f runsim.py

set -e
set -x

autotest=$(dirname $(readlink -e $0))
cmd=""../Tools/autotest/jsbsim/runsim.py --home=-35.362938,149.165085,584,270""
$autotest/run_in_terminal_window.sh ""simulator"" $cmd || exit 1

sleep 2

mavproxy.py --out 127.0.0.1:14550 --load-module=HIL $*

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",yHKp4F
code,"#!/bin/sh

DIR_PROTECT=""arch/arm/cpu/armv7/sc8810 arch/arm/cpu/arm926ejs/sc8800g arch/arm/cpu/arm926ejs/sc8800x property nand_fdl nand_spl""
PRODUCTS=""sc8810_openphone sp8810 sp8805ga sp6810a openphone native_openphone 788""

argu=$1
if [ -z $argu ]; then
argu=""clean""
elif [ $argu != ""clean"" ] && [ $argu != ""restore"" ]; then
echo "" you should type as $0 clean or restore""
exit 0
fi

if [ $argu = ""clean"" ]; then
    for dir in $DIR_PROTECT; do
    find $dir -name *.c -o -name *.S | xargs rm -f
    done

    echo ""CONFIG_IDH_BUILD = 1"" > ./include/idh_config.mk
fi 

if [ $argu = ""restore"" ]; then
    for dir in $DIR_PROTECT; do
    git checkout -- $dir
    done
    rm ./include/idh_config.mk 2>/dev/null
fi

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pFG8q2
code,"echo ""Starting Lightnet Server""

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kxdbEa
code,"#!/bin/bash

mkdir -p ~/timelinelogs
cd /timeline/git

echo ""create virtual environment""
virtualenv -p /usr/bin/python3.5 ~/venv

echo ""activate virtual environment""
source ~/venv/bin/activate

echo ""install requirements using pip""
pip install -r requirements.txt

echo ""start timeline example""
python3.5 example.py > ~/timelinelogs/timeline_""$(date +""%Y%m%d_%H%M%S"")"" 2>&1 &
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",n524x-
code,"#!/bin/bash
set -e

bold() {
    printf ""\033[1m%s\033[0m\n"" ""$*""
}

dim() {
    printf ""\033[2m%s\033[0m\n"" ""$*""
}

delete_gcda_files() {
  bold ""Deleting .gcda files . . ."";
  printf ""\033[2m"";
  find . -name '*.gcda' -delete -print | sed -e 's:./::'
  printf ""\033[0m"";
}

if [ -x ""$(command -v ccache)"" ]; then  
  bold ""using ccache. . .""
  MYCXX=""ccache g++""
  MYCXXFLAGS=""-fdiagnostics-color""
else
  bold ""not using ccache (not available). . .""
  MYCXX=""$CXX""
  MYCXXFLAGS=""$CXXFLAGS""
fi

if [[ $# -gt 2 || $# -le 0 ]]; then
  bold ""error expected 1 or 2 arguments, got $#!""
  exit 1
elif [[ -f $1 && ! -x $1 ]]; then
  bold ""error expected an executable file, $1 is not one!""
  exit 1
fi

if ! [[ -x configure ]]; then
  bold ""No configure file found, running ./autogen.sh . . ."";
  printf ""\033[2m"";
  ./autogen.sh;
  printf ""\033[0m"";
fi
if [[ ! -f config.log ]]; then
  bold ""No config.log file found, running $CONFIGURE. . .""
  printf ""\033[2m"";
  ./configure CXX=""$MYCXX"" CXXFLAGS=""$MYCXXFLAGS"" --enable-code-coverage
  ./autogen.sh
  printf ""\033[0m""
elif [[ ! -f Makefile ]]; then
  bold ""No Makefile found, running $CONFIGURE. . .""
  printf ""\033[2m""
  ./configure CXX=""$MYCXX"" CXXFLAGS=""$MYCXXFLAGS"" --enable-code-coverage
  printf ""\033[0m""
elif ! grep -q ""\.\/configure.*\-\-enable-code\-coverage"" config.log; then
  bold ""Didn't find --enable-code-coverage flag in config.log, running make clean && ./configure --enable-code-coverage. . .""
  printf ""\033[2m""
  make clean
  ./configure CXX=""$MYCXX"" CXXFLAGS=""$MYCXXFLAGS"" --enable-code-coverage
  printf ""\033[0m""
fi

bold ""Running make -j8 . . ."";
printf ""\033[2m"";
make $1 -j8
printf ""\033[0m"";

delete_gcda_files

if [[ $# -eq 1 ]]; then
  bold ""Running ./$1 \""[quick]\"" . . ."";
  if ! ./$1 ""[quick]""; then
    delete_gcda_files
    exit 1
  fi
else
  bold ""Running ./$1 $2 . . ."";
  if ! ./$1 ""$2""; then
    delete_gcda_files
    exit 1
  fi
fi

bold ""Running lcov and genhtml . . ."";
printf ""\033[2m"";
lcov  --directory . --capture --output-file ""coverage.info.tmp"" --test-name ""libsemigroups_1_0_0"" --no-checksum --no-external --compat-libtool --gcov-tool ""gcov"" | grep -v ""ignoring data for external file""
lcov  --directory . --remove ""coverage.info.tmp"" ""/tmp/*"" ""/Applications/*"" --output-file ""coverage.info""
LANG=C genhtml  --prefix . --output-directory ""coverage"" --title ""libsemigroups Code Coverage"" --legend --show-details ""coverage.info""
rm -f coverage.info.tmp
printf ""\033[0m"";

delete_gcda_files

fnam=$1
fnam=${fnam/test_/}
fnam=${fnam//_/-}
dir=$(pwd)
hpp=coverage${dir}/include/libsemigroups/${fnam}.hpp.gcov.html
cpp=coverage${dir}/src/${fnam}.cpp.gcov.html
if [[ -f $hpp ]]; then
  echo ""See: $hpp""
fi;
if [[ -f $cpp ]]; then
  echo ""See: $cpp""
fi;

exit 0
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FBkrh3
code,"#!/bin/sh

# Copyright 2015, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


set -e

if [ -f cache.mk ] ; then
  echo ""Please don't commit cache.mk""
  exit 1
fi

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zmn7Cy
code,"#!/usr/bin/env bash

function ansible_mac() {
  local ANISBLE_VIRTUALENV_SCRIPT_URI=""https://raw.githubusercontent.com/shrikeh/ansible-virtualenv/${ANSIBLE_INSTALLER_BRANCH:-develop}/init.sh"";
  local ANSIBLE_VIRTUALENV_SCRIPT_TMP_DIR=""$(mktemp -d -t 'ansible_virtualenv')"";
  curl -o ""${ANSIBLE_VIRTUALENV_SCRIPT_TMP_DIR}/init.sh"" -L ""${ANISBLE_VIRTUALENV_SCRIPT_URI}"";
  source ""${ANSIBLE_VIRTUALENV_SCRIPT_TMP_DIR}/init.sh"" ${@};
}

ansible_mac ${@};
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",O0QQQS
code,"#!/bin/bash

# This shell scripts generates the top-level Markdown structure of the
# Snabb lwAFTR manual.
#
# The authors list is automatically generated from Git history,
# ordered from most to least commits.

# Script based on src/doc/genbook.sh

lwaftr_app=../../../apps/lwaftr/

cat <<EOF
% Snabb lwAFTR Manual
% $(git log --pretty=""%an"" $lwaftr_app | \
        grep -v -e '^root$' | \
        sort | uniq -c | sort -nr | sed 's/^[0-9 ]*//' | \
        awk 'BEGIN     { first=1; }
             (NF >= 2) { if (first) { first=0 } else { printf(""; "") };
                         printf(""%s"", $0) }
             END { print("""") }')
% Version $(git log -n1 --format=""format:%h, %ad%n"")

$(cat README.welcome.md)

$(cat README.build.md)

$(cat README.running.md)

$(cat README.testing.md)

$(cat README.troubleshooting.md)

$(cat README.bindingtable.md)

$(cat README.configuration.md)

$(cat README.rfccompliance.md)

$(cat README.benchmarking.md)

$(cat README.performance.md)

$(cat README.virtualization.md)

EOF
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",KnYCkC
code,"
#
# Load config.
#

source ./config.defaults.sh
if [ -f ""./config.sh"" ]; then
  source ./config.sh
else
  echo ""You have no config.sh. Copy config.defaults.sh to config.sh, change the passwords and try again."" && exit 1;
fi

[ ""$(docker ps | grep phpmyadmin)"" ] && docker stop phpmyadmin
[ ""$(docker ps -a | grep phpmyadmin)"" ] && docker rm phpmyadmin 

docker run --name phpmyadmin -d --link $T_MYSQL_CONTAINER_NAME:db -p 8080:80 phpmyadmin

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",O8CJIK
code,forever -w . node jingo -c ~/work/wikis/config.yaml ,codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QCXfeW
code,"error() {
  echo "" !     $*"" >&2
  exit 1
}

status() {
  echo ""-----> $*""
}

protip() {
  echo
  echo ""PRO TIP: $*"" | indent
  echo ""See https://devcenter.heroku.com/articles/nodejs-support"" | indent
  echo
}

# sed -l basically makes sed replace and buffer through stdin to stdout
# so you get updates while the command runs and dont wait for the end
# e.g. npm install | indent
indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l ""$c"";; # mac/bsd sed: -l buffers on line boundaries
    *)      sed -u ""$c"";; # unix/gnu sed: -u unbuffered (arbitrary) chunks of data
  esac
}

cat_npm_debug_log() {
  test -f $build_dir/npm-debug.log && cat $build_dir/npm-debug.log
}

unique_array() {
  echo ""$*"" | tr ' ' '\n' | sort -u | tr '\n' ' '
}

init_log_plex() {
  for log_file in $*; do
    echo ""mkdir -p `dirname ${log_file}`""
  done
  for log_file in $*; do
    echo ""touch ${log_file}""
  done
}

tail_log_plex() {
  for log_file in $*; do
    echo ""tail -n 0 -qF --pid=\$\$ ${log_file} &""
  done
}

# Show script name and line number when errors occur to make buildpack errors easier to debug
trap 'error ""Script error in $0 on or near line ${LINENO}""' ERR
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_hVfl3
code,"# OpenStack ocata installation script on Ubuntu 16.04.2 
# by kasidit chanchio
# vasabilab, dept of computer science, 
# Thammasat University, Thailand
#
# Copyright 2017  Kasidit Chanchio
#
# run with sudo or as root.
#
#!/bin/bash -x
cd $HOME/OPSInstaller/controller
pwd
#
apt-get -y install keystone
#
cp files/keystone.conf /etc/keystone/keystone.conf
echo ""su -s /bin/sh -c \""keystone-manage db_sync\"" keystone""
su -s /bin/sh -c ""keystone-manage db_sync"" keystone
#
#echo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

keystone-manage bootstrap --bootstrap-password adminpassword \
--bootstrap-admin-url http://controller:35357/v3/ \
--bootstrap-internal-url http://controller:5000/v3/ \
--bootstrap-public-url http://controller:5000/v3/ \
--bootstrap-region-id RegionOne
#
cp files/apache2.conf /etc/apache2/apache2.conf
#
service apache2 restart
rm -f /var/lib/keystone/keystone.db
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_PHQ33
code,"#!/bin/sh
#
# Copyright (c) 2005 Amos Waterland
#

test_description='git branch assorted tests'

. ./test-lib.sh

test_expect_success 'prepare a trivial repository' '
	echo Hello >A &&
	git update-index --add A &&
	git commit -m ""Initial commit."" &&
	echo World >>A &&
	git update-index --add A &&
	git commit -m ""Second commit."" &&
	HEAD=$(git rev-parse --verify HEAD)
'

test_expect_success 'git branch --help should not have created a bogus branch' '
	test_might_fail git branch --man --help </dev/null >/dev/null 2>&1 &&
	test_path_is_missing .git/refs/heads/--help
'

test_expect_success 'branch -h in broken repository' '
	mkdir broken &&
	(
		cd broken &&
		git init &&
		>.git/refs/heads/master &&
		test_expect_code 129 git branch -h >usage 2>&1
	) &&
	test_i18ngrep ""[Uu]sage"" broken/usage
'

test_expect_success 'git branch abc should create a branch' '
	git branch abc && test_path_is_file .git/refs/heads/abc
'

test_expect_success 'git branch a/b/c should create a branch' '
	git branch a/b/c && test_path_is_file .git/refs/heads/a/b/c
'

test_expect_success 'git branch HEAD should fail' '
	test_must_fail git branch HEAD
'

cat >expect <<EOF
$_z40 $HEAD $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL> 1117150200 +0000	branch: Created from master
EOF
test_expect_success 'git branch -l d/e/f should create a branch and a log' '
	GIT_COMMITTER_DATE=""2005-05-26 23:30"" \
	git branch -l d/e/f &&
	test_path_is_file .git/refs/heads/d/e/f &&
	test_path_is_file .git/logs/refs/heads/d/e/f &&
	test_cmp expect .git/logs/refs/heads/d/e/f
'

test_expect_success 'git branch -d d/e/f should delete a branch and a log' '
	git branch -d d/e/f &&
	test_path_is_missing .git/refs/heads/d/e/f &&
	test_path_is_missing .git/logs/refs/heads/d/e/f
'

test_expect_success 'git branch j/k should work after branch j has been deleted' '
	git branch j &&
	git branch -d j &&
	git branch j/k
'

test_expect_success 'git branch l should work after branch l/m has been deleted' '
	git branch l/m &&
	git branch -d l/m &&
	git branch l
'

test_expect_success 'git branch -m dumps usage' '
	test_expect_code 128 git branch -m 2>err &&
	test_i18ngrep ""branch name required"" err
'

test_expect_success 'git branch -m m m/m should work' '
	git branch -l m &&
	git branch -m m m/m &&
	test_path_is_file .git/logs/refs/heads/m/m
'

test_expect_success 'git branch -m n/n n should work' '
	git branch -l n/n &&
	git branch -m n/n n &&
	test_path_is_file .git/logs/refs/heads/n
'

test_expect_success 'git branch -m o/o o should fail when o/p exists' '
	git branch o/o &&
	git branch o/p &&
	test_must_fail git branch -m o/o o
'

test_expect_success 'git branch -m q r/q should fail when r exists' '
	git branch q &&
	git branch r &&
	test_must_fail git branch -m q r/q
'

test_expect_success 'git branch -M foo bar should fail when bar is checked out' '
	git branch bar &&
	git checkout -b foo &&
	test_must_fail git branch -M bar foo
'

test_expect_success 'git branch -M baz bam should succeed when baz is checked out' '
	git checkout -b baz &&
	git branch bam &&
	git branch -M baz bam
'

test_expect_success 'git branch -M master should work when master is checked out' '
	git checkout master &&
	git branch -M master
'

test_expect_success 'git branch -M master master should work when master is checked out' '
	git checkout master &&
	git branch -M master master
'

test_expect_success 'git branch -M master2 master2 should work when master is checked out' '
	git checkout master &&
	git branch master2 &&
	git branch -M master2 master2
'

test_expect_success 'git branch -v -d t should work' '
	git branch t &&
	test_path_is_file .git/refs/heads/t &&
	git branch -v -d t &&
	test_path_is_missing .git/refs/heads/t
'

test_expect_success 'git branch -v -m t s should work' '
	git branch t &&
	test_path_is_file .git/refs/heads/t &&
	git branch -v -m t s &&
	test_path_is_missing .git/refs/heads/t &&
	test_path_is_file .git/refs/heads/s &&
	git branch -d s
'

test_expect_success 'git branch -m -d t s should fail' '
	git branch t &&
	test_path_is_file .git/refs/heads/t &&
	test_must_fail git branch -m -d t s &&
	git branch -d t &&
	test_path_is_missing .git/refs/heads/t
'

test_expect_success 'git branch --list -d t should fail' '
	git branch t &&
	test_path_is_file .git/refs/heads/t &&
	test_must_fail git branch --list -d t &&
	git branch -d t &&
	test_path_is_missing .git/refs/heads/t
'

test_expect_success 'git branch --column' '
	COLUMNS=81 git branch --column=column >actual &&
	cat >expected <<\EOF &&
  a/b/c     bam       foo       l       * master    n         o/p       r
  abc       bar       j/k       m/m       master2   o/o       q
EOF
	test_cmp expected actual
'

test_expect_success 'git branch --column with an extremely long branch name' '
	long=this/is/a/part/of/long/branch/name &&
	long=z$long/$long/$long/$long &&
	test_when_finished ""git branch -d $long"" &&
	git branch $long &&
	COLUMNS=80 git branch --column=column >actual &&
	cat >expected <<EOF &&
  a/b/c
  abc
  bam
  bar
  foo
  j/k
  l
  m/m
* master
  master2
  n
  o/o
  o/p
  q
  r
  $long
EOF
	test_cmp expected actual
'

test_expect_success",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xGU78C
code,"#!/usr/bin/env zsh
#
# Author: Denys Dovhan, denysdovhan.com
# https://github.com/spaceship-prompt/spaceship-prompt

# ------------------------------------------------------------------------------
# Colors
# Set color variables for colorful output
# ------------------------------------------------------------------------------

# If we have tput, let's set colors
if [[ ! -z $(which tput 2> /dev/null) ]]; then
  reset=$(tput sgr0)
  bold=$(tput bold)
  red=$(tput setaf 1)
  green=$(tput setaf 2)
  yellow=$(tput setaf 3)
  blue=$(tput setaf 4)
  magenta=$(tput setaf 5)
  cyan=$(tput setaf 6)
fi

# ------------------------------------------------------------------------------
# VARIABLES
# Paths to important resources
# ------------------------------------------------------------------------------

ZSHRC=""${ZDOTDIR:-$HOME}/.zshrc""
REPO='https://github.com/spaceship-prompt/spaceship-prompt.git'
SOURCE=""$PWD/spaceship.zsh""
USER_SOURCE=""${ZDOTDIR:-$HOME}/.spaceship-prompt""
DEST='/usr/local/share/zsh/site-functions'
USER_DEST=""${ZDOTDIR:-$HOME}/.zfunctions""

# ------------------------------------------------------------------------------
# HELPERS
# Useful functions for common tasks
# ------------------------------------------------------------------------------

# Paint text in specific color with reset
# USAGE:
#   paint <color> [text...]
paint() {
  local color=$1 rest=${@:2}
  echo ""$color$rest$reset""
}

# Aliases for common used colors
# Colon at the end is required: https://askubuntu.com/a/521942
# USAGE:
#   info|warn|error|success|code [...text]
info()    { paint ""$cyan""   ""SPACESHIP: $@"" ; }
warn()    { paint ""$yellow"" ""SPACESHIP: $@"" ; }
error()   { paint ""$red""    ""SPACESHIP: $@"" ; }
success() { paint ""$green""  ""SPACESHIP: $@"" ; }
code()    { paint ""$bold""   ""SPACESHIP: $@"" ; }

# Append text in .zshrc
# USAGE:
#   append_zshrc [text...]
append_zshrc() {
  info ""These lines will be added to your \""${ZDOTDIR:-$HOME}/.zshrc\"" file:""
  code ""$@""
  echo ""$@"" >> ""${ZDOTDIR:-$HOME}/.zshrc""
}

# ------------------------------------------------------------------------------
# MAIN
# Checkings and installing process
# ------------------------------------------------------------------------------

main() {
  # How we install Spaceship:
  #   1. Install via NPM
  #   2. Install via curl or wget
  if [[ ! -f ""$SOURCE"" ]]; then
    warn ""Spaceship is not present in current directory""
    # Clone repo into the ${ZDOTDIR:-$HOME}/.spaceship-prompt and change SOURCE
    git clone ""$REPO"" ""$USER_SOURCE""
    SOURCE=""$USER_SOURCE/spaceship.zsh""
  else
    info ""Spaceship is present in current directory""
  fi

  # If we can't symlink to the site-functions, then try to use .zfunctions instead
  if [[ ! -w ""$DEST"" ]]; then
    error ""Failed to symlink $SOURCE to $DEST.""

    # Use $USER_DEST instead
    DEST=""$USER_DEST""

    info ""Adding $DEST to fpath...""
    echo 'fpath=($fpath ""'""$DEST""'"")' >> ""$ZSHRC""

    info ""Trying to symlink $SOURCE to $DEST""
  fi

  # Link prompt entry point to fpath
  info ""Linking $SOURCE to $DEST/prompt_spaceship_setup...""
  mkdir -p ""$DEST""
  ln -sf ""$SOURCE"" ""$DEST/prompt_spaceship_setup""

  # If 'prompt spaceship' is already present in .zshrc, then skip
  if sed 's/#.*//' ""$ZSHRC"" | grep -q ""prompt spaceship""; then
    warn ""Spaceship is already present in .zshrc!""
    exit
  fi

  # Enabling statements for .zshrc
  msg=""\n# Set Spaceship ZSH as a prompt""
  msg+=""\nautoload -U promptinit; promptinit""
  msg+=""\nprompt spaceship""

  # Check if appending was successful and perform corresponding actions
  if append_zshrc ""$msg""; then
    success ""Done! Please, reload your terminal.""
    echo
  else
    error ""Cannot automatically insert prompt init commands.""
    error ""Please insert these line into your \""${ZDOTDIR:-$HOME}/.zshrc\"" file:""
    code ""$msg""
    exit 1
  fi
}

main ""$@""
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",u8k0K0
code,"# This shell snippet unsets all variables/functions that can be used in
# a package template and can also be used in subpkgs.

## VARIABLES
unset -v noarch conf_files mutable_files preserve triggers
unset -v depends run_depends replaces provides conflicts tags

# hooks/post-install/03-strip-and-debug-pkgs
unset -v nostrip nostrip_files

# hooks/pre-pkg/04-generate-runtime-deps
unset -v noverifyrdeps allow_unknown_shlibs shlib_requires

# hooks/pre-pkg/06-prepare-32bit
unset -v lib32depends lib32disabled lib32files lib32mode lib32symlinks

# hooks/pre-pkg/06-shlib-provides
unset -v noshlibprovides shlib_provides

# xbps-triggers: system-accounts
unset -v system_accounts system_groups

# xbps-triggers: font-dirs
unset -v font_dirs

# xbps-triggers: xml-catalog
unset -v xml_entries sgml_entries xml_catalogs sgml_catalogs

# xbps-triggers: pycompile
unset -v pycompile_version pycompile_dirs pycompile_module

# xbps-triggers: dkms
unset -v dkms_modules

# xbps-triggers: kernel-hooks
unset -v kernel_hooks_version

# xbps-triggers: mkdirs
unset -v make_dirs

# xbps-triggers: binfmts
unset -v binfmts
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_fVdXH
code,"transcript_list=$1
stemmer=$2

for transcript in $transcript_list; do 
	python audio_features/cscore.py $transcript $stemmer
done
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4-J1r0
code,"#!/usr/bin/env bash

echo ""
Please run download-db.sh to download the PlasmidFinder database to ${PLASMID_DB}.
If you have a database in custom path, please use ""plasmidfinder.py"" with the option ""-p"".
"" >> ${PREFIX}/.messages.txt
printf '%s\n' ""${URLS[@]}"" >> ""${PREFIX}/.messages.txt"" 2>&1
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1tgYu7
code,"#!/bin/sh

for i in state ireg iare iloc gccsa sa4 sa3 sa2 sa1 tr add ced sed nrmr ssc poa lga
do
  mkdir -p $i

  case $i in
    state)
      desc=""State\/Territory""
      ;;
    ireg)
      desc=""Indigenous Regions""
      ;;
    iare)
      desc=""Indigenous Areas""
      ;;
    iloc)
      desc=""Indigenous Locations""
      ;;
    gccsa)
      desc=""Greater Capital City Statistical Areas""
      ;;
    sa4)
      desc=""Statistical Area Level 4""
      ;;
    sa3)
      desc=""Statistical Area Level 3""
      ;;
    sa2)
      desc=""Statistical Area Level 2""
      ;;
    sa1)
      desc=""Statistical Area Level 1""
      ;;
    tr)
      desc=""Tourism Regions""
      ;;
    add)
      desc=""Australian Drainage Divisions""
      ;;
    ced)
      desc=""Commonwealth Electoral Divisions""
      ;;
    sed)
      desc=""State Electoral Divisions""
      ;;
    nrmr)
      desc=""Natural Resource Management Regions""
      ;;
    ssc)
      desc=""State Suburbs""
      ;;
    poa)
      desc=""Postal Areas""
      ;;
    lga)
      desc=""Local Government Areas""
      ;;
  esac

  cat template/template.mml | sed ""s/template/$i/g"" | sed ""s/structure_desc/$desc/"" > $i/$i.mml

  cat template/labels.mss > $i/labels.mss
done
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",QXQKQt
code,"#!/bin/bash

# Copy this script to $HOME and run it

path=/srv/www/todo
tmp=/srv/www/tmp

echo 'Cloning repo from github...'
git clone git@github.com:dreamerslab/express-todo-example.git $tmp
echo '...done!'
echo ''

echo 'Removing development files...'
sudo rm $tmp/README.md
sudo rm -fr $tmp/doc
echo '...done!'
echo ''

echo 'Installing dependency modules...'
cd $tmp
npm install
echo '...done!'
echo ''

echo 'Backing up old version...'
mv $path $path`date +""%Y%m%d%H%M%S""`
echo '...done!'
echo ''

echo 'Stopping iceberg server...'
sudo stop todo
echo '...done!'
echo ''

echo 'Switch to latest version...'
mv $tmp $path
echo '...done!'
echo ''

echo 'Starting iceberg server...'
sudo start todo
echo '...done!'
echo ''",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",E7Chs5
code,"#!/bin/bash

# Butterfly root
BUTTERFLY_ROOT=$(cd ""$(dirname $0)/.."" && pwd)

sources=""$BUTTERFLY_ROOT/api/client/client.cc \
$BUTTERFLY_ROOT/api/client/client.h \
$BUTTERFLY_ROOT/api/client/nic.cc \
$BUTTERFLY_ROOT/api/client/request.cc \
$BUTTERFLY_ROOT/api/client/sg.cc \
$BUTTERFLY_ROOT/api/client/shutdown.cc \
$BUTTERFLY_ROOT/api/client/status.cc \
$BUTTERFLY_ROOT/api/client/dump.cc \
$BUTTERFLY_ROOT/api/server/app.cc \
$BUTTERFLY_ROOT/api/server/app.h \
$BUTTERFLY_ROOT/api/server/server.cc \
$BUTTERFLY_ROOT/api/server/server.h \
$BUTTERFLY_ROOT/api/server/model.cc \
$BUTTERFLY_ROOT/api/server/model.h \
$BUTTERFLY_ROOT/api/server/api.cc \
$BUTTERFLY_ROOT/api/server/api.h \
$BUTTERFLY_ROOT/api/server/api_0.cc \
$BUTTERFLY_ROOT/api/server/graph.cc \
$BUTTERFLY_ROOT/api/server/graph.h \
$BUTTERFLY_ROOT/api/common/crypto.cc \
$BUTTERFLY_ROOT/api/common/crypto.h""

$BUTTERFLY_ROOT/scripts/cpplint.py --filter=-build/c++11 --root=$BUTTERFLY_ROOT $sources
if [ $? != 0 ]; then
    echo ""${RED}API style test failed${NORMAL}""
    exit 1
fi

cppcheck &> /dev/null
if [ $? != 0 ]; then
    echo ""cppcheck is not installed, some tests will be skipped""
else
    cppcheck --check-config --error-exitcode=1 --enable=all -I $BUTTERFLY_ROOT $sources &> /tmp/cppcheck.log
    if [ $? != 0 ]; then
        cat /tmp/cppcheck.log
        echo ""${RED}API style test failed${NORMAL}""
        rm /tmp/cppcheck.log
        exit 1
    fi
fi
rm /tmp/cppcheck.log

rm /tmp/has_tabs &> /dev/null || true
for f in api benchmarks doc scripts tests; do
    find $BUTTERFLY_ROOT/$f -name *.sh | while read a; do
        if [ ""-$(cat $a | grep -P '\t')"" != ""-"" ]; then
            echo found tab in $a
            touch /tmp/has_tabs
        fi
    done
done
if test -f /tmp/has_tabs; then
    rm /tmp/has_tabs &> /dev/null || true
    echo ""-- tabs found in scripts""
    exit 1
else
    echo ""-- no tab found in scripts""
fi

exit 0
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Vj1Gpn
code,"IMAGES=""test-r test-python""
IMAGE_VERSION=""0.1""
DOCKER_REGISTRY=""localhost:5000""

for IMAGE in ${IMAGES} ; do
    docker build --tag ${DOCKER_REGISTRY}/dpa/${IMAGE}:${IMAGE_VERSION} tasks/${IMAGE}
    docker push ${DOCKER_REGISTRY}/dpa/${IMAGE}:${IMAGE_VERSION}
done
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qrb6a8
code,"#!/bin/bash



cd ./log_reg/src/
python main.py

cd ../..
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5QXDyU
code,"#!/usr/bin/env bash

source set-glibc-version.sh

docker cp glibc-builder:/glibc-bin-$GLIBC_VERSION.tar.gz ./
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DyKeKC
code,"# shellcheck disable=SC2148

# Defines transfer alias and provides easy command line file and folder sharing.
#
# source: https://gist.github.com/nl5887/a511f172d3fb3cd0e42d
#
# Authors:
#   Remco Verhoef <remco@dutchcoders.io>
#

transfer() {
	# check if curl is installed
	if ! curl --version >/dev/null 2>&1; then
		echo ""Could not find curl.""
		return 1
	fi

	# check arguments
	if [ $# -eq 0 ]; then
		printf ""No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md""
		return 1
	fi

	# get temporarily filename, output is written to this file show progress can be showed
	tmpfile=$(mktemp -t transferXXX)

	# upload stdin or file
	file=$1

	if tty -s; then
		basefile=$(basename ""$file"" | sed -e 's/[^a-zA-Z0-9._-]/-/g')

		if [ ! -e ""$file"" ]; then
			echo ""File $file doesn't exists.""
			return 1
		fi

		if [ -d ""$file"" ]; then
			# zip directory and transfer
			zipfile=""$(mktemp -t transferXXX.zip)""
			# shellcheck disable=SC2086
			cd ""$(dirname $file)"" && zip -r -q - ""$(basename $file)"" >>""$zipfile""
			curl --progress-bar --upload-file ""$zipfile"" ""https://transfer.sh/$basefile.zip"" >>""$tmpfile""
			rm -f ""$zipfile""
		else
			# transfer file
			curl --progress-bar --upload-file ""$file"" ""https://transfer.sh/$basefile"" >>""$tmpfile""
		fi
	else
		# transfer pipe
		curl --progress-bar --upload-file ""-"" ""https://transfer.sh/$file"" >>""$tmpfile""
	fi

	# cat output link
	cat ""$tmpfile""

	# cleanup
	rm -f ""$tmpfile""
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3WY6eb
code,"#!/bin/bash -e

echo ""================= Installing JRuby 1.7.19 ===================""
rvm requirements
rvm install jruby-1.7.19
rvm use jruby-1.7.19

# Install ruby gems
gem install bundler
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9c40bv
code,"#!/bin/sh

echo \
'{
    ""query"": ""mutation toggleTodo($id: String!) { toggleTodo(id: $id) { completed __typename } }"",
    ""variables"": {""id"": ""2""},
    ""operationName"": ""toggleTodo""
}' | http post http://localhost:4000/graphql content-type:application/json
# | jq -Mc
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0BMMam
code,"#!/bin/bash

export ""DEBIAN_FRONTEND=noninteractive""

VAGRANT_CORE_FOLDER=$(cat ""/.puphpet-stuff/vagrant-core-folder.txt"")

OS=$(/bin/bash ""${VAGRANT_CORE_FOLDER}/shell/os-detect.sh"" ID)
RELEASE=$(/bin/bash ""${VAGRANT_CORE_FOLDER}/shell/os-detect.sh"" RELEASE)
CODENAME=$(/bin/bash ""${VAGRANT_CORE_FOLDER}/shell/os-detect.sh"" CODENAME)

if [[ ! -f /.puphpet-stuff/update-puppet ]]; then
    if [ ""${OS}"" == 'debian' ] || [ ""${OS}"" == 'ubuntu' ]; then
        echo ""Downloading http://apt.puppetlabs.com/puppetlabs-release-${CODENAME}.deb""
        wget --quiet --tries=5 --connect-timeout=10 -O ""/.puphpet-stuff/puppetlabs-release-${CODENAME}.deb"" ""http://apt.puppetlabs.com/puppetlabs-release-${CODENAME}.deb""
        echo ""Finished downloading http://apt.puppetlabs.com/puppetlabs-release-${CODENAME}.deb""

        dpkg -i ""/.puphpet-stuff/puppetlabs-release-${CODENAME}.deb"" >/dev/null

        echo ""Running update-puppet apt-get update""
        apt-get update >/dev/null
        echo ""Finished running update-puppet apt-get update""

        echo ""Updating Puppet to version 3.4.x""
        apt-get install -y puppet=3.4.3-1puppetlabs1 puppet-common=3.4.3-1puppetlabs1 >/dev/null
        PUPPET_VERSION=$(puppet help | grep 'Puppet v')
        echo ""Finished updating puppet to latest version: ${PUPPET_VERSION}""

        touch /.puphpet-stuff/update-puppet
        echo ""Created empty file /.puphpet-stuff/update-puppet""
    elif [ ""${OS}"" == 'centos' ]; then
        echo ""Downloading http://yum.puppetlabs.com/el/${RELEASE}/products/x86_64/puppet-3.4.3-1.el6.noarch.rpm""
        yum -y --nogpgcheck install ""http://yum.puppetlabs.com/el/${RELEASE}/products/x86_64/puppet-3.4.3-1.el6.noarch.rpm"" >/dev/null
        echo ""Finished downloading http://yum.puppetlabs.com/el/${RELEASE}/products/x86_64/puppet-3.4.3-1.el6.noarch.rpm""

        echo ""Installing/Updating Puppet to version 3.4.x""
        yum -y install puppet >/dev/null
        PUPPET_VERSION=$(puppet help | grep 'Puppet v')
        echo ""Finished installing/updating puppet to version: ${PUPPET_VERSION}""

        touch /.puphpet-stuff/update-puppet
        echo ""Created empty file /.puphpet-stuff/update-puppet""
    fi
fi
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vyehFT
code,"#!/bin/sh

if [ $# -lt 1 ]; then
cat <<EOF
Usage: blackbox_upgradeprovision.sh PREFIX
EOF
exit 1;
fi

PREFIX=""$1""
shift 1

. `dirname $0`/subunit.sh

if [ ! -d $PREFIX/upgradeprovision_full ]; then
	$PYTHON $SRCDIR/source4/setup/provision --host-name=bar --domain=FOO --realm=foo.example.com --targetdir=""$PREFIX/upgradeprovision_full"" --server-role=""dc""
fi


testrenamedc() {
	$PYTHON $SRCDIR/source4/scripting/bin/renamedc \
		--oldname=""BAR"" \
		--newname=""RAYMONBAR"" \
		-s $PREFIX/upgradeprovision_full/etc/smb.conf
}


testrenamedc2() {
	$PYTHON $SRCDIR/source4/scripting/bin/renamedc \
		--oldname=""RAYMONBAR"" \
		--newname=""BAR"" \
		-s $PREFIX/upgradeprovision_full/etc/smb.conf
}

testit ""renamedc"" testrenamedc
testit ""renamedc2"" testrenamedc2

if [ $failed -eq 0 ]; then
	rm -rf $PREFIX/upgradeprovision_full
fi

exit $failed
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VPuZGB
code,"#!/usr/bin/env bash

# This script sets up an openaps environment by defining the required devices,
# reports, and aliases, and optionally enabling it in cron,
# plus editing other user-entered configuration settings.
# Released under MIT license. See the accompanying LICENSE.txt file for
# full terms and conditions
#
# THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

source $(dirname $0)/oref0-bash-common-functions.sh || (echo ""ERROR: Failed to run oref0-bash-common-functions.sh. Is oref0-setup.sh in the right directory?""; exit 1)

# TODO: deprecate g4-upload and g4-local-only
usage ""$@"" <<EOT
Usage: $self <--dir=directory> <--serial=pump_serial_#> [--tty=/dev/ttySOMETHING] [--max_iob=0] [--ns-host=https://mynightscout.herokuapp.com] [--api-secret=[myplaintextapisecret|token=subjectname-plaintexthashsecret] [--cgm=(G4-upload|G4-local-only|G4-go|G5|MDT|xdrip|xdrip-js)] [--bleserial=SM123456] [--blemac=FE:DC:BA:98:76:54] [--dexcom_tx_sn=12A34B] [--btmac=AB:CD:EF:01:23:45] [--enable='autotune'] [--radio_locale=(WW|US)] [--ww_ti_usb_reset=(yes|no)]
EOT

# defaults
max_iob=0 # max_IOB will default to zero if not set in setup script
CGM=""G4-go""
DIR=""""
directory=""""
EXTRAS=""""
radio_locale=""US""
buildgofromsource=false
ecc1medtronicversion=""latest""
ecc1dexcomversion=""latest""
radiotags=""cc111x""

# Echo text, but in bright-blue. Used for confirmation echo text. This takes
# the same arguments as echo, including the -n option.
function echocolor() {
    echo -e -n ""\e[1;34m""
    echo ""$@""
    echo -e -n ""\e[0m""
}


for i in ""$@""; do
case $i in
    -d=*|--dir=*)
    DIR=""${i#*=}""
    # ~/ paths have to be expanded manually
    DIR=""${DIR/#\~/$HOME}""
    directory=""$(readlink -m $DIR)""
    ;;
    -s=*|--serial=*)
    serial=""${i#*=}""
    ;;
    -rl=*|--radio_locale=*)
    radio_locale=""${i#*=}""
    ;;
    -pm=*|--pumpmodel=*)
    pumpmodel=""${i#*=}""
    ;;
    -t=*|--tty=*)
    ttyport=""${i#*=}""
    ;;
    -m=*|--max_iob=*)
    max_iob=""${i#*=}""
    ;;
    -mdsm=*|--max_daily_safety_multiplier=*)
    max_daily_safety_multiplier=""${i#*=}""
    ;;
    -cbsm=*|--current_basal_safety_multiplier=*)
    current_basal_safety_multiplier=""${i#*=}""
    ;;
    #-bdd=*|--bolussnooze_dia_divisor=*)
    #bolussnooze_dia_divisor=""${i#*=}""
    #;;
    -m5c=*|--min_5m_carbimpact=*)
    min_5m_carbimpact=""${i#*=}""
    ;;
    -c=*|--cgm=*)
    CGM=""${i#*=}""
    ;;
    -n=*|--ns-host=*)
    NIGHTSCOUT_HOST=$(echo ${i#*=} | sed 's/\/$//g')
    ;;
    -a=*|--api-secret=*)
    API_SECRET=""${i#*=}""
    ;;
    -e=*|--enable=*)
    ENABLE=""${i#*=}""
    ;;
    -b=*|--bleserial=*)
    BLE_SERIAL=""${i#*=}""
    ;;
    -l=*|--blemac=*)
    BLE_MAC=""${i#*=}""
    ;;
    -dtx=*|--dexcom_tx_sn=*)
    DEXCOM_CGM_TX_ID=""${i#*=}""
    ;;
    --btmac=*)
    BT_MAC=""${i#*=}""
    ;;
    -p=*|--btpeb=*)
    BT_PEB=""${i#*=}""
    ;;
    --ww_ti_usb_reset=*) # use reset if pump device disappears with TI USB and WW-pump
    ww_ti_usb_reset=""${i#*=}""
    ;;
    -pt=*|--pushover_token=*)
    PUSHOVER_TOKEN=""${i#*=}""
    ;;
    -pu=*|--pushover_user=*)
    PUSHOVER_USER=""${i#*=}""
    ;;
    -npm=*|--npm_install=*)
    npm_option=""${i#*=}""
    shift
    ;;
    *)
    # unknown option
    echo ""Option ${i#*=} unknown""
    ;;
esac
done

function validate_cgm ()
{
    # Conver to lowercase
    local selection=""${1,,}""

    if [[ $selection =~ ""g4-upload""  ]]; then
        echo ""Unsupported CGM.  CGM=G4-upload has been replaced by CGM=G4-go (default). Please change your CGM in oref0-runagain.sh""
        echo
        return 1
    fi

    # TODO: Compare against list of supported CGMs
    # list of CGM supported by oref0 0.6.x: ""g4-upload"", ""g5"", ""g5-upload"", ""mdt"", ""shareble"", ""xdrip"", ""g4-local""

    if ! [[ $selection =~ ""g4-go"" || $selection =~ ""g5"" || $selection =~ ""g5-upload"" || $selection =~ ""mdt"" || $selection =~ ""xdrip"" || $selection =~ ""xdrip-js"" || $selection =~ ""g4-local"" ]]; then
        echo ""Unsupported CGM.  Please select (Dexcom) G4-go (default), G4-local-only, G5, G5-upload, MDT, xdrip, or xdrip-js.""
        echo
        return 1
    fi

}

function validate_g4share_serial ()
{
    if [[ -z ""$1"" ]]; then
        echo Dexcom G4 Share serial not provided: continuing
        return 1
    else
        if [[ $1 == SM???????? ]]; then
            return 0
        else
            echo Dexcom G4 Share serial numbers are of the form SM????????
            return 1
        fi
    fi
}

function validate_g5transmitter_serial ()
{
    if [[ -z ""$1"" ]]; then
        echo Dexcom G5 transmitter serial not provided: continuing
        return 1
    else
        #TODO: actually validate the DEXCOM_CGM_TX_ID if provided
        return 0
    fi
}

function validate_ttyport ()
{
 ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",vHbjN7
code,"#!/bin/bash

# Copyright 2015 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A library of helper functions and constant for debian os distro


# create-master-instance creates the master instance. If called with
# an argument, the argument is used as the name to a reserved IP
# address for the master. (In the case of upgrade/repair, we re-use
# the same IP.)
#
# It requires a whole slew of assumed variables, partially due to to
# the call to write-master-env. Listing them would be rather
# futile. Instead, we list the required calls to ensure any additional
# variables are set:
#   ensure-temp-dir
#   detect-project
#   get-bearer-token
#
function create-master-instance {
  local address_opt=""""
  [[ -n ${1:-} ]] && address_opt=""--address ${1}""
  local preemptible_master=""""
  if [[ ""${PREEMPTIBLE_MASTER:-}"" == ""true"" ]]; then
    preemptible_master=""--preemptible --maintenance-policy TERMINATE""
  fi

  write-master-env
  prepare-startup-script
  create-master-instance-internal ""${MASTER_NAME}"" ""${address_opt}"" ""${preemptible_master}""
}

function replicate-master-instance() {
  local existing_master_zone=""${1}""
  local existing_master_name=""${2}""
  local existing_master_replicas=""${3}""

  local kube_env=""$(get-metadata ""${existing_master_zone}"" ""${existing_master_name}"" kube-env)""
  # Substitute INITIAL_ETCD_CLUSTER to enable etcd clustering.
  kube_env=""$(echo ""${kube_env}"" | grep -v ""INITIAL_ETCD_CLUSTER"")""
  kube_env=""$(echo -e ""${kube_env}\nINITIAL_ETCD_CLUSTER: '${existing_master_replicas},${REPLICA_NAME}'"")""

  ETCD_CA_KEY=""$(echo ""${kube_env}"" | grep ""ETCD_CA_KEY"" |  sed ""s/^.*: '//"" | sed ""s/'$//"")""
  ETCD_CA_CERT=""$(echo ""${kube_env}"" | grep ""ETCD_CA_CERT"" |  sed ""s/^.*: '//"" | sed ""s/'$//"")""

  create-etcd-certs ""${REPLICA_NAME}"" ""${ETCD_CA_CERT}"" ""${ETCD_CA_KEY}""

  kube_env=""$(echo ""${kube_env}"" | grep -v ""ETCD_PEER_KEY"")""
  kube_env=""$(echo -e ""${kube_env}\nETCD_PEER_KEY: '${ETCD_PEER_KEY_BASE64}'"")""
  kube_env=""$(echo ""${kube_env}"" | grep -v ""ETCD_PEER_CERT"")""
  kube_env=""$(echo -e ""${kube_env}\nETCD_PEER_CERT: '${ETCD_PEER_CERT_BASE64}'"")""

  echo ""${kube_env}"" > ${KUBE_TEMP}/master-kube-env.yaml
  get-metadata ""${existing_master_zone}"" ""${existing_master_name}"" cluster-name > ${KUBE_TEMP}/cluster-name.txt
  get-metadata ""${existing_master_zone}"" ""${existing_master_name}"" startup-script > ${KUBE_TEMP}/configure-vm.sh

  create-master-instance-internal ""${REPLICA_NAME}""
}

function create-master-instance-internal() {
  local -r master_name=""${1}""
  local -r address_option=""${2:-}""
  local -r preemptible_master=""${3:-}""

  gcloud compute instances create ""${master_name}"" \
    ${address_option} \
    --project ""${PROJECT}"" \
    --zone ""${ZONE}"" \
    --machine-type ""${MASTER_SIZE}"" \
    --image-project=""${MASTER_IMAGE_PROJECT}"" \
    --image ""${MASTER_IMAGE}"" \
    --tags ""${MASTER_TAG}"" \
    --network ""${NETWORK}"" \
    --scopes ""storage-ro,compute-rw,monitoring,logging-write"" \
    --can-ip-forward \
    --metadata-from-file \
      ""startup-script=${KUBE_TEMP}/configure-vm.sh,kube-env=${KUBE_TEMP}/master-kube-env.yaml,cluster-name=${KUBE_TEMP}/cluster-name.txt,kube-master-certs=${KUBE_TEMP}/kube-master-certs.yaml"" \
    --disk ""name=${master_name}-pd,device-name=master-pd,mode=rw,boot=no,auto-delete=no"" \
    --boot-disk-size ""${MASTER_ROOT_DISK_SIZE:-10}"" \
    ${preemptible_master}
}

# TODO: This is most likely not the best way to read metadata from the existing master.
function get-metadata() {
  local zone=""${1}""
  local name=""${2}""
  local key=""${3}""
  gcloud compute ssh ""${name}"" \
    --project ""${PROJECT}"" \
    --zone=""${zone}"" \
    --command ""curl \""http://metadata.google.internal/computeMetadata/v1/instance/attributes/${key}\"" -H \""Metadata-Flavor: Google\"""" 2>/dev/null
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",RWVBIk
code,"\chapter{Adminsitración}
\label{capadministracion}

La capa de Administración de VirtShell proporciona una infraestructura de servicios para la gestión de cualquier dispositivo registrado y creado a traves del sistema. Este capítulo busca darle explicación a las funcionalidades de administración.

\section{Anfitriones, instancias, particiones y Ambientes}
En VirtShell hay cuatro conceptos que son muy importantes y se extienden a través de todos los servicios: los anfitriones, las instancias, las particiones y los ambientes. Los cuatro se asocian con la mayoría de los componentes en VirtShell, y el dominio de ellos es crucial para una buena administración de los dispositivos. 

\subsection{Anfitriones}
Los anfitriones no son mas que nodos físicos, servidores o máquinas virtuales, que alojaran recursos virtuales. VirtShell ofrece la posibilidad de clasificarlos de acuerdo a combinaciones de capacidad de CPU, memoria, almacenamiento y red. El objetivo que busca la clasificación es proporcionar flexibilidad para elegir la combinación de recursos adecuada para las aplicaciones.\\
\\
Los tipos de anfitriones se agrupan en familias basadas en perfiles de aplicación de destino. Estos grupos incluyen: de propósito general, con procesadores de alto desempeño, de memoria optimizada y de almacenamiento optimizado.

\begin{description}
\item [Propósito general] Esta familia proporciona un equilibrio de recursos informáticos, de memoria y red, por lo que constituye una buena opción para muchas aplicaciones.
\item [Procesadores de alto desempeño] Esta familia ofrece procesadores que alcanzan alto desempeño en tareas complejas.
\item [Memoria optimizada] Esta familia esta optimizada para aplicaciones con un uso intenso de la memoria.
\item [Almacenamiento optimizado] Esta familia promete anfitriones con alta capacidad de almacenamiento, optimizado para un desempeño de E/S muy alto.
\end{description}

\subsection{Instancias}
A un servidor virtual en VirtShell, se le denomina instancia, las cuales pueden ser maquinas virtuales que corren sobre algún hipervisor o también pueden ser contenedores que se ejecutan directamente sobre el sistema operativo del anfitrión. \\
\\
La elección de la tecnología de virtualización depende de las preferencias u objetivos que se busque con las aplicaciones de la instancia. En la actualidad VirtShell soporta Virtualbox como hipervisor para maquinas virtuales y para los contenedores soporta LXC y Docker.

\subsection{Particiones}
Las particiones consisten de uno o más anfitriones, los cuales pueden ser nodos físicos, servidores o incluso máquinas virtuales. El objetivo principal que busca una partición, es agrupar las máquinas que albergaran recursos virtuales en partes aisladas, de tal manera que una partición no tenga acceso a los recursos de otra. Estas partes pueden pueden estar ubicadas en un mismo sitio físico o por el contrario pueden estar distribuidas en diferentes zonas geográficas de todo el mundo.\\
\\
Si solo se cuenta con un numero fijo de maquinas (o anfitriones) ubicadas en un mismo sitio físico como por ejemplo un datacenter \footnote{Un data center también llamado centro de datos es un espacio acondicionado especialmente para contener los equipos y sistemas de TI}, lo que se obtiene con las particiones es la posibilidad de dividir esas maquinas en subgrupos que puedan ser destinados para diferentes equipos o divisiones dentro de una organización.\\ 
\\
Al contar con maquinas distribuidas en diferentes zonas geográficas la elección de una partición u otra se basa principalmente en la cercanía de los visitantes o clientes, ya que a menor distancia entre los servidores y ellos, menores son los tiempos de respuesta y mejor la experiencia de usuario.\\
\\
Las particiones también favorecen la disponibilidad. Si se distribuyen sus instancias a través de múltiples particiones y una instancia falla, puede diseñar su aplicación para que una instancia en otra partición pueda atender las peticiones.\\
\\
Cuando se crea una nueva partición, VirtShell la crea completamente vacia, sin anfitriones. Para asociar anfitriones a una partición se debe crear un anfitrión y vincularlo con la partición como se verá mas adelante en este mismo capítulo. Un ejemplo de como crear una partición usando el API se muestra en el siguiente código:

%\vspace{6cm}

\begin{lstlisting}[style=json, caption=Petición HTTP para crear una partición]
curl -sv -X POST -H 'accept: application/json' \
  -H 'X-VirtShell-Authorization: UserId:Signature' \
  -d '{ ""name"": ""development_co"",
        ""description"": ""Collection of servers to development team in Colombia."" }' \
   'http://localhost:8080/api/virtshell/v1/partitions'
\end{lstlisting}

\vspace{5mm}

En este ejemplo se muestra como crear una partición con nombre developtment\_co, la cual se encuentra sin anfitriones asociados. En la siguiente sección se explicara la forma de asociar anfitriones a una partición.  

\subsection{Asociación de anfitriones a particiones}
Cuando se crea un anfitrión en VirtShell este debe ser asociado a una sola partición, asignándole un tipo de los menciona",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5ZYgoX
code,"\documentclass{article}
\usepackage{biblatex}
\addbibresource{test-cites.bib}

\begin{document}
\begin{enumerate}
  \item \autocite[10]{Hemingway1940}
  \item \autocites{Hemingway1940}{JiM2020}
  \item \autocites[10]{JiM2020}[20]{Hemingway1940}
  \item \autocites[10]{Hemingway1940}{JiM2020}
  \item \autocites{Hemingway1940}[20]{JiM2020}
\end{enumerate}

arXiv tests: \textcite{0801.1144} and \textcite{wilcox.e:2021}

\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZGYOtz
code,"\weblink{https://www.fanfiction.net/s/5782108/27/}
\chapter{Chapter 27: Empathy}
J. K. Rowling is 87\% confident you will burst into flames.

Roger Bacon lived in the 13th century and is credited as one of the earliest advocates of the scientific method. Giving a scientist his experimental diary is sort of like giving a writer the pen, not of Shakespeare, but of someone who helped invent writing.

\begin{center}\rule{3in}{0.4pt}\end{center}

It wasn't every day you got to see Harry Potter beg.

``\emph{Pleeaaase,}'' whined Harry Potter.

Fred and George shook their heads again, smiling.

There was an agonized look on Harry Potter's face. ``But I \emph{told} you how I did the one with Kevin Entwhistle's cat, and Hermione and the vanishing soda, and I \emph{can't} tell you about the Sorting Hat or the Remembrall or Professor Snape...''

Fred and George shrugged and turned to leave.

``If you ever do figure it out,'' said the Weasley twins, ``be sure to let us know.''

``\emph{You're evil! You're both evil!}''

Fred and George firmly closed the door to the empty classroom behind them, and made sure to keep the grin on their faces for a while, just in case Harry Potter could see through doors.

Then they turned a corner and their faces sagged.

``I don't suppose Harry's guesses~-''

``- gave you any ideas?'' they said to each other at the same time, and then their shoulders slumped further.

Their last relevant memory was of Flume refusing to help them, though they couldn't remember \emph{what} they'd asked him to do...

...but they must have looked elsewhere and found \emph{someone} to help them do \emph{something} illegal, or they wouldn't have agreed to be Obliviated afterward.

How had they \emph{possibly} been able to get all that done on just forty Galleons?

At first they'd worried that they'd forged evidence so good that Harry actually \emph{would} end up married to Ginny... but they'd thought of that too, it seemed. The Wizengamot proceedings had been tampered with \emph{again} to put them back the way they'd been originally, the fake betrothal contract had vanished from its dragon-guarded vault in Gringotts, and so on. It was pretty scary, actually. Most people now thought the \emph{Daily Prophet} had just made the whole thing up for unguessable reasons, and the \emph{Quibbler} had helpfully twisted the knife deeper with the next day's headline, HARRY POTTER SECRETLY BETROTHED TO LUNA LOVEGOOD.

Whoever they'd hired would tell them after the statute of limitations expired, they desperately hoped. But meanwhile it was awful, they'd pulled their greatest prank ever, maybe the greatest prank in the history of pranking, and they \emph{couldn't remember how.} It was crazy, they'd been able to think of a way the \emph{first} time, so why couldn't they see it now after \emph{knowing} everything they'd done?

Their only consolation was that Harry didn't know they didn't know.

Not even Mum had questioned them about it, despite the obvious Weasley connection. Whatever had been done, it was far out of the reach of any Hogwarts student... except possibly \emph{one}, who, if certain rumors were true, might have done it by snapping his fingers. \emph{Harry} had been questioned under Veritaserum, he'd told them... with Dumbledore present and giving the Aurors scary looks. The Aurors had asked just enough to determine that Harry hadn't pulled the prank himself or disappeared anyone, and then gotten the heck out of Hogwarts.

Fred and George had wondered whether to feel insulted about Harry Potter being questioned by the Aurors for \emph{their} prank, but the look on \emph{Harry's} face, probably for exactly the same reason, made everything worth it.

Unsurprisingly, Rita Skeeter and the editor of the \emph{Daily Prophet} had both vanished and were probably in another country by now. They \emph{would've} liked to be able to tell their family about that part. Dad would have congratulated them, they thought, after Mum had finished killing them and Ginny had burned the remains.

But everything was still all right, they'd tell Dad someday, and meanwhile...

...meanwhile Dumbledore had happened to sneeze while passing them in the hallway, and a small package had accidentally dropped out of his pockets, and inside had been two matched wardbreaker's monocles of \emph{incredible} quality. The Weasley twins had tested their new monocles on the ``forbidde n'' third-floor corridor, making a quick trip to the magic mirror and back, and they hadn't been able to see \emph{all} the detection webs clearly, but the monocles had shown a \emph{lot} more than they'd seen the first time.

Of course they would have to be very careful never to get caught with the monocles in their possession, or they would end up in the Headmaster's office getting a stern lecture and maybe even threats of expulsion.

It was good to know that not everyone who got Sorted into Gryffindor grew up to be Professor McGonagall.

\begin{center}\rule{3in}{0.4pt}\end{center}

Harry was in a white room, windowless, featureless, sitting before a desk, facing an expressionless man in for",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mCpgtH
code,"% This file was created by matplotlib2tikz v0.5.4.
\begin{tikzpicture}

\definecolor{color1}{rgb}{0.105882352941176,0.619607843137255,0.466666666666667}
\definecolor{color0}{rgb}{0.917647058823529,0.917647058823529,0.949019607843137}
\definecolor{color3}{rgb}{0.589542483660131,0.416993464052288,0.470588235294118}
\definecolor{color2}{rgb}{0.719492502883506,0.416147635524798,0.0888119953863898}
\definecolor{color5}{rgb}{0.488581314878893,0.654440599769319,0.0982698961937716}
\definecolor{color4}{rgb}{0.686735870818916,0.297270280661284,0.61999231064975}

\begin{groupplot}[group style={group size=2 by 1}]
\nextgroupplot[
xlabel={Simulated Time (mins)},
ylabel={Weighted Trust Value},
xmin=0, xmax=60,
ymin=0, ymax=1,
ytick={0,0.2,0.4,0.6,0.8,1},
yticklabels={$0.0$,$0.2$,$0.4$,$0.6$,$0.8$,$1.0$},
tick align=outside,
xmajorgrids,
x grid style={white!50.196078431372548!black},
ymajorgrids,
y grid style={white!50.196078431372548!black},
axis line style={white!50.196078431372548!black},
axis background/.style={fill=color0},
legend style={draw=none, fill=color0},
legend cell align={left},
legend entries={{Alfa},{Bravo},{Charlie},{Delta},{Foxtrot}}
]
\addplot [color1, opacity=1.0]
table {%
0 0.000287380403550065
1 0.326387593731868
2 0.321425163631941
3 0.354314990971143
4 0.239848088396123
5 0.160855283156045
6 0.17422857194628
7 0.126424545172781
8 0.089145563576996
9 0.101107696030186
10 0.3406360247874
11 0.248389332691187
12 0.193772897306102
13 0.138254266847926
14 0.100262688266555
15 0.350119014060857
16 0.370942849293502
17 0.280634657339399
18 0.200420455571172
19 0.174429683714121
20 0.155540592928426
21 0.111942339405945
22 0.0826945960651967
23 0.0637083650938006
24 0.051978056217123
25 0.0406511890369834
26 0.0319635742052475
27 0.0249406926634782
28 0.0234616498300539
29 0.0476754148576678
30 0.0411235027511283
31 0.0295476497064364
32 0.03921629281071
33 0.0825358408356647
34 0.086932304830765
35 0.0627747385213402
36 0.0495008220391141
37 0.0636238410625801
38 0.0460644585401737
39 0.0389576670394378
40 0.0476848679960413
41 0.034061904360102
42 0.0293706240748387
43 0.0511069094360524
44 0.0382456185029095
45 0.0459515876117468
46 0.0403278138420355
47 0.0515726571088468
48 0.285326627664038
49 0.205222014030666
50 0.186357196338723
51 0.134750194788239
52 0.0981148208889101
53 0.211856964718621
54 0.205582608073587
55 0.148982085940847
56 0.108518951997536
57 0.0788669327392444
58 0.0565416871767761
};
\addplot [color2, opacity=0.6]
table {%
0 0.87851705261409
1 0.378611493458582
2 0.327037652159222
3 0.560071085460247
4 0.708311644139141
5 0.596519850741184
6 0.708352151386782
7 0.764891778341042
8 0.793561893911386
9 0.815441274715635
10 0.868583753854609
11 0.639335720208417
12 0.461988019259305
13 0.36500022676054
14 0.269260747224814
15 0.214369614428089
16 0.402866396020215
17 0.324067933925403
18 0.510800318132612
19 0.366943505240555
20 0.262978235776292
21 0.200534980952929
22 0.421454286008578
23 0.303927109779229
24 0.371977899653522
25 0.549062085765721
26 0.677632085302302
27 0.747497389380772
28 0.81961949823557
29 0.871076801976269
30 0.900251916856771
31 0.717356366766488
32 0.515967397953423
33 0.466804256382257
34 0.555721118337443
35 0.681271585211123
36 0.725204183143856
37 0.564605755936288
38 0.522546542731462
39 0.624300549519293
40 0.533683353761688
41 0.45382625707317
42 0.32629660557568
43 0.474257087518772
44 0.519841730635934
45 0.596366209867347
46 0.706917484234414
47 0.750068703792788
48 0.562426325560025
49 0.658045008976124
50 0.755091969231168
51 0.58227002630231
52 0.425132582317374
53 0.32503358081368
54 0.508980019891925
55 0.490478915965387
56 0.468416346315862
57 0.618143328926715
58 0.666757403073265
};
\addplot [color3, opacity=0.6]
table {%
0 0.0849002570352941
1 0.077981296895345
2 0.0576285149214374
3 0.077718244026945
4 0.333857579629439
5 0.333857579629439
6 0.240675679823687
7 0.305190063188127
8 0.214973071624169
9 0.248705498895075
10 0.204466117176489
11 0.443935939539545
12 0.382697144405185
13 0.512718837307929
14 0.502229977018244
15 0.645180428337312
16 0.72599303042481
17 0.732779646847582
18 0.803692308242426
19 0.859887188062175
20 0.832625285463401
21 0.846829108174225
22 0.604712850104335
23 0.697183875934516
24 0.554444641288825
25 0.476901941116526
26 0.542033640273369
27 0.653469614561074
28 0.588597109520189
29 0.609165425920513
30 0.514114694842294
31 0.457647702856781
32 0.33539959370692
33 0.335041232297067
34 0.452048042334495
35 0.403992742397685
36 0.553596380894503
37 0.667389269717398
38 0.504588168879244
39 0.364051580043538
40 0.288417267555128
41 0.434692621967037
42 0.596182333523194
43 0.691647497878104
44 0.73144584963065
45 0.523820543627135
46 0.501737606331857
47 0.387101777492042
48 0.282664087163541
49 0.485965023687618
50 0.544005421869904
51 0.604794496319142
52 0.712428306911649
53 0.740580161254697
54 0.697988006739958
55 0.501012483116281
56 0.636882989489737
57 0.726733460056179
58 0.760770360894366
};
\addplot [color4, opacity=0.6]
table {%
0 0.978575928195755
1 0.854972029668023
2 0.918251055676137
3 0.698803515343226
4 0.465124",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kLpjg0
code,"\hypertarget{io__source_8cpp}{}\section{/var/www/html/\+S\+J\+S\+U-\/\+D\+E\+V-\/\+Linux/firmware/default/lib/\+L4\+\_\+\+I\+O/src/io\+\_\+source.cpp File Reference}
\label{io__source_8cpp}\index{/var/www/html/\+S\+J\+S\+U-\/\+D\+E\+V-\/\+Linux/firmware/default/lib/\+L4\+\_\+\+I\+O/src/io\+\_\+source.\+cpp@{/var/www/html/\+S\+J\+S\+U-\/\+D\+E\+V-\/\+Linux/firmware/default/lib/\+L4\+\_\+\+I\+O/src/io\+\_\+source.\+cpp}}
{\ttfamily \#include $<$stdint.\+h$>$}\\*
{\ttfamily \#include \char`\""{}io.\+hpp\char`\""{}}\\*
{\ttfamily \#include \char`\""{}bio.\+h\char`\""{}}\\*
{\ttfamily \#include \char`\""{}adc0.\+h\char`\""{}}\\*
Include dependency graph for io\+\_\+source.\+cpp\+:\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{d7/dfa/io__source_8cpp__incl}
\end{center}
\end{figure}
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \hyperlink{io__source_8cpp_afbad296922d3d42f2bee7d961f317a72}{M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME}~32
\item 
\#define \hyperlink{io__source_8cpp_a58b6e458952a0b26d7f0baf224265160}{led\+\_\+set}(num,  realbit)
\end{DoxyCompactItemize}


\subsection{Macro Definition Documentation}
\index{io\+\_\+source.\+cpp@{io\+\_\+source.\+cpp}!led\+\_\+set@{led\+\_\+set}}
\index{led\+\_\+set@{led\+\_\+set}!io\+\_\+source.\+cpp@{io\+\_\+source.\+cpp}}
\subsubsection[{\texorpdfstring{led\+\_\+set}{led_set}}]{\setlength{\rightskip}{0pt plus 5cm}\#define led\+\_\+set(
\begin{DoxyParamCaption}
\item[{}]{num, }
\item[{}]{realbit}
\end{DoxyParamCaption}
)}\hypertarget{io__source_8cpp_a58b6e458952a0b26d7f0baf224265160}{}\label{io__source_8cpp_a58b6e458952a0b26d7f0baf224265160}
{\bfseries Value\+:}
\begin{DoxyCode}
\textcolor{keywordflow}{if} (mLedValue & (1 << num))             \hyperlink{LPC17xx_8h_a335587dad4e6d0da56c1f3ad1c087d10}{\(\backslash\)}
\hyperlink{LPC17xx_8h_a335587dad4e6d0da56c1f3ad1c087d10}{                LPC\_GPIO1}->FIOCLR = (1 << realbit); \hyperlink{LPC17xx_8h_a335587dad4e6d0da56c1f3ad1c087d10}{\(\backslash\)}
\hyperlink{LPC17xx_8h_a335587dad4e6d0da56c1f3ad1c087d10}{            else                                    \(\backslash\)}
\hyperlink{LPC17xx_8h_a335587dad4e6d0da56c1f3ad1c087d10}{                LPC\_GPIO1}->FIOSET = (1 << realbit)
\end{DoxyCode}
\index{io\+\_\+source.\+cpp@{io\+\_\+source.\+cpp}!M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME@{M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME}}
\index{M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME@{M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME}!io\+\_\+source.\+cpp@{io\+\_\+source.\+cpp}}
\subsubsection[{\texorpdfstring{M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME}{MAX_FALLING_EDGES_PER_IR_FRAME}}]{\setlength{\rightskip}{0pt plus 5cm}\#define M\+A\+X\+\_\+\+F\+A\+L\+L\+I\+N\+G\+\_\+\+E\+D\+G\+E\+S\+\_\+\+P\+E\+R\+\_\+\+I\+R\+\_\+\+F\+R\+A\+ME~32}\hypertarget{io__source_8cpp_afbad296922d3d42f2bee7d961f317a72}{}\label{io__source_8cpp_afbad296922d3d42f2bee7d961f317a72}
The design of the IR Sensor is as follows\+: Timer1 captures falling edges of C\+A\+P1.\+0 and timestamps are saved when this happens. Every time capture happens, a 20ms match interrupt is setup/reset. When no more signals arrive, the 20ms match interrupt will decode the timestamps and convert timestamps into binary signal.

Note that this doesn\textquotesingle{}t decode into real data sent through the IR, but nevertheless, the decoded signal will be unique per button pressed on an IR remote. ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m_xC39
code,"\input{head}
\appendix
\setcounter{section}{2}
\input{sectionc}
\input{tail}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wA61k2
code,"\documentclass[slidestop,compress,mathserif,serif,notes=show]{beamer}
% Not to print overlays
% \documentclass[handout,slidestop,compress,mathserif,serif]{beamer}

% To use PSTricks
% \documentclass[slidestop,compress,mathserif,serif,xcolor=pst,dvips]{beamer}


\usepackage[utf8]{inputenc}
\usepackage{rfiw}
%\usepackage{ca}

\usepackage{algpseudocode}


\def\R{{\mathbb R}}
\def\C{{\mathbb C}}
\def\bS{{\mathbb S}}


\newcommand{\docTitle}{Track Clustering for Artist Disambiguation}
\newcommand{\subjectName}{Hack U}
\newcommand{\authors}{}

% PDF file properties
\title{\docTitle}
\hypersetup{
  pdfauthor={\authors},
  pdfsubject={\subjectName},
  pdfkeywords={rfiw, atelier, extraction, bibliographic, references}
}

\begin{document}

  % Hi, I'm Ramon and I'm going to present you a system that we implemented
  % last year for generating bibliographic references
  \input{title.tex}


  %%%% MOTIVATION %%%%
  \section{Motivation and Goals}
  \begin{frame}
    \frametitle{\secname}
    \vspace*{0.5cm}
    \begin{itemize}
      \item{}
      Artist-driven recommendations
      \item{}
      Multiple artists with the same name
      \item{}
      One single artist page/id
      \item{}
      Assume that they play different music styles
      %\item{}
      %Tracks are tagged accordingly
    \end{itemize}

    \bigskip
    So, how can we distinguish between bands?\\
    \pause
    \medskip
    \begin{center}
    \large{Cluster tracks by tag}
    \end{center}
  \end{frame}

  \begin{frame}
    \frametitle{Example}
    \vspace*{0.5cm}
    \begin{figure}
      \centering 
      \includegraphics[width=0.7\textwidth]{figs/soko.pdf} 
      \label{fig:soko} 
    \end{figure}
    \begin{itemize}
      \item{}
      Some songs: \texttt{french, female vocalist, cute, indie...}
      \item{}
      Some other songs: \texttt{instrumental, ambient, jazz...}
    \end{itemize}
  \end{frame}


  
  \begin{frame}
    \frametitle{Overview}
    \vspace{0.5cm}
    \begin{figure}
      \centering 
      \includegraphics[width=0.9\textwidth]{figs/diagram.pdf} 
      \label{fig:diagram} 
    \end{figure}
  \end{frame}


  %%%% CONCLUSIONS %%%%
  \section{Thoughts and Conclusions}
  \begin{frame}
    \frametitle{\secname{}}
    \vspace{1cm}
    \begin{itemize}
      \item{}
      Clustering algorithm must be replaced\\
      \textcolor{gray}{Currently using hierarchical clustering with a threshold on the
      max. number of clusters and using complete linkage\\
      Other algorithms using frequent tag sets might be more appropiate}
      \item{}
      Chrome extension just for the sake of this demo\\
      \textcolor{gray}{This procedure just makes sense if we try
      to distinguish between artists now that the \textit{damage} is done}
    \end{itemize}
  \end{frame}

\end{document}

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",X4KEB7
code,"\documentclass[runningheads,a4paper]{llncs}
%
\usepackage{natbib} % bibliography stuff
%
\usepackage{graphicx} % allows for working with images
\DeclareGraphicsExtensions{.pdf,.png,.jpeg,.jpg,.gif} % configures latex to look for the following image extensions
%
\usepackage{setspace} % allows for configuring the linespacing in the document
%\singlespacing
\onehalfspacing
%\doublespacing
%
\usepackage{listings}
%
\usepackage{amsmath}
%
\usepackage{appendix}
%
\usepackage{multirow}
%
\usepackage{booktabs,array,dcolumn}
%
\usepackage{float}
%
\usepackage{eurosym}
%
\usepackage{caption}
\captionsetup[table]{skip=10pt}
\captionsetup{compatibility=false}
\usepackage{subcaption}
%
\usepackage[toc]{glossaries}
\makeglossaries
%
\usepackage{amssymb}
\setcounter{tocdepth}{4}
%
\usepackage{url}
\urldef{\mailsa}\path|info@southeastmakerspace.org|
\newcommand{\keywords}[1]{\par\addvspace\baselineskip
\noindent\keywordname\enspace\ignorespaces#1}

%Optional Package to add PDF bookmarks and hypertext links
\usepackage[pdftex,hypertexnames=false,linktocpage=true]{hyperref}
\hypersetup{colorlinks=true,linkcolor=black,anchorcolor=black,citecolor=black,filecolor=black,urlcolor=black,bookmarksnumbered=true,pdfview=FitB}

\begin{document}
\mainmatter  % start of an individual contribution

% first the title is needed
\title{Buzz Wire Game Instructions}

% a short form should be given in case it is too long for the running head
\titlerunning{Buzz Wire Game}
%

% the name(s) of the author(s) follow(s) next
%
% Chinese authors should write their first names(s) in front of
% their surnames. This ensures that the names appear correctly in
% the running heads and the author index.
%
\author{Aileen Drohan%
%\thanks{Please note that the LNCS Editorial assumes that all authors have used
%the western naming convention, with given names preceding surnames. This determines
%the structure of the names in the running heads and the author index.}%
\and David Kirwan \and Padraig Murphy}
%
\authorrunning{Buzz Wire Game}
% (feature abused for this document to repeat the title also on left hand pages)

% the affiliations are given next; don't give your e-mail address
% unless you accept that it will be published
\institute{South East Makerspace,\\Old Printworks, Thomas Hill,\\Waterford City, X91 TW63\\
\mailsa\\
\url{https://www.southeastmakerspace.org}}
%

%
% a more complex sample for affiliations and the mapping to the
% corresponding authors can be found in the file ""llncs.dem""
% (search for the string ""\mainmatter"" where a contribution starts).
% ""llncs.dem"" accompanies the document class ""llncs.cls"".
%
%\toctitle{Thesis Proposal}
\tocauthor{SEMS}
\maketitle

%
\begin{abstract}
\begin{figure}
	\centering
	\includegraphics[width=8cm]{images/sems}
\end{figure}
During this workshop, attendees build a buzz wire game system. The aim of which is to guide a loop through a wire maze without touching the wire. Each participant receives a pack containing all the components required to build the game. No prior soldering experience is required, training will be provided on the day. The only requirement the will to learn, and a packed lunch!
\keywords{analogue electronics, prototyping, buzz wire}
\end{abstract}
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Acknowledgements
%\newpage
%\include{preface/acknowledgements}
%

%
\tableofcontents
%

%
%\newpage
%\listoffigures
%\addcontentsline{toc}{chapter}{List of Figures}
%

%
%\newpage
%\listoftables
%\addcontentsline{toc}{chapter}{List of Tables}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%

%
\include{body/introduction}
\include{body/conclusions}
%

%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%\include{glossary/glossary}
%\renewcommand*{\glsclearpage}{}
%\printglossaries
%

%
%\appendix
%\include{apendices/appendix}
%

%
%\bibliographystyle{plainnat}
%\bibliography{bibliography/bibtex}
%\addcontentsline{toc}{chapter}{Bibliography}
%

\end{document}


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jHzGaA
code,"\documentclass[9pt,twocolumn,twoside]{../../styles/osajnl}
\usepackage{fancyvrb} \journal{i524}

\title{Detecting Stop Signs in Images and Videos in a Robot Swarm}

\author[1,*]{Rahul Raghatate}
\author[1]{Snehal Chemburkar}

\affil[1]{School of Informatics and Computing, Bloomington, IN 47408,
  U.S.A.}

\affil[*]{Corresponding authors: rraghata@iu.edu, snehchem@iu.edu}

\dates{S17-IR-P003, \today}

\ociscodes{Street Signs, Ansible, Video Streams, OpenCV, Spark, Cloud}

\doi{Report:
  \url{https://github.com/cloudmesh/sp17-i524/tree/master/project/S17-IR-P003/report/report.pdf}\\
  Code: \url{https://github.com/cloudmesh/cloudmesh.street}}
\begin{abstract}
This project is designed to deploy a scalable stop sign detection
algorithm to process real-time image and video streams. The deployment
is automated allowing for minimal user-interaction. Spark on Yarn
provides the distributed computing power required to scale the stop
sign detection algorithm to process big data. This system is useful in
automated driving vehicles and advanced driver assisted systems (ADAS)
to detect and classify the street signs and control the vehicle
accordingly. A comparative benchmark is developed based on the
performance of the application on multiple cloud systems.\newline
\end{abstract}

\setboolean{displaycopyright}{true}

\begin{document}

\maketitle

\section{Introduction}
There are many applications developed based on simple idea of object
detection, like auto-tagging pictures (e.g. Facebook, Phototime),
counting the number of people in a street (e.g. Placemeter), tracking
an object in video streams, detecting vehicles to name a few.  Based
on this concept of object detection, we deploy a scalable software for
stop sign detection using Spark on multiple clouds.  The software
deployment is automated using Ansible. Cloudmesh provides simple
command line interface for defining the number of clusters as well as
deploying them. Benchmarks are developed based on the performance of
this software on different cloud systems. The database of street signs
will be restricted to US street signs. The only publicly available
dataset for US traffic signs is the LISA dataset
\cite{paper-lisadataset} which is very huge. Hence, the video streams
used for this project are captured by us using a mobile camera.

OpenCV is a computer vision library used to process video streams in
Python. A lot of computing power goes into processing videos in
real-time, this is where the cloud systems come in. We leverage the
distributed computing power of Spark on Yarn for faster processing of
images and videos. This solution is deployed on two different clouds
to benchmark their performance.  In this era of autonomous driving and
advanced driver assisted systems (ADAS), detection and classification
of traffic signs is a handy feature. Benchmarks have been created for
the traffic sign detection on the German and Belgium Traffic Sign
Datasets \cite{paper-trafficsign}.

\section{Requirement Analysis}
The following technologies are used throughout the project:
\begin{itemize}
\item Cloudmesh provides command line interface to connect and deploy
  clusters to different cloud systems.
\item Ansible is an agentless, automated software deployment tool.
\item Python - Programming language.
\item Spark - Distributed computing engine.
\item YARN - is the resource manager for Spark.

\item OpenCV - Image and video analysis for street sign detection
  using open source computer vision libraries.The OpenCV library
  provides several transformations that can be applied to images(apply
  filters, transformation), detect and recognize objects in images.
\end{itemize}


\section{Scope}

The initial project idea was to automate the deployment of street sign
detection algorithm over multiple cloud systems. As we proceeded
through the project, we realized that training of Haar Cascade
classifier is challenging. For a training dataset of 1000 samples the
training can go on for 3-4 days. It turned out to be an exhaustive
process. The resultant classifiers were unable to detect the specific
signs. The details of the OpenCV training process we followed are
given in the appendix. Due to difficulty training classifiers for
street signs, we had to reduce the scope of this project to detect
only stop signs using a pre-trained classifier available on Github
\cite{}. The stop sign detection is implemented for both images and
videos using Spark.


\begin{figure*}[h]\centering
\includegraphics[width=\linewidth]{images/architecture}
\caption{System Architecture}
\label{fig:system}
\end{figure*}

\section{System Architecture}

Figure \ref{fig:system} shows an overview of our system
architecture. Ansible and Cloudmesh client are installed on the host
or local machine. Roles are defined in the Ansible playbook for each
of the different steps in the deployment process. We execute the
Ansible playbooks to instantiate the cloud machines, deploy Hadoop and
Spark on them and then carryout the stop sign detection on Spark using
Yarn resource manager. Once the job is submitted to Spark, the driver
program initializes the",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",d3Ebnb
code,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Template ini dibuat untuk makalah kolokium mahasiswa
% Program Alih Jenis (Ekstensi) Ilmu Komputer IPB
% Version 1.0 (18/05/2015)
%
% Template ini menggunakan template yang di-download dari:
% http://www.LaTeXTemplates.com
% Mathias Legrand (legrand.mathias@gmail.com)
% License: CC BY-NC-SA 3.0 (http://creativecommons.org/licenses/by-nc-sa/3.0/)
%
% Dimodifikasi untuk keperluan Program Studi
% Oleh: JULIO ADISANTOSO (julioipb@gmail.com)
%
% Silakan mengganti dan melengkapi file:
%    (1) kolokium_information.tex -- judul, nama, nim, email, pembimbing, dsb
%    (2) abstrak.tex -- abstrak makalah
%    (3) pendahuluan.tex -- berisi latar belakang, dsb
%    (4) metode.tex -- berisi metode penelitian
%    (5) daftar_pustaka.tex -- berisi daftar pustaka
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------------------------------------------------------------------------------------
%	PACKAGES AND OTHER DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\documentclass[fleqn,11pt]{SelfArx} % Document font size and equations flushed left
\input{kolokium_layout}
\input{hype_indonesia}
\input{kolokium_information}
\usepackage{xcolor,colortbl}
\usepackage{multicol}
\usepackage{multirow}
%\usepackage[urldate=iso8601, backend=biber, style=authoryear, url=true, doi=true, sorting=nyt]{biblatex}
\usepackage[urldate=iso8601,maxbibnames=9,maxcitenames=2,backend=biber,style=authoryear,url=true,doi=true,sorting=nyt]{biblatex}
\addbibresource{pustaka.bib}
\DefineBibliographyStrings{english}{%
	urlseen = {diunduh pada},
}
\renewbibmacro{in:}{\xspace dalam:}
\renewbibmacro*{volume+number+eid}{%
	\printfield{volume}%
	%  \setunit*{\adddot}% DELETED
	\setunit*{\addnbspace}% NEW (optional); there's also \addnbthinspace
	\printfield{number}%
	\setunit{\addcomma\space}%
	\printfield{eid}}
\DeclareFieldFormat[article]{number}{\mkbibparens{#1}}

%----------------------------------------------------------------------------------------
%	ARTICLE INFORMATION
%----------------------------------------------------------------------------------------

\JournalInfo{Makalah Kolokium Program S1 Ilmu Komputer Alih Jenis} % Journal information
\Archive{Departemen Ilmu Komputer, FMIPA-IPB} % Departemen ILKOM-IPB

\PaperTitle{\judul} 

\Authors{\namaMhs (\nim)*, \namaDosen} % Penulis
\affiliation{*\scriptsize\textbf{Alamat Email}: \emailMhs \normalsize} % Corresponding author

\Keywords{\scriptsize \katakunci \normalsize} 
\newcommand{\keywordname}{Kata Kunci} % Defines the keywords heading name

\input{abstrak}

%----------------------------------------------------------------------------------------

\begin{document}

\flushbottom % Makes all text pages the same height

\maketitle % Print the title and abstract box

\thispagestyle{empty} % Removes page numbering from the first page

%----------------------------------------------------------------------------------------
%	BAGIAN PENDAHULUAN
%----------------------------------------------------------------------------------------

\input{pendahuluan}

%----------------------------------------------------------------------------------------
%	BAGIAN TINJAUAN PUSTAKA
%----------------------------------------------------------------------------------------

\input{tinjauan_pustaka}

%----------------------------------------------------------------------------------------
%	BAGIAN METODE
%----------------------------------------------------------------------------------------

\input{metode}

%----------------------------------------------------------------------------------------
%	BAGIAN DAFTAR PUSTAKA
%----------------------------------------------------------------------------------------

\renewcommand{\refname}{DAFTAR PUSTAKA}
\nocite{*}
\printbibliography

%----------------------------------------------------------------------------------------

\end{document}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bbE0KT
code,"\part*{چند چارچوب و ابزار توسعه}
\chapter*{چند چارچوب و ابزار توسعه}
در فصل‌های قبلی تا قبل از این فصل تقریباً سندباکسی که برای استفاده مد نظر داشتیم، کامل شد، یعنی به راحتی می‌توانید در آن وردپرس، جوملا یا دروپال را که سامانه‌های مدیریت محتوا هستند را نصب کنید. با این وجود اگر در پیدا کردن فصل‌های قبلی دچار مشکل هستید، می‌توانید پیوند به آنان را در پایان این نوشته مشاهده کنید و از طریق آنان به فصل‌های قبلی رجوع کنید. در فصل قبل به بررسی نحوهٔ نصب برخی ماژول‌ها و ابزار مورد نیاز پرداختیم و در آخر نحوهٔ نصب و استفاده از یک گیت‌سرور ساده و آسان برای مدیریت پروژه‌ها را بررسی کردیم. در فصل پنجم، پیشخوان را از طریق گیت مدیریت کرده و توانستیم به موارد مختلفی چون تاریخچه و … در گیت دسترسی داشته باشیم.

در این فصل چند ابزار و چارچوب کاری برای کار با پی‌اچ‌پی «PHP»  را معرفی می‌کنیم و چند ابزار برای رفع ایراد و اشکال‌زدایی از کدهایتان را نیز بررسی خواهیم کرد. این فصل آخرین فصل از این مجموعهٔ آموزشی است و بعد از این فصل قرار است نسخهٔ پی‌اچ‌پی این مجموعه که با استفاده اززی‌لاتک ایجاد شده است را در اختیار شما دوستان قرار خواهیم داد. این فصل به صورت متن‌باز خواهد بود و زمان عرضهٔ آن در اسرع وقت خواهد بود. با این وجود برخی تغییرات نیز در نسخهٔ پی‌دی‌اف ممکن است به وجود آید که طبیعی است.
\part*{نحوهٔ نصب و اجرای برخی چارچوب‌های کاری برای زبان پی‌آچ‌پی}
\section{چارچوب کاری سیمفونی «Symfony»}
این چارچوب‌کاری محبوب یک چارچوب‌کاری متن‌باز است که برای نوشتن نرم‌افزارهای مبتنی بر وب در زبان پی‌اچ‌پی کاربرد دارد. اگر از زبان پی‌اچ‌پی استفاده می‌کنید، به یقین نام این چارچوب‌کاری را نیز شنیده‌اید. این چارچوب افزون بر ویژگی‌های متنوعی که برای توسعه یک نرم‌افزار یا یک درگاه اطلاع‌رسانی یا حتی یک پایگاه اینترنتی قوی دارد، از انعطاف‌پزیری بالایی نیز برخوردار است.

در این قسمت قصد داریم این چارچوب‌کاری و هم چارچوب‌کاری کیک‌-پی‌اچ‌پی ر نصب کنیم، برای نصب سیمفونی می‌توان از چندین روش استفاده کرد که یکی از  این روش‌ها،  در این نوشته بررسی می‌شود.

سیمفونی (به انگلیسی: 
\lr{Symfony}
) یک چارچوب نرم‌افزاری تحت وب متن‌باز است که برای ساخت وب‌گاه‌ها پویا به‌کار می‌رود. این چارچوب که با زبان پی‌اچ‌پی نوشته شده‌است، کار توسعهٔ نرم‌افزار را در سنجش با کد نویسی از آغاز شتاب می‌بخشد. این شتاب‌بخشی توسط کتابخانه‌های این چارچوب انجام می‌شود که بسیاری از آنها کارهای رایج را بسادگی انجام می‌دهند. این چارچوب بر اساس مدل معماری مدل-نما-کنترل‌گر (به انگلیسی: 
\lr{MVC}
) کار می کند.این چارچوب پیاده سازی های شما را بر اساس بسته های (به انگلیسی: 
\lr{bundle}
) ایجاد کرده پیش خواهد برد و شما نیز می تواند از هزاران بسته نوشته شده متن باز دیگران در پروژه خود استفاده کنید. 
\begin{flushleft}
    (ویکی‌پدیا، دانشنامه آزاد)
\end{flushleft}

برای نصب این چارچوب‌کاری ما از ابزار «composer» استفاده می‌کنیم، اگر این ابزار در توزیع شما نصب نیست به قسمت پنجم این مجموعهٔ آموزشی مراجعه کرده و آن را نصب کنید. برای نصب آن از طریق «composer» دستورات زیر را در خط فرمان اوبونتو سرور، اجرا کنید.
\newline

\begin{latin}  
    \lstinputlisting[numbers=right,language=SH, framexleftmargin=5mm, frame=shadowbox,rulesepcolor=\color{Black}]{Code/framework.sh}
\end{latin}

سپس هر آنچه را که از شما پرسیده می‌شود را مطابق موردی که در زیر آمده است، پر کنید. در این تنظیمات می‌توانید از پایگاه داده‌ای جدا همنام با سیمفونی استفاده کنید که پیشنهاد ما نیز همین است، با این حال می‌توانید از کاربر و پایگاه‌دادهٔ سندباکس که در قسمت‌های قبلی ساخته‌ایم استفاده کنید.
\newline

\begin{latin}  
    \lstinputlisting[numbers=right,language=SH, framexleftmargin=5mm, frame=shadowbox,rulesepcolor=\color{Black}]{Code/framework.txt}
\end{latin}

سپس باید پروندهٔ 
\path{«ap_dev.php»} 
را از داخل پوشهٔ سیمفونی گشوده و مقادیر زیر را جایگزین آن نمایید. در این پرونده تغییراتی را اعمال کرده‌ایم، که فقط زمانی که از 
\path{«sandbox.dev»}
 به عنوان آدرس برای ورود به صفحهٔ مدیریت و توسعه سیمفونی شدیم، محیط چارچوب‌کاری سیمفونی اجرا شود. برای همین دیگر شروط که ممکن است نرم‌افزار را دچار مشکل کند را حذف کرده‌ایم.

برای ایجاد تغییرات در آن، ابتدا باید نرم‌افزار اتم «Atom» یا هر ویرایشگر یا محیط توسعه‌ای را که دوست دارید را اجرا کنید  و پوشهٔ «symfony» که در پوشهٔ  سندباکس «Sandbox»  قرار دارد را در آن نرم‌افزار بگشایید. به عنوان مثال در تصویر \ref{ATOM-FRAMEWORK} ویرایشگر اتم «Atom» را مشاهده می‌کنید. 

\begin{latin}  
    \lstinputlisting[numbers=right,language=PHP, framexleftmargin=5mm, frame=shadowbox,rulesepcolor=\color{Blue}]{Code/symfony-conf.php}
\end{latin}
\begin{figure}
    \includegraphics[width=.9\textwidth ,height=.65\textwidth]{Pic/FRAME-WORK-ATOM}
    \caption{ ویرایش تنظیمات سیمفونی 
        \lr{Symfony's Config file | }   
    }
    \label{ATOM-FRAMEWORK}
\end{figure}

بعد از این تغییرات اگر به آدرس زیر مراجعه کنید با صفحه‌ای مشابه با تصویر مواجه شده و بعد از آن به راحتی خواهید توانست از این چارچوب‌کاری برای توسعه نرم‌افزارهای پی‌اچ‌پی و یا پایگاه‌های اینترنتی خود استفاده کنید. کاربرد این چارچوب‌کاری بسیار گسترده است، اگر از مطلبی برای آموزش و یادگیری این چارچوب‌‌کاری بهره می‌گیرید، نیاز به محیطی برای نوشتن کد و یادگیری دارید.   بنابراین با استفاده از این سندباکس می‌توانید این چارچوب را نیز فرا بگیرید.
\newline
\begin{latin}  
    \lstinputlisting[numbers=right,language=SH, framexleftmargin=5mm, frame=shadowbox,rulesepcolor=\color{Black}]{Code/symfony-url.txt}
\end{latin}

\begin{figure}
    \includegraphics[width=.9\text",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",MoxZqi
code,"\documentclass[convert, tikz]{standalone}
\usepackage{xcolor}
\begin{document}
\pagecolor[RGB]{255,255,254}
  \begin{tikzpicture}[scale=0.2]
    \begin{scope}
      \foreach \i in {0,...,3}{
        \draw[fill=red,ultra thick] (4*\i,12) rectangle (4*\i+4,16);
       }
      \draw[fill=red] (20,15) rectangle (36,16);
      \foreach \i in {0,...,3}{
        \draw[fill=red,ultra thick] (20+4*\i,12) rectangle (20+4*\i+4,16);
       }
      \foreach \i in {0,...,3}{
        \foreach \j in {0,...,3}{
          \draw[fill=red,ultra thick] (39+4*\i,4*\j) rectangle (43+4*\i,4*\j+4);
        }
       }
      \draw(0,0) grid(16,16);
      \draw(20,0) grid(36,16);
      \draw(39,0) grid(55,16);
      \node[right] at (16,8) {$=$};
      \node[right] at (36,8) {$\times$};
    \end{scope}
  \end{tikzpicture}
\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OVerVM
code,"\section{Chopper\_simple: An ideal chopper}
\index{Optics!lens}
\mcdoccomp{optics/Chopper_simple.parms}
\texttt{Chopper\_simple} is an idelized version of a chopper with a rectangular chopper opening which may open
instantly and has no side-scattering etc.

It models the chopper with a blocking infinitely thin aperture which becomes transparent
in the time interval $t\in\left[\mathit{t0},\mathit{t0}+\tau\right]$.
This is an idelized version of a chopper where the chopper opening is rectangular which may open
instantly (if \textit{t\_rise}$=0$, the default). For nonzero rise time the aperture simply becomes gradually less opaque
for $t\in\left[\mathit{t0}-\textit{t\_rise},\mathit{t0}\right]$.

For correct normalization of intesity a chopper period, \textit{T}, must also be set.

\textit{is\_first} is useful when using \textbf{Chopper\_simple} with continous sources who inherently have no time-dependence. Thus the emission time of the photon
ray is arbitrary, and the chopper defines the temporal signature of the beam,
i.e. it simply sets the time-parameter of the photon ray randomly in the
opening window of the chopper. Naturally this should only be used for the \emph{first} chopper
element in a simulation.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",SAC7aT
code,"\documentclass[a4paper, 12pt]{scrartcl}

% !TeX spellcheck = de_AT

\usepackage[utf8]{inputenc}
\usepackage[a4paper, total={7in, 10in}]{geometry}
\usepackage[ngerman]{babel}
\usepackage[T1]{fontenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{setspace}
\usepackage[normalem]{ulem}
\usepackage{fancyhdr}
\usepackage{datetime}
\usepackage[style=verbose]{biblatex}
\usepackage{systeme} %for math sys o. equ.
\usepackage{float} %needed to display images
\usepackage{ifthen,xcolor} %somehow needed for tabs
\usepackage{pdfpages} %for importing pdfs
\usepackage{longtable} %for long tables
\usepackage{tabu}%for long tables
\usepackage{footnote}

\newlength{\tabcont} %something with tabs


%systeme config
\sysdelim..
\syslineskipcoeff{1.2}\setlength{\tabskip}{3pt}

\newcommand{\displayauthor}[1]{
	{\small\textit{verfasst von: {#1}}}
}

\newcommand{\blank}[1]{\hspace*{#1}\linebreak[0]}
%user defined commands
\newcommand{\tab}[1]{
	% weils sonst anscheinend keinen tab gibt in latex
	% verwenden:
	% \tab{1} \tab{2}
	% \tab{3} \tab{4}
	% gibt:
	% 1    2
	% 3    4
	\settowidth{\tabcont}{#1}
	\ifthenelse{\lengthtest{\tabcont < .25\linewidth}}
	{\makebox[.25\linewidth][l]{#1}\ignorespaces}
	{\makebox[.5\linewidth][l]{#1}\ignorespaces}
}

\newcommand{\displaycode}[1] {
	% fallst mal versuchst, code mit syntax-highlighting darzustellen:
	% geht anscheinend nicht in makros, da diese code-interpreter
	% angeblich über sich gegenseitig drüberstolpern, habs weder mit
	% 'listings' noch mit 'minted' zum laufen kriegt...
	% is a ziemlicher müll, mach lieber screenshots und füg die ein
	{\fontfamily{qcr}\selectfont #1}
}

\newcommand{\displayownimageg}[3]{
	% wieder gschissen, aber hängt einen Verweis
	% auf den Bildinhaber an
	\displayownimage{#1}{#2}{#3}{0.9}
}

\newcommand{\displayimageg}[2]{
	% oida in latex kamma 'commands' mit untersch. parameteranzahl
	% nicht gleich nennen... ich nenn das jetzt _g für gschissen
	% 0.9 is halt meine standardeinstellung, schaut nicht so deppat
	% aus wie 1, aber ma sieht noch was
	\displayimage{#1}{#2}{#2}{0.9}
}

\newcommand{\displayownimage}[4]{
	\displayimage{#1}{#2}{#2 (Quelle: #3)}{#4}
}

\newcommand{\displayimage}[4]{
	\begin{figure}[H]
	\begin{center}
		\includegraphics[width=#4\textwidth]{#1}
		\caption[#3]{#2} % könnt nützlich werden für das was der schaupp gsagt hat
	\end{center}
	\end{figure}
}

\newcommand{\citebrackets}[1]{
	% wennst iwas zitierst bitte die funktion verwenden. wieder ausm
	% gleichen grund: zentralisieren, wenn iwas net passt, hier ändern
	<<#1>>
}

\newcommand{\makeowntitle}{
	\begin{titlepage}
		\centering
		{\scshape\Large {HTBL Hollabrunn}\\}
		{\scshape\large {Höhere Lehranstalt für Wirtschaftsingenieure}\\}
		{\scshape\normalsize Ausbildungsschwerpunkt Betriebsinformatik\\}
		
		\vspace{4.5cm}
		
		{\huge \textbf{EPIC}}\\
		\vspace{1cm}
		{\LARGE \textbf{Electronic Programmable Intelligent Calculator}}\\
		\vspace{1.5cm}
		%\vfill
		{\Large Michael Friesenhengst, Florian Weinzerl}\\
		\vspace{0.5cm}
		{\Large Betreuer: Ing. Leopold Mayer MBA StR}\\
		\vspace{1.5cm}
		{\large \today}
	\end{titlepage}
}

%add refs
\addbibresource{ref/sachsenschnitzel_references.bib}
\addbibresource{ref/frequem_references.bib}

%\addcontentsline{toc}{section}{Literatur} wemma die Literatur im toc haben wollen, müsst aber noch getweak't werden

\newdateformat{myformat}{\THEDAY{ten }\monthname[\THEMONTH], \THEYEAR}
\pagestyle{fancy}
\fancyhf{}
\rhead{Florian Weinzerl, Michael Friesenhengst}
\lhead{\leftmark}

\DeclareGraphicsExtensions{.pdf,.png,.jpg,.jpeg}
\onehalfspacing

\begin{document}

\makeowntitle
\newpage
\include{Eidesstattliche_Erklaerung}
\includepdf[pages={1,2}]{ext/HTL_RDP_Dokumentation_DA_DE_A4.pdf}
\includepdf[pages={1,2}]{ext/HTL_RDP_Dokumentation_DA_EN_A4.pdf}

\tableofcontents
\newpage

\setcounter{page}{1}
\cfoot{\thepage}

\include{Chapter_Intro}
\include{Chapter_Bedienungsanleitung}
\include{Chapter_Shit}
\include{Chapter_Hard}
\include{Chapter_Soft}
\include{Chapter_Marketing}
\include{Chapter_Dank}
\include{Chapter_Time}

\listoffigures
\newpage
\printbibliography

\end{document}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uiO5N7
code,"% \documentclass[10pt]{scrartcl}
\documentclass[10pt,twocolumn]{scrartcl}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[ngerman]{babel}

\usepackage{amsmath}
\usepackage{amssymb}

\usepackage{graphicx}
\usepackage{tabularx}
\usepackage{authoraftertitle}

\setlength{\parindent}{0cm}
\setlength{\parskip}{3mm}
\setlength{\textheight}{23.8cm}
\setlength{\headheight}{1cm}
\setlength{\topmargin}{-10mm}

\setlength{\oddsidemargin}{0cm}
\setlength{\evensidemargin}{0cm}
\setlength{\textwidth}{16cm}
\setlength{\columnsep}{8mm}

\usepackage{multicol}
\usepackage{colortbl}
\usepackage{xcolor}
\definecolor{grau}{gray}{0.95}
\definecolor{dunkelgrau}{gray}{0.85}

\usepackage[normal]{caption}
\usepackage{lipsum}

\setlength{\parindent}{5mm}
\setlength{\parskip}{0mm}

\usepackage{float}
\restylefloat{figure}

\renewcommand{\topfraction}{0.75}
\renewcommand{\textfraction}{0.2}

%###########################################################
% die Sachen mit der Kopfzeile
\usepackage{lastpage}
\usepackage{fancyhdr}
\fancyhf{} % leere alle Felder
\fancyhead[R]{\footnotesize Phillip Schichtel: phillip.dhbw@schich.tel \\ Jonas Dann: jonas.chr.dann@gmail.com}
\fancyhead[L]{\footnotesize Ausgewählte Methoden der
Datenanalyse, \\ Modellierung und Simulation - Schattenberechnung} % Titel des Aufsatzes
\fancyfoot[C]{\footnotesize \thepage/\pageref{LastPage}}
% \fancyfoot[C]{\footnotesize \thepage}
\renewcommand{\headrulewidth}{0.4pt} % obere Trennlinie
\pagestyle{fancy}
%###########################################################

\title{Schattenberechnung im zweidimensionalen Raum}

\newcommand{\ownsection}[1]{\begin{center}\LARGE\bf#1\end{center}}

\begin{document}

\twocolumn[
\ownsection{\MyTitle}

\begin{center}
Phillip Schichtel (phillip.dhbw@schich.tel) \\
Jonas Dann (jonas.chr.dann@gmail.com) \\
Mannheim, November \the\year
\end{center}
\vspace*{5mm}
]

% \begin{multicols}{2}

\input{content/intro.tex}
\input{content/methods.tex}
\input{content/execution.tex}
\input{content/results.tex}
\input{content/discussion.tex}


\begin{thebibliography}{99}
\bibitem{monaco2014}Monaco: {\it http://www.monacoismine.com/} 22.11.2014
\bibitem{raytracing2014}Wikipedia\,Raytracing: {\it http://de.wikipedia.org/wiki/Raytracing} 22.11.2014
\bibitem{shadowmap2014}Wikipedia\,Shadow\,Mapping: {\it http://de.wikipedia.org/wiki/Shadow\_Mapping} 22.11.2014
\bibitem{shadowvol2014}Wikipedia\,Shadow\,Volume: {\it http://en.wikipedia.org/wiki/Shadow\_volume} 22.11.2014
\end{thebibliography}

\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BLWD6z
code,"\documentclass[a4paper]{book}
\usepackage[english]{babel}						% Correct English hyphenation
\usepackage[utf8]{inputenc}					    % Allow for non-English letters
\usepackage{graphicx}							% To include graphics
%\usepackage{natbib}								% Correct citations
\usepackage{geometry} 							% Better geometry
%\usepackage[center]					            % For cropping documents
\usepackage[numbers]{natbib}	
\usepackage[parfill]{parskip}
\usepackage{nameref}
\PassOptionsToPackage{hyphens}{url}\usepackage{hyperref}
\usepackage{float}
\restylefloat{table}

% Author
\newcommand{\thesisAuthor}{Christian Rasmussen}
\newcommand{\thesisTitle}{Finding Related Web Pages for Course \mbox{Material} Based on its Content}
\newcommand{\thesisType}{Specialization project}
\newcommand{\thesisDate}{fall 2013}

% PDF info
\hypersetup{pdfauthor={\thesisAuthor}}
\hypersetup{pdftitle={\thesisTitle}}
\hypersetup{pdfsubject={\thesisType}}

% Citation format
%\bibliographystyle{apalike}
%\bibpunct{[}{]}{;}{a}{,}{,}
\bibliographystyle{unsrtnat}

\mathchardef\mhyphen=""2D
\newcommand\tf{\mathit{tf}}
\newcommand\df{\mathit{df}}
\newcommand\idf{\mathit{idf}}
\newcommand\tfidf{\mathit{tf\mhyphen idf}}


\begin{document}

\begin{titlepage}

\noindent {\large \textbf{\thesisAuthor}}
\vspace{2cm}

\noindent {\Huge \thesisTitle}
\vspace{2cm}

\noindent \thesisType, \thesisDate 
\vspace{2cm}

\noindent Information Systems Group \\
Department of Computer and Information Science \\
Faculty of Information Technology, Mathematics and Electrical Engineering

\vfill

\begin{center}
\includegraphics[width=3cm]{figs/ntnu_logo.pdf}
\end{center}

\end{titlepage}

% ---

\thispagestyle{empty}

\cleardoublepage

\frontmatter

\section*{Abstract}

This report is about finding related web pages for course material based on its contents. The course material comes from a wiki in the subject named ``TDT4100 -- Objektorientert programmering med Java'' (TDT4100 -- Object-oriented programming with Java).

By embedded related web pages into each page of the wiki, the students have easier access to useful information.

The goal of this project is implement a proof-of-concept that is able to find the related web pages (without embedding them into the wiki).

By using an information retrieval method called term frequency--inverse document frequency ($\tfidf$) I am able to find important words in a document. These words are used in a search query that searches the web.

The proof-of-concept is used to perform multiple experiments on a few selected documents. For each experiment the implementation outputs a list of links to web pages. These links are then evaluated by the author of this report as well as a committee.

The results indicate that the approach has some potential, but because the experiments were performed on well-chosen documents, the approach might not perform as well on other documents.

\clearpage

% ---

\section*{Preface}

This is the project report for the subject ``TDT4501 -- Specialization project'', fall 2013. The project is conducted by Christian Rasmussen who is studying Computer Science at Norwegian University of Science and Technology (NTNU).

This project was completed under the supervision of Associate Professor \mbox{Hallvard} \mbox{Trætteberg}.

A basic understanding of information retrieval is necessary to get the most out of this report.

\vfill

\hfill \thesisAuthor\par
\hfill Trondheim, \today\par

\clearpage

%---

\tableofcontents

%---

\listoffigures

%---

\listoftables

%---

\mainmatter

\chapter{Introduction}
\label{cha:introduction}

This chapter describes the background and motivation for the project, followed by the project's goals, and lastly, how I will try to accomplish these goals.

\section{Background and Motivation}
\label{sec:backgroundAndMotivation}

This project is based on the course material from the subject ``TDT4100 -- Objektorientert programmering med Java'' (TDT4100 -- Object-oriented programming with Java). This subject has its own wiki\footnote{The wiki is available at: \url{https://www.ntnu.no/wiki/display/tdt4100/Faginnhold}}, henceforth referred to as ``the wiki''. The contents of this wiki are written in Norwegian.

The wiki is a tool for students to learn the curriculum of the subject TDT4100. The information on the wiki is structured hierarchically and divided into four main categories:
\begin{itemize}
\item Object-oriented programming
\item Java-programming
\item Eclipse
\item Procedure-oriented programming
\end{itemize}

To make the wiki more useful for the students, this project will look into ways to find related web pages for the various articles. By embedding the links in their respective article, the students get easy access to more information about the same topic. Ideally, the process of finding and embedding web pages should be done automatically by software and not manually by the authors of the wiki.

Even though this project is based on a specific wiki, the theory and methods could be applied to other wikis as well.

\section{Goals and Research Questions}
\label{sec:goalsAndResearchQuestions}

As stated earlier, this p",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",X2iXLg
code,"\Sconcordance{concordance:GESISsusc2015_Day5.tex:GESISsusc2015_Day5.Rnw:%
1 143 1 49 0 1 10 65 1 2 0 254 1 4 0 27 1 5 0 31 1 3 0 32 1 1 9 13 %
1 9 0 8 1 14 0 41 1 4 0 64 1}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5zasMr
code,"\hypertarget{classSimulation}{}\section{Simulation Class Reference}
\label{classSimulation}\index{Simulation@{Simulation}}


Class containing all \hyperlink{classEnvironment}{Environment} objects, as well control-\/flow attributes for the simulation.  




{\ttfamily \#include $<$Simulation.\+hpp$>$}

Inheritance diagram for Simulation\+:\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=4.000000cm]{classSimulation}
\end{center}
\end{figure}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{classSimulation_ae902fd16a0f0c24d3b49c96cead9fcf9}\label{classSimulation_ae902fd16a0f0c24d3b49c96cead9fcf9}} 
{\bfseries Simulation} (vector$<$ \hyperlink{classEnvironment}{Environment} $>$ \+\_\+env)
\item 
\mbox{\Hypertarget{classSimulation_a44dc929698224fbf195b9d9936fae82a}\label{classSimulation_a44dc929698224fbf195b9d9936fae82a}} 
bool {\bfseries get\+Complete\+Start} ()
\item 
\mbox{\Hypertarget{classSimulation_adca9200350aad6630085d6f50ef910f3}\label{classSimulation_adca9200350aad6630085d6f50ef910f3}} 
void {\bfseries set\+Complete\+Start} (bool new\+Val)
\item 
\mbox{\Hypertarget{classSimulation_a31e406c0ad5849a8e6496393ccbb3483}\label{classSimulation_a31e406c0ad5849a8e6496393ccbb3483}} 
bool {\bfseries get\+Complete\+End} ()
\item 
\mbox{\Hypertarget{classSimulation_a0e8a32be7804eca80992fa6d1d27b0be}\label{classSimulation_a0e8a32be7804eca80992fa6d1d27b0be}} 
void {\bfseries set\+Complete\+End} (bool new\+Val)
\item 
\mbox{\Hypertarget{classSimulation_a0cf743fa59385016d9e699fb0093317c}\label{classSimulation_a0cf743fa59385016d9e699fb0093317c}} 
int {\bfseries get\+Num\+Steps} ()
\item 
\mbox{\Hypertarget{classSimulation_a68c66b40439322e4bda57eaa11386ce6}\label{classSimulation_a68c66b40439322e4bda57eaa11386ce6}} 
void {\bfseries set\+Num\+Steps} (int new\+Val)
\item 
\mbox{\Hypertarget{classSimulation_a57f25582cd263d9739e9d72e75832a67}\label{classSimulation_a57f25582cd263d9739e9d72e75832a67}} 
int {\bfseries get\+Save\+Div} ()
\item 
\mbox{\Hypertarget{classSimulation_a5346ad2601beff7e3918e25dd667ab4b}\label{classSimulation_a5346ad2601beff7e3918e25dd667ab4b}} 
void {\bfseries set\+Save\+Div} (int new\+Val)
\item 
\mbox{\Hypertarget{classSimulation_a0110a1fad0e2390ea90fa387fe09cbdc}\label{classSimulation_a0110a1fad0e2390ea90fa387fe09cbdc}} 
vector$<$ \hyperlink{classEnvironment}{Environment} $>$ $\ast$ {\bfseries get\+Envs} ()
\item 
\mbox{\Hypertarget{classSimulation_a8223c6354f021efcb667815fbd0682c0}\label{classSimulation_a8223c6354f021efcb667815fbd0682c0}} 
void {\bfseries add\+Env} (\hyperlink{classEnvironment}{Environment} new\+Val)
\item 
virtual int \hyperlink{classSimulation_a7eb16da89581b496d33b77efbb63b9cd}{run\+Sim} (int run\+Number)
\begin{DoxyCompactList}\small\item\em Method that runs the main loop of the simulation. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Protected Attributes}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{classSimulation_a999ce13c1a3d4dca2bf92e346d8b709f}{num\+Steps}
\item 
int \hyperlink{classSimulation_ae8f095e92da49a648954416b351e27c8}{save\+Div}
\item 
bool \hyperlink{classSimulation_a84cd73f44cff4fdbbb40fb98b49f8026}{complete\+Start} = false
\item 
bool \hyperlink{classSimulation_a17bcf189d0f10fa47e4b2dc4b53d4939}{complete\+End} = false
\item 
vector$<$ \hyperlink{classEnvironment}{Environment} $>$ \hyperlink{classSimulation_a29309017ca18043de245ef843b56c533}{envs}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Class containing all \hyperlink{classEnvironment}{Environment} objects, as well control-\/flow attributes for the simulation. 

The \hyperlink{classSimulation}{Simulation} class contains all \hyperlink{classEnvironment}{Environment} objects. It updates them each time\+Step, and is also in charge of deciding when to save what (for all save types). 

\subsection{Member Function Documentation}
\mbox{\Hypertarget{classSimulation_a7eb16da89581b496d33b77efbb63b9cd}\label{classSimulation_a7eb16da89581b496d33b77efbb63b9cd}} 
\index{Simulation@{Simulation}!run\+Sim@{run\+Sim}}
\index{run\+Sim@{run\+Sim}!Simulation@{Simulation}}
\subsubsection{\texorpdfstring{run\+Sim()}{runSim()}}
{\footnotesize\ttfamily int Simulation\+::run\+Sim (\begin{DoxyParamCaption}\item[{int}]{run\+Number }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Method that runs the main loop of the simulation. 


\begin{DoxyParams}{Parameters}
{\em run\+Number} & ID of the current run of the simulation. \\
\hline
\end{DoxyParams}


Reimplemented in \hyperlink{classMultiSimulation_a235347d04fd0c7e1a2e35d7a39e77583}{Multi\+Simulation}, \hyperlink{classMultiEvoSimulation_a89c9806ac998c06230cdd41cc6a532bf}{Multi\+Evo\+Simulation}, \hyperlink{classE2MSimulation_aeac4e92c10f89a5c953ace5b1327d20b}{E2\+M\+Simulation}, \hyperlink{classEvoSimulation_aa43aa351dec24c638e56995a67a4f0f5}{Evo\+Simulation}, \hyperlink{classE2Simulation_a28028881fd443d2445b562512cb2169c}{E2\+Simulation}, \hyperlink{classMultiEcoSimulation_ad490e089c083d06d80c62af9e1564ac3}{Multi\+Eco\+Simulation}, and \hyperlink{classEcoSimulation_a72ec5e7dffb4231b2cb363b6327",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",udRcce
code,"\documentclass{beamer}
\mode<presentation> 
{
	\usetheme[alternativetitlepage]{Torino}
	\usecolortheme{chameleon}
	\setbeamercovered{transparent}	
}
\usepackage{ucs}
\usepackage[utf8x]{inputenc}
\usepackage[english]{babel}
\usepackage{palatino}
\usepackage{graphicx}
\usepackage{epstopdf}
\usepackage{color}
\usepackage[export]{adjustbox}
\usepackage{multicol}
\usepackage{hyperref}
\usepackage{subcaption}
\usepackage{caption}
\usepackage[]{algorithm2e}
\usepackage{amsmath}

\captionsetup{labelformat=empty,labelsep=none}


\definecolor{olive}{RGB}{51, 149, 48}
\definecolor{red}{RGB}{195, 2, 36}

\definecolor{gred}{RGB}{196, 66, 48}
\definecolor{glime}{RGB}{168, 189, 4}
\definecolor{ggreen}{RGB}{57,181,74}

\title{\textbf{IMCGP}}
\author{
	\large{Pavel Macenauer} \\ 
	\tiny{xmacen02@stud.fit.vutbr.cz}
}
\date{\tiny{\today}}
\institute[FIT VUTBR]
{
	\inst{}
	Faculty of Information Technology \\
	Brno University of Technology
}

\begin{document}

	\begin{frame}[t,plain]
	\titlepage
	\tableofcontents[currentsection]
	\vspace{-10mm}
	\center{ \includegraphics[height=9mm]{logo.eps} }
	\end{frame}

	
	%% -----------------------------
	
	% Goals
	% CUDA architecture and GPU
	% Waldboost, LBP and object detection
	% Implementation
	% Future work
	
	\begin{frame}[t,fragile]
		\frametitle{What's IMCGP?}
		
		\begin{itemize}
			\item A C++/GPU accelerated CGP (Cartesian Genetic Programming) library for improving the quality of damaged images using filters.		
			\item C++ and CUDA implementation
			\item CMake
		\end{itemize}		 
		
	\end{frame}

	%% ------------------------------	

	\begin{frame}[t,fragile]
		\frametitle{Features}
		
		\begin{itemize}

			\item CUDA implementation is 10-12x faster on Quadro K1000M (192 CUDA cores), than Intel Core i7 (2.3 GHz), but only works for NVIDIA cards
			\item image: 256x256, population: 5, generations: 30000 - 5 minutes
			\item 3x3, 5x5 image kernels
			\item fitness methods: MDPP, PSNR, MSE
			\item repo: \url{https://github.com/mmaci/vutbr-fit-bio-cgp-image-filters}
			\item docs: \url{http://imcgp.maciste.cz}
			\item win32 bin: \url{http://imcgp.maciste.cz/imcgp_bin.zip}
		\end{itemize}							
			
	\end{frame}
	
	\begin{frame}[t,fragile]
		\frametitle{Measurements}
		
		\begin{itemize}		
			\item runs: 12, generations: 30000, population: 5
			\item Salt \& Pepper Noise, Speckle Noise, Random Impulse Burst Noise
		\end{itemize}		 
		
		Fitness methods used:
		
		\begin{itemize}
		\item
		$ MDPP = \frac{\sum_{i=1}^{width} \sum_{i=1}^{height} (orig(i,j) - ref(i,j))}{width \cdot height}$
		\item
		$ PSNR = 10 \cdot \log(255 \cdot \frac{255 \cdot width \cdot height}{\sum_{i=1}^{width} \sum_{i=1}^{height} (orig(i,j) - ref(i,j))^2})$
		\item
		$ MSE = \frac{\sum_{i=1}^{width} \sum_{i=1}^{height} (orig(i,j) - ref(i,j))^2}{width \cdot height}$
		\end{itemize}
		

	\end{frame}
	
	%% ------------------------------

	\begin{frame}[t,fragile]
		\frametitle{Sample results - Salt \& Pepper 5\%}
		
		\begin{columns}[onlytextwidth]
			\begin{column}{0.3\textwidth}
				\includegraphics[width=\textwidth]{img/original5.jpg}
				\vspace{3.5mm}
				\scriptsize
				\begin{itemize}
					\item 5x5 kernel has a slight blurry effect
					\item both 3x3 and 5x5 kernels have good results
				\end{itemize}
			\end{column}

			\begin{column}{0.6\textwidth}
				\includegraphics[width=\textwidth]{img/best5.jpg}
			\end{column}
		\end{columns}
			
	\end{frame}	
	
	%% --------------------------
	
		\begin{frame}[t,fragile]
		\frametitle{Sample results - Salt \& Pepper 25\%}
		
		\begin{columns}[onlytextwidth]
			\begin{column}{0.3\textwidth}
				\includegraphics[width=\textwidth]{img/original25.jpg}
				\vspace{3.5mm}
				\scriptsize
				\begin{itemize}
					\item only 5x5 performs well
					\item MDPP: sharpest, but preserves dots
					\item PSNR: blurs
					\item MSE: more blur, tends to average
				\end{itemize}
			\end{column}

			\begin{column}{0.6\textwidth}
				\includegraphics[width=\textwidth]{img/best25.jpg}
			\end{column}
		\end{columns}
			
	\end{frame}	
	
	%% ------------------------------

	\begin{frame}[t,fragile]
	\frametitle{Fitness - MDPP (3x3 kernel, 5\% Salt \& Pepper)}					
	\begin{center}
	\includegraphics[width=0.9\textwidth]{img/mdpp_3x3_5sp.png}
	
	\end{center}
	\end{frame}
	
		%% ------------------------------

	\begin{frame}[t,fragile]
	\frametitle{Fitness - MDPP (5x5 kernel, 25\% Salt \& Pepper)}					
	\begin{center}
	\includegraphics[width=0.9\textwidth]{img/mdpp_5x5_25sp.png}
	
	\end{center}
	\end{frame}
	
		%% ------------------------------

	\begin{frame}[t,fragile]
	\frametitle{Fitness - PSNR (3x3 kernel, 5\% Salt \& Pepper)}					
	\begin{center}
	\includegraphics[width=0.9\textwidth]{img/psnr_3x3_5sp.png}
	
	\end{center}
	\end{frame}
	
		%% ------------------------------

	\begin{frame}[t,fragile]
	\frametitle{Fitness - PSNR (5x5 kernel, 25\% Salt \& Pepper)}					
	\begin{center}
	\includegraphics[width=0.9\textwidth]{img/psnr_5x5_25sp.png}
	
	\end{center}
	\end{frame}
	
		%% ------------------------------

	\begin{frame}[t,fragile]
	\frametitle{Fitness - MSE (3x3 kernel, 5\% Salt \& Pepper)}	",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Zy-oq1
code,"

%*******************************************************
% This program is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program.  If not, see <http://www.gnu.org/licenses/>.
%************************************************
\chapter{Conclusion}
\label{ch:conclusion}
%************************************************

\begin{flushright}
{\slshape Lorem ipsum dolor sit amet, consectetuer adipiscing.}\\
{\slshape Aenean commodo ligula eget dolor. Aenean massa.}\\
% This generate dummy text. Remove this line and replace by your quote.
\medskip
--- John Doe,\\
Unified Theory of the Important Theories,\\
{\slshape An Important Journal},\\
Vol.~123, pp.~1234--1243, Dec.~2016.\\
\end{flushright}

\bigskip

\section{Introduction}
\label{sec:ch_6_introduction}

This is a topic sentence followed by explanation, elaboration and examples to summarise chapter 2. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

\section{First main stuff}
\label{sec:ch_6_firstmain}

This is a topic sentence followed by explanation, elaboration and examples to summarise chapter 3. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

\section{Second main stuff}
\label{sec:ch_6_secondmain}

This is a topic sentence followed by explanation, elaboration and examples to summarise chapter 4. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

\section{Third main stuff}
\label{sec:ch_6_thirdmain}

This is a topic sentence followed by explanation, elaboration and examples to summarise chapter 5. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

\section{Contributions}
\label{sec:ch_6_fourthmain}

This is a topic sentence followed by explanation, elaboration and examples to summarise contributions. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

\section{Future directions}
\label{sec:ch_6_forward}

This is a topic sentence followed by explanation, elaboration and examples to summarise the above three subsections. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples for this paragraph. The last sentence of this paragraph shall introduce the next paragraph. \lipsum[1]

This is a topic sentence followed by explanation, elaboration and examples to introduce the next chapter. The last sentence of this paragraph shall conclude the thesis. \lipsum[1]



%*****************************************
%*****************************************
%****************************",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",i71Uji
code,"\hypertarget{dir_f1dd7b80b3f807d25a8b0bfc7fde9160}{}\section{/home/network/\+N\+S\+O\+L/ndn\+S\+I\+M-\/dev/ns-\/3/src/ndn\+S\+I\+M/tests/unit-\/tests Directory Reference}
\label{dir_f1dd7b80b3f807d25a8b0bfc7fde9160}\index{/home/network/\+N\+S\+O\+L/ndn\+S\+I\+M-\/dev/ns-\/3/src/ndn\+S\+I\+M/tests/unit-\/tests Directory Reference@{/home/network/\+N\+S\+O\+L/ndn\+S\+I\+M-\/dev/ns-\/3/src/ndn\+S\+I\+M/tests/unit-\/tests Directory Reference}}
\subsection*{Directories}
\begin{DoxyCompactItemize}
\item 
directory \hyperlink{dir_fea875d3faaf04f8296ac7c0f811d925}{utils}
\end{DoxyCompactItemize}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sZaF1E
code,"% GNUPLOT: LaTeX picture with Postscript
\begingroup
  \makeatletter
  \providecommand\color[2][]{%
    \GenericError{(gnuplot) \space\space\space\@spaces}{%
      Package color not loaded in conjunction with
      terminal option `colourtext'%
    }{See the gnuplot documentation for explanation.%
    }{Either use 'blacktext' in gnuplot or load the package
      color.sty in LaTeX.}%
    \renewcommand\color[2][]{}%
  }%
  \providecommand\includegraphics[2][]{%
    \GenericError{(gnuplot) \space\space\space\@spaces}{%
      Package graphicx or graphics not loaded%
    }{See the gnuplot documentation for explanation.%
    }{The gnuplot epslatex terminal needs graphicx.sty or graphics.sty.}%
    \renewcommand\includegraphics[2][]{}%
  }%
  \providecommand\rotatebox[2]{#2}%
  \@ifundefined{ifGPcolor}{%
    \newif\ifGPcolor
    \GPcolorfalse
  }{}%
  \@ifundefined{ifGPblacktext}{%
    \newif\ifGPblacktext
    \GPblacktexttrue
  }{}%
  % define a \g@addto@macro without @ in the name:
  \let\gplgaddtomacro\g@addto@macro
  % define empty templates for all commands taking text:
  \gdef\gplbacktext{}%
  \gdef\gplfronttext{}%
  \makeatother
  \ifGPblacktext
    % no textcolor at all
    \def\colorrgb#1{}%
    \def\colorgray#1{}%
  \else
    % gray or color?
    \ifGPcolor
      \def\colorrgb#1{\color[rgb]{#1}}%
      \def\colorgray#1{\color[gray]{#1}}%
      \expandafter\def\csname LTw\endcsname{\color{white}}%
      \expandafter\def\csname LTb\endcsname{\color{black}}%
      \expandafter\def\csname LTa\endcsname{\color{black}}%
      \expandafter\def\csname LT0\endcsname{\color[rgb]{1,0,0}}%
      \expandafter\def\csname LT1\endcsname{\color[rgb]{0,1,0}}%
      \expandafter\def\csname LT2\endcsname{\color[rgb]{0,0,1}}%
      \expandafter\def\csname LT3\endcsname{\color[rgb]{1,0,1}}%
      \expandafter\def\csname LT4\endcsname{\color[rgb]{0,1,1}}%
      \expandafter\def\csname LT5\endcsname{\color[rgb]{1,1,0}}%
      \expandafter\def\csname LT6\endcsname{\color[rgb]{0,0,0}}%
      \expandafter\def\csname LT7\endcsname{\color[rgb]{1,0.3,0}}%
      \expandafter\def\csname LT8\endcsname{\color[rgb]{0.5,0.5,0.5}}%
    \else
      % gray
      \def\colorrgb#1{\color{black}}%
      \def\colorgray#1{\color[gray]{#1}}%
      \expandafter\def\csname LTw\endcsname{\color{white}}%
      \expandafter\def\csname LTb\endcsname{\color{black}}%
      \expandafter\def\csname LTa\endcsname{\color{black}}%
      \expandafter\def\csname LT0\endcsname{\color{black}}%
      \expandafter\def\csname LT1\endcsname{\color{black}}%
      \expandafter\def\csname LT2\endcsname{\color{black}}%
      \expandafter\def\csname LT3\endcsname{\color{black}}%
      \expandafter\def\csname LT4\endcsname{\color{black}}%
      \expandafter\def\csname LT5\endcsname{\color{black}}%
      \expandafter\def\csname LT6\endcsname{\color{black}}%
      \expandafter\def\csname LT7\endcsname{\color{black}}%
      \expandafter\def\csname LT8\endcsname{\color{black}}%
    \fi
  \fi
  \setlength{\unitlength}{0.0500bp}%
  \begin{picture}(7086.00,3968.00)%
    \gplgaddtomacro\gplbacktext{%
      \csname LTb\endcsname%
      \put(1474,704){\makebox(0,0)[r]{\strut{} 0}}%
      \put(1474,1132){\makebox(0,0)[r]{\strut{} 5e+08}}%
      \put(1474,1561){\makebox(0,0)[r]{\strut{} 1e+09}}%
      \put(1474,1989){\makebox(0,0)[r]{\strut{} 1.5e+09}}%
      \put(1474,2418){\makebox(0,0)[r]{\strut{} 2e+09}}%
      \put(1474,2846){\makebox(0,0)[r]{\strut{} 2.5e+09}}%
      \put(1474,3275){\makebox(0,0)[r]{\strut{} 3e+09}}%
      \put(1474,3703){\makebox(0,0)[r]{\strut{} 3.5e+09}}%
      \put(1606,484){\makebox(0,0){\strut{} 1000}}%
      \put(2171,484){\makebox(0,0){\strut{} 2000}}%
      \put(2736,484){\makebox(0,0){\strut{} 3000}}%
      \put(3300,484){\makebox(0,0){\strut{} 4000}}%
      \put(3865,484){\makebox(0,0){\strut{} 5000}}%
      \put(4430,484){\makebox(0,0){\strut{} 6000}}%
      \put(4995,484){\makebox(0,0){\strut{} 7000}}%
      \put(5559,484){\makebox(0,0){\strut{} 8000}}%
      \put(6124,484){\makebox(0,0){\strut{} 9000}}%
      \put(6689,484){\makebox(0,0){\strut{} 10000}}%
      \put(176,2203){\rotatebox{-270}{\makebox(0,0){\strut{}TSC}}}%
      \put(4147,154){\makebox(0,0){\strut{}Cantidad de nodos ($n$)}}%
    }%
    \gplgaddtomacro\gplfronttext{%
      \csname LTb\endcsname%
      \put(5702,3530){\makebox(0,0)[r]{\strut{}\textsc{BFS}}}%
      \csname LTb\endcsname%
      \put(5702,3310){\makebox(0,0)[r]{\strut{}\textsc{Vectorized-BFS-Branching}}}%
    }%
    \gplbacktext
    \put(0,0){\includegraphics{texplots/bfs_big_050}}%
    \gplfronttext
  \end{picture}%
\endgroup
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",37MRL4
code,"\documentclass[twoside]{book}

% Packages required by doxygen
\usepackage{fixltx2e}
\usepackage{calc}
\usepackage{doxygen}
\usepackage[export]{adjustbox} % also loads graphicx
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{makeidx}
\usepackage{multicol}
\usepackage{multirow}
\PassOptionsToPackage{warn}{textcomp}
\usepackage{textcomp}
\usepackage[nointegrals]{wasysym}
\usepackage[table]{xcolor}

% Font selection
\usepackage[T1]{fontenc}
\usepackage[scaled=.90]{helvet}
\usepackage{courier}
\usepackage{amssymb}
\usepackage{sectsty}
\renewcommand{\familydefault}{\sfdefault}
\allsectionsfont{%
  \fontseries{bc}\selectfont%
  \color{darkgray}%
}
\renewcommand{\DoxyLabelFont}{%
  \fontseries{bc}\selectfont%
  \color{darkgray}%
}
\newcommand{\+}{\discretionary{\mbox{\scriptsize$\hookleftarrow$}}{}{}}

% Page & text layout
\usepackage{geometry}
\geometry{%
  a4paper,%
  top=2.5cm,%
  bottom=2.5cm,%
  left=2.5cm,%
  right=2.5cm%
}
\tolerance=750
\hfuzz=15pt
\hbadness=750
\setlength{\emergencystretch}{15pt}
\setlength{\parindent}{0cm}
\setlength{\parskip}{0.2cm}
\makeatletter
\renewcommand{\paragraph}{%
  \@startsection{paragraph}{4}{0ex}{-1.0ex}{1.0ex}{%
    \normalfont\normalsize\bfseries\SS@parafont%
  }%
}
\renewcommand{\subparagraph}{%
  \@startsection{subparagraph}{5}{0ex}{-1.0ex}{1.0ex}{%
    \normalfont\normalsize\bfseries\SS@subparafont%
  }%
}
\makeatother

% Headers & footers
\usepackage{fancyhdr}
\pagestyle{fancyplain}
\fancyhead[LE]{\fancyplain{}{\bfseries\thepage}}
\fancyhead[CE]{\fancyplain{}{}}
\fancyhead[RE]{\fancyplain{}{\bfseries\leftmark}}
\fancyhead[LO]{\fancyplain{}{\bfseries\rightmark}}
\fancyhead[CO]{\fancyplain{}{}}
\fancyhead[RO]{\fancyplain{}{\bfseries\thepage}}
\fancyfoot[LE]{\fancyplain{}{}}
\fancyfoot[CE]{\fancyplain{}{}}
\fancyfoot[RE]{\fancyplain{}{\bfseries\scriptsize Generated on Sat Sep 5 2015 18\+:26\+:48 for F\+T\+C\+Android\+Library by Doxygen }}
\fancyfoot[LO]{\fancyplain{}{\bfseries\scriptsize Generated on Sat Sep 5 2015 18\+:26\+:48 for F\+T\+C\+Android\+Library by Doxygen }}
\fancyfoot[CO]{\fancyplain{}{}}
\fancyfoot[RO]{\fancyplain{}{}}
\renewcommand{\footrulewidth}{0.4pt}
\renewcommand{\chaptermark}[1]{%
  \markboth{#1}{}%
}
\renewcommand{\sectionmark}[1]{%
  \markright{\thesection\ #1}%
}

% Indices & bibliography
\usepackage{natbib}
\usepackage[titles]{tocloft}
\setcounter{tocdepth}{3}
\setcounter{secnumdepth}{5}
\makeindex

% Hyperlinks (required, but should be loaded last)
\usepackage{ifpdf}
\ifpdf
  \usepackage[pdftex,pagebackref=true]{hyperref}
\else
  \usepackage[ps2pdf,pagebackref=true]{hyperref}
\fi
\hypersetup{%
  colorlinks=true,%
  linkcolor=blue,%
  citecolor=blue,%
  unicode%
}

% Custom commands
\newcommand{\clearemptydoublepage}{%
  \newpage{\pagestyle{empty}\cleardoublepage}%
}


%===== C O N T E N T S =====

\begin{document}

% Titlepage & ToC
\hypersetup{pageanchor=false,
             bookmarks=true,
             bookmarksnumbered=true,
             pdfencoding=unicode
            }
\pagenumbering{roman}
\begin{titlepage}
\vspace*{7cm}
\begin{center}%
{\Large F\+T\+C\+Android\+Library }\\
\vspace*{1cm}
{\large Generated by Doxygen 1.8.10}\\
\vspace*{0.5cm}
{\small Sat Sep 5 2015 18:26:48}\\
\end{center}
\end{titlepage}
\clearemptydoublepage
\tableofcontents
\clearemptydoublepage
\pagenumbering{arabic}
\hypersetup{pageanchor=true}

%--- Begin generated contents ---
\chapter{Hierarchical Index}
\input{hierarchy}
\chapter{Class Index}
\input{annotated}
\chapter{Class Documentation}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1actions_1_1_action}
\input{classcom_1_1lasarobotics_1_1library_1_1controller_1_1_button_state}
\input{classcom_1_1lasarobotics_1_1library_1_1util_1_1_constants}
\input{classcom_1_1lasarobotics_1_1library_1_1controller_1_1_controller}
\input{enumcom_1_1lasarobotics_1_1library_1_1util_1_1_distance_unit}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1_doodle_do}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1_doodle_map}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1maps_1_1_doodle_map}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1_doodle_run_data}
\input{classcom_1_1lasarobotics_1_1library_1_1doodle_1_1_doodle_write}
\input{classcom_1_1lasarobotics_1_1library_1_1sensor_1_1legacy_1_1hitechnic_1_1_gyroscope}
\input{classcom_1_1lasarobotics_1_1library_1_1sensor_1_1generic_1_1_i_r}
\input{classcom_1_1lasarobotics_1_1library_1_1skynet_1_1_kalman}
\input{classcom_1_1lasarobotics_1_1library_1_1sensor_1_1generic_1_1_li_d_a_r}
\input{classcom_1_1lasarobotics_1_1library_1_1sensor_1_1android_1_1_linear_acceleration}
\input{classcom_1_1lasarobotics_1_1library_1_1util_1_1_lookup_table}
\input{classcom_1_1lasarobotics_1_1library_1_1util_1_1_math_util}
\input{classcom_1_1lasarobotics_1_1library_1_1drive_1_1_mecanum}
\input{classcom_1_1lasarobotics_1_1library_1_1monkeyc_1_1_monkey_c}
\input{classcom_1_1lasarobotics_1_1library_1_1monkeyc_1_1_monkey_data}
\input{classcom_1_1lasarobotics_1_1library_1_1monkeyc_1_1_monkey_do}
\input{classcom_1_1lasarobotics_1_1library_1_1monkeyc_1_1_monkey_util}
\input{classcom_1_",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Hq07RM
code,"\begin{prework}{ 鈴木崇文 }

gnomeでdesktopを利用しています。
工夫というほどではないですが、便利なツールとしてKDE系のアプリやEBViewを使っています。
リモートデスクトップ(RDP) ＆ VNC 用には、KRDC を使い、スクリーンショット用には KSnapshot を使っています。
あとは英辞郎を購入して、EBViewでいつでも翻訳できるようにしています。
\end{prework}

\begin{prework}{ dictoss(杉本　典充) }

低性能マシンはstartx＋icewm、中高性能マシンはgdm＋xfce4かgnomeと使い分けています。KDEは最近使ってないです。（KDEは重そうなイメージがある）
カスタマイズしているのは、ページャの個数を６つに増やしている、複数のターミナルを重ならないように同時起動するシェルスクリプトを作り一発で画面をターミナルで埋め尽くせるようにしています。（昔タイル型ウィンドウマネージャ使えばいいのに、とか突っ込まれました）
\end{prework}

\begin{prework}{ yamamoto }

メインに使っているのは、録画サーバも兼ねた Debian squeeze (amd64) です。
外出時は気分次第で、sid の i386 ネットブックと sid の amd64 ノート PC を選んでいます。
どれも、特に何の変てつもない、ただの KDE 環境です。

デスクトップとしての見た目は、壁紙すらデフォルトのままで、改造してませんが、機体としては家の LAN にぶら下がったマシン間を「何か(?)」が行き来する、魔改造スクリプトがいくつか仕込んであり、ものぐさな私にはとっても快適です。
\end{prework}

\begin{prework}{ 野島　貴英 }

GNOME 3.2.2をDebianで利用しています。unstableではもの足りず、experimentalからupgradeして引っ張ってきてます。特にクールなカスタマイズは何もしてないですが、gnome-shellがjavascriptなど解釈できるということから、将来ちょっとしたガジェットぐらい作ってみたいなーと思うこの頃です。あと、gxconsole( \url{http://gnomefiles.org/content/show.php/gxconsole?content=132145} )がGNOME3.2.2になっても、やっぱり欲しかったので、GNOME 3.2.2用に移植したい...
\end{prework}

\begin{prework}{ 日比野　啓 }

普段はタイル型ウィンドウマネージャの XMonad を使っています。
マルチディスプレイに対するサポートが使いやすくてプレゼンのときにも便利で気にいっています。
最近、趣味のプログラミングのメインで使っている言語が Haskell なので、
Haskellでカスタマイズできることも魅力です。
gnome-session との組合せも使ってみましたが、なぜか sid ではうまく動かなくて残念。
あと、画面の上下が狭くなるのが嫌なので、なんとかする方法が知りたい。

\end{prework}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wPw9vz
code,"\documentclass[12pt]{article}
\title{put titel here}
\author{
        Rene Pickhardt\\
                Institute for Web Science and Technoloies\\
        rpickhardt@uni-koblenz.de
            \and
        Name \\
                Institute for Web Science and Technoloies\\
        @uni-koblenz.de
}
\date{\today}

\usepackage{color}

\input{commands}

\begin{document}
\maketitle

\input{abstract}

\input{01introduction}
\input{02relatedwork}
\input{03formalization}
\input{04evaluation}
\input{05conclusion}

\bibliographystyle{plain}
\bibliography{references}

\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5yk_TU
code,"\hypertarget{runtime_8c}{\section{toxencryptsave/crypto\+\_\+pwhash\+\_\+scryptsalsa208sha256/runtime.c File Reference}
\label{runtime_8c}\index{toxencryptsave/crypto\+\_\+pwhash\+\_\+scryptsalsa208sha256/runtime.\+c@{toxencryptsave/crypto\+\_\+pwhash\+\_\+scryptsalsa208sha256/runtime.\+c}}
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qCzjjU
code,"\section{Explicación del Diseño de Investigación}
Los anexos son temas útiles que pueden ayudar a entender mejor la tesis.

Lorem ipsum dolor sit amet, consetetur sadipscing elitr,  sed diam nonumy eirmod
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit
amet, consetetur sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut
labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam
et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata
sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur
sadipscing elitr,  sed diam nonumy eirmod tempor invidunt ut labore et dolore
magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo
dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est
Lorem ipsum dolor sit amet.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HKO8hu
code,"\cmh{
	latexindent.pl old}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xv2dl9
code,"\hypertarget{interfacebilinear__class_1_1new}{\section{bilinear\+\_\+class\+:\+:new Interface Reference}
\label{interfacebilinear__class_1_1new}\index{bilinear\+\_\+class\+::new@{bilinear\+\_\+class\+::new}}
}


Creates the bilinear object.  


\subsection*{Private Member Functions}
\begin{DoxyCompactItemize}
\item 
subroutine \hyperlink{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}{bilinear\+\_\+init} (this, qs, cs, file)
\begin{DoxyCompactList}\small\item\em Creates and initializes the bilinear coupling object. \end{DoxyCompactList}\item 
subroutine \hyperlink{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}{bilinear\+\_\+init} (this, qs, cs, file)
\begin{DoxyCompactList}\small\item\em Creates and initializes the bilinear coupling object. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Creates the bilinear object. 

\subsection{Member Function/\+Subroutine Documentation}
\hypertarget{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}{\index{bilinear\+\_\+class\+::new@{bilinear\+\_\+class\+::new}!bilinear\+\_\+init@{bilinear\+\_\+init}}
\index{bilinear\+\_\+init@{bilinear\+\_\+init}!bilinear\+\_\+class\+::new@{bilinear\+\_\+class\+::new}}
\subsubsection[{bilinear\+\_\+init}]{\setlength{\rightskip}{0pt plus 5cm}subroutine bilinear\+\_\+class\+::new\+::bilinear\+\_\+init (
\begin{DoxyParamCaption}
\item[{type({\bf bilinear}), intent(inout)}]{this, }
\item[{type(quantum), intent(inout), target}]{qs, }
\item[{type(classical), intent(inout), target}]{cs, }
\item[{character$\ast$($\ast$), intent(in), optional}]{file}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [private]}}}\label{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}


Creates and initializes the bilinear coupling object. 


\begin{DoxyParams}[1]{Parameters}
 & {\em this} & is the bilinear coupling object to be initialized. \\
\hline
 & {\em qs} & is a general quantum subsystem to be coupled to a classical subsystem. \\
\hline
 & {\em cs} & is a general classical subsysterm to be coupled to the quantum subsystem. \\
\hline
\mbox{\tt in}  & {\em file} & is an optional string containing the name of a previously saved bilinear file. \\
\hline
\end{DoxyParams}
\begin{DoxyRemark}{Remarks}
If no input file is provided the user must manually initialize T\+H\+I\+S using stout. 
\end{DoxyRemark}
\hypertarget{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}{\index{bilinear\+\_\+class\+::new@{bilinear\+\_\+class\+::new}!bilinear\+\_\+init@{bilinear\+\_\+init}}
\index{bilinear\+\_\+init@{bilinear\+\_\+init}!bilinear\+\_\+class\+::new@{bilinear\+\_\+class\+::new}}
\subsubsection[{bilinear\+\_\+init}]{\setlength{\rightskip}{0pt plus 5cm}subroutine bilinear\+\_\+class\+::new\+::bilinear\+\_\+init (
\begin{DoxyParamCaption}
\item[{type({\bf bilinear}), intent(inout)}]{this, }
\item[{type(quantum), intent(inout), target}]{qs, }
\item[{type(classical), intent(inout), target}]{cs, }
\item[{character$\ast$($\ast$), intent(in), optional}]{file}
\end{DoxyParamCaption}
)\hspace{0.3cm}{\ttfamily [private]}}}\label{interfacebilinear__class_1_1new_a860c1a5d7e94a09db9c487de818f39e7}


Creates and initializes the bilinear coupling object. 


\begin{DoxyParams}[1]{Parameters}
 & {\em this} & is the bilinear coupling object to be initialized. \\
\hline
 & {\em qs} & is a general quantum subsystem to be coupled to a classical subsystem. \\
\hline
 & {\em cs} & is a general classical subsysterm to be coupled to the quantum subsystem. \\
\hline
\mbox{\tt in}  & {\em file} & is an optional string containing the name of a previously saved bilinear file. \\
\hline
\end{DoxyParams}
\begin{DoxyRemark}{Remarks}
If no input file is provided the user must manually initialize T\+H\+I\+S using stout. 
\end{DoxyRemark}


The documentation for this interface was generated from the following files\+:\begin{DoxyCompactItemize}
\item 
src/\hyperlink{bilinear_8f90}{bilinear.\+f90}\item 
src/\hyperlink{bilinearcopy_8f90}{bilinearcopy.\+f90}\end{DoxyCompactItemize}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gSJ-H1
code,"
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Sablona Bc+Mgr+RNDr (CZ) pro PriF MU                                                              %%%
% Autor: Petr Zemanek (zemanekp@math.muni.cz)                                                       %%%
% Pripominky, dotazy, namety smerujte na diskusni forum: https://is.muni.cz/auth/df/sablona-prif    %%%
% Typeset in LaTeX-2e                                                                               %%%
% Verze: 1.9 (4. brezna 2016)                                                                       %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[12pt,a4paper,oneside,final]{book}

\usepackage[utf8]{inputenc}
\usepackage[IL2]{fontenc}
\usepackage[czech]{babel}
\usepackage{longtable,lipsum}
\usepackage{amsmath,amssymb,amsthm}
\usepackage[RNDr,Barevne]{sci.muni.thesis}

\NazevUstavu{Geografický ústav}{Department of Geography}
\RokOdevzdaniPrace{rok}
\AkademickyRok{rok/rok}
\Autor{Michal Zimmermann}{Michal Zimmermann}
\NazevPrace{Název práce na titulní list}{Název práce}{Title of Thesis}
\StudijniProgram{Geografie}{Geography}
\StudijniObor{Kartografie, geoinformatika a dálkový průzkum Země}{Cartography, Geoinformatics and Remote Sensing}
\PocetStran{??\,$+$\,??}
\KlicovaSlova{ETL, transformace, prostorová data}{Keyword; Keyword; Keyword; Keyword; Keyword; Keyword; Keyword;
Keyword; Keyword}

\Abstrakty%
{V této bakalářské/diplomové/rigorózní práci se věnujeme ...}%
{In this thesis we study ...}

\TextPodekovani%
{Na tomto místě bych chtěl(-a) poděkovat ...}

\TextProhlaseni%
{Prohlašuji, že jsem svoji bakalářskou/diplomovou/rigorózní práci vypracoval(-a) samostatně s~využitím informačních
zdrojů, které jsou v práci citovány.}

\DatumProhlaseni{xx. měsíce 20xx}
\makeindex

\begin{document}
\VytvorPovinneStranyRigorozniPrace
\AbstraktyNaJedneStrane
% \AbstraktyNaDvouStranach
\SemVlozitZadani
% \VlozZadani{zadani.pdf}
\PodekovaniAProhlaseni
\pdfbookmark{Obsah}{Obsah}
\VytvorObsah
\cleardoublepage
% \HlavickaUvod
% \pdfbookmark{Úvod}{Uvod}
% \vloz{source/tex/01_Uvod}
% \cleardoublepage

\HlavickaZnaceni
% \pdfbookmark{Přehled použitého značení}{Prehled pouziteho znaceni}
% \vloz{source/tex/02_Znaceni}
\cleardoublepage

\renewcommand{\chaptermark}[1]{\markboth{\thechapter. #1}{}}
\renewcommand{\sectionmark}[1]{\markright{\thesection. #1}{}}
\addto\captionsczech{\renewcommand{\figurename}{Obr.}}
\addto\captionsczech{\renewcommand{\tablename}{Tab.}}
% \HlavickaKapitoly
% \vloz{source/tex/03_Kapitola_01}
% \cleardoublepage

% \vloz{source/tex/04_Kapitola_02}
% \cleardoublepage

\vloz{source/tex/output.tex}
\cleardoublepage

\HlavickaZaver
% \pdfbookmark{Závěr}{Zaver}
\vloz{source/tex/05_Zaver}
\cleardoublepage

\HlavickaPriloha
% \pdfbookmark{Příloha}{Priloha}
%\vloz{source/tex/06_Priloha}
\cleardoublepage

\renewcommand{\bibname}{Seznam použité literatury}
\HlavickaLiteratura
%\vloz{source/tex/07_Literatura}
\cleardoublepage

\renewcommand{\indexname}{Rejstřík}
\HlavickaRejstrik
\VytvorRejstrik
%%
%% pro vytvoreni rejstriku se spravny ceskym razenim pouzijte
%% csindex -d -h -k -z il2 nazev_souboru.idx
%%
%% nebo
%% texindy -I latex -L czech -M lang/czech/utf8 nazev_souboru.idx
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%% PRAZDNA STRANA NA ZAVER %%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\thispagestyle{empty}
\fancyhf{}
\newpage
\mbox{}

\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",p9A-ul
code,"\documentclass{article}

\begin{document}
\input{../gen/table.tex}
\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",I3iCM-
code,"\hypertarget{class_triton_1_1_util_1_1_language}{}\section{Triton\+:\+:Util\+:\+:Language Class Reference}
\label{class_triton_1_1_util_1_1_language}\index{Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}}


The language object.  




{\ttfamily \#include $<$local.\+h$>$}

\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{namespace_triton_1_1_util_ab36ffddebe19fdd103ec60af3841d9e2}{String} \hyperlink{class_triton_1_1_util_1_1_language_a16fd4d6c079f1a6d310dafe3c0587520}{Get\+Name} ()
\item 
\hyperlink{namespace_triton_1_1_util_ab36ffddebe19fdd103ec60af3841d9e2}{String} \hyperlink{class_triton_1_1_util_1_1_language_a9a2b45374aa49fa1dc9910afd92288c6}{Get\+Local} (\hyperlink{namespace_triton_1_1_util_ab36ffddebe19fdd103ec60af3841d9e2}{String} unlocalize\+Name)
\end{DoxyCompactItemize}
\subsection*{Friends}
\begin{DoxyCompactItemize}
\item 
class \hyperlink{class_triton_1_1_util_1_1_language_af7a1efe82e3beafa2fa9fc62c5ce5837}{Local\+Manager}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
The language object. 

Definition at line 33 of file local.\+h.



\subsection{Member Function Documentation}
\hypertarget{class_triton_1_1_util_1_1_language_a9a2b45374aa49fa1dc9910afd92288c6}{}\index{Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}!Get\+Local@{Get\+Local}}
\index{Get\+Local@{Get\+Local}!Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}}
\subsubsection[{Get\+Local}]{\setlength{\rightskip}{0pt plus 5cm}{\bf String} Triton\+::\+Util\+::\+Language\+::\+Get\+Local (
\begin{DoxyParamCaption}
\item[{{\bf String}}]{unlocalize\+Name}
\end{DoxyParamCaption}
)}\label{class_triton_1_1_util_1_1_language_a9a2b45374aa49fa1dc9910afd92288c6}
\hypertarget{class_triton_1_1_util_1_1_language_a16fd4d6c079f1a6d310dafe3c0587520}{}\index{Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}!Get\+Name@{Get\+Name}}
\index{Get\+Name@{Get\+Name}!Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}}
\subsubsection[{Get\+Name}]{\setlength{\rightskip}{0pt plus 5cm}{\bf String} Triton\+::\+Util\+::\+Language\+::\+Get\+Name (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\label{class_triton_1_1_util_1_1_language_a16fd4d6c079f1a6d310dafe3c0587520}


\subsection{Friends And Related Function Documentation}
\hypertarget{class_triton_1_1_util_1_1_language_af7a1efe82e3beafa2fa9fc62c5ce5837}{}\index{Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}!Local\+Manager@{Local\+Manager}}
\index{Local\+Manager@{Local\+Manager}!Triton\+::\+Util\+::\+Language@{Triton\+::\+Util\+::\+Language}}
\subsubsection[{Local\+Manager}]{\setlength{\rightskip}{0pt plus 5cm}friend class {\bf Local\+Manager}\hspace{0.3cm}{\ttfamily [friend]}}\label{class_triton_1_1_util_1_1_language_af7a1efe82e3beafa2fa9fc62c5ce5837}


Definition at line 35 of file local.\+h.



The documentation for this class was generated from the following file\+:\begin{DoxyCompactItemize}
\item 
util/\hyperlink{local_8h}{local.\+h}\end{DoxyCompactItemize}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LPNUy1
code,"%-----------------------------------------------------------------
% Shocktube 1D
%-----------------------------------------------------------------
\begin{tikzpicture}[scale = {0.015\linewidth},inner sep = 1pt]

% create axis
%% \draw[->,line width=1pt] (0,0.5) |- (0.60,0) node[below]{$x$};
\draw[line width=1pt] (-0.5,0.45) node[right]{$\mbf{U}_0$}|-(0.55,0) node[below]{$x$};
\draw[->,line width=1pt] (0.55,0)--(0.6,0);
\draw[->,line width=1pt] (-0.5,0.45)--(-0.5,0.5);
\draw[line width=1pt] (-0,0)--(-0.6,0);  

% discontinuity
\draw[dashed,line width=1pt] (0,0) node[below]{$x_d$} -- (0,0.4); 
%% \draw[<-,line width=1pt] (-0.60,0) -- (0,0); 
\draw[-latex,thick](0.05,0.45)node[right]{\small initial discontinuity}
         to[out=180,in=90] (0,0.4);

% initial states
\fill[blue!25!,opacity=.3] (-0.5,0) rectangle (0,0.4);
\fill[blue!60!,opacity=.3] (0,0) rectangle (0.5,0.2);
\node[right] at (-0.28,0.2) {$\mbf{U}_l$};
\node[left] at (0.28,0.1) {$\mbf{U}_r$};


% normal
%% \draw[-stealth,thick] (0,0.25) -- (0.1,0.25); 
%% \node[] at (0.05,0.28) {$\hat{n}$};
\draw[-stealth,thick] (0,0.2) -- (0.1,0.2); 
\node[] at (0.05,0.23) {$\hat{n}$};

\end{tikzpicture}


%-----------------------------------------------------------------
% Shocktube 2D
%-----------------------------------------------------------------
%% \begin{tikzpicture}[scale = {0.015\linewidth},inner sep = 1pt]
%% % create axis
%% \draw[<->,line width=1pt] (0,0.6) node[right]{$y$} |- (1.1,0) node[below]{$x$};
%% %% \draw[<-,line width=1pt] (-0.75,0) -- (0,0); 

%% %% % normal
%% %% \draw[-stealth,thick] (0,0.25) -- (0.1,0.25); 
%% %% \node[] at (0.05,0.28) {$\hat{n}$};

%% % initial states
%% \draw[fill=blue!25!,opacity=.3] (0,0) -- (0,0.5) -- (1.0,0) -- cycle;
%% \draw[fill=blue!60!,opacity=.3] (0,0.5) -- (1.0,0.5) -- (1.0,0) -- cycle;
%% \node[right] at (0.2,0.15) {$\mbf{U}_0$};
%% \node[left] at (0.8,0.35) {$\mbf{U}_1$};

%% % discontinuity
%% \draw[line width = 1pt] (0,0.5) -- (1.0,0);
%% \draw[-latex,thick](0.2,0.55)node[right]{\small initial discontinuity}
%%          to[out=180,in=90] (0.1,0.45);

%% % normal
%% \draw[-stealth,thick] (0.5,0.25) -- (0.55,0.35); 
%% \node[] at (0.55,0.29) {$\hat{n}$};

%% \end{tikzpicture}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8WglYf
code,"\section{Proof and Axioms}
\label{s:proof}
\lstset{morekeywords={fwd}}

As previously discussed, instead of providing a concrete set of typing rules, we provide a set of properties that the type system needs to ensure.
We will express such properties using type judgements of the form $\ty{e}{T}$. This judgement form allows an $l$ to be typed with different types based on how it is used, e.g. we might have $\S;\G;\h.m\oR l \cR \vdash l : \Kw{mut}\ C$  and $\S;\G;l.m\oR \h \cR \nvdash l : \Kw{mut}\ C$, where $m$ is a \Q!mut! method taking a \Q!read! parameter. Importantly, we allow types to change during reduction (such as to model promotions), but do not allow the types inside methods to change when they are called (see the \thm{Method Consistency} assumption below).

\subheading{Auxiliary Definitions}
To express our type system assumptions, we first need some auxiliary definitions. We define what it means for an $l$ to be \reach from an expression or context:\\
\indent $\reach(\s, e, l)$ iff $\exists l' \in e$ such that $l \in \rog(\s, l')$,\\
\indent $\reach(\s, \E, l)$ iff $\exists l' \in \E$ such that $l \in \rog(\s, l')$.

\noindent We now define what it means for an object to be \immut: it is in the \rog of an \Q!imm! reference or a \reach \Q!imm! field:\\*
\indent $\immut(\s, e, l)$ iff $\exists \E, l'$ such that:
\begin{iitemize}
\item $e = \E[l']$, \tyr{l'}{\Kw{imm}\,\_}, and $l \in \rog(\s, l')$, or
\item $\reach(\s, e, l')$, $\Ss(l').f = \Kw{imm}\,\_$, and $l \in \rog(\s, \s[l'.f])$.
\end{iitemize}

\noindent We define the \mrog of an $l$ to be the $l'$s reachable from $l$ by traversing through any number of \Q!mut! and \Q!capsule! fields:\\
\indent $l' \in \mrog(\s, l)$ iff:%
\begin{iitemize}
	\item $l' = l$ or
	\item $\exists f$ such that $\Ss(l).f \in \{\Kw{capsule}\,\_, \Kw{mut}\,\_\}$, and $l' \in \mrog(\s, \s[l.f])$
\end{iitemize}

\noindent Now we can define what it means for an $l$ to be \muty\footnote{We use the term \muty to distinguish from \immut: an object might be neither \muty nor \immut, e.g. if there are only \Q!read! references to it.} by a sub-expression $e$, found in \E: something in $l$ is reachable from a \Q!mut! reference in $e$, by passing through any number of \Q!mut! and \Q!capsule! fields:\\
\indent $\muty(\s, \E, e, l)$ iff $\exists \E',l'$ such that:
\begin{iitemize}
	\item $e = \E'[l']$, $\tyr[\E']{l'}{\Kw{mut}\,\_,}$ and
	\item $\mrog(\s, l')$ not disjoint $\rog(\s, l)$.
\end{iitemize}

\noindent Finally, we model the \encap property of \Q!capsule! references:\\
\indent $\encap(\s, \E, l)$ iff $\forall l' \in \rog(\s, l)$, if $\muty(\s, \h, \E[l], l')$, then 
not $\reach(\s, \E, l')$.


\subheading{Axiomatic Type Properties}
Here we assume a slight variation of the usual \thm{Subject Reduction}: a (sub) expression obtained using any number of reductions, from a well-typed and well-formed initial $\s_0|e_0$, is also well-typed:
\SS\begin{Assumption}[Subject Reduction]\rm
	If $\VS(\s, \E[e])$, then $\Ss; \emptyset; \E \vdash e : T$.
\end{Assumption}

As we do not have a concrete type system, we need to assume some properties about its derivations. First we require that  \Q!new! expressions only have field initialisers with the appropriate type, fields are only updated with expressions of the appropriate type, methods are only called on receivers with the appropriate RC, method parameters have the appropriate type, and method calls are typed with the return type of the method:%
\SS\begin{Assumption}[Type Consistency]\rm\ 
\begin{ienumerate}
%if S; G; E |- e.f = e' : _ C, and C.f = T', then S; G; E[e.f = []] |- e' : T'
\item If $C.i = T_i\,\_$, then \ty[\Kw{new}\ C\oR e_1,\ldots,e_{i-1},\h,e_{i+1},\ldots,e_n\cR]{e_i}{T_i}.
\item If \ty[\h.f \equals e']{e}{\_\,C} and $C.f = T'\,f$, then \ty[e.f \equals \h]{e'}{T'}.
\item If \ty[\h.m\oR e_1,\ldots,e_n\cR]{e}{\_\,C} and
$C.m = \mdf\,\Kw{method}\,\T\,m\oR\T_1\,\x_1,\ldots,\T_n\x_n\cR\,\_$, then:
\begin{enumerate}
\item \ty[\h.m\oR e_1,\ldots,e_n\cR]{e}{\mdf\,C},
\item \ty[e.m\oR e_1,\ldots,e_{i-1},\h,e_{i+1},\ldots,e_n\cR]{e_i}{T_i}, and
\item \ty{e.m\oR e_1,\ldots,e_n\cR}{T}.
%\item hello
\end{enumerate}
\end{ienumerate}
\end{Assumption}%

\noindent We also assume that any expression inside a method body can be typed with the same reference capabilities as when it is expanded by our \textsc{mcall} rule:%
\SS\begin{Assumption}[Method Consistency]\rm\
If $\VS(\s, \EV[l.m\oR v_1,\ldots,v_n \cR])$ %and $\s|\EV[l.m\oR v_1,\ldots,v_n \cR] \rightarrow \s|$,
where:
\begin{iitemize}
\item $\Ss; \emptyset; \EV[\h.m\oR v_1,\ldots,v_n \cR] \vdash l : \_\,C$, $C.m =\_\,\Kw{method}\,\_\,m\oR T_1\,x_1,\ldots T_n\,x_n \cR\,\E[e]$, 
\item $\E'$ = $\M{l}{\E}{l.\invariant}$ if $C.m$ is a capsule mutator, otherwise $\E' = \E$,
\item $\G = \Kw{this} : \mdf\,C,x_1:T_1, \ldots, x_n:T_n$, and $e' = e[\Kw{this}\coloneqq l,x_1\coloneqq v_1,\ldots,x_n\coloneqq v_n]$,
\end{iitemize}

\indent then $\emptyset; \G; \E \vdash e : \mdf\,\_$ iff $\Ss; \emptyset; \EV[\E'[\Kw{this}\coloneqq l,x_1\coloneqq v_1,\ldots,x_n\coloneqq v_n]] \vdash e' : \mdf\,\_$.
\end{Assumption}

\",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EaUmOj
code,"\hypertarget{celltriang_8h}{}\subsection{celltriang.\+h File Reference}
\label{celltriang_8h}\index{celltriang.\+h@{celltriang.\+h}}


Background cells for integration.  


{\ttfamily \#include \char`\""{}L\+M\+X/cofe\+\_\+\+Tensor\+Rank2.\+h\char`\""{}}\\*
{\ttfamily \#include \char`\""{}cell.\+h\char`\""{}}\\*
Include dependency graph for celltriang.\+h\+:\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=350pt]{d5/d0e/celltriang_8h__incl}
\end{center}
\end{figure}
This graph shows which files directly or indirectly include this file\+:\nopagebreak
\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[width=317pt]{d3/d7d/celltriang_8h__dep__incl}
\end{center}
\end{figure}
\subsubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
class \hyperlink{classmknix_1_1_cell_triang}{mknix\+::\+Cell\+Triang}
\end{DoxyCompactItemize}
\subsubsection*{Namespaces}
\begin{DoxyCompactItemize}
\item 
 \hyperlink{namespacemknix}{mknix}
\end{DoxyCompactItemize}


\subsubsection{Detailed Description}
Background cells for integration. 

\begin{DoxyAuthor}{Author}
Daniel Iglesias 
\end{DoxyAuthor}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",O430Xt
code,"% -*- phrases: HW2 -*-
\documentclass[pdftex,11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{tikz}	
\usepackage{graphicx}
\usepackage{listings}
\usepackage{color}
\usepackage{layout}
\usepackage{pdflscape}
\usepackage{hyperref}
\usepackage{appendix}
\usepackage{pdfpages}

\hypersetup{colorlinks=true, linkcolor=blue, citecolor=blue, filecolor=blue, urlcolor=blue, pdftitle=Capstone Portfolio: Drone Flight Planning Software, pdfauthor=David Klingenberg, pdfsubject=, pdfkeywords=}

\DeclareGraphicsExtensions{.pdf,.png,.jpg}

\marginparwidth = 0pt
\marginparsep = 0pt
\topmargin = 0pt
\oddsidemargin = 0pt
\textwidth = 468pt
\textheight = 581pt
\lstset{
  language=C,                     % choose the language of the code
  numbers=left,                   % where to put the line-numbers
  stepnumber=1,                   % the step between two line-numbers.        
  numbersep=5pt,                  % how far the line-numbers are from the code
  backgroundcolor=\color{white},  % choose the background color. You must add \usepackage{color}
  showspaces=false,               % show spaces adding particular underscores
  showstringspaces=false,         % underline spaces within strings
  showtabs=false,                 % show tabs within strings adding particular underscores
  tabsize=2,                      % sets default tabsize to 2 spaces
  captionpos=b,                   % sets the caption-position to bottom
  breaklines=true,                % sets automatic line breaking
  breakatwhitespace=true,         % sets if automatic breaks should only happen at whitespace
  title=\lstname,                 % show the filename of files included with \lstinputlisting;
}

 
\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}

\begin{document}
\pagenumbering{gobble}
\begin{titlepage}
\input{./title.tex}
\newpage
\thispagestyle{empty}
\mbox{}
\end{titlepage}

\tableofcontents
\listoffigures
\listoftables

\clearpage
\pagenumbering{arabic}
\setcounter{page}{1}
\section{Team Member Contact Information}
  	\begin{table}[h]
  	\centering
		\begin{tabular}{| l | c | p{5cm} |}
		\hline
		Name & Phone Number & Email Address\\\hline
		Joseph Higley & & higley@vandals.uidaho.edu\\
		David Klingenberg  &  (208) 310-9657 &  bigwookiee@Gmail.com\\
		Emeth Thompson & & thom5468@vandals.uidaho.edu\\
		Taylor Trabun & (509) 995-0904 & trab1744@vandals.uidaho.edu\\
		\hline
	\end{tabular}
\caption{Team Member Contact Information}
\label{table:1}
\end{table}


\section{Introduction}


Software to create and upload a flight plan to a quad copter drone. The flight plan will be uploaded using xBee radio communication.\\

This project will use off-the-shelf parts.  ATMEL\textsuperscript{\textcopyright} based microcontrollers found on ardunio based open source boards is the current preference.

\subsection{Target Priorities}

\begin{table}[h]
	\centering
	\begin{tabular}{c | c | p{8cm} | c}
	\hline
		 Number & Category & Need & Importance \\ \hline
		 1 & Quadcopter & Center of Gravity Refined & 5 \\
		 2 & Quadcopter & Reliable Flight & 5 \\
		 3 & Quadcopter & Functioning xBee Hardware &  4 \\
		 4 & Quadcopter & Hardware (Microcontroller) with xAPI and services to control flight & 5 \\
		 5 & Quadcopter & Controlled with XP communications &  4 \\
	   6 & Quadcopter & Autoland & 5 \\
	   7 & Software & software package for flight planning & 2\\
	   8 & Software & API for sending commands from computer & 2\\
	\end{tabular}
	\caption{Priorities}
	\label{table:2}
\end{table}

\clearpage
\section{Initial Client Interview Transcript 9/10/14}
\label{sec:clienttranscript}
\input{./initialClientInterview.tex}
\clearpage


\section{Meeting Agendas}
%\addcontentsline{toc}{section}{Agendas}
%\addtocounter{section}{1}

% Agenda %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Sept. 10, 2014}
{ \huge \bfseries Mission Control Team Agenda \\[0.4cm] }
{ \huge \bfseries Friday September  10, 2014.\\1500 –-  1600  in JEB   Think  Tank. \\[0.4cm] }
\vspace*{2.5mm}

{ \large \bfseries \hspace*{2 mm} Type of Meeting\\}
\hspace*{12 mm} Initial client interview.
\vspace*{1.5mm}

{ \large \bfseries \hspace*{2 mm} Attendees\\}
\hspace*{12mm} David Klingenberg\\
\hspace*{12mm} Taylor Trabun\\
\hspace*{12mm} Brandon Ortiz\\
\vspace*{1.5mm}

{ \large \bfseries \noindent Topics}
\vspace*{2.5mm}

\begin{tabular}{| l | l | l |}
  \hline
  \bfseries Topic & \bfseries Responsible & \bfseries Time (in minutes) \\ \hline
  Product  Overview  &  Brandon &  15 \\ \hline
  System  Requirements & Brandon & 15 \\ \hline
  Tasks Breakdown & Open Discussion & 15 \\ \hline
  Question \&  Answers  & Open Discussion & 25 \\ 
  \hline
\end{tabular}

\vspace*{2.5mm}
{ \large \bfseries \noindent Additional Information:}
This is our initial client interview.

\subsubsection[short]{Minutes from Friday September 10 Meeting}
Refer to \hyperref[sec:clienttranscript]{Section~\ref{sec:clienttranscript}} initial client  transcript.

% Agenda %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Sept. 18, 2014}
{ \huge \bfseries Mission Control Team Age",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",tMg10T
code,"%Put a list of references.

\renewcommand{\refname}{Bibliography}
\phantomsection
\addcontentsline{toc}{section}{Bibliography}

\bibliographystyle{apalike} 
\bibliography{main} 

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",5MRpmi
code,"%%Created by jPicEdt 1.4.1: mixed JPIC-XML/LaTeX format
%%Tue Feb 12 12:53:30 MSK 2008
%%Begin JPIC-XML
%<?xml version=""1.0"" standalone=""yes""?>
%<jpic x-min=""4"" x-max=""80"" y-min=""-5"" y-max=""45"" auto-bounding=""true"">
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,7.5);(4,7.5);(10,7.5);(10,7.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,12.5);(4,12.5);(10,12.5);(10,12.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,22.5);(4,22.5);(10,22.5);(10,22.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,17.5);(4,17.5);(10,17.5);(10,17.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,15);(4,15);(10,15);(10,15)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,25);(4,25);(10,25);(10,25)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,27.5);(4,27.5);(10,27.5);(10,27.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,35);(4,35);(10,35);(10,35)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,32.5);(4,32.5);(10,32.5);(10,32.5)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,30);(4,30);(10,30);(10,30)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,10);(4,10);(10,10);(10,10)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(4,20);(4,20);(10,20);(10,20)""
%	 />
%<parallelogram p3= ""(20,30)""
%	 p1= ""(15,40)""
%	 fill-style= ""none""
%	 p2= ""(20,40)""
%	 />
%<parallelogram p3= ""(20,15)""
%	 p1= ""(15,25)""
%	 fill-style= ""none""
%	 p2= ""(20,25)""
%	 />
%<parallelogram p3= ""(20,0)""
%	 p1= ""(15,10)""
%	 fill-style= ""none""
%	 p2= ""(20,10)""
%	 />
%<multicurve fill-style= ""none""
%	 points= ""(60,45);(60,45);(60,-5);(60,-5)""
%	 />
%<smoothpolygon closed= ""false""
%	 fill-style= ""none""
%	 smoothness= ""0.7;0.7;0.7;0.7""
%	 points= ""(60,0);(55,2);(60,5);(60,5)""
%	 />
%<smoothpolygon closed= ""false""
%	 fill-style= ""none""
%	 smoothness= ""0.7;0.7;0.7;0.7""
%	 points= ""(60,5);(45,10);(60,15);(60,15)""
%	 />
%<smoothpolygon closed= ""false""
%	 fill-style= ""none""
%	 smoothness= ""0.7;0.7;0.7;0.7""
%	 points= ""(60,15);(20,20);(60,25);(60,25)""
%	 />
%<smoothpolygon closed= ""false""
%	 fill-style= ""none""
%	 smoothness= ""0.7;0.7;0.7;0.7""
%	 points= ""(60,25);(45,30);(60,35);(60,35)""
%	 />
%<smoothpolygon closed= ""false""
%	 fill-style= ""none""
%	 smoothness= ""0.7;0.7;0.7;0.7""
%	 points= ""(60,35);(55,37);(60,40);(60,40)""
%	 />
%<circle closure= ""chord""
%	 p3= ""(65,5)""
%	 p1= ""(65,15)""
%	 fill-style= ""none""
%	 p2= ""(70,10)""
%	 />
%<multicurve fill-style= ""none""
%	 right-arrow= ""head""
%	 points= ""(70,10);(70,10);(80,10);(80,10)""
%	 />
%<multicurve fill-style= ""none""
%	 points= ""(20,28);(20,28);(60,10);(60,10)""
%	 />
%<multicurve fill-style= ""none""
%	 points= ""(20,13);(20,13);(60,10);(60,10)""
%	 />
%<text text-vert-align= ""center-v""
%	 anchor-point= ""(25,30)""
%	 text-hor-align= ""center-h""
%	 text-frame= ""noframe""
%	 fill-style= ""none""
%	 >
%$\vec{r}_1$
%</text>
%<text text-vert-align= ""center-v""
%	 anchor-point= ""(25,16)""
%	 text-hor-align= ""center-h""
%	 text-frame= ""noframe""
%	 fill-style= ""none""
%	 >
%$\vec{r}_2$
%</text>
%<text text-vert-align= ""center-v""
%	 anchor-point= ""(35,25)""
%	 text-hor-align= ""center-h""
%	 text-frame= ""noframe""
%	 fill-style= ""none""
%	 >
%$\tau_1$
%</text>
%<text text-vert-align= ""center-v""
%	 anchor-point= ""(35,8.5)""
%	 text-hor-align= ""center-h""
%	 text-frame= ""noframe""
%	 fill-style= ""none""
%	 >
%$\tau_2$
%</text>
%<text text-vert-align= ""center-v""
%	 anchor-point= ""(75,15)""
%	 text-hor-align= ""center-h""
%	 text-frame= ""noframe""
%	 fill-style= ""none""
%	 >
%$D$
%</text>
%</jpic>
%%End JPIC-XML
%LaTeX-picture environment using emulated lines and arcs
%You can rescale the whole picture (to 80% for instance) by using the command \def\JPicScale{0.8}
\ifx\JPicScale\undefined\def\JPicScale{1}\fi
\unitlength \JPicScale mm
\begin{picture}(80,45)(0,0)
\linethickness{0.3mm}
\put(4,7.5){\line(1,0){6}}
\put(10,7.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,12.5){\line(1,0){6}}
\put(10,12.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,22.5){\line(1,0){6}}
\put(10,22.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,17.5){\line(1,0){6}}
\put(10,17.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,15){\line(1,0){6}}
\put(10,15){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,25){\line(1,0){6}}
\put(10,25){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,27.5){\line(1,0){6}}
\put(10,27.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,35){\line(1,0){6}}
\put(10,35){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,32.5){\line(1,0){6}}
\put(10,32.5){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,30){\line(1,0){6}}
\put(10,30){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,10){\line(1,0){6}}
\put(10,10){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(4,20){\line(1,0){6}}
\put(10,20){\vector(1,0){0.12}}
\linethickness{0.3mm}
\put(15,40){\line(1,0){5}}
\put(15,30){\line(0,1){10}}
\put(20,30){\line(0,1){10}}
\put(15,30)",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m7z81g
code,"\documentclass{standalone}
\usepackage{tikz}
\usepackage{pgfplots}
\begin{document}
\begin{tikzpicture}
\begin{axis}[
title = Interpolation,
xlabel = {x},
ylabel = {f(x)},
xmin	= -1.1, xmax = 1.1,
ymin	= -2.86707, ymax = 2.37177,
legend style ={
at={(1.58101e-322, 6.95322e-310)},
anchor = 
}
]
\addplot[
black,
thick,
,
smooth,
no marks,
mark options = {, solid,},
] coordinates {
	(-1,0.991698)
	(-0.998888,0.557253)
	(-0.997777,-0.409695)
	(-0.996665,-0.679384)
	(-0.995553,-0.229595)
	(-0.994441,0.568227)
	(-0.99333,1.33629)
	(-0.992218,1.83528)
	(-0.991106,1.98324)
	(-0.989994,1.81885)
	(-0.988883,1.44924)
	(-0.987771,1.00245)
	(-0.986659,0.593168)
	(-0.985548,0.303077)
	(-0.984436,0.173933)
	(-0.983324,0.20991)
	(-0.982212,0.385642)
	(-0.981101,0.656814)
	(-0.979989,0.970919)
	(-0.978877,1.27659)
	(-0.977765,1.53059)
	(-0.976654,1.70225)
	(-0.975542,1.7753)
	(-0.97443,1.74764)
	(-0.973319,1.62946)
	(-0.972207,1.44034)
	(-0.971095,1.20586)
	(-0.969983,0.954064)
	(-0.968872,0.712346)
	(-0.96776,0.504821)
	(-0.966648,0.35041)
	(-0.965536,0.261676)
	(-0.964425,0.244377)
	(-0.963313,0.297663)
	(-0.962201,0.414796)
	(-0.961089,0.584253)
	(-0.959978,0.791067)
	(-0.958866,1.01827)
	(-0.957754,1.24833)
	(-0.956643,1.46445)
	(-0.955531,1.65168)
	(-0.954419,1.79781)
	(-0.953307,1.89393)
	(-0.952196,1.9348)
	(-0.951084,1.91888)
	(-0.949972,1.84815)
	(-0.94886,1.72778)
	(-0.947749,1.56556)
	(-0.946637,1.3713)
	(-0.945525,1.15613)
	(-0.944414,0.931836)
	(-0.943302,0.710135)
	(-0.94219,0.502107)
	(-0.941078,0.317651)
	(-0.939967,0.165064)
	(-0.938855,0.0507318)
	(-0.937743,-0.0210574)
	(-0.936631,-0.0481908)
	(-0.93552,-0.0306946)
	(-0.934408,0.0293972)
	(-0.933296,0.128255)
	(-0.932185,0.26053)
	(-0.931073,0.419678)
	(-0.929961,0.598309)
	(-0.928849,0.788548)
	(-0.927738,0.98239)
	(-0.926626,1.17203)
	(-0.925514,1.35018)
	(-0.924402,1.51029)
	(-0.923291,1.6468)
	(-0.922179,1.75529)
	(-0.921067,1.83257)
	(-0.919956,1.87671)
	(-0.918844,1.88708)
	(-0.917732,1.86428)
	(-0.91662,1.81004)
	(-0.915509,1.7271)
	(-0.914397,1.61907)
	(-0.913285,1.49022)
	(-0.912173,1.34535)
	(-0.911062,1.18952)
	(-0.90995,1.02796)
	(-0.908838,0.865805)
	(-0.907727,0.707969)
	(-0.906615,0.558999)
	(-0.905503,0.422938)
	(-0.904391,0.30323)
	(-0.90328,0.202642)
	(-0.902168,0.123219)
	(-0.901056,0.0662577)
	(-0.899944,0.0323105)
	(-0.898833,0.02121)
	(-0.897721,0.0321148)
	(-0.896609,0.0635723)
	(-0.895497,0.113597)
	(-0.894386,0.179758)
	(-0.893274,0.259278)
	(-0.892162,0.349131)
	(-0.891051,0.446148)
	(-0.889939,0.547114)
	(-0.888827,0.648865)
	(-0.887715,0.748377)
	(-0.886604,0.842842)
	(-0.885492,0.929742)
	(-0.88438,1.0069)
	(-0.883268,1.07253)
	(-0.882157,1.12526)
	(-0.881045,1.16415)
	(-0.879933,1.18871)
	(-0.878822,1.19889)
	(-0.87771,1.19505)
	(-0.876598,1.17791)
	(-0.875486,1.1486)
	(-0.874375,1.10849)
	(-0.873263,1.05927)
	(-0.872151,1.00279)
	(-0.871039,0.941072)
	(-0.869928,0.876211)
	(-0.868816,0.81035)
	(-0.867704,0.745604)
	(-0.866593,0.684019)
	(-0.865481,0.627521)
	(-0.864369,0.577871)
	(-0.863257,0.536633)
	(-0.862146,0.505139)
	(-0.861034,0.484467)
	(-0.859922,0.475423)
	(-0.85881,0.478534)
	(-0.857699,0.494036)
	(-0.856587,0.521887)
	(-0.855475,0.561766)
	(-0.854364,0.613094)
	(-0.853252,0.675049)
	(-0.85214,0.746594)
	(-0.851028,0.826497)
	(-0.849917,0.913367)
	(-0.848805,1.00568)
	(-0.847693,1.10182)
	(-0.846581,1.20011)
	(-0.84547,1.29884)
	(-0.844358,1.3963)
	(-0.843246,1.49082)
	(-0.842135,1.58079)
	(-0.841023,1.66471)
	(-0.839911,1.74117)
	(-0.838799,1.80892)
	(-0.837688,1.86685)
	(-0.836576,1.91403)
	(-0.835464,1.94973)
	(-0.834352,1.97337)
	(-0.833241,1.98459)
	(-0.832129,1.98323)
	(-0.831017,1.96931)
	(-0.829906,1.94303)
	(-0.828794,1.90479)
	(-0.827682,1.85514)
	(-0.82657,1.79479)
	(-0.825459,1.72459)
	(-0.824347,1.6455)
	(-0.823235,1.55861)
	(-0.822123,1.46507)
	(-0.821012,1.36612)
	(-0.8199,1.26303)
	(-0.818788,1.15711)
	(-0.817676,1.04967)
	(-0.816565,0.94203)
	(-0.815453,0.835463)
	(-0.814341,0.731215)
	(-0.81323,0.630472)
	(-0.812118,0.534351)
	(-0.811006,0.44389)
	(-0.809894,0.360031)
	(-0.808783,0.283622)
	(-0.807671,0.215399)
	(-0.806559,0.15599)
	(-0.805447,0.105905)
	(-0.804336,0.065538)
	(-0.803224,0.0351654)
	(-0.802112,0.0149461)
	(-0.801001,0.0049254)
	(-0.799889,0.00503774)
	(-0.798777,0.0151119)
	(-0.797665,0.0348768)
	(-0.796554,0.0639678)
	(-0.795442,0.101934)
	(-0.79433,0.148248)
	(-0.793218,0.20231)
	(-0.792107,0.263463)
	(-0.790995,0.330994)
	(-0.789883,0.404151)
	(-0.788772,0.482145)
	(-0.78766,0.564164)
	(-0.786548,0.649379)
	(-0.785436,0.736953)
	(-0.784325,0.82605)
	(-0.783213,0.915841)
	(-0.782101,1.00551)
	(-0.780989,1.09427)
	(-0.779878,1.18135)
	(-0.778766,1.26603)
	(-0.777654,1.3476)
	(-0.776543,1.42541)
	(-0.775431,1.49887)
	(-0.774319,1.56741)
	(-0.773207,1.63054)
	(-0.772096,1.68779)
	(-0.770984,1.73878)
	(-0.769872,1.78316)
	(-0.76876,1.82066)
	(-0.767649,1.85104)
	(-0.766537,1.87413)
	(-0.765425,1.88983)
	(-0.764314,1.89807)
	(-0.763202,1.89885)
	(-0.76209,1.8922)
	(-0.760978,1.87822)
	(-0.759867,1.85705)
	(-0.758755,1.82888)
	(-0.757643,1.79392)
	(-0.756531,1.75246)
	(-0.75542,1.70478)
	(-0.754308,1.6",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9roNeN
code,"\section{\module{textwrap} ---
         Text wrapping and filling}

\declaremodule{standard}{textwrap}
\modulesynopsis{Text wrapping and filling}
\moduleauthor{Greg Ward}{gward@python.net}
\sectionauthor{Greg Ward}{gward@python.net}

\versionadded{2.3}

The \module{textwrap} module provides two convenience functions,
\function{wrap()} and \function{fill()}, as well as
\class{TextWrapper}, the class that does all the work, and a utility function 
\function{dedent()}.  If you're just wrapping or filling one or two 
text strings, the convenience functions should be good enough; otherwise, 
you should use an instance of \class{TextWrapper} for efficiency.

\begin{funcdesc}{wrap}{text\optional{, width\optional{, \moreargs}}}
Wraps the single paragraph in \var{text} (a string) so every line is at
most \var{width} characters long.  Returns a list of output lines,
without final newlines.

Optional keyword arguments correspond to the instance attributes of
\class{TextWrapper}, documented below.  \var{width} defaults to
\code{70}.
\end{funcdesc}

\begin{funcdesc}{fill}{text\optional{, width\optional{, \moreargs}}}
Wraps the single paragraph in \var{text}, and returns a single string
containing the wrapped paragraph.  \function{fill()} is shorthand for
\begin{verbatim}
""\n"".join(wrap(text, ...))
\end{verbatim}

In particular, \function{fill()} accepts exactly the same keyword
arguments as \function{wrap()}.
\end{funcdesc}

Both \function{wrap()} and \function{fill()} work by creating a
\class{TextWrapper} instance and calling a single method on it.  That
instance is not reused, so for applications that wrap/fill many text
strings, it will be more efficient for you to create your own
\class{TextWrapper} object.

An additional utility function, \function{dedent()}, is provided to
remove indentation from strings that have unwanted whitespace to the
left of the text.

\begin{funcdesc}{dedent}{text} 
Remove any common leading whitespace from every line in \var{text}.

This can be used to make triple-quoted strings line up with the left
edge of the display, while still presenting them in the source code
in indented form.

Note that tabs and spaces are both treated as whitespace, but they are
not equal: the lines \code{"" {} hello""} and \code{""\textbackslash{}thello""}
are considered to have no common leading whitespace.  (This behaviour is
new in Python 2.5; older versions of this module incorrectly expanded
tabs before searching for common leading whitespace.)

For example:
\begin{verbatim}
def test():
    # end first line with \ to avoid the empty line!
    s = '''\
    hello
      world
    '''
    print repr(s)          # prints '    hello\n      world\n    '
    print repr(dedent(s))  # prints 'hello\n  world\n'
\end{verbatim}
\end{funcdesc}

\begin{classdesc}{TextWrapper}{...}
The \class{TextWrapper} constructor accepts a number of optional
keyword arguments.  Each argument corresponds to one instance attribute,
so for example
\begin{verbatim}
wrapper = TextWrapper(initial_indent=""* "")
\end{verbatim}
is the same as
\begin{verbatim}
wrapper = TextWrapper()
wrapper.initial_indent = ""* ""
\end{verbatim}

You can re-use the same \class{TextWrapper} object many times, and you
can change any of its options through direct assignment to instance
attributes between uses.
\end{classdesc}

The \class{TextWrapper} instance attributes (and keyword arguments to
the constructor) are as follows:

\begin{memberdesc}{width}
(default: \code{70}) The maximum length of wrapped lines.  As long as
there are no individual words in the input text longer than
\member{width}, \class{TextWrapper} guarantees that no output line
will be longer than \member{width} characters.
\end{memberdesc}

\begin{memberdesc}{expand_tabs}
(default: \code{True}) If true, then all tab characters in \var{text}
will be expanded to spaces using the \method{expandtabs()} method of
\var{text}.
\end{memberdesc}

\begin{memberdesc}{replace_whitespace}
(default: \code{True}) If true, each whitespace character (as defined
by \code{string.whitespace}) remaining after tab expansion will be
replaced by a single space.  \note{If \member{expand_tabs} is false
and \member{replace_whitespace} is true, each tab character will be
replaced by a single space, which is \emph{not} the same as tab
expansion.}
\end{memberdesc}

\begin{memberdesc}{initial_indent}
(default: \code{''}) String that will be prepended to the first line
of wrapped output.  Counts towards the length of the first line.
\end{memberdesc}

\begin{memberdesc}{subsequent_indent}
(default: \code{''}) String that will be prepended to all lines of
wrapped output except the first.  Counts towards the length of each
line except the first.
\end{memberdesc}

\begin{memberdesc}{fix_sentence_endings}
(default: \code{False}) If true, \class{TextWrapper} attempts to detect
sentence endings and ensure that sentences are always separated by
exactly two spaces.  This is generally desired for text in a monospaced
font.  However, the sentence detection algorithm is imperfect: it
assumes that a sentence ending consists of a lowercase letter followed
by on",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",v93fVs
code,"\hypertarget{util_8h_source}{\section{\-Process/util.h}
}

\begin{DoxyCode}
00001 \textcolor{preprocessor}{#include <iostream>}
00002 \textcolor{preprocessor}{#include <cstring>} \textcolor{comment}{//strcpy}
00003 std::string utilGetName(std::string percorso);
00004 \textcolor{keywordtype}{char} * toChar(std::string Stringa);
00005 \textcolor{keywordtype}{int} toInt(std::string Stringa);
00006 \textcolor{keywordtype}{char} * FromIntToChar(\textcolor{keywordtype}{int} num);
\end{DoxyCode}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",x3D6wU
code,"% \section{Evaluation: Recasting Type Errors as Runtime Errors}
\section{Evaluation}
\label{sec:evaluation}

We have implemented a prototype of our search procedure and trace
visualization for a purely functional subset of \ocaml\ --- with
polymorphic types and records, but no modules, objects, or polymorphic
variants --- in a tool called \nanomaly.
\footnote{\url{https://github.com/ucsd-progsys/nanomaly}}
%
We treat explicit type signatures, \eg @(x : int)@, as
primitive operations that narrow the type of the wrapped value.
%
In our implementation we instantiated \gensym\ with a simple random
generation of values, which we will show suffices for the majority of
type errors.

\paragraph{Evaluation Goals}
%
There are four questions we seek to answer with our evaluation:
%
\begin{enumerate}
\item \emphbf{Witness Coverage} (\S~\ref{sec:eval:witness-coverage},~\ref{sec:how-safe})
      How many ill-typed programs \emph{admit} witnesses?
\item \emphbf{Witness Complexity} (\S~\ref{sec:trace-complexity})
      How \emph{complex} are the traces produced by the witnesses?
\item \emphbf{Witness Utility} (\S~\ref{sec:advantage-traces},~\ref{sec:user-study})
      How \emph{helpful} %(qualitatively and quantitatively)
      are the witnesses in debugging type errors?
\item \emphbf{Witness-based Blame} (\S~\ref{sec:locating})
      Can witnesses be used to \emph{locate} the source
      of an error?
\end{enumerate}

In the sequel we present our experimental methodology (\S~\ref{sec:methodology})
and then answer the above questions.
%
However, for the impatient reader, we first summarize our main results:

\paragraph{1. Most Type Errors Admit Witnesses}
Our prime result is that the vast majority of static type errors, around
85\%, do in fact admit a dynamic witness.
%
Further, \toolname efficiently synthesizes witnesses with its randomized search;
it can synthesize a witness for over 75\% of programs in under one second, \ie
fast enough for interactive use. %to be integrated into the edit-compile-debug cycle.
%

\paragraph{2. Jump-Compressed Traces Are Small}
We find that our jump-compression heuristic effectively abstracts the
pedestrian details of computation, compressing the median trace with
14--15 single-step reductions to only 4 jumps.
%
Over 80\% of programs have a jump-compressed trace with at most 10
jumps, providing a bird's-eye view from which we can launch a more
in-depth investigation.

\paragraph{3. Witnesses Help Novices}
A witness should also help programmers \emph{understand} and
\emph{fix} type errors.
%
We use a set of ill-typed student programs to show that \toolname's
witnesses effectively demonstrate the runtime error that the type
system prevented.
%
Furthermore, we find, in a study of undergraduate students, that
\toolname's witnesses lead to more accurate diagnoses and fixes of type
errors than \ocaml's type error messages.

\paragraph{4. Witnesses Assign Blame}
Finally, we present a simple heuristic that allows us to use witnesses
to \emph{automatically} assign blame for type errors.
%
We treat the values inside the stuck term as \emph{sources} of typing
constraints and the stuck term itself as a \emph{sink}, producing
a slice of the program that likely contains the error.
%
Using this heuristic, \toolname's witnesses are competitive with the
state-of-the-art localization tools \mycroft~\cite{Loncaric2016-uk}
and \sherrloc~\cite{Zhang2014-lv}.

\subsection{Methodology}
\label{sec:methodology}
We answer the first two questions on two sets of ill-typed programs,
\ie\ programs that were rejected by the \ocaml\ compiler because of a
type error.
%
The first dataset comes from the Spring 2014 undergraduate Programming
Languages (CSE 130) course at UC San Diego.
%
We recorded each interaction with the \ocaml\ top-level system over the
course of the first three assignments (IRB
% \# hidden for blind review),
\#140608),
from which we extracted \ucsdsize\ distinct, ill-typed \ocaml\ programs
from a cohort of 46 students.
%
The second dataset --- widely used in the literature --- comes from a
graduate-level course at the University of Washington~\cite{Lerner2006-pj},
from which we extracted 284 ill-typed programs.
%
Both datasets contain relatively small programs, the largest being 348
SLoC; however, they demonstrate a variety of functional programming
idioms including (tail) recursive functions, higher-order functions,
and polymorphic and algebraic data types. % and expression evaluators.

We answer the third question in two steps.
%
First, we present a qualitative evaluation of \toolname's traces on a
selection of programs drawn from the UCSD dataset.
%
Second, we present a quantitative user study of students in the
University of Virginia's Spring 2016 undergraduate Programming Languages
(CS 4501) course.
%
As part of an exam, we presented the students with ill-typed \ocaml\
programs and asked them to
%
(1) \emph{explain} the type error, and
%
(2) \emph{fix} the type error (IRB \#2014009900).
%
For each problem the students were given the ill-typed program and
either \ocaml's error message or \toolname's jump-compressed t",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3grlP3
code,"\hypertarget{classMDL__lock_1_1Ticket__list}{
\section{MDL\_\-lock::Ticket\_\-list Class Reference}
\label{classMDL__lock_1_1Ticket__list}\index{MDL\_\-lock::Ticket\_\-list@{MDL\_\-lock::Ticket\_\-list}}
}
\subsection*{Public Types}
\begin{DoxyCompactItemize}
\item 
\hypertarget{classMDL__lock_1_1Ticket__list_a1934e2705b66d67f9b2ee8c5777c5d79}{
typedef \hyperlink{classI__P__List}{I\_\-P\_\-List}$<$ \hyperlink{classMDL__ticket}{MDL\_\-ticket}, \hyperlink{structI__P__List__adapter}{I\_\-P\_\-List\_\-adapter}$<$ \hyperlink{classMDL__ticket}{MDL\_\-ticket},\&\hyperlink{classMDL__ticket_ad9c009e5c097d2159dd142aa7f58e010}{MDL\_\-ticket::next\_\-in\_\-lock},\&MDL\_\-ticket::prev\_\-in\_\-lock $>$, \hyperlink{classI__P__List__null__counter}{I\_\-P\_\-List\_\-null\_\-counter}, \hyperlink{classI__P__List__fast__push__back}{I\_\-P\_\-List\_\-fast\_\-push\_\-back}$<$ \hyperlink{classMDL__ticket}{MDL\_\-ticket} $>$ $>$ {\bfseries List}}
\label{classMDL__lock_1_1Ticket__list_a1934e2705b66d67f9b2ee8c5777c5d79}

\end{DoxyCompactItemize}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\hypertarget{classMDL__lock_1_1Ticket__list_a1493ed0035fdf50427af186c7adfb078}{
{\bfseries operator const List \&} () const }
\label{classMDL__lock_1_1Ticket__list_a1493ed0035fdf50427af186c7adfb078}

\item 
void \hyperlink{classMDL__lock_1_1Ticket__list_ae1ec50de835e397d9c56b010fb894dfb}{add\_\-ticket} (\hyperlink{classMDL__ticket}{MDL\_\-ticket} $\ast$ticket)
\item 
void \hyperlink{classMDL__lock_1_1Ticket__list_ac6cdf2ddde468fcdf268b9d5a2a30200}{remove\_\-ticket} (\hyperlink{classMDL__ticket}{MDL\_\-ticket} $\ast$ticket)
\item 
\hypertarget{classMDL__lock_1_1Ticket__list_a63c09c20851340847cbe114e303b77f5}{
bool {\bfseries is\_\-empty} () const }
\label{classMDL__lock_1_1Ticket__list_a63c09c20851340847cbe114e303b77f5}

\item 
\hypertarget{classMDL__lock_1_1Ticket__list_ad7a94a6e308867da8a9f5db34665b1ed}{
bitmap\_\-t {\bfseries bitmap} () const }
\label{classMDL__lock_1_1Ticket__list_ad7a94a6e308867da8a9f5db34665b1ed}

\end{DoxyCompactItemize}


\subsection{Member Function Documentation}
\hypertarget{classMDL__lock_1_1Ticket__list_ae1ec50de835e397d9c56b010fb894dfb}{
\index{MDL\_\-lock::Ticket\_\-list@{MDL\_\-lock::Ticket\_\-list}!add\_\-ticket@{add\_\-ticket}}
\index{add\_\-ticket@{add\_\-ticket}!MDL_lock::Ticket_list@{MDL\_\-lock::Ticket\_\-list}}
\subsubsection[{add\_\-ticket}]{\setlength{\rightskip}{0pt plus 5cm}void MDL\_\-lock::Ticket\_\-list::add\_\-ticket (
\begin{DoxyParamCaption}
\item[{{\bf MDL\_\-ticket} $\ast$}]{ticket}
\end{DoxyParamCaption}
)}}
\label{classMDL__lock_1_1Ticket__list_ae1ec50de835e397d9c56b010fb894dfb}
Add ticket to MDL\_\-lock's list of waiting requests and update corresponding bitmap of lock types. \hypertarget{classMDL__lock_1_1Ticket__list_ac6cdf2ddde468fcdf268b9d5a2a30200}{
\index{MDL\_\-lock::Ticket\_\-list@{MDL\_\-lock::Ticket\_\-list}!remove\_\-ticket@{remove\_\-ticket}}
\index{remove\_\-ticket@{remove\_\-ticket}!MDL_lock::Ticket_list@{MDL\_\-lock::Ticket\_\-list}}
\subsubsection[{remove\_\-ticket}]{\setlength{\rightskip}{0pt plus 5cm}void MDL\_\-lock::Ticket\_\-list::remove\_\-ticket (
\begin{DoxyParamCaption}
\item[{{\bf MDL\_\-ticket} $\ast$}]{ticket}
\end{DoxyParamCaption}
)}}
\label{classMDL__lock_1_1Ticket__list_ac6cdf2ddde468fcdf268b9d5a2a30200}
Remove ticket from MDL\_\-lock's list of requests and update corresponding bitmap of lock types. 

The documentation for this class was generated from the following file:\begin{DoxyCompactItemize}
\item 
mdl.cc\end{DoxyCompactItemize}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1gYhF3
code,"% start.tex: Example to get started.
%
% Author: Marcel van der Goot
%
% $Id: start.tex,v 1.2 2004/04/13 20:03:33 marcel Exp $
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\chapter{Getting Started}\label{chap:gettingstarted}

In this chapter we give an example program that illustrates several features
of the CHP language. Although the example is no substitute for reading
the rest of the manual, it is a good idea to try the example first,
as a means of getting started. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Running the simulator}\label{sec:runningstart}

To make sure that the simulator is installed, run
\begin{verbatim}
chpsim -help
\end{verbatim}
Assuming that {\tt{}chpsim} is installed, this will print a version number,
followed by a list of command line options.  These options are described in
Chapter \ref{chap:simulation}, but for now, ignore them.  Make sure that the
version of chpsim is at least 2.0, as earlier versions have significant
differences.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Example program}\label{sec:demo1}

Create a file {\tt{}demo1.chp} with the following contents (without the line numbers).

\medskip
\hrule
\begin{listing}{1}
requires ""stdio.chp""; // for reading and writing files

export function is_odd(x: int): bool
CHP
  { [   x[0] -> is_odd := true
    [] ~x[0] -> is_odd := false
    ]
  }

type command = { Push, Pop, Top, Show };

type ubyte = {0 .. 255};

process stack(N: int)(I?: command; P?: ubyte; Q!: ubyte)
CHP
  { var s: array [0..N-1] of ubyte;
    var c: command;
    var top: int = -1;
    *[ I?c;
       [ c = `Push -> top := top + 1;
                      P?s[top];
      [] c = `Pop  -> Q!s[top];
                      top := top - 1;
      [] c = `Top  -> [  is_odd(s[top]) -> print(s[top], ""is odd"")
                     [] ~is_odd(s[top]) -> print(s[top], ""is even"")
                      ]
      [] c = `Show -> show(s, top)
       ]
     ]
  }

/* note: tester is a terminating process */
process tester()(cmnd!: command; p!, q?: ubyte)
CHP
 { var x: ubyte;
   cmnd!`Push, p!5;
   p!6, cmnd!`Push;
   cmnd!`Pop, q?x;
   show(x);
   cmnd!`Top;
   cmnd!`Push; p!x+2;
   cmnd!`Show;
 }

process main()()
META
 { instance ps: stack;
   instance ts: tester;
   ps(5);
   connect ps.P, ts.p;
   connect ps.Q, ts.q;
   connect ps.I, ts.cmnd;
 }
\end{listing}
\hrule
\medskip

To simulate the example, run
\begin{verbatim}
chpsim demo1.chp
\end{verbatim}
At several points during simulation, the simulator will stop with
a `{\tt{}(cmnd?)}' prompt. To continue the simulation, hit the enter key.
Eventually, the simulation will terminate with an error message about
deadlock, at which point you can hit enter to exit chpsim.

To better understand the program, you may want to step through it.
You do this by entering commands at the {\tt{}(cmnd?)} prompt. The {\tt{}help}
command will list the available commands. For example, try
\begin{verbatim}
(cmnd?) next /ts
\end{verbatim}
then hit the enter key at subsequent {\tt{}(cmnd?)} prompts.
{\tt{}/ts} is the instance name of the {\it{}tester} process (line 48); note the
`{\tt{}/}': process instance names always start with a slash. With this command,
the simulation will stop every time before executing a statement of
the {\it{}tester} process. It will identify the line number and the statement
where it is stopped. For instance
\begin{verbatim}
(next) /ts at demo1.chp[36:14]
        p!5
\end{verbatim}
says that the simulator is stopped at {\tt{}p!5}, at line
36 of {\tt{}demo1.chp}, to be executed by {\tt{}/ts}.
The {\tt{}:14} identifies the character position in the line.

Another good command to try is {\tt{}print}. For instance, {\tt{}print x} will print
the value of variable {\it{}x}. {\tt{}print /ts} will print the port connections
of process {\it{}/ts}.

Below we give a very brief description of the example code; consult
Chapter \ref{chap:syntax} for the details.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Modules}\label{sec:demorequire}

Line {\tt{}1}.
A program can consist of multiple modules. A module is imported with
a {\tt{}requires} clause. Module {\tt{}stdio.chp} is a standard module that
provides routines for reading and writing files; the example does not
actually use any of the {\tt{}stdio.chp} routines. A module can be in
the current working directory or in the module search path. The {\tt{}-v} option
of {\tt{}chpsim} will report which files are actually read. There is no
default extension (such as {\tt{}.chp}).

To make a name visible outside a module (when that module is imported),
it must be exported with {\tt{}export}. The only name exported by
{\tt{}demo1.chp} is function {\it{}is\_odd} at line {\tt{}3}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\subsection{Functions}\label{sec:demofunction}

Lines {\tt{}3}--{\tt{}8}.
Function {\it{}is\_odd} determines whether an integer is odd or even. The
expression {\tt{}x[0]}, when {\it",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VNz1cY
code,"%----------------------------------------------------------------------------------------
%	CHAPTER 1
%----------------------------------------------------------------------------------------

%\chapterimage{chapter_head_2.pdf} % Chapter heading image

\chapter{Introduction}
 
\section{Before Starting}\index{Before Starting}

%\lipsum[1-7] % Dummy text
%\fig{6cm}{./resources/fig1-2.png}{初始化界面}
%------------------------------------------------

\section{Data Structure}\index{Data Structure}


\section{Python Code Examples}\index{Python Code Examples}
\subsection{Pulse Download and Start}\index{Pulse Download and Start}
\subsection{Counter Data Readout}\index{Counter Data Readout}



\section{C Code Examples}\index{C Code Examples}
\subsection{Pulse Download and Start}\index{Pulse Download and Start}
\subsection{Counter Data Readout}\index{Counter Data Readout}

\section{Labview Examples}\index{Labview Examples}
\subsection{Pulse Download and Start}\index{Pulse Download and Start}
\subsection{Counter Data Readout}\index{Counter Data Readout}


%This statement requires citation \cite{bo ok_key}; this one is more specific \cite[122]{article_key}.

%------------------------------------------------

%\section{Lists}\index{Lists}

%Lists are useful to present information in a concise and/or ordered way\footnote{Footnote example...}.

%\subsection{Numbered List}\index{Lists!Numbered List}

%\begin{enumerate}
%\item The first item
%\item The second item
%\item The third item
%\end{enumerate}
%
%\subsection{Bullet Points}\index{Lists!Bullet Points}
%
%\begin{itemize}
%\item The first item
%\item The second item
%\item The third item
%\end{itemize}
%
%\subsection{Descriptions and Definitions}\index{Lists!Descriptions and Definitions}
%
%\begin{description}
%\item[Name] Description
%\item[Word] Definition
%\item[Comment] Elaboration
%\end{description}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",znALA3
code,"\hypertarget{classhryky_1_1error_1_1_holder}{\section{hryky\-:\-:error\-:\-:Holder Class Reference}
\label{classhryky_1_1error_1_1_holder}\index{hryky\-::error\-::\-Holder@{hryky\-::error\-::\-Holder}}
}


retains the pointer to an instance of \hyperlink{classhryky_1_1error_1_1_base}{error\-::\-Base}.  




{\ttfamily \#include $<$error\-\_\-holder.\-h$>$}

\subsection*{Public Types}
\begin{DoxyCompactItemize}
\item 
\hypertarget{classhryky_1_1error_1_1_holder_a46d720ab7a2ddd82bd62f89fdb1d5c8d}{typedef \hyperlink{classhryky_1_1error_1_1_holder}{Holder} \hyperlink{classhryky_1_1error_1_1_holder_a46d720ab7a2ddd82bd62f89fdb1d5c8d}{this\-\_\-type}}\label{classhryky_1_1error_1_1_holder_a46d720ab7a2ddd82bd62f89fdb1d5c8d}

\begin{DoxyCompactList}\small\item\em self. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{classhryky_1_1error_1_1_holder_a6ca38bfd85f20a356fbbb502f5014a61}{Holder} ()
\begin{DoxyCompactList}\small\item\em default constructor. \end{DoxyCompactList}\item 
\hypertarget{classhryky_1_1error_1_1_holder_afe3ac23d03c6cf27a484e04f47e4c563}{\hyperlink{classhryky_1_1error_1_1_holder_afe3ac23d03c6cf27a484e04f47e4c563}{Holder} (\hyperlink{classhryky_1_1error_1_1_base}{pointer} ptr)}\label{classhryky_1_1error_1_1_holder_afe3ac23d03c6cf27a484e04f47e4c563}

\begin{DoxyCompactList}\small\item\em constructor with a pointer to \hyperlink{classhryky_1_1error_1_1_base}{error\-::\-Base}. \end{DoxyCompactList}\item 
\hypertarget{classhryky_1_1error_1_1_holder_a2b2d9a132be02b1e55fdb157ed73cb2f}{char const $\ast$ \hyperlink{classhryky_1_1error_1_1_holder_a2b2d9a132be02b1e55fdb157ed73cb2f}{what} () const }\label{classhryky_1_1error_1_1_holder_a2b2d9a132be02b1e55fdb157ed73cb2f}

\begin{DoxyCompactList}\small\item\em retrieves the description of the held error. \end{DoxyCompactList}\item 
\hypertarget{classhryky_1_1error_1_1_holder_af320e8f0a727858f4171c14b14e82cc0}{\hyperlink{classhryky_1_1error_1_1_holder_af320e8f0a727858f4171c14b14e82cc0}{$\sim$\-Holder} ()}\label{classhryky_1_1error_1_1_holder_af320e8f0a727858f4171c14b14e82cc0}

\begin{DoxyCompactList}\small\item\em destructor. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
retains the pointer to an instance of \hyperlink{classhryky_1_1error_1_1_base}{error\-::\-Base}. 

\subsection{Constructor \& Destructor Documentation}
\hypertarget{classhryky_1_1error_1_1_holder_a6ca38bfd85f20a356fbbb502f5014a61}{\index{hryky\-::error\-::\-Holder@{hryky\-::error\-::\-Holder}!Holder@{Holder}}
\index{Holder@{Holder}!hryky::error::Holder@{hryky\-::error\-::\-Holder}}
\subsubsection[{Holder}]{\setlength{\rightskip}{0pt plus 5cm}{\bf hryky\-::error\-::\-Holder\-::\-Holder} (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}}\label{classhryky_1_1error_1_1_holder_a6ca38bfd85f20a356fbbb502f5014a61}


default constructor. 

constructor. 

The documentation for this class was generated from the following files\-:\begin{DoxyCompactItemize}
\item 
\hyperlink{error__holder_8h}{error\-\_\-holder.\-h}\item 
\hyperlink{error__holder_8cpp}{error\-\_\-holder.\-cpp}\end{DoxyCompactItemize}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",atReJM
code,"\section{\'Etude de la vitesse sur le site M}

\begin{center}
	\includegraphics[scale=0.5]
\end{center}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sTBaJx
code,"%% LaTeX Beamer presentation template (requires beamer package)
%% see http://bitbucket.org/rivanvx/beamer/wiki/Home
%% idea contributed by H. Turgut Uyar
%% template based on a template by Till Tantau
%% this template is still evolving - it might differ in future releases!


% by:
% amir sohrabi

% this file is presented for assignment in scientific writing class 
% MEEN 653-600 Scientific Writing fall2014
% 

\documentclass{beamer}

\mode<presentation>
{
\usetheme{Warsaw}

\setbeamercovered{transparent}
}

\usepackage[english]{babel}
\usepackage[latin1]{inputenc}

% font definitions, try \usepackage{ae} instead of the following
% three lines if you don't like this look
\usepackage{mathptmx}
\usepackage[scaled=.90]{helvet}
\usepackage{courier}


\usepackage[T1]{fontenc}


\title{Introduction to \LaTeX}

\subtitle{A presentation for scinetific writing course}
% - Use the \inst{?} command only if the authors have different
%   affiliation.
%\author{F.~Author\inst{1} \and S.~Another\inst{2}}
\author{Amir Sohrabi\inst{1}}

\institute[Universities of]
{
\inst{1}%
Department of Mechanical Engineering\\
Texas A\&M University
}

\date{29 Sep 2014}


% This is only inserted into the PDF information catalog. Can be left
% out.
\subject{presentation for MEEN 653-600 Scientific Writing}

\AtBeginSubsection[]
{
  \begin{frame}<beamer>{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}


% If you wish to uncover everything in a step-wise fashion, uncomment
% the following command:

%\beamerdefaultoverlayspecification{<+->}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

	
\begin{frame}
\frametitle{Outline}
\tableofcontents
% You might wish to add the option [pausesections]
\end{frame}


\section{Introduction} 

\subsection{About \LaTeX  }
\begin{frame}{About \LaTeX \cite{LaTeX_wiki}}
\begin{itemize}
  \item \LaTeX was originally written in the early 1980s by Leslie Lamport at SRI
  \item It was releases in 1984
  \item \LaTeX is usually pronounced as: lay-tek or lah-tek
  \item Scientific written communication is done in \LaTeX
  \item It is good with displaying formulas
  \item Its can handle multiple language documents 
  \item It is distributed under a free software license 
\end{itemize}
\end{frame}

\subsection{Comparing Microsoft Word and \LaTeX}

\begin{frame} {Comparing Microsoft Word and \LaTeX}
\begin{itemize}
\item Word is not Free
\item It seems the there is no need to learn Word, \LaTeX has to be learned
\item In Word every thing is in the file, \LaTeX separates all the components 
\item Size of the files can be huge in Word, \LaTeX main file are normally smaller than 100KB
\item It takes up to minutes for Word to load, in \LaTeX file can be written in a note pad program
\item Word updates to new version that has problem with old files, \LaTeX is basically the same since begining with new features 
\end{itemize}
\end{frame}

\begin{frame} {Performance Test \cite{The_Beauty_of_LATEX}}
     \begin{columns}[t]
     \begin{column}[T]{5cm}
      Justification and hyphenation 
     \end{column}
     \begin{column}[T]{5cm} % alternative top-align that's better for graphics   
      \includegraphics[height=5cm,trim = 0mm 0mm 00mm 0mm]{../figs/comparison.pdf}\\
     \end{column}
     \end{columns} 
\end{frame}


\section{Distibutions}

\begin{frame}{Distributions of \LaTeX}

     \begin{columns}[t]
     \begin{column}[T]{5cm}
      MiKTeX 
     \includegraphics[scale=0.15,trim = 0mm 0mm 00mm 0mm]{../figs/MiKText.png}      
     \end{column}
     \begin{column}[T]{5cm} % alternative top-align that's better for graphics   
      TeXlive 
      \includegraphics[scale=0.15,trim = 0mm 0mm 00mm 0mm]{../figs/TeXLive.png}         
     \end{column}
     \end{columns} 
         
\end{frame}


\section{\LaTeX editors}

\begin{frame}{\LaTeX  editors}
\centering
     \begin{columns}[t]
     \begin{column}[T]{3cm}
      \centering Texmaker 
      \begin{figure} 
     \includegraphics[height=2cm,trim = 0mm 0mm 00mm 0mm]{../figs/texmaker.png} 
     \end{figure}     
     \end{column}
     \begin{column}[T]{3cm} % alternative top-align that's better for graphics   
      \centering TeXworks
       \begin{figure}
     \includegraphics[height=2cm,trim = 0mm 0mm 00mm 0mm]{../figs/TeXworks.png}  
      \end{figure}       
     \end{column}
     \begin{column}[T]{3cm} % alternative top-align that's better for graphics   
      \centering TeXlipse 
      \begin{figure} 
      \includegraphics[height=2cm,trim = 0mm 20mm 0mm 0mm]{../figs/TexLipse.png}
      \end{figure}         
     \end{column}
     \end{columns} 
         
\end{frame}


\section{Structure of a document in \LaTeX}

\begin{frame}{Structure of a document in \LaTeX}
Different parts of the document
\includegraphics[height=6cm,trim = 0mm 20mm 0mm 0mm]{../figs/sample_thesis_document.png}
\end{frame}

\subsubsection{Usefull features of \LaTeX}
\subsubsection{Citation} 

\begin{frame}{Citation}

\begin{itemize}
  \item Citations are stored in a standard way
  \item They are printed and sorted as they are used and requested
  \item Numbering is automatic
  \",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8_RmfM
code,"\documentclass{report}
\usepackage{hyperref}
% WARNING: THIS SHOULD BE MODIFIED DEPENDING ON THE LETTER/A4 SIZE
\oddsidemargin 0cm
\evensidemargin 0cm
\marginparsep 0cm
\marginparwidth 0cm
\parindent 0cm
\textwidth 16.5cm

\ifpdf
  \usepackage[pdftex]{graphicx}
\else
  \usepackage[dvips]{graphicx}
\fi

\begin{document}
% special variable used for calculating some widths.
\newlength{\tmplength}
\chapter{Introduction}
Full table of contents:



Table of contents to level 0 (should be empty):



Table of contents to level 1 (only top{-}level sections):



Table of contents to level 2:



Table of contents to level 3 (should be equivalent to full toc):



\section{Section 1}


\section{Section 2}


\subsection*{Section 2.1}


\subsection*{Section 2.2}


\subsubsection*{\large{\textbf{Section 2.2.1}}\normalsize\hspace{1ex}\hfill}


\section{Section 3}
\chapter{Unit ok{\_}table{\_}of{\_}contents{\_}unit}
\end{document}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0jCEKx
code,"\hypertarget{classfoo__1__1__streamable__template__in__foo_8js}{}\section{/home/bhargavi/\+Documents/\+S\+D\+R/\+Copy\+\_\+\+Exam\+\_\+808\+X/docs/html/classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.js File Reference}
\label{classfoo__1__1__streamable__template__in__foo_8js}\index{/home/bhargavi/\+Documents/\+S\+D\+R/\+Copy\+\_\+\+Exam\+\_\+808\+X/docs/html/classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js@{/home/bhargavi/\+Documents/\+S\+D\+R/\+Copy\+\_\+\+Exam\+\_\+808\+X/docs/html/classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js}}
\subsection*{Variables}
\begin{DoxyCompactItemize}
\item 
var \hyperlink{classfoo__1__1__streamable__template__in__foo_8js_af5772f92937521c16cf4ec7618c44989}{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo}
\end{DoxyCompactItemize}


\subsection{Variable Documentation}
\index{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js@{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js}!classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo@{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo}}
\index{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo@{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo}!classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js@{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js}}
\subsubsection[{\texorpdfstring{classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo}{classfoo_1_1_streamable_template_in_foo}}]{\setlength{\rightskip}{0pt plus 5cm}var classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo}\hypertarget{classfoo__1__1__streamable__template__in__foo_8js_af5772f92937521c16cf4ec7618c44989}{}\label{classfoo__1__1__streamable__template__in__foo_8js_af5772f92937521c16cf4ec7618c44989}
{\bfseries Initial value\+:}
\begin{DoxyCode}
=
[
    [ \textcolor{stringliteral}{""StreamableTemplateInFoo""}, \textcolor{stringliteral}{""
      classfoo\_1\_1\_streamable\_template\_in\_foo.html#a0e5d7147d321adf8a2ec348243da70ea""}, null ],
    [ \textcolor{stringliteral}{""value""}, \textcolor{stringliteral}{""classfoo\_1\_1\_streamable\_template\_in\_foo.html#a3e660d1eb09d54cba1d045867d73ad87""}, null ]
]
\end{DoxyCode}


Definition at line 1 of file classfoo\+\_\+1\+\_\+1\+\_\+streamable\+\_\+template\+\_\+in\+\_\+foo.\+js.

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3_L4-T
code,"import { FutureResult } from '@ephox/katamari';
import { ResponseBodyDataTypes, RequestBody, ResponseBody } from './HttpData';
import { HttpError } from './HttpError';

export const enum HttpMethod {
  Get = 'get',
  Post = 'post',
  Delete = 'delete',
  Patch = 'patch',
  Put = 'put'
}

export type ProgressFunction = (loaded: number, total: number) => void;
export type LoadedProgressFunction = (loaded: number) => void;

export interface HttpRequest<T extends ResponseBodyDataTypes> {
  responseType: T;
  body: RequestBody;
  url: string;
  method: HttpMethod;
  query?: Record<string, string>;
  progress?: ProgressFunction;
  headers?: Record<string, string>;
  credentials?: boolean;
}

export interface HttpResponse<T extends ResponseBody> {
  headers: Record<string, string>;
  statusCode: number;
  body: T;
}

export type JwtToken = string;
export type JwtTokenFactory = (fresh: boolean) => FutureResult<JwtToken, HttpError>;

type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;

export type PostPutInit <T extends ResponseBodyDataTypes> = Omit<HttpRequest<T>, 'method'>;
export type GetDelInit <T extends ResponseBodyDataTypes> = Omit<HttpRequest<T>, 'method' | 'body'>;

export interface DownloadHttpRequest {
  url: string;
  progress?: LoadedProgressFunction;
  headers?: Record<string, string>;
  credentials?: boolean;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kq0yIC
code,"import React from 'react';
import { connect } from 'react-redux';
import { View, Text, FlatList } from 'react-native';
import sb from 'react-native-style-block';
import dateHelper from '@shared/utils/date-helper';
import appConfig from '../config.app';
import ConvItem from '../components/ConvItem';
import { reloadConverseList } from '@shared/redux/actions/chat';
import styled from 'styled-components/native';
import TRefreshControl from '../components/TComponent/TRefreshControl';
import { ChatType } from '../types/params';
import type { TRPGState, TRPGDispatchProp } from '@redux/types/__all__';
import _get from 'lodash/get';
import _values from 'lodash/values';
import _sortBy from 'lodash/sortBy';
import _size from 'lodash/size';
import { TMemo } from '@shared/components/TMemo';
import { useSpring, animated } from 'react-spring/native';
import { useTRPGSelector } from '@shared/hooks/useTRPGSelector';
import { TRPGTabScreenProps } from '@app/router';
import { switchToChatScreen } from '@app/navigate';

const NetworkContainer = styled(animated.View as any)<{
  isOnline: boolean;
  tryReconnect: boolean;
}>`
  position: absolute;
  top: -26px;
  left: 0;
  right: 0;
  height: 26px;
  background-color: ${({ isOnline, tryReconnect }) =>
    isOnline ? '#2ecc71' : tryReconnect ? '#f39c12' : '#c0392b'};
  color: white;
  align-items: center;
  justify-content: center;
`;

const NetworkText = styled.Text`
  color: white;
`;

const NetworkTip: React.FC = TMemo((props) => {
  const network = useTRPGSelector((state) => state.ui.network);

  const style = useSpring({
    to: {
      top: network.isOnline ? -26 : 0,
    },
  });

  return (
    <NetworkContainer
      style={style}
      isOnline={network.isOnline}
      tryReconnect={network.tryReconnect}
    >
      <NetworkText>{network.msg}</NetworkText>
    </NetworkContainer>
  );
});
NetworkTip.displayName = 'NetworkTip';

interface Props extends TRPGDispatchProp, TRPGTabScreenProps<'TRPG'> {
  converses: any;
  conversesDesc: any;
  groups: any;
  usercache: any;
}
class HomeScreen extends React.Component<Props> {
  state = {
    isRefreshing: false,
  };

  getList() {
    if (_size(this.props.converses) > 0) {
      const arr: any[] = _sortBy(
        _values(this.props.converses),
        (item) => new Date(item.lastTime || 0)
      )
        .reverse()
        .map((item, index) => {
          const uuid = item.uuid;
          const defaultIcon =
            uuid === 'trpgsystem'
              ? appConfig.defaultImg.trpgsystem
              : appConfig.defaultImg.user;
          let avatar: string;
          if (item.type === 'user') {
            avatar = _get(this.props.usercache, [uuid, 'avatar']);
          } else if (item.type === 'group') {
            const group = this.props.groups.find((g) => g.uuid === uuid);
            avatar = group ? group.avatar : '';
          }

          return {
            icon: item.icon || avatar || defaultIcon,
            title: item.name,
            content: item.lastMsg,
            time: item.lastTime ? dateHelper.getShortDiff(item.lastTime) : '',
            uuid,
            unread: item.unread,
            onPress: () => {
              this.handleSelectConverse(uuid, item.type, item);
            },
          };
        });

      return (
        <FlatList
          refreshControl={
            <TRefreshControl
              refreshing={this.state.isRefreshing}
              onRefresh={() => this.handleRefresh()}
            />
          }
          keyExtractor={(item, index) => item.uuid}
          data={arr}
          renderItem={({ item }) => <ConvItem {...item} />}
        />
      );
    } else {
      return <Text style={styles.tipText}>{this.props.conversesDesc}</Text>;
    }
  }

  handleRefresh() {
    this.setState({ isRefreshing: true });
    const timer = setTimeout(() => {
      this.setState({ isRefreshing: false });
    }, 10000); // 10秒后自动取消
    this.props.dispatch(
      reloadConverseList(() => {
        this.setState({ isRefreshing: false });
        clearTimeout(timer);
      })
    );
  }

  handleSelectConverse(uuid: string, type: ChatType, info) {
    switchToChatScreen(
      this.props.navigation.dangerouslyGetParent(),
      uuid,
      type,
      info.name
    );
  }

  render() {
    return (
      <View style={styles.container}>
        {this.getList()}
        <NetworkTip />
      </View>
    );
  }
}

const styles = {
  container: [sb.flex()],
  tipText: [sb.textAlign('center'), sb.margin(80, 0, 0, 0), sb.color('#999')],
};

export default connect((state: TRPGState) => ({
  converses: state.chat.converses,
  conversesDesc: state.chat.conversesDesc,
  groups: state.group.groups,
  usercache: state.cache.user,
}))(HomeScreen);
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",i1-sjA
code,"/* tslint:disable:max-classes-per-file */
import { forEach } from 'ramda';
import Interactor from '../CourseInteractor';
import InteractorLoader from '../CourseInteractorLoader';
import { ICourseStorage } from '../ICourseStorage';
import { IProgressStorage } from '../IProgressStorage';
import { ISerializedCourse } from '../ISerializedCourse';
import { ISerializedProgress, Progress } from '../ISerializedProgress';

const courses: { [propName: string]: ISerializedCourse } = {
  '09438926-b170-4005-a6e8-5dd8fba83cde': {
    id: '09438926-b170-4005-a6e8-5dd8fba83cde',
    title: 'Foo bar',
    children: [
      {
        id: '01f23c2a-b681-43db-9d27-5d8d59f62aed',
        children: [
          {
            id: '23e20d5b-ad8e-41be-9891-5ca7b12675c4',
            type: 'foo'
          }
        ]
      },
      {
        id: 'e194f80b-7312-43a2-995e-060f64631782',
        children: [
          {
            id: '84fdc1a1-e3bf-4a87-8360-0c3b7beec179',
            foo: 'bar',
            type: 'foo'
          }
        ]
      }
    ]
  }
};

const progresses: ISerializedProgress = {};

class MockCourseStorage implements ICourseStorage {
  public getCourse(id: string) {
    return new Promise<ISerializedCourse>((resolve, reject) => {
      if (courses[id]) {
        resolve(courses[id]);
      }

      reject(new Error(`There exists no course with id ${id}`));
    });
  }
}

class MockProgressStorage implements IProgressStorage {
  public getProgress(id: string) {
    return Promise.resolve(progresses);
  }

  public setProgress(id: string, progress: ISerializedProgress): Promise<void> {
    return Promise.resolve();
  }

  public resetProgress() {
    return Promise.resolve();
  }
}

let interactorLoader: InteractorLoader;
let interactor: Interactor;

beforeEach(() => {
  const storage = new MockCourseStorage();
  const progress = new MockProgressStorage();

  interactorLoader = new InteractorLoader(storage, progress);
});

it('loadCourse loads the course from storage if it exists', () =>
  interactorLoader.loadCourse('09438926-b170-4005-a6e8-5dd8fba83cde'));

it('loadCourse fails if the course does not exist', () => {
  return interactorLoader
    .loadCourse('c990eacb-12af-4085-8b50-25d95d114984')
    .catch(err => {
      expect(err).toBeInstanceOf(Error);
    });
});

describe('getStructure', () => {
  beforeEach(() =>
    interactorLoader
      .loadCourse('09438926-b170-4005-a6e8-5dd8fba83cde')
      .then(i => {
        interactor = i;
      })
  );

  it('returns the whole tree by default', () => {
    expect(interactor.getStructure()).toMatchSnapshot();
  });

  it('returns only the first levels if a level is passed', () => {
    expect(interactor.getStructure(1)).toMatchSnapshot();
  });
});

describe('reset children progress', () => {
  beforeEach(() =>
    interactorLoader
      .loadCourse('09438926-b170-4005-a6e8-5dd8fba83cde')
      .then(i => {
        interactor = i;
      })
  );

  it('resets progress correctly', () => {
    const root = '09438926-b170-4005-a6e8-5dd8fba83cde';
    const children = [
      '01f23c2a-b681-43db-9d27-5d8d59f62aed',
      '23e20d5b-ad8e-41be-9891-5ca7b12675c4',
      'e194f80b-7312-43a2-995e-060f64631782',
      '84fdc1a1-e3bf-4a87-8360-0c3b7beec179'
    ];
    forEach(
      id => {
        interactor.markAsCorrect(id);
      },
      [root, ...children]
    );
    interactor.resetChildrenProgress(root);
    expect(interactor.getProgress(root).progress).toBe(Progress.Correct);
    forEach(id => {
      expect(interactor.getProgress(id).progress).toBe(Progress.Unseen);
    }, children);
  });
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Sy2TcN
code,"import {Component, OnInit} from '@angular/core';
import {EvaluationService} from '../service/evaluation.service';

@Component({
  selector: 'app-evaluation',
  templateUrl: './evaluation.component.html',
  styleUrls: ['./evaluation.component.css']
})
export class EvaluationComponent implements OnInit {

  public result: number[];
  private quadrantWith = 200;

  constructor(public evaluationService: EvaluationService) {
  }

  ngOnInit() {
    this.result = this.evaluationService.evaluate();
  }

  calc(points: number): number {
    const value = 1 / 30 * (points - 10) * this.quadrantWith
    return (value < 0) ? 0 : value;
  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",aNt_76
code,"/**
 * @license
 * Copyright 2018 Palantir Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as Lint from ""../../index"";

// tslint:disable: object-literal-sort-keys
export const codeExamples = [
    {
        description: ""Prefer `while` loops instead of `for` loops without an initializer and incrementor."",
        config: Lint.Utils.dedent`
            ""rules"": { ""prefer-while"": true }
        `,
        pass: Lint.Utils.dedent`
            for(let i = 1; i < 10; i++) {
                console.log(i);
            }

            for (let i = 0; i < 10; i+=1) {
                console.log(i);
            }

            for (let i = 0; i < 10;) {
                i += 1;
            }
        `,
        fail: Lint.Utils.dedent`
            for(;;) {
                console.log('Hello World');
            }

            for(;true===true;) {
                console.log('Hello World');
            }
        `,
    },
];
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",qm7VLS
code,"/* eslint-disable no-self-assign */

import Game from '../../../../gui/html/js/game';
import { Plugin } from '../../../../gui/html/js/plugin';
import Translator from '../../../../gui/html/js/translator';

jest.mock('../../../../gui/html/js/dom');
jest.mock('../../../../gui/html/js/filters');

describe('Game', () => {
  const l10n = new Translator();
  const defaultDerivedPluginMetadata = {
    name: 'test',
    isActive: false,
    isDirty: false,
    isEmpty: false,
    isMaster: false,
    isLightPlugin: false,
    loadsArchive: false,
    messages: [],
    suggestedTags: [],
    currentTags: []
  };
  const gameData = {
    folder: 'test',
    generalMessages: [
      {
        type: 'say',
        text: 'test',
        language: 'en',
        condition: ''
      }
    ],
    masterlist: { revision: '0', date: '' },
    groups: { masterlist: [], userlist: [] },
    plugins: [defaultDerivedPluginMetadata],
    bashTags: []
  };

  describe('#constructor()', () => {
    test(""should set folder to the object's value"", () => {
      const game = new Game(gameData, l10n);
      expect(game.folder).toBe('test');
    });

    test(""should set generalMessages to the object's value"", () => {
      const game = new Game(gameData, l10n);
      expect(game.generalMessages).toEqual([
        {
          type: 'say',
          text: 'test',
          language: 'en',
          condition: ''
        }
      ]);
    });

    test(""should set masterlist to the object's value"", () => {
      const game = new Game(gameData, l10n);
      expect(game.masterlist).toEqual({ revision: '0', date: '' });
    });

    test(""should construct plugins from the object's plugins value"", () => {
      const game = new Game(gameData, l10n);
      expect(game.plugins.length).toBe(1);
      expect(game.plugins[0]).toHaveProperty('update');
      expect(game.plugins[0].name).toBe('test');
      expect(game.plugins[0].cardZIndex).toBe(1);
    });

    test(""should set oldLoadOrder to an empty array even if the object's value if defined"", () => {
      const game = new Game(gameData, l10n);
      expect(game.oldLoadOrder).toEqual([]);
    });
  });

  describe('#folder', () => {
    let game: Game;
    // It's not worth the hassle of defining and checking the event type in test
    // code.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let handleEvent: (evt: any) => void;

    beforeEach(() => {
      game = new Game(gameData, l10n);
    });

    afterEach(() => {
      document.removeEventListener('loot-game-folder-change', handleEvent);
    });

    test('setting value should not dispatch an event if the new value is equal to the old one', done => {
      handleEvent = () => {
        done(new Error('Should not have fired an event'));
      };
      document.addEventListener('loot-game-folder-change', handleEvent);

      game.folder = game.folder;
      setTimeout(done, 100);
    });

    test('setting value should dispatch an event if the new value differs from the old one', done => {
      handleEvent = evt => {
        expect(evt.detail.folder).toBe('other test');
        done();
      };
      document.addEventListener('loot-game-folder-change', handleEvent);

      game.folder = 'other test';
    });
  });

  describe('#generalMessages', () => {
    let game: Game;
    // It's not worth the hassle of defining and checking the event type in test
    // code.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let handleEvent: (evt: any) => void;

    beforeEach(() => {
      game = new Game(gameData, l10n);
    });

    afterEach(() => {
      document.removeEventListener(
        'loot-game-global-messages-change',
        handleEvent
      );
    });

    test('setting value should not dispatch an event if the new value is equal to the old one', done => {
      handleEvent = () => {
        done(new Error('Should not have fired an event'));
      };
      document.addEventListener(
        'loot-game-global-messages-change',
        handleEvent
      );

      game.generalMessages = game.generalMessages;
      setTimeout(done, 100);
    });

    test('setting value should dispatch an event if the new and old message strings differ', done => {
      const newMessages = [
        {
          type: 'say',
          text: 'bar',
          language: 'en',
          condition: ''
        }
      ];
      handleEvent = evt => {
        expect(evt.detail.messages).toEqual(newMessages);
        expect(evt.detail.totalDiff).toBe(0);
        expect(evt.detail.errorDiff).toBe(0);
        expect(evt.detail.warningDiff).toBe(0);
        done();
      };
      document.addEventListener(
        'loot-game-global-messages-change',
        handleEvent
      );

      game.generalMessages = newMessages;
    });

    test('setting value should dispatch an event if the new and old message type counts differ', done => {
      const newMessages = [
        {
          type: 'warn',
          text: 'foo',
          language: 'en',
          condition: ''
        },
        {
          type: 'error',
          text: 'bar',
         ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",m_O8l_
code,"abstract class AbstractClass {
    constructor(str: string, other: AbstractClass) {
        this.method(parseInt(str));
        let val = this.prop.toLowerCase();

        if (!str) {
            this.prop = ""Hello World"";
        }
        this.cb(str);

        // OK, reference is inside function
        const innerFunction = () => {
            return this.prop;
        }

        // OK, references are to another instance
        other.cb(other.prop);
    }

    abstract prop: string;
    abstract cb: (s: string) => void;

    abstract method(num: number): void;

    other = this.prop;
    fn = () => this.prop;

    method2() {
        this.prop = this.prop + ""!"";
    }
}

abstract class DerivedAbstractClass extends AbstractClass {
    cb = (s: string) => {};

    constructor(str: string, other: AbstractClass, yetAnother: DerivedAbstractClass) {
        super(str, other);
        // there is no implementation of 'prop' in any base class
        this.cb(this.prop.toLowerCase());

        this.method(1);

        // OK, references are to another instance
        other.cb(other.prop);
        yetAnother.cb(yetAnother.prop);
    }
}

class Implementation extends DerivedAbstractClass {
    prop = """";
    cb = (s: string) => {};

    constructor(str: string, other: AbstractClass, yetAnother: DerivedAbstractClass) {
        super(str, other, yetAnother);
        this.cb(this.prop);
    }

    method(n: number) {
        this.cb(this.prop + n);
    }
}

class User {
    constructor(a: AbstractClass) {
        a.prop;
        a.cb(""hi"");
        a.method(12);
        a.method2();
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Bmullx
code,"/// <reference path='fourslash.ts' />

// @noUnusedLocals: true
// @noUnusedParameters: true

////function g(a, b) { b; }
////g(1, 2);

verify.not.codeFixAvailable(""Remove unused declaration for: 'a'"");
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xR9yY9
code,"// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the ""License"");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an ""AS IS"" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import automl from '@google-cloud/automl';
import * as dayjs from 'dayjs';
import * as express from 'express';
import { auth } from 'google-auth-library';
import * as morgan from 'morgan';
import {
  AUTOML_API_SCOPE,
  AUTOML_API_URL,
  AUTOML_BUCKET_URL,
  LOCATION,
  PROJECT_ID,
} from './constants';
import { OperationMetadata } from './types';

export const app = express();
app.use(express.json());
app.use(morgan('combined'));

const client = new automl.v1beta1.AutoMlClient();

// Controls model type. For more options, see:
// https://cloud.google.com/vision/automl/alpha/docs/reference/rest/v1beta1/projects.locations.models#imageclassificationmodelmetadata
const DEFAULT_MODEL_TYPE = 'mobile-high-accuracy-1';

const DEFAULT_TRAIN_BUDGET = 1;
const DATASET_NAME_REGEX = new RegExp('^[a-zA-Z_0-9]+$');
const MODEL_VERSION_FORMAT = 'vYYYYMMDDHHmmss';
const parent = client.locationPath(PROJECT_ID, LOCATION);

// A model as returned by AutoML /models response
interface Model {
  name: string;
  datasetId: string;
  displayName: string;
  createTime: string;
  updateTime: string;
  imageClassificationModelMetadata: {
    trainBudget: string;
    trainCost: string;
    stopReason: string;
    modelType: string;
  };
}

interface ModelResp {
  model: Model[];
}

/// create a new dataset
function createDataset(displayName: String): Promise<any> {
  const dataset = {
    name: displayName,
    displayName,
    imageClassificationDatasetMetadata: {
      classificationType: 'MULTICLASS',
    },
  };

  return client.createDataset({ parent, dataset });
}

const extractIdFromName = (datasetName: string): string => {
  const parts = datasetName.split('/');
  return parts[parts.length - 1];
};

/// returns the ID of a dataset of the format ICN** or null if not found
function getDatasetName(automlId: string): Promise<string | null> {
  return client.listDatasets({ parent }).then((responses: any[]) => {
    const datasets = responses[0];
    for (const dataset of datasets) {
      if (extractIdFromName(dataset['name']) === automlId) {
        return dataset['name'];
      }
    }
    return null;
  });
}

/// initiates an operation on automl to start importing data for a dataset
async function importDataset(
  name: string,
  displayName: string,
  labels: string
): Promise<OperationMetadata> {
  const inputConfig = {
    gcsSource: {
      inputUris: [`${AUTOML_BUCKET_URL}/${displayName}/${labels}`],
    },
  };
  return client
    .importData({ name, inputConfig })
    .then((responses: any[]) => responses[1]); // initial api response with operation metadata
}

/**
 * List all datasets
 */
app.get('/datasets', async (req, res, next) => {
  try {
    const authClient = await auth.getClient({ scopes: [AUTOML_API_SCOPE] });
    const url = `${AUTOML_API_URL}/datasets`;
    const resp = await authClient.request({ url });
    res.json(resp.data);
  } catch (err) {
    console.error(err);
    next(err);
  }
});

/**
 * Endpoint to create a new dataset in automl. Requires a name parameter
 */
app.post('/datasets', async (req, res, next) => {
  try {
    const { displayName } = req.body;
    if (displayName === undefined) {
      res.status(400).send('Expected a dataset `displayName`');
      return;
    }
    if (!displayName.match(DATASET_NAME_REGEX)) {
      res
        .status(400)
        .send(
          'The displayName contains a not allowed character, the' +
            ' only allowed ones are ASCII Latin letters A-Z and a-z, an underscore (_),' +
            ' and ASCII digits 0-9'
        );
      return;
    }
    console.info(`Attempting to create dataset: ${displayName}`);
    const [response] = await createDataset(displayName);
    res.json(response);
  } catch (err) {
    res.status(500);
    res.json({message: err.message});
    console.error(err);
  }
});

/**
 * Endpoint to delete dataset from automl
 */
app.delete('/datasets/:datasetId', async (req, res, next) => {
  try {
    const { datasetId } = req.params;
    if (!datasetId) {
      res.status(400).send(`Expected datasetId: ${datasetId}`);
      return;
    }
    const name = await getDatasetName(datasetId);
    if (name === null) {
      res.status(404).send(`No dataset found for id: ${datasetId}`);
      return;
    }
    const resp = await client.deleteDataset({ name });
    console.log(resp);
    res.json();
  } catch (err) {
    console.error(err);
    res.status(500);
    res.json({message: err.message});
  }
});

/**
 * Endpoint to initiate importing data for a dataset in automl.
 *
 * I",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",kg-CNq
code,"import { Model } from ""chomex"";
import catalog from ""./catalog"";

export interface DeckCaptureLike {
  _id: any;
  title: string;
  row: number; col: number; page: number;
  cell: { x: number; y: number; w: number, h: number; };
  protected?: boolean;
}

/**
 * 編成キャプチャの設定を保存する用のモデル。
 * ふつうの1艦隊編成もあれば、連合艦隊、航空基地編成などもある。
 */
export default class DeckCapture extends Model {

  static __ns = ""DeckCapture"";

  static default = {
    normal: {
      title: ""編成キャプチャ"",
      row: 3,
      col: 2,
      cell: catalog.fleet,
      protected: true,
    },
    combined: {
      title: ""連合編成キャプチャ"",
      row: 3,
      col: 2,
      cell: catalog.fleet,
      protected: true,
      page: 2,
      pagelabel: [""第一艦隊"", ""第二艦隊""],
    },
    aviation: {
      title: ""基地航空隊"",
      row: 1,
      col: 3,
      cell: catalog.aviation,
      protected: true,
    },
  };

  title: string; // この編成キャプチャ設定の名前
  row: number; // 列数
  col: number; // 行数
  cell: { // 1セルの定義
    x: number; // スタート座標X （ゲーム幅を1に対して）
    y: number; // スタート座標Y （ゲーム高を1に対して）
    w: number; // セル幅 （ゲーム幅を1に対して）
    h: number; // セル高 （ゲーム高を1に対して）
  };
  protected = false; // 削除禁止
  page = 1; // 繰り返しページ数
  pagelabel: string[] = []; // ページごとのラベル

  obj(): DeckCaptureLike {
    return {
      _id: this._id,
      title: this.title,
      row: this.row, col: this.col, page: this.page,
      cell: {...this.cell},
      protected: this.protected,
    };
  }

  static listObj(): DeckCaptureLike[] {
    return this.list<DeckCapture>().map(d => d.obj());
  }

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BEDYRf
code,"// @allowjs: true
// @checkjs: true
// @noemit: true
// @strict: true
// @filename: thisPropertyAssignmentComputed.js
this[""a"" + ""b""] = 0
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",1eioyz
code,"/*
 * Copyright 2018 The Kubeflow Authors
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as React from 'react';
import Hr from './Hr';
import { create } from 'react-test-renderer';

describe('Hr', () => {
  it('renders with the right styles', () => {
    const tree = create(<Hr fields={[]} />);
    expect(tree).toMatchSnapshot();
  });
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pHzVgk
code,"<TS language=""hi_IN"" version=""2.1"">
<context>
    <name>AddressBookPage</name>
    <message>
        <source>Create a new address</source>
        <translation>नया पता लिखिए !</translation>
    </message>
    <message>
        <source>Copy the currently selected address to the system clipboard</source>
        <translation>चुनिन्दा पते को सिस्टम क्लिपबोर्ड पर कापी करे !</translation>
    </message>
    <message>
        <source>&amp;Copy Address</source>
        <translation>&amp;पता कॉपी करे</translation>
    </message>
    <message>
        <source>&amp;Delete</source>
        <translation>&amp;मिटाए !!</translation>
    </message>
    <message>
        <source>Copy &amp;Label</source>
        <translation>&amp;लेबल कॉपी करे </translation>
    </message>
    <message>
        <source>&amp;Edit</source>
        <translation>&amp;एडिट</translation>
    </message>
    <message>
        <source>Comma separated file (*.csv)</source>
        <translation>Comma separated file (*.csv)</translation>
    </message>
    </context>
<context>
    <name>AddressTableModel</name>
    <message>
        <source>Label</source>
        <translation>लेबल</translation>
    </message>
    <message>
        <source>Address</source>
        <translation>पता</translation>
    </message>
    <message>
        <source>(no label)</source>
        <translation>(कोई लेबल नही !)</translation>
    </message>
</context>
<context>
    <name>AskPassphraseDialog</name>
    <message>
        <source>Enter passphrase</source>
        <translation>पहचान शब्द/अक्षर डालिए !</translation>
    </message>
    <message>
        <source>New passphrase</source>
        <translation>नया पहचान शब्द/अक्षर डालिए !</translation>
    </message>
    <message>
        <source>Repeat new passphrase</source>
        <translation>दोबारा नया पहचान शब्द/अक्षर डालिए !</translation>
    </message>
    <message>
        <source>Encrypt wallet</source>
        <translation>एनक्रिप्ट वॉलेट !</translation>
    </message>
    <message>
        <source>This operation needs your wallet passphrase to unlock the wallet.</source>
        <translation>वॉलेट खोलने के आपका वॉलेट पहचान शब्द्‌/अक्षर चाईए !</translation>
    </message>
    <message>
        <source>Unlock wallet</source>
        <translation>वॉलेट खोलिए</translation>
    </message>
    <message>
        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>
        <translation>वॉलेट डीक्रिप्ट( विकोड) करने के लिए आपका वॉलेट पहचान शब्द्‌/अक्षर चाईए !</translation>
    </message>
    <message>
        <source>Decrypt wallet</source>
        <translation> डीक्रिप्ट वॉलेट</translation>
    </message>
    <message>
        <source>Change passphrase</source>
        <translation>पहचान शब्द/अक्षर बदलिये !</translation>
    </message>
    <message>
        <source>Confirm wallet encryption</source>
        <translation>वॉलेट एनक्रिपशन को प्रमाणित कीजिए !</translation>
    </message>
    <message>
        <source>Wallet encrypted</source>
        <translation>वॉलेट एनक्रिप्ट हो गया !</translation>
    </message>
    <message>
        <source>Wallet encryption failed</source>
        <translation>वॉलेट एनक्रिप्ट नही हुआ!</translation>
    </message>
    <message>
        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>
        <translation>वॉलेट एनक्रिपशन नाकाम हो गया इंटर्नल एरर की वजह से! आपका वॉलेट एनक्रीपत नही हुआ है!</translation>
    </message>
    <message>
        <source>The supplied passphrases do not match.</source>
        <translation>आपके द्वारा डाले गये पहचान शब्द/अक्षर मिलते नही है !</translation>
    </message>
    <message>
        <source>Wallet unlock failed</source>
        <translation>वॉलेट का लॉक नही खुला !</translation>
    </message>
    <message>
        <source>The passphrase entered for the wallet decryption was incorrect.</source>
        <translation>वॉलेट डीक्रिप्ट करने के लिए जो पहचान शब्द/अक्षर डाले गये है वो सही नही है!</translation>
    </message>
    <message>
        <source>Wallet decryption failed</source>
        <translation>वॉलेट का डीक्रिप्ट-ष्ण असफल !</translation>
    </message>
    </context>
<context>
    <name>BanTableModel</name>
    </context>
<context>
    <name>BitcoinGUI</name>
    <message>
        <source>Synchronizing with network...</source>
        <translation>नेटवर्क से समकालिक (मिल) रहा है ...</translation>
    </message>
    <message>
        <source>&amp;Overview</source>
        <translation>&amp;विवरण</translation>
    </message>
    <message>
        <source>Show general overview of wallet</source>
        <translation>वॉलेट का सामानया विवरण दिखाए !</translation>
    </message>
    <message>
        <source>&amp;Transactions</source>
        <translation>&amp; लेन-देन
</translation>
    </message>
    <message>
        <source>Browse transaction history</source>
        <translation>देखिए पुराने लेन-देन के विवरण !</translation>
    </message>
    <message>
        <source>E&amp;xit</source>
        <translation>बाहर जायें</translation>
    </message>
    <message>
        <source>Quit application</so",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sBo-js
code,"/// <reference path=""fourslash.ts"" />

// @allowNonTsExtensions: true
// @Filename: file.js
//// /**
////   * @param {number} a
////   * @param {string} b
//// */
//// exports.foo = function(a, b) {
//// 	a/*a*/;
//// 	b/*b*/
//// };

goTo.marker('a');
edit.insert('.');
verify.completionListContains('toFixed', undefined, undefined, 'method');


goTo.marker('b');
edit.insert('.');
verify.completionListContains('substr', undefined, undefined, 'method');
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HPj5z9
code,"/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

import {ENTER} from '@angular/cdk/keycodes';
import {CommonModule} from '@angular/common';
import {NgModule} from '@angular/core';
import {
  ErrorStateMatcher,
  MatCommonModule,
  MatRippleModule,
} from '@angular/material-experimental/mdc-core';
import {MatChip, MatChipCssInternalOnly} from './chip';
import {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';
import {MatChipEditInput} from './chip-edit-input';
import {MatChipGrid} from './chip-grid';
import {MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip-icons';
import {MatChipInput} from './chip-input';
import {MatChipListbox} from './chip-listbox';
import {MatChipRow} from './chip-row';
import {MatChipOption} from './chip-option';
import {MatChipSet} from './chip-set';


const CHIP_DECLARATIONS = [
  MatChip,
  MatChipAvatar,
  MatChipCssInternalOnly,
  MatChipEditInput,
  MatChipGrid,
  MatChipInput,
  MatChipListbox,
  MatChipOption,
  MatChipRemove,
  MatChipRow,
  MatChipSet,
  MatChipTrailingIcon,
];

@NgModule({
  imports: [MatCommonModule, CommonModule, MatRippleModule],
  exports: [MatCommonModule, CHIP_DECLARATIONS],
  declarations: CHIP_DECLARATIONS,
  providers: [
    ErrorStateMatcher,
    {
      provide: MAT_CHIPS_DEFAULT_OPTIONS,
      useValue: {
        separatorKeyCodes: [ENTER]
      } as MatChipsDefaultOptions
    }
  ]
})
export class MatChipsModule {
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",msoBVw
code,"/// <reference path='fourslash.ts' />

//@Filename: file.tsx
//// declare module JSX {
////     interface Element { }
////     interface IntrinsicElements {
////     }
////     interface ElementAttributesProperty { props }
//// }
//// class MyClass {
////   props: {
////     [|[|{| ""contextRangeIndex"": 0 |}name|]?: string;|]
////     size?: number;
//// }
////
////
//// var x = <MyClass [|[|{| ""contextRangeIndex"": 2 |}name|]='hello'|]/>;

verify.rangesWithSameTextAreRenameLocations(""name"");
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",JCMq0O
code,"export interface IGridItem {
    name: string;
}

export class Tests {
    public items: KnockoutObservableArray<IGridItem>;
    public selectedItems: KnockoutObservableArray<IGridItem>;
    public gridOptionsAlarms: kg.GridOptions<IGridItem>;

    constructor() {
        this.items = ko.observableArray<IGridItem>();
        this.selectedItems = ko.observableArray<IGridItem>();
        this.gridOptionsAlarms = this.createDefaultGridOptions(this.items, this.selectedItems);
    }

    public createDefaultGridOptions<Type>(dataArray: KnockoutObservableArray<Type>, selectedItems: KnockoutObservableArray<Type>): kg.GridOptions<Type> {
        return {
            data: dataArray,
            displaySelectionCheckbox: false,
            footerVisible: false,
            multiSelect: false,
            showColumnMenu: false,
            plugins: null,
            selectedItems: selectedItems
        };
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",ZI5sL-
code,"import * as React from ""react"";
import { CarbonIconProps } from ""../../"";
declare const Laptop24: React.ForwardRefExoticComponent<
  CarbonIconProps & React.RefAttributes<SVGSVGElement>
>;
export default Laptop24;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lYGNui
code,"export interface SimpleAPIConfig {

}

export interface SimpleAPI {
    count: number;
    add(n?: number): void;
    sub(n?: number): void;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",e1fyB8
code,"import React from 'react'
import {
  StyleSheet,
  View,
  processColor
} from 'react-native'
import { BubbleChart } from 'react-native-charts-wrapper'

class BubbleChartScreen extends React.Component<any, any> {

  constructor(props) {
    super(props)

    const { modeInfo } = props
    const temp = props.value.weekLoc.sort((a, b) => {
      const day = a.x - b.x
      return day || (a.y - b.y)
    })
    const valueFormatter = props.value.daysMapper.slice()
    valueFormatter.unshift()
    valueFormatter.push(props.value.daysMapper[0])
    const isX = item => item.x === 6
    const values = [...temp.filter(isX), ...temp.filter(item => item.x !== 6)]
    this.state = {
      data: {
        dataSets: [{
          values,
          label: '奖杯数比例',
          config: {
            color: processColor(modeInfo.deepColor),
            highlightCircleWidth: 2,
            drawValues: false,
            valueTextColor: processColor(modeInfo.titleTextColor)
          }
        }]
      },
      legend: {
        enabled: true,
        textSize: 14,
        form: 'CIRCLE',
        wordWrapEnabled: true,
        textColor: processColor(props.modeInfo.standardTextColor)
      },
      xAxis: {
        valueFormatter,
        position: 'BOTTOM',
        drawGridLines: false,
        granularityEnabled: true,
        granularity: 1,
        textColor: processColor(props.modeInfo.standardTextColor)
        // avoidFirstLastClipping: true
        // labelCountForce: true,
        // labelCount: 12
      },
      yAxis: {
        left: {
          axisMinimum: 0,
          axisMaximum: 23,
          textColor: processColor(props.modeInfo.standardTextColor)
        },
        right: {
          axisMinimum: 0,
          axisMaximum: 23,
          textColor: processColor(props.modeInfo.standardTextColor)
        }
      }
    }
  }

  handleSelect = () => {
  }

  render() {
    // console.log(this.state.data.dataSets[0].values.filter(item => item.x === 6))
    return (
      <View style={{ height: 250 }}>
        <BubbleChart
          style={styles.chart}
          data={this.state.data}
          legend={this.state.legend}
          chartDescription={{text: ''}}
          xAxis={this.state.xAxis}
          yAxis={this.state.yAxis}
          entryLabelColor={processColor(this.props.modeInfo.titleTextColor)}
          onSelect={this.handleSelect}
        />
      </View>
    )
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5FCFF'
  },
  chart: {
    flex: 1
  }
})

export default BubbleChartScreen",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6EwRIY
code,"// #docregion
import { Component }   from '@angular/core';
import { DataService } from './data.service';

@Component({
  selector: 'hero-di',
  template: `<h1>Hero: {{name}}</h1>`
})
export class HeroComponent {
  name = '';
  constructor(dataService: DataService) {
    this.name = dataService.getHeroName();
  }
}
// #enddocregion
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",EkHaun
code,"import 'rxjs/add/operator/map';
import {Injectable} from '@angular/core';
import {Http, RequestMethod} from '@angular/http';
import {Observable} from 'rxjs/Observable';
import {Cube} from '../models/cube';
import 'rxjs/add/operator/mergeMap';
import {Algorithm} from '../models/analysis/algorithm';
import {Input, InputTypes} from '../models/analysis/input';
import {Output, OutputTypes} from '../models/analysis/output';
import {environment} from '../../environments/environment';
import {ExecutionConfiguration} from '../models/analysis/executionConfiguration';
import {Configuration} from 'jasmine-spec-reporter/built/configuration';

@Injectable()
export class AlgorithmsService {
  private API_DAM_PATH: string = environment.DAMUrl ;

  constructor(private http: Http) {
  }


  getActualCompatibleAlgorithms(): Observable<Algorithm[]> {
   // console.log(JSON.stringify({time_series: AlgorithmsService.dummyTimeSeries().serialize(), descriptive_statistics: AlgorithmsService.dummyDescriptiveStatistics().serialize(), clustering:  AlgorithmsService.dummyClustering().serialize()}));

    return this.http.get(`${environment.DAMUrl}/services/meta/all`)
      .map(res => {
        let algorithms = [];
        let response = res.json();
        for (let key of Object.keys(response)){
          let algorithm =  new Algorithm().deserialize(response[key]);

          algorithms.push(algorithm);

        }

        return algorithms;

      });



  }


  getActualCompatibleAlgorithm( algorithmName): Observable<Algorithm> {

    return this.http.get(`${environment.DAMUrl}/services/meta/${algorithmName}`)
      .map(res => {

        let response = res.json();

        return new Algorithm().deserialize(response);
      });


  }


  getTimeSeriesAlgorithm(): Observable<Algorithm> {
    let that = this;
    return this.getActualCompatibleAlgorithm('time_series');


  }
  getDescriptiveStatisticsAlgorithm(): Observable<Algorithm> {
    return this.getActualCompatibleAlgorithm('descriptive_statistics');

  }

  getClusteringAlgorithm(): Observable<Algorithm> {
    return this.getActualCompatibleAlgorithm('clustering');

  }

  getOutlierDetectionAlgorithm(): Observable<Algorithm> {
    let that = this;
    return this.getActualCompatibleAlgorithm('outlier_detection');
    /*return Observable.create(function (observer: any) {
      observer.next(AlgorithmsService.dummyOutlierDetection());
    });*/
  }

  getRuleMiningAlgorithm(): Observable<Algorithm> {
    let that = this;
    return this.getActualCompatibleAlgorithm('rule_mining');
    /*return Observable.create(function (observer: any) {
      observer.next(AlgorithmsService.dummyOutlierDetection());
    });*/
  }

  getAlgorithm(name, cube: Cube): Observable<Algorithm> {
    switch (name) {
      case 'time_series':
        return this.getTimeSeriesAlgorithm();
      case 'descriptive_statistics':
        return this.getDescriptiveStatisticsAlgorithm();
      case 'clustering':
        return this.getClusteringAlgorithm();
      case 'outlier_detection':
        return this.getOutlierDetectionAlgorithm();
      case 'rule_mining':
        return this.getRuleMiningAlgorithm();
      default:
        return  this.http.get(`${this.API_DAM_PATH}/${name}`)
        .map(res => {

          let response = res.json();
          return new Algorithm().deserialize(response);
        });


    }

  }







}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Ce04_9
code,"/*
 * Lumeer: Modern Data Definition and Processing Platform
 *
 * Copyright (C) since 2017 Lumeer.io, s.r.o. and/or its affiliates.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

import {NgModule} from '@angular/core';
import {CommonModule} from '@angular/common';

import {SharedModule} from '../../../../shared/shared.module';
import {SearchAllComponent} from './search-all.component';
import {SearchCollectionsModule} from '../search-collections/search-collections.module';
import {SearchViewsModule} from '../search-views/search-views.module';
import {SearchTasksModule} from '../search-tasks/search-tasks.module';

@NgModule({
  imports: [CommonModule, SharedModule, SearchCollectionsModule, SearchViewsModule, SearchTasksModule],
  declarations: [SearchAllComponent],
  exports: [SearchAllComponent],
})
export class SearchAllModule {}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",x8KRMM
code,"<?xml version=""1.0"" encoding=""utf-8""?>
<!DOCTYPE TS>
<TS version=""2.1"" language=""ia"">
<context>
    <name>LxQtTaskButton</name>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""367""/>
        <source>Application</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""400""/>
        <source>To &amp;Desktop</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""402""/>
        <source>&amp;All Desktops</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""410""/>
        <source>Desktop &amp;%1</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""417""/>
        <source>&amp;To Current Desktop</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""426""/>
        <source>Ma&amp;ximize</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""433""/>
        <source>Maximize vertically</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""438""/>
        <source>Maximize horizontally</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""444""/>
        <source>&amp;Restore</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""448""/>
        <source>Mi&amp;nimize</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""454""/>
        <source>Roll down</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""460""/>
        <source>Roll up</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""468""/>
        <source>&amp;Layer</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""470""/>
        <source>Always on &amp;top</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""476""/>
        <source>&amp;Normal</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""482""/>
        <source>Always on &amp;bottom</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbutton.cpp"" line=""490""/>
        <source>&amp;Close</source>
        <translation type=""unfinished""></translation>
    </message>
</context>
<context>
    <name>LxQtTaskbarConfiguration</name>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""14""/>
        <source>Task Manager Settings</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""20""/>
        <source>Taskbar Contents</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""26""/>
        <source>Show windows from current desktop</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""49""/>
        <source>Taskbar Appearance</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""65""/>
        <source>Minimum button width</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""88""/>
        <source>Auto&amp;rotate buttons when the panel is vertical</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""98""/>
        <source>Close on middle-click</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""36""/>
        <source>Show windows from all desktops</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../lxqttaskbarconfiguration.ui"" line=""55""/>
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LTdCzK
code,"/**
 * vinimay
 * Vinimay is a decentralised social network focused on giving back control of its data to the user
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



export interface DeletionServerInput {
    /**
     * The token identifying the relationship
     */
    token: string;

    /**
     * Request signature, required if the frienship was previously accepted
     */
    signature?: string;

}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xtE27C
code,"/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {ApiRequestBuilder, ApiVersion} from ""helpers/api_request_builder"";
import SparkRoutes from ""helpers/spark_routes"";

export interface BulkUpdateSystemAdminJSON {
  operations: {
    users: {
      add?: string[],
      remove?: string[]
    }
  };
}

export class AdminsCRUD {
  static API_VERSION_HEADER = ApiVersion.v2;

  static all() {
    return ApiRequestBuilder.GET(SparkRoutes.apisystemAdminsPath(), this.API_VERSION_HEADER);
  }

  static bulkUpdate(bulkUpdateSystemAdminJson: BulkUpdateSystemAdminJSON) {
    return ApiRequestBuilder.PATCH(SparkRoutes.apisystemAdminsPath(), this.API_VERSION_HEADER, {payload: bulkUpdateSystemAdminJson});

  }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",4gFRjH
code,"/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

export interface TimeZones {
	name: string;
	abbrev: string;
	offset: string;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BoPUkr
code,"import { Upload }           from './../models/upload/upload.model';
import { SUPController }    from './sup.server.controller';
const yellow                = '\x1b[33m%s\x1b[0m: ';

export class SUP {
    constructor(private io: SocketIOClient.Manager) { }
    registerIO() {
        this.io.on('connection', (socket: SocketIOClient.Socket) => {
        console.log(yellow, 'Socket connected!');
      socket.on('NextChunk', (data) => {
        console.log(yellow, 'Receiving data.');
        SUPController.nextChunk(data, socket);
      });
        socket.on('NextFile', (data) => {
          console.log(yellow, 'Receiving next File.');
          SUPController.nextFile(data, socket);
        });
      });
    }

    static handshake(data, cb): void {
        SUPController.handshake(data, cb);
    }
    static pause(data, cb): void {
        SUPController.pause(data, cb);
    }
    static continue(data, cb): void {
        SUPController.continue(data, cb);
    }
    static abort(data, cb): void {
        SUPController.abort(data, cb);
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",WwLxcm
code,"import { EventsKey } from '../events';
import BaseEvent from '../events/Event';
import { Extent } from '../extent';
import Feature from '../Feature';
import Geometry from '../geom/Geometry';
import Point from '../geom/Point';
import { ObjectEvent } from '../Object';
import Projection from '../proj/Projection';
import { AttributionLike } from './Source';
import VectorSource, { VectorSourceEvent } from './Vector';

export interface Options {
    attributions?: AttributionLike;
    distance?: number;
    geometryFunction?: (p0: Feature<Geometry>) => Point;
    source?: VectorSource<Geometry>;
    wrapX?: boolean;
}
export default class Cluster extends VectorSource {
    constructor(options: Options);
    protected distance: number;
    protected features: Feature<Geometry>[];
    protected geometryFunction: (feature: Feature<Geometry>) => Point;
    protected resolution: number;
    protected cluster(): void;
    protected createCluster(features: Feature<Geometry>[]): Feature<Geometry>;
    /**
     * Remove all features from the source.
     */
    clear(opt_fast?: boolean): void;
    /**
     * Get the distance in pixels between clusters.
     */
    getDistance(): number;
    getResolutions(): number[] | undefined;
    /**
     * Get a reference to the wrapped source.
     */
    getSource(): VectorSource<Geometry>;
    loadFeatures(extent: Extent, resolution: number, projection: Projection): void;
    /**
     * Handle the source changing.
     */
    refresh(): void;
    /**
     * Set the distance in pixels between clusters.
     */
    setDistance(distance: number): void;
    /**
     * Replace the wrapped source.
     */
    setSource(source: VectorSource<Geometry>): void;
    on(type: string | string[], listener: (p0: any) => any): EventsKey | EventsKey[];
    once(type: string | string[], listener: (p0: any) => any): EventsKey | EventsKey[];
    un(type: string | string[], listener: (p0: any) => any): void;
    on(type: 'addfeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'addfeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'addfeature', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'change', listener: (evt: BaseEvent) => void): EventsKey;
    once(type: 'change', listener: (evt: BaseEvent) => void): EventsKey;
    un(type: 'change', listener: (evt: BaseEvent) => void): void;
    on(type: 'changefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'changefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'changefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'clear', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'clear', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'clear', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'error', listener: (evt: BaseEvent) => void): EventsKey;
    once(type: 'error', listener: (evt: BaseEvent) => void): EventsKey;
    un(type: 'error', listener: (evt: BaseEvent) => void): void;
    on(type: 'featuresloadend', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'featuresloadend', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'featuresloadend', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'featuresloaderror', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'featuresloaderror', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'featuresloaderror', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'featuresloadstart', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'featuresloadstart', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'featuresloadstart', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
    on(type: 'propertychange', listener: (evt: ObjectEvent) => void): EventsKey;
    once(type: 'propertychange', listener: (evt: ObjectEvent) => void): EventsKey;
    un(type: 'propertychange', listener: (evt: ObjectEvent) => void): void;
    on(type: 'removefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    once(type: 'removefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): EventsKey;
    un(type: 'removefeature', listener: (evt: VectorSourceEvent<Geometry>) => void): void;
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",CV53Yi
code,"/*
 * Copyright 2022 Imply Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { ESLintUtils } from '@typescript-eslint/utils';

import { readonlyImplicitFields } from './readonly-implicit-fields';

const ruleTester = new ESLintUtils.RuleTester({
  parser: '@typescript-eslint/parser',
});

ruleTester.run('readonly-implicit-fields', readonlyImplicitFields, {
  valid: [
    // Various valid cases inside of Immutable Classes
    `class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
      public declare readonly foo: string;
      private readonly baz: number;
      public readonly qux: () => void;
      public getBaz = () => this.baz;
      public changeBaz = (baz: number) => this;
      public doStuff(): string { return 'stuff'; }
    }`,
    `class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
      declare readonly foo: string;
      public declare readonly foo: string;
      private declare readonly foo: string;
    }`,
    `class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
      declare readonly getFoo: () => string;
      public declare readonly getFoo: () => string;
      private declare readonly getFoo: () => string;
    }`,
    `class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
      declare readonly changeFoo: (foo: string) => MyClass;
      public declare readonly changeFoo: (foo: string) => MyClass;
      private declare readonly changeFoo: (foo: string) => MyClass;
    }`,

    // Invalid cases but not inside of BaseImmutable inheritors
    `class MyClass extends NotImmutable {
      declare foo: string;
    }`,
    `class MyClass extends NotImmutable {
      public declare foo: string;
    }`,
    `class MyClass extends NotImmutable {
      private declare foo: string;
    }`,
  ],
  invalid: [
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public declare foo: string;
        }`,
      errors: [{ messageId: 'useReadonlyForProperty', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public declare readonly foo: string;
        }`,
    },
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          declare foo: string;
        }`,
      errors: [{ messageId: 'useReadonlyForProperty', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          declare readonly foo: string;
        }`,
    },
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          private declare foo: string;
        }`,
      errors: [{ messageId: 'useReadonlyForProperty', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          private declare readonly foo: string;
        }`,
    },
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public declare getFoo: () => string;
        }`,
      errors: [{ messageId: 'useReadonlyForAccessor', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public declare readonly getFoo: () => string;
        }`,
    },
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          declare getFoo: () => string;
        }`,
      errors: [{ messageId: 'useReadonlyForAccessor', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          declare readonly getFoo: () => string;
        }`,
    },
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          private declare getFoo: () => string;
        }`,
      errors: [{ messageId: 'useReadonlyForAccessor', line: 3, column: 11 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          private declare readonly getFoo: () => string;
        }`,
    },

    // Weird spacing
    {
      code: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public
            declare foo          : string;
        }`,
      errors: [{ messageId: 'useReadonlyForProperty', line: 4, column: 13 }],
      output: `
        class MyClass extends BaseImmutable<MyClassValue, MyClassJS> {
          public
            declare readonly foo          : string;
        }`,
    },
  ],
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8l5iQm
code,"import {NgModule}      from '@angular/core';
import {TestimonialService} from ""./testimonial.service"";
import {TestimonialEditorComponent} from ""./testimonial-editor.component"";
import {TestimonialComponent} from ""./testimonial-list.component"";
import {TestimonialRouting} from './testimonial.route';
import {SharedModule} from '../../../shared/shared.module';
import { XhrService } from '../../../shared/services/xhr.service';

@NgModule({
    imports: [SharedModule.forRoot(),TestimonialRouting],
    declarations: [TestimonialComponent, TestimonialEditorComponent],
    providers: [TestimonialService, XhrService]
})

export class TestimonialModule {
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",S0PAJ-
code,"import * as React from 'react';

import { BsPrefixComponent } from './helpers';

interface NavbarToggleProps {
  label?: string;
}

declare class NavbarToggle<
  As extends React.ReactType = 'button'
> extends BsPrefixComponent<As, NavbarToggleProps> {}

export default NavbarToggle;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",R_Ll6h
code,"'use strict';

import * as _ from 'lodash';
import * as fs from 'fs';
import * as xml2js from 'xml2js';
import * as Mustache from 'mustache';
import * as helpers from './helpers';
import * as utils from './utils';
import * as conf from './conf';

const parseString: (xml: string, options: xml2js.Options) => Promise<any> = helpers.promisify_callback(xml2js.parseString);
const readFile = helpers.promisify_callback(fs.readFile);

// alike xpath //k
function deepGetKey(o, k) {
    if (!o) {
        return undefined;
    } else if (k in o) {
        return o[k];
    } else if (_.isArray(o)) {
        return o.length === 1 ? deepGetKey(o[0], k) : undefined;
    } else {
        let ks = _.keys(o);
        return ks.length === 1 ? deepGetKey(o[ks[0]], k) : undefined;
    }
}

function raw_soap(url, body) {
    let headers = {
        SOAPAction: """",
        ""content-type"": ""text/xml"",
    };
    return utils.post(url, body, { headers }).then(result => (
        parseString(result, { explicitArray: false, ignoreAttrs: true })
    ));
}

function soap(templateName, params, opts : { responseTag: string, fault_to_string?: (any) => string }) {
    if (!conf.esup_activ_bo.url) throw ""configuration issue: conf.esup_activ_bo.url is missing"";
    let templateFile = __dirname + ""/templates/esup-activ-bo/"" + templateName;
    return readFile(templateFile).then(data => (
        Mustache.render(data.toString(), helpers.mapLeaves(params, helpers.escapeXml))
    )).then(body => {
        //console.log(body);
        const operation = conf.esup_activ_bo.url.replace(/\/AccountManagement$/, '') + '/' + (templateName.match(/Cas/) ? 'CasAccountManagement' : 'AccountManagement');
        return raw_soap(operation, body);
    }).then(xml => {
        //console.dir(xml, { depth: null });
        let response = deepGetKey(xml, opts.responseTag);
        if (response === undefined) throw get_fault(xml, opts.fault_to_string) || JSON.stringify(xml);
        return response;
    })
}

const fault_detail_key = (fault) => fault.detail && Object.keys(fault.detail)[0]

// Example of response:
// <soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>Identification ...chou..e : (&amp;(supannEmpId=14464)(up1BirthDay=19741002000000Z))</faultstring><detail><AuthentificationException xmlns=""http://remote.services.activbo.esupportail.org"" /></detail></soap:Fault></soap:Body></soap:Envelope>
function get_fault(xml, to_string = undefined) {
    let fault = deepGetKey(xml, 'soap:Fault');
    return fault && (to_string && to_string(fault) || fault.faultstring);
}

function _get_entries(response) {
    let entries = deepGetKey(response, 'entry');
    if (!_.isArray(entries)) return undefined;
    let r = _.zipObject(_.map(entries, 'key'), _.map(entries, 'value'));
    r = _.mapValues(r, val => val.split(conf.esup_activ_bo.multiValue_separator));
    return r;
}

// returns ""attrPersoInfo"" + code, mail, supannAliasLogin
// throws: ""Authentification invalide pour l'utilisateur xxx""
// throws: ""Login invalide""
export const authentificateUser = (supannAliasLogin: string, password: string, attrPersoInfo: string[]) => (
    soap(""authentificateUser.xml"", { id: supannAliasLogin, password, attrPersoInfo }, 
         { responseTag: 'ns1:authentificateUserResponse' }).then(_get_entries)
)

export const authentificateUserWithCas = (supannAliasLogin: string, proxyticket: string, targetUrl: string, attrPersoInfo: string[]) => (
    soap(""authentificateUserWithCas.xml"", { id: supannAliasLogin, proxyticket, targetUrl, attrPersoInfo }, 
         { responseTag: 'ns1:authentificateUserWithCasResponse' }).then(_get_entries)
)

// returns ""attrPersoInfo"" + possibleChannels, mail, supannAliasLogin + code if account is not activated
// (""code"" is useful for setPassword or validateCode)
// throws: ""AuthentificationException""
export function validateAccount(userInfoToValidate: Dictionary<string>, attrPersoInfo: string[]): Promise<Dictionary<string>> {
    console.log(""esup_activ_bo._validateAccount "" + JSON.stringify(userInfoToValidate));
    const hashInfToValidate = _.map(userInfoToValidate, (value, key) => ({ value, key }));
    let params = { hashInfToValidate, attrPersoInfo };
    return soap(""validateAccount.xml"", params, 
                { responseTag: 'ns1:validateAccountResponse', fault_to_string: fault_detail_key }).then(_get_entries);
}

// throws: ""UserPermissionException""
export const updatePersonalInformations = (supannAliasLogin: string, code: string, userInfo: Dictionary<string>) => {
    const hashBeanPersoInfo = _.map(userInfo, (value, key) => {
        if (_.isArray(value)) value = value.join(conf.esup_activ_bo.multiValue_separator)
        return { value, key }
    });
    return soap(""updatePersonalInformations.xml"", { id: supannAliasLogin, code, hashBeanPersoInfo },
                { responseTag: 'ns1:updatePersonalInformationsResponse', fault_to_string: fault_detail_key })
}
    
async function",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",k50taC
code,"import tape from 'tape'
import Common, { Chain, Hardfork } from '@ethereumjs/common'
import { FeeMarketEIP1559Transaction } from '@ethereumjs/tx'
import { Block } from '@ethereumjs/block'
import { PeerPool } from '../../lib/net/peerpool'
import { TxPool } from '../../lib/sync/txpool'
import { Config } from '../../lib/config'

tape('[TxPool]', async (t) => {
  const common = new Common({ chain: Chain.Mainnet, hardfork: Hardfork.London })
  const config = new Config({ transports: [] })

  const A = {
    address: Buffer.from('0b90087d864e82a284dca15923f3776de6bb016f', 'hex'),
    privateKey: Buffer.from(
      '64bf9cc30328b0e42387b3c82c614e6386259136235e20c1357bd11cdee86993',
      'hex'
    ),
  }

  const B = {
    address: Buffer.from('6f62d8382bf2587361db73ceca28be91b2acb6df', 'hex'),
    privateKey: Buffer.from(
      '2a6e9ad5a6a8e4f17149b8bc7128bf090566a11dbd63c30e5a0ee9f161309cd6',
      'hex'
    ),
  }

  const createTx = (from = A, to = B, nonce = 0, value = 1) => {
    const txData = {
      nonce,
      maxFeePerGas: 1000000000,
      maxInclusionFeePerGas: 100000000,
      gasLimit: 100000,
      to: to.address,
      value,
    }
    const tx = FeeMarketEIP1559Transaction.fromTxData(txData, { common })
    const signedTx = tx.sign(from.privateKey)
    return signedTx
  }

  const txA01 = createTx() // A -> B, nonce: 0, value: 1
  const txA02 = createTx(A, B, 0, 2) // A -> B, nonce: 0, value: 2 (different hash)
  const txB01 = createTx(B, A) // B -> A, nonce: 0, value: 1
  const txB02 = createTx(B, A, 1, 5) // B -> A, nonce: 1, value: 5

  t.test('should initialize correctly', (t) => {
    const config = new Config({ transports: [] })
    const pool = new TxPool({ config })
    t.equal(pool.pool.size, 0, 'pool empty')
    t.notOk((pool as any).opened, 'pool not opened yet')
    pool.open()
    t.ok((pool as any).opened, 'pool opened')
    pool.start()
    t.ok((pool as any).running, 'pool running')
    pool.stop()
    t.notOk((pool as any).running, 'pool not running anymore')
    pool.close()
    t.notOk((pool as any).opened, 'pool not opened anymore')
    t.end()
  })

  t.test('should open/close', async (t) => {
    t.plan(3)
    const config = new Config({ transports: [] })
    const pool = new TxPool({ config })

    pool.open()
    pool.start()
    t.ok((pool as any).opened, 'pool opened')
    t.equals(pool.open(), false, 'already opened')
    pool.stop()
    pool.close()
    t.notOk((pool as any).opened, 'closed')
  })

  t.test('announcedTxHashes() -> add single tx / knownByPeer / getByHash()', async (t) => {
    // Safeguard that send() method from peer2 gets called
    t.plan(12)
    const pool = new TxPool({ config })

    pool.open()
    pool.start()
    const peer: any = {
      id: '1',
      eth: {
        getPooledTransactions: () => {
          return [null, [txA01]]
        },
        send: () => {
          t.fail('should not send to announcing peer')
        },
      },
    }
    let sentToPeer2 = 0
    const peer2: any = {
      id: '2',
      eth: {
        send: () => {
          sentToPeer2++
          t.equal(sentToPeer2, 1, 'should send once to non-announcing peer')
        },
      },
    }
    const peerPool = new PeerPool({ config })
    peerPool.add(peer)
    peerPool.add(peer2)

    await pool.handleAnnouncedTxHashes([txA01.hash()], peer, peerPool)
    t.equal(pool.pool.size, 1, 'pool size 1')
    t.equal((pool as any).pending.length, 0, 'cleared pending txs')
    t.equal((pool as any).handled.size, 1, 'added to handled txs')

    t.equal((pool as any).knownByPeer.size, 2, 'known tx hashes size 2 (entries for both peers)')
    t.equal((pool as any).knownByPeer.get(peer.id).length, 1, 'one tx added for peer 1')
    t.equal(
      (pool as any).knownByPeer.get(peer.id)[0].hash,
      txA01.hash().toString('hex'),
      'new known tx hashes entry for announcing peer'
    )

    const txs = pool.getByHash([txA01.hash()])
    t.equal(txs.length, 1, 'should get correct number of txs by hash')
    t.equal(
      txs[0].serialize().toString('hex'),
      txA01.serialize().toString('hex'),
      'should get correct tx by hash'
    )

    pool.pool.clear()
    await pool.handleAnnouncedTxHashes([txA01.hash()], peer, peerPool)
    t.equal(pool.pool.size, 0, 'should not add a once handled tx')
    t.equal(
      (pool as any).knownByPeer.get(peer.id).length,
      1,
      'should add tx only once to known tx hashes'
    )
    t.equal((pool as any).knownByPeer.size, 2, 'known tx hashes size 2 (entries for both peers)')

    pool.stop()
    pool.close()
  })

  t.test('announcedTxHashes() -> TX_RETRIEVAL_LIMIT', async (t) => {
    const pool = new TxPool({ config })
    const TX_RETRIEVAL_LIMIT: number = (pool as any).TX_RETRIEVAL_LIMIT

    pool.open()
    pool.start()
    const peer = {
      eth: {
        getPooledTransactions: (res: any) => {
          t.equal(res['hashes'].length, TX_RETRIEVAL_LIMIT, 'should limit to TX_RETRIEVAL_LIMIT')
          return [null, []]
        },
      },
    }
    const peerPool = new PeerPool({ config })

    const hashes = []
    for (let i = 1; i <= TX_RET",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Golq5C
code,"import { TYPES } from 'core/app/types'
import { StateManager } from 'core/dialog'
import { ContainerModule, interfaces } from 'inversify'

import { DecisionEngine } from './decision-engine'
import { DialogEngine } from './dialog-engine'
import { FlowService } from './flow/flow-service'
import { FlowNavigator } from './flow/navigator'
import { InstructionFactory } from './instruction/factory'
import { InstructionProcessor } from './instruction/processor'
import { ActionStrategy, TransitionStrategy } from './instruction/strategy'
import { DialogJanitor } from './janitor'

export const DialogContainerModule = new ContainerModule((bind: interfaces.Bind) => {
  bind<DialogEngine>(TYPES.DialogEngine)
    .to(DialogEngine)
    .inSingletonScope()
  bind<DecisionEngine>(TYPES.DecisionEngine)
    .to(DecisionEngine)
    .inSingletonScope()
  bind<FlowNavigator>(TYPES.FlowNavigator)
    .to(FlowNavigator)
    .inSingletonScope()
  bind<FlowService>(TYPES.FlowService)
    .to(FlowService)
    .inSingletonScope()
  bind<InstructionFactory>(TYPES.InstructionFactory)
    .to(InstructionFactory)
    .inSingletonScope()
  bind<InstructionProcessor>(TYPES.InstructionProcessor)
    .to(InstructionProcessor)
    .inSingletonScope()
  bind<ActionStrategy>(TYPES.ActionStrategy)
    .to(ActionStrategy)
    .inRequestScope()
  bind<TransitionStrategy>(TYPES.TransitionStrategy)
    .to(TransitionStrategy)
    .inRequestScope()
  bind<DialogJanitor>(TYPES.DialogJanitorRunner)
    .to(DialogJanitor)
    .inSingletonScope()
  bind<StateManager>(TYPES.StateManager)
    .to(StateManager)
    .inSingletonScope()
})
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VA4Dg7
code,"﻿import { Component } from '@angular/core'
@Component({
    selector: 'gallery',
    templateUrl: 'app/home/gallery.component.html'
})

export class GalleryComponent {

}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Kvspe8
code,"// Copyright 2020 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only

import * as React from 'react';

import { storiesOf } from '@storybook/react';
import { action } from '@storybook/addon-actions';
import { number } from '@storybook/addon-knobs';

import { LightboxGallery, Props } from './LightboxGallery';
import { setup as setupI18n } from '../../js/modules/i18n';
import enMessages from '../../_locales/en/messages.json';
import { IMAGE_JPEG, VIDEO_MP4 } from '../types/MIME';

const i18n = setupI18n('en', enMessages);

const story = storiesOf('Components/LightboxGallery', module);

const createProps = (overrideProps: Partial<Props> = {}): Props => ({
  close: action('close'),
  i18n,
  media: overrideProps.media || [],
  onSave: action('onSave'),
  selectedIndex: number('selectedIndex', overrideProps.selectedIndex || 0),
});

story.add('Image and Video', () => {
  const props = createProps({
    media: [
      {
        attachment: {
          contentType: IMAGE_JPEG,
          fileName: 'tina-rolf-269345-unsplash.jpg',
          url: '/fixtures/tina-rolf-269345-unsplash.jpg',
          caption:
            'Still from The Lighthouse, starring Robert Pattinson and Willem Defoe.',
        },
        contentType: IMAGE_JPEG,
        index: 0,
        message: {
          attachments: [],
          id: 'image-msg',
          received_at: Date.now(),
        },
        objectURL: '/fixtures/tina-rolf-269345-unsplash.jpg',
      },
      {
        attachment: {
          contentType: VIDEO_MP4,
          fileName: 'pixabay-Soap-Bubble-7141.mp4',
          url: '/fixtures/pixabay-Soap-Bubble-7141.mp4',
        },
        contentType: VIDEO_MP4,
        index: 1,
        message: {
          attachments: [],
          id: 'video-msg',
          received_at: Date.now(),
        },
        objectURL: '/fixtures/pixabay-Soap-Bubble-7141.mp4',
      },
    ],
  });

  return <LightboxGallery {...props} />;
});

story.add('Missing Media', () => {
  const props = createProps({
    media: [
      {
        attachment: {
          contentType: IMAGE_JPEG,
          fileName: 'tina-rolf-269345-unsplash.jpg',
          url: '/fixtures/tina-rolf-269345-unsplash.jpg',
        },
        contentType: IMAGE_JPEG,
        index: 0,
        message: {
          attachments: [],
          id: 'image-msg',
          received_at: Date.now(),
        },
        objectURL: undefined,
      },
    ],
  });

  return <LightboxGallery {...props} />;
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gMrUge
code,"<?xml version=""1.0"" encoding=""UTF-8""?>
 <tileset name=""Canalave Gym Set"" firstgid=""1"" tilewidth=""16"" tileheight=""16"">
<image source=""Canalave Gym Set.png"" trans=""000000""/>
</tileset>",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BvNhlM
code,"function buildName(firstName = ""Will"", lastName: string) {
    return firstName + "" "" + lastName;
}

let result1 = buildName(""Bob"");                  // error, too few parameters
let result2 = buildName(""Bob"", ""Adams"", ""Sr."");  // error, too many parameters
let result3 = buildName(""Bob"", ""Adams"");         // okay and returns ""Bob Adams""
let result4 = buildName(undefined, ""Adams"");     // okay and returns ""Will Adams""",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",2jVgvX
code,"function f() {
    var x=arguments[12];
}",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7zwuNM
code,"import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { AppModule } from '../../../../app.module';
import { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material';
import { ConfirmDialogComponent } from './confirm-dialog.component';

describe('ConfirmDialogComponent', () => {
    let component: ConfirmDialogComponent;
    let dialog: MatDialog;
    let fixture: ComponentFixture<ConfirmDialogComponent>;

    beforeEach(async(() => {
        TestBed.configureTestingModule({
            imports: [
                AppModule,
            ],
            providers: [
                { provide: MAT_DIALOG_DATA, useValue: {} },
                { provide: MatDialogRef }
            ]
        })
            .compileComponents();
    }));

    beforeEach(() => {
        dialog = TestBed.get(MatDialog);
        fixture = TestBed.createComponent(ConfirmDialogComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });

    it('should create', () => {
        expect(component).toBeTruthy();
    });
});
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cQhwGQ
code,"/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */

// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

import { version } from '../../../../package.json';

export const environment = {
  production: false,
  interactiveVisualizerUrl: `https://storage.googleapis.com/interactive_visualizer/${version}/index.html`,
  models: [
    {
      displayName: 'Birds V1',
      description: 'AIY natural world insects classification model',
      type: 'image classification',
      metadataUrl: 'https://storage.googleapis.com/tfhub-visualizers/google/aiy/vision/classifier/birds_V1/1/metadata.json',
    },
    {
      displayName: 'Insects V1',
      description: 'AIY natural world birds quantized classification model',
      type: 'image classification',
      metadataUrl: 'https://storage.googleapis.com/tfhub-visualizers/google/aiy/vision/classifier/insects_V1/1/metadata.json',
    },
    {
      displayName: 'Mobile Object Localizer V1',
      description: 'Mobile model to localize objects in an image',
      type: 'object detection',
      metadataUrl: 'https://storage.googleapis.com/tfhub-visualizers/google/object_detection/mobile_object_localizer_v1/1/metadata.json',
    },
  ],
};

/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",I0DLKB
code,"import { MacOption24 } from ""../../"";

export = MacOption24;
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xepA-x
code,"import {InputWidget, InputWidgetView} from ""./input_widget""

import {input} from ""core/dom""
import * as p from ""core/properties""

import {bk_input} from ""styles/widgets/inputs""

export class TextInputView extends InputWidgetView {
  model: TextInput

  protected input_el: HTMLInputElement

  connect_signals(): void {
    super.connect_signals()
    this.connect(this.model.properties.name.change, () => this.input_el.name = this.model.name || """")
    this.connect(this.model.properties.value.change, () => this.input_el.value = this.model.value)
    this.connect(this.model.properties.disabled.change, () => this.input_el.disabled = this.model.disabled)
    this.connect(this.model.properties.placeholder.change, () => this.input_el.placeholder = this.model.placeholder)
  }

  render(): void {
    super.render()

    this.input_el = input({
      type: ""text"",
      class: bk_input,
      name: this.model.name,
      value: this.model.value,
      disabled: this.model.disabled,
      placeholder: this.model.placeholder,
    })
    this.input_el.addEventListener(""change"", () => this.change_input())
    this.group_el.appendChild(this.input_el)
  }

  change_input(): void {
    this.model.value = this.input_el.value
    super.change_input()
  }
}

export namespace TextInput {
  export type Attrs = p.AttrsOf<Props>

  export type Props = InputWidget.Props & {
    value: p.Property<string>
    placeholder: p.Property<string>
  }
}

export interface TextInput extends TextInput.Attrs {}

export class TextInput extends InputWidget {
  properties: TextInput.Props

  constructor(attrs?: Partial<TextInput.Attrs>) {
    super(attrs)
  }

  static initClass(): void {
    this.prototype.default_view = TextInputView

    this.define<TextInput.Props>({
      value:       [ p.String, """" ],
      placeholder: [ p.String, """" ],
    })
  }
}
TextInput.initClass()
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8jtxtp
code,"import React, { useState } from 'react';
import { connect, ConnectedProps } from 'react-redux';
import { TimeZone } from '@grafana/data';
import { CollapsableSection, Field, Input, RadioButtonGroup, TagsInput } from '@grafana/ui';
import { selectors } from '@grafana/e2e-selectors';
import { FolderPicker } from 'app/core/components/Select/FolderPicker';
import { DashboardModel } from '../../state/DashboardModel';
import { DeleteDashboardButton } from '../DeleteDashboard/DeleteDashboardButton';
import { TimePickerSettings } from './TimePickerSettings';

import { updateTimeZoneDashboard, updateWeekStartDashboard } from 'app/features/dashboard/state/actions';
import { PreviewSettings } from './PreviewSettings';
import { config } from '@grafana/runtime';

interface OwnProps {
  dashboard: DashboardModel;
}

export type Props = OwnProps & ConnectedProps<typeof connector>;

const GRAPH_TOOLTIP_OPTIONS = [
  { value: 0, label: 'Default' },
  { value: 1, label: 'Shared crosshair' },
  { value: 2, label: 'Shared Tooltip' },
];

export function GeneralSettingsUnconnected({ dashboard, updateTimeZone, updateWeekStart }: Props): JSX.Element {
  const [renderCounter, setRenderCounter] = useState(0);

  const onFolderChange = (folder: { id: number; title: string }) => {
    dashboard.meta.folderId = folder.id;
    dashboard.meta.folderTitle = folder.title;
    dashboard.meta.hasUnsavedFolderChange = true;
  };

  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {
    dashboard[event.currentTarget.name as 'title' | 'description'] = event.currentTarget.value;
  };

  const onTooltipChange = (graphTooltip: number) => {
    dashboard.graphTooltip = graphTooltip;
    setRenderCounter(renderCounter + 1);
  };

  const onRefreshIntervalChange = (intervals: string[]) => {
    dashboard.timepicker.refresh_intervals = intervals.filter((i) => i.trim() !== '');
  };

  const onNowDelayChange = (nowDelay: string) => {
    dashboard.timepicker.nowDelay = nowDelay;
  };

  const onHideTimePickerChange = (hide: boolean) => {
    dashboard.timepicker.hidden = hide;
    setRenderCounter(renderCounter + 1);
  };

  const onLiveNowChange = (v: boolean) => {
    dashboard.liveNow = v;
    setRenderCounter(renderCounter + 1);
  };

  const onTimeZoneChange = (timeZone: TimeZone) => {
    dashboard.timezone = timeZone;
    setRenderCounter(renderCounter + 1);
    updateTimeZone(timeZone);
  };

  const onWeekStartChange = (weekStart: string) => {
    dashboard.weekStart = weekStart;
    setRenderCounter(renderCounter + 1);
    updateWeekStart(weekStart);
  };

  const onTagsChange = (tags: string[]) => {
    dashboard.tags = tags;
    setRenderCounter(renderCounter + 1);
  };

  const onEditableChange = (value: boolean) => {
    dashboard.editable = value;
    setRenderCounter(renderCounter + 1);
  };

  const editableOptions = [
    { label: 'Editable', value: true },
    { label: 'Read-only', value: false },
  ];

  return (
    <div style={{ maxWidth: '600px' }}>
      <h3 className=""dashboard-settings__header"" aria-label={selectors.pages.Dashboard.Settings.General.title}>
        General
      </h3>
      <div className=""gf-form-group"">
        <Field label=""Name"">
          <Input id=""title-input"" name=""title"" onBlur={onBlur} defaultValue={dashboard.title} />
        </Field>
        <Field label=""Description"">
          <Input id=""description-input"" name=""description"" onBlur={onBlur} defaultValue={dashboard.description} />
        </Field>
        <Field label=""Tags"">
          <TagsInput id=""tags-input"" tags={dashboard.tags} onChange={onTagsChange} />
        </Field>
        <Field label=""Folder"">
          <FolderPicker
            inputId=""dashboard-folder-input""
            initialTitle={dashboard.meta.folderTitle}
            initialFolderId={dashboard.meta.folderId}
            onChange={onFolderChange}
            enableCreateNew={true}
            dashboardId={dashboard.id}
            skipInitialLoad={true}
          />
        </Field>

        <Field
          label=""Editable""
          description=""Set to read-only to disable all editing. Reload the dashboard for changes to take effect""
        >
          <RadioButtonGroup value={dashboard.editable} options={editableOptions} onChange={onEditableChange} />
        </Field>
      </div>

      {config.featureToggles.dashboardPreviews && config.featureToggles.dashboardPreviewsAdmin && (
        <PreviewSettings uid={dashboard.uid} />
      )}

      <TimePickerSettings
        onTimeZoneChange={onTimeZoneChange}
        onWeekStartChange={onWeekStartChange}
        onRefreshIntervalChange={onRefreshIntervalChange}
        onNowDelayChange={onNowDelayChange}
        onHideTimePickerChange={onHideTimePickerChange}
        onLiveNowChange={onLiveNowChange}
        refreshIntervals={dashboard.timepicker.refresh_intervals}
        timePickerHidden={dashboard.timepicker.hidden}
        nowDelay={dashboard.timepicker.nowDelay}
        timezone={dashboard.timezone}
        weekStart={dashboard.weekStart}
        liveNow={dashboard.liveNow}
      />

      <CollapsableSection label=""Panel opt",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",8ste45
code,"/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

import {async, fakeAsync, tick} from '@angular/core/testing';
import {AsyncTestCompleter, beforeEach, describe, inject, it} from '@angular/core/testing/testing_internal';
import {AbstractControl, FormArray, FormControl, FormGroup, Validators} from '@angular/forms';

import {EventEmitter} from '../src/facade/async';
import {isPresent} from '../src/facade/lang';

export function main() {
  function asyncValidator(expected: string, timeouts = {}) {
    return (c: AbstractControl) => {
      let resolve: (result: any) => void;
      const promise = new Promise(res => { resolve = res; });
      const t = isPresent((timeouts as any)[c.value]) ? (timeouts as any)[c.value] : 0;
      const res = c.value != expected ? {'async': true} : null;

      if (t == 0) {
        resolve(res);
      } else {
        setTimeout(() => { resolve(res); }, t);
      }

      return promise;
    };
  }

  function asyncValidatorReturningObservable(c: FormControl) {
    const e = new EventEmitter();
    Promise.resolve(null).then(() => { e.emit({'async': true}); });
    return e;
  }

  describe('FormGroup', () => {
    describe('value', () => {
      it('should be the reduced value of the child controls', () => {
        const g = new FormGroup({'one': new FormControl('111'), 'two': new FormControl('222')});
        expect(g.value).toEqual({'one': '111', 'two': '222'});
      });

      it('should be empty when there are no child controls', () => {
        const g = new FormGroup({});
        expect(g.value).toEqual({});
      });

      it('should support nested groups', () => {
        const g = new FormGroup({
          'one': new FormControl('111'),
          'nested': new FormGroup({'two': new FormControl('222')})
        });
        expect(g.value).toEqual({'one': '111', 'nested': {'two': '222'}});

        (<FormControl>(g.get('nested.two'))).setValue('333');

        expect(g.value).toEqual({'one': '111', 'nested': {'two': '333'}});
      });
    });

    describe('getRawValue', () => {
      let fg: FormGroup;

      it('should work with nested form groups/arrays', () => {
        fg = new FormGroup({
          'c1': new FormControl('v1'),
          'group': new FormGroup({'c2': new FormControl('v2'), 'c3': new FormControl('v3')}),
          'array': new FormArray([new FormControl('v4'), new FormControl('v5')])
        });
        fg.get('group').get('c3').disable();
        (fg.get('array') as FormArray).at(1).disable();

        expect(fg.getRawValue())
            .toEqual({'c1': 'v1', 'group': {'c2': 'v2', 'c3': 'v3'}, 'array': ['v4', 'v5']});
      });

    });

    describe('adding and removing controls', () => {
      it('should update value and validity when control is added', () => {
        const g = new FormGroup({'one': new FormControl('1')});
        expect(g.value).toEqual({'one': '1'});
        expect(g.valid).toBe(true);

        g.addControl('two', new FormControl('2', Validators.minLength(10)));

        expect(g.value).toEqual({'one': '1', 'two': '2'});
        expect(g.valid).toBe(false);
      });

      it('should update value and validity when control is removed', () => {
        const g = new FormGroup(
            {'one': new FormControl('1'), 'two': new FormControl('2', Validators.minLength(10))});
        expect(g.value).toEqual({'one': '1', 'two': '2'});
        expect(g.valid).toBe(false);

        g.removeControl('two');

        expect(g.value).toEqual({'one': '1'});
        expect(g.valid).toBe(true);
      });
    });

    describe('errors', () => {
      it('should run the validator when the value changes', () => {
        const simpleValidator = (c: FormGroup) =>
            c.controls['one'].value != 'correct' ? {'broken': true} : null;

        const c = new FormControl(null);
        const g = new FormGroup({'one': c}, simpleValidator);

        c.setValue('correct');

        expect(g.valid).toEqual(true);
        expect(g.errors).toEqual(null);

        c.setValue('incorrect');

        expect(g.valid).toEqual(false);
        expect(g.errors).toEqual({'broken': true});
      });
    });

    describe('dirty', () => {
      let c: FormControl, g: FormGroup;

      beforeEach(() => {
        c = new FormControl('value');
        g = new FormGroup({'one': c});
      });

      it('should be false after creating a control', () => { expect(g.dirty).toEqual(false); });

      it('should be true after changing the value of the control', () => {
        c.markAsDirty();

        expect(g.dirty).toEqual(true);
      });
    });


    describe('touched', () => {
      let c: FormControl, g: FormGroup;

      beforeEach(() => {
        c = new FormControl('value');
        g = new FormGroup({'one': c});
      });

      it('should be false after creating a control', () => { expect(g.touched).toEqual(false); });

      it('should be true after control is marked as touched', () => {
        c.markAsTouched();

   ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",opkVMw
code,"/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */

import 'bootstrap';
import $ from 'jquery';
import {AjaxResponse} from 'TYPO3/CMS/Core/Ajax/AjaxResponse';
import {AbstractInteractableModule} from '../AbstractInteractableModule';
import Modal = require('TYPO3/CMS/Backend/Modal');
import Notification = require('TYPO3/CMS/Backend/Notification');
import AjaxRequest = require('TYPO3/CMS/Core/Ajax/AjaxRequest');
import InfoBox = require('../../Renderable/InfoBox');
import ProgressBar = require('../../Renderable/ProgressBar');
import Severity = require('../../Renderable/Severity');
import Router = require('../../Router');

/**
 * Module: TYPO3/CMS/Install/EnvironmentCheck
 */
class EnvironmentCheck extends AbstractInteractableModule {
  private selectorGridderBadge: string = '.t3js-environmentCheck-badge';
  private selectorExecuteTrigger: string = '.t3js-environmentCheck-execute';
  private selectorOutputContainer: string = '.t3js-environmentCheck-output';

  public initialize(currentModal: JQuery): void {
    this.currentModal = currentModal;

    // Get status on initialize to have the badge and content ready
    this.runTests();

    currentModal.on('click', this.selectorExecuteTrigger, (e: JQueryEventObject): void => {
      e.preventDefault();
      this.runTests();
    });
  }

  private runTests(): void {
    this.setModalButtonsState(false);

    const modalContent = this.getModalBody();
    const $errorBadge = $(this.selectorGridderBadge);
    $errorBadge.text('').hide();
    const message = ProgressBar.render(Severity.loading, 'Loading...', '');
    modalContent.find(this.selectorOutputContainer).empty().append(message);

    (new AjaxRequest(Router.getUrl('environmentCheckGetStatus')))
      .get({cache: 'no-cache'})
      .then(
        async (response: AjaxResponse): Promise<any> => {
          const data = await response.resolve();
          modalContent.empty().append(data.html);
          Modal.setButtons(data.buttons);
          let warningCount = 0;
          let errorCount = 0;
          if (data.success === true && typeof (data.status) === 'object') {
            $.each(data.status, (i: number, element: any): void => {
              if (Array.isArray(element) && element.length > 0) {
                element.forEach((aStatus: any): void => {
                  if (aStatus.severity === 1) {
                    warningCount++;
                  }
                  if (aStatus.severity === 2) {
                    errorCount++;
                  }
                  const aMessage = InfoBox.render(aStatus.severity, aStatus.title, aStatus.message);
                  modalContent.find(this.selectorOutputContainer).append(aMessage);
                });
              }
            });
            if (errorCount > 0) {
              $errorBadge.removeClass('label-warning').addClass('label-danger').text(errorCount).show();
            } else if (warningCount > 0) {
              $errorBadge.removeClass('label-error').addClass('label-warning').text(warningCount).show();
            }
          } else {
            Notification.error('Something went wrong', 'The request was not processed successfully. Please check the browser\'s console and TYPO3\'s log.');
          }
        },
        (error: AjaxResponse): void => {
          Router.handleAjaxError(error, modalContent);
        }
      );
  }
}

export = new EnvironmentCheck();
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dSljoo
code,"<%#
 Copyright 2013-2017 the original author or authors.

 This file is part of the JHipster project, see https://jhipster.github.io/
 for more information.

 Licensed under the Apache License, Version 2.0 (the ""License"");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an ""AS IS"" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import { SpyObject } from './spyobject';
import { Principal } from '../../../../main/webapp/app/shared/auth/principal.service';
import Spy = jasmine.Spy;

export class MockPrincipal extends SpyObject {

    identitySpy: Spy;
    fakeResponse: any;

    constructor() {
        super(Principal);

        this.fakeResponse = {};
        this.identitySpy = this.spy('identity').andReturn(Promise.resolve(this.fakeResponse));
    }

    setResponse(json: any): void {
        this.fakeResponse = json;
    }
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Gg1uMs
code,"<?xml version=""1.0"" encoding=""utf-8""?>
<!DOCTYPE TS>
<TS version=""2.1"" language=""tr"">
<context>
    <name>BMMDialog</name>
    <message>
        <location filename=""../BMMDialog.ui"" line=""14""/>
        <source>Manage Bookmarks</source>
        <translation>Yer İmlerini Yönet</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.ui"" line=""35""/>
        <source>Name</source>
        <translation>Ad</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.ui"" line=""40""/>
        <source>Path</source>
        <translation>Yol</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.ui"" line=""52""/>
        <source>Remove Bookmark</source>
        <translation>Yer İmini Kaldır</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.ui"" line=""65""/>
        <source>Rename BookMark</source>
        <translation>Yer İmini Yeniden Adlandır</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.ui"" line=""91""/>
        <source>Finished</source>
        <translation>Bitti</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.cpp"" line=""58""/>
        <source>Rename Bookmark</source>
        <translation>Yer İmini Yeniden Adlandır</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.cpp"" line=""58""/>
        <source>Name:</source>
        <translation>Ad:</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.cpp"" line=""64""/>
        <source>Invalid Name</source>
        <translation>Geçersiz Ad</translation>
    </message>
    <message>
        <location filename=""../BMMDialog.cpp"" line=""64""/>
        <source>This bookmark name already exists. Please choose another.</source>
        <translation>Bu yer imi adı zaten mevcut. Lütfen başka bir ad seçin.</translation>
    </message>
</context>
<context>
    <name>BrowserWidget</name>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""257""/>
        <source>Name</source>
        <translation type=""unfinished"">Ad</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""258""/>
        <source>Size</source>
        <translation type=""unfinished"">Boyut</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""259""/>
        <source>Type</source>
        <translation type=""unfinished"">Tür</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""260""/>
        <source>Date Modified</source>
        <translation type=""unfinished"">Değiştirilme Tarihi</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""261""/>
        <source>Date Created</source>
        <translation type=""unfinished"">Oluşturulma Tarihi</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""438""/>
        <source>Capacity: %1</source>
        <translation type=""unfinished"">Kapasite: %1</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""463""/>
        <source>Files: %1 (%2)</source>
        <translation type=""unfinished"">Dosyalar: %1 (%2)</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""465""/>
        <source>Files: %1</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""471""/>
        <source>Dirs: %1</source>
        <translation type=""unfinished"">Dizinler: %1</translation>
    </message>
    <message>
        <location filename=""../BrowserWidget.cpp"" line=""427""/>
        <source>No Directory Contents</source>
        <translation type=""unfinished""></translation>
    </message>
</context>
<context>
    <name>DirWidget</name>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""20""/>
        <source>Form</source>
        <translation>Form</translation>
    </message>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""41""/>
        <source> * - FILE MANAGER RUNNING AS ROOT- * </source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""182""/>
        <source>Increase Icon Sizes</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""204""/>
        <source>Decrease Icon Sizes</source>
        <translation type=""unfinished""></translation>
    </message>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""228""/>
        <source>Back</source>
        <translation>Geri</translation>
    </message>
    <message>
        <location filename=""../widgets/DirWidget2.ui"" line=""231""/>
        <location filename=""../widgets/DirWidget2.ui"" line=""234""/>
        <source>Go back to previous directory</source>
        <translation>Önceki dizine geri git</transla",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Vmjh4q
code,"import { argv } from 'yargs';
import * as CONFIG from '../../config';

/**
 * Returns the project configuration (consisting of the base configuration provided by seed.config.ts and the additional
 * project specific overrides as defined in project.config.ts)
 */
export function templateLocals() {
  const configEnvName = argv['config-env'] || 'dev';
  const configEnv = CONFIG.getPluginConfig('environment-config')[configEnvName];

  if (!configEnv) {
    throw new Error('Invalid configuration name');
  }

  const config = {
    ENV_CONFIG: JSON.stringify(configEnv)
  };

  return Object.assign(config, CONFIG);
}
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cWmclk
code,"﻿Namespace _09_Galleries
	Friend NotInheritable Class Program
		''' <summary>
		''' The main entry point for the application.
		''' </summary>
		Private Sub New()
		End Sub
		<STAThread>
		Shared Sub Main()
			Application.EnableVisualStyles()
			Application.SetCompatibleTextRenderingDefault(False)
			Application.Run(New Form1())
		End Sub
	End Class
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",7UPpoM
code,"﻿#Region ""Microsoft.VisualBasic::b23e537755fd42b894c1f2692db6397b, ..\sciBASIC#\Data_science\Bootstrapping\Sampling.vb""

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xieguigang (xie.guigang@live.com)
    '       xie (genetics@smrucc.org)
    ' 
    ' Copyright (c) 2016 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.

#End Region

Imports System.Runtime.CompilerServices
Imports Microsoft.VisualBasic.ComponentModel.DataSourceModel
Imports Microsoft.VisualBasic.ComponentModel.TagData
Imports Microsoft.VisualBasic.Linq

Public Module Sampling

    <Extension>
    Public Iterator Function SamplingByPoints(Of T)(data As IEnumerable(Of NamedValue(Of DoubleTagged(Of T)())),
                                                    points As IEnumerable(Of Double),
                                                    Optional err# = 0.00001) As IEnumerable(Of NamedValue(Of DoubleTagged(Of T)()))

    End Function

    <MethodImpl(MethodImplOptions.AggressiveInlining)>
    <Extension>
    Public Function SamplingBySplitNParts(Of T)(data As IEnumerable(Of NamedValue(Of DoubleTagged(Of T)())),
                                                n%,
                                                Optional err# = 0.00001) As IEnumerable(Of NamedValue(Of DoubleTagged(Of T)()))
        With data.ToArray
            Return .SamplingByPoints(
                points:= .Select(Function(s) s.Value.Select(Function(p) p.Tag)).IteratesALL.Range.Enumerate(n),
                err:=err)
        End With
    End Function
End Module

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",dFEsnF
code,"Public Enum ASCampaignStatus As Long
    [New] = 10140000
    Open = 10140001
    Closed = 10140002
End Enum
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6PCxO0
code,"﻿<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class sdgMapOption
    Inherits System.Windows.Forms.Form

    'Form overrides dispose to clean up the component list.
    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(sdgMapOption))
        Me.lblLat = New System.Windows.Forms.Label()
        Me.lblLongMin = New System.Windows.Forms.Label()
        Me.lblLatMax = New System.Windows.Forms.Label()
        Me.lblLongMax = New System.Windows.Forms.Label()
        Me.lblLatMin = New System.Windows.Forms.Label()
        Me.lblLong = New System.Windows.Forms.Label()
        Me.ucrBase = New instat.ucrButtonsSubdialogue()
        Me.ucrInputLatMax = New instat.ucrInputTextBox()
        Me.ucrInputLongMax = New instat.ucrInputTextBox()
        Me.ucrInputLatMin = New instat.ucrInputTextBox()
        Me.ucrInputLongMin = New instat.ucrInputTextBox()
        Me.SuspendLayout()
        '
        'lblLat
        '
        resources.ApplyResources(Me.lblLat, ""lblLat"")
        Me.lblLat.Name = ""lblLat""
        '
        'lblLongMin
        '
        resources.ApplyResources(Me.lblLongMin, ""lblLongMin"")
        Me.lblLongMin.Name = ""lblLongMin""
        '
        'lblLatMax
        '
        resources.ApplyResources(Me.lblLatMax, ""lblLatMax"")
        Me.lblLatMax.Name = ""lblLatMax""
        '
        'lblLongMax
        '
        resources.ApplyResources(Me.lblLongMax, ""lblLongMax"")
        Me.lblLongMax.Name = ""lblLongMax""
        '
        'lblLatMin
        '
        resources.ApplyResources(Me.lblLatMin, ""lblLatMin"")
        Me.lblLatMin.Name = ""lblLatMin""
        '
        'lblLong
        '
        resources.ApplyResources(Me.lblLong, ""lblLong"")
        Me.lblLong.Name = ""lblLong""
        '
        'ucrBase
        '
        resources.ApplyResources(Me.ucrBase, ""ucrBase"")
        Me.ucrBase.Name = ""ucrBase""
        '
        'ucrInputLatMax
        '
        Me.ucrInputLatMax.AddQuotesIfUnrecognised = False
        Me.ucrInputLatMax.IsMultiline = False
        Me.ucrInputLatMax.IsReadOnly = False
        resources.ApplyResources(Me.ucrInputLatMax, ""ucrInputLatMax"")
        Me.ucrInputLatMax.Name = ""ucrInputLatMax""
        '
        'ucrInputLongMax
        '
        Me.ucrInputLongMax.AddQuotesIfUnrecognised = False
        Me.ucrInputLongMax.IsMultiline = False
        Me.ucrInputLongMax.IsReadOnly = False
        resources.ApplyResources(Me.ucrInputLongMax, ""ucrInputLongMax"")
        Me.ucrInputLongMax.Name = ""ucrInputLongMax""
        '
        'ucrInputLatMin
        '
        Me.ucrInputLatMin.AddQuotesIfUnrecognised = False
        Me.ucrInputLatMin.IsMultiline = False
        Me.ucrInputLatMin.IsReadOnly = False
        resources.ApplyResources(Me.ucrInputLatMin, ""ucrInputLatMin"")
        Me.ucrInputLatMin.Name = ""ucrInputLatMin""
        '
        'ucrInputLongMin
        '
        Me.ucrInputLongMin.AddQuotesIfUnrecognised = False
        Me.ucrInputLongMin.IsMultiline = False
        Me.ucrInputLongMin.IsReadOnly = False
        resources.ApplyResources(Me.ucrInputLongMin, ""ucrInputLongMin"")
        Me.ucrInputLongMin.Name = ""ucrInputLongMin""
        '
        'sdgMapOption
        '
        resources.ApplyResources(Me, ""$this"")
        Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
        Me.Controls.Add(Me.ucrBase)
        Me.Controls.Add(Me.lblLat)
        Me.Controls.Add(Me.lblLongMin)
        Me.Controls.Add(Me.lblLatMax)
        Me.Controls.Add(Me.ucrInputLatMax)
        Me.Controls.Add(Me.lblLongMax)
        Me.Controls.Add(Me.ucrInputLongMax)
        Me.Controls.Add(Me.lblLatMin)
        Me.Controls.Add(Me.ucrInputLatMin)
        Me.Controls.Add(Me.lblLong)
        Me.Controls.Add(Me.ucrInputLongMin)
        Me.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedToolWindow
        Me.MaximizeBox = False
        Me.MinimizeBox = False
        Me.Name = ""sdgMapOption""
        Me.ResumeLayout(False)
        Me.PerformLayout()

    End Sub
    Friend WithEvents lblLat As Label
    Friend WithEvents lblLongMin As Label
    Friend WithEvents lblLatMax As Label
    Friend WithEvents ucrInputLatMax As ucrInputTextBox
    Friend WithEvents lblLongMax As Label
    Friend WithEvents ucr",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oUMreB
code,"﻿Imports System.Windows.Controls
Imports System.Windows.Markup
Imports WADV.ChoiceModule.Config
Imports WADV.ChoiceModule.Effect

Namespace API

    ''' <summary>
    ''' 界面API类
    ''' </summary>
    ''' <remarks></remarks>
    Public Class UIAPI

        ''' <summary>
        ''' 设置显示选项的默认容器
        ''' </summary>
        ''' <param name=""content"">目标容器</param>
        ''' <remarks></remarks>
        Public Shared Sub SetContent(content As Panel)
            Config.UIConfig.ChoiceContent = content
            MessageAPI.SendSync(""CHOICE_CONTENT_CHANGE"")
        End Sub

        ''' <summary>
        ''' 设置选项默认样式所在的文件路径
        ''' </summary>
        ''' <param name=""styleFile"">样式文件(放置在Skin目录下)</param>
        ''' <remarks></remarks>
        Public Shared Sub SetStyle(styleFile As String)
            Config.UIConfig.ChoiceStyle = My.Computer.FileSystem.ReadAllText(AppCore.API.PathAPI.GetPath(AppCore.API.PathAPI.Skin, styleFile), System.Text.Encoding.Default)
            MessageAPI.SendSync(""CHOICE_STYLE_CHANGE"")
        End Sub

        ''' <summary>
        ''' 设置两个选项之间的默认间隔
        ''' </summary>
        ''' <param name=""margin"">新的间隔</param>
        ''' <remarks></remarks>
        Public Shared Sub SetMargin(margin As Double)
            Config.UIConfig.ChoiceMargin = margin
            MessageAPI.SendSync(""CHOICE_MARGIN_CHANGE"")
        End Sub

    End Class

    ''' <summary>
    ''' 选项API类
    ''' </summary>
    ''' <remarks></remarks>
    Public Class ChoiceAPI

        ''' <summary>
        ''' 显示选项
        ''' </summary>
        ''' <param name=""choice"">选项内容</param>
        ''' <param name=""waiteTime"">等待选择时间(单位为帧)</param>
        ''' <param name=""styleName"">选项显示效果类的名字</param>
        ''' <param name=""contentName"">要显示选项的容器，不提供则使用默认容器</param>
        ''' <param name=""optionStyle"">选项的样式文件，不提供则使用默认样式文件</param>
        ''' <param name=""optionMargin"">选项之间的间隔，不提供则使用默认间隔</param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Shared Function Show(choice() As String, waiteTime As Integer, styleName As String,
                                           Optional contentName As String = """", Optional optionStyle As String = """", Optional optionMargin As Integer = 0) As String
            '窗口渲染线程
            Dim dispatcher = WindowAPI.GetDispatcher
            '确认显示区域
            Dim content As Panel
            If Config.UIConfig.ChoiceContent Is Nothing Then
                If contentName = """" Then Return """"
                content = WindowAPI.SearchObject(Of Panel)(contentName)
                If content Is Nothing Then Return """"
            Else
                content = Config.UIConfig.ChoiceContent
            End If
            '隐藏选项区域
            dispatcher.Invoke(Sub() content.Visibility = Windows.Visibility.Collapsed)
            '确认样式文件
            Dim style As String = If(optionStyle = """", Config.UIConfig.ChoiceStyle, optionStyle)
            '确认选项距离
            Dim margin As Integer = If(optionMargin = 0, Config.UIConfig.ChoiceMargin, optionMargin)
            '查找时间显示区
            Dim timeArea As TextBlock = WindowAPI.GetChildByName(Of TextBlock)(content, ""TimeArea"")
            '声明选项列表
            Dim choiceList As New List(Of Windows.FrameworkElement)
            '声明界面元素
            For i = 0 To choice.Length - 1
                Dim readIndex = i
                Dim totalMargin = i * margin
                dispatcher.Invoke(Sub()
                                      '获取元素
                                      Dim tmpPanel As TextBlock = XamlReader.Parse(Config.UIConfig.ChoiceStyle)
                                      '设置元素样式
                                      tmpPanel.Margin = New Windows.Thickness(tmpPanel.Margin.Left, totalMargin, tmpPanel.Margin.Right, tmpPanel.Margin.Bottom)
                                      tmpPanel.Text = choice(readIndex)
                                      '添加到列表和窗口
                                      choiceList.Add(tmpPanel)
                                      Config.UIConfig.ChoiceContent.Children.Add(tmpPanel)
                                  End Sub)
            Next
            '查找特效
            If Not Initialiser.EffectList.ContainsKey(styleName) Then Return """"
            Dim effect As Effect.IEffect = Activator.CreateInstance(Initialiser.EffectList(styleName), New Object() {choiceList.ToArray, waiteTime, timeArea})
            Dim loopContent As New PluginInterface.Looping(effect)
            '显示选项区域
            dispatcher.Invoke(Sub() content.Visibility = Windows.Visibility.Visible)
            '开始渲染
            MessageAPI.SendSync(""CHOICE_SHOW_BEFORE"")
            AppCore.API.LoopingAPI.AddLoopSync(loopContent)
            '等待渲染结束
            AppCore.API.LoopingAPI.WaitLoopSync(loopContent)
            MessageAPI.SendSync(""CHOICE_SHOW_AFTER"")
            '移除界面元素
            For Each tmpPanel In choiceList
                dispatcher.Invoke(Sub() content.Children.Remove(tmpPanel))
            Next
            '隐藏选项区域
            dispatcher.Invoke(Sub() content.Visibility = Windows.Visibility.Collapsed)
            '返回用户选择
            Re",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",frXIle
code,"﻿Imports CrystalDecisions.CrystalReports.Engine
Imports CrystalDecisions.Shared
Imports ABASTECIMIENTOS.NEGOCIO

Partial Class FrmRptProximosAVencerAlmacen
    Inherits System.Web.UI.Page

    Private Reporte As ReportDocument

    Private Sub ConfigureCrystalReports()

        Reporte = New ReportDocument
        Dim reportPath As String = Server.MapPath(""RptExistenciasActualesPorTipoProductoAlmacen.rpt"")
        Reporte.Load(reportPath)

        Dim IDALMACEN, IDSUMINISTRO, IDGRUPO, IDFUENTEFINANCIAMIENTO, IDGRUPOFUENTEFINANCIAMIENTO, IDRESPONSABLEDISTRIBUCION, IDPROGRAMA As Integer
        Dim FechaHasta As Date

        IDALMACEN = Request.QueryString(""idA"")
        IDSUMINISTRO = Request.QueryString(""idS"")
        IDGRUPO = Request.QueryString(""idG"")
        IDFUENTEFINANCIAMIENTO = Request.QueryString(""idFF"")
        IDGRUPOFUENTEFINANCIAMIENTO = Request.QueryString(""idGF"")
        IDRESPONSABLEDISTRIBUCION = Request.QueryString(""idRD"")
        FechaHasta = Request.QueryString(""FH"")
        IDPROGRAMA = Request.QueryString(""idPR"")

        Dim pFields As New ParameterFields()
        Dim pField1 As New ParameterField()
        Dim pDiscreteValue1 As New ParameterDiscreteValue()
        pField1.ParameterFieldName = ""Titulo""
        pDiscreteValue1.Value = ""Próximos a vencer (hasta el "" + FechaHasta.ToShortDateString + "")""
        pField1.CurrentValues.Add(pDiscreteValue1)
        pFields.Add(pField1)

        Dim cL As New cLOTES
        Dim ds As Data.DataSet
        ds = cL.RptProximosAVencerAlmacen(IDALMACEN, IDSUMINISTRO, IDGRUPO, IDFUENTEFINANCIAMIENTO, IDRESPONSABLEDISTRIBUCION, FechaHasta, IDGRUPOFUENTEFINANCIAMIENTO, IDPROGRAMA)

        Me.crvPrincipal.ParameterFieldInfo = pFields

        Reporte.SetDataSource(ds.Tables(0))

        Me.crvPrincipal.ReportSource = Reporte

        Me.crvPrincipal.DisplayGroupTree = False
        Me.crvPrincipal.DisplayToolbar = True
        Me.crvPrincipal.EnableDrillDown = False
        Me.crvPrincipal.HasCrystalLogo = False
        Me.crvPrincipal.HasDrillUpButton = False
        Me.crvPrincipal.HasGotoPageButton = True
        Me.crvPrincipal.HasPageNavigationButtons = True
        Me.crvPrincipal.HasPrintButton = True
        Me.crvPrincipal.HasRefreshButton = False
        Me.crvPrincipal.HasSearchButton = False
        Me.crvPrincipal.HasToggleGroupTreeButton = False
        Me.crvPrincipal.HasViewList = False
        Me.crvPrincipal.HasZoomFactorList = False

        Me.crvPrincipal.PrintMode = CrystalDecisions.Web.PrintMode.ActiveX

    End Sub

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        ConfigureCrystalReports()
    End Sub

    Protected Sub Page_Unload(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Unload
        Reporte.Close()
        Reporte.Dispose()
    End Sub

End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",BcNAYJ
code,"'
' * Copyright (c) 2008, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 

Namespace javax.swing.colorchooser

	Friend NotInheritable Class ColorModelHSL
		Inherits ColorModel

		Friend Sub New()
			MyBase.New(""hsl"", ""Hue"", ""Saturation"", ""Lightness"", ""Transparency"") ' NON-NLS: components
		End Sub

		Friend Overrides Sub setColor(ByVal color As Integer, ByVal space As Single())
			MyBase.colorlor(color, space)
			RGBtoHSL(space, space)
			space(3) = 1.0f - space(3)
		End Sub

		Friend Overrides Function getColor(ByVal space As Single()) As Integer
			space(3) = 1.0f - space(3)
			HSLtoRGB(space, space)
			Return MyBase.getColor(space)
		End Function

		Friend Overrides Function getMaximum(ByVal index As Integer) As Integer
			Return If(index = 0, 360, 100)
		End Function

		Friend Overrides Function getDefault(ByVal index As Integer) As Single
			Return If(index = 0, -1.0f, If(index = 2, 0.5f, 1.0f))
		End Function

		''' <summary>
		''' Converts HSL components of a color to a set of RGB components.
		''' </summary>
		''' <param name=""hsl"">  a float array with length equal to
		'''             the number of HSL components </param>
		''' <param name=""rgb"">  a float array with length of at least 3
		'''             that contains RGB components of a color </param>
		''' <returns> a float array that contains RGB components </returns>
		Private Shared Function HSLtoRGB(ByVal hsl As Single(), ByVal rgb As Single()) As Single()
			If rgb Is Nothing Then rgb = New Single(2){}
			Dim ___hue As Single = hsl(0)
			Dim saturation As Single = hsl(1)
			Dim lightness As Single = hsl(2)

			If saturation > 0.0f Then
				___hue = If(___hue < 1.0f, ___hue * 6.0f, 0.0f)
				Dim q As Single = lightness + saturation * (If(lightness > 0.5f, 1.0f - lightness, lightness))
				Dim p As Single = 2.0f * lightness - q
				rgb(0)= normalize(q, p,If(___hue < 4.0f, (___hue + 2.0f), (___hue - 4.0f)))
				rgb(1)= normalize(q, p, ___hue)
				rgb(2)= normalize(q, p,If(___hue < 2.0f, (___hue + 4.0f), (___hue - 2.0f)))
			Else
				rgb(0) = lightness
				rgb(1) = lightness
				rgb(2) = lightness
			End If
			Return rgb
		End Function

		''' <summary>
		''' Converts RGB components of a color to a set of HSL components.
		''' </summary>
		''' <param name=""rgb"">  a float array with length of at least 3
		'''             that contains RGB components of a color </param>
		''' <param name=""hsl"">  a float array with length equal to
		'''             the number of HSL components </param>
		''' <returns> a float array that contains HSL components </returns>
		Private Shared Function RGBtoHSL(ByVal rgb As Single(), ByVal hsl As Single()) As Single()
			If hsl Is Nothing Then hsl = New Single(2){}
			Dim max As Single = max(rgb(0), rgb(1), rgb(2))
			Dim min As Single = min(rgb(0), rgb(1), rgb(2))

			Dim summa As Single = max + min
			Dim saturation As Single = max - min
			If saturation > 0.0f Then saturation /= If(summa > 1.0f, 2.0f - summa, summa)
			hsl(0) = getHue(rgb(0), rgb(1), rgb(2), max, min)
			hsl(1) = saturation
			hsl(2) = summa / 2.0f
			Return hsl
		End Function

		''' <summary>
		''' Returns the smaller of three color components.
		''' </summary>
		''' <param name=""red"">    the red component of the color </param>
		''' <param name=""green"">  the green component of the color </param>
		''' <param name=""blue"">   the blue component of the color </param>
		''' <returns> the smaller of {@code red}, {@code green} and {@code blue} </returns>
		Friend Shared Function min(ByVal red As Single, ByVal green As Single, ByVal blue As Single) As Single
			Dim ___min As Single = If(red < green, red, green)
			Return If(___min < blue, ___min, blue)
		End Function

		''' <summary>
		''' Returns the larger of three color components.
		''' </summary>
		''' <param name=""red"">    the red component of the color </param>
		''' <param name=""green"">  the green component of the color </param>
		''' <param name=""blue"">   the blue component of the color </param>
		''' <returns> the larger of {@code red}, {@code green} and {@code blue} </returns>
		Friend Shared Function max(ByVal red As Single, ByVal green As Single, ByVal blue As Single) As Single
			Dim ___max As Single = If(red > green, red, green)
			Return If(___max > blue, ___max, blue)
		End Function

		''' <summary>
		''' Calculates the hue component for HSL and HSV color spaces.
		''' </summary>
		''' <param name=""red"">    the red component of the color </param>
		''' <param name=""green"">  the green component of the color </param>
		''' <param name=""blue"">   the blue component of the color </param>
		''' <param name=""max"">    the larger of {@code red}, {@code green} and {@code blue} </param>
		''' <param name=""min"">    the smaller of {@code red}, {@code green} and {@code blue} </param>
		''' <returns> the hue component </returns>
		Friend Shared Function getHue(ByVal red As Single, ByVal green As Single, ByVal blue As Single, ByVal max As Single, ByVal min As Single) As S",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hI9Epi
code,"﻿' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports Microsoft.CodeAnalysis.VisualBasic.ImplementAbstractClass

Namespace Microsoft.CodeAnalysis.Editor.VisualBasic.UnitTests.ImplementAbstractClass
    Partial Public Class ImplementAbstractClassTests

        <Fact>
        <Trait(Traits.Feature, Traits.Features.CodeActionsImplementAbstractClass)>
        <Trait(Traits.Feature, Traits.Features.CodeActionsFixAllOccurrences)>
        Public Async Function TestFixAllInDocument() As Task
            Dim fixAllActionId = VisualBasicImplementAbstractClassCodeFixProvider.GetCodeActionId(""Assembly1"", ""Global.A1"")

            Dim input = <Workspace>
                            <Project Language=""Visual Basic"" AssemblyName=""Assembly1"" CommonReferences=""true"">
                                <Document><![CDATA[
Public MustInherit Class A1
    Public MustOverride Sub F1()
End Class

Public Interface I1
    Sub F2()
End Interface

Class {|FixAllInDocument:B1|}
    Inherits A1
    Implements I1

    Private Class C1
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                </Document>
                                <Document><![CDATA[
Class B2
    Inherits A1
    Implements I1

    Private Class C2
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                </Document>
                            </Project>
                            <Project Language=""Visual Basic"" AssemblyName=""Assembly2"" CommonReferences=""true"">
                                <ProjectReference>Assembly1</ProjectReference>
                                <Document><![CDATA[
Class B3
    Inherits A1
    Implements I1

    Private Class C3
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                </Document>
                            </Project>
                        </Workspace>.ToString()

            Dim expected = <Workspace>
                               <Project Language=""Visual Basic"" AssemblyName=""Assembly1"" CommonReferences=""true"">
                                   <Document><![CDATA[
Public MustInherit Class A1
    Public MustOverride Sub F1()
End Class

Public Interface I1
    Sub F2()
End Interface

Class B1
    Inherits A1
    Implements I1

    Public Overrides Sub F1()
        Throw New NotImplementedException()
    End Sub

    Private Class C1
        Inherits A1
        Implements I1

        Public Overrides Sub F1()
            Throw New NotImplementedException()
        End Sub
    End Class
End Class]]>
                                   </Document>
                                   <Document><![CDATA[
Class B2
    Inherits A1
    Implements I1

    Private Class C2
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                   </Document>
                               </Project>
                               <Project Language=""Visual Basic"" AssemblyName=""Assembly2"" CommonReferences=""true"">
                                   <ProjectReference>Assembly1</ProjectReference>
                                   <Document><![CDATA[
Class B3
    Inherits A1
    Implements I1

    Private Class C3
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                   </Document>
                               </Project>
                           </Workspace>.ToString()

            Await TestInRegularAndScriptAsync(input, expected, ignoreTrivia:=False, fixAllActionEquivalenceKey:=fixAllActionId)
        End Function

        <Fact>
        <Trait(Traits.Feature, Traits.Features.CodeActionsImplementAbstractClass)>
        <Trait(Traits.Feature, Traits.Features.CodeActionsFixAllOccurrences)>
        Public Async Function TestFixAllInProject() As Task
            Dim fixAllActionId = VisualBasicImplementAbstractClassCodeFixProvider.GetCodeActionId(""Assembly1"", ""Global.A1"")

            Dim input = <Workspace>
                            <Project Language=""Visual Basic"" AssemblyName=""Assembly1"" CommonReferences=""true"">
                                <Document><![CDATA[
Public MustInherit Class A1
    Public MustOverride Sub F1()
End Class

Public Interface I1
    Sub F2()
End Interface

Class {|FixAllInProject:B1|}
    Inherits A1
    Implements I1

    Private Class C1
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                </Document>
                                <Document><![CDATA[
Class B2
    Inherits A1
    Implements I1

    Private Class C2
        Inherits A1
        Implements I1
    End Class
End Class]]>
                                </Document>
                            </Project>
                            <Project Language=""Visual Basic"" AssemblyName=""Assembly2"" CommonReferences=""true"">
                                <ProjectReference>Assembly1</ProjectReference>
                                <Document><![CDATA[
Class B3
    Inherits A1
    Implements I1

    Private C",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oSQlWQ
code,"<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class frmMain
    Inherits System.Windows.Forms.Form

    'Form overrides dispose to clean up the component list.
    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        Me.btnOk = New System.Windows.Forms.Button
        Me.btnTest = New System.Windows.Forms.Button
        Me.txtInfo = New System.Windows.Forms.TextBox
        Me.SuspendLayout()
        '
        'btnOk
        '
        Me.btnOk.Location = New System.Drawing.Point(423, 362)
        Me.btnOk.Name = ""btnOk""
        Me.btnOk.Size = New System.Drawing.Size(75, 26)
        Me.btnOk.TabIndex = 0
        Me.btnOk.Text = ""Quit""
        Me.btnOk.UseVisualStyleBackColor = True
        '
        'btnTest
        '
        Me.btnTest.Location = New System.Drawing.Point(44, 362)
        Me.btnTest.Name = ""btnTest""
        Me.btnTest.Size = New System.Drawing.Size(72, 26)
        Me.btnTest.TabIndex = 1
        Me.btnTest.Text = ""Test""
        Me.btnTest.UseVisualStyleBackColor = True
        '
        'txtInfo
        '
        Me.txtInfo.Location = New System.Drawing.Point(44, 24)
        Me.txtInfo.Multiline = True
        Me.txtInfo.Name = ""txtInfo""
        Me.txtInfo.ScrollBars = System.Windows.Forms.ScrollBars.Vertical
        Me.txtInfo.Size = New System.Drawing.Size(454, 302)
        Me.txtInfo.TabIndex = 2
        '
        'frmMain
        '
        Me.AutoScaleDimensions = New System.Drawing.SizeF(8.0!, 16.0!)
        Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font
        Me.ClientSize = New System.Drawing.Size(540, 442)
        Me.Controls.Add(Me.txtInfo)
        Me.Controls.Add(Me.btnTest)
        Me.Controls.Add(Me.btnOk)
        Me.Name = ""frmMain""
        Me.Text = ""Main""
        Me.ResumeLayout(False)
        Me.PerformLayout()

    End Sub
    Friend WithEvents btnOk As System.Windows.Forms.Button
    Friend WithEvents btnTest As System.Windows.Forms.Button
    Friend WithEvents txtInfo As System.Windows.Forms.TextBox

End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",6rhZMw
code,"﻿Imports Autodesk.Revit.DB

Namespace Data

  Public Class clsLineSubCategory

    Public Property LinePat As Category

    ''' <summary>
    ''' Line Pattern Name
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public ReadOnly Property Name As String
      Get
        Try
          Return LinePat.Name
        Catch ex As Exception
          Return ""{error}""
        End Try
      End Get
    End Property

    ''' <summary>
    ''' Line Pattern Category
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public ReadOnly Property ElementId As ElementId
      Get
        Try
          Return LinePat.Id
        Catch ex As Exception
          Return Nothing
        End Try
      End Get
    End Property

    ''' <summary>
    ''' Constructor
    ''' </summary>
    ''' <param name=""c""></param>
    ''' <remarks></remarks>
    Public Sub New(c As Category)

      ' Widen Scope
      LinePat = c

    End Sub

  End Class
End Namespace",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",LWNJRq
code,"﻿Imports System.Diagnostics
Imports System.Windows.Forms

Public Class Explorer1

    Private Sub Explorer1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        'Set up the UI
        SetUpListViewColumns()
        LoadTree()
    End Sub

    Private Sub LoadTree()
        ' TODO: Add code to add items to the treeview

        Dim tvRoot As TreeNode
        Dim tvNode As TreeNode

        tvRoot = Me.TreeView.Nodes.Add(""Root"")
        tvNode = tvRoot.Nodes.Add(""TreeItem1"")
        tvNode = tvRoot.Nodes.Add(""TreeItem2"")
        tvNode = tvRoot.Nodes.Add(""TreeItem3"")
    End Sub

    Private Sub LoadListView()
        ' TODO: Add code to add items to the listview based on the selected item in the treeview

        Dim lvItem As ListViewItem
        ListView.Items.Clear()

        lvItem = ListView.Items.Add(""ListViewItem1"")
        lvItem.ImageKey = ""Graph1""
        lvItem.SubItems.AddRange(New String() {""Column2"", ""Column3""})

        lvItem = ListView.Items.Add(""ListViewItem2"")
        lvItem.ImageKey = ""Graph2""
        lvItem.SubItems.AddRange(New String() {""Column2"", ""Column3""})

        lvItem = ListView.Items.Add(""ListViewItem3"")
        lvItem.ImageKey = ""Graph3""
        lvItem.SubItems.AddRange(New String() {""Column2"", ""Column3""})
    End Sub

    Private Sub SetUpListViewColumns()

        ' TODO: Add code to set up listview columns
        Dim lvColumnHeader As ColumnHeader

        ' Setting Column widths applies only to the current view, so this line
        '  explicitly sets the ListView to be showing the SmallIcon view
        '  before setting the column width
        SetView(View.SmallIcon)

        lvColumnHeader = ListView.Columns.Add(""Column1"")
        ' Set the SmallIcon view column width large enough so that the items
        '  do not overlap
        ' Note that the second and third column do not appear in SmallIcon
        '  view, so there is no need to set those while in SmallIcon view
        lvColumnHeader.Width = 90

        ' Change the view to Details and set up the appropriate column
        '  widths for the Details view differently than SmallIcon view
        SetView(View.Details)

        ' The first column needs to be slightly larger in Details view than it
        '  was for SmallIcon view, and Column2 and Column3 need explicit sizes
        '  set for Details view
        lvColumnHeader.Width = 100

        lvColumnHeader = ListView.Columns.Add(""Column2"")
        lvColumnHeader.Width = 70

        lvColumnHeader = ListView.Columns.Add(""Column3"")
        lvColumnHeader.Width = 70

    End Sub

    Private Sub ExitToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExitToolStripMenuItem.Click
        'Close this form
        Me.Close()
    End Sub

    Private Sub ToolBarToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolBarToolStripMenuItem.Click
        'Toggle the visibility of the toolstrip and also the checked state of the associated menu item
        ToolBarToolStripMenuItem.Checked = Not ToolBarToolStripMenuItem.Checked
        ToolStrip.Visible = ToolBarToolStripMenuItem.Checked
    End Sub

    Private Sub StatusBarToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles StatusBarToolStripMenuItem.Click
        'Toggle the visibility of the statusstrip and also the checked state of the associated menu item
        StatusBarToolStripMenuItem.Checked = Not StatusBarToolStripMenuItem.Checked
        StatusStrip.Visible = StatusBarToolStripMenuItem.Checked
    End Sub

    'Change whether or not the folders pane is visible
    Private Sub ToggleFoldersVisible()
        'First toggle the checked state of the associated menu item
        FoldersToolStripMenuItem.Checked = Not FoldersToolStripMenuItem.Checked

        'Change the Folders toolbar button to be in sync
        FoldersToolStripButton.Checked = FoldersToolStripMenuItem.Checked

        ' Collapse the Panel containing the TreeView.
        Me.SplitContainer.Panel1Collapsed = Not FoldersToolStripMenuItem.Checked
    End Sub

    Private Sub FoldersToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FoldersToolStripMenuItem.Click
        ToggleFoldersVisible()
    End Sub

    Private Sub FoldersToolStripButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles FoldersToolStripButton.Click
        ToggleFoldersVisible()
    End Sub

    Private Sub SetView(ByVal View As System.Windows.Forms.View)
        'Figure out which menu item should be checked
        Dim MenuItemToCheck As ToolStripMenuItem = Nothing
        Select Case View
            Case View.Details
                MenuItemToCheck = DetailsToolStripMenuItem
            Case View.LargeIcon
                MenuItemToCheck = LargeIconsToolStripMenuItem
            Case View.List
                MenuItemToCheck = ListToolStripMenuItem
            Case View.SmallIcon
                MenuItemToCheck = SmallIconsToolStripMenuItem
            Case View.Tile
           ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",100wGu
code,"﻿
Option Explicit On
Option Strict On

Imports System
Imports System.Collections.Generic
Imports ananse

' Parses expressions that are used throughout the language
Public Class ExpressionParser
    Inherits AstNodeParser

    'List of operators forming the operator heirachy
    Private Shared operators As List(Of Token()) = New List(Of Token())

    Public Overrides ReadOnly Property lookAhead As Token
        Get
            Throw New NotImplementedException()
        End Get
    End Property

    'Initialize the expression parser and setup operator heirachy
    Public Shared Sub setupOperations()
        operators.Add(New Token() {Token.EQUALS_OPERATOR})
        operators.Add(New Token() {Token.ADD_OPERATOR, Token.SUBTRACT_OPERATOR})
        operators.Add(New Token() {Token.MULTIPLY_OPERATOR, Token.DIVIDE_OPERATOR, Token.MOD_OPERATOR})
    End Sub

    'Run the expression parser and return an expression object
    Public overrides function parse() as AstNode
        return parseExpression(0)
    end function

    private function parseExpression(level as integer) as ExpressionNode
        dim expression as ExpressionNode
        dim tempExpression as ExpressionNode

        if level = operators.Count Then
            ' Return a factor if we've exhausted all operators on our heirachy
            Return parseFactor()
        Else
            ' if not, parse the next level of operators for our expression
            tempExpression = parseExpression(level + 1)
            expression = tempExpression
        end if

        'Loop through all the operators at the current heirachy and group them with their expressions
        do
            if Array.indexOf(operators(level), parser.lookAhead) <> -1 then
                expression = new ExpressionNode
                expression.left = tempExpression
                expression.opr = parser.lookAhead
                parser.getNextToken
                expression.right = parseExpression(level + 1)
            else
                return expression
            end if
            tempExpression = expression
        loop
        return expression
    end function

    ' Factors are numbers, function calls, variables or other expressions contained in parantheses
	private function parseFactor as ExpressionNode
        dim expression as ExpressionNode = New ExpressionNode

		Select Case  parser.lookAhead
		    Case Token.NUMBER
                expression.token = Token.NUMBER
                expression.value = parser.tokenString
                expression.type = ""integer""
                parser.getNextToken()
            Case Token.OPEN_PARANTHESIS
                parser.getNextToken
                expression = parseExpression(0)
                parser.match(Token.CLOSE_PARANTHESIS)
                parser.getNextToken()
        End Select
        return expression
	end function
End Class


",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",cyqcJk
code,"﻿#Region ""Microsoft.VisualBasic::21c7b59f3286485d29202e79ef245f10, Data_science\Mathematica\Math\ODE\Dynamics\Data\StreamExtension.vb""

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:

    '     Module StreamExtension
    ' 
    '         Function: merge, Merge, mergeParameters, mergeY0
    ' 
    ' 
    ' /********************************************************************************/

#End Region

Imports System.Runtime.CompilerServices
Imports Microsoft.VisualBasic.ComponentModel.Collection
Imports Microsoft.VisualBasic.ComponentModel.DataSourceModel
Imports Microsoft.VisualBasic.Language.Default
Imports Microsoft.VisualBasic.Linq

Namespace Dynamics.Data

    <HideModuleName>
    Public Module StreamExtension

        ReadOnly average As New [Default](Of Func(Of IEnumerable(Of Double), Double))(AddressOf Enumerable.Average)

        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name=""source"">这些对象的X的尺度和范围必须都是一致的</param>
        ''' <param name=""method"">Default is <see cref=""Enumerable.Average""/>.(默认是平均值)</param>
        ''' <returns></returns>
        <Extension>
        Public Function Merge(source As IEnumerable(Of ODEsOut), Optional method As Func(Of IEnumerable(Of Double), Double) = Nothing) As ODEsOut
            Return source.ToArray.merge(method Or average)
        End Function

        <Extension>
        Private Function mergeParameters(data As ODEsOut(), aggregate As Func(Of IEnumerable(Of Double), Double)) As Dictionary(Of String, Double)
            Dim params As New Dictionary(Of String, Double)
            Dim value As Double

            Try
                For Each k As String In data(0).params.Keys
                    value = data.Select(Function(o) o.params(k)).DoCall(aggregate)
                    params.Add(k, value)
                Next
            Catch ex As Exception

            End Try

            Return params
        End Function

        <Extension>
        Private Function mergeY0(data As ODEsOut(), aggregate As Func(Of IEnumerable(Of Double), Double)) As Dictionary(Of String, Double)
            Dim y0 As New Dictionary(Of String, Double)
            Dim value As Double

            Try
                For Each k In data(0).y0.Keys
                    value = data.Select(Function(o) o.y0(k)).DoCall(aggregate)
                    y0.Add(k, value)
                Next
            Catch ex As Exception

            End Try

            Return y0
        End Function

        <Extension>
        Private Function merge(data As ODEsOut(), aggregate As Func(Of IEnumerable(Of Double), Double)) As ODEsOut
            Dim minLen% = data.Min(Function(x) x.x.Length)
            Dim vars As String() = data.First.y.Keys.ToArray
            Dim y As New Dictionary(Of NamedCollection(Of Double))
            Dim params As Dictionary(Of String, Double) = data.mergeParameters(aggregate)
            Dim y0 As Dictionary(Of String, Double) = data.mergeY0(aggregate)
            Dim value As Double

            For Each k In vars
                y += New NamedCollection(Of Double) With {
                    .name = k,
                    .value = New Double(minLen) {}
                }
            Next

            For i As Integer = 0 To minLen - 1
                Dim index As Integer = i

                For Each k As String In vars
                    value = data _
                        .Select(Function(v) v.y(k).value(index)) _
                        .DoCall(aggregate)

                    y(k).value(i) = value
                Next
            Next

            Return New ODEsOut With {
                .y = y,
                .params = params,
                .x = data(0).x,
                .y0 = y0
            }
        End Function

    End Module
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gmOqXm
code,"﻿Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' La información general sobre un ensamblado se controla mediante el siguiente 
' conjunto de atributos. Cambie estos atributos para modificar la información
' asociada con un ensamblado.

' Revisar los valores de los atributos del ensamblado

<Assembly: AssemblyTitle(""BEZarenKalkulua"")> 
<Assembly: AssemblyDescription("""")> 
<Assembly: AssemblyCompany(""UPV/EHU"")> 
<Assembly: AssemblyProduct(""BEZarenKalkulua"")> 
<Assembly: AssemblyCopyright(""Copyright © UPV/EHU 2013"")> 
<Assembly: AssemblyTrademark("""")> 

<Assembly: ComVisible(False)>

'El siguiente GUID sirve como identificador de typelib si este proyecto se expone a COM
<Assembly: Guid(""3a29b9db-f00a-4408-bd97-f16f87b588a0"")> 

' La información de versión de un ensamblado consta de los cuatro valores siguientes:
'
'      Versión principal
'      Versión secundaria 
'      Número de compilación
'      Revisión
'
' Puede especificar todos los valores o usar los valores predeterminados de número de compilación y de revisión 
' mediante el asterisco ('*'), como se muestra a continuación:
' <Assembly: AssemblyVersion(""1.0.*"")> 

<Assembly: AssemblyVersion(""1.0.0.0"")> 
<Assembly: AssemblyFileVersion(""1.0.0.0"")> 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",uqR_EJ
code,"﻿' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Runtime.CompilerServices
Imports System.Threading
Imports Microsoft.CodeAnalysis.Text
Imports Microsoft.CodeAnalysis.VisualBasic
Imports Microsoft.CodeAnalysis.VisualBasic.Symbols
Imports Microsoft.CodeAnalysis.VisualBasic.Syntax

Namespace Microsoft.CodeAnalysis.VisualBasic.Extensions

    Friend Module MethodBaseSyntaxExtensions
        <Extension>
        Public Function WithParameterList(method As MethodBaseSyntax, parameterList As ParameterListSyntax) As MethodBaseSyntax
            Select Case method.Kind
                Case SyntaxKind.SubNewStatement
                    Return DirectCast(method, SubNewStatementSyntax).WithParameterList(parameterList)
                Case SyntaxKind.OperatorStatement
                    Return DirectCast(method, OperatorStatementSyntax).WithParameterList(parameterList)
                Case SyntaxKind.PropertyStatement
                    Return DirectCast(method, PropertyStatementSyntax).WithParameterList(parameterList)
            End Select

            If TypeOf method Is MethodStatementSyntax Then
                Return DirectCast(method, MethodStatementSyntax).WithParameterList(parameterList)
            ElseIf TypeOf method Is AccessorStatementSyntax Then
                Return DirectCast(method, AccessorStatementSyntax).WithParameterList(parameterList)
            ElseIf TypeOf method Is DeclareStatementSyntax Then
                Return DirectCast(method, DeclareStatementSyntax).WithParameterList(parameterList)
            ElseIf TypeOf method Is DelegateStatementSyntax Then
                Return DirectCast(method, DelegateStatementSyntax).WithParameterList(parameterList)
            ElseIf TypeOf method Is EventStatementSyntax Then
                Return DirectCast(method, EventStatementSyntax).WithParameterList(parameterList)
            ElseIf TypeOf method Is LambdaHeaderSyntax Then
                Return DirectCast(method, LambdaHeaderSyntax).WithParameterList(parameterList)
            End If

            Throw ExceptionUtilities.Unreachable
        End Function
    End Module
End Namespace",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",15_6vK
code,"﻿Imports System.Data
Imports System.Data.SqlClient
Partial Class Forums_replytopic
    Inherits System.Web.UI.Page
    Dim cf As New comonfunctions
    Protected Sub Button1_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button1.Click
        Dim cn As New SqlConnection
        Dim cmd As New SqlCommand
        Dim sql As String = """"
        Dim pid As String = """"
        Dim regmsg As String = """"
        Dim rzlt As String = """"
        Dim ipadd As String = """"
        Dim doubtfulprofile As String = ""Y""
        Dim ipcountry As String = """"
        Dim updatedby As String = """"

        pid = ""A"" & cf.generateid


        sql = ""insert into topicsQnAansw(answerid,forumqnaid,anser,updatebyid,updatedby)""
        sql = sql & "" values(@answerid,@forumqnaid,@anser,@updatebyid,@updatedby)""


        'Response.Write(sql)
        cn.ConnectionString = cf.friendshipdb
        cn.Open()

        'TextBox1.Text = Replace(TextBox1.Text, vbCrLf, ""<br>"")

        Try
            'Session(""pid"") = ""23434
            updatedby = Session(""fname"")

            cmd.Connection = cn
            cmd.CommandTimeout = 5000
            cmd.CommandText = sql

            cmd.Parameters.AddWithValue(""@answerid"", pid)
            cmd.Parameters.AddWithValue(""@forumqnaid"", Request.QueryString(""id""))
            cmd.Parameters.AddWithValue(""@anser"", Mid(cf.ReplaceBadWords(Replace(TextBox1.Text, vbCrLf, ""<br>"")), 1, 5000))
            cmd.Parameters.AddWithValue(""@updatebyid"", Session(""pid""))
            cmd.Parameters.AddWithValue(""@updatedby"", updatedby)
            cmd.ExecuteNonQuery()


            sql = ""update forumqandA set updateddate=getdate(),updatebyid='"" & Session(""pid"") & ""',updatedby='"" & updatedby & ""'  where forumqnaid="" & Request.QueryString(""id"")
            cf.Taskjobseeker(sql)

            cmd.Dispose()
            cn.Close()

            pid = Request.QueryString(""id"")
            forumheading(pid)
            Response.Redirect(""viewtopic.aspx?id="" & Request.QueryString(""id"") & ""&tid="" & Request.QueryString(""tid""))
        Catch ex As Exception
            cn.Close()
            Response.Write(ex.ToString)
        End Try
    End Sub

    Protected Sub Page_LoadComplete(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.LoadComplete

        If Session(""pid"") Is Nothing Then

            Response.Redirect(""../login.aspx"" & ""?ReturnUrl="" & Request.RawUrl)
        End If

       
    End Sub

    Sub forumheading(ByVal pid As String)
        Dim cn As New SqlConnection
        Dim cmd As New SqlCommand
        Dim sql As String = """"

        Dim regmsg As String = """"
        Dim rzlt As String = """"
        Dim ipadd As String = """"
        Dim doubtfulprofile As String = ""Y""
        Dim ipcountry As String = """"
        Dim startedby As String = """"


        sql = ""update forumtopics set startedbyid=@postedbyid,updatebyid=@updatebyid,latesttopicid=@topicid""
        sql = sql & ""  where forumtopid="" & Request.QueryString(""tid"")

        'Response.Write(sql)
        cn.ConnectionString = cf.friendshipdb
        cn.Open()

        Try


            cmd.Connection = cn
            cmd.CommandTimeout = 5000
            cmd.CommandText = sql

            'cmd.Parameters.AddWithValue(""@forumtopic"", txttopic.Text)
            cmd.Parameters.AddWithValue(""@postedbyid"", Session(""pid""))
            cmd.Parameters.AddWithValue(""@updatebyid"", Session(""pid""))
            cmd.Parameters.AddWithValue(""@topicid"", pid)
            cmd.ExecuteNonQuery()

            cmd.Dispose()
            cn.Close()



        Catch ex As Exception
            cn.Close()
            Response.Write(ex.ToString)
        End Try




    End Sub


    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Session(""pid"") Is Nothing Then

            Response.Redirect(""~/login.aspx"" & ""?ReturnUrl="" & Request.RawUrl)
        End If

        If Session(""pid"") = """" Then
            Response.Redirect(""~/login.aspx"" & ""?ReturnUrl="" & Request.RawUrl)
        End If
    End Sub
End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",gAMPGW
code,"﻿Imports System.Net
Imports System.IO

' Common types and variables for the program
Public Module Globals

    Public CancelImport As Boolean = False
    Public CancelDownload As Boolean = False
    Public frmErrorText As String = """"
    Public Lock As New Object
    Public AllSettings As New ProgramSettings
    Public UserApplicationSettings As ApplicationSettings

    Public TestForSDEChanges As Boolean

    Public RetryCall As Boolean = False

    ''' <summary>
    ''' Displays error message from Try/Catch Exceptions
    ''' </summary>
    ''' <param name=""ex"">Exepction variable for displaying exception text</param>
    Public Sub ShowErrorMessage(ex As Exception)
        Dim msg As String = ex.Message
        If Not CancelImport Then
            If Not IsNothing(ex.InnerException) Then
                msg &= vbCrLf & vbCrLf & ""Inner Exception: "" & ex.InnerException.ToString
            End If
            Call MsgBox(msg, vbExclamation, Application.ProductName)
        End If
    End Sub

    ''' <summary>
    ''' Writes a sent message to the Errors.log file
    ''' </summary>
    ''' <param name=""ErrorMsg"">Message to write to log file</param>
    Public Sub WriteMsgToErrorLog(ByVal ErrorMsg As String)
        Call OutputToFile(""Errors.log"", ErrorMsg)
    End Sub

    ''' <summary>
    ''' Writes a sent message to the OutputLog.log file
    ''' </summary>
    ''' <param name=""OutputMessage"">Message to write to log file</param>
    Public Sub OutputMsgtoLog(ByVal OutputMessage As String)
        Call OutputToFile(""OutputLog.log"", OutputMessage)
    End Sub

    ''' <summary>
    ''' Outputs sent output text to the file path
    ''' </summary>
    ''' <param name=""FilePath"">Path of outputfile with name</param>
    ''' <param name=""OutputText"">Text to output to file</param>
    Private Sub OutputToFile(FilePath As String, OutputText As String)
        Dim AllText() As String

        If Not IO.File.Exists(FilePath) Then
            Dim sw As IO.StreamWriter = IO.File.CreateText(FilePath)
            sw.Close()
        End If

        ' This is an easier way to get all of the strings in the file.
        AllText = IO.File.ReadAllLines(FilePath)
        ' This will append the string to the end of the file.
        My.Computer.FileSystem.WriteAllText(FilePath, CStr(Now) & "", "" & OutputText & Environment.NewLine, True)

    End Sub

    ' Initializes the main form grid 
    Private Delegate Sub InitRow(ByVal Position As Integer)
    Public Sub InitGridRow(ByVal Postion As Integer)

        Dim f1 As frmMain = DirectCast(My.Application.OpenForms.Item(""frmMain""), frmMain)
        f1.Invoke(New InitRow(AddressOf f1.InitGridRow), Postion)
        Application.DoEvents()
    End Sub

    ' Updates the main form grid
    Private Delegate Sub UpdateRowProgress(ByVal Position As Integer, ByVal Count As Integer, ByVal TotalRecords As Integer)
    Public Sub UpdateGridRowProgress(ByVal Postion As Integer, ByVal Count As Integer, ByVal TotalRecords As Integer)

        Dim f1 As frmMain = DirectCast(My.Application.OpenForms.Item(""frmMain""), frmMain)
        f1.Invoke(New UpdateRowProgress(AddressOf f1.UpdateGridRowProgress), Postion, Count, TotalRecords)
        Application.DoEvents()
    End Sub
    ''' <summary>
    ''' Downloads the sent file from server and saves it to the root directory as the sent file name
    ''' </summary>
    ''' <param name=""DownloadURL"">URL to download the file</param>
    ''' <param name=""FileName"">File name of downloaded file</param>
    ''' <returns>File Name of where the downloaded file was saved.</returns>
    Public Function DownloadFileFromServer(ByVal DownloadURL As String, ByVal FileName As String, Optional PGBar As ProgressBar = Nothing) As String
        'Creating the request and getting the response
        Dim Response As HttpWebResponse
        Dim Request As HttpWebRequest

        ' File sizes for progress bar
        Dim FileSize As Double

        ' For reading in chunks of data
        Dim readBytes(4095) As Byte
        ' Create directory if it doesn't exist already
        If Not Directory.Exists(Path.GetDirectoryName(FileName)) Then
            Directory.CreateDirectory(Path.GetDirectoryName(FileName))
        End If
        Dim writeStream As New FileStream(FileName, FileMode.Create)
        Dim bytesread As Integer

        'Replacement for Stream.Position (webResponse stream doesn't support seek)
        Dim nRead As Long

        If Not IsNothing(PGBar) Then
            PGBar.Minimum = 0
            PGBar.Value = 0
            PGBar.Visible = True
            Application.DoEvents()
        End If

        Try 'Checks if the file exist
            Request = DirectCast(HttpWebRequest.Create(DownloadURL), HttpWebRequest)
            Request.Proxy = Nothing
            Request.Credentials = CredentialCache.DefaultCredentials ' Added 9/27 to attempt to fix error: (407) Proxy Authentication Required.
            Request.Timeout = 50000
            Response = CType(Request.GetResponse, HttpWebResponse)
        Catch ex As Exception
            ' Set as empty and return
            writeStream.",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",mZbqnJ
code,"﻿' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Threading.Tasks
Imports Microsoft.CodeAnalysis.Test.Utilities
Imports Microsoft.VisualStudio.GraphModel
Imports Roslyn.Test.Utilities

Namespace Microsoft.VisualStudio.LanguageServices.UnitTests.Progression
    <[UseExportProvider]>
    Public Class VisualBasicSymbolLabelTests
        <Fact, Trait(Traits.Feature, Traits.Features.Progression), WorkItem(545008, ""http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/545008"")>
        Public Async Function TestMethodWithOptionalParameter() As Task
            Using testState = ProgressionTestState.Create(
                    <Workspace>
                        <Project Language=""Visual Basic"" CommonReferences=""true"" FilePath=""Z:\Project.vbproj"">
                            <Document FilePath=""Z:\Project.vb"">
                                Class C
                                    Sub $$S(Optional i As Integer = 42)
                                    End Sub
                                End Class
                            </Document>
                        </Project>
                    </Workspace>)

                Await testState.AssertMarkedSymbolLabelIsAsync(GraphCommandDefinition.Contains.Id, ""S([Integer])"", ""C.S([Integer])"")
            End Using
        End Function

        <Fact, Trait(Traits.Feature, Traits.Features.Progression), WorkItem(545009, ""http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/545009"")>
        Public Async Function TestMethodWithByRefParameter() As Task
            Using testState = ProgressionTestState.Create(
                    <Workspace>
                        <Project Language=""Visual Basic"" CommonReferences=""true"" FilePath=""Z:\Project.vbproj"">
                            <Document FilePath=""Z:\Project.vb"">
                                Class C
                                    Sub $$S(ByRef i As Integer)
                                    End Sub
                                End Class
                            </Document>
                        </Project>
                    </Workspace>)

                Await testState.AssertMarkedSymbolLabelIsAsync(GraphCommandDefinition.Contains.Id, ""S(ByRef Integer)"", ""C.S(ByRef Integer)"")
            End Using
        End Function

        <Fact, Trait(Traits.Feature, Traits.Features.Progression), WorkItem(545017, ""http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/545017"")>
        Public Async Function TestEnumMember() As Task
            Using testState = ProgressionTestState.Create(
                    <Workspace>
                        <Project Language=""Visual Basic"" CommonReferences=""true"" FilePath=""Z:\Project.vbproj"">
                            <Document FilePath=""Z:\Project.vb"">
                                Enum E
                                    $$M
                                End Enum
                            </Document>
                        </Project>
                    </Workspace>)

                Await testState.AssertMarkedSymbolLabelIsAsync(GraphCommandDefinition.Contains.Id, ""M"", ""E.M"")
            End Using
        End Function

        <Fact, Trait(Traits.Feature, Traits.Features.Progression), WorkItem(608256, ""http://vstfdevdiv:8080/DevDiv2/DevDiv/_workitems/edit/608256"")>
        Public Async Function TestGenericType() As Task
            Using testState = ProgressionTestState.Create(
                    <Workspace>
                        <Project Language=""Visual Basic"" CommonReferences=""true"" FilePath=""Z:\Project.vbproj"">
                            <Document FilePath=""Z:\Project.vb"">
                                Class $$C(Of T)
                                End Class
                            </Document>
                        </Project>
                    </Workspace>)

                Await testState.AssertMarkedSymbolLabelIsAsync(GraphCommandDefinition.Contains.Id, ""C(Of T)"", ""C(Of T)"")
            End Using
        End Function
    End Class
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",TjELgF
code,"﻿#Region ""Microsoft.VisualBasic::edeeb96bdd471bfafa826b0b80ae7bdd, R#\System\Document\AnnotationDocs.vb""

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:

    '     Class AnnotationDocs
    ' 
    '         Function: (+2 Overloads) GetAnnotations
    ' 
    '         Sub: PrintHelp
    ' 
    ' 
    ' /********************************************************************************/

#End Region

Imports System.Reflection
Imports Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Assembly
Imports Microsoft.VisualBasic.ApplicationServices.Development.XmlDoc.Serialization
Imports SMRUCC.Rsharp.Runtime
Imports SMRUCC.Rsharp.Runtime.Interop
Imports LibraryAssembly = System.Reflection.Assembly

Namespace Development

    ''' <summary>
    ''' Parser of the <see cref=""Project""/> assembly
    ''' </summary>
    Public Class AnnotationDocs

        ReadOnly projects As New Dictionary(Of String, Project)

        Public Function GetAnnotations(package As Type) As ProjectType
            Dim assembly As LibraryAssembly = package.Assembly
            Dim project As Project
            Dim projectKey As String = assembly.ToString
            Dim docXml As String = assembly.Location.TrimSuffix & "".xml""
            Dim type As ProjectType

            If Not docXml.FileExists Then
                ' get xml docs from app path or annotation folder
                ' in app home folder
                For Each dir As String In {""/"", ""Annotation"", ""Library""}
                    docXml = $""{App.HOME}/{dir}/{assembly.Location.BaseName}.xml""

                    If docXml.FileExists Then
                        Exit For
                    End If
                Next
            End If

            If docXml.FileExists AndAlso Not projects.ContainsKey(projectKey) Then
                projects(projectKey) = ProjectSpace.CreateDocProject(docXml)
            End If

            If projects.ContainsKey(projectKey) Then
                project = projects(projectKey)
                type = project.GetType(package.FullName)
            Else
                type = Nothing
            End If

            Return type
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name=""func""></param>
        ''' <param name=""requireNoneNull"">
        ''' 默认当没有做注释的时候，这个函数会返回空值
        ''' 反之这个参数为TRUE的时候会返回空文档对象实例
        ''' </param>
        ''' <returns></returns>
        Public Function GetAnnotations(func As MethodInfo, Optional requireNoneNull As Boolean = False) As ProjectMember
            Dim type As ProjectType = GetAnnotations(func.DeclaringType)
            Dim docs As ProjectMember

            If type Is Nothing Then
                ' 整个类型都没有xml注释
                docs = Nothing
            Else
                ' 可能目标函数对象没有xml注释
                ' 在这里假设没有重载？
                docs = type.GetMethods(func.Name).ElementAtOrDefault(Scan0)
            End If

            If docs Is Nothing AndAlso requireNoneNull Then
                docs = New ProjectMember(type)
            End If

            Return docs
        End Function

        ''' <summary>
        ''' Print help information about the given R api method 
        ''' </summary>
        ''' <param name=""api""></param>
        Public Sub PrintHelp(api As RMethodInfo, out As RContentOutput)
            Dim docs As ProjectMember = GetAnnotations(api.GetRawDeclares)

            If out.env <> OutputEnvironments.Html Then
                Call printConsole(api, docs)
            Else
                Call printHtml(api, docs, out)
            End If
        End Sub
    End Class
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",A8vGKh
code,"﻿'***********************************************************************************************************************
'* Project: CmisObjectModelLibrary
'* Copyright (c) 2014, Brügmann Software GmbH, Papenburg, All rights reserved
'*
'* Contact: opensource<at>patorg.de
'* 
'* CmisObjectModelLibrary is a VB.NET implementation of the Content Management Interoperability Services (CMIS) standard
'*
'* This file is part of CmisObjectModelLibrary.
'* 
'* This library is free software; you can redistribute it and/or
'* modify it under the terms of the GNU Lesser General Public
'* License as published by the Free Software Foundation; either
'* version 3.0 of the License, or (at your option) any later version.
'*
'* This library is distributed in the hope that it will be useful,
'* but WITHOUT ANY WARRANTY; without even the implied warranty of
'* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'* Lesser General Public License for more details.
'*
'* You should have received a copy of the GNU Lesser General Public
'* License along with this library (lgpl.txt).
'* If not, see <http://www.gnu.org/licenses/lgpl.txt>.
'***********************************************************************************************************************
Imports CmisObjectModel.Common
Imports sx = System.Xml
Imports sxs = System.Xml.Serialization
'depends on the chosen interpretation of the xs:integer expression in a xsd-file
#If xs_Integer = ""Int32"" OrElse xs_integer = ""Integer"" OrElse xs_integer = ""Single"" Then
Imports xs_Integer = System.Int32
#Else
Imports xs_Integer = System.Int64
#End If

Namespace CmisObjectModel.Core.Definitions.Properties
   ''' <summary>
   ''' Implementation of a propertyDefinition for cmisPropertyDouble
   ''' </summary>
   ''' <remarks>In CMIS specification there is no cmisPropertyDoubleDefinitionType defined, but some CMIS servers
   ''' (i.e. alfresco) send double values instead of decimal values</remarks>
   <sxs.XmlRoot(cmisPropertyDecimalDefinitionType.DefaultElementName, Namespace:=Constants.Namespaces.cmis),
    Attributes.CmisTypeInfo(cmisPropertyDoubleDefinitionType.CmisTypeName, cmisPropertyDoubleDefinitionType.TargetTypeName, cmisPropertyDoubleDefinitionType.DefaultElementName)>
   Public Class cmisPropertyDoubleDefinitionType
      Inherits Core.Definitions.Properties.Generic.cmisPropertyDefinitionType(Of Double, Core.Choices.cmisChoiceDouble, Core.Properties.cmisPropertyDouble)

      Public Sub New()
      End Sub
      ''' <summary>
      ''' this constructor is only used if derived classes from this class needs an InitClass()-call
      ''' </summary>
      ''' <param name=""initClassSupported""></param>
      ''' <remarks></remarks>
      Protected Sub New(initClassSupported As Boolean?)
         MyBase.New(initClassSupported)
      End Sub
      Public Sub New(id As String, localName As String, localNamespace As String, displayName As String, queryName As String,
                     required As Boolean, inherited As Boolean, queryable As Boolean, orderable As Boolean,
                     cardinality As enumCardinality, updatability As enumUpdatability,
                     ParamArray choices As Core.Choices.cmisChoiceDouble())
         MyBase.New(id, localName, localNamespace, displayName, queryName,
                    required, inherited, queryable, orderable, cardinality, updatability, choices)
      End Sub
      Public Sub New(id As String, localName As String, localNamespace As String, displayName As String, queryName As String,
                     required As Boolean, inherited As Boolean, queryable As Boolean, orderable As Boolean,
                     cardinality As enumCardinality, updatability As enumUpdatability, defaultValue As Core.Properties.cmisPropertyDouble,
                     ParamArray choices As Core.Choices.cmisChoiceDouble())
         MyBase.New(id, localName, localNamespace, displayName, queryName,
                    required, inherited, queryable, orderable, cardinality, updatability, defaultValue, choices)
      End Sub

#Region ""Constants""
      Public Const CmisTypeName As String = ""cmis:cmisPropertyDoubleDefinitionType""
      Public Const TargetTypeName As String = Core.Properties.cmisPropertyDouble.CmisTypeName
      Public Const DefaultElementName As String = ""propertyDoubleDefinition""
#End Region

#Region ""IXmlSerializable""
      Private Shared _setter As New Dictionary(Of String, Action(Of cmisPropertyDoubleDefinitionType, String)) From {
         } '_setter

      ''' <summary>
      ''' Deserialization of all properties stored in attributes
      ''' </summary>
      ''' <param name=""reader""></param>
      ''' <remarks></remarks>
      Protected Overrides Sub ReadAttributes(reader As System.Xml.XmlReader)
         'at least one property is serialized in an attribute-value
         If _setter.Count > 0 Then
            For attributeIndex As Integer = 0 To reader.AttributeCount - 1
               reader.MoveToAttribute(attributeIndex)
               'attribute na",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",0DcpNk
code,"﻿Imports System.Drawing
Imports Microsoft.VisualBasic.Language
Imports stdNum = System.Math

Namespace Drawing2D.Math2D.MarchingSquares

    ''' <summary>
    ''' 将稀疏矩阵数据转换为稠密矩阵数据
    ''' </summary>
    Public Class MapMatrix

        ''' <summary>
        ''' 插值后得到的稠密矩阵数据
        ''' </summary>
        Friend data As Double(,)
        Friend x_num% = 100
        Friend y_num% = 100

#Region ""the input parameters""
        Friend grid_w#
        Friend grid_h#
        Friend w#, h#
#End Region

        ''' <summary>
        ''' 实际的测量结果数据，一般为一个稀疏矩阵
        ''' </summary>
        ReadOnly dots() As MeasureData

        Friend min#
        Friend max#

        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name=""raw"">现实世界中的原始测量结果数据</param>
        ''' <param name=""size"">画布的大小</param>
        ''' <param name=""gridSize"">网格的大小</param>
        Sub New(raw As IEnumerable(Of MeasureData), size As SizeF, gridSize As SizeF)
            dots = raw.ToArray
            w = size.Width
            h = size.Height
            grid_w = gridSize.Width
            grid_h = gridSize.Height
        End Sub

        ''' <summary>
        ''' 返回一个稠密状态的结果矩阵
        ''' </summary>
        ''' <returns>
        ''' 以行扫描的方式返回结果
        ''' </returns>
        Public Iterator Function GetMatrixInterpolation() As IEnumerable(Of IntMeasureData())
            Dim x, y As Double
            Dim dx As Double = grid_w
            Dim dy As Double = grid_h
            Dim scan As New List(Of IntMeasureData)

            For i As Integer = 0 To x_num - 1
                For j As Integer = 0 To y_num - 1
                    scan += New IntMeasureData With {
                        .X = x,
                        .Y = y,
                        .Z = data(i, j)
                    }
                    y += dy
                Next

                y = 0
                x = x + dx

                Yield scan.PopAll
            Next
        End Function

        ''' <summary>
        ''' 数据插值
        ''' </summary>
        Friend Function InitData() As MapMatrix
            Dim measure_data = New IntMeasureData(dots.Length - 1) {}
            Dim d As Double

            x_num = CInt(w / grid_w)
            y_num = CInt(h / grid_h)
            data = New Double(x_num - 1, y_num - 1) {}

            For i = dots.Length - 1 To 0 Step -1
                measure_data(i) = New IntMeasureData(dots(i), x_num, y_num)
            Next

            min = Single.MaxValue
            max = Single.MinValue

            For i As Integer = 0 To x_num - 1
                For j As Integer = 0 To y_num - 1
                    Dim value As Single = 0
                    Dim find = False

                    For Each imd As IntMeasureData In measure_data
                        If i = imd.X AndAlso j = imd.Y Then
                            value = imd.Z
                            find = True
                            Exit For
                        End If
                    Next

                    If Not find Then
                        Dim lD As Double = 0
                        Dim DV As Double = 0

                        For Each imd As IntMeasureData In measure_data
                            d = 1.0 / ((imd.X - i) * (imd.X - i) + (imd.Y - j) * (imd.Y - j))
                            lD += d
                            DV += imd.Z * d
                        Next

                        value = CSng(DV / lD)
                    End If

                    data(i, j) = value
                    min = stdNum.Min(min, value)
                    max = stdNum.Max(max, value)
                Next
            Next

            Return Me
        End Function
    End Class
End Namespace",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DFi6KJ
code,"﻿' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Collections.Immutable
Imports System.Reflection.Metadata
Imports System.Reflection.Metadata.Ecma335
Imports System.Runtime.CompilerServices
Imports System.Xml.Linq
Imports Microsoft.CodeAnalysis
Imports Microsoft.CodeAnalysis.Emit
Imports Microsoft.CodeAnalysis.VisualBasic.Symbols
Imports Microsoft.CodeAnalysis.VisualBasic.Syntax
Imports Roslyn.Test.MetadataUtilities
Imports Roslyn.Test.Utilities

Namespace Microsoft.CodeAnalysis.VisualBasic.UnitTests
    Public Class EditAndContinueTestBase
        Inherits BasicTestBase

        ' PDB reader can only be accessed from a single thread, so avoid concurrent compilation:
        Protected Shared ReadOnly ComSafeDebugDll As VisualBasicCompilationOptions = TestOptions.DebugDll.WithConcurrentBuild(False)

        Friend Shared ReadOnly EmptyLocalsProvider As Func(Of MethodDefinitionHandle, EditAndContinueMethodDebugInformation) = Function(token) Nothing

        Friend Shared Function MarkedSource(source As XElement, Optional fileName As String = """", Optional options As VisualBasicParseOptions = Nothing) As SourceWithMarkedNodes
            Return New SourceWithMarkedNodes(source.Value, Function(s) Parse(s, fileName, options), Function(s) CInt(GetType(SyntaxKind).GetField(s).GetValue(Nothing)))
        End Function

        Friend Shared Function MarkedSource(source As String, Optional fileName As String = """", Optional options As VisualBasicParseOptions = Nothing) As SourceWithMarkedNodes
            Return New SourceWithMarkedNodes(source, Function(s) Parse(s, fileName, options), Function(s) CInt(GetType(SyntaxKind).GetField(s).GetValue(Nothing)))
        End Function

        Friend Shared Function GetSyntaxMapFromMarkers(source0 As SourceWithMarkedNodes, source1 As SourceWithMarkedNodes) As Func(Of SyntaxNode, SyntaxNode)
            Return SourceWithMarkedNodes.GetSyntaxMap(source0, source1)
        End Function

        Friend Function ToLocalInfo(local As Cci.ILocalDefinition) As ILVisualizer.LocalInfo
            Dim signature = local.Signature
            If signature Is Nothing Then
                Return New ILVisualizer.LocalInfo(local.Name, local.Type, local.IsPinned, local.IsReference)
            Else
                ' Decode simple types only.
                Dim typeName = If(signature.Length = 1, GetTypeName(CType(signature(0), SignatureTypeCode)), Nothing)
                Return New ILVisualizer.LocalInfo(Nothing, If(typeName, ""[unchanged]""), False, False)
            End If
        End Function

        Private Function GetTypeName(typeCode As SignatureTypeCode) As String
            Select Case typeCode
                Case SignatureTypeCode.Boolean
                    Return ""Boolean""
                Case SignatureTypeCode.Int32
                    Return ""Integer""
                Case SignatureTypeCode.String
                    Return ""String""
                Case SignatureTypeCode.Object
                    Return ""Object""
                Case Else
                    Return Nothing
            End Select
        End Function

        Friend Shared Function GetAllLocals(compilation As VisualBasicCompilation, method As MethodSymbol) As ImmutableArray(Of LocalSymbol)
            Dim methodSyntax = method.DeclaringSyntaxReferences(0).GetSyntax().Parent
            Dim model = compilation.GetSemanticModel(methodSyntax.SyntaxTree)
            Dim locals = ArrayBuilder(Of LocalSymbol).GetInstance()

            For Each node In methodSyntax.DescendantNodes()
                If node.Kind = SyntaxKind.VariableDeclarator Then
                    For Each name In DirectCast(node, VariableDeclaratorSyntax).Names
                        Dim local = DirectCast(model.GetDeclaredSymbol(name), LocalSymbol)
                        locals.Add(local)
                    Next
                End If
            Next

            Return locals.ToImmutableAndFree()
        End Function

        Friend Shared Function GetAllLocals(compilation As VisualBasicCompilation, method As IMethodSymbol) As ImmutableArray(Of KeyValuePair(Of ILocalSymbol, Integer))
            Dim locals = GetAllLocals(compilation, DirectCast(method, MethodSymbol))
            Return locals.SelectAsArray(Function(local, index, arg) New KeyValuePair(Of ILocalSymbol, Integer)(local, index), DirectCast(Nothing, Object))
        End Function

        Friend Shared Function GetAllLocals(method As SourceMethodSymbol) As ImmutableArray(Of VisualBasicSyntaxNode)
            Dim names = From name In LocalVariableDeclaratorsCollector.GetDeclarators(method).OfType(Of ModifiedIdentifierSyntax)
                        Select DirectCast(name, VisualBasicSyntaxNode)

            Return names.AsImmutableOrEmpty
        End Function

        Friend Shared Function GetLocalName(node As SyntaxNode) As String
            If node.Kind = SyntaxKind.ModifiedIdentifier Then
                Return DirectCast(node, ModifiedIdentifierSyntax).Identifier.ToString(",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",DJ90GC
code,"Imports System
Imports System.Drawing
Imports System.Collections
Imports System.ComponentModel
Imports System.Windows.Forms
Imports System.Diagnostics
Imports System.IO
Imports System.Xml
Imports AnimatGuiCtrls.Controls
Imports AnimatGUI.Framework

Namespace DataObjects.Behavior

    Public Class LinkedSynapse
        Inherits AnimatGUI.Framework.DataObject

#Region "" Attributes ""

        Protected m_bnNode As AnimatGUI.DataObjects.Behavior.Node
        Protected m_blLink As AnimatGUI.DataObjects.Behavior.Link

#End Region

#Region "" Properties ""

        <Browsable(False)> _
        Public Property Node() As AnimatGUI.DataObjects.Behavior.Node
            Get
                Return m_bnNode
            End Get
            Set(ByVal Value As AnimatGUI.DataObjects.Behavior.Node)
                m_bnNode = Value
            End Set
        End Property

        <Browsable(False)> _
        Public Property Link() As AnimatGUI.DataObjects.Behavior.Link
            Get
                Return m_blLink
            End Get
            Set(ByVal Value As AnimatGUI.DataObjects.Behavior.Link)
                m_blLink = Value
            End Set
        End Property

        <Browsable(False)> _
        Public Overrides Property ViewSubProperties() As Boolean
            Get
                Return False
            End Get
            Set(ByVal Value As Boolean)
            End Set
        End Property

#End Region

#Region "" Methods ""

        Public Sub New(ByVal doParent As AnimatGUI.Framework.DataObject)
            MyBase.New(doParent)
        End Sub

        Public Sub New(ByRef bnNode As AnimatGUI.DataObjects.Behavior.Node, ByRef blLink As AnimatGUI.DataObjects.Behavior.Link)
            MyBase.New(blLink)

            m_bnNode = bnNode
            m_blLink = blLink
        End Sub

        Public Overrides Function Clone(ByVal doParent As AnimatGUI.Framework.DataObject, ByVal bCutData As Boolean, _
                                        ByVal doRoot As AnimatGUI.Framework.DataObject) As AnimatGUI.Framework.DataObject
            Dim oNew As New LinkedSynapse(doParent)
            oNew.Node = Me.Node
            oNew.Link = Me.Link
            Return oNew
        End Function

        Public Overrides Sub BuildProperties(ByRef propTable As AnimatGuiCtrls.Controls.PropertyTable)
        End Sub

        Public Overrides Sub BuildPropertyDropDown(ByRef ctrlDropDown As System.Windows.Forms.Control)
            If m_bnNode Is Nothing Then Return

            If TypeOf m_bnNode Is AnimatGUI.DataObjects.Behavior.Nodes.OffPage Then
                Dim doNode As AnimatGUI.DataObjects.Behavior.Nodes.OffPage = DirectCast(m_bnNode, AnimatGUI.DataObjects.Behavior.Nodes.OffPage)
                If doNode.LinkedNode Is Nothing OrElse doNode.LinkedNode.Node Is Nothing Then Return

                m_bnNode = doNode.LinkedNode.Node
            End If

            If Not TypeOf (ctrlDropDown) Is ListBox Then
                Throw New System.Exception(""The control passed into LinkedSynapse.BuildPropertyDropDown is not a listbox type"")
            End If

            Dim lbList As ListBox = DirectCast(ctrlDropDown, ListBox)

            lbList.BeginUpdate()
            lbList.Items.Clear()
            Dim lbSelectedItem As AnimatGUI.TypeHelpers.DropDownEntry = Nothing
            For Each oLink As DictionaryEntry In m_bnNode.InLinks
                Dim blLink As AnimatGUI.DataObjects.Behavior.Link = DirectCast(oLink.Value, AnimatGUI.DataObjects.Behavior.Link)

                If TypeOf (blLink) Is Synapses.Normal Then
                    Dim lsSynapse As AnimatGUI.Framework.DataObject = New LinkedSynapse(m_bnNode, blLink)
                    Dim leItem As New AnimatGUI.TypeHelpers.DropDownEntry((blLink.Origin.Text & "" ("" & Replace(blLink.Text, vbCrLf, "" "") & "")""), lsSynapse)

                    lbList.Items.Add(leItem)

                    If Not m_blLink Is Nothing AndAlso m_blLink.ID = blLink.ID Then
                        lbSelectedItem = leItem
                    End If
                End If
            Next

            If Not lbSelectedItem Is Nothing Then lbList.SelectedItem = lbSelectedItem
            lbList.DisplayMember = ""Display""
            lbList.ValueMember = ""Value""

            MyBase.FormatDropDownList(lbList)

            lbList.EndUpdate()
            lbList.Invalidate()

        End Sub

#End Region

    End Class

End Namespace

",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",beB7F0
code,"﻿Imports System.IO
Imports Aspose.Cells

Namespace Articles
    Public Class ChangeHtmlLinkTarget
        Public Shared Sub Run()
            ' ExStart:1
            Dim dataDir As String = RunExamples.GetDataDir(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType)
            Dim inputPath As String = dataDir & ""Sample1.xlsx""
            Dim outputPath As String = dataDir & ""Output.out.html""

            Dim workbook As Workbook = New Workbook(inputPath)
            Dim opts As HtmlSaveOptions = New HtmlSaveOptions()
            opts.LinkTargetType = HtmlLinkTargetType.Self

            workbook.Save(outputPath, opts)
            Console.WriteLine(""File saved: {0}"", outputPath)
            ' ExEnd:1

        End Sub
    End Class
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",lJTYi_
code,"'
' * Copyright (c) 2005, 2013, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 

Namespace java.lang.management


	''' <summary>
	''' Information about an object monitor lock.  An object monitor is locked
	''' when entering a synchronization block or method on that object.
	''' 
	''' <h3>MXBean Mapping</h3>
	''' <tt>MonitorInfo</tt> is mapped to a <seealso cref=""CompositeData CompositeData""/>
	''' with attributes as specified in
	''' the <seealso cref=""#from from""/> method.
	''' 
	''' @author  Mandy Chung
	''' @since   1.6
	''' </summary>
	Public Class MonitorInfo
		Inherits LockInfo

		Private stackDepth As Integer
		Private stackFrame As StackTraceElement

		''' <summary>
		''' Construct a <tt>MonitorInfo</tt> object.
		''' </summary>
		''' <param name=""className""> the fully qualified name of the class of the lock object. </param>
		''' <param name=""identityHashCode""> the {@link System#identityHashCode
		'''                         identity hash code} of the lock object. </param>
		''' <param name=""stackDepth""> the depth in the stack trace where the object monitor
		'''                   was locked. </param>
		''' <param name=""stackFrame""> the stack frame that locked the object monitor. </param>
		''' <exception cref=""IllegalArgumentException""> if
		'''    <tt>stackDepth</tt> &ge; 0 but <tt>stackFrame</tt> is <tt>null</tt>,
		'''    or <tt>stackDepth</tt> &lt; 0 but <tt>stackFrame</tt> is not
		'''       <tt>null</tt>. </exception>
		Public Sub New(  className As String,   identityHashCode As Integer,   stackDepth As Integer,   stackFrame As StackTraceElement)
			MyBase.New(className, identityHashCode)
			If stackDepth >= 0 AndAlso stackFrame Is Nothing Then Throw New IllegalArgumentException(""Parameter stackDepth is "" & stackDepth & "" but stackFrame is null"")
			If stackDepth < 0 AndAlso stackFrame IsNot Nothing Then Throw New IllegalArgumentException(""Parameter stackDepth is "" & stackDepth & "" but stackFrame is not null"")
			Me.stackDepth = stackDepth
			Me.stackFrame = stackFrame
		End Sub

		''' <summary>
		''' Returns the depth in the stack trace where the object monitor
		''' was locked.  The depth is the index to the <tt>StackTraceElement</tt>
		''' array returned in the <seealso cref=""ThreadInfo#getStackTrace""/> method.
		''' </summary>
		''' <returns> the depth in the stack trace where the object monitor
		'''         was locked, or a negative number if not available. </returns>
		Public Overridable Property lockedStackDepth As Integer
			Get
				Return stackDepth
			End Get
		End Property

		''' <summary>
		''' Returns the stack frame that locked the object monitor.
		''' </summary>
		''' <returns> <tt>StackTraceElement</tt> that locked the object monitor,
		'''         or <tt>null</tt> if not available. </returns>
		Public Overridable Property lockedStackFrame As StackTraceElement
			Get
				Return stackFrame
			End Get
		End Property

		''' <summary>
		''' Returns a <tt>MonitorInfo</tt> object represented by the
		''' given <tt>CompositeData</tt>.
		''' The given <tt>CompositeData</tt> must contain the following attributes
		''' as well as the attributes specified in the
		''' <a href=""LockInfo.html#MappedType"">
		''' mapped type</a> for the <seealso cref=""LockInfo""/> class:
		''' <blockquote>
		''' <table border summary=""The attributes and their types the given CompositeData contains"">
		''' <tr>
		'''   <th align=left>Attribute Name</th>
		'''   <th align=left>Type</th>
		''' </tr>
		''' <tr>
		'''   <td>lockedStackFrame</td>
		'''   <td><tt>CompositeData as specified in the
		'''       <a href=""ThreadInfo.html#StackTrace"">stackTrace</a>
		'''       attribute defined in the {@link ThreadInfo#from
		'''       ThreadInfo.from} method.
		'''       </tt></td>
		''' </tr>
		''' <tr>
		'''   <td>lockedStackDepth</td>
		'''   <td><tt>java.lang.Integer</tt></td>
		''' </tr>
		''' </table>
		''' </blockquote>
		''' </summary>
		''' <param name=""cd""> <tt>CompositeData</tt> representing a <tt>MonitorInfo</tt>
		''' </param>
		''' <exception cref=""IllegalArgumentException""> if <tt>cd</tt> does not
		'''   represent a <tt>MonitorInfo</tt> with the attributes described
		'''   above.
		''' </exception>
		''' <returns> a <tt>MonitorInfo</tt> object represented
		'''         by <tt>cd</tt> if <tt>cd</tt> is not <tt>null</tt>;
		'''         <tt>null</tt> otherwise. </returns>
		Public Shared Function [from](  cd As javax.management.openmbean.CompositeData) As MonitorInfo
			If cd Is Nothing Then Return Nothing

			If TypeOf cd Is sun.management.MonitorInfoCompositeData Then
				Return CType(cd, sun.management.MonitorInfoCompositeData).monitorInfo
			Else
				sun.management.MonitorInfoCompositeData.validateCompositeData(cd)
				Dim className_Renamed As String = sun.management.MonitorInfoCompositeData.getClassName(cd)
				Dim identityHashCode_Renamed As Integer = sun.management.MonitorInfoCompositeData.getIdentityHashCode(cd)
				Dim stackDepth As Integer = sun.management.Mo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",3EQ3ex
code,"Imports ABASTECIMIENTOS.ENTIDADES
Imports ABASTECIMIENTOS.NEGOCIO
Partial Class ESTABLECIMIENTOS_FrmCrearSolicitudCompraDistribucion
    Inherits System.Web.UI.Page
    Private _idsol As Integer
    Public Property idsol() As Integer
        Get
            Return Me._idsol
        End Get
        Set(ByVal value As Integer)
            Me._idsol = value
            If Not Me.ViewState(""idsol"") Is Nothing Then Me.ViewState.Remove(""idsol"")
            Me.ViewState.Add(""idsol"", value)
        End Set
    End Property
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack Then
            Me.Master.ControlMenu.Visible = False
            idsol = Request.QueryString(""idsol"")
            'Dim idsuministro As Integer
            'idsuministro = Request.QueryString(""idsu"")

            Dim cdetsolicitudes As New cDETALLESOLICITUDES
            gvProductos.DataSource = cdetsolicitudes.obtenerProductosSolicitud2(Session(""IdEstablecimiento""), idsol)
            gvProductos.DataBind()

            If Request.QueryString(""R"") Is Nothing Or Request.QueryString(""R"") = """" Then
            Else
                Me.LinkButton13.Visible = True
            End If


        Else
            If Not Me.ViewState(""idsol"") Is Nothing Then Me.idsol = Me.ViewState(""idsol"")
        End If
    End Sub
    Protected Sub Button6_Click1(ByVal sender As Object, ByVal e As System.EventArgs) Handles Button6.Click

        If Me.TextBox2.Text = """" And Me.TextBox2.Enabled = True Then
            Me.Label1.Text = ""Escriba un parámetro de búsqueda.""
            Exit Sub
        Else
            Me.Label1.Text = """"
        End If

        If Me.DropDownList1.SelectedValue = 1 And Me.TextBox2.Text.Length < 8 Then
            Me.Label1.Text = ""El código del producto debe ser de 8 dígitos""
            Exit Sub
        End If

        If Me.DropDownList1.SelectedValue = 2 And Me.RadioButtonList2.SelectedIndex = -1 Then
            Me.Label1.Text = ""Debe seleccionar un estado.""
            Exit Sub
        End If

        Dim ds As New Data.DataSet
        Dim cdetsolicitudes As New cDETALLESOLICITUDES
        ds = cdetsolicitudes.obtenerProductosSolicitud2(idsol, Session(""IdEstablecimiento""))
        Dim dv As New Data.DataView
        dv.Table = ds.Tables(0)

        Select Case Me.DropDownList1.SelectedValue
            Case Is = 1
                dv.RowFilter = ""renglon="" & Me.TextBox2.Text
            Case Is = 2
                dv.RowFilter = ""corrproducto="" & Me.TextBox2.Text
            Case Is = 3
                If Me.RadioButtonList2.SelectedValue = 0 Then
                    'lo que esta capturado
                    dv.RowFilter = ""capturado>0""
                Else
                    'lo que no esta capturado
                    dv.RowFilter = ""capturado=0""
                End If
        End Select

        gvProductos.DataSource = dv
        gvProductos.DataBind()

        Me.GridView1.Visible = False
        Me.Label17.Visible = False
        Me.Button2.Visible = False

    End Sub

    Protected Sub DropDownList1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles DropDownList1.SelectedIndexChanged
        If Me.DropDownList1.SelectedValue = 3 Then
            Me.TextBox2.Visible = False
            Me.TextBox2.Text = """"
            Me.RadioButtonList2.Visible = True
        Else
            Me.TextBox2.Visible = True
            Me.TextBox2.Text = """"
            Me.RadioButtonList2.Visible = False
            Me.RadioButtonList2.SelectedIndex = -1
        End If
    End Sub
    Protected Sub gvProductos_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles gvProductos.SelectedIndexChanged, GridView1.SelectedIndexChanged
        Dim renglon, idproducto, idespecificacion, identificadorproducto As Integer

        renglon = Me.gvProductos.DataKeys(gvProductos.SelectedIndex).Values(2)
        idproducto = Me.gvProductos.DataKeys(gvProductos.SelectedIndex).Values(0)
        If IsDBNull(Me.gvProductos.DataKeys(gvProductos.SelectedIndex).Values(4)) Then
            idespecificacion = 0
        Else
            idespecificacion = Me.gvProductos.DataKeys(gvProductos.SelectedIndex).Values(4)
        End If
        identificadorproducto = Me.gvProductos.DataKeys(gvProductos.SelectedIndex).Values(5)

        Dim cds As New cDETALLESOLICITUDES

        If cds.ExisteDistribucion(Session(""IdEstablecimiento""), idsol, renglon, idproducto) = 0 Then
            cds.InsertarDetallesSolicitudes(Session(""IdEstablecimiento""), idsol, renglon, idproducto, idespecificacion, User.Identity.Name, identificadorproducto)
        End If


        GridView1.DataSource = GetSortableData(String.Empty, renglon, idproducto)

        'Me.GridView1.DataSource = cds.obtenerProductosSolicitudDistribucion(Session(""IdEstablecimiento""), idsol, renglon, idproducto)
        Me.GridView1.DataBind()

        Me.GridView1.Visible = True
        Me.Label17.Visible = True
        Me.Button2.Visible = True
    End Sub
    Protected Sub GridView1_RowDataBound(ByVal sender As Obje",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",9Rlph0
code,"'
' * Copyright (c) 1997, 2007, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 

Namespace java.awt.dnd.peer



	''' <summary>
	''' <p>
	''' This interface is supplied by the underlying window system platform to
	''' expose the behaviors of the Drag and Drop system to an originator of
	''' the same
	''' </p>
	''' 
	''' @since 1.2
	''' 
	''' </summary>

	Public Interface DragSourceContextPeer

		''' <summary>
		''' start a drag
		''' </summary>

		Sub startDrag(  dsc As java.awt.dnd.DragSourceContext,   c As java.awt.Cursor,   dragImage As java.awt.Image,   imageOffset As java.awt.Point)

		''' <summary>
		''' return the current drag cursor
		''' </summary>

		Property cursor As java.awt.Cursor



		''' <summary>
		''' notify the peer that the Transferables DataFlavors have changed
		''' </summary>

		Sub transferablesFlavorsChanged()
	End Interface

End Namespace",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bnUB6a
code,"﻿Imports WDMath
Imports System.ComponentModel
Imports WDList

Public Class ElementsPanel

    Private Enum PanelState
        None
        MovingOrigin
        PendingMovingElement
        MovingElement
        PendingDrawWire
        DrawingWire
        PendingDeleteWire
        DeletingWire
    End Enum

    Public WithEvents picMain As PictureBox
    Public Parent As frmMain
    Public WithEvents Elements As MyList(Of Element)
    Public Origin As New Point(0, 0)

    Private _selectedId As Integer = -1
    Private _image As Bitmap, _g As Graphics
    Private _state As PanelState

    Public Sub New(frm As frmMain, elements As MyList(Of Element))
        Me.Elements = elements
        Parent = frm
        picMain = frm.picMain

        Resize()

        ResetOrigin()
    End Sub

    Public Sub Resize()
        If picMain.Width > 0 AndAlso picMain.Height > 0 Then
            _image = New Bitmap(picMain.Width, picMain.Height)
            _g = Graphics.FromImage(_image)
            _g.SmoothingMode = Drawing2D.SmoothingMode.HighQuality
            picMain.Image = _image
        End If
    End Sub

    Public Sub ResetOrigin()
        Origin.X = _image.Size.Width / 2
        Origin.Y = _image.Size.Height / 2
    End Sub

    Private Sub OnListChanged(sender As Object, e As ChangedEventArgs(Of Element)) Handles Elements.Changed
        Select Case e.Type
            Case ChangedType.AddOrInsert
                Utilities.Info(""ElementsPanel: On add element, updating"")
                OnAddElement(e.Item)
            Case ChangedType.Remove
                Utilities.Info(""ElementsPanel: On remove element, updating"")
                OnRemoveElement(e.Item)
        End Select
    End Sub

    Private Sub OnAddElement(e As Element)
        e.UpdateProperties()
        UpdateConnections(e)
    End Sub

    Private Sub OnRemoveElement(e As Element)
        e.RemoveConnections()
    End Sub

    Private Sub InternalRender()
        'Utilities.Info(""Origin: "" + Origin.ToString())

        Dim state = _g.Save()

        _g.TranslateTransform(Origin.X, Origin.Y)
        _g.Clear(Color.White)

        '坐标轴
        _g.DrawLine(Pens.Gray, -10, 0, 10, 0)
        _g.DrawLine(Pens.Gray, 0, -10, 0, 10)

        '元件
        For i = 0 To Elements.Count - 1
            Dim element = Elements(i)
            If Not MyMath.IsCoincide(ViewableBoundary, element.Boundary) Then
                Continue For
            End If
            element.Draw(_g)
            For Each c In element.Connectors
                RenderConnection(c)
            Next
            If i = _selectedId Then
                element.DrawBoundary(_g)
            End If
        Next

        '正在绘制的导线
        If _path.Count >= 2 Then
            _g.DrawLines(Pens.Black, _path.ToArray())
        End If

        _g.Restore(state)
    End Sub

    Private Sub RenderConnection(a As Connector)
        If a.To Is Nothing Then
            Return
        End If
        Dim locationA = a.Location + a.Owner.Location
        Dim locationTo = a.To.Location + a.To.Owner.Location

        _g.DrawLine(Pens.Yellow, locationA, locationTo)
    End Sub

    Public Sub Render()
        InternalRender()
        picMain.Refresh()
    End Sub

    Public Sub StartDrawWire()
        _state = PanelState.PendingDrawWire
    End Sub

#Region ""UI""
    Private Sub onDoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles picMain.DoubleClick
        Utilities.Info(""Double Click"")
        If _selectedId >= 0 Then
            Try
                If Elements(_selectedId).Rotation = Element.RotationAngle.D270 Then
                    Elements(_selectedId).Rotation = Element.RotationAngle.D0
                Else
                    Elements(_selectedId).Rotation += 1
                End If
                UpdateConnections(Elements(_selectedId))
            Catch ex As NotImplementedException

            End Try
        End If
    End Sub

    ''' <summary>
    ''' 旧的坐标, 原点则相对与picMain, 元件则相对于原点
    ''' </summary>
    ''' <remarks></remarks>
    Private _oldObjectLocation As Point

    ''' <summary>
    ''' 按下鼠标时的坐标, 相对于picMain
    ''' </summary>
    ''' <remarks></remarks>
    Private _downMouseLocation As Point

    ''' <summary>
    ''' 画导线的路径, 坐标相对于原点
    ''' </summary>
    ''' <remarks></remarks>
    Private _path As New List(Of Point)

    Private Sub [Select](id As Integer)
        If id < 0 Then
            _selectedId = -1
            _oldObjectLocation = Origin
        Else
            _selectedId = id
            _oldObjectLocation = Elements(_selectedId).Location
            Parent.PropertyGrid1.SelectedObject = Elements(_selectedId)
        End If
    End Sub

    Private Sub onMouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles picMain.MouseDown
        Utilities.Info(""Mouse down"")

        Dim p = ToRelative(e.Location)
        _downMouseLocation = e.Location

        If _state = PanelState.None Then
            Utilities.Info(""State is none"")

            Dim ids As New List(Of Integer)

            For i = 0 To Elements.Count - 1
              ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",pXt-gl
code,"﻿Imports System.Windows.Forms
Imports DWSIM.Interfaces.Enums.GraphicObjects
Imports DWSIM.SharedClasses.UnitOperations
Imports su = DWSIM.SharedClasses.SystemsOfUnits
Imports DWSIM.UnitOperations.UnitOperations

Public Class EditingForm_FlowsheetUO

    Inherits SharedClasses.ObjectEditorForm

    Public Property SimObject As UnitOperations.Flowsheet

    Public Loaded As Boolean = False

    Dim units As SharedClasses.SystemsOfUnits.Units
    Dim nf As String

    Private Sub EditingForm_HeaterCooler_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Me.ShowHint = GlobalSettings.Settings.DefaultEditFormLocation

         UpdateInfo()

    End Sub

    Sub UpdateInfo()

        units = SimObject.FlowSheet.FlowsheetOptions.SelectedUnitSystem
        nf = SimObject.FlowSheet.FlowsheetOptions.NumberFormat

        Loaded = False

        With SimObject

            'first block

            chkActive.Checked = .GraphicObject.Active

            Me.Text = .GraphicObject.Tag & "" ("" & .GetDisplayName() & "")""

            lblTag.Text = .GraphicObject.Tag
            If .Calculated Then
                lblStatus.Text = .FlowSheet.GetTranslatedString(""Calculado"") & "" ("" & .LastUpdated.ToString & "")""
                lblStatus.ForeColor = System.Drawing.Color.Blue
            Else
                If Not .GraphicObject.Active Then
                    lblStatus.Text = .FlowSheet.GetTranslatedString(""Inativo"")
                    lblStatus.ForeColor = System.Drawing.Color.Gray
                ElseIf .ErrorMessage <> """" Then
                    If .ErrorMessage.Length > 50 Then
                        lblStatus.Text = .FlowSheet.GetTranslatedString(""Erro"") & "" ("" & .ErrorMessage.Substring(50) & ""...)""
                    Else
                        lblStatus.Text = .FlowSheet.GetTranslatedString(""Erro"") & "" ("" & .ErrorMessage & "")""
                    End If
                    lblStatus.ForeColor = System.Drawing.Color.Red
                Else
                    lblStatus.Text = .FlowSheet.GetTranslatedString(""NoCalculado"")
                    lblStatus.ForeColor = System.Drawing.Color.Black
                End If
            End If

            lblConnectedTo.Text = """"

            If .IsSpecAttached Then lblConnectedTo.Text = .FlowSheet.SimulationObjects(.AttachedSpecId).GraphicObject.Tag
            If .IsAdjustAttached Then lblConnectedTo.Text = .FlowSheet.SimulationObjects(.AttachedAdjustId).GraphicObject.Tag

            'connections

            Dim mslist As String() = .FlowSheet.GraphicObjects.Values.Where(Function(x) x.ObjectType = ObjectType.MaterialStream).Select(Function(m) m.Tag).ToArray

            cbInlet1.Items.Clear()
            cbInlet1.Items.AddRange(mslist)
            cbInlet2.Items.Clear()
            cbInlet2.Items.AddRange(mslist)
            cbInlet3.Items.Clear()
            cbInlet3.Items.AddRange(mslist)
            cbInlet4.Items.Clear()
            cbInlet4.Items.AddRange(mslist)
            cbInlet5.Items.Clear()
            cbInlet5.Items.AddRange(mslist)
            cbInlet6.Items.Clear()
            cbInlet6.Items.AddRange(mslist)
            cbInlet7.Items.Clear()
            cbInlet7.Items.AddRange(mslist)
            cbInlet8.Items.Clear()
            cbInlet8.Items.AddRange(mslist)
            cbInlet9.Items.Clear()
            cbInlet9.Items.AddRange(mslist)
            cbInlet10.Items.Clear()
            cbInlet10.Items.AddRange(mslist)

            cbOutlet1.Items.Clear()
            cbOutlet1.Items.AddRange(mslist)
            cbOutlet2.Items.Clear()
            cbOutlet2.Items.AddRange(mslist)
            cbOutlet3.Items.Clear()
            cbOutlet3.Items.AddRange(mslist)
            cbOutlet4.Items.Clear()
            cbOutlet4.Items.AddRange(mslist)
            cbOutlet5.Items.Clear()
            cbOutlet5.Items.AddRange(mslist)
            cbOutlet6.Items.Clear()
            cbOutlet6.Items.AddRange(mslist)
            cbOutlet7.Items.Clear()
            cbOutlet7.Items.AddRange(mslist)
            cbOutlet8.Items.Clear()
            cbOutlet8.Items.AddRange(mslist)
            cbOutlet9.Items.Clear()
            cbOutlet9.Items.AddRange(mslist)
            cbOutlet10.Items.Clear()
            cbOutlet10.Items.AddRange(mslist)

            If .GraphicObject.InputConnectors(0).IsAttached Then cbInlet1.SelectedItem = .GraphicObject.InputConnectors(0).AttachedConnector.AttachedFrom.Tag
            If .GraphicObject.InputConnectors(1).IsAttached Then cbInlet2.SelectedItem = .GraphicObject.InputConnectors(1).AttachedConnector.AttachedFrom.Tag
            If .GraphicObject.InputConnectors(2).IsAttached Then cbInlet3.SelectedItem = .GraphicObject.InputConnectors(2).AttachedConnector.AttachedFrom.Tag
            If .GraphicObject.InputConnectors(3).IsAttached Then cbInlet4.SelectedItem = .GraphicObject.InputConnectors(3).AttachedConnector.AttachedFrom.Tag
            If .GraphicObject.InputConnectors(4).IsAttached Then cbInlet5.SelectedItem = .GraphicObject.InputCo",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HY6hk3
code,"﻿' R- Instat
' Copyright (C) 2015-2017
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License 
' along with this program.  If not, see <http://www.gnu.org/licenses/>.

Imports instat.Translations
Public Class dlgAnonymiseIDColumn
    Public bFirstLoad As Boolean = True
    Private bReset As Boolean = True

    Private clsHashFunction As New RFunction
    Private Sub dlgAnonymiseIDColumn_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        If bFirstLoad Then
            InitialiseDialog()
            bFirstLoad = False
        End If
        If bReset Then
            SetDefaults()
        End If
        SetRCodeForControls(bReset)
        bReset = False
        autoTranslate(Me)
        TestOKEnabled()
    End Sub

    Private Sub InitialiseDialog()
        ucrBase.iHelpTopicID = 552
        Dim dctAlgorithm As New Dictionary(Of String, String)
        ucrReceiverIDColumn.Selector = ucrSelectorAnonymiseIDColumn
        ucrSelectorAnonymiseIDColumn.bUseCurrentFilter = False

        ucrReceiverIDColumn.SetParameter(New RParameter(""x"", 0))
        ucrReceiverIDColumn.SetParameterIsRFunction()

        ucrInputTextSalt.SetParameter(New RParameter(""salt"", 1))

        ucrInputAlgorithm.SetParameter(New RParameter(""algo"", 1))
        dctAlgorithm.Add(""crc32"", Chr(34) & ""crc32"" & Chr(34))
        dctAlgorithm.Add(""md5"", Chr(34) & ""md5"" & Chr(34))
        dctAlgorithm.Add(""sha1"", Chr(34) & ""sha1"" & Chr(34))
        dctAlgorithm.Add(""sha256"", Chr(34) & ""sha256"" & Chr(34))
        dctAlgorithm.Add(""sha512"", Chr(34) & ""sha512"" & Chr(34))
        dctAlgorithm.Add(""xxhash32"", Chr(34) & ""xxhash32"" & Chr(34))
        dctAlgorithm.Add(""xxhash64"", Chr(34) & ""xxhash64"" & Chr(34))
        dctAlgorithm.Add(""murmur32"", Chr(34) & ""murmur32"" & Chr(34))
        ucrInputAlgorithm.SetItems(dctAlgorithm)
        ucrInputAlgorithm.SetDropDownStyleAsNonEditable()

        ucrSaveAnonymisedColumn.SetPrefix(""Hash"")
        ucrSaveAnonymisedColumn.SetSaveTypeAsColumn()
        ucrSaveAnonymisedColumn.SetDataFrameSelector(ucrSelectorAnonymiseIDColumn.ucrAvailableDataFrames)
        ucrSaveAnonymisedColumn.SetIsTextBox()
        ucrSaveAnonymisedColumn.SetLabelText(""Column Name:"")
    End Sub

    Private Sub SetDefaults()
        clsHashFunction = New RFunction

        ucrReceiverIDColumn.SetMeAsReceiver()
        ucrSelectorAnonymiseIDColumn.Reset()
        ucrSaveAnonymisedColumn.Reset()

        clsHashFunction.SetRCommand(""hashed_id"")
        clsHashFunction.AddParameter(""algo"", Chr(34) & ""crc32"" & Chr(34), iPosition:=2)

        ucrBase.clsRsyntax.SetBaseRFunction(clsHashFunction)
    End Sub

    Private Sub SetRCodeForControls(bReset As Boolean)
        SetRCode(Me, ucrBase.clsRsyntax.clsBaseFunction, bReset)
    End Sub

    Private Sub ucrBase_ClickReset(sender As Object, e As EventArgs) Handles ucrBase.ClickReset
        SetDefaults()
        SetRCodeForControls(True)
        TestOKEnabled()
    End Sub

    Private Sub TestOKEnabled()
        If Not ucrReceiverIDColumn.IsEmpty AndAlso ucrSaveAnonymisedColumn.IsComplete Then
            ucrBase.OKEnabled(True)
        Else
            ucrBase.OKEnabled(False)
        End If
    End Sub

    Private Sub ucrReceiverIDColumn_ControlContentsChanged(ucrChangedControl As ucrCore) Handles ucrReceiverIDColumn.ControlContentsChanged, ucrSaveAnonymisedColumn.ControlContentsChanged
        TestOKEnabled()
    End Sub
End Class",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sKyrPh
code,"﻿'-------------------------------------------------------------------------------------------'
' Inicio del codigo
'-------------------------------------------------------------------------------------------'
' Importando librerias 
'-------------------------------------------------------------------------------------------'
Imports System.Data

'-------------------------------------------------------------------------------------------'
' Inicio de clase ""fFechas_Seguimientos_Compras""
'-------------------------------------------------------------------------------------------'
Partial Class fFechas_Seguimientos_Compras
    Inherits vis2Formularios.frmReporte

    Dim loObjetoReporte As CrystalDecisions.CrystalReports.Engine.ReportDocument

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        Try

            Dim loComandoSeleccionar As New StringBuilder()
            
            loComandoSeleccionar.AppendLine("" "")	
			loComandoSeleccionar.AppendLine("" SELECT CAST(Compras.Seg_Adm as XML) AS seguimiento INTO #xmlData from Compras"")
            loComandoSeleccionar.AppendLine("" WHERE "" & cusAplicacion.goFormatos.pcCondicionPrincipal)
			loComandoSeleccionar.AppendLine("" "")	
            
            loComandoSeleccionar.AppendLine("" SELECT    '1' AS Tabla, "")
            loComandoSeleccionar.AppendLine(""		    Compras.Cod_Pro, "")
            loComandoSeleccionar.AppendLine(""           (CASE WHEN (Proveedores.Generico = 0 AND Compras.Nom_Pro = '') THEN Proveedores.Nom_Pro ELSE "")
            loComandoSeleccionar.AppendLine(""               (CASE WHEN (Compras.Nom_Pro = '') THEN Proveedores.Nom_Pro ELSE Compras.Nom_Pro END) END) AS  Nom_Pro, "")
            loComandoSeleccionar.AppendLine(""           (CASE WHEN (Proveedores.Generico = 0 AND Compras.Nom_Pro = '') THEN Proveedores.Rif ELSE "")
            loComandoSeleccionar.AppendLine(""               (CASE WHEN (Compras.Rif = '') THEN Proveedores.Rif ELSE Compras.Rif END) END) AS  Rif, "")
            loComandoSeleccionar.AppendLine(""           Proveedores.Nit, "")
            loComandoSeleccionar.AppendLine(""           (CASE WHEN (Proveedores.Generico = 0 AND Compras.Nom_Pro = '') THEN SUBSTRING(Proveedores.Dir_Fis,1, 200) ELSE "")
            loComandoSeleccionar.AppendLine(""               (CASE WHEN (SUBSTRING(Compras.Dir_Fis,1, 200) = '') THEN SUBSTRING(Proveedores.Dir_Fis,1, 200) ELSE SUBSTRING(Compras.Dir_Fis,1, 200) END) END) AS  Dir_Fis, "")
            loComandoSeleccionar.AppendLine(""           (CASE WHEN (Proveedores.Generico = 0 AND Compras.Nom_Pro = '') THEN Proveedores.Telefonos ELSE "")
            loComandoSeleccionar.AppendLine(""               (CASE WHEN (Compras.Telefonos = '') THEN Proveedores.Telefonos ELSE Compras.Telefonos END) END) AS  Telefonos, "")
            loComandoSeleccionar.AppendLine(""           Proveedores.Fax, "")
            loComandoSeleccionar.AppendLine(""           Compras.Documento, "")
            loComandoSeleccionar.AppendLine(""           Compras.Factura, "")
            loComandoSeleccionar.AppendLine(""           Compras.Control, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Ini, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Fin, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Reg, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Pag, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Rec, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fec_Doc, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fecha1, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fecha2, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fecha3, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fecha4, "")
            loComandoSeleccionar.AppendLine(""           Compras.Fecha5, "")
            loComandoSeleccionar.AppendLine(""           Compras.Comentario, "")
            loComandoSeleccionar.AppendLine(""           Formas_Pagos.Nom_For, "")
            loComandoSeleccionar.AppendLine(""           Compras.Cod_Ven, "")
            loComandoSeleccionar.AppendLine(""           Vendedores.Nom_Ven, "")
			loComandoSeleccionar.AppendLine("" 			NULL as se_renglon,"")	
			loComandoSeleccionar.AppendLine("" 			NULL as se_fecha,"")	
			loComandoSeleccionar.AppendLine("" 			NULL as se_contacto,"")	
			loComandoSeleccionar.AppendLine("" 			NULL as se_accion,"")
			loComandoSeleccionar.AppendLine("" 			NULL as se_medio,"")
			loComandoSeleccionar.AppendLine("" 			NULL as se_comentario,"")
			loComandoSeleccionar.AppendLine("" 			NULL as se_prioridad,"")
			loComandoSeleccionar.AppendLine("" 			NULL as se_etapa,"")
			loComandoSeleccionar.AppendLine("" 			NULL as se_usuario"")
			loComandoSeleccionar.AppendLine("" FROM      Compras "")
            loComandoSeleccionar.AppendLine("" JOIN Proveedores ON (Compras.Cod_Pro  =   Proveedores.Cod_Pro) "")
            loComandoSeleccionar.AppendLine("" JOIN Formas_Pagos ON (Compras.Cod_For =   Formas_Pagos.Cod_For) "")
            l",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",OEXHjD
code,"﻿'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'' Author: Christopher Diekkamp
'' Email: christopher@development.diekkamp.de
'' GitHub: https://github.com/mcdikki
'' 
'' This software is licensed under the 
'' GNU General Public License Version 3 (GPLv3).
'' See http://www.gnu.org/licenses/gpl-3.0-standalone.html 
'' for a copy of the license.
''
'' You are free to copy, use and modify this software.
'' Please let me know of any changes and improvements you made to it.
''
'' Thank you!
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Public Class RemoveCommand
    Inherits AbstractCommand

    Public Sub New()
        MyBase.New(""REMOVE"", ""Removes a consumer from a given channel"")
        InitParameter()
    End Sub

    Public Sub New(ByVal channel As Integer, ByVal consumer As String, Optional ByVal parameter() As String = Nothing)
        MyBase.New(""REMOVE"", ""Removes a comsumer from a given channel"")
        InitParameter()
        setChannel(channel)
        setConsumer(consumer)
        If parameter IsNot Nothing Then setParamter(parameter)
    End Sub

    Private Sub InitParameter()
        addCommandParameter(New ChannelParameter)
        addCommandParameter(New CommandParameter(Of String)(""consumer"", ""The consumer to add to the channel i.e. SCREEN or FILE."", """", False))
        addCommandParameter(New CommandParameter(Of String())(""parameter"", ""The paramter list"", {}, True))
    End Sub

    Public Overrides Function getCommandString() As String
        checkParameter()
        Dim cmd As String = ""REMOVE "" & getDestination() & "" "" & getConsumer()
        If getCommandParameter(""parameter"").isSet AndAlso getParameter() IsNot Nothing AndAlso getParameter().Length > 0 Then
            For Each p In getParameter()
                cmd = cmd & "" "" & p
            Next
        End If
        Return cmd
    End Function

    Public Sub setChannel(ByVal channel As Integer)
        If channel > 0 Then
            DirectCast(getCommandParameter(""channel""), CommandParameter(Of Integer)).setValue(channel)
        Else
            Throw New ArgumentException(""Illegal argument channel="" & channel & "". The parameter channel has to be greater than 0."")
        End If
    End Sub

    Public Function getChannel() As Integer
        Dim param As CommandParameter(Of Integer) = DirectCast(getCommandParameter(""channel""), CommandParameter(Of Integer))
        If param IsNot Nothing And param.isSet Then
            Return param.getValue
        Else
            Return param.getDefault
        End If
    End Function

    Public Sub setConsumer(ByVal consumer As String)
        If consumer IsNot Nothing Then
            DirectCast(getCommandParameter(""consumer""), CommandParameter(Of String)).setValue(consumer)
        End If
    End Sub

    Public Function getConsumer() As String
        Dim param As CommandParameter(Of String) = DirectCast(getCommandParameter(""consumer""), CommandParameter(Of String))
        If param IsNot Nothing And param.isSet Then
            Return param.getValue
        Else
            Return param.getDefault
        End If
    End Function

    Public Sub setParamter(ByVal parameter As String())
        If parameter IsNot Nothing Then
            DirectCast(getCommandParameter(""parameter""), CommandParameter(Of String())).setValue(parameter)
        End If
    End Sub

    Public Function getParameter() As String()
        Dim param As CommandParameter(Of String()) = DirectCast(getCommandParameter(""parameter""), CommandParameter(Of String()))
        If param IsNot Nothing And param.isSet Then
            Return param.getValue
        Else
            Return param.getDefault
        End If
    End Function

    Public Overrides Function getRequiredVersion() As Integer()
        Return {1}
    End Function

    Public Overrides Function getMaxAllowedVersion() As Integer()
        Return {Integer.MaxValue}
    End Function
End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",XSLhtt
code,"﻿Public Class ParamRepVentas
    Inherits System.Web.UI.Page

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Me.Page.IsPostBack = False Then
            Me.RadDatePicker1.SelectedDate = Date.Parse(""01/"" + Session(""Mes"").ToString + ""/"" + Session(""Anio"").ToString)
            Me.RadDatePicker2.SelectedDate = Date.Parse(Session(""Fecha""))
        End If
    End Sub

    Protected Sub ImageButton1_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles ImageButton1.Click
        Dim cadena_java As String
        cadena_java = ""<script type='text/javascript'> "" & _
                                     "" window.open('ReporteVentas.aspx?fechaInicio="" + Me.RadDatePicker1.SelectedDate.ToString + ""&fechaFin="" + Me.RadDatePicker2.SelectedDate.ToString + ""' ); "" & _
                                     Chr(60) & ""/script>""
        ScriptManager.RegisterStartupScript(Page, GetType(Page), ""Cerrar"", cadena_java.ToString, False)
    End Sub
End Class",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",xVO6ve
code,"﻿#Region ""Microsoft.VisualBasic::88e53259da40d309d839b3e56afbc793, data\MicrobesOnline\MySQL\glamm\glammreaction.vb""

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:

    ' Class glammreaction
    ' 
    '     Properties: created, definition, deltaG, equation, guid
    '                 normalizedEquation, priority, version
    ' 
    '     Function: GetDeleteSQL, GetInsertSQL, GetReplaceSQL, GetUpdateSQL
    ' 
    ' 
    ' /********************************************************************************/

#End Region

REM  Oracle.LinuxCompatibility.MySQL.CodeGenerator
REM  MYSQL Schema Mapper
REM      for Microsoft VisualBasic.NET 

REM  Dump @12/3/2015 8:22:12 PM


Imports Oracle.LinuxCompatibility.MySQL.Reflection.DbAttributes

Namespace MySQL.glamm

''' <summary>
''' 
''' --
''' 
''' DROP TABLE IF EXISTS `glammreaction`;
''' /*!40101 SET @saved_cs_client     = @@character_set_client */;
''' /*!40101 SET character_set_client = utf8 */;
''' CREATE TABLE `glammreaction` (
'''   `guid` bigint(10) unsigned NOT NULL,
'''   `version` int(2) unsigned NOT NULL DEFAULT '1',
'''   `priority` tinyint(3) unsigned DEFAULT NULL,
'''   `created` date DEFAULT NULL,
'''   `deltaG` float DEFAULT NULL,
'''   `equation` text NOT NULL,
'''   `normalizedEquation` text NOT NULL,
'''   `definition` text NOT NULL,
'''   PRIMARY KEY (`guid`)
''' ) ENGINE=MyISAM DEFAULT CHARSET=latin1;
''' /*!40101 SET character_set_client = @saved_cs_client */;
''' 
''' --
''' 
''' </summary>
''' <remarks></remarks>
<Oracle.LinuxCompatibility.MySQL.Reflection.DbAttributes.TableName(""glammreaction"", Database:=""glamm"")>
Public Class glammreaction: Inherits Oracle.LinuxCompatibility.MySQL.SQLTable
#Region ""Public Property Mapping To Database Fields""
    <DatabaseField(""guid""), PrimaryKey, NotNull, DataType(MySqlDbType.Int64, ""10"")> Public Property guid As Long
    <DatabaseField(""version""), NotNull, DataType(MySqlDbType.Int64, ""2"")> Public Property version As Long
    <DatabaseField(""priority""), DataType(MySqlDbType.Int64, ""3"")> Public Property priority As Long
    <DatabaseField(""created""), DataType(MySqlDbType.DateTime)> Public Property created As Date
    <DatabaseField(""deltaG""), DataType(MySqlDbType.Double)> Public Property deltaG As Double
    <DatabaseField(""equation""), NotNull, DataType(MySqlDbType.Text)> Public Property equation As String
    <DatabaseField(""normalizedEquation""), NotNull, DataType(MySqlDbType.Text)> Public Property normalizedEquation As String
    <DatabaseField(""definition""), NotNull, DataType(MySqlDbType.Text)> Public Property definition As String
#End Region
#Region ""Public SQL Interface""
#Region ""Interface SQL""
    Private Shared ReadOnly INSERT_SQL As String = <SQL>INSERT INTO `glammreaction` (`guid`, `version`, `priority`, `created`, `deltaG`, `equation`, `normalizedEquation`, `definition`) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}', '{5}', '{6}', '{7}');</SQL>
    Private Shared ReadOnly REPLACE_SQL As String = <SQL>REPLACE INTO `glammreaction` (`guid`, `version`, `priority`, `created`, `deltaG`, `equation`, `normalizedEquation`, `definition`) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}', '{5}', '{6}', '{7}');</SQL>
    Private Shared ReadOnly DELETE_SQL As String = <SQL>DELETE FROM `glammreaction` WHERE `guid` = '{0}';</SQL>
    Private Shared ReadOnly UPDATE_SQL As String = <SQL>UPDATE `glammreaction` SET `guid`='{0}', `version`='{1}', `priority`='{2}', `created`='{3}', `deltaG`='{4}', `equation`='{5}', `normalizedEquation`='{6}', `definition`='{7}' WHERE `guid` = '{8}';</SQL>
#End Region
    Public Overrides Function GetDeleteSQL() As String
        Return String.Format(DELETE_SQL, guid)
    End Function
    Public Overrides Function GetInsertSQL() As String
        Return String.Format(INSERT_SQL, guid, version, priority, DataType.ToMySqlDateTimeString(created), deltaG, equation, normalizedEquation, definition)
    End Function
    Public Overrides Function GetReplaceSQL() As String
        Return String.Format(REPLACE_SQL, guid, versi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",wscxmK
code,"' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Threading
Imports Microsoft.CodeAnalysis.Editor.Implementation.Highlighting
Imports Microsoft.CodeAnalysis.Text
Imports Microsoft.CodeAnalysis.VisualBasic.Syntax

Namespace Microsoft.CodeAnalysis.Editor.VisualBasic.KeywordHighlighting
    <ExportHighlighter(LanguageNames.VisualBasic)>
    Friend Class TryBlockHighlighter
        Inherits AbstractKeywordHighlighter(Of SyntaxNode)

        Protected Overloads Overrides Function GetHighlights(node As SyntaxNode, cancellationToken As CancellationToken) As IEnumerable(Of TextSpan)
            If TypeOf node Is ExitStatementSyntax AndAlso node.Kind <> SyntaxKind.ExitTryStatement Then
                Return SpecializedCollections.EmptyEnumerable(Of TextSpan)()
            End If

            Dim tryBlock = node.GetAncestor(Of TryBlockSyntax)()
            If tryBlock Is Nothing Then
                Return SpecializedCollections.EmptyEnumerable(Of TextSpan)()
            End If

            Dim highlights As New List(Of TextSpan)

            With tryBlock
                highlights.Add(.TryStatement.TryKeyword.Span)

                HighlightRelatedStatements(tryBlock, highlights)

                For Each catchBlock In .CatchBlocks
                    With catchBlock.CatchStatement
                        highlights.Add(.CatchKeyword.Span)

                        If .WhenClause IsNot Nothing Then
                            highlights.Add(.WhenClause.WhenKeyword.Span)
                        End If
                    End With
                    HighlightRelatedStatements(catchBlock, highlights)
                Next

                If .FinallyBlock IsNot Nothing Then
                    highlights.Add(.FinallyBlock.FinallyStatement.FinallyKeyword.Span)
                End If

                highlights.Add(.EndTryStatement.Span)

                Return highlights
            End With
        End Function

        Private Sub HighlightRelatedStatements(node As SyntaxNode, highlights As List(Of TextSpan))
            If node.Kind = SyntaxKind.ExitTryStatement Then
                highlights.Add(node.Span)
            Else
                For Each childNodeOrToken In node.ChildNodesAndTokens()
                    If childNodeOrToken.IsToken Then
                        Continue For
                    End If

                    Dim child = childNodeOrToken.AsNode()
                    If Not TypeOf child Is TryBlockSyntax AndAlso Not TypeOf child Is LambdaExpressionSyntax Then
                        HighlightRelatedStatements(child, highlights)
                    End If
                Next
            End If
        End Sub
    End Class
End Namespace
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",bkVM2y
code,"﻿<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _
Partial Class AboutBox1
    Inherits System.Windows.Forms.Form

    'Form overrides dispose to clean up the component list.
    <System.Diagnostics.DebuggerNonUserCode()> _
    Protected Overrides Sub Dispose(ByVal disposing As Boolean)
        Try
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
        Finally
            MyBase.Dispose(disposing)
        End Try
    End Sub

    Friend WithEvents TableLayoutPanel As System.Windows.Forms.TableLayoutPanel
    Friend WithEvents LabelProductName As System.Windows.Forms.Label
    Friend WithEvents LabelVersion As System.Windows.Forms.Label
    Friend WithEvents LabelCompanyName As System.Windows.Forms.Label
    Friend WithEvents TextBoxDescription As System.Windows.Forms.TextBox
    Friend WithEvents OKButton As System.Windows.Forms.Button
    Friend WithEvents LabelCopyright As System.Windows.Forms.Label

    'Required by the Windows Form Designer
    Private components As System.ComponentModel.IContainer

    'NOTE: The following procedure is required by the Windows Form Designer
    'It can be modified using the Windows Form Designer.  
    'Do not modify it using the code editor.
    <System.Diagnostics.DebuggerStepThrough()> _
    Private Sub InitializeComponent()
        Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(AboutBox1))
        Me.TableLayoutPanel = New System.Windows.Forms.TableLayoutPanel()
        Me.LabelProductName = New System.Windows.Forms.Label()
        Me.LabelVersion = New System.Windows.Forms.Label()
        Me.LabelCopyright = New System.Windows.Forms.Label()
        Me.LabelCompanyName = New System.Windows.Forms.Label()
        Me.TextBoxDescription = New System.Windows.Forms.TextBox()
        Me.OKButton = New System.Windows.Forms.Button()
        Me.TableLayoutPanel.SuspendLayout()
        Me.SuspendLayout()
        '
        'TableLayoutPanel
        '
        Me.TableLayoutPanel.ColumnCount = 2
        Me.TableLayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 33.0!))
        Me.TableLayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 67.0!))
        Me.TableLayoutPanel.Controls.Add(Me.LabelProductName, 1, 0)
        Me.TableLayoutPanel.Controls.Add(Me.LabelVersion, 1, 1)
        Me.TableLayoutPanel.Controls.Add(Me.LabelCopyright, 1, 2)
        Me.TableLayoutPanel.Controls.Add(Me.LabelCompanyName, 1, 3)
        Me.TableLayoutPanel.Controls.Add(Me.TextBoxDescription, 1, 4)
        Me.TableLayoutPanel.Controls.Add(Me.OKButton, 1, 5)
        Me.TableLayoutPanel.Dock = System.Windows.Forms.DockStyle.Fill
        Me.TableLayoutPanel.Location = New System.Drawing.Point(9, 9)
        Me.TableLayoutPanel.Name = ""TableLayoutPanel""
        Me.TableLayoutPanel.RowCount = 6
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 10.0!))
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 10.0!))
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 10.0!))
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 10.0!))
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 50.0!))
        Me.TableLayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 10.0!))
        Me.TableLayoutPanel.Size = New System.Drawing.Size(396, 258)
        Me.TableLayoutPanel.TabIndex = 0
        '
        'LabelProductName
        '
        Me.LabelProductName.Dock = System.Windows.Forms.DockStyle.Fill
        Me.LabelProductName.Location = New System.Drawing.Point(136, 0)
        Me.LabelProductName.Margin = New System.Windows.Forms.Padding(6, 0, 3, 0)
        Me.LabelProductName.MaximumSize = New System.Drawing.Size(0, 17)
        Me.LabelProductName.Name = ""LabelProductName""
        Me.LabelProductName.Size = New System.Drawing.Size(257, 17)
        Me.LabelProductName.TabIndex = 0
        Me.LabelProductName.Text = ""Product Name""
        Me.LabelProductName.TextAlign = System.Drawing.ContentAlignment.MiddleLeft
        '
        'LabelVersion
        '
        Me.LabelVersion.Dock = System.Windows.Forms.DockStyle.Fill
        Me.LabelVersion.Location = New System.Drawing.Point(136, 25)
        Me.LabelVersion.Margin = New System.Windows.Forms.Padding(6, 0, 3, 0)
        Me.LabelVersion.MaximumSize = New System.Drawing.Size(0, 17)
        Me.LabelVersion.Name = ""LabelVersion""
        Me.LabelVersion.Size = New System.Drawing.Size(257, 17)
        Me.LabelVersion.TabIndex = 0
        Me.LabelVersion.Text = ""Version""
        Me.La",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",FaK5oA
code,"Namespace UI
    <Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()>
    Partial Class CriteriaItemControl
        Inherits UserControl

        'UserControl overrides dispose to clean up the component list.
        <System.Diagnostics.DebuggerNonUserCode()>
        Protected Overrides Sub dispose(disposing As Boolean)
            If disposing AndAlso components IsNot Nothing Then
                components.Dispose()
            End If
            MyBase.Dispose(disposing)
        End Sub

        'Required by the Windows Form Designer
        Private components As System.ComponentModel.IContainer

        'NOTE: The following procedure is required by the Windows Form Designer
        'It can be modified using the Windows Form Designer.  
        'Do not modify it using the code editor.
        <System.Diagnostics.DebuggerStepThrough()>
        Private Sub InitializeComponent()
            Me.components = New System.ComponentModel.Container()
            Dim resources As System.ComponentModel.ComponentResourceManager = New System.ComponentModel.ComponentResourceManager(GetType(CriteriaItemControl))
            Me.LayoutPanel = New System.Windows.Forms.TableLayoutPanel()
            Me.mbProperties = New StaxRip.UI.MenuButton()
            Me.bnRemove = New System.Windows.Forms.Button()
            Me.te = New StaxRip.UI.TextEdit()
            Me.mbCondition = New StaxRip.UI.MenuButton()
            Me.LayoutPanel.SuspendLayout()
            Me.SuspendLayout()
            '
            'LayoutPanel
            '
            Me.LayoutPanel.AutoSize = True
            Me.LayoutPanel.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
            Me.LayoutPanel.ColumnCount = 4
            Me.LayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 40.0!))
            Me.LayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 30.0!))
            Me.LayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 30.0!))
            Me.LayoutPanel.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle())
            Me.LayoutPanel.Controls.Add(Me.mbProperties, 0, 0)
            Me.LayoutPanel.Controls.Add(Me.bnRemove, 3, 0)
            Me.LayoutPanel.Controls.Add(Me.mbCondition, 1, 0)
            Me.LayoutPanel.Controls.Add(Me.te, 2, 0)
            Me.LayoutPanel.Dock = System.Windows.Forms.DockStyle.Fill
            Me.LayoutPanel.Location = New System.Drawing.Point(0, 0)
            Me.LayoutPanel.Name = ""LayoutPanel""
            Me.LayoutPanel.RowCount = 1
            Me.LayoutPanel.RowStyles.Add(New System.Windows.Forms.RowStyle())
            Me.LayoutPanel.Size = New System.Drawing.Size(911, 175)
            Me.LayoutPanel.TabIndex = 0
            '
            'mbProperties
            '
            Me.mbProperties.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.mbProperties.Location = New System.Drawing.Point(3, 70)
            Me.mbProperties.ShowMenuSymbol = True
            Me.mbProperties.Size = New System.Drawing.Size(292, 35)
            '
            'bnRemove
            '
            Me.bnRemove.Anchor = System.Windows.Forms.AnchorStyles.None
            Me.bnRemove.AutoSize = True
            Me.bnRemove.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink
            Me.bnRemove.Location = New System.Drawing.Point(749, 58)
            Me.bnRemove.Name = ""bnRemove""
            Me.bnRemove.Size = New System.Drawing.Size(158, 58)
            Me.bnRemove.TabIndex = 3
            Me.bnRemove.Text = ""Remove""
            Me.bnRemove.UseVisualStyleBackColor = True
            '
            'te
            '
            Me.te.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.te.Location = New System.Drawing.Point(525, 70)
            Me.te.Name = ""te""
            Me.te.Size = New System.Drawing.Size(218, 35)
            Me.te.TabIndex = 4
            '
            'mbCondition
            '
            Me.mbCondition.Anchor = CType((System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right), System.Windows.Forms.AnchorStyles)
            Me.mbCondition.Location = New System.Drawing.Point(301, 70)
            Me.mbCondition.ShowMenuSymbol = True
            Me.mbCondition.Size = New System.Drawing.Size(218, 35)
            '
            'CriteriaItemControl
            '
            Me.AutoScaleMode = System.Windows.Forms.AutoScaleMode.None
            Me.BackColor = System.Drawing.SystemColors.Window
            Me.Controls.Add(Me.LayoutPanel)
            Me.Font = New System.Drawing.Font(""Segoe UI"", 9.0!, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, CType(0, Byte))
            Me.Margin = New System.Windows.Forms.Padding(0)
            Me.Name = ""CriteriaItemControl""
            Me.Size = New System.Drawi",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",oTxrWg
code,"Imports System.ComponentModel
Imports System.Web.UI

''' -----------------------------------------------------------------------------
''' Project	 : ABASTECIMIENTOS_WebUC
''' Class	 : WebUC.ddlDETALLEPROCESOCOMPRA
''' 
''' -----------------------------------------------------------------------------
''' <summary>
''' Clase del Control de Usuario Personalizado de una Lista Desplegable Web
''' de la tabla DETALLEPROCESOCOMPRA
''' </summary>
''' <remarks>
''' Generado con GenApp V1.6.2.0, Carías y Asociados, (info@cariasyasociados.com)
''' </remarks>
''' <history>
''' 	[GenApp]	07/12/2006	Created
''' </history>
''' -----------------------------------------------------------------------------
<DefaultProperty(""IDDETALLE""), ToolboxData(""<{0}:ddlDETALLEPROCESOCOMPRA runat=server></{0}:ddlDETALLEPROCESOCOMPRA>"")> _
Public Class ddlDETALLEPROCESOCOMPRA
    Inherits System.Web.UI.WebControls.DropDownList

    Private _sError As Boolean
    Public Event ErrorEvent As EventHandler

    Public ReadOnly Property sError() As String
        Get
            Return _sError
        End Get
    End Property

    Public Sub Recuperar(ByVal IDESTABLECIMIENTO As Int32, ByVal IDPROCESOCOMPRA As Int64, ByVal IDPRODUCTO As Int64)
        Dim miComponente As New cDETALLEPROCESOCOMPRA
        Dim Lista As listaDETALLEPROCESOCOMPRA

        Lista = miComponente.ObtenerLista(IDESTABLECIMIENTO, IDPROCESOCOMPRA, IDPRODUCTO)

        Me.DataSource = Lista
        Me.DataTextField = ""RENGLON""
        Me.DataValueField = ""IDDETALLE""

        Me.DataBind()
    End Sub

    Protected Overrides Sub OnInit(ByVal e As System.EventArgs)
        MyBase.OnInit(e)
    End Sub

End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",G5eM1f
code,"﻿' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Collections.Immutable
Imports System.Diagnostics
Imports System.Runtime.CompilerServices
Imports System.Runtime.InteropServices
Imports Microsoft.CodeAnalysis.PooledObjects
Imports Microsoft.CodeAnalysis.Text
Imports Microsoft.CodeAnalysis.VisualBasic.Symbols
Imports Microsoft.CodeAnalysis.VisualBasic.Syntax

Namespace Microsoft.CodeAnalysis.VisualBasic.Symbols

    ''' <summary>
    ''' A tuple of TypeParameterSymbol and DiagnosticInfo, created for errors
    ''' reported from ConstraintsHelper rather than creating Diagnostics directly.
    ''' This decouples constraints checking from syntax and Locations, and supports
    ''' callers that may want to create Location instances lazily or not at all.
    ''' </summary>
    Friend Structure TypeParameterDiagnosticInfo
        Public Sub New(typeParameter As TypeParameterSymbol, diagnostic As DiagnosticInfo)
            Me.TypeParameter = typeParameter
            Me.DiagnosticInfo = diagnostic
        End Sub

        Public Sub New(typeParameter As TypeParameterSymbol, constraint As TypeParameterConstraint, diagnostic As DiagnosticInfo)
            Me.New(typeParameter, diagnostic)
            Me.Constraint = constraint
        End Sub

        Public ReadOnly TypeParameter As TypeParameterSymbol
        Public ReadOnly Constraint As TypeParameterConstraint
        Public ReadOnly DiagnosticInfo As DiagnosticInfo
    End Structure

    <Flags()>
    Friend Enum DirectConstraintConflictKind
        None = 0
        DuplicateTypeConstraint = 1 << 0
        RedundantConstraint = 1 << 1
        All = (1 << 2) - 1
    End Enum

    ''' <summary>
    ''' Helper methods for generic type parameter constraints. There are two sets of methods: one
    ''' set for resolving constraint ""bounds"" (that is, determining the effective base type, interface set,
    ''' etc.), and another set for checking for constraint violations in type and method references.
    ''' 
    ''' Bounds are resolved by calling one of the ResolveBounds overloads. Typically bounds are
    ''' resolved by each TypeParameterSymbol at, or before, one of the corresponding properties
    ''' (BaseType, Interfaces, etc.) is accessed. Resolving bounds may result in errors (cycles,
    ''' inconsistent constraints, etc.) and it is the responsibility of the caller to report any such
    ''' errors as declaration errors or use-site errors (depending on whether the type parameter
    ''' was from source or metadata) and to ensure bounds are resolved for source type parameters
    ''' even if the corresponding properties are never accessed directly.
    ''' 
    ''' Constraints are checked by calling one of the CheckConstraints or CheckAllConstraints
    ''' overloads for any generic type or method reference from source. In some circumstances,
    ''' references are checked at the time the generic type or generic method is bound and constructed
    ''' by the Binder. In those case, it is sufficient to call one of the CheckConstraints overloads
    ''' since compound types (such as A(Of T).B(Of U) or A(Of B(Of T))) are checked incrementally
    ''' as each part is bound. In other cases however, constraint checking needs to be delayed to
    ''' prevent cycles where checking constraints requires binding the syntax that is currently
    ''' being bound (such as the constraint in Class C(Of T As C(Of T)). In those cases, the caller
    ''' must lazily check constraints, and since the types may be compound types, it is necessary
    ''' to call CheckAllConstraints.
    ''' </summary>
    Friend Module ConstraintsHelper

        ''' <summary>
        ''' Enum used internally by RemoveDirectConstraintConflicts to
        ''' track what type constraint has been seen, to report conflicts
        ''' between { 'Structure', 'Class', [explicit type] }. The 'New'
        ''' constraint does not need to be tracked for those conflicts.
        ''' </summary>
        Private Enum DirectTypeConstraintKind
            None
            ReferenceTypeConstraint
            ValueTypeConstraint
            ExplicitType
        End Enum

        ''' <summary>
        ''' Return the constraints for the type parameter with any cycles
        ''' or conflicting constraints reported as errors and removed.
        ''' </summary>
        <Extension()>
        Public Function RemoveDirectConstraintConflicts(
                                     typeParameter As TypeParameterSymbol,
                                     constraints As ImmutableArray(Of TypeParameterConstraint),
                                     inProgress As ConsList(Of TypeParameterSymbol),
                                     reportConflicts As DirectConstraintConflictKind,
                                     diagnosticsBuilder As ArrayBuilder(Of TypeParameterDiagnosticInfo)) As ImmutableArray(Of TypeParameterConstraint)
            If constraints.Length > 0 Then
                Dim constraintsBuilder = ArrayBuild",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_9XEvu
code,"﻿Public Class frm_IPAufloesen

    Private DNS As New cls_DNS


#Region ""Formular Events""

    Private Sub frm_IPAufloesen_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Me.txt_Eingabe.Text = ""web.de""
    End Sub

    Private Sub frm_IPAufloesen_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        DNS = Nothing
    End Sub

#End Region

#Region ""Formular Buttons""

    Private Sub btn_Suchen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Suchen.Click
        Me.txt_Ergebnis.Text = String.Empty

        If IsNumeric(Me.txt_Eingabe.Text) Then
            Me.txt_Ergebnis.Text = DNS.IP2DNS(Me.txt_Eingabe.Text)

        Else
            Me.txt_Ergebnis.Text = DNS.DNS2IP(Me.txt_Eingabe.Text)

        End If
    End Sub

    Private Sub btn_Exit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Exit.Click
        Me.Close()
    End Sub

#End Region

End Class",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",HXLtY_
code,"'
' * Copyright (c) 2007, 2013, Oracle and/or its affiliates. All rights reserved.
' * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' *
' 

Namespace java.nio.channels


	''' <summary>
	''' A network channel that supports Internet Protocol (IP) multicasting.
	''' 
	''' <p> IP multicasting is the transmission of IP datagrams to members of
	''' a <em>group</em> that is zero or more hosts identified by a single destination
	''' address.
	''' 
	''' <p> In the case of a channel to an <seealso cref=""StandardProtocolFamily#INET IPv4""/> socket,
	''' the underlying operating system supports <a href=""http://www.ietf.org/rfc/rfc2236.txt"">
	''' <i>RFC&nbsp;2236: Internet Group Management Protocol, Version 2 (IGMPv2)</i></a>.
	''' It may optionally support source filtering as specified by <a
	''' href=""http://www.ietf.org/rfc/rfc3376.txt""> <i>RFC&nbsp;3376: Internet Group
	''' Management Protocol, Version 3 (IGMPv3)</i></a>.
	''' For channels to an <seealso cref=""StandardProtocolFamily#INET6 IPv6""/> socket, the equivalent
	''' standards are <a href=""http://www.ietf.org/rfc/rfc2710.txt""> <i>RFC&nbsp;2710:
	''' Multicast Listener Discovery (MLD) for IPv6</i></a> and <a
	''' href=""http://www.ietf.org/rfc/rfc3810.txt""> <i>RFC&nbsp;3810: Multicast Listener
	''' Discovery Version 2 (MLDv2) for IPv6</i></a>.
	''' 
	''' <p> The <seealso cref=""#join(InetAddress,NetworkInterface)""/> method is used to
	''' join a group and receive all multicast datagrams sent to the group. A channel
	''' may join several multicast groups and may join the same group on several
	''' <seealso cref=""NetworkInterface interfaces""/>. Membership is dropped by invoking the {@link
	''' MembershipKey#drop drop} method on the returned <seealso cref=""MembershipKey""/>. If the
	''' underlying platform supports source filtering then the {@link MembershipKey#block
	''' block} and <seealso cref=""MembershipKey#unblock unblock""/> methods can be used to block or
	''' unblock multicast datagrams from particular source addresses.
	''' 
	''' <p> The <seealso cref=""#join(InetAddress,NetworkInterface,InetAddress)""/> method
	''' is used to begin receiving datagrams sent to a group whose source address matches
	''' a given source address. This method throws <seealso cref=""UnsupportedOperationException""/>
	''' if the underlying platform does not support source filtering.  Membership is
	''' <em>cumulative</em> and this method may be invoked again with the same group
	''' and interface to allow receiving datagrams from other source addresses. The
	''' method returns a <seealso cref=""MembershipKey""/> that represents membership to receive
	''' datagrams from the given source address. Invoking the key's {@link
	''' MembershipKey#drop drop} method drops membership so that datagrams from the
	''' source address can no longer be received.
	''' 
	''' <h2>Platform dependencies</h2>
	''' 
	''' The multicast implementation is intended to map directly to the native
	''' multicasting facility. Consequently, the following items should be considered
	''' when developing an application that receives IP multicast datagrams:
	''' 
	''' <ol>
	''' 
	''' <li><p> The creation of the channel should specify the <seealso cref=""ProtocolFamily""/>
	''' that corresponds to the address type of the multicast groups that the channel
	''' will join. There is no guarantee that a channel to a socket in one protocol
	''' family can join and receive multicast datagrams when the address of the
	''' multicast group corresponds to another protocol family. For example, it is
	''' implementation specific if a channel to an <seealso cref=""StandardProtocolFamily#INET6 IPv6""/>
	''' socket can join an <seealso cref=""StandardProtocolFamily#INET IPv4""/> multicast group and receive
	''' multicast datagrams sent to the group. </p></li>
	''' 
	''' <li><p> The channel's socket should be bound to the {@link
	''' InetAddress#isAnyLocalAddress wildcard} address. If the socket is bound to
	''' a specific address, rather than the wildcard address then it is implementation
	''' specific if multicast datagrams are received by the socket. </p></li>
	''' 
	''' <li><p> The <seealso cref=""StandardSocketOptions#SO_REUSEADDR SO_REUSEADDR""/> option should be
	''' enabled prior to <seealso cref=""NetworkChannel#bind binding""/> the socket. This is
	''' required to allow multiple members of the group to bind to the same
	''' address. </p></li>
	''' 
	''' </ol>
	''' 
	''' <p> <b>Usage Example:</b>
	''' <pre>
	'''     // join multicast group on this interface, and also use this
	'''     // interface for outgoing multicast datagrams
	'''     NetworkInterface ni = NetworkInterface.getByName(""hme0"");
	''' 
	'''     DatagramChannel dc = DatagramChannel.open(StandardProtocolFamily.INET)
	'''         .setOption(StandardSocketOptions.SO_REUSEADDR, true)
	'''         .bind(new InetSocketAddress(5000))
	'''         .setOption(StandardSocketOptions.IP_MULTICAST_IF, ni);
	''' 
	'''     InetAddress group = InetAddress.getByName(""225.4.5.6"");
	''' 
	'''     MembershipKey key = dc.j",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",hj-WSU
code,"﻿#Region ""Microsoft.VisualBasic::1fc701dc631d59233f6ed04c3620dad9, data\BASys\Summary\Summary.vb""

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:

    ' Class Summary
    ' 
    '     Properties: chrId, gAnnotated, Genus, gIdentified, GramStain
    '                 Length, Species, Strain, Topology
    ' 
    '     Function: IndexParser, ToString
    ' 
    ' /********************************************************************************/

#End Region

Imports System.Text.RegularExpressions
Imports Microsoft.VisualBasic.ComponentModel.DataSourceModel.SchemaMaps
Imports Microsoft.VisualBasic.Language
Imports Microsoft.VisualBasic.Serialization.JSON
Imports Microsoft.VisualBasic.Text.Parser.HtmlParser

''' <summary>
''' [index] BASys Annotation Summary
''' </summary>
Public Class Summary

    ''' <summary>
    ''' Chromosome Id
    ''' </summary>
    ''' <returns></returns>
    <Field(""Chromosome Id"")>
    Public Property chrId As String
    Public Property Length As String
    ''' <summary>
    ''' Gram Stain
    ''' </summary>
    ''' <returns></returns>
    <Field(""Gram Stain"")> Public Property GramStain As String
    Public Property Topology As String
    Public Property Genus As String
    Public Property Species As String
    Public Property Strain As String

    ''' <summary>
    ''' Number of Genes Identified
    ''' </summary>
    ''' <returns></returns>
    <Field(""Number of Genes Identified"")>
    Public Property gIdentified As String
    ''' <summary>
    ''' Number of Genes Annotated
    ''' </summary>
    ''' <returns></returns>
    <Field(""Number of Genes Annotated"")>
    Public Property gAnnotated As String

    Public Overrides Function ToString() As String
        Return Me.GetJson
    End Function

    Public Shared Function IndexParser(path As String) As Summary
        Dim html As String = path.GET
        html = Strings.Split(html, ""<!-- MAIN TABLE MAIN COLUMN -->"").Last
        html = Regex.Match(html, ""<table>.+?</table>"", RegexICSng).Value
        Dim rows = html.GetRowsHTML
        Dim schema =
            DataFrameColumnAttribute.LoadMapping(Of Summary)(, True) _
            .ToDictionary(Function(x) x.Value.Field.Name,
                          Function(x) x.Value)
        Dim summary As New Summary

        For Each row As String In rows
            Dim cols As String() = row.GetColumnsHTML
            Dim key As String = cols(Scan0)
            Dim value As String = cols(1)

            key = key.TrimEnd("":""c)
            Call schema(key).SetValue(summary, value)
        Next

        Return summary
    End Function
End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",--FzuV
code,"﻿Imports System.Runtime.InteropServices
Public Class SmartDepthSlotThru

    Private Sub btnSmartDepthSlotThru_Click(sender As System.Object, e As System.EventArgs) Handles btnSmartDepthSlotThru.Click
        Dim objApplication As SolidEdgeFramework.Application = Nothing
        Dim objDraftDoc As SolidEdgeDraft.DraftDocument = Nothing
        Dim objDimStyles As SolidEdgeFrameworkSupport.DimensionStyles = Nothing
        Dim objTempStyle As SolidEdgeFrameworkSupport.DimensionStyle = Nothing
        Dim objType As Type = Nothing
        Dim strThroughSlot As String

        Try
            ' Create/get the application with specific settings
            objApplication = Marshal.GetActiveObject(""SolidEdge.Application"")

            If objApplication Is Nothing Then
                ' Get the type from the Solid Edge ProgID
                objType = Type.GetTypeFromProgID(""SolidEdge.Application"")
                ' Start Solid Edge
                objApplication = Activator.CreateInstance(objType)
                ' Make Solid Edge visible
                objApplication.Visible = True
            End If

            objDraftDoc = objApplication.ActiveDocument
            'Get the DimensionsStyles collection object
            objDimStyles = objDraftDoc.DimensionStyles

            'Get reference to first DimStyle.
            objTempStyle = objDimStyles(0)

            'Set the smart depth for Through slot
            objTempStyle.SmartDepthSlotThru = ""THRU""

            'Get the smart depth for Through slot
            strThroughSlot = objTempStyle.SmartDepthSlotThru

            If strThroughSlot <> ""THRU"" Then
                MsgBox(""Error in SmartDepthSlotThru property for dimension style."")
            End If

        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub
End Class",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",sSCiix
code,"' 
' Copyright (C) 2013-2021 getMaNGOS <https://getMangos.eu>
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 2 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
'
Imports System.Xml.Serialization
Imports System.Threading
Imports System.Net.Sockets
Imports System.IO
Imports System.Net

Namespace PacketLogger
    Public Module RSClass
        Const CMD_AUTH_LOGON_CHALLENGE As Integer = &H0
        Const CMD_AUTH_LOGON_PROOF As Integer = &H1
        Const CMD_AUTH_RECONNECT_CHALLENGE As Integer = &H2
        Const CMD_AUTH_RECONNECT_PROOF As Integer = &H3
        Const CMD_AUTH_UPDATESRV As Integer = &H4
        Const CMD_AUTH_REALMLIST As Integer = &H10

        Public Class RSClientClass
            Implements IDisposable

            Public Socket As Socket
            Public connSocket As Socket = New Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.IP)
            Public IP As Net.IPAddress = Net.IPAddress.Parse(""0.0.0.0"")
            Public Port As Int32 = 0
            Public connIP As Net.IPAddress = Net.IPAddress.Parse(""0.0.0.0"")
            Public connPort As Int32 = 0
            Public AuthEngine As AuthEngineClass
            Private Account() As Byte
            Private Password() As Byte
            Public WSOnline As Byte = 2



            Public Sub OnServerData(ByVal data() As Byte)
                FileLogger.LogPacket(data, packetType.RECV_PACKET, packetSource.RS)
                Select Case data(0)
                    Case CMD_AUTH_LOGON_CHALLENGE, CMD_AUTH_RECONNECT_CHALLENGE
                        HandleLogonChallengeServer(data)
                        SendToClient(data)
                    Case CMD_AUTH_LOGON_PROOF, CMD_AUTH_RECONNECT_PROOF
                        SendToClient(data)
                    Case CMD_AUTH_REALMLIST
                        HandleRealmlist(data)
                    Case Else
                        'TODO: Write Opcode
                        Console.WriteLine(""[{0}]RS: [{1}:{2}] Unknown Opcode 0x{3}"", Format(TimeOfDay, ""hh:mm:ss""), IP, Port, data(0))
                        SendToClient(data)
                End Select
            End Sub
            Public Sub OnClientData(ByVal data() As Byte)
                FileLogger.LogPacket(data, packetType.SENT_PACKET, packetSource.RS)
                Select Case data(0)
                    Case CMD_AUTH_LOGON_CHALLENGE, CMD_AUTH_RECONNECT_CHALLENGE
                        HandleLogonChallengeClient(data)

                        Dim Host As IPEndPoint = New IPEndPoint(Dns.GetHostEntry(Config.rsConnHost).AddressList(0), Config.rsConnPort)
                        connSocket.Connect(Host)
                        Dim NewThread As Thread
                        NewThread = New Thread(AddressOf ProcessServerConnection)
                        NewThread.Name = ""Packet Logger, Server Connected""
                        NewThread.Start()

                        Send(data)
                    Case CMD_AUTH_LOGON_PROOF, CMD_AUTH_RECONNECT_PROOF
                        HandleLogonProof(data)
                        Send(data)
                    Case CMD_AUTH_REALMLIST
                        Send(data)
                    Case Else
                        'TODO: Write Opcode
                        Console.WriteLine(""[{0}]RS: [{1}:{2}] Unknown Opcode 0x{3}"", Format(TimeOfDay, ""hh:mm:ss""), IP, Port, data(0))
                End Select
            End Sub
            Public Sub ProcessClientConnection()
                IP = CType(Socket.RemoteEndPoint, IPEndPoint).Address
                Port = CType(Socket.RemoteEndPoint, IPEndPoint).Port
                FileLogger.Log(String.Format(""RealmServer: New connection from [{0}:{1}]."", IP, Port))

                Dim Buffer() As Byte
                Dim bytes As Integer
                'Dim RecvMessage As String

                Dim oThread As Thread
                oThread = Thread.CurrentThread()

                ConsoleColor.SetConsoleColor(ConsoleColorClass.ForegroundColors.Gray)
                Console.WriteLine(""[{0}]RS: Incoming connection from [{1}:{2}]"", Format(TimeOfDay, ""hh:mm:ss""), IP, Port)
                ConsoleColor.SetConsoleColor()

                Socket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.SendTimeout, 1000)
                Socket.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReceiveTimeout, 1000)

                While Not PL._flagStopListen
                    Thread.Sleep(CONNETION_SLEEP_TIME)
                    If Socket.Available > 0",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",jJ9kmJ
code,"Imports System
Imports System.Data
Imports System.Data.Sql
Imports Microsoft.SqlServer.Server
Imports System.Data.SqlTypes
Imports System.Data.SqlClient
Imports System.Runtime.InteropServices
Imports System.Text.RegularExpressions
Imports System.Collections 'the IEnumerable interface is here  

'---------------------------------------------------------------------------------------
Namespace SimpleTalk.Phil.Factor
    Public Class RegularExpressionFunctions
        '
        '          RegExOptions function
        'this is used simply to creat the bitmap that is passed to the various 
        'CLR routines

        <SqlFunction(IsDeterministic:=True, IsPrecise:=True)> _
          Public Shared Function RegExOptionEnumeration(ByVal IgnoreCase As SqlBoolean, _
                       ByVal MultiLine As SqlBoolean, _
                                     ByVal ExplicitCapture As SqlBoolean, _
                                     ByVal Compiled As SqlBoolean, _
                                     ByVal SingleLine As SqlBoolean, _
                                     ByVal IgnorePatternWhitespace As SqlBoolean, _
                                     ByVal RightToLeft As SqlBoolean, _
                                     ByVal ECMAScript As SqlBoolean, _
                                     ByVal CultureInvariant As SqlBoolean) _
                        As SqlInt32
            Dim Result As Integer
            Result = (IIf(IgnoreCase.Value, RegexOptions.IgnoreCase, RegexOptions.None) Or _
             IIf(MultiLine.Value, RegexOptions.Multiline, RegexOptions.None) Or _
             IIf(ExplicitCapture.Value, RegexOptions.ExplicitCapture, _
                          RegexOptions.None) Or _
             IIf(Compiled.Value, RegexOptions.Compiled, RegexOptions.None) Or _
             IIf(SingleLine.Value, RegexOptions.Singleline, RegexOptions.None) Or _
             IIf(IgnorePatternWhitespace.Value, RegexOptions.IgnorePatternWhitespace, _
                          RegexOptions.None) Or _
             IIf(RightToLeft.Value, RegexOptions.RightToLeft, RegexOptions.None) Or _
             IIf(ECMAScript.Value, RegexOptions.ECMAScript, RegexOptions.None) Or _
             IIf(CultureInvariant.Value, RegexOptions.CultureInvariant, RegexOptions.None))
            Return (Result)
        End Function
        '----------end of RegExEnumeration function
        '
        '          RegExMatch function
        'This method returns the first substring found in input that matches the
        'regular expression pattern.
        <SqlFunction(IsDeterministic:=True, IsPrecise:=True)> _
          Public Shared Function RegExMatch(ByVal pattern As SqlString, _
                                            ByVal input As SqlString, _
                                            ByVal Options As SqlInt32 _
         ) As SqlString
            If (input.IsNull OrElse pattern.IsNull) Then
                Return String.Empty
            End If
            Dim RegexOption As New System.Text.RegularExpressions.RegexOptions
            RegexOption = Options
            Return Regex.Match(input.Value, pattern.Value, RegexOption).Value
        End Function
        '----------end of RegExMatch function
        'end RegexOptions

        'RegExIsMatch function
        <SqlFunction(IsDeterministic:=True, IsPrecise:=True)> _
        Public Shared Function RegExIsMatch( _
                                            ByVal pattern As SqlString, _
                                            ByVal input As SqlString, _
                                            ByVal Options As SqlInt32) As SqlBoolean
            If (input.IsNull OrElse pattern.IsNull) Then
                Return SqlBoolean.False
            End If
            Dim RegexOption As New System.Text.RegularExpressions.RegexOptions
            RegexOption = Options
            Return Regex.IsMatch(input.Value, pattern.Value, RegexOption)
        End Function         '
        '          RegExIndex function
        'This method returns the index of the first substring found in input that  
        'matches the regular expression pattern.
        <SqlFunction(IsDeterministic:=True, IsPrecise:=True)> _
          Public Shared Function RegExIndex(ByVal pattern As SqlString, _
                                            ByVal input As SqlString, _
                                            ByVal Options As SqlInt32 _
                       ) As SqlInt32
            If (input.IsNull OrElse pattern.IsNull) Then
                Return 0
            End If
            Dim RegexOption As New System.Text.RegularExpressions.RegexOptions
            RegexOption = Options
            Return Regex.Match(input.Value, pattern.Value, RegexOption).Index
        End Function
        '----------end of RegExMatch function
        '          RegExEscape function
        'This method 'escapes'  a minimal set of characters (\, *, +, ?, |, {, [, (,),
        '^,$,., #, and white space) by replacing them with their escape codes. This 
        'instructs the regular expression engine to interpret these characters
        'literally rathe",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",j4lb7y
code,"﻿Imports System.Configuration
Imports System.Data

Partial Class ucRedeCredenciadaComResultado
    Inherits System.Web.UI.UserControl

    Dim func As New Funcoes
    Dim wSQL As String

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Not IsPostBack Then

            Call sConfiguraSecao()
            Call sCarregarComboEstados()
            Call sCarregarComboCidades()
            Call sCarregarComboCategorias()
            Call sCarregarComboEspecialidades()

        End If

    End Sub

    Sub sConfiguraSecao()

        Dim ws As New wsCash.wsCash
        ws.Url = ConfigurationManager.AppSettings(""wsURL"")

        Dim wCodigoSecao As String = Request.Params(""cSecao"")

        If wCodigoSecao = """" Then
            Session(""cSecao"") = 1
        Else
            Session(""cSecao"") = wCodigoSecao
        End If

        Dim wSecao As New wsCash.wSecao
        wSecao = ws.fSecao(Session(""cSecao""))

        If wSecao.cEspecialidades = True Then
            lblEspecialidade.Visible = True
            lblDivisor.Visible = True
            cmbEspecialidades.Visible = True
        Else
            lblEspecialidade.Visible = False
            lblDivisor.Visible = False
            cmbEspecialidades.Visible = False
        End If

    End Sub

    Sub sCarregarComboEstados()

        Dim ds As dataset
        Dim ws As New wsCash.wsCash
        ws.Url = ConfigurationManager.AppSettings(""wsURL"")

        wSQL = ""  select distinct e.cEstado, e.tEstado, e.tDescricao""
        wSQL += "" from tbEstados E""
        wSQL += "" join tbCidades C on e.cEstado = c.cEstado""
        wSQL += "" join tbAssociados A on c.cCidade = a.cCidade""
        wSQL += "" order by tEstado""

        Call func.sCarregaCombo(ws.fRetornaDataSet(wSQL), cmbEstados, ""tDescricao"", ""cEstado"")

        If Session(""cEstado"") Is Nothing Then

            wSQL = ""  select *  ""
            wSQL += "" from tbEstados ""
            wSQL += "" where cPreferencial = 1 ""

            Dim wPreferencial As Integer

            ds = ws.fRetornaDataSet(wSQL)

            If Not ds.Tables(0).Rows.Count = 0 Then
                wPreferencial = ds.Tables(0).Rows(0).Item(""cEstado"")
            Else
                wPreferencial = 1
            End If

            Session(""cEstado"") = wPreferencial

        End If

        If Not Session(""cEstado"") Is Nothing Then
            Call func.sSetaCombo(cmbEstados, Session(""cEstado""))
            Session(""cEstado"") = cmbEstados.SelectedItem.Value
        End If

    End Sub

    Sub sCarregarComboCidades()

        Dim ws As New wsCash.wsCash
        ws.Url = ConfigurationManager.AppSettings(""wsURL"")

        wSQL = ""Select * from tbCidades where cEstado = "" & cmbEstados.SelectedItem.Value & "" order by tCidade ""
        Call func.sCarregaCombo(ws.fRetornaDataSet(wSQL), cmbCidades, ""tCidade"", ""cCidade"")

        If Not Session(""cCidade"") Is Nothing Then
            Call func.sSetaCombo(cmbCidades, Session(""cCidade""))
        End If

    End Sub

    Sub sCarregarComboCategorias()

        Dim ws As New wsCash.wsCash
        ws.Url = ConfigurationManager.AppSettings(""wsURL"")

        wSQL = ""  Select c.tCategoria, c.cCategoria""
        wSQL += "" from tbCategorias C ""
        wSQL += "" join tbAssociados A on C.cCategoria = A.cCategoria""
        wSQL += "" where a.cCidade = "" & cmbCidades.SelectedItem.Value
        wSQL += "" and cSecao = "" & Session(""cSecao"")
        wSQL += "" group by c.tCategoria, c.cCategoria""
        wSQL += "" order by c.tCategoria ""

        Call func.sCarregaCombo(ws.fRetornaDataSet(wSQL), cmbCategorias, ""tCategoria"", ""cCategoria"", ""(Todas as categorias)"")

        If Not Session(""cCategoria"") Is Nothing Then
            Call func.sSetaCombo(cmbCategorias, Session(""cCategoria""))
        End If

    End Sub

    Sub sCarregarComboEspecialidades()

        Dim ws As New wsCash.wsCash
        ws.Url = ConfigurationManager.AppSettings(""wsURL"")

        cmbEspecialidades.Items.Clear()

        wSQL = ""  Select E.tEspecialidade, E.cEspecialidade""
        wSQL += "" from tbEspecialidades E  ""
        wSQL += "" join tbAssociadosEspecialidades AE on E.cEspecialidade = AE.cEspecialidade ""
        wSQL += "" join tbAssociados A on a.cAssociado = ae.cAssociado""
        wSQL += "" where a.cCidade = "" & cmbCidades.SelectedItem.Value
        If cmbCategorias.SelectedItem.Value <> ""0"" Then
            wSQL += "" and A.cCategoria = "" & cmbCategorias.SelectedItem.Value
        End If
        wSQL += "" group by E.tEspecialidade, E.cEspecialidade ""
        wSQL += "" order by E.tEspecialidade ""

        Call func.sCarregaCombo(ws.fRetornaDataSet(wSQL), cmbEspecialidades, ""tEspecialidade"", ""cEspecialidade"", ""(Todas as especialidades)"")

        If Not Session(""cEspecialidade"") Is Nothing Then
            Call func.sSetaCombo(cmbEspecialidades, Session(""cEspecialidade""))
        End If

    End Sub

    Protected Sub cmbEstados_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cmbEstados.SelectedIndexChanged

        Call sCarregarComboCidades()
        Call sCarregarCom",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",Xl0WZj
code,"﻿Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle(""$safeprojectname$"")> 
<Assembly: AssemblyDescription("""")> 
<Assembly: AssemblyCompany(""Microsoft"")> 
<Assembly: AssemblyProduct(""$safeprojectname$"")> 
<Assembly: AssemblyCopyright(""Copyright © Microsoft 2014"")> 
<Assembly: AssemblyTrademark("""")> 

<Assembly: ComVisible(False)>

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid(""67a8e997-2b6d-4bbf-a70c-849cb0ac7787"")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion(""1.0.*"")> 

<Assembly: AssemblyVersion(""1.0.0.0"")> 
<Assembly: AssemblyFileVersion(""1.0.0.0"")> 
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",VC2ZE3
code,"' Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

Imports System.Text
Imports System.Threading
Imports Microsoft.CodeAnalysis
Imports Microsoft.CodeAnalysis.CodeGeneration
Imports Microsoft.CodeAnalysis.Editor
Imports Microsoft.CodeAnalysis.Editor.VisualBasic.LineCommit
Imports Microsoft.CodeAnalysis.Editor.VisualBasic.Utilities
Imports Microsoft.CodeAnalysis.Formatting
Imports Microsoft.CodeAnalysis.Host
Imports Microsoft.CodeAnalysis.LanguageServices
Imports Microsoft.CodeAnalysis.Shared.Extensions
Imports Microsoft.CodeAnalysis.Text
Imports Microsoft.CodeAnalysis.VisualBasic
Imports Microsoft.CodeAnalysis.VisualBasic.CodeGeneration
Imports Microsoft.CodeAnalysis.VisualBasic.Extensions
Imports Microsoft.CodeAnalysis.VisualBasic.Syntax
Imports Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel
Imports Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements
Imports Microsoft.VisualStudio.LanguageServices.Implementation.Utilities
Imports Microsoft.VisualStudio.LanguageServices.VisualBasic.CodeModel.Extenders
Imports Microsoft.VisualStudio.LanguageServices.VisualBasic.CodeModel.MethodXml
Imports Microsoft.VisualStudio.Text
Imports Microsoft.VisualStudio.Text.Editor

Namespace Microsoft.VisualStudio.LanguageServices.VisualBasic.CodeModel
    Partial Friend Class VisualBasicCodeModelService
        Inherits AbstractCodeModelService

        Private ReadOnly _commitBufferManagerFactory As CommitBufferManagerFactory

        Friend Sub New(provider As HostLanguageServices, editorOptionsFactoryService As IEditorOptionsFactoryService, refactorNotifyServices As IEnumerable(Of IRefactorNotifyService), commitBufferManagerFactory As CommitBufferManagerFactory)
            MyBase.New(
                provider,
                editorOptionsFactoryService,
                refactorNotifyServices,
                New LineAdjustmentFormattingRule(),
                New EndRegionFormattingRule())

            Me._commitBufferManagerFactory = commitBufferManagerFactory
        End Sub

        Private Shared ReadOnly s_codeTypeRefAsFullNameFormat As SymbolDisplayFormat =
            New SymbolDisplayFormat(
                typeQualificationStyle:=SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces,
                genericsOptions:=SymbolDisplayGenericsOptions.IncludeTypeParameters,
                miscellaneousOptions:=SymbolDisplayMiscellaneousOptions.ExpandNullable)

        Private Shared ReadOnly s_codeTypeRefAsStringFormat As SymbolDisplayFormat =
            New SymbolDisplayFormat(
                typeQualificationStyle:=SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces,
                genericsOptions:=SymbolDisplayGenericsOptions.IncludeTypeParameters,
                miscellaneousOptions:=SymbolDisplayMiscellaneousOptions.UseSpecialTypes)

        Private Shared ReadOnly s_fullNameFormat As SymbolDisplayFormat =
            New SymbolDisplayFormat(
                typeQualificationStyle:=SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces,
                genericsOptions:=SymbolDisplayGenericsOptions.IncludeTypeParameters,
                memberOptions:=SymbolDisplayMemberOptions.IncludeContainingType,
                miscellaneousOptions:=SymbolDisplayMiscellaneousOptions.ExpandNullable)

        Private Shared ReadOnly s_setTypeFormat As SymbolDisplayFormat =
            New SymbolDisplayFormat(
                typeQualificationStyle:=SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces,
                genericsOptions:=SymbolDisplayGenericsOptions.IncludeTypeParameters,
                miscellaneousOptions:=SymbolDisplayMiscellaneousOptions.ExpandNullable Or SymbolDisplayMiscellaneousOptions.UseSpecialTypes)

        Private Shared ReadOnly s_raiseEventSignatureFormat As SymbolDisplayFormat =
            New SymbolDisplayFormat(
                typeQualificationStyle:=SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces,
                genericsOptions:=SymbolDisplayGenericsOptions.IncludeTypeParameters,
                parameterOptions:=SymbolDisplayParameterOptions.IncludeName Or SymbolDisplayParameterOptions.IncludeParamsRefOut Or SymbolDisplayParameterOptions.IncludeType,
                miscellaneousOptions:=SymbolDisplayMiscellaneousOptions.UseSpecialTypes)

        Private Shared Function IsNameableNode(node As SyntaxNode) As Boolean
            Select Case node.Kind
                Case SyntaxKind.Attribute,
                     SyntaxKind.ClassBlock,
                     SyntaxKind.ConstructorBlock,
                     SyntaxKind.DeclareFunctionStatement,
                     SyntaxKind.DeclareSubStatement,
                     SyntaxKind.DelegateFunctionStatement,
                     SyntaxKind.DelegateSubStatement,
                     SyntaxKind.EnumBlock,
                     SyntaxKind.EnumMemberDeclaration,
                     SyntaxKind.EventBlock,
                  ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",iIlYzM
code,"﻿#Region ""Microsoft.VisualBasic::cf33860d5093beffd546ea66a20e3299, visualize\DataVisualizationExtensions\ExpressionPattern\PatternPlot.vb""

' Author:
' 
'       asuka (amethyst.asuka@gcmodeller.org)
'       xie (genetics@smrucc.org)
'       xieguigang (xie.guigang@live.com)
' 
' Copyright (c) 2018 GPL3 Licensed
' 
' 
' GNU GENERAL PUBLIC LICENSE (GPL3)
' 
' 
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
' 
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
' 
' You should have received a copy of the GNU General Public License
' along with this program. If not, see <http://www.gnu.org/licenses/>.



' /********************************************************************************/

' Summaries:

'     Class PatternPlot
' 
'         Properties: matrix
' 
'         Constructor: (+1 Overloads) Sub New
' 
'         Function: createLines
' 
'         Sub: PlotInternal
' 
' 
' /********************************************************************************/

#End Region

Imports System.Drawing
Imports Microsoft.VisualBasic.ComponentModel.Collection
Imports Microsoft.VisualBasic.ComponentModel.Ranges.Model
Imports Microsoft.VisualBasic.Data.ChartPlots
Imports Microsoft.VisualBasic.Data.ChartPlots.Graphic
Imports Microsoft.VisualBasic.Data.ChartPlots.Graphic.Axis
Imports Microsoft.VisualBasic.Data.ChartPlots.Graphic.Canvas
Imports Microsoft.VisualBasic.DataMining.FuzzyCMeans
Imports Microsoft.VisualBasic.Imaging
Imports Microsoft.VisualBasic.Imaging.Drawing2D
Imports Microsoft.VisualBasic.Imaging.Drawing2D.Colors
Imports Microsoft.VisualBasic.Language
Imports Microsoft.VisualBasic.Linq
Imports Microsoft.VisualBasic.MIME.Markup.HTML.CSS
Imports SMRUCC.genomics.Analysis.HTS.DataFrame
Imports DashStyle = System.Drawing.Drawing2D.DashStyle

Namespace ExpressionPattern

    Public Class PatternPlot : Inherits Plot

        Public ReadOnly Property matrix As ExpressionPattern

        ReadOnly patternsIndex As Dictionary(Of String, FuzzyCMeansEntity)
        ReadOnly colors As Color()

        Public Property clusterLabelStyle As String = CSSFont.PlotSubTitle
        Public Property legendTitleStyle As String = CSSFont.Win7Small
        Public Property legendTickStyle As String = CSSFont.Win7Small

        Public Sub New(matrix As ExpressionPattern, theme As Theme, colorSet$, levels%)
            MyBase.New(theme)

            Me.matrix = matrix
            Me.patternsIndex = matrix.Patterns.ToDictionary(Function(a) a.uid)
            Me.colors = Designer.GetColors(colorSet, levels)
        End Sub

        Protected Overrides Sub PlotInternal(ByRef g As IGraphics, canvas As GraphicsRegion)
            ' 下面得到作图子区域的大小
            ' 用于计算布局信息
            Dim plot As Rectangle = canvas.PlotRegion
            Dim intervalTotalWidth! = plot.Width * 0.3
            Dim intervalTotalHeight! = plot.Height * 0.3
            Dim w = (plot.Width - intervalTotalWidth) / matrix.dim(1)
            Dim h = (plot.Height - intervalTotalHeight) / matrix.dim(Scan0)
            Dim iw = intervalTotalWidth / matrix.dim(1)
            Dim ih = intervalTotalHeight / matrix.dim(Scan0)

            Dim scatterData As SerialData()
            Dim i As i32 = 1
            Dim layout As GraphicsRegion
            Dim x!
            Dim y! = canvas.PlotRegion.Top + ih / 2
            Dim padding As String
            Dim clusterTagId As Integer
            Dim clusterTagFont As Font = CSSFont.TryParse(clusterLabelStyle)
            Dim tagPos As PointF
            Dim levels As New Value(Of DoubleRange)
            Dim legendLayout As Rectangle
            Dim designer As SolidBrush() = colors _
                .Select(Function(c) New SolidBrush(c)) _
                .ToArray
            Dim legendTitleFont As Font = CSSFont.TryParse(legendTitleStyle)
            Dim legendTickFont As Font = CSSFont.TryParse(legendTickStyle)

            For Each row As Matrix() In matrix.GetPartitionMatrix
                x = canvas.PlotRegion.Left + iw / 5

                For Each col As Matrix In row
                    tagPos = New PointF(x, y - g.MeasureString(""0"", clusterTagFont).Height)
                    padding = $""padding: {y}px {canvas.Width - (x + w)}px {canvas.Height - (y + h)}px {x}""
                    legendLayout = New Rectangle With {
                        .X = x + w,
                        .Y = y,
                        .Width = iw * 0.8,
                        .Height = h * 0.75
                    }
                    layout = New GraphicsRegion(canvas.Size, padding)
                    x += w + iw
                    clusterTagId = Integer.Parse(col.tag)
                    scatterData = createLines(col, levels) _
                        .OrderBy(Function(gene)
      ",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",_mXBo8
code,"Imports BVSoftware.Bvc5.Core

Partial Class BVModules_ContentBlocks_Mailing_List_Signup_adminview
    Inherits Content.BVModule

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Dim listID As String = SettingsManager.GetSetting(""MailingListId"")
        If listID <> String.Empty Then
            Dim m As Contacts.MailingList = Contacts.MailingList.FindByBvin(listID)
            If m.Bvin <> String.Empty Then
                Me.lblInfo.Text = ""List: "" & m.Name
            Else
                Me.lblInfo.Text = ""Unknown mailing list selected.""
            End If
        Else
            Me.lblInfo.Text = ""No mailing list selected.""
        End If
    End Sub

End Class
",codeparrot/github-code-clean,"[0, 0, 1, 0, 0, 0, 0, 0]",S6TtVo
