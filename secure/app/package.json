{
  "name": "@whylabs/dashboard",
  "version": "0.1.0",
  "private": true,
  "description": "Microservice serving WhyLabs data",
  "main": "dist/app.js",
  "author": "WhyLabs",
  "engines": {
    "node": ">=18.16.0"
  },
  "packageManager": "yarn@4.4.1",
  "volta": {
    "node": "18.16.0",
    "yarn": "4.4.1"
  },
  "importSort": {
    ".js, .ts, .tsx": {
      "style": "module",
      "parser": "typescript"
    }
  },
  "prisma": {
    "seed": "ts-node -r dotenv/config prisma/seed.ts ts dotenv_config_path=${DOTENV_PATH}"
  },
  "scripts": {
    "proxy": "caddy reverse-proxy --from localhost:443 --to localhost:8080",
    "test:unit": "find ./src -name '*.unit.spec.ts' | STAGE=test xargs ts-mocha",
    "check-licenses": "license-checker --production --exclude MIT,BSD-3-Clause,Apache-2.0,BSD-2-Clause,ISC,0BSD",
    "generate": "yarn run json2ts",
    "generate:watch": "yarn generate --watch",
    "json2ts": "ts-node -O '{\"module\": \"commonjs\"}' ./scripts/json2ts.ts",
    "build": "yarn prisma generate && yarn generate && tsc && cp -r src/generated dist/",
    "build:container": "docker build --pull --build-arg BASE_URL=http://localhost:8080 --build-arg NODE_ENV=development --build-arg BUILD_ENV=local --build-arg NPM_TOKEN=${NPM_TOKEN} -t dashboard:dev .",
    "start": "yarn monorepo:container",
    "start:dev": "node --inspect -r dotenv/config -r ts-node/register src/app.ts dotenv_config_path=${DOTENV_PATH} | pino-pretty --singleLine",
    "start:nowatch": "yarn generate && DOTENV_PATH=.env yarn start:dev",
    "start:watch": "DOTENV_PATH=.env concurrently 'yarn run proxy' 'yarn generate:watch' 'nodemon'",
    "start:debug-production": "yarn monorepo:link-client && yarn generate && DEBUG_MODE=1 DOTENV_PATH=.env.production AWS_PROFILE=Production-account.DeveloperFullAccess && concurrently --kill-others 'nodemon --config nodemon.monorepo.json' 'yarn workspace @whylabs/dashboard-client dev'",
    "start:serve-client": "ts-node -r dotenv/config --files src/app.ts | pino-pretty --singleLine",
    "start:container": "yarn build:container && docker run -it --rm -e NODE_ENV=development -e AWS_PROFILE=222222222222_DeveloperFullAccess -e STAGE=local --env-file .env -v ${HOME}/.aws/:/root/.aws/:ro -p 8080:8080 dashboard:dev",
    "monorepo:init": "yarn monorepo:client:build && yarn monorepo:link-client",
    "monorepo:service": "node --inspect -r dotenv/config -r ts-node/register src/app.ts dotenv_config_path=${DOTENV_PATH} | pino-pretty --singleLine",
    "monorepo:dev": "yarn monorepo:link-client && yarn generate && DOTENV_PATH=.env concurrently --kill-others 'nodemon --config nodemon.monorepo.json' 'yarn workspace @whylabs/dashboard-client dev'",
    "monorepo:container": "docker compose -f ./container/docker-compose.yaml up",
    "prisma:dev": "PG_HOST=localhost yarn prisma",
    "prisma": "container/scripts/prisma.sh",
    "monorepo:link-client": "rm -fr src/public && ln -s $(pwd)/client/dist src/public",
    "monorepo:client:build": "NODE_OPTIONS=--max-old-space-size=8192 yarn workspace @whylabs/dashboard-client run build",
    "monorepo:client:build:watch": "yarn workspace @whylabs/dashboard-client run build:watch",
    "monorepo:client:test": "yarn workspace @whylabs/dashboard-client run test:ci",
    "monorepo:lint": "yarn workspaces foreach -A run lint",
    "monorepo:typecheck": "yarn workspaces foreach -A run typecheck",
    "monorepo:client:format": "prettier --write \"client/src/**/*.{js,jsx,ts,tsx}\"",
    "rename:hc-to-placeholder": "bash scripts/hc-to-placeholder.sh",
    "rename:placeholder-to-hc": "bash scripts/placeholder-to-hc.sh",
    "lint": "eslint \"{src,test}/**/*.{ts,js}?(x)\"",
    "lint:all": "yarn lint && yarn monorepo:lint",
    "lint:fix": "yarn lint --fix",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx}\"",
    "format:all": "yarn format && yarn monorepo:client:format",
    "profile": "NODE_ENV=production PORT=8080 node -r dotenv/config --prof --no-logfile-per-isolate dist/app.js",
    "container:build": "yarn run prisma:gensql && docker buildx build --platform linux/amd64 --pull --build-arg BASE_URL=http://localhost:8080 --build-arg NODE_ENV=development --build-arg NPM_TOKEN=${NPM_TOKEN} --build-arg BUILD_ENV=local -t dashboard:dev . --progress=plain --load",
    "container:start": "docker run -it --rm -e NODE_ENV=development -e AWS_PROFILE=222222222222_DeveloperFullAccess -e STAGE=local --env-file .env -v ${HOME}/.aws/:/root/.aws/:ro -p 8081:8080 dashboard:dev",
    "prisma:gensql": "yarn prisma:dev generate --sql",
    "depcheck": "yarn dlx depcheck",
    "typecheck": "tsc --noEmit",
    "typecheck:all": "yarn typecheck && yarn monorepo:typecheck",
    "find-deadcode": "yarn workspace @whylabs/dashboard-client find-deadcode"
  },
  "resolutions": {
    "ramda": "^0.27.0",
    "agent-base": "^6.0.1",
    "cookiejar": "^2.1.4",
    "http-cache-semantics": "^4.1.1",
    "axios": "0.21.4"
  },
  "dependencies": {
    "@aws-sdk/client-cloudwatch-logs": "^3.360.0",
    "@aws-sdk/client-lambda": "^3.360.0",
    "@aws-sdk/client-s3": "^3.360.0",
    "@aws-sdk/client-secrets-manager": "^3.360.0",
    "@aws-sdk/client-sqs": "^3.360.0",
    "@aws-sdk/client-sts": "^3.360.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/otlp-transformer": "patch:@opentelemetry/otlp-transformer@npm%3A0.53.0#~/.yarn/patches/@opentelemetry-otlp-transformer-npm-0.53.0-01c2c71f91.patch",
    "@prisma/client": "^5.20.0",
    "@slack/webhook": "^6.1.0",
    "@trpc/server": "^10.45.2",
    "agentkeepalive": "^4.3.0",
    "axios": "",
    "axios-ds": "npm:axios@0.21.4",
    "axios-retry": "^3.8.0",
    "axios-song": "npm:axios@0.21.4",
    "body-parser": "^1.19.2",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cookie-session": "^2.0.0",
    "cors": "^2.8.5",
    "date-fns": "^2.30.0",
    "express": "^4.17.3",
    "express-pino-logger": "^7.0.0",
    "helmet": "^7.1.0",
    "http-proxy-middleware": "^3.0.2",
    "keygrip": "^1.1.0",
    "lodash": "^4.17.21",
    "node-fetch": "2.7.0",
    "pino": "^7.9.2",
    "pino-std-serializers": "^5.1.1",
    "ramda": "^0.27.0",
    "ua-parser-js": "^1.0.33",
    "uuid": "^8.3.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@slack/types": "^2.4.0",
    "@types/chai": "^4.3.0",
    "@types/chai-as-promised": "^7.1.5",
    "@types/compression": "^1.7.2",
    "@types/cookie-parser": "^1.4.2",
    "@types/cookie-session": "^2.0.44",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.13",
    "@types/express-pino-logger": "^4.0.3",
    "@types/keygrip": "^1.0.2",
    "@types/lodash": "^4.14.200",
    "@types/mocha": "^8.2.3",
    "@types/node": "^14.18.12",
    "@types/node-fetch": "2.6.9",
    "@types/pino": "^7.0.5",
    "@types/ramda": "^0.28.14",
    "@types/ua-parser-js": "^0.7.36",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.59.9",
    "@typescript-eslint/parser": "^5.17.0",
    "chai": "^4.3.6",
    "chai-as-promised": "^7.1.1",
    "concurrently": "^8.2.2",
    "dotenv": "^16.0.0",
    "eslint": "^8.12.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-mocha": "^10.0.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "license-checker": "^25.0.1",
    "mocha": "^8.4.0",
    "nodemon": "^2.0.15",
    "pino-pretty": "^7.6.0",
    "prettier": "^2.8.8",
    "prisma": "^5.20.0",
    "ts-mocha": "^10.0.0",
    "ts-node": "^10.9.1",
    "typeconv": "^1.7.0",
    "typescript": "^5.7.2"
  },
  "workspaces": [
    "client"
  ],
  "nohoist": [
    "**/eslint-*"
  ]
}
