import { Membership } from '@whylabs/songbird-node-client';
import { Request, Response } from 'express';
import { OpenIDUser } from 'openid-client';

import { DashboardDataSources } from '../startup/graphql-server';
import { fnThrow } from '../util/misc';
import { Permission } from './generated/graphql';

export type GraphQLContext = GQLContextOptions & AdditionalContextProps;

// Enable access properties generated by Apollo
export interface FullGraphQLContext extends GraphQLContext {
  dataSources: DashboardDataSources;
}

interface AdditionalContextProps {
  // Returns user's organization, throws if there is none
  // This is used whenever user's organization must be established in order to run a query
  resolveUserOrgID: () => string;
  resolveAuth0UserId: () => string;
  resolveWhyLabsUserId: () => string;
  resolveUserEmail: () => string;
  operationName: string;
}

export type UserContext = {
  auth0User: OpenIDUser | null;
  membership: Membership | null;
  permissions: Permission[];
  includeClaims: boolean;
  impersonation?: {
    enabled: boolean;
    expiration: number;
    originalUserId: string;
    originalUserEmail?: string;
  };
};

interface GQLContextOptions {
  userContext: UserContext;
  request: Request;
  response: Response;
  // request start time in epoch milliseconds
  requestTime: number;
}

export const populateGraphQLContext = (options: GQLContextOptions): GraphQLContext => {
  return {
    ...options,
    resolveUserOrgID: () =>
      options.userContext.membership?.orgId ?? fnThrow('Could not resolve Auth0 user id for the current user'),
    resolveAuth0UserId: () =>
      options.userContext.auth0User?.sub ?? fnThrow('Could not resolve Auth0 user id for the current user'),
    resolveWhyLabsUserId: () =>
      options.userContext.membership?.userId ?? fnThrow('Could not resolve WhyLabs user id for the current user'),
    resolveUserEmail: () =>
      options.userContext.membership?.email ?? fnThrow('Could not resolve email for the current user'),
    operationName: options.request.body.operationName ?? 'unknown',
  };
};
