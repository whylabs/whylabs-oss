{
  "name": "@whylabs/dashboard",
  "version": "0.1.0",
  "private": true,
  "description": "Microservice serving WhyLabs data",
  "main": "dist/app.js",
  "author": "WhyLabs",
  "engines": {
    "node": ">=18.16.0"
  },
  "packageManager": "yarn@3.2.0",
  "volta": {
    "node": "18.16.0",
    "yarn": "3.2.0"
  },
  "importSort": {
    ".js, .ts, .tsx": {
      "style": "module",
      "parser": "typescript"
    }
  },
  "scripts": {
    "proxy": "caddy reverse-proxy --from localhost:443 --to localhost:8080",
    "test:integ": "find ./src -name '*.int.spec.ts' | STAGE=test AWS_SDK_LOAD_CONFIG='' xargs ts-mocha -r dotenv/config --parallel false",
    "test:integ-sso": "find ./src -name '*.int.spec.ts' | STAGE=test xargs ts-mocha -r dotenv/config",
    "test:unit": "find ./src -name '*.unit.spec.ts' | STAGE=test xargs ts-mocha",
    "check-licenses": "license-checker --production --exclude MIT,BSD-3-Clause,Apache-2.0,BSD-2-Clause,ISC,0BSD",
    "generate": "yarn run json2ts && graphql-codegen --config codegen.yml",
    "generate:watch": "yarn generate --watch",
    "json2ts": "ts-node -O '{\"module\": \"commonjs\"}' ./scripts/json2ts.ts",
    "build": "yarn generate && tsc",
    "build:container": "yarn foreach workspaces foreach run build && docker build --pull --build-arg BASE_URL=http://localhost:8080 --build-arg NODE_ENV=development --build-arg BUILD_ENV=local --build-arg NPM_TOKEN=${NPM_TOKEN} -t dashboard:dev .",
    "start": "NO_FRONT_END=1 yarn monorepo:dev",
    "start:dev": "NO_FRONT_END=1 node --inspect -r dotenv/config -r ts-node/register src/app.ts dotenv_config_path=${DOTENV_PATH} | pino-pretty --singleLine",
    "start:nowatch": "yarn generate && DOTENV_PATH=.env yarn start:dev",
    "start:watch": "DOTENV_PATH=.env concurrently 'yarn run proxy' 'yarn generate:watch' 'nodemon'",
    "start:debug-production": "yarn monorepo:link-client && yarn generate && DEBUG_MODE=1 DOTENV_PATH=.env.production AWS_PROFILE=<prodprofile> && concurrently --kill-others 'nodemon --config nodemon.monorepo.json' 'yarn workspace @whylabs/dashboard-client dev'",
    "start:serve-client": "ts-node -r dotenv/config --files src/app.ts | pino-pretty --singleLine",
    "start:container": "yarn build:container && docker run -it --rm -e NODE_ENV=development -e AWS_PROFILE=<dev-profile> -e STAGE=local --env-file .env -v ${HOME}/.aws/:/root/.aws/:ro -p 8080:8080 dashboard:dev",
    "monorepo:init": "yarn monorepo:client:build && yarn monorepo:link-client",
    "monorepo:server": "node --inspect -r dotenv/config -r ts-node/register src/app.ts dotenv_config_path=${DOTENV_PATH} | pino-pretty --singleLine",
    "monorepo:dev": "yarn monorepo:link-client && yarn monorepo:patch-concurrently && yarn generate && DOTENV_PATH=.env concurrently --kill-others 'nodemon --config nodemon.monorepo.json' 'yarn workspace @whylabs/dashboard-client dev'",
    "monorepo:link-client": "mkdir -p src/public && rm -fr src/public/v2 && ln -s $(pwd)/client/dist src/public/v2",
    "monorepo:client:build": "NODE_OPTIONS=--max-old-space-size=8192 yarn workspace @whylabs/dashboard-client run build",
    "monorepo:client:build:watch": "yarn workspace @whylabs/dashboard-client run build:watch",
    "monorepo:client:test": "yarn workspace @whylabs/dashboard-client run test:ci",
    "monorepo:patch-concurrently": "./scripts/patch-concurrently.sh",
    "monorepo:lint": "yarn workspaces foreach run lint",
    "monorepo:typecheck": "yarn workspaces foreach run typecheck",
    "monorepo:client:format": "prettier --write \"client/src/**/*.{js,jsx,ts,tsx}\"",
    "rename:hc-to-placeholder": "bash scripts/hc-to-placeholder.sh",
    "rename:placeholder-to-hc": "bash scripts/placeholder-to-hc.sh",
    "lint": "eslint \"{src,test}/**/*.{ts,js}?(x)\"",
    "lint:all": "yarn lint && yarn monorepo:lint",
    "lint:fix": "yarn lint --fix && yarn workspaces foreach run lint:fix",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx}\"",
    "format:all": "yarn format && yarn monorepo:client:format",
    "profile": "NODE_ENV=production PORT=8080 node -r dotenv/config --prof --no-logfile-per-isolate dist/app.js",
    "container:build": "yarn workspaces foreach run build && docker build --pull --build-arg BASE_URL=http://localhost:8080 --build-arg NODE_ENV=development --build-arg NPM_TOKEN=${NPM_TOKEN} --build-arg BUILD_ENV=local -t dashboard:dev . --progress=plain",
    "container:start": "docker run -it --rm -e NODE_ENV=development -e AWS_PROFILE=<dev-profile> -e STAGE=local --env-file .env -v ${HOME}/.aws/:/root/.aws/:ro -p 8081:8080 dashboard:dev",
    "depcheck": "yarn dlx depcheck",
    "typecheck": "tsc --noEmit",
    "typecheck:all": "yarn typecheck && yarn monorepo:typecheck",
    "find-deadcode": "yarn workspace @whylabs/dashboard-client find-deadcode"
  },
  "resolutions": {
    "ramda": "^0.27.0",
    "agent-base": "^6.0.1",
    "cookiejar": "^2.1.4",
    "http-cache-semantics": "^4.1.1",
    "concurrently@8.2.0": "patch:concurrently@npm:8.2.0#.yarn/patches/concurrently-npm-8.2.0-be774a222e.patch",
    "@whylabs/data-service-node-client:axios": "0.21.4",
    "@whylabs/songbird-node-client:axios": "0.21.4",
    "axios": "0.21.4"
  },
  "dependencies": {
    "@apollo/server": "^4.10.2",
    "@aws-sdk/client-cloudwatch-logs": "^3.360.0",
    "@aws-sdk/client-lambda": "^3.360.0",
    "@aws-sdk/client-s3": "^3.360.0",
    "@aws-sdk/client-secrets-manager": "^3.360.0",
    "@aws-sdk/client-sqs": "^3.360.0",
    "@aws-sdk/client-sts": "^3.360.0",
    "@graphql-tools/graphql-file-loader": "^7.5.17",
    "@graphql-tools/load": "^7.8.14",
    "@graphql-tools/schema": "^8.5.1",
    "@graphql-tools/utils": "^8.13.1",
    "@slack/webhook": "^6.1.0",
    "@tanstack/react-query-devtools": "^5.51.11",
    "@trpc/client": "^10.45.2",
    "@trpc/server": "^10.45.2",
    "@whylabs/data-service-node-client": "^0.1.690",
    "@whylabs/songbird-node-client": "^0.1.949",
    "agentkeepalive": "^4.3.0",
    "apollo-datasource": "^3.3.2",
    "auth0": "^4.6.0",
    "axios": "",
    "axios-ds": "npm:axios@0.21.4",
    "axios-retry": "^3.8.0",
    "axios-song": "npm:axios@0.21.4",
    "body-parser": "^1.19.2",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cookie-session": "^2.0.0",
    "cors": "^2.8.5",
    "dataloader": "^2.0.0",
    "date-fns": "^2.30.0",
    "deep-object-diff": "^1.1.7",
    "deepmerge": "^4.2.2",
    "exponential-backoff": "^3.1.0",
    "express": "^4.17.3",
    "express-jwt": "^8.4.1",
    "express-openid-connect": "^2.7.2",
    "express-pino-logger": "^7.0.0",
    "graphql": "^16.6.0",
    "graphql-parse-resolve-info": "^4.12.0",
    "helmet": "^7.1.0",
    "ipaddr.js": "^2.2.0",
    "jsonschema": "^1.4.1",
    "jwks-rsa": "^3.0.1",
    "keygrip": "^1.1.0",
    "lodash": "^4.17.21",
    "lru-cache": "7.18.3",
    "murmurhash": "^2.0.1",
    "node-fetch": "2.7.0",
    "pino": "^7.9.2",
    "pino-std-serializers": "^5.1.1",
    "ramda": "^0.27.0",
    "response-time": "^2.3.2",
    "stream-to-promise": "^3.0.0",
    "ts-pattern": "^4.0.1",
    "ua-parser-js": "^1.0.33",
    "uuid": "^8.3.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@graphql-codegen/add": "^3.1.1",
    "@graphql-codegen/cli": "^4.0.1",
    "@graphql-codegen/introspection": "4.0.0",
    "@graphql-codegen/typed-document-node": "^5.0.1",
    "@graphql-codegen/typescript": "^4.0.1",
    "@graphql-codegen/typescript-operations": "^4.0.1",
    "@graphql-codegen/typescript-resolvers": "4.0.1",
    "@graphql-typed-document-node/core": "^3.1.1",
    "@opensearch-project/opensearch": "^2.0.0",
    "@slack/types": "^2.4.0",
    "@types/async-retry": "^1.4.3",
    "@types/auth0": "^3.3.10",
    "@types/chai": "^4.3.0",
    "@types/chai-as-promised": "^7.1.5",
    "@types/compression": "^1.7.2",
    "@types/cookie-parser": "^1.4.2",
    "@types/cookie-session": "^2.0.44",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.13",
    "@types/express-pino-logger": "^4.0.3",
    "@types/keygrip": "^1.0.2",
    "@types/lodash": "^4.14.200",
    "@types/lru-cache": "^7.10.9",
    "@types/mocha": "^8.2.3",
    "@types/node": "^14.18.12",
    "@types/node-fetch": "2.6.9",
    "@types/pino": "^7.0.5",
    "@types/ramda": "^0.28.14",
    "@types/response-time": "^2.3.5",
    "@types/sinon": "^17.0.2",
    "@types/stream-to-promise": "^2.2.1",
    "@types/supertest": "^2.0.12",
    "@types/ua-parser-js": "^0.7.36",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.59.9",
    "@typescript-eslint/parser": "^5.17.0",
    "chai": "^4.3.6",
    "chai-as-promised": "^7.1.1",
    "concurrently": "^8.1.0",
    "dotenv": "^16.0.0",
    "eslint": "^8.12.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-mocha": "^10.0.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "flamebearer": "^1.1.3",
    "import-sort-style-module": "^6.0.0",
    "license-checker": "^25.0.1",
    "mocha": "^8.4.0",
    "nodemon": "^2.0.15",
    "openid-client": "^4.9.1",
    "pino-pretty": "^7.6.0",
    "prettier": "^2.8.8",
    "prettier-plugin-import-sort": "^0.0.7",
    "sinon": "^17.0.1",
    "ts-mocha": "^10.0.0",
    "ts-node": "^10.9.1",
    "typeconv": "^1.7.0",
    "typescript": "^5.7.2"
  },
  "workspaces": [
    "client"
  ],
  "nohoist": [
    "**/eslint-*"
  ]
}
