const COLOR_NAMES = [
  'aliceblue',
  'antiquewhite',
  'aqua',
  'aquamarine',
  'azure',
  'beige',
  'bisque',
  'black',
  'blanchedalmond',
  'blue',
  'blueviolet',
  'brown',
  'burlywood',
  'cadetblue',
  'chartreuse',
  'chocolate',
  'coral',
  'cornflowerblue',
  'cornsilk',
  'crimson',
  'cyan',
  'deeppink',
  'dimgray',
  'dodgerblue',
  'firebrick',
  'floralwhite',
  'forestgreen',
  'fuchsia',
  'gainsboro',
  'ghostwhite',
  'gold',
  'goldenrod',
  'gray',
  'green',
  'honeydew',
  'hotpink',
  'indigo',
  'ivory',
  'khaki',
  'lavender',
  'lavenderblush',
  'lawngreen',
  'lemonchiffon',
  'lime',
  'limegreen',
  'linen',
  'magenta',
  'maroon',
  'midnightblue',
  'mintcream',
  'mistyrose',
  'moccasin',
  'navy',
  'oldlace',
  'olive',
  'olivedrab',
  'orange',
  'orangered',
  'orchid',
  'palegreen',
  'palevioletred',
  'papayawhip',
  'peachpuff',
  'peru',
  'pink',
  'plum',
  'powderblue',
  'purple',
  'rebeccapurple',
  'red',
  'rosybrown',
  'royalblue',
  'saddlebrown',
  'salmon',
  'sandybrown',
  'seagreen',
  'seashell',
  'sienna',
  'silver',
  'skyblue',
  'slateblue',
  'slategray',
  'snow',
  'springgreen',
  'steelblue',
  'tan',
  'teal',
  'thistle',
  'tomato',
  'turquoise',
  'violet',
  'wheat',
  'white',
  'whitesmoke',
  'yellow',
  'yellowgreen',
] as const;

const ADJECTIVES = [
  'adorable',
  'adventurous',
  'aggressive',
  'agreeable',
  'alert',
  'alive',
  'amused',
  'annoying',
  'attractive',
  'average',
  'bad',
  'beautiful',
  'better',
  'bloody',
  'blushing',
  'brainy',
  'brave',
  'breakable',
  'bright',
  'busy',
  'calm',
  'careful',
  'cautious',
  'charming',
  'cheerful',
  'clean',
  'clear',
  'clever',
  'cloudy',
  'clumsy',
  'colorful',
  'comfortable',
  'concerned',
  'cooperative',
  'courageous',
  'crazy',
  'crowded',
  'curious',
  'cute',
  'dark',
  'dead',
  'delightful',
  'determined',
  'different',
  'difficult',
  'distinct',
  'doubtful',
  'drab',
  'dull',
  'eager',
  'easy',
  'elated',
  'elegant',
  'enchanting',
  'encouraging',
  'energetic',
  'enthusiastic',
  'excited',
  'expensive',
  'exuberant',
  'fair',
  'faithful',
  'famous',
  'fancy',
  'fantastic',
  'filthy',
  'fine',
  'fragile',
  'frail',
  'friendly',
  'funny',
  'gentle',
  'gifted',
  'glamorous',
  'gleaming',
  'glorious',
  'good',
  'gorgeous',
  'graceful',
  'grotesque',
  'handsome',
  'happy',
  'healthy',
  'helpful',
  'helpless',
  'hilarious',
  'homely',
  'horrible',
  'important',
  'impossible',
  'inexpensive',
  'innocent',
  'inquisitive',
  'jolly',
  'joyous',
  'kind',
  'light',
  'lively',
  'long',
  'lovely',
  'lucky',
  'magnificent',
  'misty',
  'modern',
  'motionless',
  'muddy',
  'mushy',
  'nice',
  'obedient',
  'odd',
  'old',
  'open',
  'outstanding',
  'perfect',
  'plain',
  'pleasant',
  'poised',
  'poor',
  'powerful',
  'precious',
  'prickly',
  'proud',
  'puzzled',
  'quaint',
  'real',
  'relieved',
  'rich',
  'shiny',
  'shy',
  'silly',
  'sleepy',
  'smiling',
  'smoggy',
  'sparkling',
  'splendid',
  'spotless',
  'stormy',
  'strange',
  'stupid',
  'successful',
  'super',
  'talented',
  'tame',
  'tender',
  'thankful',
  'thoughtful',
  'tough',
  'ugliest',
  'ugly',
  'uninterested',
  'unsightly',
  'unusual',
  'vast',
  'victorious',
  'vivacious',
  'wandering',
  'wide',
  'wild',
  'witty',
  'wonderful',
  'wrong',
  'zany',
  'zealous',
] as const;

const ANIMALS = [
  'aardvark',
  'albatross',
  'alligator',
  'alpaca',
  'ant',
  'anteater',
  'antelope',
  'ape',
  'armadillo',
  'baboon',
  'badger',
  'barracuda',
  'bat',
  'bear',
  'beaver',
  'bee',
  'bison',
  'boar',
  'butterfly',
  'camel',
  'carabeef',
  'caribou',
  'cat',
  'caterpillar',
  'cattle',
  'chamois',
  'cheetah',
  'chicken',
  'chimpanzee',
  'chinchilla',
  'chough',
  'clam',
  'cobra',
  'cockroach',
  'cod',
  'cormorant',
  'coyote',
  'crab',
  'crocodile',
  'crow',
  'curlew',
  'deer',
  'dinosaur',
  'dog',
  'dolphin',
  'donkey',
  'dotterel',
  'dove',
  'dragonfly',
  'duck',
  'dugong',
  'dunlin',
  'eagle',
  'echidna',
  'eel',
  'elephant',
  'elk',
  'emu',
  'falcon',
  'ferret',
  'finch',
  'fish',
  'flamingo',
  'fly',
  'fox',
  'frog',
  'galago',
  'gaur',
  'gazelle',
  'gerbil',
  'giraffe',
  'gnat',
  'goat',
  'goldfish',
  'goose',
  'gorilla',
  'goshawk',
  'grasshopper',
  'grouse',
  'guanaco',
  'gull',
  'hamster',
  'hare',
  'hawk',
  'hedgehog',
  'herd',
  'heron',
  'herring',
  'hippopotamus',
  'hornet',
  'horse',
  'human',
  'hummingbird',
  'hyena',
  'jackal',
  'jaguar',
  'jay',
  'jellyfish',
  'kangaroo',
  'koala',
  'kouprey',
  'kudu',
  'lapwing',
  'lark',
  'lemur',
  'leopard',
  'lion',
  'llama',
  'lobster',
  'locust',
  'loris',
  'louse',
  'lyrebird',
  'magpie',
  'mallard',
  'manatee',
  'marten',
  'meerkat',
  'mink',
  'monkey',
  'moose',
  'mosquito',
  'mouse',
  'mule',
  'narwhal',
  'newt',
  'nightingale',
  'octopus',
  'okapi',
  'opossum',
  'oryx',
  'ostrich',
  'otter',
  'owl',
  'ox',
  'oyster',
  'parrot',
  'partridge',
  'peafowl',
  'pelican',
  'penguin',
  'pheasant',
  'pig',
  'pigeon',
  'pony',
  'porcupine',
  'porpoise',
  'poultry',
  'quail',
  'quelea',
  'rabbit',
  'raccoon',
  'rat',
  'raven',
  'reindeer',
  'rhinoceros',
  'ruff',
  'salamander',
  'salmon',
  'sandpiper',
  'sardine',
  'scorpion',
  'seahorse',
  'shark',
  'sheep',
  'shrew',
  'shrimp',
  'skunk',
  'snail',
  'snake',
  'spider',
  'squid',
  'squirrel',
  'starling',
  'stingray',
  'stinkbug',
  'stork',
  'swallow',
  'swan',
  'tapir',
  'tarsier',
  'termite',
  'tiger',
  'toad',
  'trout',
  'turtle',
  'vulture',
  'wallaby',
  'walrus',
  'wasp',
  'weasel',
  'whale',
  'wolf',
  'wolverine',
  'wombat',
  'woodcock',
  'woodpecker',
  'worm',
  'wren',
  'yak',
  'zebra',
] as const;

interface NameProps {
  override?: number[];
  maxLength?: boolean;
  minLength?: boolean;
  digitOverride?: string;
}

export const NAME_COLUMNS = [ADJECTIVES, COLOR_NAMES, ANIMALS];

function indicesAreValid(override?: number[]): boolean {
  if (!(override && override.length === NAME_COLUMNS.length)) {
    return false;
  }

  let valid = true;
  override.forEach((value, idx) => {
    if (value >= NAME_COLUMNS[idx].length) {
      valid = false;
    }
  });
  return valid;
}

function findExtremeIndex(input: readonly string[], isMin = false): number {
  return input.reduce((acc, curr, idx) => {
    const update = isMin ? input[acc].length > curr.length : input[acc].length < curr.length;
    return update ? idx : acc;
  }, 0);
}

export function generateValidExtremeIndices(isMin = false): number[] {
  return NAME_COLUMNS.reduce<number[]>((acc, curr) => {
    return acc.concat(findExtremeIndex(curr, isMin));
  }, []);
}

function generateNameFromValidIndices(indices: number[]): string {
  return indices
    .reduce<string[]>((acc, curr, idx) => {
      acc.push(NAME_COLUMNS[idx][curr]);
      return acc;
    }, [])
    .join('-');
}

function generateSingleRandomIndex(input: readonly unknown[]): number {
  return Math.floor(Math.random() * input.length);
}

function generateValidIndices(): number[] {
  return NAME_COLUMNS.reduce<number[]>((acc, curr) => {
    return acc.concat(generateSingleRandomIndex(curr));
  }, []);
}

function padWithNumber(name: string, digitOverride: string | undefined): string {
  const randomQuad = Math.floor(Math.random() * 10000).toFixed(0);
  const padding = digitOverride || randomQuad;
  return `${name}-${padding}`;
}

export function generateFriendlyName(props?: NameProps): string {
  const override = props?.override;
  let validIndices: number[] = [];
  if (override && indicesAreValid(override)) {
    validIndices = override;
  } else if (props?.maxLength) {
    validIndices = generateValidExtremeIndices();
  } else if (props?.minLength) {
    validIndices = generateValidExtremeIndices(true);
  } else {
    validIndices = generateValidIndices();
  }

  return padWithNumber(generateNameFromValidIndices(validIndices), props?.digitOverride);
}
