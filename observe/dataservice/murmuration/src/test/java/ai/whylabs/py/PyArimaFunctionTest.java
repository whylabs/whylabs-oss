package ai.whylabs.py;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.closeTo;

import lombok.val;
import org.testng.annotations.Test;

public class PyArimaFunctionTest extends PythonFunctionTest {

  public static final Double[] VALUES = {
    89119.0, 117282.0, 78701.0, 63456.0, 63731.0, 78161.0, 78581.0, 97605.0, 122480.0, 73446.0,
    50475.0, 54593.0, 58734.0, 69682.0, 90665.0, 118782.0, 81981.0, 67113.0, 68746.0, 71977.0,
    71574.0, 89365.0, 117979.0, 82202.0, 74041.0, 65384.0, 68420.0, 72037.0, 95780.0, 124183.0,
    88660.0, 69274.0, 72075.0, 71226.0, 74503.0, 90171.0, 121099.0, 78449.0, 65085.0, 67867.0,
    70683.0, 74116.0, 88331.0, 116593.0, 67528.0, 64423.0, 69250.0, 72336.0, 77564.0, 98849.0,
    134387.0, 88935.0, 65379.0, 67072.0, 76416.0, 99671.0, 102353.0, 139346.0, 95728.0, 71177.0,
    74040.0, 75962.0, 82451.0, 102919.0, 138432.0, 97540.0, 87728.0, 93528.0, 103738.0, 103738.0,
    189077.0, 147905.0, 102253.0, 92653.0, 92583.0, 90685.0, 93682.0, 115814.0, 155818.0, 111839.0,
    92157.0, 108890.0, 115669.0, 119441.0, 150351.0, 194144.0, 148981.0, 128873.0, 129462.0,
    141637.0,
  };
  public static final long[] TIMESTAMPS = {
    1631836800000L,
    1631923200000L,
    1632009600000L,
    1632096000000L,
    1632182400000L,
    1632268800000L,
    1632355200000L,
    1632441600000L,
    1632528000000L,
    1632614400000L,
    1632700800000L,
    1632787200000L,
    1632873600000L,
    1632960000000L,
    1633046400000L,
    1633132800000L,
    1633219200000L,
    1633305600000L,
    1633392000000L,
    1633478400000L,
    1633564800000L,
    1633651200000L,
    1633737600000L,
    1633824000000L,
    1633910400000L,
    1633996800000L,
    1634083200000L,
    1634169600000L,
    1634256000000L,
    1634342400000L,
    1634428800000L,
    1634515200000L,
    1634601600000L,
    1634688000000L,
    1634774400000L,
    1634860800000L,
    1634947200000L,
    1635033600000L,
    1635120000000L,
    1635206400000L,
    1635292800000L,
    1635379200000L,
    1635465600000L,
    1635552000000L,
    1635638400000L,
    1635724800000L,
    1635811200000L,
    1635897600000L,
    1635984000000L,
    1636070400000L,
    1636156800000L,
    1636243200000L,
    1636329600000L,
    1636416000000L,
    1636502400000L,
    1636588800000L,
    1636675200000L,
    1636761600000L,
    1636848000000L,
    1636934400000L,
    1637020800000L,
    1637107200000L,
    1637193600000L,
    1637280000000L,
    1637366400000L,
    1637452800000L,
    1637539200000L,
    1637625600000L,
    1637712000000L,
    1637798400000L,
    1637884800000L,
    1637971200000L,
    1638057600000L,
    1638144000000L,
    1638230400000L,
    1638316800000L,
    1638403200000L,
    1638489600000L,
    1638576000000L,
    1638662400000L,
    1638748800000L,
    1638835200000L,
    1638921600000L,
    1639008000000L,
    1639094400000L,
    1639180800000L,
    1639267200000L,
    1639353600000L,
    1639440000000L,
    1639526400000L,
  };

  @Test
  public void testJob() {
    val input =
        PyArimaInput.builder()
            .values(VALUES)
            .timestamps(TIMESTAMPS)
            .p(1)
            .d(0)
            .q(0)
            .seasonal_P(2)
            .seasonal_D(1)
            .seasonal_Q(0)
            .m(7)
            .alpha(0.05)
            .actual(10000.0)
            .eventPeriod("2021-11-21:2022-01-02")
            .build();
    val res = PyArimaFunctionV2.INSTANCE.apply(input);
    assertThat(res.getValue(), closeTo(135032.70442588784, 0.01));
    assertThat(res.getLower(), closeTo(106188.17663240354, 0.01));
    assertThat(res.getUpper(), closeTo(163877.23221937215, 0.01));
  }
}
