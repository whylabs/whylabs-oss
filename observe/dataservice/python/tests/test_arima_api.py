from fastapi.testclient import TestClient

from starling.main import app
from starling.routers.arima import PmdArimaRequest
import json
import pytest

client = TestClient(app)


def test_simple_arima():
    req = PmdArimaRequest(
            values=[89119.0, 117282.0, 78701.0, 63456.0, 63731.0, 78161.0,
                    78581.0, 97605.0, 122480.0, 73446.0, 50475.0, 54593.0,
                    58734.0, 69682.0, 90665.0, 118782.0, 81981.0, 67113.0,
                    68746.0, 71977.0, 71574.0, 89365.0, 117979.0, 82202.0,
                    74041.0, 65384.0, 68420.0, 72037.0, 95780.0, 124183.0,
                    88660.0, 69274.0, 72075.0, 71226.0, 74503.0, 90171.0,
                    121099.0, 78449.0, 65085.0, 67867.0, 70683.0, 74116.0,
                    88331.0, 116593.0, 67528.0, 64423.0, 69250.0, 72336.0,
                    77564.0, 98849.0, 134387.0, 88935.0, 65379.0, 67072.0,
                    76416.0, 99671.0, 102353.0, 139346.0, 95728.0, 71177.0,
                    74040.0, 75962.0, 82451.0, 102919.0, 138432.0, 97540.0,
                    87728.0, 93528.0, 103738.0, 103738.0, 189077.0, 147905.0,
                    102253.0, 92653.0, 92583.0, 90685.0, 93682.0, 115814.0,
                    155818.0, 111839.0, 92157.0, 108890.0, 115669.0, 119441.0,
                    150351.0, 194144.0, 148981.0, 128873.0, 129462.0,
                    141637.0],
            actual=1000,  # no need for actuals
            # September 17, 2021-December 15, 2021
            timestamps=[1631836800000, 1631923200000, 1632009600000,
                        1632096000000, 1632182400000, 1632268800000,
                        1632355200000, 1632441600000, 1632528000000,
                        1632614400000, 1632700800000, 1632787200000,
                        1632873600000, 1632960000000, 1633046400000,
                        1633132800000, 1633219200000, 1633305600000,
                        1633392000000, 1633478400000, 1633564800000,
                        1633651200000, 1633737600000, 1633824000000,
                        1633910400000, 1633996800000, 1634083200000,
                        1634169600000, 1634256000000, 1634342400000,
                        1634428800000, 1634515200000, 1634601600000,
                        1634688000000, 1634774400000, 1634860800000,
                        1634947200000, 1635033600000, 1635120000000,
                        1635206400000, 1635292800000, 1635379200000,
                        1635465600000, 1635552000000, 1635638400000,
                        1635724800000, 1635811200000, 1635897600000,
                        1635984000000, 1636070400000, 1636156800000,
                        1636243200000, 1636329600000, 1636416000000,
                        1636502400000, 1636588800000, 1636675200000,
                        1636761600000, 1636848000000, 1636934400000,
                        1637020800000, 1637107200000, 1637193600000,
                        1637280000000, 1637366400000, 1637452800000,
                        1637539200000, 1637625600000, 1637712000000,
                        1637798400000, 1637884800000, 1637971200000,
                        1638057600000, 1638144000000, 1638230400000,
                        1638316800000, 1638403200000, 1638489600000,
                        1638576000000, 1638662400000, 1638748800000,
                        1638835200000, 1638921600000, 1639008000000,
                        1639094400000, 1639180800000, 1639267200000,
                        1639353600000, 1639440000000, 1639526400000, ],
            alpha=0.05, stddevFactor=1.0, stddevMaxBatchSize=30,
            p=1, d=0, q=0, seasonal_P=2, seasonal_D=1, seasonal_Q=0, m=7,
            eventPeriods=[
                "2021-11-21:2022-01-02",
                "2021-07-06:2021-08-08",
            ],
            priors=[], )
    response = client.post("/arima/compute", content=req.model_dump_json())
    r = response.json()

    assert response.status_code == 200
    assert r['value'] == pytest.approx(135032.70443054268)
    assert r['lower'] == pytest.approx(112346.85779933422)
    assert r['upper'] == pytest.approx(157718.55106175115)
